package com.mentor.nucleus.bp.ui.explorer.adapters;
//======================================================================
//
// File: com/mentor/nucleus/bp/ui/explorer/adapters/DomainsAdapter.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/create_adapters.inc
// Version:      $Revision: 1.31 $
//
// (c) Copyright 2006-2014 by Mentor Graphics Corp.  All rights reserved.
//
//======================================================================
//
// This class is responsible for decoupling the client model entity
// class Domain_c from the tree viewer and the hierarchy
// it imposes.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.Viewer;
import com.mentor.nucleus.bp.core.*;

import com.mentor.nucleus.bp.ui.explorer.*;
/**
 * This file adapts the meta-model entity; 'Domain_c'
 * so that it works with the Eclipse JFace user interface components.
 * <p>
 * Do not edit this class, it was created using the Mentor 
 * Graphics MC-Java code generator product.
 * </p>
 */
public class DomainsAdapter implements ITreeContentProvider {
	static DomainsAdapter domainsadapter = null;
	/**
	 * Returns the adapters singleton instance. If this
	 * is the first time, the instance is created.
	 */
	public static DomainsAdapter getInstance() {
		if (domainsadapter == null) {
			domainsadapter = new DomainsAdapter();
		}
		return domainsadapter;
	}
	/**
	 * @see IContentProvider#inputChanged(Viewer, Object, Object)
	 * Called when the tree's input has been changed
	 */
	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
		// Nothing to do
	}
	/**
	 * @see IContentProvider#dispose()
	 * Called when this viewer is no longer needed
	 */
	public void dispose() {
		// Nothing to dispose
	}
	/**
	 * @see ITreeContentProvider#getParent(Object)
	 * Returns the parent of this node
	 */
	public Object getParent(Object arg) {
		SystemModel_c result1 = SystemModel_c.getOneS_SYSOnR28((Domain_c) arg);
		if (result1 != null) {
			return result1;
		}
		return null;
	}
	/**
	 * @see IStructuredContentProvider#getElements(Object)
	 * Returns the elements below this node
	 */
	public Object[] getElements(Object arg) {
		return getChildren(arg);
	}

	/**
	 * @see ITreeContentProvider#getChildren(Object)
	 * Returns the children of this node
	 */
	public Object[] getChildren(Object arg) {
		int resultSize = 0;
		DataTypePackage_c[] datatypepackages_40_1 = DataTypePackage_c
				.getManyS_DPKsOnR40((Domain_c) arg);

		ModelContentProvider.sort(datatypepackages_40_1);
		resultSize += datatypepackages_40_1.length;
		FunctionPackage_c[] functionpackages_29_2 = FunctionPackage_c
				.getManyS_FPKsOnR29((Domain_c) arg);

		ModelContentProvider.sort(functionpackages_29_2);
		resultSize += functionpackages_29_2.length;
		ExternalEntityPackage_c[] externalentitypackages_36_3 = ExternalEntityPackage_c
				.getManyS_EEPKsOnR36((Domain_c) arg);

		ModelContentProvider.sort(externalentitypackages_36_3);
		resultSize += externalentitypackages_36_3.length;
		Subsystem_c[] subsystems_43_4 = Subsystem_c
				.getManyS_SSsOnR43((Domain_c) arg);

		ModelContentProvider.sort(subsystems_43_4);
		resultSize += subsystems_43_4.length;
		Activity_c[] activities_1100_5 = Activity_c
				.getManyA_AsOnR1100((Domain_c) arg);

		ModelContentProvider.sort(activities_1100_5);
		resultSize += activities_1100_5.length;
		Sequence_c[] sequences_913_6 = Sequence_c
				.getManySQ_SsOnR913((Domain_c) arg);

		ModelContentProvider.sort(sequences_913_6);
		resultSize += sequences_913_6.length;
		Communication_c[] communications_1132_7 = Communication_c
				.getManyCOMM_COMMsOnR1132((Domain_c) arg);

		ModelContentProvider.sort(communications_1132_7);
		resultSize += communications_1132_7.length;
		UseCaseDiagram_c[] usecasediagrams_1201_8 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1201((Domain_c) arg);

		ModelContentProvider.sort(usecasediagrams_1201_8);
		resultSize += usecasediagrams_1201_8.length;

		Object[] result = new Object[resultSize];
		int count = 0;
		for (int i = 0; i < datatypepackages_40_1.length; i++) {
			result[count] = datatypepackages_40_1[i];
			count++;
		}
		for (int i = 0; i < functionpackages_29_2.length; i++) {
			result[count] = functionpackages_29_2[i];
			count++;
		}
		for (int i = 0; i < externalentitypackages_36_3.length; i++) {
			result[count] = externalentitypackages_36_3[i];
			count++;
		}
		for (int i = 0; i < subsystems_43_4.length; i++) {
			result[count] = subsystems_43_4[i];
			count++;
		}
		for (int i = 0; i < activities_1100_5.length; i++) {
			result[count] = activities_1100_5[i];
			count++;
		}
		for (int i = 0; i < sequences_913_6.length; i++) {
			result[count] = sequences_913_6[i];
			count++;
		}
		for (int i = 0; i < communications_1132_7.length; i++) {
			result[count] = communications_1132_7[i];
			count++;
		}
		for (int i = 0; i < usecasediagrams_1201_8.length; i++) {
			result[count] = usecasediagrams_1201_8[i];
			count++;
		}
		return result;
	}
	/**
	 * @see ITreeContentProvider#hasChildren(Object)
	 * Returns true if this node has any children
	 */
	public boolean hasChildren(Object arg) {
		DataTypePackage_c[] datatypepackages_40_1 = DataTypePackage_c
				.getManyS_DPKsOnR40((Domain_c) arg);

		if (datatypepackages_40_1.length > 0)
			return true;
		FunctionPackage_c[] functionpackages_29_2 = FunctionPackage_c
				.getManyS_FPKsOnR29((Domain_c) arg);

		if (functionpackages_29_2.length > 0)
			return true;
		ExternalEntityPackage_c[] externalentitypackages_36_3 = ExternalEntityPackage_c
				.getManyS_EEPKsOnR36((Domain_c) arg);

		if (externalentitypackages_36_3.length > 0)
			return true;
		Subsystem_c[] subsystems_43_4 = Subsystem_c
				.getManyS_SSsOnR43((Domain_c) arg);

		if (subsystems_43_4.length > 0)
			return true;
		Activity_c[] activities_1100_5 = Activity_c
				.getManyA_AsOnR1100((Domain_c) arg);

		if (activities_1100_5.length > 0)
			return true;
		Sequence_c[] sequences_913_6 = Sequence_c
				.getManySQ_SsOnR913((Domain_c) arg);

		if (sequences_913_6.length > 0)
			return true;
		Communication_c[] communications_1132_7 = Communication_c
				.getManyCOMM_COMMsOnR1132((Domain_c) arg);

		if (communications_1132_7.length > 0)
			return true;
		UseCaseDiagram_c[] usecasediagrams_1201_8 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1201((Domain_c) arg);

		if (usecasediagrams_1201_8.length > 0)
			return true;
		return false;
	}
}
