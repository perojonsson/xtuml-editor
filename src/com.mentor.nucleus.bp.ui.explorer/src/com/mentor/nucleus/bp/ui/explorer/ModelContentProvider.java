package com.mentor.nucleus.bp.ui.explorer;
//======================================================================
//
// File: com/mentor/nucleus/bp/ui/explorer/ModelContentProvider.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/create_content_provider.inc
// Version:      $Revision: 1.16 $
//
// (c) Copyright 2003-2014 Mentor Graphics Corporation  All rights reserved.
//
//======================================================================
//
// This class is an adapter that decouples the client model objects from
// the tree viewer by delegating the job of finding a parent of an element
// or the children of an element to the correct adapter.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.TreeViewer;
import org.eclipse.jface.viewers.Viewer;
import com.mentor.nucleus.bp.core.common.NonRootModelElement;
import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.sorter.*;
import com.mentor.nucleus.bp.ui.explorer.adapters.*;

public class ModelContentProvider implements ITreeContentProvider {
	protected TreeViewer viewer;
	protected static MetadataSortingManager.ISorter sorter = new AlphaSorter();
	/**
	 * @see IContentProvider#dispose()
	 */
	public void dispose() {
		// No resources allocated, nothing to dispose.
	}
	/**
	 * @see IContentProvider#inputChanged(Viewer, Object, Object)
	 */
	/**
	 * Notifies this content provider that the given viewer's input
	 * has been switched to a different element.
	 * <p>
	 * A typical use for this method is registering the content provider as a listener
	 * to changes on the new input (using model-specific means), and deregistering the viewer
	 * from the old input. In response to these change notifications, the content provider
	 * propagates the changes to the viewer.
	 * </p>
	 *
	 * @param viewer the viewer
	 * @param oldInput the old input element, or <code>null</code> if the viewer
	 *   did not previously have an input
	 * @param newInput the new input element, or <code>null</code> if the viewer
	 *   does not have an input
	 */
	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
		// Singleton model, nothing to do
	}
	/**
	 * @see ITreeContentProvider#getChildren(Object)
	 */
	public Object[] getChildren(Object parentElement) {
		if (parentElement instanceof MultipleOccurrenceElement) {
			parentElement = ((MultipleOccurrenceElement) parentElement)
					.getElement();
		}
		if (parentElement instanceof Ooaofooa) {
			return RootAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof SystemModel_c) {
			return SystemAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof Domain_c) {
			return DomainsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof Subsystem_c) {
			return SubsystemsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof ModelClass_c) {
			return ClassesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof Attribute_c) {
			return AttributesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof Operation_c) {
			return OperationsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof OperationParameter_c) {
			return OperationParametersAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof InstanceStateMachine_c) {
			return InstanceStateMachinesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof StateMachineState_c) {
			return StatesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof StateMachineEvent_c) {
			return EventsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof NonLocalEvent_c) {
			return InheritedEventsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof StateMachineEvent_c) {
			return DeliveredEventsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof StateMachineEventDataItem_c) {
			return StateMachineEventDataItemsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ClassStateMachine_c) {
			return ClassStateMachinesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof FunctionPackage_c) {
			return FunctionPackagesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof Function_c) {
			return FunctionsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof FunctionParameter_c) {
			return FunctionParametersAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof DataTypePackage_c) {
			return DataTypePackagesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ExternalEntityPackage_c) {
			return ExternalEntityPackagesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof UserDataType_c) {
			return UserDefinedDataTypesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ExternalEntity_c) {
			return ExternalEntitiesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof Bridge_c) {
			return BridgeOperationsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof BridgeParameter_c) {
			return BridgeParametersAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof EnumerationDataType_c) {
			return EnumerationsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof Enumerator_c) {
			return EnumeratorsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof CoreDataType_c) {
			return CoreDataTypesAdapter.getInstance()
					.getChildren(parentElement);
		}
		if (parentElement instanceof SupplementalDataItems_c) {
			return EventDataItemsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof Sequence_c) {
			return SequencesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof ClassInstanceParticipant_c) {
			return InstancesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof InstanceAttributeValue_c) {
			return InformalInstanceAttributesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof MessageArgument_c) {
			return InformalMessageArgumentsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof MessageArgument_c) {
			return EventMessageArgumentsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof MessageArgument_c) {
			return FunctionMessageArgumentsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof MessageArgument_c) {
			return ClassMessageArgumentsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof MessageArgument_c) {
			return BridgeMessageArgumentsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ClassParticipant_c) {
			return ImportedClassesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ExternalEntityParticipant_c) {
			return ImportedExternalEntitiesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof FunctionPackageParticipant_c) {
			return ImportedFunctionPackagesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof PackageParticipant_c) {
			return ImportedPackagesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ClassParticipantAttribute_c) {
			return InformalClassAttributesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof InstanceAttributeValue_c) {
			return FormalInstanceAttributesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ActorParticipant_c) {
			return ActorsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof SynchronousMessage_c) {
			return IncomingSynchronousMessagesAdapter.getInstance()
					.getChildren(parentElement);
		}
		if (parentElement instanceof AsynchronousMessage_c) {
			return IncomingAsynchronousMessagesAdapter.getInstance()
					.getChildren(parentElement);
		}
		if (parentElement instanceof ReturnMessage_c) {
			return IncomingReturnMessagesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof Communication_c) {
			return CommunicationsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof UseCaseDiagram_c) {
			return UseCaseDiagramsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof UseCaseParticipant_c) {
			return UseCasesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof Activity_c) {
			return ActivitiesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof ActivityDiagramAction_c) {
			return ActionsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof ObjectNode_c) {
			return ObjectnodesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof AcceptEventAction_c) {
			return AcceptEventActionsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof SendSignal_c) {
			return SendSignalActionsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof AcceptTimeEventAction_c) {
			return AcceptTimeEventActionsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof InterfacePackage_c) {
			return InterfacePackagesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof Interface_c) {
			return InterfacesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof InterfaceSignal_c) {
			return SignalsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof PropertyParameter_c) {
			return ParametersAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof ComponentPackage_c) {
			return ComponentPackagesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof Component_c) {
			return ComponentsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof Provision_c) {
			return ProvidedInterfacesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof Requirement_c) {
			return RequiredInterfacesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof RequiredOperation_c) {
			return RequiredInterfaceOperationsAdapter.getInstance()
					.getChildren(parentElement);
		}
		if (parentElement instanceof ProvidedOperation_c) {
			return ProvidedInterfaceOperationsAdapter.getInstance()
					.getChildren(parentElement);
		}
		if (parentElement instanceof RequiredSignal_c) {
			return RequiredInterfaceSignalsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ProvidedSignal_c) {
			return ProvidedInterfaceSignalsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof InterfaceOperation_c) {
			return InterfaceOperationsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ComponentReference_c) {
			return ComponentReferencesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof StructuredDataType_c) {
			return StructuredDataTypesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof StructureMember_c) {
			return MembersAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof Port_c) {
			return PortsAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof ImportedProvision_c) {
			return ImportedProvidedInterfacesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ImportedRequirement_c) {
			return ImportedRequiredInterfacesAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof ComponentParticipant_c) {
			return ComponentParticipantsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof Package_c) {
			return PackagesAdapter.getInstance().getChildren(parentElement);
		}
		if (parentElement instanceof ConstantSpecification_c) {
			return ConstantSpecificationsAdapter.getInstance().getChildren(
					parentElement);
		}
		if (parentElement instanceof LiteralSymbolicConstant_c) {
			return LiteralSymbolicConstantsAdapter.getInstance().getChildren(
					parentElement);
		}
		return null;
	}
	/**
	 * @see ITreeContentProvider#getParent(Object)
	 */
	public Object getParent(Object element) {
		if (element instanceof MultipleOccurrenceElement) {
			element = ((MultipleOccurrenceElement) element).getElement();
		}
		if (element instanceof Ooaofooa) {
			return RootAdapter.getInstance().getParent(element);
		}
		if (element instanceof SystemModel_c) {
			return SystemAdapter.getInstance().getParent(element);
		}
		if (element instanceof Domain_c) {
			return DomainsAdapter.getInstance().getParent(element);
		}
		if (element instanceof Subsystem_c) {
			return SubsystemsAdapter.getInstance().getParent(element);
		}
		if (element instanceof ModelClass_c) {
			return ClassesAdapter.getInstance().getParent(element);
		}
		if (element instanceof Attribute_c) {
			return AttributesAdapter.getInstance().getParent(element);
		}
		if (element instanceof Operation_c) {
			return OperationsAdapter.getInstance().getParent(element);
		}
		if (element instanceof OperationParameter_c) {
			return OperationParametersAdapter.getInstance().getParent(element);
		}
		if (element instanceof InstanceStateMachine_c) {
			return InstanceStateMachinesAdapter.getInstance()
					.getParent(element);
		}
		if (element instanceof StateMachineState_c) {
			return StatesAdapter.getInstance().getParent(element);
		}
		if (element instanceof StateMachineEvent_c) {
			return EventsAdapter.getInstance().getParent(element);
		}
		if (element instanceof NonLocalEvent_c) {
			return InheritedEventsAdapter.getInstance().getParent(element);
		}
		if (element instanceof StateMachineEvent_c) {
			return DeliveredEventsAdapter.getInstance().getParent(element);
		}
		if (element instanceof StateMachineEventDataItem_c) {
			return StateMachineEventDataItemsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof ClassStateMachine_c) {
			return ClassStateMachinesAdapter.getInstance().getParent(element);
		}
		if (element instanceof FunctionPackage_c) {
			return FunctionPackagesAdapter.getInstance().getParent(element);
		}
		if (element instanceof Function_c) {
			return FunctionsAdapter.getInstance().getParent(element);
		}
		if (element instanceof FunctionParameter_c) {
			return FunctionParametersAdapter.getInstance().getParent(element);
		}
		if (element instanceof DataTypePackage_c) {
			return DataTypePackagesAdapter.getInstance().getParent(element);
		}
		if (element instanceof ExternalEntityPackage_c) {
			return ExternalEntityPackagesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof UserDataType_c) {
			return UserDefinedDataTypesAdapter.getInstance().getParent(element);
		}
		if (element instanceof ExternalEntity_c) {
			return ExternalEntitiesAdapter.getInstance().getParent(element);
		}
		if (element instanceof Bridge_c) {
			return BridgeOperationsAdapter.getInstance().getParent(element);
		}
		if (element instanceof BridgeParameter_c) {
			return BridgeParametersAdapter.getInstance().getParent(element);
		}
		if (element instanceof EnumerationDataType_c) {
			return EnumerationsAdapter.getInstance().getParent(element);
		}
		if (element instanceof Enumerator_c) {
			return EnumeratorsAdapter.getInstance().getParent(element);
		}
		if (element instanceof CoreDataType_c) {
			return CoreDataTypesAdapter.getInstance().getParent(element);
		}
		if (element instanceof SupplementalDataItems_c) {
			return EventDataItemsAdapter.getInstance().getParent(element);
		}
		if (element instanceof Sequence_c) {
			return SequencesAdapter.getInstance().getParent(element);
		}
		if (element instanceof ClassInstanceParticipant_c) {
			return InstancesAdapter.getInstance().getParent(element);
		}
		if (element instanceof InstanceAttributeValue_c) {
			return InformalInstanceAttributesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof MessageArgument_c) {
			return InformalMessageArgumentsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof MessageArgument_c) {
			return EventMessageArgumentsAdapter.getInstance()
					.getParent(element);
		}
		if (element instanceof MessageArgument_c) {
			return FunctionMessageArgumentsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof MessageArgument_c) {
			return ClassMessageArgumentsAdapter.getInstance()
					.getParent(element);
		}
		if (element instanceof MessageArgument_c) {
			return BridgeMessageArgumentsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof ClassParticipant_c) {
			return ImportedClassesAdapter.getInstance().getParent(element);
		}
		if (element instanceof ExternalEntityParticipant_c) {
			return ImportedExternalEntitiesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof FunctionPackageParticipant_c) {
			return ImportedFunctionPackagesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof PackageParticipant_c) {
			return ImportedPackagesAdapter.getInstance().getParent(element);
		}
		if (element instanceof ClassParticipantAttribute_c) {
			return InformalClassAttributesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof InstanceAttributeValue_c) {
			return FormalInstanceAttributesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof ActorParticipant_c) {
			return ActorsAdapter.getInstance().getParent(element);
		}
		if (element instanceof SynchronousMessage_c) {
			return IncomingSynchronousMessagesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof AsynchronousMessage_c) {
			return IncomingAsynchronousMessagesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof ReturnMessage_c) {
			return IncomingReturnMessagesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof Communication_c) {
			return CommunicationsAdapter.getInstance().getParent(element);
		}
		if (element instanceof UseCaseDiagram_c) {
			return UseCaseDiagramsAdapter.getInstance().getParent(element);
		}
		if (element instanceof UseCaseParticipant_c) {
			return UseCasesAdapter.getInstance().getParent(element);
		}
		if (element instanceof Activity_c) {
			return ActivitiesAdapter.getInstance().getParent(element);
		}
		if (element instanceof ActivityDiagramAction_c) {
			return ActionsAdapter.getInstance().getParent(element);
		}
		if (element instanceof ObjectNode_c) {
			return ObjectnodesAdapter.getInstance().getParent(element);
		}
		if (element instanceof AcceptEventAction_c) {
			return AcceptEventActionsAdapter.getInstance().getParent(element);
		}
		if (element instanceof SendSignal_c) {
			return SendSignalActionsAdapter.getInstance().getParent(element);
		}
		if (element instanceof AcceptTimeEventAction_c) {
			return AcceptTimeEventActionsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof InterfacePackage_c) {
			return InterfacePackagesAdapter.getInstance().getParent(element);
		}
		if (element instanceof Interface_c) {
			return InterfacesAdapter.getInstance().getParent(element);
		}
		if (element instanceof InterfaceSignal_c) {
			return SignalsAdapter.getInstance().getParent(element);
		}
		if (element instanceof PropertyParameter_c) {
			return ParametersAdapter.getInstance().getParent(element);
		}
		if (element instanceof ComponentPackage_c) {
			return ComponentPackagesAdapter.getInstance().getParent(element);
		}
		if (element instanceof Component_c) {
			return ComponentsAdapter.getInstance().getParent(element);
		}
		if (element instanceof Provision_c) {
			return ProvidedInterfacesAdapter.getInstance().getParent(element);
		}
		if (element instanceof Requirement_c) {
			return RequiredInterfacesAdapter.getInstance().getParent(element);
		}
		if (element instanceof RequiredOperation_c) {
			return RequiredInterfaceOperationsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof ProvidedOperation_c) {
			return ProvidedInterfaceOperationsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof RequiredSignal_c) {
			return RequiredInterfaceSignalsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof ProvidedSignal_c) {
			return ProvidedInterfaceSignalsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof InterfaceOperation_c) {
			return InterfaceOperationsAdapter.getInstance().getParent(element);
		}
		if (element instanceof ComponentReference_c) {
			return ComponentReferencesAdapter.getInstance().getParent(element);
		}
		if (element instanceof StructuredDataType_c) {
			return StructuredDataTypesAdapter.getInstance().getParent(element);
		}
		if (element instanceof StructureMember_c) {
			return MembersAdapter.getInstance().getParent(element);
		}
		if (element instanceof Port_c) {
			return PortsAdapter.getInstance().getParent(element);
		}
		if (element instanceof ImportedProvision_c) {
			return ImportedProvidedInterfacesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof ImportedRequirement_c) {
			return ImportedRequiredInterfacesAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof ComponentParticipant_c) {
			return ComponentParticipantsAdapter.getInstance()
					.getParent(element);
		}
		if (element instanceof Package_c) {
			return PackagesAdapter.getInstance().getParent(element);
		}
		if (element instanceof ConstantSpecification_c) {
			return ConstantSpecificationsAdapter.getInstance().getParent(
					element);
		}
		if (element instanceof LiteralSymbolicConstant_c) {
			return LiteralSymbolicConstantsAdapter.getInstance().getParent(
					element);
		}

		return null;
	}
	/**
	 * @see ITreeContentProvider#hasChildren(Object)
	 */
	public boolean hasChildren(Object element) {
		if (element instanceof MultipleOccurrenceElement) {
			element = ((MultipleOccurrenceElement) element).getElement();
		}
		if (element instanceof Ooaofooa) {
			return RootAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof SystemModel_c) {
			return SystemAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Domain_c) {
			return DomainsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Subsystem_c) {
			return SubsystemsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ModelClass_c) {
			return ClassesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Attribute_c) {
			return AttributesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Operation_c) {
			return OperationsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof OperationParameter_c) {
			return OperationParametersAdapter.getInstance()
					.hasChildren(element);
		}
		if (element instanceof InstanceStateMachine_c) {
			return InstanceStateMachinesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof StateMachineState_c) {
			return StatesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof StateMachineEvent_c) {
			return EventsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof NonLocalEvent_c) {
			return InheritedEventsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof StateMachineEvent_c) {
			return DeliveredEventsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof StateMachineEventDataItem_c) {
			return StateMachineEventDataItemsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof ClassStateMachine_c) {
			return ClassStateMachinesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof FunctionPackage_c) {
			return FunctionPackagesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Function_c) {
			return FunctionsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof FunctionParameter_c) {
			return FunctionParametersAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof DataTypePackage_c) {
			return DataTypePackagesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ExternalEntityPackage_c) {
			return ExternalEntityPackagesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof UserDataType_c) {
			return UserDefinedDataTypesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof ExternalEntity_c) {
			return ExternalEntitiesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Bridge_c) {
			return BridgeOperationsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof BridgeParameter_c) {
			return BridgeParametersAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof EnumerationDataType_c) {
			return EnumerationsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Enumerator_c) {
			return EnumeratorsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof CoreDataType_c) {
			return CoreDataTypesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof SupplementalDataItems_c) {
			return EventDataItemsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Sequence_c) {
			return SequencesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ClassInstanceParticipant_c) {
			return InstancesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof InstanceAttributeValue_c) {
			return InformalInstanceAttributesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof MessageArgument_c) {
			return InformalMessageArgumentsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof MessageArgument_c) {
			return EventMessageArgumentsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof MessageArgument_c) {
			return FunctionMessageArgumentsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof MessageArgument_c) {
			return ClassMessageArgumentsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof MessageArgument_c) {
			return BridgeMessageArgumentsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof ClassParticipant_c) {
			return ImportedClassesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ExternalEntityParticipant_c) {
			return ImportedExternalEntitiesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof FunctionPackageParticipant_c) {
			return ImportedFunctionPackagesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof PackageParticipant_c) {
			return ImportedPackagesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ClassParticipantAttribute_c) {
			return InformalClassAttributesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof InstanceAttributeValue_c) {
			return FormalInstanceAttributesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof ActorParticipant_c) {
			return ActorsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof SynchronousMessage_c) {
			return IncomingSynchronousMessagesAdapter.getInstance()
					.hasChildren(element);
		}
		if (element instanceof AsynchronousMessage_c) {
			return IncomingAsynchronousMessagesAdapter.getInstance()
					.hasChildren(element);
		}
		if (element instanceof ReturnMessage_c) {
			return IncomingReturnMessagesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof Communication_c) {
			return CommunicationsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof UseCaseDiagram_c) {
			return UseCaseDiagramsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof UseCaseParticipant_c) {
			return UseCasesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Activity_c) {
			return ActivitiesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ActivityDiagramAction_c) {
			return ActionsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ObjectNode_c) {
			return ObjectnodesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof AcceptEventAction_c) {
			return AcceptEventActionsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof SendSignal_c) {
			return SendSignalActionsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof AcceptTimeEventAction_c) {
			return AcceptTimeEventActionsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof InterfacePackage_c) {
			return InterfacePackagesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Interface_c) {
			return InterfacesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof InterfaceSignal_c) {
			return SignalsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof PropertyParameter_c) {
			return ParametersAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ComponentPackage_c) {
			return ComponentPackagesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Component_c) {
			return ComponentsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Provision_c) {
			return ProvidedInterfacesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Requirement_c) {
			return RequiredInterfacesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof RequiredOperation_c) {
			return RequiredInterfaceOperationsAdapter.getInstance()
					.hasChildren(element);
		}
		if (element instanceof ProvidedOperation_c) {
			return ProvidedInterfaceOperationsAdapter.getInstance()
					.hasChildren(element);
		}
		if (element instanceof RequiredSignal_c) {
			return RequiredInterfaceSignalsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof ProvidedSignal_c) {
			return ProvidedInterfaceSignalsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof InterfaceOperation_c) {
			return InterfaceOperationsAdapter.getInstance()
					.hasChildren(element);
		}
		if (element instanceof ComponentReference_c) {
			return ComponentReferencesAdapter.getInstance()
					.hasChildren(element);
		}
		if (element instanceof StructuredDataType_c) {
			return StructuredDataTypesAdapter.getInstance()
					.hasChildren(element);
		}
		if (element instanceof StructureMember_c) {
			return MembersAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof Port_c) {
			return PortsAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ImportedProvision_c) {
			return ImportedProvidedInterfacesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof ImportedRequirement_c) {
			return ImportedRequiredInterfacesAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof ComponentParticipant_c) {
			return ComponentParticipantsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof Package_c) {
			return PackagesAdapter.getInstance().hasChildren(element);
		}
		if (element instanceof ConstantSpecification_c) {
			return ConstantSpecificationsAdapter.getInstance().hasChildren(
					element);
		}
		if (element instanceof LiteralSymbolicConstant_c) {
			return LiteralSymbolicConstantsAdapter.getInstance().hasChildren(
					element);
		}
		// Unknown element
		return false;
	}
	/**
	 * @see IStructuredContentProvider#getElements(Object)
	 */
	public Object[] getElements(Object inputElement) {
		return getChildren(inputElement);
	}

	public static void sort(Object[] elements) {
		sorter.sort(elements);
	}
}
