package com.mentor.nucleus.bp.ui.explorer.adapters;
//======================================================================
//
// File: com/mentor/nucleus/bp/ui/explorer/adapters/SystemAdapter.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/create_adapters.inc
// Version:      $Revision: 1.31 $
//
// (c) Copyright 2006-2014 by Mentor Graphics Corp.  All rights reserved.
//
//======================================================================
//
// This class is responsible for decoupling the client model entity
// class SystemModel_c from the tree viewer and the hierarchy
// it imposes.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IFolder;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.ui.explorer.ExplorerPlugin;
import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.Viewer;
import com.mentor.nucleus.bp.core.*;

import com.mentor.nucleus.bp.ui.explorer.*;
/**
 * This file adapts the meta-model entity; 'SystemModel_c'
 * so that it works with the Eclipse JFace user interface components.
 * <p>
 * Do not edit this class, it was created using the Mentor 
 * Graphics MC-Java code generator product.
 * </p>
 */
public class SystemAdapter implements ITreeContentProvider {
	static SystemAdapter systemadapter = null;
	/**
	 * Returns the adapters singleton instance. If this
	 * is the first time, the instance is created.
	 */
	public static SystemAdapter getInstance() {
		if (systemadapter == null) {
			systemadapter = new SystemAdapter();
		}
		return systemadapter;
	}
	/**
	 * @see IContentProvider#inputChanged(Viewer, Object, Object)
	 * Called when the tree's input has been changed
	 */
	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
		// Nothing to do
	}
	/**
	 * @see IContentProvider#dispose()
	 * Called when this viewer is no longer needed
	 */
	public void dispose() {
		// Nothing to dispose
	}
	/**
	 * @see ITreeContentProvider#getParent(Object)
	 * Returns the parent of this node
	 */
	public Object getParent(Object arg) {
		return Ooaofooa.getDefaultInstance();
	}
	/**
	 * @see IStructuredContentProvider#getElements(Object)
	 * Returns the elements below this node
	 */
	public Object[] getElements(Object arg) {
		return getChildren(arg);
	}

	/**
	 * @see ITreeContentProvider#getChildren(Object)
	 * Returns the children of this node
	 */
	public Object[] getChildren(Object arg) {
		int resultSize = 0;
		Package_c[] packages_1401_1 = Package_c
				.getManyEP_PKGsOnR1401((SystemModel_c) arg);

		ModelContentProvider.sort(packages_1401_1);
		resultSize += packages_1401_1.length;
		Domain_c[] domains_28_2 = Domain_c
				.getManyS_DOMsOnR28((SystemModel_c) arg);

		ModelContentProvider.sort(domains_28_2);
		resultSize += domains_28_2.length;
		Sequence_c[] sequences_950_3 = Sequence_c
				.getManySQ_SsOnR950((SystemModel_c) arg);

		ModelContentProvider.sort(sequences_950_3);
		resultSize += sequences_950_3.length;
		UseCaseDiagram_c[] usecasediagrams_1211_4 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1211((SystemModel_c) arg);

		ModelContentProvider.sort(usecasediagrams_1211_4);
		resultSize += usecasediagrams_1211_4.length;
		Communication_c[] communications_1136_5 = Communication_c
				.getManyCOMM_COMMsOnR1136((SystemModel_c) arg);

		ModelContentProvider.sort(communications_1136_5);
		resultSize += communications_1136_5.length;
		Activity_c[] activities_1113_6 = Activity_c
				.getManyA_AsOnR1113((SystemModel_c) arg);

		ModelContentProvider.sort(activities_1113_6);
		resultSize += activities_1113_6.length;
		InterfacePackage_c[] interfacepackages_4302_7 = InterfacePackage_c
				.getManyIP_IPsOnR4302((SystemModel_c) arg);

		ModelContentProvider.sort(interfacepackages_4302_7);
		resultSize += interfacepackages_4302_7.length;
		ComponentPackage_c[] componentpackages_4602_8 = ComponentPackage_c
				.getManyCP_CPsOnR4602((SystemModel_c) arg);

		ModelContentProvider.sort(componentpackages_4602_8);
		resultSize += componentpackages_4602_8.length;
		DataTypePackage_c[] datatypepackages_4400_9 = DataTypePackage_c
				.getManyS_DPKsOnR4400(SystemDatatypePackage_c
						.getManySLD_SDPsOnR4400((SystemModel_c) arg));

		ModelContentProvider.sort(datatypepackages_4400_9);
		resultSize += datatypepackages_4400_9.length;

		Object[] result = new Object[resultSize];
		int count = 0;
		for (int i = 0; i < packages_1401_1.length; i++) {
			result[count] = packages_1401_1[i];
			count++;
		}
		for (int i = 0; i < domains_28_2.length; i++) {
			result[count] = domains_28_2[i];
			count++;
		}
		for (int i = 0; i < sequences_950_3.length; i++) {
			result[count] = sequences_950_3[i];
			count++;
		}
		for (int i = 0; i < usecasediagrams_1211_4.length; i++) {
			result[count] = usecasediagrams_1211_4[i];
			count++;
		}
		for (int i = 0; i < communications_1136_5.length; i++) {
			result[count] = communications_1136_5[i];
			count++;
		}
		for (int i = 0; i < activities_1113_6.length; i++) {
			result[count] = activities_1113_6[i];
			count++;
		}
		for (int i = 0; i < interfacepackages_4302_7.length; i++) {
			result[count] = interfacepackages_4302_7[i];
			count++;
		}
		for (int i = 0; i < componentpackages_4602_8.length; i++) {
			result[count] = componentpackages_4602_8[i];
			count++;
		}
		for (int i = 0; i < datatypepackages_4400_9.length; i++) {
			result[count] = datatypepackages_4400_9[i];
			count++;
		}
		return result;
	}
	/**
	 * @see ITreeContentProvider#hasChildren(Object)
	 * Returns true if this node has any children
	 */
	public boolean hasChildren(Object arg) {
		Package_c[] packages_1401_1 = Package_c
				.getManyEP_PKGsOnR1401((SystemModel_c) arg);

		if (packages_1401_1.length > 0)
			return true;
		Domain_c[] domains_28_2 = Domain_c
				.getManyS_DOMsOnR28((SystemModel_c) arg);

		if (domains_28_2.length > 0)
			return true;
		Sequence_c[] sequences_950_3 = Sequence_c
				.getManySQ_SsOnR950((SystemModel_c) arg);

		if (sequences_950_3.length > 0)
			return true;
		UseCaseDiagram_c[] usecasediagrams_1211_4 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1211((SystemModel_c) arg);

		if (usecasediagrams_1211_4.length > 0)
			return true;
		Communication_c[] communications_1136_5 = Communication_c
				.getManyCOMM_COMMsOnR1136((SystemModel_c) arg);

		if (communications_1136_5.length > 0)
			return true;
		Activity_c[] activities_1113_6 = Activity_c
				.getManyA_AsOnR1113((SystemModel_c) arg);

		if (activities_1113_6.length > 0)
			return true;
		InterfacePackage_c[] interfacepackages_4302_7 = InterfacePackage_c
				.getManyIP_IPsOnR4302((SystemModel_c) arg);

		if (interfacepackages_4302_7.length > 0)
			return true;
		ComponentPackage_c[] componentpackages_4602_8 = ComponentPackage_c
				.getManyCP_CPsOnR4602((SystemModel_c) arg);

		if (componentpackages_4602_8.length > 0)
			return true;
		DataTypePackage_c[] datatypepackages_4400_9 = DataTypePackage_c
				.getManyS_DPKsOnR4400(SystemDatatypePackage_c
						.getManySLD_SDPsOnR4400((SystemModel_c) arg));

		if (datatypepackages_4400_9.length > 0)
			return true;
		return false;
	}
}
