package com.mentor.nucleus.bp.ui.explorer.adapters;
//======================================================================
//
// File: com/mentor/nucleus/bp/ui/explorer/adapters/DataTypePackagesAdapter.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/create_adapters.inc
// Version:      $Revision: 1.31 $
//
// (c) Copyright 2006-2014 by Mentor Graphics Corp.  All rights reserved.
//
//======================================================================
//
// This class is responsible for decoupling the client model entity
// class DataTypePackage_c from the tree viewer and the hierarchy
// it imposes.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.Viewer;
import com.mentor.nucleus.bp.core.*;

import com.mentor.nucleus.bp.ui.explorer.*;
/**
 * This file adapts the meta-model entity; 'DataTypePackage_c'
 * so that it works with the Eclipse JFace user interface components.
 * <p>
 * Do not edit this class, it was created using the Mentor 
 * Graphics MC-Java code generator product.
 * </p>
 */
public class DataTypePackagesAdapter implements ITreeContentProvider {
	static DataTypePackagesAdapter datatypepackagesadapter = null;
	/**
	 * Returns the adapters singleton instance. If this
	 * is the first time, the instance is created.
	 */
	public static DataTypePackagesAdapter getInstance() {
		if (datatypepackagesadapter == null) {
			datatypepackagesadapter = new DataTypePackagesAdapter();
		}
		return datatypepackagesadapter;
	}
	/**
	 * @see IContentProvider#inputChanged(Viewer, Object, Object)
	 * Called when the tree's input has been changed
	 */
	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
		// Nothing to do
	}
	/**
	 * @see IContentProvider#dispose()
	 * Called when this viewer is no longer needed
	 */
	public void dispose() {
		// Nothing to dispose
	}
	/**
	 * @see ITreeContentProvider#getParent(Object)
	 * Returns the parent of this node
	 */
	public Object getParent(Object arg) {
		Component_c result26 = Component_c.getOneC_COnR4204(DomainAsComponent_c
				.getOneCN_DCOnR4204(Domain_c
						.getOneS_DOMOnR40((DataTypePackage_c) arg)));
		if (result26 != null) {
			return result26;
		}
		SystemModel_c result27 = SystemModel_c
				.getOneS_SYSOnR4400(SystemDatatypePackage_c
						.getOneSLD_SDPOnR4400((DataTypePackage_c) arg));
		if (result27 != null) {
			return result27;
		}
		Domain_c result28 = Domain_c.getOneS_DOMOnR40((DataTypePackage_c) arg);
		if (result28 != null) {
			return result28;
		}
		DataTypePackage_c result29 = DataTypePackage_c
				.getOneS_DPKOnR37(DataTypePackageInPackage_c
						.getOneS_DPIPOnR38((DataTypePackage_c) arg));
		if (result29 != null) {
			return result29;
		}
		Package_c result30 = Package_c
				.getOneEP_PKGOnR1400(SpecificationPackage_c
						.getOneEP_SPKGOnR1402((DataTypePackage_c) arg));
		if (result30 != null) {
			return result30;
		}
		return null;
	}
	/**
	 * @see IStructuredContentProvider#getElements(Object)
	 * Returns the elements below this node
	 */
	public Object[] getElements(Object arg) {
		return getChildren(arg);
	}

	/**
	 * @see ITreeContentProvider#getChildren(Object)
	 * Returns the children of this node
	 */
	public Object[] getChildren(Object arg) {
		int resultSize = 0;
		DataTypePackage_c[] datatypepackages_37_1 = DataTypePackage_c
				.getManyS_DPKsOnR38(DataTypePackageInPackage_c
						.getManyS_DPIPsOnR37((DataTypePackage_c) arg));

		ModelContentProvider.sort(datatypepackages_37_1);
		resultSize += datatypepackages_37_1.length;
		CoreDataType_c[] coredatatypes_39_2 = CoreDataType_c
				.getManyS_CDTsOnR17(DataType_c
						.getManyS_DTsOnR39((DataTypePackage_c) arg));

		ModelContentProvider.sort(coredatatypes_39_2);
		resultSize += coredatatypes_39_2.length;
		UserDataType_c[] userdefineddatatypes_39_3 = UserDataType_c
				.getManyS_UDTsOnR17(DataType_c
						.getManyS_DTsOnR39((DataTypePackage_c) arg));

		ModelContentProvider.sort(userdefineddatatypes_39_3);
		resultSize += userdefineddatatypes_39_3.length;
		EnumerationDataType_c[] enumerations_39_4 = EnumerationDataType_c
				.getManyS_EDTsOnR17(DataType_c
						.getManyS_DTsOnR39((DataTypePackage_c) arg));

		ModelContentProvider.sort(enumerations_39_4);
		resultSize += enumerations_39_4.length;
		StructuredDataType_c[] structureddatatypes_39_5 = StructuredDataType_c
				.getManyS_SDTsOnR17(DataType_c
						.getManyS_DTsOnR39((DataTypePackage_c) arg));

		ModelContentProvider.sort(structureddatatypes_39_5);
		resultSize += structureddatatypes_39_5.length;
		ConstantSpecification_c[] constantspecifications_1506_6 = ConstantSpecification_c
				.getManyCNST_CSPsOnR1506(ConstantInPackage_c
						.getManyCNST_CIPsOnR1506((DataTypePackage_c) arg));

		ModelContentProvider.sort(constantspecifications_1506_6);
		resultSize += constantspecifications_1506_6.length;

		Object[] result = new Object[resultSize];
		int count = 0;
		for (int i = 0; i < datatypepackages_37_1.length; i++) {
			result[count] = datatypepackages_37_1[i];
			count++;
		}
		for (int i = 0; i < coredatatypes_39_2.length; i++) {
			result[count] = coredatatypes_39_2[i];
			count++;
		}
		for (int i = 0; i < userdefineddatatypes_39_3.length; i++) {
			result[count] = userdefineddatatypes_39_3[i];
			count++;
		}
		for (int i = 0; i < enumerations_39_4.length; i++) {
			result[count] = enumerations_39_4[i];
			count++;
		}
		for (int i = 0; i < structureddatatypes_39_5.length; i++) {
			result[count] = structureddatatypes_39_5[i];
			count++;
		}
		for (int i = 0; i < constantspecifications_1506_6.length; i++) {
			result[count] = constantspecifications_1506_6[i];
			count++;
		}
		return result;
	}
	/**
	 * @see ITreeContentProvider#hasChildren(Object)
	 * Returns true if this node has any children
	 */
	public boolean hasChildren(Object arg) {
		DataTypePackage_c[] datatypepackages_37_1 = DataTypePackage_c
				.getManyS_DPKsOnR38(DataTypePackageInPackage_c
						.getManyS_DPIPsOnR37((DataTypePackage_c) arg));

		if (datatypepackages_37_1.length > 0)
			return true;
		CoreDataType_c[] coredatatypes_39_2 = CoreDataType_c
				.getManyS_CDTsOnR17(DataType_c
						.getManyS_DTsOnR39((DataTypePackage_c) arg));

		if (coredatatypes_39_2.length > 0)
			return true;
		UserDataType_c[] userdefineddatatypes_39_3 = UserDataType_c
				.getManyS_UDTsOnR17(DataType_c
						.getManyS_DTsOnR39((DataTypePackage_c) arg));

		if (userdefineddatatypes_39_3.length > 0)
			return true;
		EnumerationDataType_c[] enumerations_39_4 = EnumerationDataType_c
				.getManyS_EDTsOnR17(DataType_c
						.getManyS_DTsOnR39((DataTypePackage_c) arg));

		if (enumerations_39_4.length > 0)
			return true;
		StructuredDataType_c[] structureddatatypes_39_5 = StructuredDataType_c
				.getManyS_SDTsOnR17(DataType_c
						.getManyS_DTsOnR39((DataTypePackage_c) arg));

		if (structureddatatypes_39_5.length > 0)
			return true;
		ConstantSpecification_c[] constantspecifications_1506_6 = ConstantSpecification_c
				.getManyCNST_CSPsOnR1506(ConstantInPackage_c
						.getManyCNST_CIPsOnR1506((DataTypePackage_c) arg));

		if (constantspecifications_1506_6.length > 0)
			return true;
		return false;
	}
}
