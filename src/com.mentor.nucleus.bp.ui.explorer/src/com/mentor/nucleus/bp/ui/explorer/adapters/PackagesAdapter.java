package com.mentor.nucleus.bp.ui.explorer.adapters;
//======================================================================
//
// File: com/mentor/nucleus/bp/ui/explorer/adapters/PackagesAdapter.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/create_adapters.inc
// Version:      $Revision: 1.31 $
//
// (c) Copyright 2006-2014 by Mentor Graphics Corp.  All rights reserved.
//
//======================================================================
//
// This class is responsible for decoupling the client model entity
// class Package_c from the tree viewer and the hierarchy
// it imposes.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.Viewer;
import com.mentor.nucleus.bp.core.*;

import com.mentor.nucleus.bp.ui.explorer.*;
/**
 * This file adapts the meta-model entity; 'Package_c'
 * so that it works with the Eclipse JFace user interface components.
 * <p>
 * Do not edit this class, it was created using the Mentor 
 * Graphics MC-Java code generator product.
 * </p>
 */
public class PackagesAdapter implements ITreeContentProvider {
	static PackagesAdapter packagesadapter = null;
	/**
	 * Returns the adapters singleton instance. If this
	 * is the first time, the instance is created.
	 */
	public static PackagesAdapter getInstance() {
		if (packagesadapter == null) {
			packagesadapter = new PackagesAdapter();
		}
		return packagesadapter;
	}
	/**
	 * @see IContentProvider#inputChanged(Viewer, Object, Object)
	 * Called when the tree's input has been changed
	 */
	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
		// Nothing to do
	}
	/**
	 * @see IContentProvider#dispose()
	 * Called when this viewer is no longer needed
	 */
	public void dispose() {
		// Nothing to dispose
	}
	/**
	 * @see ITreeContentProvider#getParent(Object)
	 * Returns the parent of this node
	 */
	public Object getParent(Object arg) {
		SystemModel_c result202 = SystemModel_c
				.getOneS_SYSOnR1401((Package_c) arg);
		if (result202 != null) {
			return result202;
		}
		Component_c result203 = Component_c
				.getOneC_COnR8003(PackageableElement_c
						.getOnePE_PEOnR8001((Package_c) arg));
		if (result203 != null) {
			return result203;
		}
		Package_c result204 = Package_c.getOneEP_PKGOnR1403(PackageInPackage_c
				.getOneEP_PIPOnR1404((Package_c) arg));
		if (result204 != null) {
			return result204;
		}
		Package_c result205 = Package_c
				.getOneEP_PKGOnR8000(PackageableElement_c
						.getOnePE_PEOnR8001((Package_c) arg));
		if (result205 != null) {
			return result205;
		}
		return null;
	}
	/**
	 * @see IStructuredContentProvider#getElements(Object)
	 * Returns the elements below this node
	 */
	public Object[] getElements(Object arg) {
		return getChildren(arg);
	}

	/**
	 * @see ITreeContentProvider#getChildren(Object)
	 * Returns the children of this node
	 */
	public Object[] getChildren(Object arg) {
		int resultSize = 0;
		ModelClass_c[] classes_8000_1 = ModelClass_c
				.getManyO_OBJsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		ModelContentProvider.sort(classes_8000_1);
		resultSize += classes_8000_1.length;
		Function_c[] functions_8000_2 = Function_c
				.getManyS_SYNCsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		ModelContentProvider.sort(functions_8000_2);
		resultSize += functions_8000_2.length;
		DataTypePackage_c[] datatypepackages_1400_3 = DataTypePackage_c
				.getManyS_DPKsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		ModelContentProvider.sort(datatypepackages_1400_3);
		resultSize += datatypepackages_1400_3.length;
		UserDataType_c[] userdefineddatatypes_8000_4 = UserDataType_c
				.getManyS_UDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(userdefineddatatypes_8000_4);
		resultSize += userdefineddatatypes_8000_4.length;
		ExternalEntity_c[] externalentities_8000_5 = ExternalEntity_c
				.getManyS_EEsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		ModelContentProvider.sort(externalentities_8000_5);
		resultSize += externalentities_8000_5.length;
		EnumerationDataType_c[] enumerations_8000_6 = EnumerationDataType_c
				.getManyS_EDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(enumerations_8000_6);
		resultSize += enumerations_8000_6.length;
		CoreDataType_c[] coredatatypes_8000_7 = CoreDataType_c
				.getManyS_CDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(coredatatypes_8000_7);
		resultSize += coredatatypes_8000_7.length;
		Sequence_c[] sequences_1400_8 = Sequence_c
				.getManySQ_SsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		ModelContentProvider.sort(sequences_1400_8);
		resultSize += sequences_1400_8.length;
		ClassInstanceParticipant_c[] instances_8000_9 = ClassInstanceParticipant_c
				.getManySQ_CIPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(instances_8000_9);
		resultSize += instances_8000_9.length;
		ClassParticipant_c[] importedclasses_8000_10 = ClassParticipant_c
				.getManySQ_CPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(importedclasses_8000_10);
		resultSize += importedclasses_8000_10.length;
		ExternalEntityParticipant_c[] importedexternalentities_8000_11 = ExternalEntityParticipant_c
				.getManySQ_EEPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(importedexternalentities_8000_11);
		resultSize += importedexternalentities_8000_11.length;
		PackageParticipant_c[] importedpackages_8000_12 = PackageParticipant_c
				.getManySQ_PPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(importedpackages_8000_12);
		resultSize += importedpackages_8000_12.length;
		ActorParticipant_c[] actors_8000_13 = ActorParticipant_c
				.getManySQ_APsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(actors_8000_13);
		resultSize += actors_8000_13.length;
		Communication_c[] communications_1400_14 = Communication_c
				.getManyCOMM_COMMsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		ModelContentProvider.sort(communications_1400_14);
		resultSize += communications_1400_14.length;
		UseCaseDiagram_c[] usecasediagrams_1400_15 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		ModelContentProvider.sort(usecasediagrams_1400_15);
		resultSize += usecasediagrams_1400_15.length;
		UseCaseParticipant_c[] usecases_8000_16 = UseCaseParticipant_c
				.getManyIA_UCPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(usecases_8000_16);
		resultSize += usecases_8000_16.length;
		Activity_c[] activities_1400_17 = Activity_c
				.getManyA_AsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		ModelContentProvider.sort(activities_1400_17);
		resultSize += activities_1400_17.length;
		ActivityDiagramAction_c[] actions_8000_18 = ActivityDiagramAction_c
				.getManyA_GAsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg))));

		ModelContentProvider.sort(actions_8000_18);
		resultSize += actions_8000_18.length;
		ObjectNode_c[] objectnodes_8000_19 = ObjectNode_c
				.getManyA_OBJsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(objectnodes_8000_19);
		resultSize += objectnodes_8000_19.length;
		AcceptEventAction_c[] accepteventactions_8000_20 = AcceptEventAction_c
				.getManyA_AEAsOnR1112(AcceptEvent_c.getManyA_AEsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)))));

		ModelContentProvider.sort(accepteventactions_8000_20);
		resultSize += accepteventactions_8000_20.length;
		SendSignal_c[] sendsignalactions_8000_21 = SendSignal_c
				.getManyA_SSsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg))));

		ModelContentProvider.sort(sendsignalactions_8000_21);
		resultSize += sendsignalactions_8000_21.length;
		AcceptTimeEventAction_c[] accepttimeeventactions_8000_22 = AcceptTimeEventAction_c
				.getManyA_ATEsOnR1112(AcceptEvent_c.getManyA_AEsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)))));

		ModelContentProvider.sort(accepttimeeventactions_8000_22);
		resultSize += accepttimeeventactions_8000_22.length;
		InterfacePackage_c[] interfacepackages_1400_23 = InterfacePackage_c
				.getManyIP_IPsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		ModelContentProvider.sort(interfacepackages_1400_23);
		resultSize += interfacepackages_1400_23.length;
		Interface_c[] interfaces_8000_24 = Interface_c
				.getManyC_IsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		ModelContentProvider.sort(interfaces_8000_24);
		resultSize += interfaces_8000_24.length;
		ComponentPackage_c[] componentpackages_1400_25 = ComponentPackage_c
				.getManyCP_CPsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		ModelContentProvider.sort(componentpackages_1400_25);
		resultSize += componentpackages_1400_25.length;
		Component_c[] components_8000_26 = Component_c
				.getManyC_CsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		ModelContentProvider.sort(components_8000_26);
		resultSize += components_8000_26.length;
		ComponentReference_c[] componentreferences_8000_27 = ComponentReference_c
				.getManyCL_ICsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		ModelContentProvider.sort(componentreferences_8000_27);
		resultSize += componentreferences_8000_27.length;
		StructuredDataType_c[] structureddatatypes_8000_28 = StructuredDataType_c
				.getManyS_SDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(structureddatatypes_8000_28);
		resultSize += structureddatatypes_8000_28.length;
		ComponentParticipant_c[] componentparticipants_8000_29 = ComponentParticipant_c
				.getManySQ_COPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		ModelContentProvider.sort(componentparticipants_8000_29);
		resultSize += componentparticipants_8000_29.length;
		Package_c[] packages_1403_30 = Package_c
				.getManyEP_PKGsOnR1404(PackageInPackage_c
						.getManyEP_PIPsOnR1403((Package_c) arg));

		ModelContentProvider.sort(packages_1403_30);
		resultSize += packages_1403_30.length;
		Package_c[] packages_8000_31 = Package_c
				.getManyEP_PKGsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		ModelContentProvider.sort(packages_8000_31);
		resultSize += packages_8000_31.length;
		ConstantSpecification_c[] constantspecifications_8000_32 = ConstantSpecification_c
				.getManyCNST_CSPsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		ModelContentProvider.sort(constantspecifications_8000_32);
		resultSize += constantspecifications_8000_32.length;

		Object[] result = new Object[resultSize];
		int count = 0;
		for (int i = 0; i < classes_8000_1.length; i++) {
			result[count] = classes_8000_1[i];
			count++;
		}
		for (int i = 0; i < functions_8000_2.length; i++) {
			result[count] = functions_8000_2[i];
			count++;
		}
		for (int i = 0; i < datatypepackages_1400_3.length; i++) {
			result[count] = datatypepackages_1400_3[i];
			count++;
		}
		for (int i = 0; i < userdefineddatatypes_8000_4.length; i++) {
			result[count] = userdefineddatatypes_8000_4[i];
			count++;
		}
		for (int i = 0; i < externalentities_8000_5.length; i++) {
			result[count] = externalentities_8000_5[i];
			count++;
		}
		for (int i = 0; i < enumerations_8000_6.length; i++) {
			result[count] = enumerations_8000_6[i];
			count++;
		}
		for (int i = 0; i < coredatatypes_8000_7.length; i++) {
			result[count] = coredatatypes_8000_7[i];
			count++;
		}
		for (int i = 0; i < sequences_1400_8.length; i++) {
			result[count] = sequences_1400_8[i];
			count++;
		}
		for (int i = 0; i < instances_8000_9.length; i++) {
			result[count] = instances_8000_9[i];
			count++;
		}
		for (int i = 0; i < importedclasses_8000_10.length; i++) {
			result[count] = importedclasses_8000_10[i];
			count++;
		}
		for (int i = 0; i < importedexternalentities_8000_11.length; i++) {
			result[count] = importedexternalentities_8000_11[i];
			count++;
		}
		for (int i = 0; i < importedpackages_8000_12.length; i++) {
			result[count] = importedpackages_8000_12[i];
			count++;
		}
		for (int i = 0; i < actors_8000_13.length; i++) {
			result[count] = actors_8000_13[i];
			count++;
		}
		for (int i = 0; i < communications_1400_14.length; i++) {
			result[count] = communications_1400_14[i];
			count++;
		}
		for (int i = 0; i < usecasediagrams_1400_15.length; i++) {
			result[count] = usecasediagrams_1400_15[i];
			count++;
		}
		for (int i = 0; i < usecases_8000_16.length; i++) {
			result[count] = usecases_8000_16[i];
			count++;
		}
		for (int i = 0; i < activities_1400_17.length; i++) {
			result[count] = activities_1400_17[i];
			count++;
		}
		for (int i = 0; i < actions_8000_18.length; i++) {
			result[count] = actions_8000_18[i];
			count++;
		}
		for (int i = 0; i < objectnodes_8000_19.length; i++) {
			result[count] = objectnodes_8000_19[i];
			count++;
		}
		for (int i = 0; i < accepteventactions_8000_20.length; i++) {
			result[count] = accepteventactions_8000_20[i];
			count++;
		}
		for (int i = 0; i < sendsignalactions_8000_21.length; i++) {
			result[count] = sendsignalactions_8000_21[i];
			count++;
		}
		for (int i = 0; i < accepttimeeventactions_8000_22.length; i++) {
			result[count] = accepttimeeventactions_8000_22[i];
			count++;
		}
		for (int i = 0; i < interfacepackages_1400_23.length; i++) {
			result[count] = interfacepackages_1400_23[i];
			count++;
		}
		for (int i = 0; i < interfaces_8000_24.length; i++) {
			result[count] = interfaces_8000_24[i];
			count++;
		}
		for (int i = 0; i < componentpackages_1400_25.length; i++) {
			result[count] = componentpackages_1400_25[i];
			count++;
		}
		for (int i = 0; i < components_8000_26.length; i++) {
			result[count] = components_8000_26[i];
			count++;
		}
		for (int i = 0; i < componentreferences_8000_27.length; i++) {
			result[count] = componentreferences_8000_27[i];
			count++;
		}
		for (int i = 0; i < structureddatatypes_8000_28.length; i++) {
			result[count] = structureddatatypes_8000_28[i];
			count++;
		}
		for (int i = 0; i < componentparticipants_8000_29.length; i++) {
			result[count] = componentparticipants_8000_29[i];
			count++;
		}
		for (int i = 0; i < packages_1403_30.length; i++) {
			result[count] = packages_1403_30[i];
			count++;
		}
		for (int i = 0; i < packages_8000_31.length; i++) {
			result[count] = packages_8000_31[i];
			count++;
		}
		for (int i = 0; i < constantspecifications_8000_32.length; i++) {
			result[count] = constantspecifications_8000_32[i];
			count++;
		}
		return result;
	}
	/**
	 * @see ITreeContentProvider#hasChildren(Object)
	 * Returns true if this node has any children
	 */
	public boolean hasChildren(Object arg) {
		ModelClass_c[] classes_8000_1 = ModelClass_c
				.getManyO_OBJsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		if (classes_8000_1.length > 0)
			return true;
		Function_c[] functions_8000_2 = Function_c
				.getManyS_SYNCsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		if (functions_8000_2.length > 0)
			return true;
		DataTypePackage_c[] datatypepackages_1400_3 = DataTypePackage_c
				.getManyS_DPKsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		if (datatypepackages_1400_3.length > 0)
			return true;
		UserDataType_c[] userdefineddatatypes_8000_4 = UserDataType_c
				.getManyS_UDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (userdefineddatatypes_8000_4.length > 0)
			return true;
		ExternalEntity_c[] externalentities_8000_5 = ExternalEntity_c
				.getManyS_EEsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		if (externalentities_8000_5.length > 0)
			return true;
		EnumerationDataType_c[] enumerations_8000_6 = EnumerationDataType_c
				.getManyS_EDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (enumerations_8000_6.length > 0)
			return true;
		CoreDataType_c[] coredatatypes_8000_7 = CoreDataType_c
				.getManyS_CDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (coredatatypes_8000_7.length > 0)
			return true;
		Sequence_c[] sequences_1400_8 = Sequence_c
				.getManySQ_SsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		if (sequences_1400_8.length > 0)
			return true;
		ClassInstanceParticipant_c[] instances_8000_9 = ClassInstanceParticipant_c
				.getManySQ_CIPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (instances_8000_9.length > 0)
			return true;
		ClassParticipant_c[] importedclasses_8000_10 = ClassParticipant_c
				.getManySQ_CPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (importedclasses_8000_10.length > 0)
			return true;
		ExternalEntityParticipant_c[] importedexternalentities_8000_11 = ExternalEntityParticipant_c
				.getManySQ_EEPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (importedexternalentities_8000_11.length > 0)
			return true;
		PackageParticipant_c[] importedpackages_8000_12 = PackageParticipant_c
				.getManySQ_PPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (importedpackages_8000_12.length > 0)
			return true;
		ActorParticipant_c[] actors_8000_13 = ActorParticipant_c
				.getManySQ_APsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (actors_8000_13.length > 0)
			return true;
		Communication_c[] communications_1400_14 = Communication_c
				.getManyCOMM_COMMsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		if (communications_1400_14.length > 0)
			return true;
		UseCaseDiagram_c[] usecasediagrams_1400_15 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		if (usecasediagrams_1400_15.length > 0)
			return true;
		UseCaseParticipant_c[] usecases_8000_16 = UseCaseParticipant_c
				.getManyIA_UCPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (usecases_8000_16.length > 0)
			return true;
		Activity_c[] activities_1400_17 = Activity_c
				.getManyA_AsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		if (activities_1400_17.length > 0)
			return true;
		ActivityDiagramAction_c[] actions_8000_18 = ActivityDiagramAction_c
				.getManyA_GAsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg))));

		if (actions_8000_18.length > 0)
			return true;
		ObjectNode_c[] objectnodes_8000_19 = ObjectNode_c
				.getManyA_OBJsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (objectnodes_8000_19.length > 0)
			return true;
		AcceptEventAction_c[] accepteventactions_8000_20 = AcceptEventAction_c
				.getManyA_AEAsOnR1112(AcceptEvent_c.getManyA_AEsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)))));

		if (accepteventactions_8000_20.length > 0)
			return true;
		SendSignal_c[] sendsignalactions_8000_21 = SendSignal_c
				.getManyA_SSsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg))));

		if (sendsignalactions_8000_21.length > 0)
			return true;
		AcceptTimeEventAction_c[] accepttimeeventactions_8000_22 = AcceptTimeEventAction_c
				.getManyA_ATEsOnR1112(AcceptEvent_c.getManyA_AEsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c
						.getManyA_NsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)))));

		if (accepttimeeventactions_8000_22.length > 0)
			return true;
		InterfacePackage_c[] interfacepackages_1400_23 = InterfacePackage_c
				.getManyIP_IPsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		if (interfacepackages_1400_23.length > 0)
			return true;
		Interface_c[] interfaces_8000_24 = Interface_c
				.getManyC_IsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		if (interfaces_8000_24.length > 0)
			return true;
		ComponentPackage_c[] componentpackages_1400_25 = ComponentPackage_c
				.getManyCP_CPsOnR1402(SpecificationPackage_c
						.getManyEP_SPKGsOnR1400((Package_c) arg));

		if (componentpackages_1400_25.length > 0)
			return true;
		Component_c[] components_8000_26 = Component_c
				.getManyC_CsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		if (components_8000_26.length > 0)
			return true;
		ComponentReference_c[] componentreferences_8000_27 = ComponentReference_c
				.getManyCL_ICsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		if (componentreferences_8000_27.length > 0)
			return true;
		StructuredDataType_c[] structureddatatypes_8000_28 = StructuredDataType_c
				.getManyS_SDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (structureddatatypes_8000_28.length > 0)
			return true;
		ComponentParticipant_c[] componentparticipants_8000_29 = ComponentParticipant_c
				.getManySQ_COPsOnR930(InteractionParticipant_c
						.getManySQ_PsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000((Package_c) arg)));

		if (componentparticipants_8000_29.length > 0)
			return true;
		Package_c[] packages_1403_30 = Package_c
				.getManyEP_PKGsOnR1404(PackageInPackage_c
						.getManyEP_PIPsOnR1403((Package_c) arg));

		if (packages_1403_30.length > 0)
			return true;
		Package_c[] packages_8000_31 = Package_c
				.getManyEP_PKGsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		if (packages_8000_31.length > 0)
			return true;
		ConstantSpecification_c[] constantspecifications_8000_32 = ConstantSpecification_c
				.getManyCNST_CSPsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000((Package_c) arg));

		if (constantspecifications_8000_32.length > 0)
			return true;
		return false;
	}
}
