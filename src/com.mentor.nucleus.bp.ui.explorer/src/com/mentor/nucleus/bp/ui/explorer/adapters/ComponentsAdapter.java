package com.mentor.nucleus.bp.ui.explorer.adapters;
//======================================================================
//
// File: com/mentor/nucleus/bp/ui/explorer/adapters/ComponentsAdapter.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/create_adapters.inc
// Version:      $Revision: 1.31 $
//
// (c) Copyright 2006-2014 by Mentor Graphics Corp.  All rights reserved.
//
//======================================================================
//
// This class is responsible for decoupling the client model entity
// class Component_c from the tree viewer and the hierarchy
// it imposes.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.Viewer;
import com.mentor.nucleus.bp.core.*;

import com.mentor.nucleus.bp.ui.explorer.*;
/**
 * This file adapts the meta-model entity; 'Component_c'
 * so that it works with the Eclipse JFace user interface components.
 * <p>
 * Do not edit this class, it was created using the Mentor 
 * Graphics MC-Java code generator product.
 * </p>
 */
public class ComponentsAdapter implements ITreeContentProvider {
	static ComponentsAdapter componentsadapter = null;
	/**
	 * Returns the adapters singleton instance. If this
	 * is the first time, the instance is created.
	 */
	public static ComponentsAdapter getInstance() {
		if (componentsadapter == null) {
			componentsadapter = new ComponentsAdapter();
		}
		return componentsadapter;
	}
	/**
	 * @see IContentProvider#inputChanged(Viewer, Object, Object)
	 * Called when the tree's input has been changed
	 */
	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
		// Nothing to do
	}
	/**
	 * @see IContentProvider#dispose()
	 * Called when this viewer is no longer needed
	 */
	public void dispose() {
		// Nothing to dispose
	}
	/**
	 * @see ITreeContentProvider#getParent(Object)
	 * Returns the parent of this node
	 */
	public Object getParent(Object arg) {
		ComponentPackage_c result174 = ComponentPackage_c
				.getOneCP_CPOnR4604((Component_c) arg);
		if (result174 != null) {
			return result174;
		}
		Component_c result175 = Component_c
				.getOneC_COnR8003(PackageableElement_c
						.getOnePE_PEOnR8001((Component_c) arg));
		if (result175 != null) {
			return result175;
		}
		Component_c result176 = Component_c
				.getOneC_COnR4202(ComponentInComponent_c
						.getOneCN_CICOnR4203((Component_c) arg));
		if (result176 != null) {
			return result176;
		}
		Package_c result177 = Package_c
				.getOneEP_PKGOnR8000(PackageableElement_c
						.getOnePE_PEOnR8001((Component_c) arg));
		if (result177 != null) {
			return result177;
		}
		return null;
	}
	/**
	 * @see IStructuredContentProvider#getElements(Object)
	 * Returns the elements below this node
	 */
	public Object[] getElements(Object arg) {
		return getChildren(arg);
	}

	/**
	 * @see ITreeContentProvider#getChildren(Object)
	 * Returns the children of this node
	 */
	public Object[] getChildren(Object arg) {
		int resultSize = 0;
		Subsystem_c[] subsystems_4204_1 = Subsystem_c
				.getManyS_SSsOnR43(SubsystemInDomain_c.getManyS_SIDsOnR43(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg))));

		ModelContentProvider.sort(subsystems_4204_1);
		resultSize += subsystems_4204_1.length;
		ModelClass_c[] classes_8003_2 = ModelClass_c
				.getManyO_OBJsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		ModelContentProvider.sort(classes_8003_2);
		resultSize += classes_8003_2.length;
		FunctionPackage_c[] functionpackages_4204_3 = FunctionPackage_c
				.getManyS_FPKsOnR29(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		ModelContentProvider.sort(functionpackages_4204_3);
		resultSize += functionpackages_4204_3.length;
		DataTypePackage_c[] datatypepackages_4204_4 = DataTypePackage_c
				.getManyS_DPKsOnR40(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		ModelContentProvider.sort(datatypepackages_4204_4);
		resultSize += datatypepackages_4204_4.length;
		ExternalEntityPackage_c[] externalentitypackages_4204_5 = ExternalEntityPackage_c
				.getManyS_EEPKsOnR36(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		ModelContentProvider.sort(externalentitypackages_4204_5);
		resultSize += externalentitypackages_4204_5.length;
		UserDataType_c[] userdefineddatatypes_8003_6 = UserDataType_c
				.getManyS_UDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8003((Component_c) arg)));

		ModelContentProvider.sort(userdefineddatatypes_8003_6);
		resultSize += userdefineddatatypes_8003_6.length;
		Sequence_c[] sequences_4204_7 = Sequence_c.getManySQ_SsOnR913(Domain_c
				.getManyS_DOMsOnR4204(DomainAsComponent_c
						.getManyCN_DCsOnR4204((Component_c) arg)));

		ModelContentProvider.sort(sequences_4204_7);
		resultSize += sequences_4204_7.length;
		Sequence_c[] sequences_952_8 = Sequence_c
				.getManySQ_SsOnR952((Component_c) arg);

		ModelContentProvider.sort(sequences_952_8);
		resultSize += sequences_952_8.length;
		Communication_c[] communications_4204_9 = Communication_c
				.getManyCOMM_COMMsOnR1132(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		ModelContentProvider.sort(communications_4204_9);
		resultSize += communications_4204_9.length;
		Communication_c[] communications_1138_10 = Communication_c
				.getManyCOMM_COMMsOnR1138((Component_c) arg);

		ModelContentProvider.sort(communications_1138_10);
		resultSize += communications_1138_10.length;
		UseCaseDiagram_c[] usecasediagrams_4204_11 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1201(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		ModelContentProvider.sort(usecasediagrams_4204_11);
		resultSize += usecasediagrams_4204_11.length;
		UseCaseDiagram_c[] usecasediagrams_1213_12 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1213((Component_c) arg);

		ModelContentProvider.sort(usecasediagrams_1213_12);
		resultSize += usecasediagrams_1213_12.length;
		Activity_c[] activities_4204_13 = Activity_c
				.getManyA_AsOnR1100(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		ModelContentProvider.sort(activities_4204_13);
		resultSize += activities_4204_13.length;
		Activity_c[] activities_1115_14 = Activity_c
				.getManyA_AsOnR1115((Component_c) arg);

		ModelContentProvider.sort(activities_1115_14);
		resultSize += activities_1115_14.length;
		InterfacePackage_c[] interfacepackages_4206_15 = InterfacePackage_c
				.getManyIP_IPsOnR4206((Component_c) arg);

		ModelContentProvider.sort(interfacepackages_4206_15);
		resultSize += interfacepackages_4206_15.length;
		Interface_c[] interfaces_8003_16 = Interface_c
				.getManyC_IsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		ModelContentProvider.sort(interfaces_8003_16);
		resultSize += interfaces_8003_16.length;
		Package_c[] packages_8003_17 = Package_c
				.getManyEP_PKGsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		ModelContentProvider.sort(packages_8003_17);
		resultSize += packages_8003_17.length;
		Component_c[] components_8003_18 = Component_c
				.getManyC_CsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		ModelContentProvider.sort(components_8003_18);
		resultSize += components_8003_18.length;
		ComponentReference_c[] componentreferences_8003_19 = ComponentReference_c
				.getManyCL_ICsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		ModelContentProvider.sort(componentreferences_8003_19);
		resultSize += componentreferences_8003_19.length;
		Component_c[] components_4202_20 = Component_c
				.getManyC_CsOnR4203(ComponentInComponent_c
						.getManyCN_CICsOnR4202((Component_c) arg));

		ModelContentProvider.sort(components_4202_20);
		resultSize += components_4202_20.length;
		Port_c[] ports_4010_21 = Port_c.getManyC_POsOnR4010((Component_c) arg);

		ModelContentProvider.sort(ports_4010_21);
		resultSize += ports_4010_21.length;
		ComponentReference_c[] componentreferences_4205_22 = ComponentReference_c
				.getManyCL_ICsOnR4205((Component_c) arg);

		ModelContentProvider.sort(componentreferences_4205_22);
		resultSize += componentreferences_4205_22.length;

		Object[] result = new Object[resultSize];
		int count = 0;
		for (int i = 0; i < subsystems_4204_1.length; i++) {
			result[count] = subsystems_4204_1[i];
			count++;
		}
		for (int i = 0; i < classes_8003_2.length; i++) {
			result[count] = classes_8003_2[i];
			count++;
		}
		for (int i = 0; i < functionpackages_4204_3.length; i++) {
			result[count] = functionpackages_4204_3[i];
			count++;
		}
		for (int i = 0; i < datatypepackages_4204_4.length; i++) {
			result[count] = datatypepackages_4204_4[i];
			count++;
		}
		for (int i = 0; i < externalentitypackages_4204_5.length; i++) {
			result[count] = externalentitypackages_4204_5[i];
			count++;
		}
		for (int i = 0; i < userdefineddatatypes_8003_6.length; i++) {
			result[count] = userdefineddatatypes_8003_6[i];
			count++;
		}
		for (int i = 0; i < sequences_4204_7.length; i++) {
			result[count] = sequences_4204_7[i];
			count++;
		}
		for (int i = 0; i < sequences_952_8.length; i++) {
			result[count] = sequences_952_8[i];
			count++;
		}
		for (int i = 0; i < communications_4204_9.length; i++) {
			result[count] = communications_4204_9[i];
			count++;
		}
		for (int i = 0; i < communications_1138_10.length; i++) {
			result[count] = communications_1138_10[i];
			count++;
		}
		for (int i = 0; i < usecasediagrams_4204_11.length; i++) {
			result[count] = usecasediagrams_4204_11[i];
			count++;
		}
		for (int i = 0; i < usecasediagrams_1213_12.length; i++) {
			result[count] = usecasediagrams_1213_12[i];
			count++;
		}
		for (int i = 0; i < activities_4204_13.length; i++) {
			result[count] = activities_4204_13[i];
			count++;
		}
		for (int i = 0; i < activities_1115_14.length; i++) {
			result[count] = activities_1115_14[i];
			count++;
		}
		for (int i = 0; i < interfacepackages_4206_15.length; i++) {
			result[count] = interfacepackages_4206_15[i];
			count++;
		}
		for (int i = 0; i < interfaces_8003_16.length; i++) {
			result[count] = interfaces_8003_16[i];
			count++;
		}
		for (int i = 0; i < packages_8003_17.length; i++) {
			result[count] = packages_8003_17[i];
			count++;
		}
		for (int i = 0; i < components_8003_18.length; i++) {
			result[count] = components_8003_18[i];
			count++;
		}
		for (int i = 0; i < componentreferences_8003_19.length; i++) {
			result[count] = componentreferences_8003_19[i];
			count++;
		}
		for (int i = 0; i < components_4202_20.length; i++) {
			result[count] = components_4202_20[i];
			count++;
		}
		for (int i = 0; i < ports_4010_21.length; i++) {
			result[count] = ports_4010_21[i];
			count++;
		}
		for (int i = 0; i < componentreferences_4205_22.length; i++) {
			result[count] = componentreferences_4205_22[i];
			count++;
		}
		return result;
	}
	/**
	 * @see ITreeContentProvider#hasChildren(Object)
	 * Returns true if this node has any children
	 */
	public boolean hasChildren(Object arg) {
		Subsystem_c[] subsystems_4204_1 = Subsystem_c
				.getManyS_SSsOnR43(SubsystemInDomain_c.getManyS_SIDsOnR43(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg))));

		if (subsystems_4204_1.length > 0)
			return true;
		ModelClass_c[] classes_8003_2 = ModelClass_c
				.getManyO_OBJsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		if (classes_8003_2.length > 0)
			return true;
		FunctionPackage_c[] functionpackages_4204_3 = FunctionPackage_c
				.getManyS_FPKsOnR29(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		if (functionpackages_4204_3.length > 0)
			return true;
		DataTypePackage_c[] datatypepackages_4204_4 = DataTypePackage_c
				.getManyS_DPKsOnR40(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		if (datatypepackages_4204_4.length > 0)
			return true;
		ExternalEntityPackage_c[] externalentitypackages_4204_5 = ExternalEntityPackage_c
				.getManyS_EEPKsOnR36(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		if (externalentitypackages_4204_5.length > 0)
			return true;
		UserDataType_c[] userdefineddatatypes_8003_6 = UserDataType_c
				.getManyS_UDTsOnR17(DataType_c
						.getManyS_DTsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8003((Component_c) arg)));

		if (userdefineddatatypes_8003_6.length > 0)
			return true;
		Sequence_c[] sequences_4204_7 = Sequence_c.getManySQ_SsOnR913(Domain_c
				.getManyS_DOMsOnR4204(DomainAsComponent_c
						.getManyCN_DCsOnR4204((Component_c) arg)));

		if (sequences_4204_7.length > 0)
			return true;
		Sequence_c[] sequences_952_8 = Sequence_c
				.getManySQ_SsOnR952((Component_c) arg);

		if (sequences_952_8.length > 0)
			return true;
		Communication_c[] communications_4204_9 = Communication_c
				.getManyCOMM_COMMsOnR1132(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		if (communications_4204_9.length > 0)
			return true;
		Communication_c[] communications_1138_10 = Communication_c
				.getManyCOMM_COMMsOnR1138((Component_c) arg);

		if (communications_1138_10.length > 0)
			return true;
		UseCaseDiagram_c[] usecasediagrams_4204_11 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1201(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		if (usecasediagrams_4204_11.length > 0)
			return true;
		UseCaseDiagram_c[] usecasediagrams_1213_12 = UseCaseDiagram_c
				.getManyUC_UCCsOnR1213((Component_c) arg);

		if (usecasediagrams_1213_12.length > 0)
			return true;
		Activity_c[] activities_4204_13 = Activity_c
				.getManyA_AsOnR1100(Domain_c
						.getManyS_DOMsOnR4204(DomainAsComponent_c
								.getManyCN_DCsOnR4204((Component_c) arg)));

		if (activities_4204_13.length > 0)
			return true;
		Activity_c[] activities_1115_14 = Activity_c
				.getManyA_AsOnR1115((Component_c) arg);

		if (activities_1115_14.length > 0)
			return true;
		InterfacePackage_c[] interfacepackages_4206_15 = InterfacePackage_c
				.getManyIP_IPsOnR4206((Component_c) arg);

		if (interfacepackages_4206_15.length > 0)
			return true;
		Interface_c[] interfaces_8003_16 = Interface_c
				.getManyC_IsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		if (interfaces_8003_16.length > 0)
			return true;
		Package_c[] packages_8003_17 = Package_c
				.getManyEP_PKGsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		if (packages_8003_17.length > 0)
			return true;
		Component_c[] components_8003_18 = Component_c
				.getManyC_CsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		if (components_8003_18.length > 0)
			return true;
		ComponentReference_c[] componentreferences_8003_19 = ComponentReference_c
				.getManyCL_ICsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8003((Component_c) arg));

		if (componentreferences_8003_19.length > 0)
			return true;
		Component_c[] components_4202_20 = Component_c
				.getManyC_CsOnR4203(ComponentInComponent_c
						.getManyCN_CICsOnR4202((Component_c) arg));

		if (components_4202_20.length > 0)
			return true;
		Port_c[] ports_4010_21 = Port_c.getManyC_POsOnR4010((Component_c) arg);

		if (ports_4010_21.length > 0)
			return true;
		ComponentReference_c[] componentreferences_4205_22 = ComponentReference_c
				.getManyCL_ICsOnR4205((Component_c) arg);

		if (componentreferences_4205_22.length > 0)
			return true;
		return false;
	}
}
