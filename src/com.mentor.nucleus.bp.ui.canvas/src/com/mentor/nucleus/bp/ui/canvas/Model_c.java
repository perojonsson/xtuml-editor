      
package com.mentor.nucleus.bp.ui.canvas ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.ui.canvas.Model_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

import com.mentor.nucleus.bp.core.*;
import org.eclipse.swt.graphics.GC;
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.swt.graphics.Color;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_MODEL extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}
  class EV_MODEL_MOUSE_MOVED extends EV_MODEL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_MODEL_MOUSE_MOVED = 4 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_MOUSE_MOVED ;
    }
  }
  class EV_MODEL_MOUSE_RELEASED extends EV_MODEL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_MODEL_MOUSE_RELEASED = 3 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_MOUSE_RELEASED ;
    }
  }
  class EV_MODEL_MOUSE_PRESSED extends EV_MODEL
  {
    // supplemental event data
    public boolean      edi_retain_selection ;
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_MODEL_MOUSE_PRESSED = 2 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_MOUSE_PRESSED ;
    }
  }
  class EV_MODEL_DONE extends EV_MODEL
  {
    // supplemental event data
    static final int EVCD_MODEL_DONE = 6 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_DONE ;
    }
  }
  class EV_MODEL_MOUSE_EXIT extends EV_MODEL
  {
    // supplemental event data
    static final int EVCD_MODEL_MOUSE_EXIT = 22 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_MOUSE_EXIT ;
    }
  }
  class EV_MODEL_MOUSE_ENTER extends EV_MODEL
  {
    // supplemental event data
    static final int EVCD_MODEL_MOUSE_ENTER = 23 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_MOUSE_ENTER ;
    }
  }
  class EV_MODEL_SPACE_PRESSED extends EV_MODEL
  {
    // supplemental event data
    static final int EVCD_MODEL_SPACE_PRESSED = 24 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_SPACE_PRESSED ;
    }
  }
  class EV_MODEL_SPACE_RELEASED extends EV_MODEL
  {
    // supplemental event data
    static final int EVCD_MODEL_SPACE_RELEASED = 25 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_SPACE_RELEASED ;
    }
  }
  class EV_MODEL_MOUSE_CONTEXT_PRESS extends EV_MODEL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_MODEL_MOUSE_CONTEXT_PRESS = 5 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_MOUSE_CONTEXT_PRESS ;
    }
  }
  class EV_MODEL_MOUSE_MIDDLE_BUTTON_PRESS extends EV_MODEL
  {
    // supplemental event data
    static final int EVCD_MODEL_MOUSE_MIDDLE_BUTTON_PRESS = 26 ;
    public final int getEvtcode()
    {
      return EVCD_MODEL_MOUSE_MIDDLE_BUTTON_PRESS ;
    }
  }

public class Model_c extends NonRootModelElement implements timerClient_c, ActiveObject_c, IAdaptable, Cloneable
{
  // Public Constructors
  public Model_c(ModelRoot modelRoot,
       java.util.UUID         p_m_diagramid,
       int  p_m_model_type,
       java.util.UUID         p_m_ooa_id,
       int  p_m_ooa_type,
       boolean      p_m_useglobalprint,
       boolean      p_m_printmode,
       int          p_m_printrows,
       int          p_m_printcols,
       boolean      p_m_islandscape,
       int          p_m_zoomfontsize,
       boolean      p_m_gridon,
       int          p_m_selrectx,
       int          p_m_selrecty,
       int          p_m_selrectw,
       int          p_m_selrecth,
       Object p_m_represents,
       String       p_m_version,
       String       p_m_represents_path)
  {
    super(modelRoot);
       m_model_type = p_m_model_type;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ooa_id = IdAssigner.preprocessUUID(p_m_ooa_id);
       //extract 28 bit value only            
       m_ooa_idLongBased = 0xfffffff & p_m_ooa_id.getLeastSignificantBits();
       m_ooa_type = p_m_ooa_type;
       m_useglobalprint = p_m_useglobalprint;
       m_printmode = p_m_printmode;
       m_printrows = p_m_printrows;
       m_printcols = p_m_printcols;
       m_islandscape = p_m_islandscape;
       m_zoomfontsize = p_m_zoomfontsize;
       m_gridon = p_m_gridon;
       m_selrectx = p_m_selrectx;
       m_selrecty = p_m_selrecty;
       m_selrectw = p_m_selrectw;
       m_selrecth = p_m_selrecth;
       m_represents = p_m_represents;
       // default value for m_current_state
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_diagramid = IdAssigner.preprocessUUID(p_m_diagramid);
       m_version = p_m_version;
       m_represents_path = p_m_represents_path;
        
    // register with event queue poller
    Activepoller_c.register(this) ;
    Object [] key = {m_diagramid};
    addInstanceToMap(key);
  }
  static public Model_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_diagramid,
       int  p_m_model_type,
       java.util.UUID         p_m_ooa_id,
       int  p_m_ooa_type,
       boolean      p_m_useglobalprint,
       boolean      p_m_printmode,
       int          p_m_printrows,
       int          p_m_printcols,
       boolean      p_m_islandscape,
       int          p_m_zoomfontsize,
       boolean      p_m_gridon,
       int          p_m_selrectx,
       int          p_m_selrecty,
       int          p_m_selrectw,
       int          p_m_selrecth,
       Object p_m_represents,
       String       p_m_version,
       String       p_m_represents_path, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Model_c.class);
      Model_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_diagramid};
          new_inst = (Model_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_model_type = p_m_model_type;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ooa_id = IdAssigner.preprocessUUID(p_m_ooa_id);
       //extract 28 bit value only            
       new_inst.m_ooa_idLongBased = 0xfffffff & p_m_ooa_id.getLeastSignificantBits();
       new_inst.m_ooa_type = p_m_ooa_type;
       new_inst.m_useglobalprint = p_m_useglobalprint;
       new_inst.m_printmode = p_m_printmode;
       new_inst.m_printrows = p_m_printrows;
       new_inst.m_printcols = p_m_printcols;
       new_inst.m_islandscape = p_m_islandscape;
       new_inst.m_zoomfontsize = p_m_zoomfontsize;
       new_inst.m_gridon = p_m_gridon;
       new_inst.m_selrectx = p_m_selrectx;
       new_inst.m_selrecty = p_m_selrecty;
       new_inst.m_selrectw = p_m_selrectw;
       new_inst.m_selrecth = p_m_selrecth;
       new_inst.m_represents = p_m_represents;
       // default value for m_current_state
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_diagramid = IdAssigner.preprocessUUID(p_m_diagramid);
       new_inst.m_version = p_m_version;
       new_inst.m_represents_path = p_m_represents_path;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Model_c(modelRoot,
p_m_diagramid,
p_m_model_type,
p_m_ooa_id,
p_m_ooa_type,
p_m_useglobalprint,
p_m_printmode,
p_m_printrows,
p_m_printcols,
p_m_islandscape,
p_m_zoomfontsize,
p_m_gridon,
p_m_selrectx,
p_m_selrecty,
p_m_selrectw,
p_m_selrecth,
p_m_represents,
p_m_version,
p_m_represents_path
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public Model_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_diagramid,
       int  p_m_model_type,
       java.util.UUID         p_m_ooa_id,
       int  p_m_ooa_type,
       boolean      p_m_useglobalprint,
       boolean      p_m_printmode,
       int          p_m_printrows,
       int          p_m_printcols,
       boolean      p_m_islandscape,
       int          p_m_zoomfontsize,
       boolean      p_m_gridon,
       int          p_m_selrectx,
       int          p_m_selrecty,
       int          p_m_selrectw,
       int          p_m_selrecth,
       Object p_m_represents,
       String       p_m_version,
       String       p_m_represents_path){
    InstanceList instances = modelRoot.getInstanceList(Model_c.class);
    Model_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_diagramid
            };
        source = (Model_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_model_type = p_m_model_type;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ooa_id = IdAssigner.preprocessUUID(p_m_ooa_id);
       //extract 28 bit value only            
       source.m_ooa_idLongBased = 0xfffffff & p_m_ooa_id.getLeastSignificantBits();
       source.m_ooa_type = p_m_ooa_type;
       source.m_useglobalprint = p_m_useglobalprint;
       source.m_printmode = p_m_printmode;
       source.m_printrows = p_m_printrows;
       source.m_printcols = p_m_printcols;
       source.m_islandscape = p_m_islandscape;
       source.m_zoomfontsize = p_m_zoomfontsize;
       source.m_gridon = p_m_gridon;
       source.m_selrectx = p_m_selrectx;
       source.m_selrecty = p_m_selrecty;
       source.m_selrectw = p_m_selrectw;
       source.m_selrecth = p_m_selrecth;
       source.m_represents = p_m_represents;
       // default value for m_current_state
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_diagramid = IdAssigner.preprocessUUID(p_m_diagramid);
       source.m_version = p_m_version;
       source.m_represents_path = p_m_represents_path;
        
           return source ;
        }
      }
      // there is no instance matching the id
    Model_c new_inst = new Model_c(modelRoot,
p_m_diagramid,
p_m_model_type,
p_m_ooa_id,
p_m_ooa_type,
p_m_useglobalprint,
p_m_printmode,
p_m_printrows,
p_m_printcols,
p_m_islandscape,
p_m_zoomfontsize,
p_m_gridon,
p_m_selrectx,
p_m_selrecty,
p_m_selrectw,
p_m_selrecth,
p_m_represents,
p_m_version,
p_m_represents_path
);
    return new_inst;
  }
  public Model_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_model_type = Modeltype_c.OOA_UNINITIALIZED_ENUM;
     m_ooa_id = IdAssigner.NULL_UUID;   
     m_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
     m_diagramid = IdAssigner.NULL_UUID;   
     m_version = "";   
     m_represents_path = "";   
    Object [] key = {m_diagramid};
    addInstanceToMap(key);
    // register with event queue poller
    Activepoller_c.register(this) ;
  }

  public Object getInstanceKey() {
    Object [] key =  {m_diagramid};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_diagramid !=  p_newKey ){
	
		m_diagramid = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  


  // Run Entry Point
  public boolean poll()
  {
      if (!eventQueue.isEmpty() || !selfEventQueue.isEmpty())
      { // an event queue is not empty
        procEvent() ;
        return true;
      } else {
        return false;
      }
  }

  public boolean equals (Object elem) {
     if (!(elem instanceof Model_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Model_c)) {
           return false;
       }
       
       Model_c me = (Model_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getDiagramid()) || IdAssigner.NULL_UUID.equals(((Model_c)elem).getDiagramid())) && this != elem)) {
      	return false;
      }
      if (!getDiagramid().equals(((Model_c)elem).getDiagramid())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Model_c)) {
           return false;
       }
       
       Model_c me = (Model_c)elem;
      if (!getDiagramidCachedValue().equals(((Model_c)elem).getDiagramidCachedValue())) return false;
      return true;
    }


  // Attributes
  private int  m_model_type ;
  private java.util.UUID         m_ooa_id ;
  private long m_ooa_idLongBased ;
  private int  m_ooa_type ;
  private boolean      m_useglobalprint ;
  private boolean      m_printmode ;
  private int          m_printrows ;
  private int          m_printcols ;
  private boolean      m_islandscape ;
  private int          m_zoomfontsize ;
  private boolean      m_gridon ;
  private int          m_selrectx ;
  private int          m_selrecty ;
  private int          m_selrectw ;
  private int          m_selrecth ;
  private Object m_represents ;
  private java.util.UUID         m_diagramid ;
  private String       m_version ;
  private String       m_represents_path ;
      
// declare association references from this class
  
  
    
// referring navigation

Diagram_c IsSupertypeDiagram ;
public void relateAcrossR18To(Diagram_c target)
{
	relateAcrossR18To(target, true);
}
public void relateAcrossR18To(Diagram_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypeDiagram) return;  // already related

    if ( IsSupertypeDiagram != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypeDiagram != null) {
    
        IsSupertypeDiagram.clearBackPointerR18To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofgraphics.log.println(ILogger.CONSISTENCY, 
			"Model_c.relateAcrossR18To(Diagram_c target)", 
			"Relate performed across R18 from Model to Diagram without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypeDiagram = target ;
        m_diagramid = target.getDiagramid();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR18To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "18", "");
        Ooaofgraphics.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR18From(Diagram_c target)
{
	unrelateAcrossR18From(target, true);
}
public void unrelateAcrossR18From(Diagram_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypeDiagram == null) return;  // already unrelated
	
	if (target != IsSupertypeDiagram) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CanvasPlugin.logError("Tried to unrelate from non-related instance across R18", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR18To(this);
    }
    

      if(IsSupertypeDiagram != null) {
      
        m_diagramid = IsSupertypeDiagram.getDiagramid();
        IsSupertypeDiagram = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "18", "");
        Ooaofgraphics.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Model_c getOneGD_MDOnR18(Diagram_c [] targets)
{
    return getOneGD_MDOnR18(targets, null);
}

public static Model_c getOneGD_MDOnR18(Diagram_c [] targets, ClassQueryInterface_c test)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneGD_MDOnR18(targets[i], test);
        }
    }

    return ret_val;
}

public static Model_c getOneGD_MDOnR18(Diagram_c target)
{
  return getOneGD_MDOnR18(target, null);
}

public static Model_c getOneGD_MDOnR18(Diagram_c target, boolean loadComponent)
{
    return getOneGD_MDOnR18(target.getModelRoot(), target, null, loadComponent);
}

public static Model_c getOneGD_MDOnR18(Diagram_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneGD_MDOnR18(target.getModelRoot(), target, test);
  }
  return null;
}

public static Model_c getOneGD_MDOnR18(ModelRoot modelRoot, Diagram_c target, ClassQueryInterface_c test)
{
	return getOneGD_MDOnR18(modelRoot, target, test, true);
}

public static Model_c getOneGD_MDOnR18(ModelRoot modelRoot, Diagram_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneGD_MDOnR18(modelRoot,target,test);
}
private static Model_c find_getOneGD_MDOnR18(ModelRoot modelRoot, Diagram_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Model_c source = (Model_c)target.backPointer_IsSubtypeModelIsSubtype_R18;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Model_c [] getManyGD_MDsOnR18(Diagram_c [] targets)
{
  return getManyGD_MDsOnR18(targets, null);
}
public static Model_c [] getManyGD_MDsOnR18(Diagram_c [] targets, boolean loadComponent)
{
  return getManyGD_MDsOnR18(targets, null, loadComponent);
}
public static Model_c [] getManyGD_MDsOnR18(Diagram_c [] targets, ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR18(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR18(Diagram_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Model_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Model_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Model_c source = (Model_c)targets[i].backPointer_IsSubtypeModelIsSubtype_R18;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Model_c[] ret_set = new Model_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Model_c[0];
  }
  }

public static Model_c [] getManyGD_MDsOnR18(Diagram_c target)
{
  if (target != null) {
    Diagram_c [] targetArray = new Diagram_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR18(targetArray);
  } else {
    Model_c [] result = new Model_c [0] ;
  return result ;
}
}

public static Model_c [] getManyGD_MDsOnR18(Diagram_c target, boolean loadComponent)
{
  if (target != null) {
    Diagram_c [] targetArray = new Diagram_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR18(targetArray, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
  return result ;
}
}



  
    
// referring navigation

ModelSpecification_c IsInstanceOfModelSpecification ;
public void relateAcrossR9To(ModelSpecification_c target)
{
	relateAcrossR9To(target, true);
}
public void relateAcrossR9To(ModelSpecification_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsInstanceOfModelSpecification) return;  // already related

    if ( IsInstanceOfModelSpecification != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsInstanceOfModelSpecification != null) {
    
        IsInstanceOfModelSpecification.clearBackPointerR9To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofgraphics.log.println(ILogger.CONSISTENCY, 
			"Model_c.relateAcrossR9To(ModelSpecification_c target)", 
			"Relate performed across R9 from Model to Model Specification without unrelate of prior instance.");  
		}
    }
                
    	IsInstanceOfModelSpecification = target ;
        m_model_type = target.getModel_type();
        m_ooa_type = target.getOoa_type();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR9To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "9", "");
        Ooaofgraphics.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR9From(ModelSpecification_c target)
{
	unrelateAcrossR9From(target, true);
}
public void unrelateAcrossR9From(ModelSpecification_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsInstanceOfModelSpecification == null) return;  // already unrelated
	
	if (target != IsInstanceOfModelSpecification) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CanvasPlugin.logError("Tried to unrelate from non-related instance across R9", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR9To(this);
    }
    

      if(IsInstanceOfModelSpecification != null) {
      
        m_model_type = IsInstanceOfModelSpecification.getModel_type();
        m_ooa_type = IsInstanceOfModelSpecification.getOoa_type();
        IsInstanceOfModelSpecification = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "9", "");
        Ooaofgraphics.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Model_c getOneGD_MDOnR9(ModelSpecification_c [] targets)
{
    return getOneGD_MDOnR9(targets, null);
}

public static Model_c getOneGD_MDOnR9(ModelSpecification_c [] targets, ClassQueryInterface_c test)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneGD_MDOnR9(targets[i], test);
        }
    }

    return ret_val;
}

public static Model_c getOneGD_MDOnR9(ModelSpecification_c target)
{
  return getOneGD_MDOnR9(target, null);
}

public static Model_c getOneGD_MDOnR9(ModelSpecification_c target, boolean loadComponent)
{
    return getOneGD_MDOnR9(target.getModelRoot(), target, null, loadComponent);
}

public static Model_c getOneGD_MDOnR9(ModelSpecification_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneGD_MDOnR9(target.getModelRoot(), target, test);
  }
  return null;
}

public static Model_c getOneGD_MDOnR9(ModelRoot modelRoot, ModelSpecification_c target, ClassQueryInterface_c test)
{
	return getOneGD_MDOnR9(modelRoot, target, test, true);
}

public static Model_c getOneGD_MDOnR9(ModelRoot modelRoot, ModelSpecification_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneGD_MDOnR9(modelRoot,target,test);
}
private static Model_c find_getOneGD_MDOnR9(ModelRoot modelRoot, ModelSpecification_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_HasInstanceModelHasInstance_R9) {
	    for ( int i = 0; i < target.backPointer_HasInstanceModelHasInstance_R9.size(); ++i ) {
	      Model_c source = (Model_c)target.backPointer_HasInstanceModelHasInstance_R9.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Model_c [] getManyGD_MDsOnR9(ModelSpecification_c [] targets)
{
  return getManyGD_MDsOnR9(targets, null);
}
public static Model_c [] getManyGD_MDsOnR9(ModelSpecification_c [] targets, boolean loadComponent)
{
  return getManyGD_MDsOnR9(targets, null, loadComponent);
}
public static Model_c [] getManyGD_MDsOnR9(ModelSpecification_c [] targets, ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR9(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR9(ModelSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Model_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Model_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_HasInstanceModelHasInstance_R9) {
	    for (int j = 0; j < targets[i].backPointer_HasInstanceModelHasInstance_R9.size(); ++j) {
	      Model_c source = (Model_c)targets[i].backPointer_HasInstanceModelHasInstance_R9.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Model_c[] ret_set = new Model_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Model_c[0];
  }
  }

public static Model_c [] getManyGD_MDsOnR9(ModelSpecification_c target)
{
  return getManyGD_MDsOnR9(target, null);
}

public static Model_c [] getManyGD_MDsOnR9(ModelSpecification_c target, boolean loadComponent)
{
  return getManyGD_MDsOnR9(target, null, loadComponent);
}

public static Model_c [] getManyGD_MDsOnR9(ModelSpecification_c target, ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR9(target, test, true);
}

public static Model_c [] getManyGD_MDsOnR9(ModelSpecification_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Model_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_HasInstanceModelHasInstance_R9) {
    for (int i = 0; i < target.backPointer_HasInstanceModelHasInstance_R9.size(); ++i) {
      Model_c source = (Model_c)target.backPointer_HasInstanceModelHasInstance_R9.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Model_c[] ret_set = new Model_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Model_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<WaypointInMove_c> backPointer_IsMovingWaypointInMoveIsMoving_R24 = new ArrayList<WaypointInMove_c>();

public void setWaypointInMoveOrderInChildListR24(WaypointInMove_c target, int index) {
	unrelateAcrossR24From(target);
	WaypointInMove_c[] elements = WaypointInMove_c.getManyGD_WIMsOnR24(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR24From((WaypointInMove_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR24To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR24To((WaypointInMove_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR24To(WaypointInMove_c target)
{
  if (target != null) {
    target.relateAcrossR24To(this, true) ;
  }
}

public void relateAcrossR24To(WaypointInMove_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR24To(this, notifyChanges) ;
  }
}

public void setBackPointerR24To(WaypointInMove_c target)
{
  	synchronized (backPointer_IsMovingWaypointInMoveIsMoving_R24) {
		backPointer_IsMovingWaypointInMoveIsMoving_R24.add(target);
	}
}

public void unrelateAcrossR24From(WaypointInMove_c target)
{
  if (target != null) {
    target.unrelateAcrossR24From(this, true) ;
  }
}

public void unrelateAcrossR24From(WaypointInMove_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR24From(this, notifyChanges) ;
  }
}

public void clearBackPointerR24To(WaypointInMove_c target)
{
  synchronized (backPointer_IsMovingWaypointInMoveIsMoving_R24) {
	    backPointer_IsMovingWaypointInMoveIsMoving_R24.remove(target);
	}
}

public static Model_c getOneGD_MDOnR24(WaypointInMove_c [] targets)
{
    return getOneGD_MDOnR24(targets, null);
}

public static Model_c getOneGD_MDOnR24(WaypointInMove_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR24(targets, test, true);
}

public static Model_c getOneGD_MDOnR24(WaypointInMove_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR24(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR24(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR24(WaypointInMove_c target)
{
	return getOneGD_MDOnR24(target, true);
}
public static Model_c getOneGD_MDOnR24(WaypointInMove_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsMovedByModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR24(WaypointInMove_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR24(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR24(WaypointInMove_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
    Model_c associate = targets[i].IsMovedByModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR24(WaypointInMove_c [] targets)
{
  return getManyGD_MDsOnR24(targets, null);
}

public static Model_c [] getManyGD_MDsOnR24(WaypointInMove_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    WaypointInMove_c [] targetArray = new WaypointInMove_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR24(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR24(WaypointInMove_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR24(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR24(WaypointInMove_c target)
{
    return getManyGD_MDsOnR24(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR24(WaypointInMove_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR24(target, null, loadComponent);
}

public static Model_c getOneGD_MDOnR24(Waypoint_c target)
{
  return Model_c.getOneGD_MDOnR24(WaypointInMove_c.getOneGD_WIMOnR24(target)) ;
}

public static Model_c getOneGD_MDOnR24(Waypoint_c target,
    ClassQueryInterface_c test)
{
  return Model_c.getOneGD_MDOnR24(WaypointInMove_c.getManyGD_WIMsOnR24(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<TerminalSpecification_c> backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207 = new ArrayList<TerminalSpecification_c>();

public void setTerminalSpecificationOrderInChildListR207(TerminalSpecification_c target, int index) {
	unrelateAcrossR207From(target);
	TerminalSpecification_c[] elements = TerminalSpecification_c.getManyTS_TSPsOnR207(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR207From((TerminalSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR207To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR207To((TerminalSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR207To(TerminalSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR207To(this, true) ;
  }
}

public void relateAcrossR207To(TerminalSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR207To(this, notifyChanges) ;
  }
}

public void setBackPointerR207To(TerminalSpecification_c target)
{
  	synchronized (backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207) {
		backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207.add(target);
	}
}

public void unrelateAcrossR207From(TerminalSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR207From(this, true) ;
  }
}

public void unrelateAcrossR207From(TerminalSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR207From(this, notifyChanges) ;
  }
}

public void clearBackPointerR207To(TerminalSpecification_c target)
{
  synchronized (backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207) {
	    backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207.remove(target);
	}
}

public static Model_c getOneGD_MDOnR207(TerminalSpecification_c [] targets)
{
    return getOneGD_MDOnR207(targets, null);
}

public static Model_c getOneGD_MDOnR207(TerminalSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR207(targets, test, true);
}

public static Model_c getOneGD_MDOnR207(TerminalSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR207(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR207(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR207(TerminalSpecification_c target)
{
	return getOneGD_MDOnR207(target, true);
}
public static Model_c getOneGD_MDOnR207(TerminalSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.SpecifiesTerminationOfConnectorOnModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR207(TerminalSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR207(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR207(TerminalSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
    Model_c associate = targets[i].SpecifiesTerminationOfConnectorOnModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR207(TerminalSpecification_c [] targets)
{
  return getManyGD_MDsOnR207(targets, null);
}

public static Model_c [] getManyGD_MDsOnR207(TerminalSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    TerminalSpecification_c [] targetArray = new TerminalSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR207(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR207(TerminalSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR207(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR207(TerminalSpecification_c target)
{
    return getManyGD_MDsOnR207(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR207(TerminalSpecification_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR207(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Elementstyle_c> backPointer_ConfiguredByElementstyleConfiguredBy_R402 = new ArrayList<Elementstyle_c>();

public void setElementstyleOrderInChildListR402(Elementstyle_c target, int index) {
	unrelateAcrossR402From(target);
	Elementstyle_c[] elements = Elementstyle_c.getManySTY_SsOnR402(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR402From((Elementstyle_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR402To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR402To((Elementstyle_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR402To(Elementstyle_c target)
{
  if (target != null) {
    target.relateAcrossR402To(this, true) ;
  }
}

public void relateAcrossR402To(Elementstyle_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR402To(this, notifyChanges) ;
  }
}

public void setBackPointerR402To(Elementstyle_c target)
{
  	synchronized (backPointer_ConfiguredByElementstyleConfiguredBy_R402) {
		backPointer_ConfiguredByElementstyleConfiguredBy_R402.add(target);
	}
}

public void unrelateAcrossR402From(Elementstyle_c target)
{
  if (target != null) {
    target.unrelateAcrossR402From(this, true) ;
  }
}

public void unrelateAcrossR402From(Elementstyle_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR402From(this, notifyChanges) ;
  }
}

public void clearBackPointerR402To(Elementstyle_c target)
{
  synchronized (backPointer_ConfiguredByElementstyleConfiguredBy_R402) {
	    backPointer_ConfiguredByElementstyleConfiguredBy_R402.remove(target);
	}
}

public static Model_c getOneGD_MDOnR402(Elementstyle_c [] targets)
{
    return getOneGD_MDOnR402(targets, null);
}

public static Model_c getOneGD_MDOnR402(Elementstyle_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR402(targets, test, true);
}

public static Model_c getOneGD_MDOnR402(Elementstyle_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR402(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR402(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR402(Elementstyle_c target)
{
	return getOneGD_MDOnR402(target, true);
}
public static Model_c getOneGD_MDOnR402(Elementstyle_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ConfiguresModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR402(Elementstyle_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR402(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR402(Elementstyle_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ConfiguresModel == null)
	  targets[i].loadProxy();
    Model_c associate = targets[i].ConfiguresModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR402(Elementstyle_c [] targets)
{
  return getManyGD_MDsOnR402(targets, null);
}

public static Model_c [] getManyGD_MDsOnR402(Elementstyle_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Elementstyle_c [] targetArray = new Elementstyle_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR402(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR402(Elementstyle_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR402(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR402(Elementstyle_c target)
{
    return getManyGD_MDsOnR402(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR402(Elementstyle_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR402(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<TextInMove_c> backPointer_TextInMove_R14 = new ArrayList<TextInMove_c>();

public void setTextInMoveOrderInChildListR14(TextInMove_c target, int index) {
	unrelateAcrossR14From(target);
	TextInMove_c[] elements = TextInMove_c.getManyGD_TIMsOnR14(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR14From((TextInMove_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR14To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR14To((TextInMove_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR14To(TextInMove_c target)
{
  if (target != null) {
    target.relateAcrossR14To(this, true) ;
  }
}

public void relateAcrossR14To(TextInMove_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR14To(this, notifyChanges) ;
  }
}

public void setBackPointerR14To(TextInMove_c target)
{
  	synchronized (backPointer_TextInMove_R14) {
		backPointer_TextInMove_R14.add(target);
	}
}

public void unrelateAcrossR14From(TextInMove_c target)
{
  if (target != null) {
    target.unrelateAcrossR14From(this, true) ;
  }
}

public void unrelateAcrossR14From(TextInMove_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR14From(this, notifyChanges) ;
  }
}

public void clearBackPointerR14To(TextInMove_c target)
{
  synchronized (backPointer_TextInMove_R14) {
	    backPointer_TextInMove_R14.remove(target);
	}
}

public static Model_c getOneGD_MDOnR14(TextInMove_c [] targets)
{
    return getOneGD_MDOnR14(targets, null);
}

public static Model_c getOneGD_MDOnR14(TextInMove_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR14(targets, test, true);
}

public static Model_c getOneGD_MDOnR14(TextInMove_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR14(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR14(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR14(TextInMove_c target)
{
	return getOneGD_MDOnR14(target, true);
}
public static Model_c getOneGD_MDOnR14(TextInMove_c target, boolean loadComponent)
{
  if (target != null) {
    return target.Model ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR14(TextInMove_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR14(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR14(TextInMove_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
    Model_c associate = targets[i].Model;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR14(TextInMove_c [] targets)
{
  return getManyGD_MDsOnR14(targets, null);
}

public static Model_c [] getManyGD_MDsOnR14(TextInMove_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    TextInMove_c [] targetArray = new TextInMove_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR14(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR14(TextInMove_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR14(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR14(TextInMove_c target)
{
    return getManyGD_MDsOnR14(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR14(TextInMove_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR14(target, null, loadComponent);
}

public static Model_c getOneGD_MDOnR14(FloatingText_c target)
{
  return Model_c.getOneGD_MDOnR14(TextInMove_c.getOneGD_TIMOnR14(target)) ;
}

public static Model_c getOneGD_MDOnR14(FloatingText_c target,
    ClassQueryInterface_c test)
{
  return Model_c.getOneGD_MDOnR14(TextInMove_c.getManyGD_TIMsOnR14(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<GraphicalElement_c> backPointer_ContainsGraphicalElementContains_R1 = new ArrayList<GraphicalElement_c>();

public void setGraphicalElementOrderInChildListR1(GraphicalElement_c target, int index) {
	unrelateAcrossR1From(target);
	GraphicalElement_c[] elements = GraphicalElement_c.getManyGD_GEsOnR1(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1From((GraphicalElement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1To((GraphicalElement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1To(GraphicalElement_c target)
{
  if (target != null) {
    target.relateAcrossR1To(this, true) ;
  }
}

public void relateAcrossR1To(GraphicalElement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1To(this, notifyChanges) ;
  }
}

public void setBackPointerR1To(GraphicalElement_c target)
{
  	synchronized (backPointer_ContainsGraphicalElementContains_R1) {
		backPointer_ContainsGraphicalElementContains_R1.add(target);
	}
}

public void unrelateAcrossR1From(GraphicalElement_c target)
{
  if (target != null) {
    target.unrelateAcrossR1From(this, true) ;
  }
}

public void unrelateAcrossR1From(GraphicalElement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1To(GraphicalElement_c target)
{
  synchronized (backPointer_ContainsGraphicalElementContains_R1) {
	    backPointer_ContainsGraphicalElementContains_R1.remove(target);
	}
}

public static Model_c getOneGD_MDOnR1(GraphicalElement_c [] targets)
{
    return getOneGD_MDOnR1(targets, null);
}

public static Model_c getOneGD_MDOnR1(GraphicalElement_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR1(targets, test, true);
}

public static Model_c getOneGD_MDOnR1(GraphicalElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR1(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR1(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR1(GraphicalElement_c target)
{
	return getOneGD_MDOnR1(target, true);
}
public static Model_c getOneGD_MDOnR1(GraphicalElement_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsPartOfModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR1(GraphicalElement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR1(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR1(GraphicalElement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsPartOfModel == null)
	  targets[i].loadProxy();
    Model_c associate = targets[i].IsPartOfModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR1(GraphicalElement_c [] targets)
{
  return getManyGD_MDsOnR1(targets, null);
}

public static Model_c [] getManyGD_MDsOnR1(GraphicalElement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    GraphicalElement_c [] targetArray = new GraphicalElement_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR1(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR1(GraphicalElement_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR1(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR1(GraphicalElement_c target)
{
    return getManyGD_MDsOnR1(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR1(GraphicalElement_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR1(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ElementInResize_c> backPointer_IsResizingElementInResizeIsResizing_R12 = new ArrayList<ElementInResize_c>();

public void setElementInResizeOrderInChildListR12(ElementInResize_c target, int index) {
	unrelateAcrossR12From(target);
	ElementInResize_c[] elements = ElementInResize_c.getManyGD_EIRsOnR12(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR12From((ElementInResize_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR12To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR12To((ElementInResize_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR12To(ElementInResize_c target)
{
  if (target != null) {
    target.relateAcrossR12To(this, true) ;
  }
}

public void relateAcrossR12To(ElementInResize_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR12To(this, notifyChanges) ;
  }
}

public void setBackPointerR12To(ElementInResize_c target)
{
  	synchronized (backPointer_IsResizingElementInResizeIsResizing_R12) {
		backPointer_IsResizingElementInResizeIsResizing_R12.add(target);
	}
}

public void unrelateAcrossR12From(ElementInResize_c target)
{
  if (target != null) {
    target.unrelateAcrossR12From(this, true) ;
  }
}

public void unrelateAcrossR12From(ElementInResize_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR12From(this, notifyChanges) ;
  }
}

public void clearBackPointerR12To(ElementInResize_c target)
{
  synchronized (backPointer_IsResizingElementInResizeIsResizing_R12) {
	    backPointer_IsResizingElementInResizeIsResizing_R12.remove(target);
	}
}

public static Model_c getOneGD_MDOnR12(ElementInResize_c [] targets)
{
    return getOneGD_MDOnR12(targets, null);
}

public static Model_c getOneGD_MDOnR12(ElementInResize_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR12(targets, test, true);
}

public static Model_c getOneGD_MDOnR12(ElementInResize_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR12(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR12(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR12(ElementInResize_c target)
{
	return getOneGD_MDOnR12(target, true);
}
public static Model_c getOneGD_MDOnR12(ElementInResize_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsResizedInModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR12(ElementInResize_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR12(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR12(ElementInResize_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
    Model_c associate = targets[i].IsResizedInModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR12(ElementInResize_c [] targets)
{
  return getManyGD_MDsOnR12(targets, null);
}

public static Model_c [] getManyGD_MDsOnR12(ElementInResize_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ElementInResize_c [] targetArray = new ElementInResize_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR12(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR12(ElementInResize_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR12(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR12(ElementInResize_c target)
{
    return getManyGD_MDsOnR12(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR12(ElementInResize_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR12(target, null, loadComponent);
}

public static Model_c getOneGD_MDOnR12(GraphicalElement_c target)
{
  return Model_c.getOneGD_MDOnR12(ElementInResize_c.getOneGD_EIROnR12(target)) ;
}

public static Model_c getOneGD_MDOnR12(GraphicalElement_c target,
    ClassQueryInterface_c test)
{
  return Model_c.getOneGD_MDOnR12(ElementInResize_c.getManyGD_EIRsOnR12(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<ElementInMove_c> backPointer_IsMovingElementInMoveIsMoving_R25 = new ArrayList<ElementInMove_c>();

public void setElementInMoveOrderInChildListR25(ElementInMove_c target, int index) {
	unrelateAcrossR25From(target);
	ElementInMove_c[] elements = ElementInMove_c.getManyGD_EIMsOnR25(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR25From((ElementInMove_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR25To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR25To((ElementInMove_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR25To(ElementInMove_c target)
{
  if (target != null) {
    target.relateAcrossR25To(this, true) ;
  }
}

public void relateAcrossR25To(ElementInMove_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR25To(this, notifyChanges) ;
  }
}

public void setBackPointerR25To(ElementInMove_c target)
{
  	synchronized (backPointer_IsMovingElementInMoveIsMoving_R25) {
		backPointer_IsMovingElementInMoveIsMoving_R25.add(target);
	}
}

public void unrelateAcrossR25From(ElementInMove_c target)
{
  if (target != null) {
    target.unrelateAcrossR25From(this, true) ;
  }
}

public void unrelateAcrossR25From(ElementInMove_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR25From(this, notifyChanges) ;
  }
}

public void clearBackPointerR25To(ElementInMove_c target)
{
  synchronized (backPointer_IsMovingElementInMoveIsMoving_R25) {
	    backPointer_IsMovingElementInMoveIsMoving_R25.remove(target);
	}
}

public static Model_c getOneGD_MDOnR25(ElementInMove_c [] targets)
{
    return getOneGD_MDOnR25(targets, null);
}

public static Model_c getOneGD_MDOnR25(ElementInMove_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR25(targets, test, true);
}

public static Model_c getOneGD_MDOnR25(ElementInMove_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR25(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR25(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR25(ElementInMove_c target)
{
	return getOneGD_MDOnR25(target, true);
}
public static Model_c getOneGD_MDOnR25(ElementInMove_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsMovingInModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR25(ElementInMove_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR25(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR25(ElementInMove_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
    Model_c associate = targets[i].IsMovingInModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR25(ElementInMove_c [] targets)
{
  return getManyGD_MDsOnR25(targets, null);
}

public static Model_c [] getManyGD_MDsOnR25(ElementInMove_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ElementInMove_c [] targetArray = new ElementInMove_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR25(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR25(ElementInMove_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR25(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR25(ElementInMove_c target)
{
    return getManyGD_MDsOnR25(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR25(ElementInMove_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR25(target, null, loadComponent);
}

public static Model_c getOneGD_MDOnR25(GraphicalElement_c target)
{
  return Model_c.getOneGD_MDOnR25(ElementInMove_c.getOneGD_EIMOnR25(target)) ;
}

public static Model_c getOneGD_MDOnR25(GraphicalElement_c target,
    ClassQueryInterface_c test)
{
  return Model_c.getOneGD_MDOnR25(ElementInMove_c.getManyGD_EIMsOnR25(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<ElementInSuppression_c> backPointer_ElementInSuppression_R32 = new ArrayList<ElementInSuppression_c>();

public void setElementInSuppressionOrderInChildListR32(ElementInSuppression_c target, int index) {
	unrelateAcrossR32From(target);
	ElementInSuppression_c[] elements = ElementInSuppression_c.getManyGD_EISsOnR32(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR32From((ElementInSuppression_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR32To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR32To((ElementInSuppression_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR32To(ElementInSuppression_c target)
{
  if (target != null) {
    target.relateAcrossR32To(this, true) ;
  }
}

public void relateAcrossR32To(ElementInSuppression_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR32To(this, notifyChanges) ;
  }
}

public void setBackPointerR32To(ElementInSuppression_c target)
{
  	synchronized (backPointer_ElementInSuppression_R32) {
		backPointer_ElementInSuppression_R32.add(target);
	}
}

public void unrelateAcrossR32From(ElementInSuppression_c target)
{
  if (target != null) {
    target.unrelateAcrossR32From(this, true) ;
  }
}

public void unrelateAcrossR32From(ElementInSuppression_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR32From(this, notifyChanges) ;
  }
}

public void clearBackPointerR32To(ElementInSuppression_c target)
{
  synchronized (backPointer_ElementInSuppression_R32) {
	    backPointer_ElementInSuppression_R32.remove(target);
	}
}

public static Model_c getOneGD_MDOnR32(ElementInSuppression_c [] targets)
{
    return getOneGD_MDOnR32(targets, null);
}

public static Model_c getOneGD_MDOnR32(ElementInSuppression_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR32(targets, test, true);
}

public static Model_c getOneGD_MDOnR32(ElementInSuppression_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR32(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR32(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR32(ElementInSuppression_c target)
{
	return getOneGD_MDOnR32(target, true);
}
public static Model_c getOneGD_MDOnR32(ElementInSuppression_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.Model ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR32(ElementInSuppression_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR32(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR32(ElementInSuppression_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].Model == null)
	  targets[i].loadProxy();
    Model_c associate = targets[i].Model;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR32(ElementInSuppression_c [] targets)
{
  return getManyGD_MDsOnR32(targets, null);
}

public static Model_c [] getManyGD_MDsOnR32(ElementInSuppression_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ElementInSuppression_c [] targetArray = new ElementInSuppression_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR32(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR32(ElementInSuppression_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR32(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR32(ElementInSuppression_c target)
{
    return getManyGD_MDsOnR32(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR32(ElementInSuppression_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR32(target, null, loadComponent);
}

public static Model_c getOneGD_MDOnR32(GraphicalElement_c target)
{
  return Model_c.getOneGD_MDOnR32(ElementInSuppression_c.getOneGD_EISOnR32(target)) ;
}

public static Model_c getOneGD_MDOnR32(GraphicalElement_c target,
    ClassQueryInterface_c test)
{
  return Model_c.getOneGD_MDOnR32(ElementInSuppression_c.getManyGD_EISsOnR32(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<Layer_c> backPointer_ContentsDisplayedInLayerContentsDisplayedIn_R34 = new ArrayList<Layer_c>();

public void setLayerOrderInChildListR34(Layer_c target, int index) {
	unrelateAcrossR34From(target);
	Layer_c[] elements = Layer_c.getManyGD_LAYsOnR34(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR34From((Layer_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR34To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR34To((Layer_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR34To(Layer_c target)
{
  if (target != null) {
    target.relateAcrossR34To(this, true) ;
  }
}

public void relateAcrossR34To(Layer_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR34To(this, notifyChanges) ;
  }
}

public void setBackPointerR34To(Layer_c target)
{
  	synchronized (backPointer_ContentsDisplayedInLayerContentsDisplayedIn_R34) {
		backPointer_ContentsDisplayedInLayerContentsDisplayedIn_R34.add(target);
	}
}

public void unrelateAcrossR34From(Layer_c target)
{
  if (target != null) {
    target.unrelateAcrossR34From(this, true) ;
  }
}

public void unrelateAcrossR34From(Layer_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR34From(this, notifyChanges) ;
  }
}

public void clearBackPointerR34To(Layer_c target)
{
  synchronized (backPointer_ContentsDisplayedInLayerContentsDisplayedIn_R34) {
	    backPointer_ContentsDisplayedInLayerContentsDisplayedIn_R34.remove(target);
	}
}

public static Model_c getOneGD_MDOnR34(Layer_c [] targets)
{
    return getOneGD_MDOnR34(targets, null);
}

public static Model_c getOneGD_MDOnR34(Layer_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR34(targets, test, true);
}

public static Model_c getOneGD_MDOnR34(Layer_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR34(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR34(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR34(Layer_c target)
{
	return getOneGD_MDOnR34(target, true);
}
public static Model_c getOneGD_MDOnR34(Layer_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ContainsElementsOfModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR34(Layer_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR34(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR34(Layer_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ContainsElementsOfModel == null)
	  targets[i].loadProxy();
    Model_c associate = targets[i].ContainsElementsOfModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR34(Layer_c [] targets)
{
  return getManyGD_MDsOnR34(targets, null);
}

public static Model_c [] getManyGD_MDsOnR34(Layer_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Layer_c [] targetArray = new Layer_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR34(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR34(Layer_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR34(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR34(Layer_c target)
{
    return getManyGD_MDsOnR34(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR34(Layer_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR34(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ModelTool_c> backPointer_HasAssignedModelToolHasAssigned_R100 = new ArrayList<ModelTool_c>();

public void setModelToolOrderInChildListR100(ModelTool_c target, int index) {
	unrelateAcrossR100From(target);
	ModelTool_c[] elements = ModelTool_c.getManyCT_MTLsOnR100(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR100From((ModelTool_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR100To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR100To((ModelTool_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR100To(ModelTool_c target)
{
  if (target != null) {
    target.relateAcrossR100To(this, true) ;
  }
}

public void relateAcrossR100To(ModelTool_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR100To(this, notifyChanges) ;
  }
}

public void setBackPointerR100To(ModelTool_c target)
{
  	synchronized (backPointer_HasAssignedModelToolHasAssigned_R100) {
		backPointer_HasAssignedModelToolHasAssigned_R100.add(target);
	}
}

public void unrelateAcrossR100From(ModelTool_c target)
{
  if (target != null) {
    target.unrelateAcrossR100From(this, true) ;
  }
}

public void unrelateAcrossR100From(ModelTool_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR100From(this, notifyChanges) ;
  }
}

public void clearBackPointerR100To(ModelTool_c target)
{
  synchronized (backPointer_HasAssignedModelToolHasAssigned_R100) {
	    backPointer_HasAssignedModelToolHasAssigned_R100.remove(target);
	}
}

public static Model_c getOneGD_MDOnR100(ModelTool_c [] targets)
{
    return getOneGD_MDOnR100(targets, null);
}

public static Model_c getOneGD_MDOnR100(ModelTool_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR100(targets, test, true);
}

public static Model_c getOneGD_MDOnR100(ModelTool_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR100(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR100(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR100(ModelTool_c target)
{
	return getOneGD_MDOnR100(target, true);
}
public static Model_c getOneGD_MDOnR100(ModelTool_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsAssignedToModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR100(ModelTool_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR100(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR100(ModelTool_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
    Model_c associate = targets[i].IsAssignedToModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR100(ModelTool_c [] targets)
{
  return getManyGD_MDsOnR100(targets, null);
}

public static Model_c [] getManyGD_MDsOnR100(ModelTool_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ModelTool_c [] targetArray = new ModelTool_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR100(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR100(ModelTool_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR100(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR100(ModelTool_c target)
{
    return getManyGD_MDsOnR100(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR100(ModelTool_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR100(target, null, loadComponent);
}


    
  
  
// referred to navigation

ToolActivationPolicy_c backPointer_EmploysToolActivationPolicyEmploys_R108;

public void setToolActivationPolicyOrderInChildListR108(ToolActivationPolicy_c target, int index) {
	unrelateAcrossR108From(target);
	ToolActivationPolicy_c[] elements = ToolActivationPolicy_c.getManyCT_ACTsOnR108(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR108From((ToolActivationPolicy_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR108To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR108To((ToolActivationPolicy_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR108To(ToolActivationPolicy_c target)
{
  if (target != null) {
    target.relateAcrossR108To(this, true) ;
  }
}

public void relateAcrossR108To(ToolActivationPolicy_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR108To(this, notifyChanges) ;
  }
}

public void setBackPointerR108To(ToolActivationPolicy_c target)
{
    backPointer_EmploysToolActivationPolicyEmploys_R108 = target;
}

public void unrelateAcrossR108From(ToolActivationPolicy_c target)
{
  if (target != null) {
    target.unrelateAcrossR108From(this, true) ;
  }
}

public void unrelateAcrossR108From(ToolActivationPolicy_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR108From(this, notifyChanges) ;
  }
}

public void clearBackPointerR108To(ToolActivationPolicy_c target)
{
	if (target == backPointer_EmploysToolActivationPolicyEmploys_R108) {
		backPointer_EmploysToolActivationPolicyEmploys_R108 = null;
	}
}

public static Model_c getOneGD_MDOnR108(ToolActivationPolicy_c [] targets)
{
    return getOneGD_MDOnR108(targets, null);
}

public static Model_c getOneGD_MDOnR108(ToolActivationPolicy_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MDOnR108(targets, test, true);
}

public static Model_c getOneGD_MDOnR108(ToolActivationPolicy_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Model_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Model_c candidate_val = getOneGD_MDOnR108(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MDOnR108(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Model_c getOneGD_MDOnR108(ToolActivationPolicy_c target)
{
	return getOneGD_MDOnR108(target, true);
}
public static Model_c getOneGD_MDOnR108(ToolActivationPolicy_c target, boolean loadComponent)
{
  if (target != null) {
    return target.GovernsToolActivationForModel ;
  } else {
    return null;
  }
}

public static Model_c [] getManyGD_MDsOnR108(ToolActivationPolicy_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MDsOnR108(targets, test, true);
}

public static Model_c [] getManyGD_MDsOnR108(ToolActivationPolicy_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Model_c[0];
  
  
  LinkedHashSet<Model_c> elementsSet = new LinkedHashSet<Model_c>();
  for (int i = 0; i < targets.length; i++) {
    Model_c associate = targets[i].GovernsToolActivationForModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Model_c[] result = new Model_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Model_c [] getManyGD_MDsOnR108(ToolActivationPolicy_c [] targets)
{
  return getManyGD_MDsOnR108(targets, null);
}

public static Model_c [] getManyGD_MDsOnR108(ToolActivationPolicy_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ToolActivationPolicy_c [] targetArray = new ToolActivationPolicy_c[1];
    targetArray[0] = target;
    return getManyGD_MDsOnR108(targetArray, test, loadComponent);
  } else {
    Model_c [] result = new Model_c [0] ;
    return result ;
  }
  
}

public static Model_c [] getManyGD_MDsOnR108(ToolActivationPolicy_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MDsOnR108(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR108(ToolActivationPolicy_c target)
{
    return getManyGD_MDsOnR108(target, null, true);
}

public static Model_c [] getManyGD_MDsOnR108(ToolActivationPolicy_c target, boolean loadComponent)
{
    return getManyGD_MDsOnR108(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R18
      Diagram_c relInst22162 = (Diagram_c) baseRoot.getInstanceList(Diagram_c.class).get(new Object[] {m_diagramid});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst22162 == null) {
      			relInst22162 = (Diagram_c) Ooaofooa.getDefaultInstance().getInstanceList(Diagram_c.class).get(new Object[] {m_diagramid});
      		}
			//synchronized
      if ( relInst22162 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22162) && !isProxy())) {
	      relInst22162.relateAcrossR18To(this, notifyChanges);
	  }
	  }
	          

	if (IsInstanceOfModelSpecification == null) {          
      // R9
      baseRoot = Ooaofgraphics.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
	  instances = baseRoot.getInstanceList(ModelSpecification_c.class);
      ModelSpecification_c relInst22163 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           ModelSpecification_c source = (ModelSpecification_c)cursor.next() ;
           if (     source.getOoa_type() == m_ooa_type && 
     source.getModel_type() == m_model_type 		){
  		relInst22163 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst22163 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22163) && !isProxy())) {
	      relInst22163.relateAcrossR9To(this, notifyChanges);
	  }
	  }
          baseRoot = modelRoot;
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R18
      // DIM_DIA
		  inst=IsSupertypeDiagram;
			unrelateAcrossR18From(IsSupertypeDiagram, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R9
      // GD_MS
		  inst=IsInstanceOfModelSpecification;
			unrelateAcrossR9From(IsInstanceOfModelSpecification, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Model_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Model_c inst = (Model_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Model_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Model_c ModelInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Model_c result=findModelInstance(modelRoot,test,loadComponent);
	  return result;  
  }
private static Model_c findModelInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Model_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Model_c x = (Model_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					return x;
			}
		}
		}
			return null;
}
  public static Model_c ModelInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ModelInstance(modelRoot,test,true);
  }
  
  public static Model_c ModelInstance(ModelRoot modelRoot)
  {
	 return ModelInstance(modelRoot,null,true);
  }

  public static Model_c [] ModelInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
		    InstanceList instances = modelRoot.getInstanceList(Model_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Model_c x = (Model_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Model_c[] ret_set = new Model_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Model_c[0];
			}		
		} 
  }
  public static Model_c [] ModelInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ModelInstances(modelRoot,test,true);
  }
  public static Model_c [] ModelInstances(ModelRoot modelRoot)
  {
	return ModelInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
    Activepoller_c.unRegister(this) ;
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Model.dispose call: ";
 	WaypointInMove_c testR24Inst = WaypointInMove_c.getOneGD_WIMOnR24(this, false);

 	if ( testR24Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "24 ";
 	}
	Diagram_c testR18Inst1 = Diagram_c.getOneDIM_DIAOnR18(this, false);

	if ( testR18Inst1 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "18 ";
	}
	TerminalSpecification_c testR207Inst = TerminalSpecification_c.getOneTS_TSPOnR207(this, false);

	if ( testR207Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "207 ";	
	}
	Elementstyle_c testR402Inst = Elementstyle_c.getOneSTY_SOnR402(this, false);

	if ( testR402Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "402 ";	
	}
	TextInMove_c testR14Inst = TextInMove_c.getOneGD_TIMOnR14(this, false);

	if ( testR14Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "14 ";
	}
	ModelSpecification_c testR9Inst = ModelSpecification_c.getOneGD_MSOnR9(this, false);

	if ( testR9Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "9 ";
	}
	GraphicalElement_c testR1Inst = GraphicalElement_c.getOneGD_GEOnR1(this, false);

	if ( testR1Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1 ";	
	}
 	ElementInResize_c testR12Inst = ElementInResize_c.getOneGD_EIROnR12(this, false);

 	if ( testR12Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "12 ";
 	}
 	ElementInMove_c testR25Inst = ElementInMove_c.getOneGD_EIMOnR25(this, false);

 	if ( testR25Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "25 ";
 	}
	ElementInSuppression_c testR32Inst = ElementInSuppression_c.getOneGD_EISOnR32(this, false);

	if ( testR32Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "32 ";
	}
	Layer_c testR34Inst = Layer_c.getOneGD_LAYOnR34(this, false);

	if ( testR34Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "34 ";	
	}
	ModelTool_c testR100Inst = ModelTool_c.getOneCT_MTLOnR100(this, false);

	if ( testR100Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "100 ";	
	}
	ToolActivationPolicy_c testR108Inst = ToolActivationPolicy_c.getOneCT_ACTOnR108(this, false);

	if ( testR108Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "108 ";	
	}
	if(delete_error == true) {

		if(CanvasPlugin.getDefault().isDebugging()) {
			Ooaofgraphics.log.println(ILogger.DELETE, "Model", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CanvasPlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("ooa_id")){
         return true;
      }
      if(attributeName.equals("diagramid")){
         return true;
      }
      return false;      
  }      
  // declare attribute accessors
  public int getModel_type()
  {
    if ( IsInstanceOfModelSpecification != null )
    {
      return IsInstanceOfModelSpecification.getModel_type();
    }
    return 0;
  }


  public int getModel_typeCachedValue()
  {
      return m_model_type;
  }
  
  public void setModel_type(int newValue)
  {
    if(m_model_type == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Model_type", new Integer(m_model_type), new Integer(newValue),true);

   m_model_type = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getOoa_idLongBased()
  {
    if(m_ooa_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_ooa_id)){
    	return 0xfffffff & m_ooa_id.getLeastSignificantBits();
    }
    return m_ooa_idLongBased ;
  }
  public java.util.UUID getOoa_id()
  {
    return m_ooa_id ;
  }


  public void setOoa_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ooa_id)){
	        return;
	    }
	}else if(m_ooa_id != null){
	    if(m_ooa_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ooa_id", m_ooa_id, newValue,true); 
   m_ooa_id = IdAssigner.preprocessUUID(newValue);
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getOoa_type()
  {
    if ( IsInstanceOfModelSpecification != null )
    {
      return IsInstanceOfModelSpecification.getOoa_type();
    }
    return 0;
  }


  public int getOoa_typeCachedValue()
  {
      return m_ooa_type;
  }
  
  public void setOoa_type(int newValue)
  {
    if(m_ooa_type == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ooa_type", new Integer(m_ooa_type), new Integer(newValue),true);

   m_ooa_type = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getUseglobalprint()
  {
    return m_useglobalprint ;
  }


  public void setUseglobalprint(boolean newValue)
  {
    if(m_useglobalprint == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Useglobalprint", new Boolean(m_useglobalprint), new Boolean(newValue),true);

   m_useglobalprint = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getPrintmode()
  {
    return m_printmode ;
  }


  public void setPrintmode(boolean newValue)
  {
    if(m_printmode == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Printmode", new Boolean(m_printmode), new Boolean(newValue),true);

   m_printmode = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getPrintrows()
  {
    return m_printrows ;
  }


  public void setPrintrows(int newValue)
  {
    if(m_printrows == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Printrows", new Integer(m_printrows), new Integer(newValue),true);

   m_printrows = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getPrintcols()
  {
    return m_printcols ;
  }


  public void setPrintcols(int newValue)
  {
    if(m_printcols == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Printcols", new Integer(m_printcols), new Integer(newValue),true);

   m_printcols = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getIslandscape()
  {
    return m_islandscape ;
  }


  public void setIslandscape(boolean newValue)
  {
    if(m_islandscape == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Islandscape", new Boolean(m_islandscape), new Boolean(newValue),true);

   m_islandscape = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getZoomfontsize()
  {
    return m_zoomfontsize ;
  }


  public void setZoomfontsize(int newValue)
  {
    if(m_zoomfontsize == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Zoomfontsize", new Integer(m_zoomfontsize), new Integer(newValue),true);

   m_zoomfontsize = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getGridon()
  {
    return m_gridon ;
  }


  public void setGridon(boolean newValue)
  {
    if(m_gridon == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Gridon", new Boolean(m_gridon), new Boolean(newValue),true);

   m_gridon = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getSelrectx()
  {
    return m_selrectx ;
  }


  public void setSelrectx(int newValue)
  {
    if(m_selrectx == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Selrectx", new Integer(m_selrectx), new Integer(newValue),true);

   m_selrectx = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getSelrecty()
  {
    return m_selrecty ;
  }


  public void setSelrecty(int newValue)
  {
    if(m_selrecty == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Selrecty", new Integer(m_selrecty), new Integer(newValue),true);

   m_selrecty = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getSelrectw()
  {
    return m_selrectw ;
  }


  public void setSelrectw(int newValue)
  {
    if(m_selrectw == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Selrectw", new Integer(m_selrectw), new Integer(newValue),true);

   m_selrectw = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getSelrecth()
  {
    return m_selrecth ;
  }


  public void setSelrecth(int newValue)
  {
    if(m_selrecth == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Selrecth", new Integer(m_selrecth), new Integer(newValue),true);

   m_selrecth = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public Object getRepresents()
  {
    return m_represents ;
  }


  public void setRepresents(Object newValue)
  {
    if(m_represents == newValue){
        return;
    }
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Represents", m_represents, newValue,true); 
   m_represents = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDiagramidLongBased()
  {
    if ( IsSupertypeDiagram != null )
    {
      return IsSupertypeDiagram.getDiagramidLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDiagramid()
  {
    if ( IsSupertypeDiagram != null )
    {
      return IsSupertypeDiagram.getDiagramid();
    }
    return IdAssigner.NULL_UUID;
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypeDiagram != null );
 
 }                  

  public java.util.UUID getDiagramidCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_diagramid) )
      return m_diagramid;
    else
      return getDiagramid();
  }
  
  public void setDiagramid(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_diagramid)){
	        return;
	    }
	}else if(m_diagramid != null){
	    if(m_diagramid.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Diagramid", m_diagramid, newValue,true); 
   m_diagramid = IdAssigner.preprocessUUID(newValue);
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getVersion()
  {
    return m_version ;
  }


  public void setVersion(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_version)){
	        return;
	    }
	}else if(m_version != null){
	    if(m_version.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Version", m_version, newValue,true); 
   m_version = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getRepresents_path()
  {
ModelRoot modelRoot = getModelRoot();
if ( (  !Cl_c.Isempty(			    
getRepresents())) )
{

String       v_path = Cl_c.Getpath(			    
getRepresents()) ;


if ( (v_path.equals("")) )
{

return Getcachedrepresentspath();



}

else
{

Setcachedrepresentspath(			    
v_path ) ;


return v_path;



}


}

else
{

return Getcachedrepresentspath();



}


  }


  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Model", //$NON-NLS-1$
	  " Operation entered: Model::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Model_c [] objs = Model_c.ModelInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Model", //$NON-NLS-1$
	  " Operation entered: Model::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Model_c_test22165_c implements ClassQueryInterface_c
    {
	  Model_c_test22165_c( java.util.UUID            p22166 ) {
	  m_p22166 = p22166;
	  }
	  private java.util.UUID             m_p22166; 
	  public boolean evaluate (Object candidate)
	  {
	      Model_c selected = (Model_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDiagramid().equals(m_p22166));
	      return retval;
	  }
    }

    Model_c [] objs22164 = 
    Model_c.ModelInstances(modelRoot, new Model_c_test22165_c(getDiagramid())) ;

    if ( (  (objs22164.length) == 0) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Model", //$NON-NLS-1$
           "Consistency: Object: Model: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs22164.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Model: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22164.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs22164.length) > 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Model", //$NON-NLS-1$
           "Consistency: Object: Model: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs22164.length )  + " diagramId: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Model: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22164.length )  + " diagramId: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Model is a referring class in association: rel.Numb = 9
          // The participating class is: Model Specification
    class ModelSpecification_c_test22170_c implements ClassQueryInterface_c
    {
	  ModelSpecification_c_test22170_c( int     p22171, int     p22172 ) {
	       m_p22171 = p22171; 
m_p22172 = p22172;
	  }
	  private int      m_p22171; private int      m_p22172; 
	  public boolean evaluate (Object candidate)
	  {
	      ModelSpecification_c selected = (ModelSpecification_c) candidate;
	      boolean retval = false;
	      retval = (selected.getModel_type() == (m_p22171)) & (selected.getOoa_type() == (m_p22172));
	      return retval;
	  }
    }

    ModelSpecification_c [] objs22169 = 
    ModelSpecification_c.ModelSpecificationInstances(Ooaofgraphics.getDefaultInstance(), new ModelSpecification_c_test22170_c(getModel_type(), getOoa_type())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs22169.length) != 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Model", //$NON-NLS-1$
           "Consistency: Object: Model: Association: 9: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs22169.length )  + " Model_Type: " + Integer.toString(getModel_type())  + " OOA_Type: " + Integer.toString(getOoa_type()) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Model: Association: 9: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22169.length )  + " Model_Type: " + Integer.toString(getModel_type())  + " OOA_Type: " + Integer.toString(getOoa_type()) , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Model is a subtype in association: rel.Numb = 18
          // The supertype class is: Diagram
    class Diagram_c_test22174_c implements ClassQueryInterface_c
    {
	  Diagram_c_test22174_c( java.util.UUID            p22175 ) {
	  m_p22175 = p22175;
	  }
	  private java.util.UUID             m_p22175; 
	  public boolean evaluate (Object candidate)
	  {
	      Diagram_c selected = (Diagram_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDiagramid().equals(m_p22175));
	      return retval;
	  }
    }

    Diagram_c [] objs22173 = 
    Diagram_c.DiagramInstances(modelRoot, new Diagram_c_test22174_c(getDiagramid())) ;

    if ( (  (objs22173.length) != 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Model", //$NON-NLS-1$
           "Consistency: Object: Model: Association: 18: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs22173.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Model: Association: 18: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22173.length )  , e); 
      }
      retval = false;

    }

          // Associated Other Side: rel.Numb = 24
            // Link Object: Waypoint In Move
          // Model is a participating class in association: rel.Numb = 207
             // Object: Terminal Specification
          // Model is a participating class in association: rel.Numb = 402
             // Object: ElementStyle
          // Associated One Side: rel.Numb = 14
            // Link Object: Text In Move
            // Other Side Class: Floating Text
          // Model is a participating class in association: rel.Numb = 1
             // Object: Graphical Element
          // Associated Other Side: rel.Numb = 12
            // Link Object: Element In Resize
          // Associated Other Side: rel.Numb = 25
            // Link Object: Element In Move
          // Associated One Side: rel.Numb = 32
            // Link Object: Element In Suppression
            // Other Side Class: Graphical Element
          // Model is a participating class in association: rel.Numb = 34
             // Object: Layer
          // Model is a participating class in association: rel.Numb = 100
             // Object: Model Tool
          // Model is a participating class in association: rel.Numb = 108
             // Object: Tool Activation Policy
    class ToolActivationPolicy_c_test22177_c implements ClassQueryInterface_c
    {
	  ToolActivationPolicy_c_test22177_c( java.util.UUID            p22178 ) {
	  m_p22178 = p22178;
	  }
	  private java.util.UUID             m_p22178; 
	  public boolean evaluate (Object candidate)
	  {
	      ToolActivationPolicy_c selected = (ToolActivationPolicy_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDiagramid().equals(m_p22178));
	      return retval;
	  }
    }

    ToolActivationPolicy_c [] objs22176 = 
    ToolActivationPolicy_c.ToolActivationPolicyInstances(modelRoot, new ToolActivationPolicy_c_test22177_c(getDiagramid())) ;

    if ( (  (objs22176.length) > 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Model", //$NON-NLS-1$
           "Consistency: Object: Model: Association: 108: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs22176.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Model: Association: 108: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22176.length )  , e); 
      }
      retval = false;

    }

    return retval;
  }


  // declare transform functions
  public  void Draw(final GCDelegate p_Context,final boolean      p_Is_hard_copy)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Draw") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelSpecification_c v_mdlSpec = ModelSpecification_c.getOneGD_MSOnR9(this);


if ( (  (v_mdlSpec == null)) )
{

  class ModelSpecification_test21467_c implements ClassQueryInterface_c
  {
	ModelSpecification_test21467_c( int  p21468 ) {
		m_p21468 = p21468;
	}
	private int  m_p21468;
	public boolean evaluate (Object candidate)
	{
		ModelSpecification_c selected = (ModelSpecification_c)candidate;
		return (selected.getModel_type() == m_p21468) ;
	}
  }
v_mdlSpec = ModelSpecification_c.ModelSpecificationInstance(Ooaofgraphics.getDefaultInstance(), new ModelSpecification_test21467_c(getModel_type())) ;


if ( (  (v_mdlSpec != null)) )
{

if (v_mdlSpec != null) {
  v_mdlSpec.relateAcrossR9To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

if ( (  (v_mdlSpec != null) &&   !p_Is_hard_copy) )
{

Gr_c.Clearbackgroundto(			    
p_Context			    
,v_mdlSpec.getBackground() ) ;



}

GraphicalElement_c [] v_elements = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_element = null;
for ( int i21320 = 0; i21320 < v_elements.length; i21320++)
{
  v_element = v_elements[i21320] ;

if ( (v_element.Getlayer() == 0) )
{

if (v_element != null) {
v_element.Draw(			    
p_Context			    
,p_Is_hard_copy ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

for ( int i21321 = 0; i21321 < v_elements.length; i21321++)
{
  v_element = v_elements[i21321] ;

if ( (v_element.Getlayer() == 1) )
{

if (v_element != null) {
v_element.Draw(			    
p_Context			    
,p_Is_hard_copy ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End draw
  public  int          Getmaxx(final boolean      p_All)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Getmaxx") ; 
               final ModelRoot modelRoot = getModelRoot();
int          v_result = 0 ;


GraphicalElement_c [] v_elems = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_elem = null;
for ( int i21322 = 0; i21322 < v_elems.length; i21322++)
{
  v_elem = v_elems[i21322] ;

Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_elem);


Shape_c v_shape = Shape_c.getOneGD_SHPOnR2(v_elem);


Graphnode_c v_node = Graphnode_c.getOneDIM_NDOnR19(v_shape);


Connector_c v_connector = Connector_c.getOneGD_CONOnR2(v_elem);


if ( (  (v_shape != null)) )
{

float        v_rightX = v_graphElem.getPositionx() + v_node.getWidth() ;


if ( (v_rightX > v_result) )
{

if ( (p_All) )
{

v_result = (int)(v_rightX) ;



}

else
{

if ( (v_elem.Isselected()) )
{

v_result = (int)(v_rightX) ;



}


}


}


}

else if ( (  (v_connector != null)) )
{

LineSegment_c [] v_segs = LineSegment_c.getManyGD_LSsOnR6(v_connector);


LineSegment_c  v_seg = null;
for ( int i21323 = 0; i21323 < v_segs.length; i21323++)
{
  v_seg = v_segs[i21323] ;

Waypoint_c v_segStart = Waypoint_c.getOneDIM_WAYOnR21(v_seg);


Waypoint_c v_segEnd = Waypoint_c.getOneDIM_WAYOnR22(v_seg);


if ( (v_segStart.getPositionx() > v_result || v_segEnd.getPositionx() > v_result) )
{

if ( (p_All) )
{

v_result = Ooaofgraphics.Max(modelRoot			    
,(int)(v_segStart.getPositionx())			    
,(int)(v_segEnd.getPositionx())) ;



}

else
{

if ( (v_elem.Isselected()) )
{

v_result = Ooaofgraphics.Max(modelRoot			    
,(int)(v_segStart.getPositionx())			    
,(int)(v_segEnd.getPositionx())) ;



}


}


}


}


}


}

return v_result;



   } // End getMaxX
  public  int          Getmaxy(final boolean      p_All)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Getmaxy") ; 
               final ModelRoot modelRoot = getModelRoot();
int          v_result = 0 ;


GraphicalElement_c [] v_elems = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_elem = null;
for ( int i21324 = 0; i21324 < v_elems.length; i21324++)
{
  v_elem = v_elems[i21324] ;

Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_elem);


Shape_c v_shape = Shape_c.getOneGD_SHPOnR2(v_elem);


Graphnode_c v_node = Graphnode_c.getOneDIM_NDOnR19(v_shape);


Connector_c v_connector = Connector_c.getOneGD_CONOnR2(v_elem);


if ( (  (v_shape != null)) )
{

float        v_bottomY = v_graphElem.getPositiony() + v_node.getHeight() ;


if ( (v_bottomY > v_result) )
{

if ( (p_All) )
{

v_result = (int)(v_bottomY) ;



}

else
{

if ( (v_elem.Isselected()) )
{

v_result = (int)(v_bottomY) ;



}


}


}


}

else if ( (  (v_connector != null)) )
{

LineSegment_c [] v_segs = LineSegment_c.getManyGD_LSsOnR6(v_connector);


LineSegment_c  v_seg = null;
for ( int i21325 = 0; i21325 < v_segs.length; i21325++)
{
  v_seg = v_segs[i21325] ;

Waypoint_c v_segStart = Waypoint_c.getOneDIM_WAYOnR21(v_seg);


Waypoint_c v_segEnd = Waypoint_c.getOneDIM_WAYOnR22(v_seg);


if ( (v_segStart.getPositiony() > v_result || v_segEnd.getPositiony() > v_result) )
{

if ( (p_All) )
{

v_result = Ooaofgraphics.Max(modelRoot			    
,(int)(v_segStart.getPositiony())			    
,(int)(v_segEnd.getPositiony())) ;



}

else
{

if ( (v_elem.Isselected()) )
{

v_result = Ooaofgraphics.Max(modelRoot			    
,(int)(v_segStart.getPositiony())			    
,(int)(v_segEnd.getPositiony())) ;



}


}


}


}


}


}

return v_result;



   } // End getMaxY
  public  int          Getminx(final boolean      p_All)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Getminx") ; 
               final ModelRoot modelRoot = getModelRoot();
int          v_result = Os_c.Max_int() ;


GraphicalElement_c [] v_elems = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_elem = null;
for ( int i21326 = 0; i21326 < v_elems.length; i21326++)
{
  v_elem = v_elems[i21326] ;

Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_elem);


Shape_c v_shape = Shape_c.getOneGD_SHPOnR2(v_elem);


Connector_c v_connector = Connector_c.getOneGD_CONOnR2(v_elem);


if ( (  (v_shape != null)) )
{

float        v_topX = v_graphElem.getPositionx() ;


if ( (v_topX < v_result) )
{

if ( (p_All) )
{

v_result = (int)(v_topX) ;



}

else
{

if ( (v_elem.Isselected()) )
{

v_result = (int)(v_topX) ;



}


}


}


}

else if ( (  (v_connector != null)) )
{

LineSegment_c [] v_segs = LineSegment_c.getManyGD_LSsOnR6(v_connector);


LineSegment_c  v_seg = null;
for ( int i21327 = 0; i21327 < v_segs.length; i21327++)
{
  v_seg = v_segs[i21327] ;

Waypoint_c v_segStart = Waypoint_c.getOneDIM_WAYOnR21(v_seg);


Waypoint_c v_segEnd = Waypoint_c.getOneDIM_WAYOnR22(v_seg);


if ( (v_segStart.getPositionx() < v_result || v_segEnd.getPositionx() < v_result) )
{

if ( (p_All) )
{

v_result = Ooaofgraphics.Min(modelRoot			    
,(int)(v_segStart.getPositionx())			    
,(int)(v_segEnd.getPositionx())) ;



}

else
{

if ( (v_elem.Isselected()) )
{

v_result = Ooaofgraphics.Min(modelRoot			    
,(int)(v_segStart.getPositionx())			    
,(int)(v_segEnd.getPositionx())) ;



}


}


}


}


}


}

return v_result;



   } // End getMinX
  public  int          Getminy(final boolean      p_All)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Getminy") ; 
               final ModelRoot modelRoot = getModelRoot();
int          v_result = Os_c.Max_int() ;


GraphicalElement_c [] v_elems = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_elem = null;
for ( int i21328 = 0; i21328 < v_elems.length; i21328++)
{
  v_elem = v_elems[i21328] ;

Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_elem);


Shape_c v_shape = Shape_c.getOneGD_SHPOnR2(v_elem);


Connector_c v_connector = Connector_c.getOneGD_CONOnR2(v_elem);


if ( (  (v_shape != null)) )
{

float        v_topY = v_graphElem.getPositiony() ;


if ( (v_topY < v_result) )
{

if ( (p_All) )
{

v_result = (int)(v_topY) ;



}

else
{

if ( (v_elem.Isselected()) )
{

v_result = (int)(v_topY) ;



}


}


}


}

else if ( (  (v_connector != null)) )
{

LineSegment_c [] v_segs = LineSegment_c.getManyGD_LSsOnR6(v_connector);


LineSegment_c  v_seg = null;
for ( int i21329 = 0; i21329 < v_segs.length; i21329++)
{
  v_seg = v_segs[i21329] ;

Waypoint_c v_segStart = Waypoint_c.getOneDIM_WAYOnR21(v_seg);


Waypoint_c v_segEnd = Waypoint_c.getOneDIM_WAYOnR22(v_seg);


if ( (v_segStart.getPositiony() < v_result || v_segEnd.getPositiony() < v_result) )
{

if ( (p_All) )
{

v_result = Ooaofgraphics.Min(modelRoot			    
,(int)(v_segStart.getPositiony())			    
,(int)(v_segEnd.getPositiony())) ;



}

else
{

if ( (v_elem.Isselected()) )
{

v_result = Ooaofgraphics.Min(modelRoot			    
,(int)(v_segStart.getPositiony())			    
,(int)(v_segEnd.getPositiony())) ;



}


}


}


}


}


}

return v_result;



   } // End getMinY
  public  void Zoomto(final boolean      p_All,final int          p_Avh,final int          p_Avw,final boolean      p_Selection,final int          p_Toh,final int          p_Tow,final int          p_Tox,final int          p_Toy)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Zoomto") ; 
               final ModelRoot modelRoot = getModelRoot();
int          v_newX = p_Tox ;


int          v_newY = p_Toy ;


int          v_width = p_Tow ;


int          v_height = p_Toh ;


if ( (p_All) )
{

boolean      v_no_elems = true ;


GraphicalElement_c [] v_elems = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_elem = null;
for ( int i21330 = 0; i21330 < v_elems.length; i21330++)
{
  v_elem = v_elems[i21330] ;

if ( (p_Selection) )
{

if ( (v_elem.Isselected()) )
{

v_no_elems = false ;


break;



}


}

else
{

v_no_elems = false ;


break;



}


}

if ( (v_no_elems) )
{

return ;



}

else
{

boolean      v_considerAll =   !p_Selection ;


v_newX = Getminx(			    
v_considerAll) - Gr_c.Getmargin() ;


v_newY = Getminy(			    
v_considerAll) - Gr_c.Getmargin() ;


v_width = Getmaxx(			    
v_considerAll) - Getminx(			    
v_considerAll) + (Gr_c.Getmargin() * 2) ;


v_height = Getmaxy(			    
v_considerAll) - Getminy(			    
v_considerAll) + (Gr_c.Getmargin() * 2) ;



}


}

float        v_widthFactor = Os_c.Inttoreal(			    
p_Avw) / Os_c.Inttoreal(			    
v_width) ;


float        v_heightFactor = Os_c.Inttoreal(			    
p_Avh) / Os_c.Inttoreal(			    
v_height) ;


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(this);


if ( (v_widthFactor < v_heightFactor) )
{

if (v_diagram != null) {
  v_diagram.setZoom( v_widthFactor) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Gr_c.Setzoomfactor(			    
v_diagram.getZoom() ) ;


int          v_unscaledHeight = Os_c.Realtoint(			    
v_height * v_heightFactor) ;


int          v_actualHeight = Gr_c.Scale(			    
v_unscaledHeight) ;


v_newY = v_newY - ((v_actualHeight - v_height) / 2) ;


if ( (v_newY < 0) )
{

v_newY = 0 ;



}


}

else
{

if (v_diagram != null) {
  v_diagram.setZoom( v_heightFactor) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Gr_c.Setzoomfactor(			    
v_diagram.getZoom() ) ;


int          v_unscaledWidth = Os_c.Realtoint(			    
v_width * v_widthFactor) ;


int          v_actualWidth = Gr_c.Scale(			    
v_unscaledWidth) ;


v_newX = v_newX - ((v_actualWidth - v_width) / 2) ;


if ( (v_newX < 0) )
{

v_newX = 0 ;



}


}

if (v_diagram != null) {
  v_diagram.setViewportx( v_newX) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_diagram != null) {
  v_diagram.setViewporty( v_newY) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



   } // End zoomTo
  public  void Unselectall()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Unselectall") ; 
               final ModelRoot modelRoot = getModelRoot();
Cl_c.Clearselection() ;



   } // End unSelectAll
  public  void Enabletextmoveunder(final int          p_X,final int          p_Y)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Enabletextmoveunder") ; 
               final ModelRoot modelRoot = getModelRoot();
Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(this);


float        v_scaled_x = Gr_c.Scale(			    
Gr_c.Getabsolutexposition()) + v_diagram.getViewportx() ;


float        v_scaled_y = Gr_c.Scale(			    
Gr_c.Getabsoluteyposition()) + v_diagram.getViewporty() ;


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(this);


int          v_sel_symb_count = 0 ;


GraphicalElement_c  v_symb = null;
for ( int i21331 = 0; i21331 < v_symbols.length; i21331++)
{
  v_symb = v_symbols[i21331] ;

if ( (v_symb.Isselected()) )
{

v_sel_symb_count = v_sel_symb_count + 1 ;



}


}

if ( (v_sel_symb_count == 1) )
{

for ( int i21332 = 0; i21332 < v_symbols.length; i21332++)
{
  v_symb = v_symbols[i21332] ;

if ( (v_symb.Isselected()) )
{

Connector_c v_con_elem = Connector_c.getOneGD_CONOnR2(v_symb);


if ( (  (v_con_elem != null)) )
{

FloatingText_c [] v_texts = FloatingText_c.getManyGD_CTXTsOnR8(v_con_elem);


boolean      v_found = false ;


FloatingText_c  v_text = null;
for ( int i21333 = 0; i21333 < v_texts.length; i21333++)
{
  v_text = v_texts[i21333] ;

if ( (v_text.Isover(			    
(int)(v_scaled_x)			    
,(int)(v_scaled_y))) )
{

TextInMove_c v_tim = new TextInMove_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_tim));


if (v_tim != null) {
  v_tim.relateAcrossR14To( this ) ;   v_tim.relateAcrossR14To( v_text ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


v_found = true ;


break;



}


}

if ( (v_found) )
{

break;



}


}

else
{

FloatingText_c v_shp_text = FloatingText_c.getOneGD_CTXTOnR27(Shape_c.getOneGD_SHPOnR2(v_symb));


if ( (  (v_shp_text != null)) )
{

if ( (v_shp_text.Isover(			    
(int)(v_scaled_x)			    
,(int)(v_scaled_y))) )
{

TextInMove_c v_tim = new TextInMove_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_tim));


if (v_tim != null) {
  v_tim.relateAcrossR14To( this ) ;   v_tim.relateAcrossR14To( v_shp_text ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


break;



}


}


}


}


}


}


   } // End enableTextMoveUnder
  public  void Disabletextmove()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Disabletextmove") ; 
               final ModelRoot modelRoot = getModelRoot();
FloatingText_c v_con_text = FloatingText_c.getOneGD_CTXTOnR14(this);


if ( (  (v_con_text != null)) )
{

TextInMove_c v_tim = TextInMove_c.getOneGD_TIMOnR14(this);


if (v_tim != null) {
v_tim.unrelateAcrossR14From( this ) ; v_tim.unrelateAcrossR14From( v_con_text ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_tim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_tim.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_tim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}


   } // End disableTextMove
  public  void Initializetools()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Initializetools") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelTool_c [] v_tools = ModelTool_c.getManyCT_MTLsOnR100(this);


if ( (  (v_tools.length == 0)) )
{

ToolActivationPolicy_c v_policy = new ToolActivationPolicy_c(modelRoot) ;


if (v_policy != null) {
  v_policy.relateAcrossR108To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


ModelTool_c v_selector = new ModelTool_c(modelRoot) ;


SelectionTool_c v_selTool = new SelectionTool_c(modelRoot) ;


if (v_selector != null) {
  v_selector.relateAcrossR102To(v_selTool);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR100To(v_selector);


if (v_selector != null) {
v_selector.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


ModelTool_c v_scroller = new ModelTool_c(modelRoot) ;


ScrollTool_c v_scrollTool = new ScrollTool_c(modelRoot) ;


if (v_scroller != null) {
  v_scroller.relateAcrossR102To(v_scrollTool);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR100To(v_scroller);


if (v_scroller != null) {
v_scroller.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


ElementSpecification_c [] v_elemSpecs = ElementSpecification_c.getManyGD_ESsOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(ModelSpecification_c.getManyGD_MSsOnR9(this)));


ElementSpecification_c  v_elemSpec = null;
for ( int i21334 = 0; i21334 < v_elemSpecs.length; i21334++)
{
  v_elemSpec = v_elemSpecs[i21334] ;

ModelTool_c v_mt = new ModelTool_c(modelRoot) ;


if (v_mt != null) {
  v_mt.relateAcrossR103To(v_elemSpec);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR100To(v_mt);


ConnectorSpecification_c v_conSpec = ConnectorSpecification_c.getOneTS_CSPOnR200(v_elemSpec);


ShapeSpecification_c v_shapeSpec = ShapeSpecification_c.getOneTS_SSPOnR200(v_elemSpec);


if ( (  (v_conSpec != null)) )
{

ConnectorTool_c v_ct = new ConnectorTool_c(modelRoot) ;


if (v_mt != null) {
  v_mt.relateAcrossR102To(v_ct);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else if ( (  (v_shapeSpec != null)) )
{

ShapeTool_c v_st = new ShapeTool_c(modelRoot) ;


if (v_mt != null) {
  v_mt.relateAcrossR102To(v_st);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_mt != null) {
v_mt.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

// Generate event CT_MTL5:Activate to selector
if (v_selector != null) {
  v_selector.Activate(false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to fire null event instance.", t);
}



}


   } // End initializeTools
  public  void Elementcreated(final Object p_Elem,final Class p_Type)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Elementcreated") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ModelTool_test21545_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return (selected.getActive() == true) ;
	}
  }
ModelTool_c v_mt = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21545_c());


if ( (  (v_mt != null)) )
{

ElementSpecification_c v_es = ElementSpecification_c.getOneGD_ESOnR103(v_mt);


if ( (  (v_es != null) && v_es.getRepresents() == p_Type) )
{

if (v_es != null) {
v_es.Elementcreated(			    
p_Elem ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End elementCreated
  public  void Initialize(final Object p_Elem)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
setOoa_id( Cl_c.Getooaid(			    
p_Elem)) ;


setUseglobalprint( false) ;


setPrintmode( false) ;


setPrintrows( 1) ;


setPrintcols( 1) ;


setIslandscape( true) ;


setZoomfontsize( 12) ;


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(this);


if (v_diagram != null) {
  v_diagram.setViewportx( 4000) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_diagram != null) {
  v_diagram.setViewporty( 3000) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_diagram != null) {
  v_diagram.setZoom( 1.0f) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


setGridon( true) ;


setSelrectx( 0) ;


setSelrecty( 0) ;


setSelrectw( 0) ;


setSelrecth( 0) ;


setRepresents( p_Elem) ;


Initializeoncreationsymbols() ;



   } // End initialize
  public  java.util.UUID         Gettoolidbyname(final String       p_Toolname)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Gettoolidbyname") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_toolname = p_Toolname ;


java.util.UUID         v_result = Os_c.Null_unique_id() ;


ModelSpecification_c v_mod_spec = ModelSpecification_c.getOneGD_MSOnR9(this);


  class ElementSpecification_test21546_c implements ClassQueryInterface_c
  {
	ElementSpecification_test21546_c( String       p21547 ) {
		m_p21547 = p21547;
	}
	private String       m_p21547;
	public boolean evaluate (Object candidate)
	{
		ElementSpecification_c selected = (ElementSpecification_c)candidate;
		return (selected.getName().equals(m_p21547)) ;
	}
  }
ElementSpecification_c v_elem_spec = ElementSpecification_c.getOneGD_ESOnR11(v_mod_spec, new ElementSpecification_test21546_c(v_toolname));


  class ModelTool_test21548_c implements ClassQueryInterface_c
  {
	ModelTool_test21548_c( int  p21549 ) {
		m_p21549 = p21549;
	}
	private int  m_p21549;
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return (selected.getOoa_type() == m_p21549) ;
	}
  }
ModelTool_c v_mt = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21548_c(v_elem_spec.getOoa_type()));


if ( (  (v_mt != null)) )
{

v_result = v_mt.getTool_id() ;



}

return v_result;



   } // End getToolIdByName
  public  void Elementdeleted(final Object p_Elem)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Elementdeleted") ; 
               final ModelRoot modelRoot = getModelRoot();
GraphicalElement_c [] v_elems = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_elem = null;
for ( int i21335 = 0; i21335 < v_elems.length; i21335++)
{
  v_elem = v_elems[i21335] ;

if ( (v_elem.getRepresents() == p_Elem) )
{

if (v_elem != null) {
v_elem.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

if ( (p_Elem == getRepresents()) )
{

Dispose() ;



}


   } // End elementDeleted
  public  void Dispose()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelSpecification_c v_ms = ModelSpecification_c.getOneGD_MSOnR9(this);


if ( (  (v_ms != null)) )
{

this.unrelateAcrossR9From(v_ms);



}

ElementInResize_c v_eir = ElementInResize_c.getOneGD_EIROnR12(this);


if ( (  (v_eir != null)) )
{

if (v_eir != null) {
v_eir.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

GraphicalElement_c [] v_ges = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_ge = null;
for ( int i21336 = 0; i21336 < v_ges.length; i21336++)
{
  v_ge = v_ges[i21336] ;

if (v_ge != null) {
v_ge.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

WaypointInMove_c [] v_inMoves = WaypointInMove_c.getManyGD_WIMsOnR24(this);


WaypointInMove_c  v_inMove = null;
for ( int i21337 = 0; i21337 < v_inMoves.length; i21337++)
{
  v_inMove = v_inMoves[i21337] ;

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR24(v_inMove);


if (v_inMove != null) {
v_inMove.unrelateAcrossR24From( this ) ; v_inMove.unrelateAcrossR24From( v_waypoint ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_inMove != null) {
// get the location of this element in the instance list
// before deleting
if ( v_inMove.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_inMove));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

TextInMove_c v_tim = TextInMove_c.getOneGD_TIMOnR14(this);


if ( (  (v_tim != null)) )
{

FloatingText_c v_txt = FloatingText_c.getOneGD_CTXTOnR14(v_tim);


if (v_tim != null) {
v_tim.unrelateAcrossR14From( this ) ; v_tim.unrelateAcrossR14From( v_txt ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_tim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_tim.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_tim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

ModelTool_c [] v_mtls = ModelTool_c.getManyCT_MTLsOnR100(this);


ModelTool_c  v_mtl = null;
for ( int i21338 = 0; i21338 < v_mtls.length; i21338++)
{
  v_mtl = v_mtls[i21338] ;

this.unrelateAcrossR100From(v_mtl);


if (v_mtl != null) {
v_mtl.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ToolActivationPolicy_c v_policy = ToolActivationPolicy_c.getOneCT_ACTOnR108(this);


this.unrelateAcrossR108From(v_policy);


TerminalSpecification_c [] v_tss = TerminalSpecification_c.getManyTS_TSPsOnR207(this);


TerminalSpecification_c  v_ts = null;
for ( int i21339 = 0; i21339 < v_tss.length; i21339++)
{
  v_ts = v_tss[i21339] ;

this.unrelateAcrossR207From(v_ts);



}

Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(this);


this.unrelateAcrossR18From(v_diagram);


if (v_diagram != null) {
// get the location of this element in the instance list
// before deleting
if ( v_diagram.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_diagram));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


Elementstyle_c [] v_styles = Elementstyle_c.getManySTY_SsOnR402(this);


Elementstyle_c  v_style = null;
for ( int i21340 = 0; i21340 < v_styles.length; i21340++)
{
  v_style = v_styles[i21340] ;

this.unrelateAcrossR402From(v_style);


if (v_style != null) {
v_style.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Layer_c [] v_layers = Layer_c.getManyGD_LAYsOnR34(this);


Layer_c  v_layer = null;
for ( int i21341 = 0; i21341 < v_layers.length; i21341++)
{
  v_layer = v_layers[i21341] ;

if (v_layer != null) {
v_layer.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Elementchanged(final Object p_Clientelem)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Elementchanged") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_ooaid = Cl_c.Getooaid(			    
p_Clientelem) ;


  class GraphicalElement_test21550_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		GraphicalElement_c selected = (GraphicalElement_c)candidate;
		return (selected.getRepresents() == p_Clientelem) ;
	}
  }
GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR1(this, new GraphicalElement_test21550_c());


if ( (  (v_elem != null)) )
{

if ( (v_elem.getOoa_id().equals(Os_c.Null_unique_id()) || ! v_elem.getOoa_id().equals(v_ooaid)) )
{

if (v_elem != null) {
  v_elem.setOoa_id( v_ooaid) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}

if ( (getRepresents() == p_Clientelem && (getOoa_id().equals(Os_c.Null_unique_id()) || ! getOoa_id().equals(v_ooaid))) )
{

setOoa_id( Cl_c.Getooaid(			    
p_Clientelem)) ;



}


   } // End elementChanged
  public  java.util.UUID         Getscrolltoolid()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Getscrolltoolid") ; 
               final ModelRoot modelRoot = getModelRoot();
ScrollTool_c [] v_scrollers = ScrollTool_c.getManyCT_SCRsOnR102(ModelTool_c.getManyCT_MTLsOnR100(this));


ScrollTool_c  v_scroller = null;
for ( int i21342 = 0; i21342 < v_scrollers.length; i21342++)
{
  v_scroller = v_scrollers[i21342] ;

return v_scroller.getTool_id();



}

return Os_c.Null_unique_id();



   } // End getScrollToolID
  public  java.util.UUID         Getselectiontoolid()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Getselectiontoolid") ; 
               final ModelRoot modelRoot = getModelRoot();
SelectionTool_c [] v_selectors = SelectionTool_c.getManyCT_SELsOnR102(ModelTool_c.getManyCT_MTLsOnR100(this));


SelectionTool_c  v_selector = null;
for ( int i21343 = 0; i21343 < v_selectors.length; i21343++)
{
  v_selector = v_selectors[i21343] ;

return v_selector.getTool_id();



}

return Os_c.Null_unique_id();



   } // End getSelectionToolID
  public  void Activateselectiontool()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Activateselectiontool") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ModelTool_test21551_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return (selected.getActive() == true) ;
	}
  }
ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21551_c());


if ( (  (v_tool != null)) )
{

SelectionTool_c v_selTool = (SelectionTool_c) modelRoot.getInstanceList(SelectionTool_c.class).getGlobal(null, Getselectiontoolid());


ModelTool_c v_selModelTool = ModelTool_c.getOneCT_MTLOnR102(v_selTool);


if ( (v_tool != v_selModelTool) )
{

// Generate event CT_MTL5:Activate to selModelTool
if (v_selModelTool != null) {
  v_selModelTool.Activate(false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to fire null event instance.", t);
}



}


}


   } // End activateSelectionTool
  public  String       Gettooltiptext(final int          p_X,final int          p_Y)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Gettooltiptext") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ModelTool_test21552_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return selected.getActive() ;
	}
  }
ModelTool_c v_activeTool = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21552_c());


SelectionTool_c v_selectionTool = SelectionTool_c.getOneCT_SELOnR102(v_activeTool);


if ( (  (v_selectionTool == null)) )
{

return "";



}

Shape_c [] v_shapes = Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(this));


Shape_c  v_shape = null;
for ( int i21344 = 0; i21344 < v_shapes.length; i21344++)
{
  v_shape = v_shapes[i21344] ;

if ( (v_shape.Isoverdiagramposition(			    
p_X			    
,p_Y)) )
{

Graphelement_c v_element = Graphelement_c.getOneDIM_GEOnR23(GraphicalElement_c.getOneGD_GEOnR2(v_shape));


return v_shape.Gettooltiptext(			    
(int)(p_X - v_element.getPositionx())			    
,(int)(p_Y - v_element.getPositiony()));



}


}

return "";



   } // End getToolTipText
  public  Object Getrepresents(final int          p_X,final int          p_Y)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Getrepresents") ; 
               final ModelRoot modelRoot = getModelRoot();
Shape_c [] v_shapes = Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(this));


Shape_c  v_shape = null;
for ( int i21345 = 0; i21345 < v_shapes.length; i21345++)
{
  v_shape = v_shapes[i21345] ;

if ( (v_shape.Isoverdiagramposition(			    
p_X			    
,p_Y)) )
{

Graphelement_c v_element = Graphelement_c.getOneDIM_GEOnR23(GraphicalElement_c.getOneGD_GEOnR2(v_shape));


return v_shape.Getrepresents(			    
(int)(p_X - v_element.getPositionx())			    
,(int)(p_Y - v_element.getPositiony()));



}


}

return getRepresents();



   } // End getRepresents
  public  void Selectall()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Selectall") ; 
               final ModelRoot modelRoot = getModelRoot();
Cl_c.Unselectall() ;


GraphicalElement_c [] v_ges = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_ge = null;
for ( int i21346 = 0; i21346 < v_ges.length; i21346++)
{
  v_ge = v_ges[i21346] ;

if (v_ge != null) {
v_ge.Toggleselect() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End selectAll
  public  void Initializeoncreationsymbols()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Initializeoncreationsymbols") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ElementSpecification_test21553_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ElementSpecification_c selected = (ElementSpecification_c)candidate;
		return (selected.getCreationrule().equals("on canvas creation")) ;
	}
  }
ElementSpecification_c [] v_specs = ElementSpecification_c.getManyGD_ESsOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(ModelSpecification_c.getManyGD_MSsOnR9(this)), new ElementSpecification_test21553_c());


ElementSpecification_c  v_spec = null;
for ( int i21347 = 0; i21347 < v_specs.length; i21347++)
{
  v_spec = v_specs[i21347] ;

GraphicalElement_c v_elem = new GraphicalElement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_elem));


Shape_c v_shape = new Shape_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_shape));


Graphnode_c v_graphNode = new Graphnode_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphNode));


if (v_graphNode != null) {
  v_graphNode.relateAcrossR19To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphelement_c v_graphEle = new Graphelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphEle));


if (v_graphEle != null) {
  v_graphEle.relateAcrossR301To(v_graphNode);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_graphEle != null) {
  v_graphEle.relateAcrossR23To(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Diagramelement_c v_diaEle = new Diagramelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_diaEle));


if (v_diaEle != null) {
  v_diaEle.relateAcrossR302To(v_graphEle);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


ContainingShape_c v_container = new ContainingShape_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_container));


if (v_elem != null) {
  v_elem.relateAcrossR2To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_elem != null) {
  v_elem.relateAcrossR1To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_spec != null) {
  v_spec.relateAcrossR10To(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_container != null) {
  v_container.relateAcrossR28To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(this);


if (v_graphEle != null) {
  v_graphEle.setPositionx( 4100) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_graphEle != null) {
  v_graphEle.setPositiony( 3100) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_graphNode != null) {
  v_graphNode.setWidth( Gr_c.Getclientwidth() - 200) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_graphNode != null) {
  v_graphNode.setHeight( Gr_c.Getclientheight() - 200) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_elem != null) {
  v_elem.setRepresents( getRepresents()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_elem != null) {
  v_elem.setOoa_id( getOoa_id()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


   } // End initializeOnCreationSymbols
  public  boolean      Hascontainersymbol()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Hascontainersymbol") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ElementSpecification_test21554_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ElementSpecification_c selected = (ElementSpecification_c)candidate;
		return (selected.getSymboltype().equals("container") && selected.getCreationrule().equals("on canvas creation")) ;
	}
  }
ElementSpecification_c [] v_containerSpecs = ElementSpecification_c.getManyGD_ESsOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(ModelSpecification_c.getManyGD_MSsOnR9(this)), new ElementSpecification_test21554_c());


return   (v_containerSpecs.length != 0);



   } // End hasContainerSymbol
  public  void Newconnector(final java.util.UUID         p_Arsid,final java.util.UUID         p_Connector,final java.util.UUID         p_Elementid,final java.util.UUID         p_Representsid)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Newconnector") ; 
               final ModelRoot modelRoot = getModelRoot();
  class AutoReconciliationSpecification_test21555_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		AutoReconciliationSpecification_c selected = (AutoReconciliationSpecification_c)candidate;
		return selected.getId().equals(p_Arsid) ;
	}
  }
AutoReconciliationSpecification_c v_ars = AutoReconciliationSpecification_c.getOneGD_ARSOnR29(ElementSpecification_c.getManyGD_ESsOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(ModelSpecification_c.getManyGD_MSsOnR9(this))), new AutoReconciliationSpecification_test21555_c());


ElementSpecification_c v_elemSpec = ElementSpecification_c.getOneGD_ESOnR29(v_ars);


  class GraphicalElement_test21556_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		GraphicalElement_c selected = (GraphicalElement_c)candidate;
		return (selected.getElementid().equals(p_Elementid)) ;
	}
  }
GraphicalElement_c v_shapeEle = GraphicalElement_c.getOneGD_GEOnR10(v_elemSpec, new GraphicalElement_test21556_c());


Model_c v_canvas = Model_c.getOneGD_MDOnR1(v_shapeEle);


ElementSpecification_c v_existingSpec = ElementSpecification_c.getOneGD_ESOnR30(v_ars);


  class Connector_test21557_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Connector_c selected = (Connector_c)candidate;
		return selected.getElementid().equals(p_Connector) ;
	}
  }
Connector_c v_existingConnector = Connector_c.getOneGD_CONOnR2(GraphicalElement_c.getManyGD_GEsOnR10(v_existingSpec), new Connector_test21557_c());


Graphconnector_c v_startEle = Graphconnector_c.getOneDIM_CONOnR320(Graphedge_c.getOneDIM_EDOnR20(v_existingConnector));


Graphconnector_c v_endEle = Graphconnector_c.getOneDIM_CONOnR321(Graphedge_c.getOneDIM_EDOnR20(v_existingConnector));


if ( (  (v_startEle == null) &&   (v_endEle == null)) )
{

GraphicalElement_c v_existingGE = GraphicalElement_c.getOneGD_GEOnR2(v_existingConnector);


Cl_c.Logexception(			    
"Found an invalid connector as the base for" + " reconciliation." + Os_c.Newline() + "The connector id is: " + Os_c.Uniqueidtostring(			    
p_Connector) + Os_c.Newline() + "The connector path is: " + v_existingGE.getRepresents_path() + Os_c.Newline() + "The connector has been recreated" ) ;


if (v_existingConnector != null) {
v_existingConnector.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_ars != null) {
  v_ars.setReprocess( true) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


return ;



}

GraphicalElement_c v_newConElem = new GraphicalElement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_newConElem));


if (v_newConElem != null) {
  v_newConElem.relateAcrossR1To(v_canvas);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Connector_c v_connector = new Connector_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_connector));


if (v_newConElem != null) {
  v_newConElem.relateAcrossR2To(v_connector);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphedge_c v_graphEdge = new Graphedge_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphEdge));


if (v_graphEdge != null) {
  v_graphEdge.relateAcrossR20To(v_connector);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphelement_c v_graphEle = new Graphelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphEle));


if (v_graphEle != null) {
  v_graphEle.relateAcrossR301To(v_graphEdge);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_graphEle != null) {
  v_graphEle.relateAcrossR23To(v_newConElem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Diagramelement_c v_diaEle = new Diagramelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_diaEle));


if (v_diaEle != null) {
  v_diaEle.relateAcrossR302To(v_graphEle);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


LineSegment_c v_segment = new LineSegment_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_segment));


Waypoint_c v_startPoint = new Waypoint_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_startPoint));


if (v_startPoint != null) {
  v_startPoint.relateAcrossR21To(v_segment);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_startPoint != null) {
  v_startPoint.relateAcrossR319To(v_graphEdge);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Waypoint_c v_endPoint = new Waypoint_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_endPoint));


if (v_endPoint != null) {
  v_endPoint.relateAcrossR22To(v_segment);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_endPoint != null) {
  v_endPoint.relateAcrossR319To(v_graphEdge);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_endPoint != null) {
  v_endPoint.relateAcrossR324ToFollows(v_startPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_connector != null) {
  v_connector.relateAcrossR6To(v_segment);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


FloatingText_c v_text = new FloatingText_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_text));


if (v_text != null) {
  v_text.setEnd( End_c.Start) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_connector != null) {
  v_connector.relateAcrossR8To(v_text);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_text != null) {
v_text.Createsupertypeinstances() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_text = new FloatingText_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_text));


if (v_text != null) {
  v_text.setEnd( End_c.Middle) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_connector != null) {
  v_connector.relateAcrossR8To(v_text);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_text != null) {
v_text.Createsupertypeinstances() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_text = new FloatingText_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_text));


if (v_text != null) {
  v_text.setEnd( End_c.End) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_connector != null) {
  v_connector.relateAcrossR8To(v_text);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_text != null) {
v_text.Createsupertypeinstances() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(v_canvas);


ElementSpecification_c v_reconcileToSpec = ElementSpecification_c.getOneGD_ESOnR30(v_ars);


ElementSpecification_c v_existingConnectorSpec = ElementSpecification_c.getOneGD_ESOnR10(GraphicalElement_c.getOneGD_GEOnR2(v_existingConnector));


if ( v_reconcileToSpec != v_existingConnectorSpec )
{

String       v_message = "Supplied connector type " + v_existingConnectorSpec.getName() + "does not match reconciliation type " + v_reconcileToSpec.getName() + "." ;


Cl_c.Logerror(			    
v_message ) ;



}

else
{

boolean      v_start = true ;


ElementSpecification_c v_newSpec = ElementSpecification_c.getOneGD_ESOnR31(v_ars);


if (v_newConElem != null) {
  v_newConElem.relateAcrossR10To(v_newSpec);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


float        v_percentOfEdgeLength = 0.0f ;


Graphelement_c v_endShape = Graphelement_c.getOneDIM_GEOnR311(Graphconnector_c.getOneDIM_CONOnR321(Graphedge_c.getOneDIM_EDOnR20(v_existingConnector)));


Model_c v_conModel = Model_c.getOneGD_MDOnR1(GraphicalElement_c.getOneGD_GEOnR2(v_existingConnector));


Graphelement_c v_shapeDIMGe = Graphelement_c.getOneDIM_GEOnR23(v_shapeEle);


if ( (  (v_endShape != null) && v_conModel == this && v_shapeDIMGe == v_endShape) )
{

v_start = false ;



}

int  v_shapeEdge = v_existingConnector.Getshapeedge(			    
End_c.Start) ;


if ( (  !v_start) )
{

v_shapeEdge = v_existingConnector.Getshapeedge(			    
End_c.End) ;


v_percentOfEdgeLength = v_existingConnector.Getpercentofedgelength(			    
End_c.End			    
,v_start) ;


Graphconnector_c v_existingAnchor = Graphconnector_c.getOneDIM_CONOnR321(Graphedge_c.getOneDIM_EDOnR20(v_existingConnector));


if (v_existingAnchor != null) {
v_existingAnchor.unrelateAcrossR311From(v_endShape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_existingAnchor != null) {
  v_existingAnchor.relateAcrossR311To(v_graphEle);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


AnchorOnSegment_c v_aos = new AnchorOnSegment_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_aos));


if (v_aos != null) {
  v_aos.relateAcrossR26To( v_existingAnchor ) ;   v_aos.relateAcrossR26To( v_segment ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

else
{

v_percentOfEdgeLength = v_existingConnector.Getpercentofedgelength(			    
End_c.Start			    
,v_start) ;



}

if ( v_reconcileToSpec != v_newSpec )
{

if (v_newConElem != null) {
  v_newConElem.setRepresents( Cl_c.Getinstancefromooa_id(			    
p_Representsid			    
,v_newSpec.getOoa_type()			    
,getRepresents())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_newConElem != null) {
  v_newConElem.setOoa_id( p_Representsid) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

else
{

GraphicalElement_c v_existingGE = GraphicalElement_c.getOneGD_GEOnR2(v_existingConnector);


if (v_newConElem != null) {
  v_newConElem.setRepresents( v_existingGE.getRepresents()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_newConElem != null) {
  v_newConElem.setOoa_id( Cl_c.Getooaid(			    
v_existingGE.getRepresents())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

if (v_graphEdge != null) {
v_graphEdge.Setconnectorposition(			    
v_endPoint.getWay_id()			    
,v_percentOfEdgeLength			    
,v_shapeEdge			    
,v_shapeEle.getElementid()			    
,v_start			    
,v_startPoint.getWay_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End newConnector
  public  void Elementsuppressed(final Object p_Elem)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Elementsuppressed") ; 
               final ModelRoot modelRoot = getModelRoot();
GraphicalElement_c [] v_elems = GraphicalElement_c.getManyGD_GEsOnR1(this);


GraphicalElement_c  v_elem = null;
for ( int i21348 = 0; i21348 < v_elems.length; i21348++)
{
  v_elem = v_elems[i21348] ;

if ( v_elem.getRepresents() == p_Elem )
{

this.unrelateAcrossR1From(v_elem);


ElementInSuppression_c v_eis = new ElementInSuppression_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_eis));


if (v_eis != null) {
  v_eis.relateAcrossR32To( this ) ;   v_eis.relateAcrossR32To( v_elem ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


break;



}


}


   } // End elementSuppressed
  public  void Elementrestored(final Object p_Elem)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Elementrestored") ; 
               final ModelRoot modelRoot = getModelRoot();
GraphicalElement_c [] v_elems = GraphicalElement_c.getManyGD_GEsOnR32(ElementInSuppression_c.getManyGD_EISsOnR32(this));


GraphicalElement_c  v_elem = null;
for ( int i21349 = 0; i21349 < v_elems.length; i21349++)
{
  v_elem = v_elems[i21349] ;

if ( v_elem.getRepresents() == p_Elem )
{

ElementInSuppression_c v_eis = ElementInSuppression_c.getOneGD_EISOnR32(v_elem);


if (v_eis != null) {
v_eis.unrelateAcrossR32From( this ) ; v_eis.unrelateAcrossR32From( v_elem ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_eis != null) {
// get the location of this element in the instance list
// before deleting
if ( v_eis.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_eis));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


  this.relateAcrossR1To(v_elem);


break;



}


}


   } // End elementRestored
  public  void Showhiddenfloatingtext()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Showhiddenfloatingtext") ; 
               final ModelRoot modelRoot = getModelRoot();
Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(this);


float        v_lastXExtent = v_diagram.getViewportx() ;


float        v_lastYExtent = v_diagram.getViewporty() ;


float        v_lowestY = v_lastYExtent ;


int          v_maxWidth = 8000 ;


int          v_maxHeight = 6000 ;


FloatingText_c [] v_floatingTexts = FloatingText_c.getManyGD_CTXTsOnR8(Connector_c.getManyGD_CONsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(this)));


FloatingText_c  v_floatingText = null;
for ( int i21350 = 0; i21350 < v_floatingTexts.length; i21350++)
{
  v_floatingText = v_floatingTexts[i21350] ;

Graphnode_c v_node = Graphnode_c.getOneDIM_NDOnR19(v_floatingText);


Graphelement_c v_element = Graphelement_c.getOneDIM_GEOnR301(v_node);


float        v_positionX = v_element.getPositionx() ;


float        v_positionY = v_element.getPositiony() ;


float        v_width = v_node.getWidth() ;


float        v_height = v_node.getHeight() ;


boolean      v_adjust = false ;


if ( (v_positionX >= v_maxWidth) || (v_positionX <= 0) || (v_positionY >= v_maxHeight) || (v_positionY <= 0) )
{

v_adjust = true ;



}

if ( (v_adjust) )
{

if ( ((v_lastXExtent + 10 + v_width) >= v_diagram.getViewportx() + Gr_c.Scale(			    
Gr_c.Getclientwidth())) )
{

v_lastXExtent = v_diagram.getViewportx() ;


v_lastYExtent = v_lowestY + 10 ;



}

if (v_element != null) {
  v_element.setPositionx( v_lastXExtent + 10) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


v_lastXExtent = v_lastXExtent + 10 + v_width ;


if (v_element != null) {
  v_element.setPositiony( v_lastYExtent + 10) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if ( ((v_element.getPositiony() + v_height) > v_lowestY) )
{

v_lowestY = v_element.getPositiony() + v_height ;



}


}


}

v_lastXExtent = v_diagram.getViewportx() ;


v_lastYExtent = v_diagram.getViewporty() ;


v_lowestY = v_lastYExtent ;


v_floatingTexts = FloatingText_c.getManyGD_CTXTsOnR27(Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(this)));


for ( int i21351 = 0; i21351 < v_floatingTexts.length; i21351++)
{
  v_floatingText = v_floatingTexts[i21351] ;

Graphnode_c v_node = Graphnode_c.getOneDIM_NDOnR19(v_floatingText);


Graphelement_c v_element = Graphelement_c.getOneDIM_GEOnR301(v_node);


float        v_positionX = v_element.getPositionx() ;


float        v_positionY = v_element.getPositiony() ;


float        v_width = v_node.getWidth() ;


float        v_height = v_node.getHeight() ;


boolean      v_adjust = false ;


if ( (v_positionX >= v_maxWidth) || (v_positionX <= 0) || (v_positionY >= v_maxHeight) || (v_positionY <= 0) )
{

v_adjust = true ;



}

if ( (v_adjust) )
{

if ( ((v_lastXExtent + 10 + v_width) >= v_diagram.getViewportx() + Gr_c.Scale(			    
Gr_c.Getclientwidth())) )
{

v_lastXExtent = v_diagram.getViewportx() ;


v_lastYExtent = v_lowestY + 10 ;



}

if (v_element != null) {
  v_element.setPositionx( v_lastXExtent + 10) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


v_lastXExtent = v_lastXExtent + 10 + v_width ;


if (v_element != null) {
  v_element.setPositiony( v_lastYExtent + 10) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if ( ((v_element.getPositiony() + v_height) > v_lowestY) )
{

v_lowestY = v_element.getPositiony() + v_height ;



}


}


}


   } // End showHiddenFloatingText
  public  void Newshape(final java.util.UUID         p_Arsid,final java.util.UUID         p_Shape)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Newshape") ; 
               final ModelRoot modelRoot = getModelRoot();
  class AutoReconciliationSpecification_test21558_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		AutoReconciliationSpecification_c selected = (AutoReconciliationSpecification_c)candidate;
		return selected.getId().equals(p_Arsid) ;
	}
  }
AutoReconciliationSpecification_c v_ars = AutoReconciliationSpecification_c.getOneGD_ARSOnR33(ModelSpecification_c.getManyGD_MSsOnR9(this), new AutoReconciliationSpecification_test21558_c());


if ( (  (v_ars == null)) )
{

return ;



}

ModelSpecification_c v_modelSpec = ModelSpecification_c.getOneGD_MSOnR33(v_ars);


ElementSpecification_c [] v_specs = ElementSpecification_c.getManyGD_ESsOnR11(v_modelSpec);


ElementSpecification_c v_reconcileToSpec = ElementSpecification_c.getOneGD_ESOnR30(v_ars);


Shape_c [] v_otherShps = Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(this));


Shape_c v_rightMostShp = Shape_c.getOneGD_SHPOnR2(GraphicalElement_c.getManyGD_GEsOnR1(this));


Graphnode_c v_rightMostNode = Graphnode_c.getOneDIM_NDOnR19(v_rightMostShp);


Graphelement_c v_rightMostElement = Graphelement_c.getOneDIM_GEOnR301(v_rightMostNode);


Shape_c  v_otherShp = null;
for ( int i21352 = 0; i21352 < v_otherShps.length; i21352++)
{
  v_otherShp = v_otherShps[i21352] ;

Graphnode_c v_otherNode = Graphnode_c.getOneDIM_NDOnR19(v_otherShp);


Graphelement_c v_otherElement = Graphelement_c.getOneDIM_GEOnR301(v_otherNode);


if ( (v_otherElement.getPositionx() > v_rightMostElement.getPositionx()) )
{

v_rightMostShp = v_otherShp ;


v_rightMostNode = v_otherNode ;


v_rightMostElement = v_otherElement ;



}


}

GraphicalElement_c v_elem = new GraphicalElement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_elem));


Shape_c v_shape = new Shape_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_shape));


Graphnode_c v_graphNode = new Graphnode_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphNode));


if (v_graphNode != null) {
  v_graphNode.relateAcrossR19To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphelement_c v_graphEle = new Graphelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphEle));


if (v_graphEle != null) {
  v_graphEle.relateAcrossR301To(v_graphNode);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_graphEle != null) {
  v_graphEle.relateAcrossR23To(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Diagramelement_c v_diaEle = new Diagramelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_diaEle));


if (v_diaEle != null) {
  v_diaEle.relateAcrossR302To(v_graphEle);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  class Shape_test21559_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Shape_c selected = (Shape_c)candidate;
		return selected.getElementid().equals(p_Shape) ;
	}
  }
Shape_c v_existingShape = Shape_c.getOneGD_SHPOnR2(GraphicalElement_c.getManyGD_GEsOnR10(v_reconcileToSpec), new Shape_test21559_c());


ElementSpecification_c v_newSpec = ElementSpecification_c.getOneGD_ESOnR31(v_ars);


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(this);


ElementSpecification_c v_existingShapeSpec = ElementSpecification_c.getOneGD_ESOnR10(GraphicalElement_c.getOneGD_GEOnR2(v_existingShape));


if ( (v_reconcileToSpec.getSymboltype().equals("shape")) )
{

NoncontainingShape_c v_ncs = new NoncontainingShape_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ncs));


if (v_ncs != null) {
  v_ncs.relateAcrossR28To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

ContainingShape_c v_containerShp = new ContainingShape_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_containerShp));


if (v_containerShp != null) {
  v_containerShp.relateAcrossR28To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

boolean      v_autoResize = false ;


ContainingShape_c v_containerShape = (ContainingShape_c) modelRoot.getInstanceList(ContainingShape_c.class).getGlobal(null, p_Shape);


if ( (Hascontainersymbol()) )
{

  class ElementSpecification_test21560_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ElementSpecification_c selected = (ElementSpecification_c)candidate;
		return (selected.getSymboltype().equals("container") && selected.getCreationrule().equals("on canvas creation")) ;
	}
  }
ElementSpecification_c v_containerSpec = ElementSpecification_c.getOneGD_ESOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(ModelSpecification_c.getManyGD_MSsOnR9(this)), new ElementSpecification_test21560_c());


if ( (  (v_containerSpec != null)) )
{

GraphicalElement_c v_container = GraphicalElement_c.getOneGD_GEOnR2(Shape_c.getManyGD_SHPsOnR28(ContainingShape_c.getManyGD_CTRsOnR28(Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(this)))));


if ( (  (v_container != null)) )
{

Graphelement_c v_containerDimGe = Graphelement_c.getOneDIM_GEOnR23(v_container);


if (v_diaEle != null) {
  v_diaEle.relateAcrossR307To(v_containerDimGe);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR2(v_container));


v_autoResize = true ;



}


}


}

setSelrectw( v_reconcileToSpec.Getdefaultwidth()) ;


setSelrecth( v_reconcileToSpec.Getdefaultheight()) ;


if (v_graphNode != null) {
  v_graphNode.setWidth( getSelrectw()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_graphNode != null) {
  v_graphNode.setHeight( getSelrecth()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


int          v_xPosn = Cl_c.Getrightclickx() ;


int          v_yPosn = Cl_c.Getrightclicky() ;


if ( (v_xPosn == -1 && v_yPosn == -1) )
{

if ( (  (v_rightMostShp != null)) )
{

if (v_graphEle != null) {
  v_graphEle.setPositionx( v_rightMostElement.getPositionx() + v_rightMostNode.getWidth() + (v_graphNode.getWidth()) / 10) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_graphEle != null) {
  v_graphEle.setPositiony( v_rightMostElement.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

else
{

if (v_shape != null) {
v_shape.Movetodefaultposition() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

else
{

if (v_graphEle != null) {
  v_graphEle.setPositionx( v_xPosn) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_graphEle != null) {
  v_graphEle.setPositiony( v_yPosn) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

if (v_elem != null) {
  v_elem.relateAcrossR2To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_elem != null) {
  v_elem.relateAcrossR1To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_reconcileToSpec != null) {
  v_reconcileToSpec.relateAcrossR10To(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_reconcileToSpec != null) {
  v_reconcileToSpec.relateAcrossR16To(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (v_reconcileToSpec.getHasfloatingtext()) )
{

FloatingText_c v_text = new FloatingText_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_text));


if (v_text != null) {
  v_text.setEnd( End_c.Floating) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_shape != null) {
  v_shape.relateAcrossR27To(v_text);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_text != null) {
v_text.Createsupertypeinstances() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( (v_autoResize) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Cl_c.Setrightclickcoordinates(			    
-1			    
,-1 ) ;



   } // End newShape
  public  java.util.UUID         Createshape(final boolean      p_Createclient,final java.util.UUID         p_Toolid)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Createshape") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ModelTool_test21561_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return (selected.getTool_id().equals(p_Toolid)) ;
	}
  }
ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21561_c());


ElementSpecification_c v_elem_spec = ElementSpecification_c.getOneGD_ESOnR103(v_tool);


if ( (  (v_elem_spec != null)) )
{

GraphicalElement_c v_elem = new GraphicalElement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_elem));


Shape_c v_shape = new Shape_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_shape));


Graphnode_c v_graphNode = new Graphnode_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphNode));


if (v_graphNode != null) {
  v_graphNode.relateAcrossR19To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphelement_c v_graphEle = new Graphelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphEle));


if (v_graphEle != null) {
  v_graphEle.relateAcrossR301To(v_graphNode);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_graphEle != null) {
  v_graphEle.relateAcrossR23To(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Diagramelement_c v_diaEle = new Diagramelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_diaEle));


if (v_diaEle != null) {
  v_diaEle.relateAcrossR302To(v_graphEle);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (v_elem_spec.getSymboltype().equals("shape")) )
{

NoncontainingShape_c v_ncs = new NoncontainingShape_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ncs));


if (v_ncs != null) {
  v_ncs.relateAcrossR28To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

ContainingShape_c v_containerShp = new ContainingShape_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_containerShp));


if (v_containerShp != null) {
  v_containerShp.relateAcrossR28To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_elem != null) {
  v_elem.relateAcrossR2To(v_shape);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_elem != null) {
  v_elem.relateAcrossR1To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_elem_spec != null) {
  v_elem_spec.relateAcrossR10To(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_elem_spec != null) {
  v_elem_spec.relateAcrossR16To(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (v_elem_spec.getHasfloatingtext()) )
{

FloatingText_c v_text = new FloatingText_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_text));


if (v_text != null) {
  v_text.setEnd( End_c.Floating) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_shape != null) {
  v_shape.relateAcrossR27To(v_text);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_text != null) {
v_text.Createsupertypeinstances() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ContainingShape_c v_containerShape = (ContainingShape_c) modelRoot.getInstanceList(ContainingShape_c.class).getGlobal(null, Os_c.Null_unique_id());


if ( (Hascontainersymbol()) )
{

  class ElementSpecification_test21562_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ElementSpecification_c selected = (ElementSpecification_c)candidate;
		return (selected.getSymboltype().equals("container") && selected.getCreationrule().equals("on canvas creation")) ;
	}
  }
ElementSpecification_c v_containerSpec = ElementSpecification_c.getOneGD_ESOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(ModelSpecification_c.getManyGD_MSsOnR9(this)), new ElementSpecification_test21562_c());


if ( (  (v_containerSpec != null)) )
{

GraphicalElement_c v_container = GraphicalElement_c.getOneGD_GEOnR2(Shape_c.getManyGD_SHPsOnR28(ContainingShape_c.getManyGD_CTRsOnR28(Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(this)))));


if ( (  (v_container != null)) )
{

Graphelement_c v_containerDimGe = Graphelement_c.getOneDIM_GEOnR23(v_container);


if (v_diaEle != null) {
  v_diaEle.relateAcrossR307To(v_containerDimGe);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR2(v_container));



}


}


}

if ( (p_Createclient) )
{

Cl_c.Createnode(			    
getRepresents()			    
,v_elem_spec.getCreator() ) ;



}

if (v_elem_spec != null) {
v_elem_spec.unrelateAcrossR16From(v_elem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


Cl_c.Addtoselection(			    
v_elem.getRepresents() ) ;


return v_shape.getElementid();



}

return Os_c.Null_unique_id();



   } // End createShape
  public  java.util.UUID         Createconnector(final boolean      p_Createclient,final java.util.UUID         p_Endid,final java.util.UUID         p_Startid,final java.util.UUID         p_Toolid,final int          p_X,final int          p_X1,final int          p_Y,final int          p_Y1)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Createconnector") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ModelTool_test21563_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return (selected.getTool_id().equals(p_Toolid)) ;
	}
  }
ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21563_c());


ElementSpecification_c v_elemSpec = ElementSpecification_c.getOneGD_ESOnR103(v_tool);


if ( (  (v_elemSpec != null)) )
{

  class GraphicalElement_test21564_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		GraphicalElement_c selected = (GraphicalElement_c)candidate;
		return (selected.getElementid().equals(p_Startid)) ;
	}
  }
GraphicalElement_c v_startElement = GraphicalElement_c.getOneGD_GEOnR1(this, new GraphicalElement_test21564_c());


  class GraphicalElement_test21565_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		GraphicalElement_c selected = (GraphicalElement_c)candidate;
		return (selected.getElementid().equals(p_Endid)) ;
	}
  }
GraphicalElement_c v_endElement = GraphicalElement_c.getOneGD_GEOnR1(this, new GraphicalElement_test21565_c());


GraphicalElement_c v_conElem = new GraphicalElement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_conElem));


if (v_conElem != null) {
  v_conElem.relateAcrossR10To(v_elemSpec);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_conElem != null) {
  v_conElem.relateAcrossR1To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Connector_c v_connector = new Connector_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_connector));


if (v_conElem != null) {
  v_conElem.relateAcrossR2To(v_connector);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphedge_c v_graphEdge = new Graphedge_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphEdge));


if (v_graphEdge != null) {
  v_graphEdge.relateAcrossR20To(v_connector);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphelement_c v_graphEle = new Graphelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_graphEle));


if (v_graphEle != null) {
  v_graphEle.relateAcrossR301To(v_graphEdge);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_graphEle != null) {
  v_graphEle.relateAcrossR23To(v_conElem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Diagramelement_c v_diaEle = new Diagramelement_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_diaEle));


if (v_diaEle != null) {
  v_diaEle.relateAcrossR302To(v_graphEle);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


LineSegment_c v_segment = new LineSegment_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_segment));


Waypoint_c v_startPoint = new Waypoint_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_startPoint));


if (v_startPoint != null) {
  v_startPoint.relateAcrossR21To(v_segment);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_startPoint != null) {
  v_startPoint.relateAcrossR319To(v_graphEdge);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Waypoint_c v_endPoint = new Waypoint_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_endPoint));


if (v_endPoint != null) {
  v_endPoint.relateAcrossR22To(v_segment);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_endPoint != null) {
  v_endPoint.relateAcrossR319To(v_graphEdge);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_endPoint != null) {
  v_endPoint.relateAcrossR324ToFollows(v_startPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_connector != null) {
  v_connector.relateAcrossR6To(v_segment);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_elemSpec != null) {
  v_elemSpec.relateAcrossR16To(v_conElem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


FloatingText_c v_text = new FloatingText_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_text));


if (v_text != null) {
  v_text.setEnd( End_c.Start) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_connector != null) {
  v_connector.relateAcrossR8To(v_text);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_text != null) {
v_text.Createsupertypeinstances() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_text = new FloatingText_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_text));


if (v_text != null) {
  v_text.setEnd( End_c.Middle) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_connector != null) {
  v_connector.relateAcrossR8To(v_text);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_text != null) {
v_text.Createsupertypeinstances() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_text = new FloatingText_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_text));


if (v_text != null) {
  v_text.setEnd( End_c.End) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_connector != null) {
  v_connector.relateAcrossR8To(v_text);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_text != null) {
v_text.Createsupertypeinstances() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_startPoint != null) {
  v_startPoint.setPositionx( p_X) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_startPoint != null) {
  v_startPoint.setPositiony( p_Y) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_endPoint != null) {
  v_endPoint.setPositionx( p_X1) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_endPoint != null) {
  v_endPoint.setPositiony( p_Y1) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if ( (  (v_startElement != null)) )
{

Graphconnector_c v_anchor = new Graphconnector_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_anchor));


Waypoint_c v_segmentStart = Waypoint_c.getOneDIM_WAYOnR21(v_segment);


Waypoint_c v_segmentEnd = Waypoint_c.getOneDIM_WAYOnR22(v_segment);


if (v_anchor != null) {
  v_anchor.setPositionx( v_segmentStart.getPositionx()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_anchor != null) {
  v_anchor.setPositiony( v_segmentStart.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Graphelement_c v_graphElement = Graphelement_c.getOneDIM_GEOnR23(v_startElement);


if (v_anchor != null) {
  v_anchor.relateAcrossR311To(v_graphElement);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphedge_c v_edge = Graphedge_c.getOneDIM_EDOnR20(v_connector);


if (v_edge != null) {
  v_edge.relateAcrossR320To(v_anchor);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if ( (  (v_endElement != null)) )
{

Graphconnector_c v_anchor = new Graphconnector_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_anchor));


Waypoint_c v_segmentEnd = Waypoint_c.getOneDIM_WAYOnR22(v_segment);


if (v_anchor != null) {
  v_anchor.setPositionx( v_segmentEnd.getPositionx()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_anchor != null) {
  v_anchor.setPositiony( v_segmentEnd.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Graphelement_c v_graphElement = Graphelement_c.getOneDIM_GEOnR23(v_endElement);


if (v_anchor != null) {
  v_anchor.relateAcrossR311To(v_graphElement);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Graphedge_c v_edge = Graphedge_c.getOneDIM_EDOnR20(v_connector);


if (v_edge != null) {
  v_edge.relateAcrossR321To(v_anchor);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

java.util.UUID         v_startOOA_ID = Os_c.Null_unique_id() ;


int  v_startOOA_Type = Ooatype_c.None ;


java.util.UUID         v_endOOA_ID = Os_c.Null_unique_id() ;


int  v_endOOA_Type = Ooatype_c.None ;


if ( (  (v_startElement != null)) )
{

v_startOOA_ID = Cl_c.Getooaid(			    
v_startElement.getRepresents()) ;


v_startOOA_Type = v_startElement.getOoa_type() ;



}

if ( (  (v_endElement != null)) )
{

v_endOOA_ID = Cl_c.Getooaid(			    
v_endElement.getRepresents()) ;


v_endOOA_Type = v_endElement.getOoa_type() ;



}

if ( (p_Createclient) )
{

boolean      v_success = Cl_c.Createconnector(			    
v_startOOA_ID			    
,v_startOOA_Type == Ooatype_c.ImportedClass			    
,getRepresents()			    
,v_endOOA_ID			    
,v_endOOA_Type == Ooatype_c.ImportedClass			    
,v_elemSpec.getCreator()) ;


if ( (  !v_success) )
{

if (v_conElem != null) {
v_conElem.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

if (v_elemSpec != null) {
v_elemSpec.unrelateAcrossR16From(v_conElem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


return v_connector.getElementid();



}

return Os_c.Null_unique_id();



   } // End createConnector
  public  void Createnewlayer(final String       p_Name)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Createnewlayer") ; 
               final ModelRoot modelRoot = getModelRoot();
Layer_c v_layer = new Layer_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_layer));


if (v_layer != null) {
  v_layer.setLayer_name( p_Name) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_layer != null) {
  v_layer.setVisible( true) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_layer != null) {
  v_layer.relateAcrossR34To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End createNewLayer
  public  String       Get_name()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
return "Graphical Data";



   } // End get_name
  public  void Setcachedrepresentspath(final String       p_Value)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Setcachedrepresentspath") ; 
	m_represents_path = p_Value;
   } // End setCachedRepresentsPath
  public  String       Getcachedrepresentspath()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model", " Operation entered: Model::Getcachedrepresentspath") ; 
	return m_represents_path;
   } // End getCachedRepresentsPath

  // end transform functions

  public static final int
    ST_MODEL_IDLE = 1, 
    ST_MODEL_DELEGATING_MOUSE_PRESS = 2, 
    ST_MODEL_DELEGATING_MOUSE_MOVE = 3, 
    ST_MODEL_DELEGATING_MOUSE_RELEASE = 4, 
    ST_MODEL_ACTIVATING_SCROLL_TOOL = 6, 
    ST_MODEL_DEACTIVATING_SCROLL_TOOL = 7, 
    ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS = 8, 
    ST_MODEL_HANDLING_MIDDLE_MOUSE_BUTTON_DOWN = 9;

   private int state = ST_MODEL_IDLE ;
   private Vector<genericEvent_c> eventQueue = new Vector<genericEvent_c>(10,10) ;
   private Vector<genericEvent_c> selfEventQueue = new Vector<genericEvent_c>(10,10) ;

  public int get_current_state() { return state; }
    
  static final int EVCD_MODEL_MOUSE_MOVED = 4 ;
   public synchronized void MouseMoved( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_MODEL_MOUSE_MOVED incoming_event = new EV_MODEL_MOUSE_MOVED() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_MOUSE_RELEASED = 3 ;
   public synchronized void MouseReleased( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_MODEL_MOUSE_RELEASED incoming_event = new EV_MODEL_MOUSE_RELEASED() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_MOUSE_PRESSED = 2 ;
   public synchronized void MousePressed( boolean self_directed , final boolean      p_retain_selection, final int          p_x, final int          p_y)
  {
    EV_MODEL_MOUSE_PRESSED incoming_event = new EV_MODEL_MOUSE_PRESSED() ;
    incoming_event.edi_retain_selection = p_retain_selection ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_DONE = 6 ;
   public synchronized void Done( boolean self_directed )
  {
    EV_MODEL_DONE incoming_event = new EV_MODEL_DONE() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_MOUSE_EXIT = 22 ;
   public synchronized void MouseExit( boolean self_directed )
  {
    EV_MODEL_MOUSE_EXIT incoming_event = new EV_MODEL_MOUSE_EXIT() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_MOUSE_ENTER = 23 ;
   public synchronized void MouseEnter( boolean self_directed )
  {
    EV_MODEL_MOUSE_ENTER incoming_event = new EV_MODEL_MOUSE_ENTER() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_SPACE_PRESSED = 24 ;
   public synchronized void SpacePressed( boolean self_directed )
  {
    EV_MODEL_SPACE_PRESSED incoming_event = new EV_MODEL_SPACE_PRESSED() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_SPACE_RELEASED = 25 ;
   public synchronized void SpaceReleased( boolean self_directed )
  {
    EV_MODEL_SPACE_RELEASED incoming_event = new EV_MODEL_SPACE_RELEASED() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_MOUSE_CONTEXT_PRESS = 5 ;
   public synchronized void MouseContextPress( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_MODEL_MOUSE_CONTEXT_PRESS incoming_event = new EV_MODEL_MOUSE_CONTEXT_PRESS() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_MODEL_MOUSE_MIDDLE_BUTTON_PRESS = 26 ;
   public synchronized void MouseMiddleButtonPress( boolean self_directed )
  {
    EV_MODEL_MOUSE_MIDDLE_BUTTON_PRESS incoming_event = new EV_MODEL_MOUSE_MIDDLE_BUTTON_PRESS() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }

  public synchronized void takeEvent(genericEvent_c incoming_event)
  {
    eventQueue.addElement(incoming_event) ;
	notify() ;
  }

  public synchronized void procEvent()
  {
    ModelRoot modelRoot = getModelRoot();
    EV_MODEL currentEvent ;
	if (selfEventQueue.size() != 0) {
	  currentEvent = (EV_MODEL)selfEventQueue.firstElement() ;
	  selfEventQueue.removeElement(currentEvent) ;
	}
	else {
      currentEvent = (EV_MODEL)eventQueue.firstElement() ;
      if (currentEvent != null) {
        eventQueue.removeElement(currentEvent) ;
	  }
	}
	if (currentEvent != null) {
      switch (currentEvent.getEvtcode())
      {
        case EVCD_MODEL_MOUSE_MOVED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.MouseMoved in " + state) ; 
          final EV_MODEL_MOUSE_MOVED arch_event = (EV_MODEL_MOUSE_MOVED)currentEvent ;
          switch (state)
          {
          case ST_MODEL_IDLE:
            {
  class ModelTool_test21543_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return (selected.getActive() == true) ;
	}
  }
ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21543_c());


if ( (  (v_tool != null)) )
{

// Generate event CT_MTL4:MouseMoved to tool
if (v_tool != null) {
  v_tool.MouseMoved(false , arch_event.edi_x,arch_event.edi_y ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to fire null event instance.", t);
}



}

// Generate event GD_MD6:Done to self
Done(true ) ;



            }
            state = ST_MODEL_DELEGATING_MOUSE_MOVE ;
            break ;
               case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_ACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
               case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD4:Mouse Moved", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_MOUSE_RELEASED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.MouseReleased in " + state) ; 
          final EV_MODEL_MOUSE_RELEASED arch_event = (EV_MODEL_MOUSE_RELEASED)currentEvent ;
          switch (state)
          {
          case ST_MODEL_IDLE:
            {
  class ModelTool_test21544_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return (selected.getActive() == true) ;
	}
  }
ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21544_c());


if ( (  (v_tool != null)) )
{

// Generate event CT_MTL3:MouseReleased to tool
if (v_tool != null) {
  v_tool.MouseReleased(false , arch_event.edi_x,arch_event.edi_y ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to fire null event instance.", t);
}



}

// Generate event GD_MD6:Done to self
Done(true ) ;



            }
            state = ST_MODEL_DELEGATING_MOUSE_RELEASE ;
            break ;
               case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_ACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
               case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD3:Mouse Released", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_MOUSE_PRESSED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.MousePressed in " + state) ; 
          final EV_MODEL_MOUSE_PRESSED arch_event = (EV_MODEL_MOUSE_PRESSED)currentEvent ;
          switch (state)
          {
          case ST_MODEL_IDLE:
            {
  class ModelTool_test21542_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelTool_c selected = (ModelTool_c)candidate;
		return (selected.getActive() == true) ;
	}
  }
ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR100(this, new ModelTool_test21542_c());


if ( (  (v_tool != null)) )
{

// Generate event CT_MTL1:MousePressed to tool
if (v_tool != null) {
  v_tool.MousePressed(false , arch_event.edi_x,arch_event.edi_y,arch_event.edi_retain_selection ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to fire null event instance.", t);
}



}

// Generate event GD_MD6:Done to self
Done(true ) ;



            }
            state = ST_MODEL_DELEGATING_MOUSE_PRESS ;
            break ;
               case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_ACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
               case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD2:Mouse Pressed", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_DONE:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.Done in " + state) ; 
          final EV_MODEL_DONE arch_event = (EV_MODEL_DONE)currentEvent ;
          switch (state)
          {
          case ST_MODEL_DELEGATING_MOUSE_PRESS:
            {

            }
            state = ST_MODEL_IDLE ;
            break ;
          case ST_MODEL_DELEGATING_MOUSE_MOVE:
            {

            }
            state = ST_MODEL_IDLE ;
            break ;
          case ST_MODEL_DELEGATING_MOUSE_RELEASE:
            {

            }
            state = ST_MODEL_IDLE ;
            break ;
          case ST_MODEL_ACTIVATING_SCROLL_TOOL:
            {

            }
            state = ST_MODEL_IDLE ;
            break ;
          case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
            {

            }
            state = ST_MODEL_IDLE ;
            break ;
          case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
            {

            }
            state = ST_MODEL_IDLE ;
            break ;
          case ST_MODEL_HANDLING_MIDDLE_MOUSE_BUTTON_DOWN:
            {

            }
            state = ST_MODEL_IDLE ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD6:Done", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_MOUSE_EXIT:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.MouseExit in " + state) ; 
          final EV_MODEL_MOUSE_EXIT arch_event = (EV_MODEL_MOUSE_EXIT)currentEvent ;
          switch (state)
          {
               case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_IDLE:
              	// Event Ignored
               break ;
               case ST_MODEL_ACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
               case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD22:Mouse Exit", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_MOUSE_ENTER:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.MouseEnter in " + state) ; 
          final EV_MODEL_MOUSE_ENTER arch_event = (EV_MODEL_MOUSE_ENTER)currentEvent ;
          switch (state)
          {
               case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_IDLE:
              	// Event Ignored
               break ;
               case ST_MODEL_ACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
               case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD23:Mouse Enter", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_SPACE_PRESSED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.SpacePressed in " + state) ; 
          final EV_MODEL_SPACE_PRESSED arch_event = (EV_MODEL_SPACE_PRESSED)currentEvent ;
          switch (state)
          {
               case ST_MODEL_DELEGATING_MOUSE_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_DELEGATING_MOUSE_MOVE:
              	// Event Ignored
               break ;
               case ST_MODEL_DELEGATING_MOUSE_RELEASE:
              	// Event Ignored
               break ;
          case ST_MODEL_IDLE:
            {
ScrollTool_c v_scroller = (ScrollTool_c) modelRoot.getInstanceList(ScrollTool_c.class).getGlobal(null, Getscrolltoolid());


ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR102(v_scroller);


// Generate event CT_MTL5:Activate to tool
if (v_tool != null) {
  v_tool.Activate(false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to fire null event instance.", t);
}


// Generate event GD_MD6:Done to self
Done(true ) ;



            }
            state = ST_MODEL_ACTIVATING_SCROLL_TOOL ;
            break ;
               case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_ACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
               case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD24:Space Pressed", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_SPACE_RELEASED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.SpaceReleased in " + state) ; 
          final EV_MODEL_SPACE_RELEASED arch_event = (EV_MODEL_SPACE_RELEASED)currentEvent ;
          switch (state)
          {
               case ST_MODEL_DELEGATING_MOUSE_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_DELEGATING_MOUSE_MOVE:
              	// Event Ignored
               break ;
               case ST_MODEL_DELEGATING_MOUSE_RELEASE:
              	// Event Ignored
               break ;
          case ST_MODEL_IDLE:
            {
ScrollTool_c v_scroller = (ScrollTool_c) modelRoot.getInstanceList(ScrollTool_c.class).getGlobal(null, Getscrolltoolid());


ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR102(v_scroller);


// Generate event CT_MTL6:Deactivate to tool
if (v_tool != null) {
  v_tool.Deactivate(false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to fire null event instance.", t);
}


// Generate event GD_MD6:Done to self
Done(true ) ;



            }
            state = ST_MODEL_DEACTIVATING_SCROLL_TOOL ;
            break ;
               case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_ACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
               case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD25:Space Released", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_MOUSE_CONTEXT_PRESS:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.MouseContextPress in " + state) ; 
          final EV_MODEL_MOUSE_CONTEXT_PRESS arch_event = (EV_MODEL_MOUSE_CONTEXT_PRESS)currentEvent ;
          switch (state)
          {
               case ST_MODEL_DELEGATING_MOUSE_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_DELEGATING_MOUSE_MOVE:
              	// Event Ignored
               break ;
               case ST_MODEL_DELEGATING_MOUSE_RELEASE:
              	// Event Ignored
               break ;
          case ST_MODEL_IDLE:
            {
Activateselectiontool() ;


SelectionTool_c v_selector = (SelectionTool_c) modelRoot.getInstanceList(SelectionTool_c.class).getGlobal(null, Getselectiontoolid());


// Generate event CT_SEL5:MouseContextPressed to selector
if (v_selector != null) {
  v_selector.MouseContextPressed(false , arch_event.edi_x,arch_event.edi_y ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to fire null event instance.", t);
}


// Generate event GD_MD6:Done to self
Done(true ) ;



            }
            state = ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS ;
            break ;
               case ST_MODEL_DELEGATING_MOUSE_CONTEXT_PRESS:
              	// Event Ignored
               break ;
               case ST_MODEL_ACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
               case ST_MODEL_DEACTIVATING_SCROLL_TOOL:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD5:Mouse Context Press", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_MODEL_MOUSE_MIDDLE_BUTTON_PRESS:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Model", " Event dequeued: Model.MouseMiddleButtonPress in " + state) ; 
          final EV_MODEL_MOUSE_MIDDLE_BUTTON_PRESS arch_event = (EV_MODEL_MOUSE_MIDDLE_BUTTON_PRESS)currentEvent ;
          switch (state)
          {
          case ST_MODEL_IDLE:
            {
Activateselectiontool() ;


// Generate event GD_MD6:Done to self
Done(true ) ;



            }
            state = ST_MODEL_HANDLING_MIDDLE_MOUSE_BUTTON_DOWN ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Model state = " + state + " event = GD_MD26:Mouse Middle Button Press", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
      } // end currentEvent switch
	} // end if currentEvent valid
  } // end Model procEvent

  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Model
