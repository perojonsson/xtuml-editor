package com.mentor.nucleus.bp.ui.canvas;
//====================================================================
//
// File:      com.mentor.nucleus.bp.ui.canvas.AutoReconciliationSpecification_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

import com.mentor.nucleus.bp.core.*;
import org.eclipse.swt.graphics.GC;
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.swt.graphics.Color;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_AUTO_RECONCILIATION_SPECIFICATION extends genericEvent_c {
	public abstract int getEvtcode();
}

public class AutoReconciliationSpecification_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public AutoReconciliationSpecification_c(ModelRoot modelRoot,
			java.util.UUID p_m_id, String p_m_name, String p_m_countmethod,
			String p_m_elementmethod, String p_m_elementexistsmethod,
			String p_m_templateelementmethod, int p_m_scan_target_ooa_type,
			int p_m_target_ooa_type, int p_m_source_ooa_type, int p_m_ooa_type,
			int p_m_model_type, boolean p_m_reprocess) {
		super(modelRoot);
		m_name = p_m_name;
		m_countmethod = p_m_countmethod;
		m_elementmethod = p_m_elementmethod;
		m_scan_target_ooa_type = p_m_scan_target_ooa_type;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_id = IdAssigner.preprocessUUID(p_m_id);
		//extract 28 bit value only            
		m_idLongBased = 0xfffffff & p_m_id.getLeastSignificantBits();
		m_elementexistsmethod = p_m_elementexistsmethod;
		m_templateelementmethod = p_m_templateelementmethod;
		m_source_ooa_type = p_m_source_ooa_type;
		m_target_ooa_type = p_m_target_ooa_type;
		m_ooa_type = p_m_ooa_type;
		m_model_type = p_m_model_type;
		m_reprocess = p_m_reprocess;

		setUniqueId(m_id);
		Object[] key = {m_id};
		addInstanceToMap(key);
	}
	static public AutoReconciliationSpecification_c createProxy(
			ModelRoot modelRoot, java.util.UUID p_m_id, String p_m_name,
			String p_m_countmethod, String p_m_elementmethod,
			String p_m_elementexistsmethod, String p_m_templateelementmethod,
			int p_m_scan_target_ooa_type, int p_m_target_ooa_type,
			int p_m_source_ooa_type, int p_m_ooa_type, int p_m_model_type,
			boolean p_m_reprocess, String p_contentPath, IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);
		AutoReconciliationSpecification_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_id};
			new_inst = (AutoReconciliationSpecification_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				new_inst.m_name = p_m_name;
				new_inst.m_countmethod = p_m_countmethod;
				new_inst.m_elementmethod = p_m_elementmethod;
				new_inst.m_scan_target_ooa_type = p_m_scan_target_ooa_type;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_id = IdAssigner.preprocessUUID(p_m_id);
				//extract 28 bit value only            
				new_inst.m_idLongBased = 0xfffffff & p_m_id
						.getLeastSignificantBits();
				new_inst.m_elementexistsmethod = p_m_elementexistsmethod;
				new_inst.m_templateelementmethod = p_m_templateelementmethod;
				new_inst.m_source_ooa_type = p_m_source_ooa_type;
				new_inst.m_target_ooa_type = p_m_target_ooa_type;
				new_inst.m_ooa_type = p_m_ooa_type;
				new_inst.m_model_type = p_m_model_type;
				new_inst.m_reprocess = p_m_reprocess;

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new AutoReconciliationSpecification_c(modelRoot, p_m_id,
					p_m_name, p_m_countmethod, p_m_elementmethod,
					p_m_elementexistsmethod, p_m_templateelementmethod,
					p_m_scan_target_ooa_type, p_m_target_ooa_type,
					p_m_source_ooa_type, p_m_ooa_type, p_m_model_type,
					p_m_reprocess);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public AutoReconciliationSpecification_c resolveInstance(
			ModelRoot modelRoot, java.util.UUID p_m_id, String p_m_name,
			String p_m_countmethod, String p_m_elementmethod,
			String p_m_elementexistsmethod, String p_m_templateelementmethod,
			int p_m_scan_target_ooa_type, int p_m_target_ooa_type,
			int p_m_source_ooa_type, int p_m_ooa_type, int p_m_model_type,
			boolean p_m_reprocess) {
		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);
		AutoReconciliationSpecification_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_id};
			source = (AutoReconciliationSpecification_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				source.m_name = p_m_name;
				source.m_countmethod = p_m_countmethod;
				source.m_elementmethod = p_m_elementmethod;
				source.m_scan_target_ooa_type = p_m_scan_target_ooa_type;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_id = IdAssigner.preprocessUUID(p_m_id);
				//extract 28 bit value only            
				source.m_idLongBased = 0xfffffff & p_m_id
						.getLeastSignificantBits();
				source.m_elementexistsmethod = p_m_elementexistsmethod;
				source.m_templateelementmethod = p_m_templateelementmethod;
				source.m_source_ooa_type = p_m_source_ooa_type;
				source.m_target_ooa_type = p_m_target_ooa_type;
				source.m_ooa_type = p_m_ooa_type;
				source.m_model_type = p_m_model_type;
				source.m_reprocess = p_m_reprocess;

				return source;
			}
		}
		// there is no instance matching the id
		AutoReconciliationSpecification_c new_inst = new AutoReconciliationSpecification_c(
				modelRoot, p_m_id, p_m_name, p_m_countmethod,
				p_m_elementmethod, p_m_elementexistsmethod,
				p_m_templateelementmethod, p_m_scan_target_ooa_type,
				p_m_target_ooa_type, p_m_source_ooa_type, p_m_ooa_type,
				p_m_model_type, p_m_reprocess);
		return new_inst;
	}
	public AutoReconciliationSpecification_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_name = "";
		m_countmethod = "";
		m_elementmethod = "";
		m_scan_target_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
		m_id = idAssigner.createUUID();
		m_elementexistsmethod = "";
		m_templateelementmethod = "";
		m_source_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
		m_target_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
		m_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
		m_model_type = Modeltype_c.OOA_UNINITIALIZED_ENUM;
		setUniqueId(m_id);
		Object[] key = {m_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p5
		if (m_id != p_newKey) {

			m_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof AutoReconciliationSpecification_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof AutoReconciliationSpecification_c)) {
			return false;
		}

		AutoReconciliationSpecification_c me = (AutoReconciliationSpecification_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getId()) || IdAssigner.NULL_UUID
						.equals(((AutoReconciliationSpecification_c) elem)
								.getId())) && this != elem)) {
			return false;
		}
		if (!getId().equals(((AutoReconciliationSpecification_c) elem).getId()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof AutoReconciliationSpecification_c)) {
			return false;
		}

		AutoReconciliationSpecification_c me = (AutoReconciliationSpecification_c) elem;
		if (!getId().equals(((AutoReconciliationSpecification_c) elem).getId()))
			return false;
		return true;
	}

	// Attributes
	private String m_name;
	private String m_countmethod;
	private String m_elementmethod;
	private int m_scan_target_ooa_type;
	private java.util.UUID m_id;
	private long m_idLongBased;
	private String m_elementexistsmethod;
	private String m_templateelementmethod;
	private int m_source_ooa_type;
	private int m_target_ooa_type;
	private int m_ooa_type;
	private int m_model_type;
	private boolean m_reprocess;

	// declare association references from this class

	// referring navigation

	ModelSpecification_c ModelSpecification;
	public void relateAcrossR33To(ModelSpecification_c target) {
		relateAcrossR33To(target, true);
	}
	public void relateAcrossR33To(ModelSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == ModelSpecification)
			return; // already related

		if (ModelSpecification != target) {

			Object oldKey = getInstanceKey();

			if (ModelSpecification != null) {

				ModelSpecification.clearBackPointerR33To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofgraphics.log
							.println(
									ILogger.CONSISTENCY,
									"AutoReconciliationSpecification_c.relateAcrossR33To(ModelSpecification_c target)",
									"Relate performed across R33 from Auto Reconciliation Specification to Model Specification without unrelate of prior instance.");
				}
			}

			ModelSpecification = target;
			m_ooa_type = target.getOoa_type();
			m_model_type = target.getModel_type();
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR33To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "33", "");
				Ooaofgraphics.getDefaultInstance()
						.fireModelElementRelationChanged(change);
			}
		}
	}
	public void unrelateAcrossR33From(ModelSpecification_c target) {
		unrelateAcrossR33From(target, true);
	}
	public void unrelateAcrossR33From(ModelSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (ModelSpecification == null)
			return; // already unrelated

		if (target != ModelSpecification) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CanvasPlugin
					.logError(
							"Tried to unrelate from non-related instance across R33",
							e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR33To(this);
		}

		if (ModelSpecification != null) {

			m_ooa_type = ModelSpecification.getOoa_type();
			m_model_type = ModelSpecification.getModel_type();
			ModelSpecification = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "33", "");
				Ooaofgraphics.getDefaultInstance()
						.fireModelElementRelationChanged(change);
			}
		}
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR33(
			ModelSpecification_c[] targets) {
		return getOneGD_ARSOnR33(targets, null);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR33(
			ModelSpecification_c[] targets, ClassQueryInterface_c test) {
		AutoReconciliationSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneGD_ARSOnR33(targets[i], test);
			}
		}

		return ret_val;
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR33(
			ModelSpecification_c target) {
		return getOneGD_ARSOnR33(target, null);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR33(
			ModelSpecification_c target, boolean loadComponent) {
		return getOneGD_ARSOnR33(Ooaofgraphics.getDefaultInstance(), target,
				null, loadComponent);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR33(
			ModelSpecification_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneGD_ARSOnR33(Ooaofgraphics.getDefaultInstance(),
					target, test);
		}
		return null;
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR33(
			ModelRoot modelRoot, ModelSpecification_c target,
			ClassQueryInterface_c test) {
		return getOneGD_ARSOnR33(modelRoot, target, test, true);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR33(
			ModelRoot modelRoot, ModelSpecification_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneGD_ARSOnR33(modelRoot, target, test);
	}
	private static AutoReconciliationSpecification_c find_getOneGD_ARSOnR33(
			ModelRoot modelRoot, ModelSpecification_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_AutoReconciliationSpecification_R33) {
				for (int i = 0; i < target.backPointer_AutoReconciliationSpecification_R33
						.size(); ++i) {
					AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) target.backPointer_AutoReconciliationSpecification_R33
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR33(
			ModelSpecification_c[] targets) {
		return getManyGD_ARSsOnR33(targets, null);
	}
	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR33(
			ModelSpecification_c[] targets, boolean loadComponent) {
		return getManyGD_ARSsOnR33(targets, null, loadComponent);
	}
	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR33(
			ModelSpecification_c[] targets, ClassQueryInterface_c test) {
		return getManyGD_ARSsOnR33(targets, test, true);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR33(
			ModelSpecification_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new AutoReconciliationSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();

		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_AutoReconciliationSpecification_R33) {
				for (int j = 0; j < targets[i].backPointer_AutoReconciliationSpecification_R33
						.size(); ++j) {
					AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) targets[i].backPointer_AutoReconciliationSpecification_R33
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AutoReconciliationSpecification_c[0];
		}
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR33(
			ModelSpecification_c target) {
		return getManyGD_ARSsOnR33(target, null);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR33(
			ModelSpecification_c target, boolean loadComponent) {
		return getManyGD_ARSsOnR33(target, null, loadComponent);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR33(
			ModelSpecification_c target, ClassQueryInterface_c test) {
		return getManyGD_ARSsOnR33(target, test, true);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR33(
			ModelSpecification_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new AutoReconciliationSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
		Vector matches = new Vector();
		synchronized (target.backPointer_AutoReconciliationSpecification_R33) {
			for (int i = 0; i < target.backPointer_AutoReconciliationSpecification_R33
					.size(); ++i) {
				AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) target.backPointer_AutoReconciliationSpecification_R33
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AutoReconciliationSpecification_c[0];
		}
	}

	// referring navigation

	ElementSpecification_c ReconcilesInstancePopulationAssociatedWithElementSpecification;
	public void relateAcrossR29To(ElementSpecification_c target) {
		relateAcrossR29To(target, true);
	}
	public void relateAcrossR29To(ElementSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == ReconcilesInstancePopulationAssociatedWithElementSpecification)
			return; // already related

		if (ReconcilesInstancePopulationAssociatedWithElementSpecification != target) {

			Object oldKey = getInstanceKey();

			if (ReconcilesInstancePopulationAssociatedWithElementSpecification != null) {

				ReconcilesInstancePopulationAssociatedWithElementSpecification
						.clearBackPointerR29To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofgraphics.log
							.println(
									ILogger.CONSISTENCY,
									"AutoReconciliationSpecification_c.relateAcrossR29To(ElementSpecification_c target)",
									"Relate performed across R29 from Auto Reconciliation Specification to Element Specification without unrelate of prior instance.");
				}
			}

			ReconcilesInstancePopulationAssociatedWithElementSpecification = target;
			m_scan_target_ooa_type = target.getOoa_type();
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR29To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "29", "");
				Ooaofgraphics.getDefaultInstance()
						.fireModelElementRelationChanged(change);
			}
		}
	}
	public void unrelateAcrossR29From(ElementSpecification_c target) {
		unrelateAcrossR29From(target, true);
	}
	public void unrelateAcrossR29From(ElementSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (ReconcilesInstancePopulationAssociatedWithElementSpecification == null)
			return; // already unrelated

		if (target != ReconcilesInstancePopulationAssociatedWithElementSpecification) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CanvasPlugin
					.logError(
							"Tried to unrelate from non-related instance across R29",
							e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR29To(this);
		}

		if (ReconcilesInstancePopulationAssociatedWithElementSpecification != null) {

			m_scan_target_ooa_type = ReconcilesInstancePopulationAssociatedWithElementSpecification
					.getOoa_type();
			ReconcilesInstancePopulationAssociatedWithElementSpecification = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "29", "");
				Ooaofgraphics.getDefaultInstance()
						.fireModelElementRelationChanged(change);
			}
		}
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR29(
			ElementSpecification_c[] targets) {
		return getOneGD_ARSOnR29(targets, null);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR29(
			ElementSpecification_c[] targets, ClassQueryInterface_c test) {
		AutoReconciliationSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneGD_ARSOnR29(targets[i], test);
			}
		}

		return ret_val;
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR29(
			ElementSpecification_c target) {
		return getOneGD_ARSOnR29(target, null);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR29(
			ElementSpecification_c target, boolean loadComponent) {
		return getOneGD_ARSOnR29(Ooaofgraphics.getDefaultInstance(), target,
				null, loadComponent);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR29(
			ElementSpecification_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneGD_ARSOnR29(Ooaofgraphics.getDefaultInstance(),
					target, test);
		}
		return null;
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR29(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test) {
		return getOneGD_ARSOnR29(modelRoot, target, test, true);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR29(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneGD_ARSOnR29(modelRoot, target, test);
	}
	private static AutoReconciliationSpecification_c find_getOneGD_ARSOnR29(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29) {
				for (int i = 0; i < target.backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29
						.size(); ++i) {
					AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) target.backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR29(
			ElementSpecification_c[] targets) {
		return getManyGD_ARSsOnR29(targets, null);
	}
	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR29(
			ElementSpecification_c[] targets, boolean loadComponent) {
		return getManyGD_ARSsOnR29(targets, null, loadComponent);
	}
	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR29(
			ElementSpecification_c[] targets, ClassQueryInterface_c test) {
		return getManyGD_ARSsOnR29(targets, test, true);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR29(
			ElementSpecification_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new AutoReconciliationSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();

		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29) {
				for (int j = 0; j < targets[i].backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29
						.size(); ++j) {
					AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) targets[i].backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AutoReconciliationSpecification_c[0];
		}
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR29(
			ElementSpecification_c target) {
		return getManyGD_ARSsOnR29(target, null);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR29(
			ElementSpecification_c target, boolean loadComponent) {
		return getManyGD_ARSsOnR29(target, null, loadComponent);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR29(
			ElementSpecification_c target, ClassQueryInterface_c test) {
		return getManyGD_ARSsOnR29(target, test, true);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR29(
			ElementSpecification_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new AutoReconciliationSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
		Vector matches = new Vector();
		synchronized (target.backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29) {
			for (int i = 0; i < target.backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29
					.size(); ++i) {
				AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) target.backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AutoReconciliationSpecification_c[0];
		}
	}

	// referring navigation

	ElementSpecification_c ReconcilesAgainstInstancesOfElementSpecification;
	public void relateAcrossR30To(ElementSpecification_c target) {
		relateAcrossR30To(target, true);
	}
	public void relateAcrossR30To(ElementSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == ReconcilesAgainstInstancesOfElementSpecification)
			return; // already related

		if (ReconcilesAgainstInstancesOfElementSpecification != target) {

			Object oldKey = getInstanceKey();

			if (ReconcilesAgainstInstancesOfElementSpecification != null) {

				ReconcilesAgainstInstancesOfElementSpecification
						.clearBackPointerR30To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofgraphics.log
							.println(
									ILogger.CONSISTENCY,
									"AutoReconciliationSpecification_c.relateAcrossR30To(ElementSpecification_c target)",
									"Relate performed across R30 from Auto Reconciliation Specification to Element Specification without unrelate of prior instance.");
				}
			}

			ReconcilesAgainstInstancesOfElementSpecification = target;
			m_source_ooa_type = target.getOoa_type();
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR30To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "30", "");
				Ooaofgraphics.getDefaultInstance()
						.fireModelElementRelationChanged(change);
			}
		}
	}
	public void unrelateAcrossR30From(ElementSpecification_c target) {
		unrelateAcrossR30From(target, true);
	}
	public void unrelateAcrossR30From(ElementSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (ReconcilesAgainstInstancesOfElementSpecification == null)
			return; // already unrelated

		if (target != ReconcilesAgainstInstancesOfElementSpecification) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CanvasPlugin
					.logError(
							"Tried to unrelate from non-related instance across R30",
							e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR30To(this);
		}

		if (ReconcilesAgainstInstancesOfElementSpecification != null) {

			m_source_ooa_type = ReconcilesAgainstInstancesOfElementSpecification
					.getOoa_type();
			ReconcilesAgainstInstancesOfElementSpecification = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "30", "");
				Ooaofgraphics.getDefaultInstance()
						.fireModelElementRelationChanged(change);
			}
		}
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR30(
			ElementSpecification_c[] targets) {
		return getOneGD_ARSOnR30(targets, null);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR30(
			ElementSpecification_c[] targets, ClassQueryInterface_c test) {
		AutoReconciliationSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneGD_ARSOnR30(targets[i], test);
			}
		}

		return ret_val;
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR30(
			ElementSpecification_c target) {
		return getOneGD_ARSOnR30(target, null);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR30(
			ElementSpecification_c target, boolean loadComponent) {
		return getOneGD_ARSOnR30(Ooaofgraphics.getDefaultInstance(), target,
				null, loadComponent);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR30(
			ElementSpecification_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneGD_ARSOnR30(Ooaofgraphics.getDefaultInstance(),
					target, test);
		}
		return null;
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR30(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test) {
		return getOneGD_ARSOnR30(modelRoot, target, test, true);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR30(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneGD_ARSOnR30(modelRoot, target, test);
	}
	private static AutoReconciliationSpecification_c find_getOneGD_ARSOnR30(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30) {
				for (int i = 0; i < target.backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30
						.size(); ++i) {
					AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) target.backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR30(
			ElementSpecification_c[] targets) {
		return getManyGD_ARSsOnR30(targets, null);
	}
	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR30(
			ElementSpecification_c[] targets, boolean loadComponent) {
		return getManyGD_ARSsOnR30(targets, null, loadComponent);
	}
	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR30(
			ElementSpecification_c[] targets, ClassQueryInterface_c test) {
		return getManyGD_ARSsOnR30(targets, test, true);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR30(
			ElementSpecification_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new AutoReconciliationSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();

		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30) {
				for (int j = 0; j < targets[i].backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30
						.size(); ++j) {
					AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) targets[i].backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AutoReconciliationSpecification_c[0];
		}
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR30(
			ElementSpecification_c target) {
		return getManyGD_ARSsOnR30(target, null);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR30(
			ElementSpecification_c target, boolean loadComponent) {
		return getManyGD_ARSsOnR30(target, null, loadComponent);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR30(
			ElementSpecification_c target, ClassQueryInterface_c test) {
		return getManyGD_ARSsOnR30(target, test, true);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR30(
			ElementSpecification_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new AutoReconciliationSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
		Vector matches = new Vector();
		synchronized (target.backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30) {
			for (int i = 0; i < target.backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30
					.size(); ++i) {
				AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) target.backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AutoReconciliationSpecification_c[0];
		}
	}

	// referring navigation

	ElementSpecification_c ReconcilesElementSpecification;
	public void relateAcrossR31To(ElementSpecification_c target) {
		relateAcrossR31To(target, true);
	}
	public void relateAcrossR31To(ElementSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == ReconcilesElementSpecification)
			return; // already related

		if (ReconcilesElementSpecification != target) {

			Object oldKey = getInstanceKey();

			if (ReconcilesElementSpecification != null) {

				ReconcilesElementSpecification.clearBackPointerR31To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofgraphics.log
							.println(
									ILogger.CONSISTENCY,
									"AutoReconciliationSpecification_c.relateAcrossR31To(ElementSpecification_c target)",
									"Relate performed across R31 from Auto Reconciliation Specification to Element Specification without unrelate of prior instance.");
				}
			}

			ReconcilesElementSpecification = target;
			m_target_ooa_type = target.getOoa_type();
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR31To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "31", "");
				Ooaofgraphics.getDefaultInstance()
						.fireModelElementRelationChanged(change);
			}
		}
	}
	public void unrelateAcrossR31From(ElementSpecification_c target) {
		unrelateAcrossR31From(target, true);
	}
	public void unrelateAcrossR31From(ElementSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (ReconcilesElementSpecification == null)
			return; // already unrelated

		if (target != ReconcilesElementSpecification) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CanvasPlugin
					.logError(
							"Tried to unrelate from non-related instance across R31",
							e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR31To(this);
		}

		if (ReconcilesElementSpecification != null) {

			m_target_ooa_type = ReconcilesElementSpecification.getOoa_type();
			ReconcilesElementSpecification = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "31", "");
				Ooaofgraphics.getDefaultInstance()
						.fireModelElementRelationChanged(change);
			}
		}
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR31(
			ElementSpecification_c[] targets) {
		return getOneGD_ARSOnR31(targets, null);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR31(
			ElementSpecification_c[] targets, ClassQueryInterface_c test) {
		AutoReconciliationSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneGD_ARSOnR31(targets[i], test);
			}
		}

		return ret_val;
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR31(
			ElementSpecification_c target) {
		return getOneGD_ARSOnR31(target, null);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR31(
			ElementSpecification_c target, boolean loadComponent) {
		return getOneGD_ARSOnR31(Ooaofgraphics.getDefaultInstance(), target,
				null, loadComponent);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR31(
			ElementSpecification_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneGD_ARSOnR31(Ooaofgraphics.getDefaultInstance(),
					target, test);
		}
		return null;
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR31(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test) {
		return getOneGD_ARSOnR31(modelRoot, target, test, true);
	}

	public static AutoReconciliationSpecification_c getOneGD_ARSOnR31(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneGD_ARSOnR31(modelRoot, target, test);
	}
	private static AutoReconciliationSpecification_c find_getOneGD_ARSOnR31(
			ModelRoot modelRoot, ElementSpecification_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31) {
				for (int i = 0; i < target.backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31
						.size(); ++i) {
					AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) target.backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR31(
			ElementSpecification_c[] targets) {
		return getManyGD_ARSsOnR31(targets, null);
	}
	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR31(
			ElementSpecification_c[] targets, boolean loadComponent) {
		return getManyGD_ARSsOnR31(targets, null, loadComponent);
	}
	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR31(
			ElementSpecification_c[] targets, ClassQueryInterface_c test) {
		return getManyGD_ARSsOnR31(targets, test, true);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR31(
			ElementSpecification_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new AutoReconciliationSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();

		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31) {
				for (int j = 0; j < targets[i].backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31
						.size(); ++j) {
					AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) targets[i].backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AutoReconciliationSpecification_c[0];
		}
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR31(
			ElementSpecification_c target) {
		return getManyGD_ARSsOnR31(target, null);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR31(
			ElementSpecification_c target, boolean loadComponent) {
		return getManyGD_ARSsOnR31(target, null, loadComponent);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR31(
			ElementSpecification_c target, ClassQueryInterface_c test) {
		return getManyGD_ARSsOnR31(target, test, true);
	}

	public static AutoReconciliationSpecification_c[] getManyGD_ARSsOnR31(
			ElementSpecification_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new AutoReconciliationSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
		Vector matches = new Vector();
		synchronized (target.backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31) {
			for (int i = 0; i < target.backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31
					.size(); ++i) {
				AutoReconciliationSpecification_c source = (AutoReconciliationSpecification_c) target.backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AutoReconciliationSpecification_c[0];
		}
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (ModelSpecification == null) {          
      // R33
      baseRoot = Ooaofgraphics.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
	  instances = baseRoot.getInstanceList(ModelSpecification_c.class);
      ModelSpecification_c relInst22389 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           ModelSpecification_c source = (ModelSpecification_c)cursor.next() ;
           if (     source.getOoa_type() == m_ooa_type && 
     source.getModel_type() == m_model_type 		){
  		relInst22389 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst22389 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22389) && !isProxy())) {
	      relInst22389.relateAcrossR33To(this, notifyChanges);
	  }
	  }
          baseRoot = modelRoot;
	}
	          

	if (ReconcilesInstancePopulationAssociatedWithElementSpecification == null) {          
      // R29
      baseRoot = Ooaofgraphics.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
	  instances = baseRoot.getInstanceList(ElementSpecification_c.class);
      ElementSpecification_c relInst22390 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           ElementSpecification_c source = (ElementSpecification_c)cursor.next() ;
           if (     source.getOoa_type() == m_scan_target_ooa_type 		){
  		relInst22390 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst22390 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22390) && !isProxy())) {
	      relInst22390.relateAcrossR29To(this, notifyChanges);
	  }
	  }
          baseRoot = modelRoot;
	}
	          

	if (ReconcilesAgainstInstancesOfElementSpecification == null) {          
      // R30
      baseRoot = Ooaofgraphics.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
	  instances = baseRoot.getInstanceList(ElementSpecification_c.class);
      ElementSpecification_c relInst22391 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           ElementSpecification_c source = (ElementSpecification_c)cursor.next() ;
           if (     source.getOoa_type() == m_source_ooa_type 		){
  		relInst22391 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst22391 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22391) && !isProxy())) {
	      relInst22391.relateAcrossR30To(this, notifyChanges);
	  }
	  }
          baseRoot = modelRoot;
	}
	          

	if (ReconcilesElementSpecification == null) {          
      // R31
      baseRoot = Ooaofgraphics.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
	  instances = baseRoot.getInstanceList(ElementSpecification_c.class);
      ElementSpecification_c relInst22392 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           ElementSpecification_c source = (ElementSpecification_c)cursor.next() ;
           if (     source.getOoa_type() == m_target_ooa_type 		){
  		relInst22392 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst22392 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22392) && !isProxy())) {
	      relInst22392.relateAcrossR31To(this, notifyChanges);
	  }
	  }
          baseRoot = modelRoot;
	}
	          
	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R33
		// GD_MS
		inst = ModelSpecification;
		unrelateAcrossR33From(ModelSpecification, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R29
		// GD_ES
		inst = ReconcilesInstancePopulationAssociatedWithElementSpecification;
		unrelateAcrossR29From(
				ReconcilesInstancePopulationAssociatedWithElementSpecification,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R30
		// GD_ES
		inst = ReconcilesAgainstInstancesOfElementSpecification;
		unrelateAcrossR30From(ReconcilesAgainstInstancesOfElementSpecification,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R31
		// GD_ES
		inst = ReconcilesElementSpecification;
		unrelateAcrossR31From(ReconcilesElementSpecification, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(AutoReconciliationSpecification_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final AutoReconciliationSpecification_c inst = (AutoReconciliationSpecification_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static AutoReconciliationSpecification_c AutoReconciliationSpecificationInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		AutoReconciliationSpecification_c result = findAutoReconciliationSpecificationInstance(
				modelRoot, test, loadComponent);
		return result;
	}
	private static AutoReconciliationSpecification_c findAutoReconciliationSpecificationInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				AutoReconciliationSpecification_c x = (AutoReconciliationSpecification_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					return x;
				}
			}
		}
		return null;
	}
	public static AutoReconciliationSpecification_c AutoReconciliationSpecificationInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return AutoReconciliationSpecificationInstance(modelRoot, test, true);
	}

	public static AutoReconciliationSpecification_c AutoReconciliationSpecificationInstance(
			ModelRoot modelRoot) {
		return AutoReconciliationSpecificationInstance(modelRoot, null, true);
	}

	public static AutoReconciliationSpecification_c[] AutoReconciliationSpecificationInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(AutoReconciliationSpecification_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				AutoReconciliationSpecification_c x = (AutoReconciliationSpecification_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					matches.add(x);
				}
			}
			if (matches.size() > 0) {
				AutoReconciliationSpecification_c[] ret_set = new AutoReconciliationSpecification_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new AutoReconciliationSpecification_c[0];
			}
		}
	}
	public static AutoReconciliationSpecification_c[] AutoReconciliationSpecificationInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return AutoReconciliationSpecificationInstances(modelRoot, test, true);
	}
	public static AutoReconciliationSpecification_c[] AutoReconciliationSpecificationInstances(
			ModelRoot modelRoot) {
		return AutoReconciliationSpecificationInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Auto Reconciliation Specification.dispose call: ";
		ModelSpecification_c testR33Inst = ModelSpecification_c
				.getOneGD_MSOnR33(this, false);

		if (testR33Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "33 ";
		}
		ElementSpecification_c testR29Inst = ElementSpecification_c
				.getOneGD_ESOnR29(this, false);

		if (testR29Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "29 ";
		}
		ElementSpecification_c testR30Inst = ElementSpecification_c
				.getOneGD_ESOnR30(this, false);

		if (testR30Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "30 ";
		}
		ElementSpecification_c testR31Inst = ElementSpecification_c
				.getOneGD_ESOnR31(this, false);

		if (testR31Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "31 ";
		}
		if (delete_error == true) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log.println(ILogger.DELETE,
						"Auto Reconciliation Specification", errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CanvasPlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	/**
	 * Assigns IDs to instances of this class.
	 */
	private static IdAssigner idAssigner = new IdAssigner();

	/**
	 * See field.
	 */
	public IdAssigner getIdAssigner() {
		return idAssigner;
	}

	/**
	 * See field.
	 */
	public static IdAssigner getIdAssigner_() {
		return idAssigner;
	}
	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("id")) {
			return true;
		}
		return false;
	}
	// declare attribute accessors
	public String getName() {
		return m_name;
	}

	public void setName(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_name)) {
				return;
			}
		} else if (m_name != null) {
			if (m_name.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name",
				m_name, newValue, false);
		m_name = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public String getCountmethod() {
		return m_countmethod;
	}

	public void setCountmethod(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_countmethod)) {
				return;
			}
		} else if (m_countmethod != null) {
			if (m_countmethod.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Countmethod", m_countmethod, newValue, false);
		m_countmethod = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public String getElementmethod() {
		return m_elementmethod;
	}

	public void setElementmethod(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_elementmethod)) {
				return;
			}
		} else if (m_elementmethod != null) {
			if (m_elementmethod.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Elementmethod", m_elementmethod, newValue, false);
		m_elementmethod = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public int getScan_target_ooa_type() {
		if (ReconcilesInstancePopulationAssociatedWithElementSpecification != null) {
			return ReconcilesInstancePopulationAssociatedWithElementSpecification
					.getOoa_type();
		}
		return 0;
	}

	public int getScan_target_ooa_typeCachedValue() {
		return m_scan_target_ooa_type;
	}

	public void setScan_target_ooa_type(int newValue) {
		if (m_scan_target_ooa_type == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Scan_target_ooa_type", new Integer(m_scan_target_ooa_type),
				new Integer(newValue), false);

		m_scan_target_ooa_type = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public long getIdLongBased() {
		if (m_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_id)) {
			return 0xfffffff & m_id.getLeastSignificantBits();
		}
		return m_idLongBased;
	}
	public java.util.UUID getId() {
		return m_id;
	}

	public void setId(java.util.UUID newValue) {
		m_id = IdAssigner.preprocessUUID(newValue);
	}
	public String getElementexistsmethod() {
		return m_elementexistsmethod;
	}

	public void setElementexistsmethod(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_elementexistsmethod)) {
				return;
			}
		} else if (m_elementexistsmethod != null) {
			if (m_elementexistsmethod.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Elementexistsmethod", m_elementexistsmethod, newValue, false);
		m_elementexistsmethod = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public String getTemplateelementmethod() {
		return m_templateelementmethod;
	}

	public void setTemplateelementmethod(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_templateelementmethod)) {
				return;
			}
		} else if (m_templateelementmethod != null) {
			if (m_templateelementmethod.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Templateelementmethod", m_templateelementmethod, newValue,
				false);
		m_templateelementmethod = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public int getSource_ooa_type() {
		if (ReconcilesAgainstInstancesOfElementSpecification != null) {
			return ReconcilesAgainstInstancesOfElementSpecification
					.getOoa_type();
		}
		return 0;
	}

	public int getSource_ooa_typeCachedValue() {
		return m_source_ooa_type;
	}

	public void setSource_ooa_type(int newValue) {
		if (m_source_ooa_type == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Source_ooa_type", new Integer(m_source_ooa_type), new Integer(
						newValue), false);

		m_source_ooa_type = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public int getTarget_ooa_type() {
		if (ReconcilesElementSpecification != null) {
			return ReconcilesElementSpecification.getOoa_type();
		}
		return 0;
	}

	public int getTarget_ooa_typeCachedValue() {
		return m_target_ooa_type;
	}

	public void setTarget_ooa_type(int newValue) {
		if (m_target_ooa_type == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Target_ooa_type", new Integer(m_target_ooa_type), new Integer(
						newValue), false);

		m_target_ooa_type = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public int getOoa_type() {
		if (ModelSpecification != null) {
			return ModelSpecification.getOoa_type();
		}
		return 0;
	}

	public int getOoa_typeCachedValue() {
		return m_ooa_type;
	}

	public void setOoa_type(int newValue) {
		if (m_ooa_type == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Ooa_type", new Integer(m_ooa_type), new Integer(newValue),
				false);

		m_ooa_type = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public int getModel_type() {
		if (ModelSpecification != null) {
			return ModelSpecification.getModel_type();
		}
		return 0;
	}

	public int getModel_typeCachedValue() {
		return m_model_type;
	}

	public void setModel_type(int newValue) {
		if (m_model_type == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Model_type", new Integer(m_model_type), new Integer(newValue),
				false);

		m_model_type = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	public boolean getReprocess() {
		return m_reprocess;
	}

	public void setReprocess(boolean newValue) {
		if (m_reprocess == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Reprocess", new Boolean(m_reprocess), new Boolean(newValue),
				false);

		m_reprocess = newValue;
		Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(
				change);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION,
						"Auto Reconciliation Specification", //$NON-NLS-1$
						" Operation entered: Auto Reconciliation Specification::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		AutoReconciliationSpecification_c[] objs = AutoReconciliationSpecification_c
				.AutoReconciliationSpecificationInstances(modelRoot, null,
						false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log
				.println(ILogger.OPERATION,
						"Auto Reconciliation Specification", //$NON-NLS-1$
						" Operation entered: Auto Reconciliation Specification::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class AutoReconciliationSpecification_c_test22394_c
				implements
					ClassQueryInterface_c {
			AutoReconciliationSpecification_c_test22394_c(java.util.UUID p22395) {
				m_p22395 = p22395;
			}
			private java.util.UUID m_p22395;
			public boolean evaluate(Object candidate) {
				AutoReconciliationSpecification_c selected = (AutoReconciliationSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getId().equals(m_p22395));
				return retval;
			}
		}

		AutoReconciliationSpecification_c[] objs22393 = AutoReconciliationSpecification_c
				.AutoReconciliationSpecificationInstances(Ooaofgraphics
						.getDefaultInstance(),
						new AutoReconciliationSpecification_c_test22394_c(
								getId()));

		if (((objs22393.length) == 0)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(
								ILogger.CONSISTENCY,
								"Auto Reconciliation Specification", //$NON-NLS-1$
								"Consistency: Object: Auto Reconciliation Specification: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs22393.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Auto Reconciliation Specification: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs22393.length), e);
			}
			retval = false;

		}

		if (((objs22393.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(
								ILogger.CONSISTENCY,
								"Auto Reconciliation Specification", //$NON-NLS-1$
								"Consistency: Object: Auto Reconciliation Specification: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs22393.length)
										+ " Id: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Auto Reconciliation Specification: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs22393.length)
										+ " Id: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Auto Reconciliation Specification is a referring class in association: rel.Numb = 29
		// The participating class is: Element Specification
		class ElementSpecification_c_test22399_c
				implements
					ClassQueryInterface_c {
			ElementSpecification_c_test22399_c(int p22400) {
				m_p22400 = p22400;
			}
			private int m_p22400;
			public boolean evaluate(Object candidate) {
				ElementSpecification_c selected = (ElementSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getOoa_type() == (m_p22400));
				return retval;
			}
		}

		ElementSpecification_c[] objs22398 = ElementSpecification_c
				.ElementSpecificationInstances(Ooaofgraphics
						.getDefaultInstance(),
						new ElementSpecification_c_test22399_c(
								getScan_target_ooa_type()));

		if (((objs22398.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(
								ILogger.CONSISTENCY,
								"Auto Reconciliation Specification", //$NON-NLS-1$
								"Consistency: Object: Auto Reconciliation Specification: Association: 29: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs22398.length)
										+ " Scan_Target_OOA_Type: " + Integer.toString(getScan_target_ooa_type())); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Auto Reconciliation Specification: Association: 29: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs22398.length)
										+ " Scan_Target_OOA_Type: " + Integer.toString(getScan_target_ooa_type()), e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Auto Reconciliation Specification is a referring class in association: rel.Numb = 30
		// The participating class is: Element Specification
		class ElementSpecification_c_test22402_c
				implements
					ClassQueryInterface_c {
			ElementSpecification_c_test22402_c(int p22403) {
				m_p22403 = p22403;
			}
			private int m_p22403;
			public boolean evaluate(Object candidate) {
				ElementSpecification_c selected = (ElementSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getOoa_type() == (m_p22403));
				return retval;
			}
		}

		ElementSpecification_c[] objs22401 = ElementSpecification_c
				.ElementSpecificationInstances(Ooaofgraphics
						.getDefaultInstance(),
						new ElementSpecification_c_test22402_c(
								getSource_ooa_type()));

		// The participant is unconditional
		// The multiplicity of the participant is one
		if (((objs22401.length) != 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(
								ILogger.CONSISTENCY,
								"Auto Reconciliation Specification", //$NON-NLS-1$
								"Consistency: Object: Auto Reconciliation Specification: Association: 30: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs22401.length)
										+ " Source_OOA_Type: " + Integer.toString(getSource_ooa_type())); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Auto Reconciliation Specification: Association: 30: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs22401.length)
										+ " Source_OOA_Type: " + Integer.toString(getSource_ooa_type()), e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Auto Reconciliation Specification is a referring class in association: rel.Numb = 31
		// The participating class is: Element Specification
		class ElementSpecification_c_test22405_c
				implements
					ClassQueryInterface_c {
			ElementSpecification_c_test22405_c(int p22406) {
				m_p22406 = p22406;
			}
			private int m_p22406;
			public boolean evaluate(Object candidate) {
				ElementSpecification_c selected = (ElementSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getOoa_type() == (m_p22406));
				return retval;
			}
		}

		ElementSpecification_c[] objs22404 = ElementSpecification_c
				.ElementSpecificationInstances(Ooaofgraphics
						.getDefaultInstance(),
						new ElementSpecification_c_test22405_c(
								getTarget_ooa_type()));

		// The participant is unconditional
		// The multiplicity of the participant is one
		if (((objs22404.length) != 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(
								ILogger.CONSISTENCY,
								"Auto Reconciliation Specification", //$NON-NLS-1$
								"Consistency: Object: Auto Reconciliation Specification: Association: 31: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs22404.length)
										+ " Target_OOA_Type: " + Integer.toString(getTarget_ooa_type())); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Auto Reconciliation Specification: Association: 31: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs22404.length)
										+ " Target_OOA_Type: " + Integer.toString(getTarget_ooa_type()), e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Auto Reconciliation Specification is a referring class in association: rel.Numb = 33
		// The participating class is: Model Specification
		class ModelSpecification_c_test22408_c implements ClassQueryInterface_c {
			ModelSpecification_c_test22408_c(int p22409, int p22410) {
				m_p22409 = p22409;
				m_p22410 = p22410;
			}
			private int m_p22409;
			private int m_p22410;
			public boolean evaluate(Object candidate) {
				ModelSpecification_c selected = (ModelSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getOoa_type() == (m_p22409))
						& (selected.getModel_type() == (m_p22410));
				return retval;
			}
		}

		ModelSpecification_c[] objs22407 = ModelSpecification_c
				.ModelSpecificationInstances(
						Ooaofgraphics.getDefaultInstance(),
						new ModelSpecification_c_test22408_c(getOoa_type(),
								getModel_type()));

		if (((objs22407.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(
								ILogger.CONSISTENCY,
								"Auto Reconciliation Specification", //$NON-NLS-1$
								"Consistency: Object: Auto Reconciliation Specification: Association: 33: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs22407.length)
										+ " OOA_Type: " + Integer.toString(getOoa_type()) + " Model_Type: " + Integer.toString(getModel_type())); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Auto Reconciliation Specification: Association: 33: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs22407.length)
										+ " OOA_Type: " + Integer.toString(getOoa_type()) + " Model_Type: " + Integer.toString(getModel_type()), e); //$NON-NLS-1$
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public void Updateallelements(final boolean p_Removeelements,
			final java.util.UUID p_System_id) {
		Ooaofgraphics.log
				.println(ILogger.OPERATION,
						"Auto Reconciliation Specification",
						" Operation entered: AutoReconciliationSpecification::Updateallelements");
		final ModelRoot modelRoot = getModelRoot();
		ModelSpecification_c v_modelSpec = ModelSpecification_c
				.getOneGD_MSOnR33(this);

		ElementSpecification_c v_spec = ElementSpecification_c
				.getOneGD_ESOnR29(this);

		ElementSpecification_c v_sourceSpec = ElementSpecification_c
				.getOneGD_ESOnR30(this);

		ElementSpecification_c v_targetSpec = ElementSpecification_c
				.getOneGD_ESOnR31(this);

		if ((!(v_modelSpec == null))) {

			Model_c[] v_models = Model_c.getManyGD_MDsOnR9(v_modelSpec);

			ElementSpecification_c[] v_elemSpecs = ElementSpecification_c
					.getManyGD_ESsOnR11(v_modelSpec);

			Model_c v_model = null;
			for (int i21401 = 0; i21401 < v_models.length; i21401++) {
				v_model = v_models[i21401];

				if ((!Cl_c.Iscontainedinsystem(v_model.getRepresents(),
						p_System_id))) {

					continue;

				}

				int v_count = Cl_c.Numelements(v_model.getRepresents(),
						getCountmethod());

				GraphicalElement_c[] v_graphicalElements = GraphicalElement_c
						.getManyGD_GEsOnR1(v_model);

				int v_i = 0;

				while ((v_i < v_count)) {

					java.util.UUID v_elementID = Cl_c.Getelementid(
							v_model.getRepresents(), v_i, getElementmethod());

					boolean v_found = false;

					GraphicalElement_c v_graphicalElement = null;
					for (int i21402 = 0; i21402 < v_graphicalElements.length; i21402++) {
						v_graphicalElement = v_graphicalElements[i21402];

						if ((v_graphicalElement.getOoa_id().equals(v_elementID))) {

							v_found = true;

							break;

						}

					}

					if ((v_found == false)) {

						if (v_model != null) {
							v_model.Newshape(getId(), v_elementID);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

						GraphicalElement_c v_newElement = GraphicalElement_c
								.getOneGD_GEOnR16(v_sourceSpec);

						if (((v_newElement == null))) {

							v_i = v_i + 1;

							continue;

						}

						if (v_newElement != null) {
							v_newElement.setOoa_id(v_elementID);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

						if (v_newElement != null) {
							v_newElement.setRepresents(Cl_c
									.Getinstancefromooa_id(
											v_newElement.getOoa_id(),
											v_newElement.getOoa_type(),
											v_model.getRepresents()));
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

						if (v_sourceSpec != null) {
							v_sourceSpec.unrelateAcrossR16From(v_newElement);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Unrelate attempted on null left hand instance.",
											t);
						}

					}

					v_i = v_i + 1;

				}

			}

		}

		if ((!(v_spec == null))) {

			GraphicalElement_c[] v_autoCreateShapes = GraphicalElement_c
					.getManyGD_GEsOnR10(v_spec);

			GraphicalElement_c v_autoCreateShape = null;
			for (int i21403 = 0; i21403 < v_autoCreateShapes.length; i21403++) {
				v_autoCreateShape = v_autoCreateShapes[i21403];

				if ((v_autoCreateShape.getRepresents() == Os_c.Null_instance())) {

					if (v_autoCreateShape != null) {
						v_autoCreateShape.setRepresents(Cl_c
								.Getinstancefromooa_id(
										v_autoCreateShape.getOoa_id(),
										v_autoCreateShape.getOoa_type(),
										v_autoCreateShape.Converttoinstance()));
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

				}

				if ((!Cl_c.Iscontainedinsystem(
						v_autoCreateShape.getRepresents(), p_System_id))) {

					continue;

				}

				GraphicalElement_c[] v_startCons = GraphicalElement_c
						.getManyGD_GEsOnR2(Connector_c.getManyGD_CONsOnR20(Graphedge_c.getManyDIM_EDsOnR320(Graphconnector_c.getManyDIM_CONsOnR311(Graphelement_c
								.getManyDIM_GEsOnR23(v_autoCreateShape)))));

				GraphicalElement_c[] v_endCons = GraphicalElement_c
						.getManyGD_GEsOnR2(Connector_c.getManyGD_CONsOnR20(Graphedge_c.getManyDIM_EDsOnR321(Graphconnector_c.getManyDIM_CONsOnR311(Graphelement_c
								.getManyDIM_GEsOnR23(v_autoCreateShape)))));

				if ((!getElementexistsmethod().equals("not used"))) {

					GraphicalElement_c v_startCon = null;
					for (int i21404 = 0; i21404 < v_startCons.length; i21404++) {
						v_startCon = v_startCons[i21404];

						ElementSpecification_c v_startConSpec = ElementSpecification_c
								.getOneGD_ESOnR10(v_startCon);

						if ((v_startConSpec == v_targetSpec)) {

							if ((v_startCon.getRepresents() == Os_c
									.Null_instance())) {

								if (v_startCon != null) {
									v_startCon.setRepresents(Cl_c
											.Getinstancefromooa_id(v_startCon
													.getOoa_id(), v_startCon
													.getOoa_type(), v_startCon
													.Converttoinstance()));
								} else {
									Throwable t = new Throwable();
									t.fillInStackTrace();
									CorePlugin
											.logError(
													"Attribute write attempted on null instance.",
													t);
								}

							}

							if (!Cl_c.Hasconnector(
									v_sourceSpec == v_targetSpec,
									Cl_c.Getooaid(v_startCon.getRepresents()),
									v_autoCreateShape.getRepresents(),
									getElementexistsmethod())
									&& p_Removeelements) {

								Graphconnector_c v_anchor = Graphconnector_c
										.getOneDIM_CONOnR320(Graphedge_c
												.getOneDIM_EDOnR301(Graphelement_c
														.getOneDIM_GEOnR23(v_startCon)));

								Graphedge_c[] v_anchoredStartConnectors = Graphedge_c
										.getManyDIM_EDsOnR320(Graphconnector_c
												.getManyDIM_CONsOnR311(Graphelement_c
														.getManyDIM_GEsOnR23(v_startCon)));

								Graphedge_c[] v_anchoredEndConnectors = Graphedge_c
										.getManyDIM_EDsOnR321(Graphconnector_c
												.getManyDIM_CONsOnR311(Graphelement_c
														.getManyDIM_GEsOnR23(v_startCon)));

								Graphedge_c v_anchoredStartConnector = null;
								for (int i21405 = 0; i21405 < v_anchoredStartConnectors.length; i21405++) {
									v_anchoredStartConnector = v_anchoredStartConnectors[i21405];

									ElementSpecification_c v_autoCreateShapeSpec = ElementSpecification_c
											.getOneGD_ESOnR10(v_autoCreateShape);

									ElementSpecification_c v_conSpec = ElementSpecification_c
											.getOneGD_ESOnR10(GraphicalElement_c
													.getOneGD_GEOnR2(Connector_c
															.getOneGD_CONOnR20(v_anchoredStartConnector)));

									ElementSpecification_c[] v_startTerminals = ElementSpecification_c
											.getManyGD_ESsOnR200(ShapeSpecification_c
													.getManyTS_SSPsOnR204(ShapeTerminal_c
															.getManyTS_SHTsOnR201(TerminalSpecification_c
																	.getManyTS_TSPsOnR202(ConnectorSpecification_c
																			.getManyTS_CSPsOnR200(v_conSpec)))));

									boolean v_allow = false;

									ElementSpecification_c v_startTerm = null;
									for (int i21406 = 0; i21406 < v_startTerminals.length; i21406++) {
										v_startTerm = v_startTerminals[i21406];

										if ((v_startTerm == v_autoCreateShapeSpec)) {

											v_allow = true;

										}

									}

									if ((v_allow)) {

										Graphconnector_c v_oldAnchor = Graphconnector_c
												.getOneDIM_CONOnR320(v_anchoredStartConnector);

										if (v_anchoredStartConnector != null) {
											v_anchoredStartConnector
													.unrelateAcrossR320From(v_oldAnchor);
										} else {
											Throwable t = new Throwable();
											t.fillInStackTrace();
											CorePlugin
													.logError(
															"Unrelate attempted on null left hand instance.",
															t);
										}

										if (v_anchoredStartConnector != null) {
											v_anchoredStartConnector
													.relateAcrossR320To(v_anchor);
										} else {
											Throwable t = new Throwable();
											t.fillInStackTrace();
											CorePlugin
													.logError(
															"Relate attempted on null left hand instance.",
															t);
										}

									}

								}

								Graphedge_c v_anchoredEndConnector = null;
								for (int i21407 = 0; i21407 < v_anchoredEndConnectors.length; i21407++) {
									v_anchoredEndConnector = v_anchoredEndConnectors[i21407];

									ElementSpecification_c v_autoCreateShapeSpec = ElementSpecification_c
											.getOneGD_ESOnR10(v_autoCreateShape);

									ElementSpecification_c v_conSpec = ElementSpecification_c
											.getOneGD_ESOnR10(GraphicalElement_c
													.getOneGD_GEOnR2(Connector_c
															.getOneGD_CONOnR20(v_anchoredStartConnector)));

									ElementSpecification_c[] v_endTerminals = ElementSpecification_c
											.getManyGD_ESsOnR200(ShapeSpecification_c
													.getManyTS_SSPsOnR204(ShapeTerminal_c
															.getManyTS_SHTsOnR201(TerminalSpecification_c
																	.getManyTS_TSPsOnR203(ConnectorSpecification_c
																			.getManyTS_CSPsOnR200(v_conSpec)))));

									boolean v_allow = false;

									ElementSpecification_c v_endTerm = null;
									for (int i21408 = 0; i21408 < v_endTerminals.length; i21408++) {
										v_endTerm = v_endTerminals[i21408];

										if ((v_endTerm == v_autoCreateShapeSpec)) {

											v_allow = true;

										}

									}

									if ((v_allow)) {

										Graphconnector_c v_oldAnchor = Graphconnector_c
												.getOneDIM_CONOnR321(v_anchoredEndConnector);

										if (v_anchoredEndConnector != null) {
											v_anchoredEndConnector
													.unrelateAcrossR321From(v_oldAnchor);
										} else {
											Throwable t = new Throwable();
											t.fillInStackTrace();
											CorePlugin
													.logError(
															"Unrelate attempted on null left hand instance.",
															t);
										}

										if (v_anchoredEndConnector != null) {
											v_anchoredEndConnector
													.relateAcrossR321To(v_anchor);
										} else {
											Throwable t = new Throwable();
											t.fillInStackTrace();
											CorePlugin
													.logError(
															"Relate attempted on null left hand instance.",
															t);
										}

									}

								}

								if (v_startCon != null) {
									v_startCon.Dispose();
								} else {
									Throwable t = new Throwable();
									t.fillInStackTrace();
									CorePlugin
											.logError(
													"Attempted to call an operation on a null instance.",
													t);
								}

							}

						}

					}

					GraphicalElement_c v_endCon = null;
					for (int i21409 = 0; i21409 < v_endCons.length; i21409++) {
						v_endCon = v_endCons[i21409];

						ElementSpecification_c v_endConSpec = ElementSpecification_c
								.getOneGD_ESOnR10(v_endCon);

						if ((v_endConSpec == v_targetSpec)) {

							if ((v_endCon.getRepresents() == Os_c
									.Null_instance())) {

								if (v_endCon != null) {
									v_endCon.setRepresents(Cl_c
											.Getinstancefromooa_id(v_endCon
													.getOoa_id(), v_endCon
													.getOoa_type(), v_endCon
													.Converttoinstance()));
								} else {
									Throwable t = new Throwable();
									t.fillInStackTrace();
									CorePlugin
											.logError(
													"Attribute write attempted on null instance.",
													t);
								}

							}

							if (!Cl_c.Hasconnector(
									v_sourceSpec == v_targetSpec,
									Cl_c.Getooaid(v_endCon.getRepresents()),
									v_autoCreateShape.getRepresents(),
									getElementexistsmethod())
									&& p_Removeelements) {

								Graphconnector_c v_anchor = Graphconnector_c
										.getOneDIM_CONOnR321(Graphedge_c
												.getOneDIM_EDOnR301(Graphelement_c
														.getOneDIM_GEOnR23(v_startCon)));

								Graphedge_c[] v_anchoredStartConnectors = Graphedge_c
										.getManyDIM_EDsOnR320(Graphconnector_c
												.getManyDIM_CONsOnR311(Graphelement_c
														.getManyDIM_GEsOnR23(v_endCon)));

								Graphedge_c[] v_anchoredEndConnectors = Graphedge_c
										.getManyDIM_EDsOnR321(Graphconnector_c
												.getManyDIM_CONsOnR311(Graphelement_c
														.getManyDIM_GEsOnR23(v_endCon)));

								Graphedge_c v_anchoredStartConnector = null;
								for (int i21410 = 0; i21410 < v_anchoredStartConnectors.length; i21410++) {
									v_anchoredStartConnector = v_anchoredStartConnectors[i21410];

									Graphconnector_c v_oldAnchor = Graphconnector_c
											.getOneDIM_CONOnR320(v_anchoredStartConnector);

									if (v_anchoredStartConnector != null) {
										v_anchoredStartConnector
												.unrelateAcrossR320From(v_oldAnchor);
									} else {
										Throwable t = new Throwable();
										t.fillInStackTrace();
										CorePlugin
												.logError(
														"Unrelate attempted on null left hand instance.",
														t);
									}

									if (v_anchoredStartConnector != null) {
										v_anchoredStartConnector
												.relateAcrossR320To(v_anchor);
									} else {
										Throwable t = new Throwable();
										t.fillInStackTrace();
										CorePlugin
												.logError(
														"Relate attempted on null left hand instance.",
														t);
									}

								}

								Graphedge_c v_anchoredEndConnector = null;
								for (int i21411 = 0; i21411 < v_anchoredEndConnectors.length; i21411++) {
									v_anchoredEndConnector = v_anchoredEndConnectors[i21411];

									Graphconnector_c v_oldAnchor = Graphconnector_c
											.getOneDIM_CONOnR321(v_anchoredEndConnector);

									if (v_anchoredEndConnector != null) {
										v_anchoredEndConnector
												.unrelateAcrossR321From(v_oldAnchor);
									} else {
										Throwable t = new Throwable();
										t.fillInStackTrace();
										CorePlugin
												.logError(
														"Unrelate attempted on null left hand instance.",
														t);
									}

									if (v_anchoredEndConnector != null) {
										v_anchoredEndConnector
												.relateAcrossR321To(v_anchor);
									} else {
										Throwable t = new Throwable();
										t.fillInStackTrace();
										CorePlugin
												.logError(
														"Relate attempted on null left hand instance.",
														t);
									}

								}

								if (v_endCon != null) {
									v_endCon.Dispose();
								} else {
									Throwable t = new Throwable();
									t.fillInStackTrace();
									CorePlugin
											.logError(
													"Attempted to call an operation on a null instance.",
													t);
								}

							}

						}

					}

				}

				v_startCons = GraphicalElement_c
						.getManyGD_GEsOnR2(Connector_c.getManyGD_CONsOnR20(Graphedge_c.getManyDIM_EDsOnR320(Graphconnector_c.getManyDIM_CONsOnR311(Graphelement_c
								.getManyDIM_GEsOnR23(v_autoCreateShape)))));

				v_endCons = GraphicalElement_c
						.getManyGD_GEsOnR2(Connector_c.getManyGD_CONsOnR20(Graphedge_c.getManyDIM_EDsOnR321(Graphconnector_c.getManyDIM_CONsOnR311(Graphelement_c
								.getManyDIM_GEsOnR23(v_autoCreateShape)))));

				int v_count = Cl_c.Numconnectors(v_sourceSpec == v_targetSpec,
						v_autoCreateShape.getRepresents(), getCountmethod());

				if ((v_count > 0 && !getElementmethod().equals("not used"))) {

					int v_i = 0;

					while ((v_i < v_count)) {

						java.util.UUID v_connectorId = Cl_c.Getconnectorid(
								v_sourceSpec == v_targetSpec,
								v_autoCreateShape.getRepresents(), v_i,
								getElementmethod());

						boolean v_foundMatchingStart = false;

						GraphicalElement_c v_startCon = null;
						for (int i21412 = 0; i21412 < v_startCons.length; i21412++) {
							v_startCon = v_startCons[i21412];

							if ((v_startCon.getRepresents() == Os_c
									.Null_instance())) {

								if (v_startCon != null) {
									v_startCon.setRepresents(Cl_c
											.Getinstancefromooa_id(v_startCon
													.getOoa_id(), v_startCon
													.getOoa_type(), v_startCon
													.Converttoinstance()));
								} else {
									Throwable t = new Throwable();
									t.fillInStackTrace();
									CorePlugin
											.logError(
													"Attribute write attempted on null instance.",
													t);
								}

							}

							if ((Cl_c.Getooaid(v_startCon.getRepresents())
									.equals(v_connectorId))) {

								v_foundMatchingStart = true;

								break;

							}

						}

						boolean v_foundMatchingEnd = false;

						GraphicalElement_c v_endCon = null;
						for (int i21413 = 0; i21413 < v_endCons.length; i21413++) {
							v_endCon = v_endCons[i21413];

							if ((v_endCon.getRepresents() == Os_c
									.Null_instance())) {

								if (v_endCon != null) {
									v_endCon.setRepresents(Cl_c
											.Getinstancefromooa_id(v_endCon
													.getOoa_id(), v_endCon
													.getOoa_type(), v_endCon
													.Converttoinstance()));
								} else {
									Throwable t = new Throwable();
									t.fillInStackTrace();
									CorePlugin
											.logError(
													"Attribute write attempted on null instance.",
													t);
								}

							}

							if ((Cl_c.Getooaid(v_endCon.getRepresents())
									.equals(v_connectorId))) {

								v_foundMatchingEnd = true;

								break;

							}

						}

						if ((v_foundMatchingStart || v_foundMatchingEnd)) {

							v_i = v_i + 1;

							continue;

						}

						java.util.UUID v_templateConId = Os_c.Null_unique_id();

						if (!getTemplateelementmethod().equals("")) {

							v_templateConId = Cl_c.Getconnectorid(
									v_sourceSpec == v_targetSpec,
									v_autoCreateShape.getRepresents(), v_i,
									getTemplateelementmethod());

						}

						if (v_templateConId.equals(Os_c.Null_unique_id())) {

							v_templateConId = v_connectorId;

						}

						java.util.UUID v_conID = Findconnector(v_templateConId);

						if (!v_conID.equals(Os_c.Null_unique_id())) {

							Model_c v_model = Model_c
									.getOneGD_MDOnR1(v_autoCreateShape);

							if (v_model != null) {
								v_model.Newconnector(getId(), v_conID,
										v_autoCreateShape.getElementid(),
										v_connectorId);
							} else {
								Throwable t = new Throwable();
								t.fillInStackTrace();
								CorePlugin
										.logError(
												"Attempted to call an operation on a null instance.",
												t);
							}

						}

						v_i = v_i + 1;

					}

				}

				else {

					v_count = Cl_c
							.Numconnectors(v_sourceSpec == v_targetSpec,
									v_autoCreateShape.getRepresents(),
									getCountmethod());

					if (v_count == 0) {

						Graphconnector_c v_con = Graphconnector_c
								.getOneDIM_CONOnR321(Graphedge_c.getOneDIM_EDOnR301(Graphelement_c
										.getOneDIM_GEOnR23(v_autoCreateShape)));

						if ((v_con != null)) {

							if (v_con != null) {
								v_con.Dispose();
							} else {
								Throwable t = new Throwable();
								t.fillInStackTrace();
								CorePlugin
										.logError(
												"Attempted to call an operation on a null instance.",
												t);
							}

						}

					}

				}

			}

		}

	} // End updateAllElements
	public java.util.UUID Findconnector(final java.util.UUID p_Connectorid) {
		Ooaofgraphics.log
				.println(ILogger.OPERATION,
						"Auto Reconciliation Specification",
						" Operation entered: AutoReconciliationSpecification::Findconnector");
		final ModelRoot modelRoot = getModelRoot();
		Model_c v_model = Model_c.getOneGD_MDOnR9(ModelSpecification_c
				.getManyGD_MSsOnR11(ElementInModelSpecification_c
						.getManyGD_EMSsOnR11(ElementSpecification_c
								.getManyGD_ESsOnR29(this))));

		ElementSpecification_c v_spec = ElementSpecification_c
				.getOneGD_ESOnR30(this);

		Connector_c[] v_connectors = Connector_c
				.getManyGD_CONsOnR2(GraphicalElement_c
						.getManyGD_GEsOnR10(v_spec));

		Connector_c v_connector = null;
		for (int i21414 = 0; i21414 < v_connectors.length; i21414++) {
			v_connector = v_connectors[i21414];

			GraphicalElement_c v_ge = GraphicalElement_c
					.getOneGD_GEOnR2(v_connector);

			if ((v_ge.getRepresents() == Os_c.Null_instance())) {

				if (v_ge != null) {
					v_ge.setRepresents(Cl_c.Getinstancefromooa_id(
							v_ge.getOoa_id(), v_ge.getOoa_type(),
							v_ge.Converttoinstance()));
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin.logError(
							"Attribute write attempted on null instance.", t);
				}

			}

			java.util.UUID v_id = Cl_c.Getooaid(v_ge.getRepresents());

			if ((v_id.equals(p_Connectorid))) {

				return v_ge.getElementid();

			}

		}

		return Os_c.Null_unique_id();

	} // End findConnector
	public static void Reconcile(ModelRoot modelRoot,
			final boolean p_Removeelements, final java.util.UUID p_System_id) {
		Ooaofgraphics.log
				.println(ILogger.OPERATION,
						"Auto Reconciliation Specification",
						" Operation entered: AutoReconciliationSpecification::Reconcile");
		AutoReconciliationSpecification_c[] v_recSpecs = AutoReconciliationSpecification_c
				.AutoReconciliationSpecificationInstances(Ooaofgraphics
						.getDefaultInstance());

		AutoReconciliationSpecification_c v_ars = null;
		for (int i21415 = 0; i21415 < v_recSpecs.length; i21415++) {
			v_ars = v_recSpecs[i21415];

			ModelSpecification_c v_modelSpec = ModelSpecification_c
					.getOneGD_MSOnR33(v_ars);

			if (((v_modelSpec != null))) {

				if (v_ars != null) {
					v_ars.Updateallelements(p_Removeelements, p_System_id);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

			}

		}

		for (int i21416 = 0; i21416 < v_recSpecs.length; i21416++) {
			v_ars = v_recSpecs[i21416];

			ModelSpecification_c v_modelSpec = ModelSpecification_c
					.getOneGD_MSOnR33(v_ars);

			if (((v_modelSpec == null))) {

				if (v_ars != null) {
					v_ars.Updateallelements(p_Removeelements, p_System_id);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

				if ((v_ars.getReprocess())) {

					if (v_ars != null) {
						v_ars.setReprocess(false);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_ars != null) {
						v_ars.Updateallelements(p_Removeelements, p_System_id);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

			}

		}

	} // End Reconcile
	public java.util.UUID Findshape(final java.util.UUID p_Shapeid) {
		Ooaofgraphics.log
				.println(ILogger.OPERATION,
						"Auto Reconciliation Specification",
						" Operation entered: AutoReconciliationSpecification::Findshape");
		final ModelRoot modelRoot = getModelRoot();
		Model_c v_model = Model_c.getOneGD_MDOnR9(ModelSpecification_c
				.getManyGD_MSsOnR11(ElementInModelSpecification_c
						.getManyGD_EMSsOnR11(ElementSpecification_c
								.getManyGD_ESsOnR29(this))));

		ElementSpecification_c v_spec = ElementSpecification_c
				.getOneGD_ESOnR30(this);

		Shape_c[] v_shapes = Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c
				.getManyGD_GEsOnR10(v_spec));

		Shape_c v_shape = null;
		for (int i21417 = 0; i21417 < v_shapes.length; i21417++) {
			v_shape = v_shapes[i21417];

			GraphicalElement_c v_ge = GraphicalElement_c
					.getOneGD_GEOnR2(v_shape);

			if ((v_ge.getRepresents() == Os_c.Null_instance())) {

				if (v_ge != null) {
					v_ge.setRepresents(Cl_c.Getinstancefromooa_id(
							v_ge.getOoa_id(), v_ge.getOoa_type(),
							v_ge.Converttoinstance()));
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin.logError(
							"Attribute write attempted on null instance.", t);
				}

			}

			java.util.UUID v_id = Cl_c.Getooaid(v_ge.getRepresents());

			if ((v_id.equals(p_Shapeid))) {

				return v_ge.getElementid();

			}

		}

		return Os_c.Null_unique_id();

	} // End findShape

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		return null;
	}
} // end Auto Reconciliation Specification
