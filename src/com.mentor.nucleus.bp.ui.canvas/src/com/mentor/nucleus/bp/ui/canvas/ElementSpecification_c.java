      
package com.mentor.nucleus.bp.ui.canvas ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.ui.canvas.ElementSpecification_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

import com.mentor.nucleus.bp.core.*;
import org.eclipse.swt.graphics.GC;
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.swt.graphics.Color;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_ELEMENT_SPECIFICATION extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ElementSpecification_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ElementSpecification_c(ModelRoot modelRoot,
       int  p_m_ooa_type,
       String       p_m_name,
       Color p_m_internal,
       Class p_m_represents,
       String       p_m_creator,
       boolean      p_m_isfixedaspectratio,
       int          p_m_defaultwidth,
       int          p_m_defaultheight,
       String       p_m_iconname,
       java.util.UUID         p_m_elementid,
       boolean      p_m_isfixedsize,
       boolean      p_m_hasfloatingtext,
       boolean      p_m_hasnointeriorcolor,
       int          p_m_layer,
       boolean      p_m_antialiased,
       String       p_m_symboltype,
       boolean      p_m_istransparent,
       String       p_m_creationrule,
       boolean      p_m_hasnamecompartment,
       boolean      p_m_causeautoresize,
       String       p_m_toolcategory,
       boolean      p_m_isanchorhost,
       java.util.UUID         p_m_term_spec_id)
  {
    super(modelRoot);
       m_ooa_type = p_m_ooa_type;
       m_name = p_m_name;
       m_internal = p_m_internal;
       m_represents = p_m_represents;
       m_creator = p_m_creator;
       m_isfixedaspectratio = p_m_isfixedaspectratio;
       m_defaultwidth = p_m_defaultwidth;
       m_defaultheight = p_m_defaultheight;
       m_iconname = p_m_iconname;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_elementid = IdAssigner.preprocessUUID(p_m_elementid);
       m_isfixedsize = p_m_isfixedsize;
       m_hasfloatingtext = p_m_hasfloatingtext;
       m_hasnointeriorcolor = p_m_hasnointeriorcolor;
       m_layer = p_m_layer;
       m_antialiased = p_m_antialiased;
       m_symboltype = p_m_symboltype;
       m_istransparent = p_m_istransparent;
       m_creationrule = p_m_creationrule;
       m_hasnamecompartment = p_m_hasnamecompartment;
       m_causeautoresize = p_m_causeautoresize;
       m_toolcategory = p_m_toolcategory;
       m_isanchorhost = p_m_isanchorhost;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_term_spec_id = IdAssigner.preprocessUUID(p_m_term_spec_id);
        
  }
  static public ElementSpecification_c createProxy(ModelRoot modelRoot,
       int  p_m_ooa_type,
       String       p_m_name,
       Color p_m_internal,
       Class p_m_represents,
       String       p_m_creator,
       boolean      p_m_isfixedaspectratio,
       int          p_m_defaultwidth,
       int          p_m_defaultheight,
       String       p_m_iconname,
       java.util.UUID         p_m_elementid,
       boolean      p_m_isfixedsize,
       boolean      p_m_hasfloatingtext,
       boolean      p_m_hasnointeriorcolor,
       int          p_m_layer,
       boolean      p_m_antialiased,
       String       p_m_symboltype,
       boolean      p_m_istransparent,
       String       p_m_creationrule,
       boolean      p_m_hasnamecompartment,
       boolean      p_m_causeautoresize,
       String       p_m_toolcategory,
       boolean      p_m_isanchorhost,
       java.util.UUID         p_m_term_spec_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ElementSpecification_c.class);
      ElementSpecification_c new_inst = null;
      synchronized(instances) {
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_ooa_type = p_m_ooa_type;
       new_inst.m_name = p_m_name;
       new_inst.m_internal = p_m_internal;
       new_inst.m_represents = p_m_represents;
       new_inst.m_creator = p_m_creator;
       new_inst.m_isfixedaspectratio = p_m_isfixedaspectratio;
       new_inst.m_defaultwidth = p_m_defaultwidth;
       new_inst.m_defaultheight = p_m_defaultheight;
       new_inst.m_iconname = p_m_iconname;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_elementid = IdAssigner.preprocessUUID(p_m_elementid);
       new_inst.m_isfixedsize = p_m_isfixedsize;
       new_inst.m_hasfloatingtext = p_m_hasfloatingtext;
       new_inst.m_hasnointeriorcolor = p_m_hasnointeriorcolor;
       new_inst.m_layer = p_m_layer;
       new_inst.m_antialiased = p_m_antialiased;
       new_inst.m_symboltype = p_m_symboltype;
       new_inst.m_istransparent = p_m_istransparent;
       new_inst.m_creationrule = p_m_creationrule;
       new_inst.m_hasnamecompartment = p_m_hasnamecompartment;
       new_inst.m_causeautoresize = p_m_causeautoresize;
       new_inst.m_toolcategory = p_m_toolcategory;
       new_inst.m_isanchorhost = p_m_isanchorhost;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_term_spec_id = IdAssigner.preprocessUUID(p_m_term_spec_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ElementSpecification_c(modelRoot,
p_m_ooa_type,
p_m_name,
p_m_internal,
p_m_represents,
p_m_creator,
p_m_isfixedaspectratio,
p_m_defaultwidth,
p_m_defaultheight,
p_m_iconname,
p_m_elementid,
p_m_isfixedsize,
p_m_hasfloatingtext,
p_m_hasnointeriorcolor,
p_m_layer,
p_m_antialiased,
p_m_symboltype,
p_m_istransparent,
p_m_creationrule,
p_m_hasnamecompartment,
p_m_causeautoresize,
p_m_toolcategory,
p_m_isanchorhost,
p_m_term_spec_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ElementSpecification_c resolveInstance(ModelRoot modelRoot,
       int  p_m_ooa_type,
       String       p_m_name,
       Color p_m_internal,
       Class p_m_represents,
       String       p_m_creator,
       boolean      p_m_isfixedaspectratio,
       int          p_m_defaultwidth,
       int          p_m_defaultheight,
       String       p_m_iconname,
       java.util.UUID         p_m_elementid,
       boolean      p_m_isfixedsize,
       boolean      p_m_hasfloatingtext,
       boolean      p_m_hasnointeriorcolor,
       int          p_m_layer,
       boolean      p_m_antialiased,
       String       p_m_symboltype,
       boolean      p_m_istransparent,
       String       p_m_creationrule,
       boolean      p_m_hasnamecompartment,
       boolean      p_m_causeautoresize,
       String       p_m_toolcategory,
       boolean      p_m_isanchorhost,
       java.util.UUID         p_m_term_spec_id){
    InstanceList instances = modelRoot.getInstanceList(ElementSpecification_c.class);
    ElementSpecification_c source = null;
    synchronized(instances) {
        Object [] key = {
        new UUID(0, new Long(p_m_ooa_type))
            };
        source = (ElementSpecification_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_ooa_type = p_m_ooa_type;
       source.m_name = p_m_name;
       source.m_internal = p_m_internal;
       source.m_represents = p_m_represents;
       source.m_creator = p_m_creator;
       source.m_isfixedaspectratio = p_m_isfixedaspectratio;
       source.m_defaultwidth = p_m_defaultwidth;
       source.m_defaultheight = p_m_defaultheight;
       source.m_iconname = p_m_iconname;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_elementid = IdAssigner.preprocessUUID(p_m_elementid);
       source.m_isfixedsize = p_m_isfixedsize;
       source.m_hasfloatingtext = p_m_hasfloatingtext;
       source.m_hasnointeriorcolor = p_m_hasnointeriorcolor;
       source.m_layer = p_m_layer;
       source.m_antialiased = p_m_antialiased;
       source.m_symboltype = p_m_symboltype;
       source.m_istransparent = p_m_istransparent;
       source.m_creationrule = p_m_creationrule;
       source.m_hasnamecompartment = p_m_hasnamecompartment;
       source.m_causeautoresize = p_m_causeautoresize;
       source.m_toolcategory = p_m_toolcategory;
       source.m_isanchorhost = p_m_isanchorhost;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_term_spec_id = IdAssigner.preprocessUUID(p_m_term_spec_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    ElementSpecification_c new_inst = new ElementSpecification_c(modelRoot,
p_m_ooa_type,
p_m_name,
p_m_internal,
p_m_represents,
p_m_creator,
p_m_isfixedaspectratio,
p_m_defaultwidth,
p_m_defaultheight,
p_m_iconname,
p_m_elementid,
p_m_isfixedsize,
p_m_hasfloatingtext,
p_m_hasnointeriorcolor,
p_m_layer,
p_m_antialiased,
p_m_symboltype,
p_m_istransparent,
p_m_creationrule,
p_m_hasnamecompartment,
p_m_causeautoresize,
p_m_toolcategory,
p_m_isanchorhost,
p_m_term_spec_id
);
    return new_inst;
  }
  public ElementSpecification_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
     m_name = "";   
     m_creator = "";   
     m_iconname = "";   
     m_elementid = IdAssigner.NULL_UUID;   
     m_layer = 1;   
     m_symboltype = "";   
     m_creationrule = "";   
     m_toolcategory = "";   
     m_term_spec_id = IdAssigner.NULL_UUID;   
  }




  public boolean equals (Object elem) {
     if (!(elem instanceof ElementSpecification_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ElementSpecification_c)) {
           return false;
       }
       
       ElementSpecification_c me = (ElementSpecification_c)elem;
      if (getOoa_type() != ((ElementSpecification_c)elem).getOoa_type()) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ElementSpecification_c)) {
           return false;
       }
       
       ElementSpecification_c me = (ElementSpecification_c)elem;
      if (getOoa_type() != ((ElementSpecification_c)elem).getOoa_type()) return false;
      return true;
    }


  // Attributes
  private int  m_ooa_type ;
  private String       m_name ;
  private Color m_internal ;
  private Class m_represents ;
  private String       m_creator ;
  private boolean      m_isfixedaspectratio ;
  private int          m_defaultwidth ;
  private int          m_defaultheight ;
  private String       m_iconname ;
  private java.util.UUID         m_elementid ;
  private boolean      m_isfixedsize ;
  private boolean      m_hasfloatingtext ;
  private boolean      m_hasnointeriorcolor ;
  private int          m_layer ;
  private boolean      m_antialiased ;
  private String       m_symboltype ;
  private boolean      m_istransparent ;
  private String       m_creationrule ;
  private boolean      m_hasnamecompartment ;
  private boolean      m_causeautoresize ;
  private String       m_toolcategory ;
  private boolean      m_isanchorhost ;
  private java.util.UUID         m_term_spec_id ;
      
// declare association references from this class
  
  
    
// referring navigation

TerminalSpecification_c CreatedByTerminalSpecification ;
public void relateAcrossR209To(TerminalSpecification_c target)
{
	relateAcrossR209To(target, true);
}
public void relateAcrossR209To(TerminalSpecification_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == CreatedByTerminalSpecification) return;  // already related

    if ( CreatedByTerminalSpecification != target ) {
    
    Object oldKey = getInstanceKey();

    if (CreatedByTerminalSpecification != null) {
    
        CreatedByTerminalSpecification.clearBackPointerR209To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofgraphics.log.println(ILogger.CONSISTENCY, 
			"ElementSpecification_c.relateAcrossR209To(TerminalSpecification_c target)", 
			"Relate performed across R209 from Element Specification to Terminal Specification without unrelate of prior instance.");  
		}
    }
                
    	CreatedByTerminalSpecification = target ;
        m_term_spec_id = target.getTerm_spec_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR209To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "209", "");
        Ooaofgraphics.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR209From(TerminalSpecification_c target)
{
	unrelateAcrossR209From(target, true);
}
public void unrelateAcrossR209From(TerminalSpecification_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (CreatedByTerminalSpecification == null) return;  // already unrelated
	
	if (target != CreatedByTerminalSpecification) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CanvasPlugin.logError("Tried to unrelate from non-related instance across R209", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR209To(this);
    }
    

      if(CreatedByTerminalSpecification != null) {
      
        m_term_spec_id = CreatedByTerminalSpecification.getTerm_spec_id();
        CreatedByTerminalSpecification = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "209", "");
        Ooaofgraphics.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ElementSpecification_c getOneGD_ESOnR209(TerminalSpecification_c [] targets)
{
    return getOneGD_ESOnR209(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR209(TerminalSpecification_c [] targets, ClassQueryInterface_c test)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneGD_ESOnR209(targets[i], test);
        }
    }

    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR209(TerminalSpecification_c target)
{
  return getOneGD_ESOnR209(target, null);
}

public static ElementSpecification_c getOneGD_ESOnR209(TerminalSpecification_c target, boolean loadComponent)
{
      return getOneGD_ESOnR209(Ooaofgraphics.getDefaultInstance(), target, null, loadComponent);
}

public static ElementSpecification_c getOneGD_ESOnR209(TerminalSpecification_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneGD_ESOnR209(Ooaofgraphics.getDefaultInstance(), target, test);
  }
  return null;
}

public static ElementSpecification_c getOneGD_ESOnR209(ModelRoot modelRoot, TerminalSpecification_c target, ClassQueryInterface_c test)
{
	return getOneGD_ESOnR209(modelRoot, target, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR209(ModelRoot modelRoot, TerminalSpecification_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneGD_ESOnR209(modelRoot,target,test);
}
private static ElementSpecification_c find_getOneGD_ESOnR209(ModelRoot modelRoot, TerminalSpecification_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    ElementSpecification_c source = (ElementSpecification_c)target.backPointer_CreatesElementSpecificationCreates_R209;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static ElementSpecification_c [] getManyGD_ESsOnR209(TerminalSpecification_c [] targets)
{
  return getManyGD_ESsOnR209(targets, null);
}
public static ElementSpecification_c [] getManyGD_ESsOnR209(TerminalSpecification_c [] targets, boolean loadComponent)
{
  return getManyGD_ESsOnR209(targets, null, loadComponent);
}
public static ElementSpecification_c [] getManyGD_ESsOnR209(TerminalSpecification_c [] targets, ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR209(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR209(TerminalSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ElementSpecification_c[0];

  ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
 
   InstanceList instances = modelRoot.getInstanceList(ElementSpecification_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      ElementSpecification_c source = (ElementSpecification_c)targets[i].backPointer_CreatesElementSpecificationCreates_R209;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	ElementSpecification_c[] ret_set = new ElementSpecification_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ElementSpecification_c[0];
  }
  }

public static ElementSpecification_c [] getManyGD_ESsOnR209(TerminalSpecification_c target)
{
  if (target != null) {
    TerminalSpecification_c [] targetArray = new TerminalSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR209(targetArray);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
  return result ;
}
}

public static ElementSpecification_c [] getManyGD_ESsOnR209(TerminalSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    TerminalSpecification_c [] targetArray = new TerminalSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR209(targetArray, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
  return result ;
}
}



  
    
// referring navigation

GraphicalElement_c IsCreatingGraphicalElement ;
public void relateAcrossR16To(GraphicalElement_c target)
{
	relateAcrossR16To(target, true);
}
public void relateAcrossR16To(GraphicalElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsCreatingGraphicalElement) return;  // already related

    if ( IsCreatingGraphicalElement != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsCreatingGraphicalElement != null) {
    
        IsCreatingGraphicalElement.clearBackPointerR16To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofgraphics.log.println(ILogger.CONSISTENCY, 
			"ElementSpecification_c.relateAcrossR16To(GraphicalElement_c target)", 
			"Relate performed across R16 from Element Specification to Graphical Element without unrelate of prior instance.");  
		}
    }
                
    	IsCreatingGraphicalElement = target ;
        if(IdAssigner.NULL_UUID.equals(target.getElementid()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_elementid = target.getElementidCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR16To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "16", "");
        Ooaofgraphics.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR16From(GraphicalElement_c target)
{
	unrelateAcrossR16From(target, true);
}
public void unrelateAcrossR16From(GraphicalElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsCreatingGraphicalElement == null) return;  // already unrelated
	
	if (target != IsCreatingGraphicalElement) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CanvasPlugin.logError("Tried to unrelate from non-related instance across R16", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR16To(this);
    }
    

      if(IsCreatingGraphicalElement != null) {
      
        m_elementid = IsCreatingGraphicalElement.getElementid();
        if(IdAssigner.NULL_UUID.equals(m_elementid))
        {
          m_elementid = IsCreatingGraphicalElement.getElementidCachedValue();
        }       
        IsCreatingGraphicalElement = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "16", "");
        Ooaofgraphics.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ElementSpecification_c getOneGD_ESOnR16(GraphicalElement_c [] targets)
{
    return getOneGD_ESOnR16(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR16(GraphicalElement_c [] targets, ClassQueryInterface_c test)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneGD_ESOnR16(targets[i], test);
        }
    }

    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR16(GraphicalElement_c target)
{
  return getOneGD_ESOnR16(target, null);
}

public static ElementSpecification_c getOneGD_ESOnR16(GraphicalElement_c target, boolean loadComponent)
{
      return getOneGD_ESOnR16(Ooaofgraphics.getDefaultInstance(), target, null, loadComponent);
}

public static ElementSpecification_c getOneGD_ESOnR16(GraphicalElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneGD_ESOnR16(Ooaofgraphics.getDefaultInstance(), target, test);
  }
  return null;
}

public static ElementSpecification_c getOneGD_ESOnR16(ModelRoot modelRoot, GraphicalElement_c target, ClassQueryInterface_c test)
{
	return getOneGD_ESOnR16(modelRoot, target, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR16(ModelRoot modelRoot, GraphicalElement_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneGD_ESOnR16(modelRoot,target,test);
}
private static ElementSpecification_c find_getOneGD_ESOnR16(ModelRoot modelRoot, GraphicalElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    ElementSpecification_c source = (ElementSpecification_c)target.backPointer_IsBeingCreatedByElementSpecificationIsBeingCreatedBy_R16;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static ElementSpecification_c [] getManyGD_ESsOnR16(GraphicalElement_c [] targets)
{
  return getManyGD_ESsOnR16(targets, null);
}
public static ElementSpecification_c [] getManyGD_ESsOnR16(GraphicalElement_c [] targets, boolean loadComponent)
{
  return getManyGD_ESsOnR16(targets, null, loadComponent);
}
public static ElementSpecification_c [] getManyGD_ESsOnR16(GraphicalElement_c [] targets, ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR16(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR16(GraphicalElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ElementSpecification_c[0];

  ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
 
   InstanceList instances = modelRoot.getInstanceList(ElementSpecification_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      ElementSpecification_c source = (ElementSpecification_c)targets[i].backPointer_IsBeingCreatedByElementSpecificationIsBeingCreatedBy_R16;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	ElementSpecification_c[] ret_set = new ElementSpecification_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ElementSpecification_c[0];
  }
  }

public static ElementSpecification_c [] getManyGD_ESsOnR16(GraphicalElement_c target)
{
  if (target != null) {
    GraphicalElement_c [] targetArray = new GraphicalElement_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR16(targetArray);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
  return result ;
}
}

public static ElementSpecification_c [] getManyGD_ESsOnR16(GraphicalElement_c target, boolean loadComponent)
{
  if (target != null) {
    GraphicalElement_c [] targetArray = new GraphicalElement_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR16(targetArray, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

ShapeSpecification_c backPointer_IsSubtypeShapeSpecificationIsSubtype_R200;

public void setShapeSpecificationOrderInChildListR200(ShapeSpecification_c target, int index) {
	unrelateAcrossR200From(target);
	ShapeSpecification_c[] elements = ShapeSpecification_c.getManyTS_SSPsOnR200(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR200From((ShapeSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR200To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR200To((ShapeSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR200To(ShapeSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR200To(this, true) ;
  }
}

public void relateAcrossR200To(ShapeSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR200To(this, notifyChanges) ;
  }
}

public void setBackPointerR200To(ShapeSpecification_c target)
{
    backPointer_IsSubtypeShapeSpecificationIsSubtype_R200 = target;
}

public void unrelateAcrossR200From(ShapeSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR200From(this, true) ;
  }
}

public void unrelateAcrossR200From(ShapeSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR200From(this, notifyChanges) ;
  }
}

public void clearBackPointerR200To(ShapeSpecification_c target)
{
	if (target == backPointer_IsSubtypeShapeSpecificationIsSubtype_R200) {
		backPointer_IsSubtypeShapeSpecificationIsSubtype_R200 = null;
	}
}

public static ElementSpecification_c getOneGD_ESOnR200(ShapeSpecification_c [] targets)
{
    return getOneGD_ESOnR200(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR200(ShapeSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR200(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR200(ShapeSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR200(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR200(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR200(ShapeSpecification_c target)
{
	return getOneGD_ESOnR200(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR200(ShapeSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ShapeSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR200(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ShapeSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].IsSupertypeElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ShapeSpecification_c [] targets)
{
  return getManyGD_ESsOnR200(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ShapeSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ShapeSpecification_c [] targetArray = new ShapeSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR200(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ShapeSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR200(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ShapeSpecification_c target)
{
    return getManyGD_ESsOnR200(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ShapeSpecification_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR200(target, null, loadComponent);
}

  
  
  
// referred to navigation

ConnectorSpecification_c backPointer_IsSubtypeConnectorSpecificationIsSubtype_R200;

public void setConnectorSpecificationOrderInChildListR200(ConnectorSpecification_c target, int index) {
	unrelateAcrossR200From(target);
	ConnectorSpecification_c[] elements = ConnectorSpecification_c.getManyTS_CSPsOnR200(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR200From((ConnectorSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR200To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR200To((ConnectorSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR200To(ConnectorSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR200To(this, true) ;
  }
}

public void relateAcrossR200To(ConnectorSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR200To(this, notifyChanges) ;
  }
}

public void setBackPointerR200To(ConnectorSpecification_c target)
{
    backPointer_IsSubtypeConnectorSpecificationIsSubtype_R200 = target;
}

public void unrelateAcrossR200From(ConnectorSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR200From(this, true) ;
  }
}

public void unrelateAcrossR200From(ConnectorSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR200From(this, notifyChanges) ;
  }
}

public void clearBackPointerR200To(ConnectorSpecification_c target)
{
	if (target == backPointer_IsSubtypeConnectorSpecificationIsSubtype_R200) {
		backPointer_IsSubtypeConnectorSpecificationIsSubtype_R200 = null;
	}
}

public static ElementSpecification_c getOneGD_ESOnR200(ConnectorSpecification_c [] targets)
{
    return getOneGD_ESOnR200(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR200(ConnectorSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR200(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR200(ConnectorSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR200(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR200(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR200(ConnectorSpecification_c target)
{
	return getOneGD_ESOnR200(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR200(ConnectorSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ConnectorSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR200(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ConnectorSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].IsSupertypeElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ConnectorSpecification_c [] targets)
{
  return getManyGD_ESsOnR200(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ConnectorSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ConnectorSpecification_c [] targetArray = new ConnectorSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR200(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ConnectorSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR200(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ConnectorSpecification_c target)
{
    return getManyGD_ESsOnR200(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR200(ConnectorSpecification_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR200(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ElementInModelSpecification_c> backPointer_CanAppearOnElementInModelSpecificationCanAppearOn_R11 = new ArrayList<ElementInModelSpecification_c>();

public void setElementInModelSpecificationOrderInChildListR11(ElementInModelSpecification_c target, int index) {
	unrelateAcrossR11From(target);
	ElementInModelSpecification_c[] elements = ElementInModelSpecification_c.getManyGD_EMSsOnR11(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR11From((ElementInModelSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR11To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR11To((ElementInModelSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR11To(ElementInModelSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR11To(this, true) ;
  }
}

public void relateAcrossR11To(ElementInModelSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR11To(this, notifyChanges) ;
  }
}

public void setBackPointerR11To(ElementInModelSpecification_c target)
{
  	synchronized (backPointer_CanAppearOnElementInModelSpecificationCanAppearOn_R11) {
		backPointer_CanAppearOnElementInModelSpecificationCanAppearOn_R11.add(target);
	}
}

public void unrelateAcrossR11From(ElementInModelSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR11From(this, true) ;
  }
}

public void unrelateAcrossR11From(ElementInModelSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR11From(this, notifyChanges) ;
  }
}

public void clearBackPointerR11To(ElementInModelSpecification_c target)
{
  synchronized (backPointer_CanAppearOnElementInModelSpecificationCanAppearOn_R11) {
	    backPointer_CanAppearOnElementInModelSpecificationCanAppearOn_R11.remove(target);
	}
}

public static ElementSpecification_c getOneGD_ESOnR11(ElementInModelSpecification_c [] targets)
{
    return getOneGD_ESOnR11(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR11(ElementInModelSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR11(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR11(ElementInModelSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR11(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR11(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR11(ElementInModelSpecification_c target)
{
	return getOneGD_ESOnR11(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR11(ElementInModelSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.CanShowElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR11(ElementInModelSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR11(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR11(ElementInModelSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].CanShowElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR11(ElementInModelSpecification_c [] targets)
{
  return getManyGD_ESsOnR11(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR11(ElementInModelSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ElementInModelSpecification_c [] targetArray = new ElementInModelSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR11(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR11(ElementInModelSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR11(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR11(ElementInModelSpecification_c target)
{
    return getManyGD_ESsOnR11(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR11(ElementInModelSpecification_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR11(target, null, loadComponent);
}

public static ElementSpecification_c getOneGD_ESOnR11(ModelSpecification_c target)
{
  return ElementSpecification_c.getOneGD_ESOnR11(ElementInModelSpecification_c.getOneGD_EMSOnR11(target)) ;
}

public static ElementSpecification_c getOneGD_ESOnR11(ModelSpecification_c target,
    ClassQueryInterface_c test)
{
  return ElementSpecification_c.getOneGD_ESOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(target), test) ;
}

public static ElementSpecification_c [] getManyGD_ESsOnR11(ModelSpecification_c target,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR11(target, test, true);
}
public static ElementSpecification_c [] getManyGD_ESsOnR11(ModelSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  ElementInModelSpecification_c [] associators = ElementInModelSpecification_c.getManyGD_EMSsOnR11(target, loadComponent) ;
    return ElementSpecification_c.getManyGD_ESsOnR11(associators, test, loadComponent) ;
}
public static ElementSpecification_c [] getManyGD_ESsOnR11(ModelSpecification_c target)
{
    return getManyGD_ESsOnR11(target, null, true);
}
public static ElementSpecification_c [] getManyGD_ESsOnR11(ModelSpecification_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR11(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<GraphicalElement_c> backPointer_HasInstanceGraphicalElementHasInstance_R10 = new ArrayList<GraphicalElement_c>();

public void setGraphicalElementOrderInChildListR10(GraphicalElement_c target, int index) {
	unrelateAcrossR10From(target);
	GraphicalElement_c[] elements = GraphicalElement_c.getManyGD_GEsOnR10(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR10From((GraphicalElement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR10To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR10To((GraphicalElement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR10To(GraphicalElement_c target)
{
  if (target != null) {
    target.relateAcrossR10To(this, true) ;
  }
}

public void relateAcrossR10To(GraphicalElement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR10To(this, notifyChanges) ;
  }
}

public void setBackPointerR10To(GraphicalElement_c target)
{
  	synchronized (backPointer_HasInstanceGraphicalElementHasInstance_R10) {
		backPointer_HasInstanceGraphicalElementHasInstance_R10.add(target);
	}
}

public void unrelateAcrossR10From(GraphicalElement_c target)
{
  if (target != null) {
    target.unrelateAcrossR10From(this, true) ;
  }
}

public void unrelateAcrossR10From(GraphicalElement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR10From(this, notifyChanges) ;
  }
}

public void clearBackPointerR10To(GraphicalElement_c target)
{
  synchronized (backPointer_HasInstanceGraphicalElementHasInstance_R10) {
	    backPointer_HasInstanceGraphicalElementHasInstance_R10.remove(target);
	}
}

public static ElementSpecification_c getOneGD_ESOnR10(GraphicalElement_c [] targets)
{
    return getOneGD_ESOnR10(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR10(GraphicalElement_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR10(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR10(GraphicalElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR10(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR10(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR10(GraphicalElement_c target)
{
	return getOneGD_ESOnR10(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR10(GraphicalElement_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsInstanceOfElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR10(GraphicalElement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR10(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR10(GraphicalElement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].IsInstanceOfElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR10(GraphicalElement_c [] targets)
{
  return getManyGD_ESsOnR10(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR10(GraphicalElement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    GraphicalElement_c [] targetArray = new GraphicalElement_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR10(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR10(GraphicalElement_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR10(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR10(GraphicalElement_c target)
{
    return getManyGD_ESsOnR10(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR10(GraphicalElement_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR10(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ClientClassDependency_c> backPointer_HasClientClassDependencyHas_R17 = new ArrayList<ClientClassDependency_c>();

public void setClientClassDependencyOrderInChildListR17(ClientClassDependency_c target, int index) {
	unrelateAcrossR17From(target);
	ClientClassDependency_c[] elements = ClientClassDependency_c.getManyGD_CCDsOnR17(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR17From((ClientClassDependency_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR17To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR17To((ClientClassDependency_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR17To(ClientClassDependency_c target)
{
  if (target != null) {
    target.relateAcrossR17To(this, true) ;
  }
}

public void relateAcrossR17To(ClientClassDependency_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR17To(this, notifyChanges) ;
  }
}

public void setBackPointerR17To(ClientClassDependency_c target)
{
  	synchronized (backPointer_HasClientClassDependencyHas_R17) {
		backPointer_HasClientClassDependencyHas_R17.add(target);
	}
}

public void unrelateAcrossR17From(ClientClassDependency_c target)
{
  if (target != null) {
    target.unrelateAcrossR17From(this, true) ;
  }
}

public void unrelateAcrossR17From(ClientClassDependency_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR17From(this, notifyChanges) ;
  }
}

public void clearBackPointerR17To(ClientClassDependency_c target)
{
  synchronized (backPointer_HasClientClassDependencyHas_R17) {
	    backPointer_HasClientClassDependencyHas_R17.remove(target);
	}
}

public static ElementSpecification_c getOneGD_ESOnR17(ClientClassDependency_c [] targets)
{
    return getOneGD_ESOnR17(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR17(ClientClassDependency_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR17(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR17(ClientClassDependency_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR17(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR17(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR17(ClientClassDependency_c target)
{
	return getOneGD_ESOnR17(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR17(ClientClassDependency_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsForElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR17(ClientClassDependency_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR17(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR17(ClientClassDependency_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].IsForElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR17(ClientClassDependency_c [] targets)
{
  return getManyGD_ESsOnR17(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR17(ClientClassDependency_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ClientClassDependency_c [] targetArray = new ClientClassDependency_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR17(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR17(ClientClassDependency_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR17(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR17(ClientClassDependency_c target)
{
    return getManyGD_ESsOnR17(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR17(ClientClassDependency_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR17(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<AutoReconciliationSpecification_c> backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29 = new ArrayList<AutoReconciliationSpecification_c>();

public void setAutoReconciliationSpecificationOrderInChildListR29(AutoReconciliationSpecification_c target, int index) {
	unrelateAcrossR29From(target);
	AutoReconciliationSpecification_c[] elements = AutoReconciliationSpecification_c.getManyGD_ARSsOnR29(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR29From((AutoReconciliationSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR29To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR29To((AutoReconciliationSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR29To(AutoReconciliationSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR29To(this, true) ;
  }
}

public void relateAcrossR29To(AutoReconciliationSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR29To(this, notifyChanges) ;
  }
}

public void setBackPointerR29To(AutoReconciliationSpecification_c target)
{
  	synchronized (backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29) {
		backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29.add(target);
	}
}

public void unrelateAcrossR29From(AutoReconciliationSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR29From(this, true) ;
  }
}

public void unrelateAcrossR29From(AutoReconciliationSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR29From(this, notifyChanges) ;
  }
}

public void clearBackPointerR29To(AutoReconciliationSpecification_c target)
{
  synchronized (backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29) {
	    backPointer_AssociatedPopulationReconciledByAutoReconciliationSpecificationAssociatedPopulationReconciledBy_R29.remove(target);
	}
}

public static ElementSpecification_c getOneGD_ESOnR29(AutoReconciliationSpecification_c [] targets)
{
    return getOneGD_ESOnR29(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR29(AutoReconciliationSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR29(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR29(AutoReconciliationSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR29(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR29(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR29(AutoReconciliationSpecification_c target)
{
	return getOneGD_ESOnR29(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR29(AutoReconciliationSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.ReconcilesInstancePopulationAssociatedWithElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR29(AutoReconciliationSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR29(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR29(AutoReconciliationSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].ReconcilesInstancePopulationAssociatedWithElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR29(AutoReconciliationSpecification_c [] targets)
{
  return getManyGD_ESsOnR29(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR29(AutoReconciliationSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    AutoReconciliationSpecification_c [] targetArray = new AutoReconciliationSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR29(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR29(AutoReconciliationSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR29(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR29(AutoReconciliationSpecification_c target)
{
    return getManyGD_ESsOnR29(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR29(AutoReconciliationSpecification_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR29(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<AutoReconciliationSpecification_c> backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30 = new ArrayList<AutoReconciliationSpecification_c>();

public void setAutoReconciliationSpecificationOrderInChildListR30(AutoReconciliationSpecification_c target, int index) {
	unrelateAcrossR30From(target);
	AutoReconciliationSpecification_c[] elements = AutoReconciliationSpecification_c.getManyGD_ARSsOnR30(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR30From((AutoReconciliationSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR30To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR30To((AutoReconciliationSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR30To(AutoReconciliationSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR30To(this, true) ;
  }
}

public void relateAcrossR30To(AutoReconciliationSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR30To(this, notifyChanges) ;
  }
}

public void setBackPointerR30To(AutoReconciliationSpecification_c target)
{
  	synchronized (backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30) {
		backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30.add(target);
	}
}

public void unrelateAcrossR30From(AutoReconciliationSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR30From(this, true) ;
  }
}

public void unrelateAcrossR30From(AutoReconciliationSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR30From(this, notifyChanges) ;
  }
}

public void clearBackPointerR30To(AutoReconciliationSpecification_c target)
{
  synchronized (backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30) {
	    backPointer_PopulationUsedForReconciliationByAutoReconciliationSpecificationPopulationUsedForReconciliationBy_R30.remove(target);
	}
}

public static ElementSpecification_c getOneGD_ESOnR30(AutoReconciliationSpecification_c [] targets)
{
    return getOneGD_ESOnR30(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR30(AutoReconciliationSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR30(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR30(AutoReconciliationSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR30(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR30(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR30(AutoReconciliationSpecification_c target)
{
	return getOneGD_ESOnR30(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR30(AutoReconciliationSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.ReconcilesAgainstInstancesOfElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR30(AutoReconciliationSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR30(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR30(AutoReconciliationSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].ReconcilesAgainstInstancesOfElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR30(AutoReconciliationSpecification_c [] targets)
{
  return getManyGD_ESsOnR30(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR30(AutoReconciliationSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    AutoReconciliationSpecification_c [] targetArray = new AutoReconciliationSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR30(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR30(AutoReconciliationSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR30(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR30(AutoReconciliationSpecification_c target)
{
    return getManyGD_ESsOnR30(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR30(AutoReconciliationSpecification_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR30(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<AutoReconciliationSpecification_c> backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31 = new ArrayList<AutoReconciliationSpecification_c>();

public void setAutoReconciliationSpecificationOrderInChildListR31(AutoReconciliationSpecification_c target, int index) {
	unrelateAcrossR31From(target);
	AutoReconciliationSpecification_c[] elements = AutoReconciliationSpecification_c.getManyGD_ARSsOnR31(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR31From((AutoReconciliationSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR31To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR31To((AutoReconciliationSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR31To(AutoReconciliationSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR31To(this, true) ;
  }
}

public void relateAcrossR31To(AutoReconciliationSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR31To(this, notifyChanges) ;
  }
}

public void setBackPointerR31To(AutoReconciliationSpecification_c target)
{
  	synchronized (backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31) {
		backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31.add(target);
	}
}

public void unrelateAcrossR31From(AutoReconciliationSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR31From(this, true) ;
  }
}

public void unrelateAcrossR31From(AutoReconciliationSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR31From(this, notifyChanges) ;
  }
}

public void clearBackPointerR31To(AutoReconciliationSpecification_c target)
{
  synchronized (backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31) {
	    backPointer_ReconciledByAutoReconciliationSpecificationReconciledBy_R31.remove(target);
	}
}

public static ElementSpecification_c getOneGD_ESOnR31(AutoReconciliationSpecification_c [] targets)
{
    return getOneGD_ESOnR31(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR31(AutoReconciliationSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR31(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR31(AutoReconciliationSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR31(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR31(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR31(AutoReconciliationSpecification_c target)
{
	return getOneGD_ESOnR31(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR31(AutoReconciliationSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.ReconcilesElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR31(AutoReconciliationSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR31(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR31(AutoReconciliationSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].ReconcilesElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR31(AutoReconciliationSpecification_c [] targets)
{
  return getManyGD_ESsOnR31(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR31(AutoReconciliationSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    AutoReconciliationSpecification_c [] targetArray = new AutoReconciliationSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR31(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR31(AutoReconciliationSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR31(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR31(AutoReconciliationSpecification_c target)
{
    return getManyGD_ESsOnR31(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR31(AutoReconciliationSpecification_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR31(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ModelTool_c> backPointer_HasElementsInstantiatedByModelToolHasElementsInstantiatedBy_R103 = new ArrayList<ModelTool_c>();

public void setModelToolOrderInChildListR103(ModelTool_c target, int index) {
	unrelateAcrossR103From(target);
	ModelTool_c[] elements = ModelTool_c.getManyCT_MTLsOnR103(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR103From((ModelTool_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR103To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR103To((ModelTool_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR103To(ModelTool_c target)
{
  if (target != null) {
    target.relateAcrossR103To(this, true) ;
  }
}

public void relateAcrossR103To(ModelTool_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR103To(this, notifyChanges) ;
  }
}

public void setBackPointerR103To(ModelTool_c target)
{
  	synchronized (backPointer_HasElementsInstantiatedByModelToolHasElementsInstantiatedBy_R103) {
		backPointer_HasElementsInstantiatedByModelToolHasElementsInstantiatedBy_R103.add(target);
	}
}

public void unrelateAcrossR103From(ModelTool_c target)
{
  if (target != null) {
    target.unrelateAcrossR103From(this, true) ;
  }
}

public void unrelateAcrossR103From(ModelTool_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR103From(this, notifyChanges) ;
  }
}

public void clearBackPointerR103To(ModelTool_c target)
{
  synchronized (backPointer_HasElementsInstantiatedByModelToolHasElementsInstantiatedBy_R103) {
	    backPointer_HasElementsInstantiatedByModelToolHasElementsInstantiatedBy_R103.remove(target);
	}
}

public static ElementSpecification_c getOneGD_ESOnR103(ModelTool_c [] targets)
{
    return getOneGD_ESOnR103(targets, null);
}

public static ElementSpecification_c getOneGD_ESOnR103(ModelTool_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_ESOnR103(targets, test, true);
}

public static ElementSpecification_c getOneGD_ESOnR103(ModelTool_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ElementSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ElementSpecification_c candidate_val = getOneGD_ESOnR103(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_ESOnR103(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ElementSpecification_c getOneGD_ESOnR103(ModelTool_c target)
{
	return getOneGD_ESOnR103(target, true);
}
public static ElementSpecification_c getOneGD_ESOnR103(ModelTool_c target, boolean loadComponent)
{
  if (target != null) {
    return target.InstantiatesElementsSpecifiedByElementSpecification ;
  } else {
    return null;
  }
}

public static ElementSpecification_c [] getManyGD_ESsOnR103(ModelTool_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_ESsOnR103(targets, test, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR103(ModelTool_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ElementSpecification_c[0];
  
  
  LinkedHashSet<ElementSpecification_c> elementsSet = new LinkedHashSet<ElementSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ElementSpecification_c associate = targets[i].InstantiatesElementsSpecifiedByElementSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ElementSpecification_c[] result = new ElementSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ElementSpecification_c [] getManyGD_ESsOnR103(ModelTool_c [] targets)
{
  return getManyGD_ESsOnR103(targets, null);
}

public static ElementSpecification_c [] getManyGD_ESsOnR103(ModelTool_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ModelTool_c [] targetArray = new ModelTool_c[1];
    targetArray[0] = target;
    return getManyGD_ESsOnR103(targetArray, test, loadComponent);
  } else {
    ElementSpecification_c [] result = new ElementSpecification_c [0] ;
    return result ;
  }
  
}

public static ElementSpecification_c [] getManyGD_ESsOnR103(ModelTool_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_ESsOnR103(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR103(ModelTool_c target)
{
    return getManyGD_ESsOnR103(target, null, true);
}

public static ElementSpecification_c [] getManyGD_ESsOnR103(ModelTool_c target, boolean loadComponent)
{
    return getManyGD_ESsOnR103(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (CreatedByTerminalSpecification == null) {          
      // R209
      baseRoot = Ooaofgraphics.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
      TerminalSpecification_c relInst22282 = (TerminalSpecification_c) baseRoot.getInstanceList(TerminalSpecification_c.class).get(new Object[] {m_term_spec_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst22282 == null) {
      			relInst22282 = (TerminalSpecification_c) Ooaofooa.getDefaultInstance().getInstanceList(TerminalSpecification_c.class).get(new Object[] {m_term_spec_id});
      		}
			//synchronized
      if ( relInst22282 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22282) && !isProxy())) {
	      relInst22282.relateAcrossR209To(this, notifyChanges);
	  }
	  }
          baseRoot = modelRoot;
	}
	          

	if (IsCreatingGraphicalElement == null) {          
      // R16
      GraphicalElement_c relInst22283 = (GraphicalElement_c) baseRoot.getInstanceList(GraphicalElement_c.class).get(new Object[] {m_elementid});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst22283 == null) {
      			relInst22283 = (GraphicalElement_c) Ooaofooa.getDefaultInstance().getInstanceList(GraphicalElement_c.class).get(new Object[] {m_elementid});
      		}
			//synchronized
      if ( relInst22283 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22283) && !isProxy())) {
	      relInst22283.relateAcrossR16To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R209
      // TS_TSP
		  inst=CreatedByTerminalSpecification;
			unrelateAcrossR209From(CreatedByTerminalSpecification, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R16
      // GD_GE
		  inst=IsCreatingGraphicalElement;
			unrelateAcrossR16From(IsCreatingGraphicalElement, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ElementSpecification_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ElementSpecification_c inst = (ElementSpecification_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ElementSpecification_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ElementSpecification_c ElementSpecificationInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ElementSpecification_c result=findElementSpecificationInstance(modelRoot,test,loadComponent);
	  return result;  
  }
private static ElementSpecification_c findElementSpecificationInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ElementSpecification_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ElementSpecification_c x = (ElementSpecification_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					return x;
			}
		}
		}
			return null;
}
  public static ElementSpecification_c ElementSpecificationInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ElementSpecificationInstance(modelRoot,test,true);
  }
  
  public static ElementSpecification_c ElementSpecificationInstance(ModelRoot modelRoot)
  {
	 return ElementSpecificationInstance(modelRoot,null,true);
  }

  public static ElementSpecification_c [] ElementSpecificationInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
		    InstanceList instances = modelRoot.getInstanceList(ElementSpecification_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ElementSpecification_c x = (ElementSpecification_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ElementSpecification_c[] ret_set = new ElementSpecification_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ElementSpecification_c[0];
			}		
		} 
  }
  public static ElementSpecification_c [] ElementSpecificationInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ElementSpecificationInstances(modelRoot,test,true);
  }
  public static ElementSpecification_c [] ElementSpecificationInstances(ModelRoot modelRoot)
  {
	return ElementSpecificationInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Element Specification.dispose call: ";
	TerminalSpecification_c testR209Inst = TerminalSpecification_c.getOneTS_TSPOnR209(this, false);

	if ( testR209Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "209 ";
	}
	ShapeSpecification_c testR200Inst1 = ShapeSpecification_c.getOneTS_SSPOnR200(this, false);

	if ( testR200Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "200 ";
	}
	ConnectorSpecification_c testR200Inst2 = ConnectorSpecification_c.getOneTS_CSPOnR200(this, false);

	if ( testR200Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "200 ";
	}
 	ElementInModelSpecification_c testR11Inst = ElementInModelSpecification_c.getOneGD_EMSOnR11(this, false);

 	if ( testR11Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "11 ";
 	}
	GraphicalElement_c testR10Inst = GraphicalElement_c.getOneGD_GEOnR10(this, false);

	if ( testR10Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "10 ";	
	}
	GraphicalElement_c testR16Inst = GraphicalElement_c.getOneGD_GEOnR16(this, false);

	if ( testR16Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "16 ";
	}
	ClientClassDependency_c testR17Inst = ClientClassDependency_c.getOneGD_CCDOnR17(this, false);

	if ( testR17Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "17 ";	
	}
	AutoReconciliationSpecification_c testR29Inst = AutoReconciliationSpecification_c.getOneGD_ARSOnR29(this, false);

	if ( testR29Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "29 ";	
	}
	AutoReconciliationSpecification_c testR30Inst = AutoReconciliationSpecification_c.getOneGD_ARSOnR30(this, false);

	if ( testR30Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "30 ";	
	}
	AutoReconciliationSpecification_c testR31Inst = AutoReconciliationSpecification_c.getOneGD_ARSOnR31(this, false);

	if ( testR31Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "31 ";	
	}
	ModelTool_c testR103Inst = ModelTool_c.getOneCT_MTLOnR103(this, false);

	if ( testR103Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "103 ";	
	}
	if(delete_error == true) {

		if(CanvasPlugin.getDefault().isDebugging()) {
			Ooaofgraphics.log.println(ILogger.DELETE, "Element Specification", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CanvasPlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("elementid")){
         return true;
      }
      if(attributeName.equals("term_spec_id")){
         return true;
      }
      return false;      
  }      
  // declare attribute accessors
  public int getOoa_type()
  {
    return m_ooa_type ;
  }


  public void setOoa_type(int newValue)
  {
    if(m_ooa_type == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ooa_type", new Integer(m_ooa_type), new Integer(newValue),false);

   m_ooa_type = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,false); 
   m_name = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public Color getInternal()
  {
    return m_internal ;
  }


  public void setInternal(Color newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_internal)){
	        return;
	    }
	}else if(m_internal != null){
	    if(m_internal.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Internal", m_internal, newValue,false); 
   m_internal = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public Class getRepresents()
  {
    return m_represents ;
  }


  public void setRepresents(Class newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_represents)){
	        return;
	    }
	}else if(m_represents != null){
	    if(m_represents.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Represents", m_represents, newValue,false); 
   m_represents = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getCreator()
  {
    return m_creator ;
  }


  public void setCreator(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_creator)){
	        return;
	    }
	}else if(m_creator != null){
	    if(m_creator.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Creator", m_creator, newValue,false); 
   m_creator = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getIsfixedaspectratio()
  {
    return m_isfixedaspectratio ;
  }


  public void setIsfixedaspectratio(boolean newValue)
  {
    if(m_isfixedaspectratio == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Isfixedaspectratio", new Boolean(m_isfixedaspectratio), new Boolean(newValue),false);

   m_isfixedaspectratio = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getDefaultwidth()
  {
    return m_defaultwidth ;
  }


  public void setDefaultwidth(int newValue)
  {
    if(m_defaultwidth == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Defaultwidth", new Integer(m_defaultwidth), new Integer(newValue),false);

   m_defaultwidth = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getDefaultheight()
  {
    return m_defaultheight ;
  }


  public void setDefaultheight(int newValue)
  {
    if(m_defaultheight == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Defaultheight", new Integer(m_defaultheight), new Integer(newValue),false);

   m_defaultheight = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getIconname()
  {
    return m_iconname ;
  }


  public void setIconname(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_iconname)){
	        return;
	    }
	}else if(m_iconname != null){
	    if(m_iconname.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Iconname", m_iconname, newValue,false); 
   m_iconname = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getElementidLongBased()
  {
    if ( IsCreatingGraphicalElement != null )
    {
      return IsCreatingGraphicalElement.getElementidLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getElementid()
  {
    if ( IsCreatingGraphicalElement != null )
    {
      return IsCreatingGraphicalElement.getElementid();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getElementidCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_elementid) )
      return m_elementid;
    else
      return getElementid();
  }
  
  public void setElementid(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_elementid)){
	        return;
	    }
	}else if(m_elementid != null){
	    if(m_elementid.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Elementid", m_elementid, newValue,false); 
   m_elementid = IdAssigner.preprocessUUID(newValue);
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getIsfixedsize()
  {
    return m_isfixedsize ;
  }


  public void setIsfixedsize(boolean newValue)
  {
    if(m_isfixedsize == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Isfixedsize", new Boolean(m_isfixedsize), new Boolean(newValue),false);

   m_isfixedsize = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getHasfloatingtext()
  {
    return m_hasfloatingtext ;
  }


  public void setHasfloatingtext(boolean newValue)
  {
    if(m_hasfloatingtext == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Hasfloatingtext", new Boolean(m_hasfloatingtext), new Boolean(newValue),false);

   m_hasfloatingtext = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getHasnointeriorcolor()
  {
    return m_hasnointeriorcolor ;
  }


  public void setHasnointeriorcolor(boolean newValue)
  {
    if(m_hasnointeriorcolor == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Hasnointeriorcolor", new Boolean(m_hasnointeriorcolor), new Boolean(newValue),false);

   m_hasnointeriorcolor = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getLayer()
  {
    return m_layer ;
  }


  public void setLayer(int newValue)
  {
    if(m_layer == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Layer", new Integer(m_layer), new Integer(newValue),false);

   m_layer = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getAntialiased()
  {
    return m_antialiased ;
  }


  public void setAntialiased(boolean newValue)
  {
    if(m_antialiased == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Antialiased", new Boolean(m_antialiased), new Boolean(newValue),false);

   m_antialiased = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getSymboltype()
  {
    return m_symboltype ;
  }


  public void setSymboltype(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_symboltype)){
	        return;
	    }
	}else if(m_symboltype != null){
	    if(m_symboltype.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Symboltype", m_symboltype, newValue,false); 
   m_symboltype = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getIstransparent()
  {
    return m_istransparent ;
  }


  public void setIstransparent(boolean newValue)
  {
    if(m_istransparent == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Istransparent", new Boolean(m_istransparent), new Boolean(newValue),false);

   m_istransparent = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getCreationrule()
  {
    return m_creationrule ;
  }


  public void setCreationrule(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_creationrule)){
	        return;
	    }
	}else if(m_creationrule != null){
	    if(m_creationrule.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Creationrule", m_creationrule, newValue,false); 
   m_creationrule = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getHasnamecompartment()
  {
    return m_hasnamecompartment ;
  }


  public void setHasnamecompartment(boolean newValue)
  {
    if(m_hasnamecompartment == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Hasnamecompartment", new Boolean(m_hasnamecompartment), new Boolean(newValue),false);

   m_hasnamecompartment = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getCauseautoresize()
  {
    return m_causeautoresize ;
  }


  public void setCauseautoresize(boolean newValue)
  {
    if(m_causeautoresize == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Causeautoresize", new Boolean(m_causeautoresize), new Boolean(newValue),false);

   m_causeautoresize = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getToolcategory()
  {
    return m_toolcategory ;
  }


  public void setToolcategory(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_toolcategory)){
	        return;
	    }
	}else if(m_toolcategory != null){
	    if(m_toolcategory.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Toolcategory", m_toolcategory, newValue,false); 
   m_toolcategory = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getIsanchorhost()
  {
    return m_isanchorhost ;
  }


  public void setIsanchorhost(boolean newValue)
  {
    if(m_isanchorhost == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Isanchorhost", new Boolean(m_isanchorhost), new Boolean(newValue),false);

   m_isanchorhost = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getTerm_spec_idLongBased()
  {
    if ( CreatedByTerminalSpecification != null )
    {
      return CreatedByTerminalSpecification.getTerm_spec_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getTerm_spec_id()
  {
    if ( CreatedByTerminalSpecification != null )
    {
      return CreatedByTerminalSpecification.getTerm_spec_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getTerm_spec_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_term_spec_id) )
      return m_term_spec_id;
    else
      return getTerm_spec_id();
  }
  
  public void setTerm_spec_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_term_spec_id)){
	        return;
	    }
	}else if(m_term_spec_id != null){
	    if(m_term_spec_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Term_spec_id", m_term_spec_id, newValue,false); 
   m_term_spec_id = IdAssigner.preprocessUUID(newValue);
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Element Specification", //$NON-NLS-1$
	  " Operation entered: Element Specification::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ElementSpecification_c [] objs = ElementSpecification_c.ElementSpecificationInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Element Specification", //$NON-NLS-1$
	  " Operation entered: Element Specification::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ElementSpecification_c_test22285_c implements ClassQueryInterface_c
    {
	  ElementSpecification_c_test22285_c( int     p22286 ) {
	  m_p22286 = p22286;
	  }
	  private int      m_p22286; 
	  public boolean evaluate (Object candidate)
	  {
	      ElementSpecification_c selected = (ElementSpecification_c) candidate;
	      boolean retval = false;
	      retval = (selected.getOoa_type() == (m_p22286));
	      return retval;
	  }
    }

    ElementSpecification_c [] objs22284 = 
    ElementSpecification_c.ElementSpecificationInstances(Ooaofgraphics.getDefaultInstance(), new ElementSpecification_c_test22285_c(getOoa_type())) ;

    if ( (  (objs22284.length) == 0) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Element Specification", //$NON-NLS-1$
           "Consistency: Object: Element Specification: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs22284.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Element Specification: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22284.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs22284.length) > 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Element Specification", //$NON-NLS-1$
           "Consistency: Object: Element Specification: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs22284.length )  + " OOA_Type: " + Integer.toString(getOoa_type()) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Element Specification: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22284.length )  + " OOA_Type: " + Integer.toString(getOoa_type()) , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Element Specification is a referring class in association: rel.Numb = 16
          // The participating class is: Graphical Element
    class GraphicalElement_c_test22290_c implements ClassQueryInterface_c
    {
	  GraphicalElement_c_test22290_c( java.util.UUID            p22291 ) {
	  m_p22291 = p22291;
	  }
	  private java.util.UUID             m_p22291; 
	  public boolean evaluate (Object candidate)
	  {
	      GraphicalElement_c selected = (GraphicalElement_c) candidate;
	      boolean retval = false;
	      retval = (selected.getElementid().equals(m_p22291));
	      return retval;
	  }
    }

    GraphicalElement_c [] objs22289 = 
    GraphicalElement_c.GraphicalElementInstances(modelRoot, new GraphicalElement_c_test22290_c(getElementid())) ;

    if ( (  (objs22289.length) > 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Element Specification", //$NON-NLS-1$
           "Consistency: Object: Element Specification: Association: 16: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs22289.length )  + " elementId: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Element Specification: Association: 16: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22289.length )  + " elementId: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Element Specification is a referring class in association: rel.Numb = 209
          // The participating class is: Terminal Specification
    class TerminalSpecification_c_test22293_c implements ClassQueryInterface_c
    {
	  TerminalSpecification_c_test22293_c( java.util.UUID            p22294 ) {
	  m_p22294 = p22294;
	  }
	  private java.util.UUID             m_p22294; 
	  public boolean evaluate (Object candidate)
	  {
	      TerminalSpecification_c selected = (TerminalSpecification_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTerm_spec_id().equals(m_p22294));
	      return retval;
	  }
    }

    TerminalSpecification_c [] objs22292 = 
    TerminalSpecification_c.TerminalSpecificationInstances(Ooaofgraphics.getDefaultInstance(), new TerminalSpecification_c_test22293_c(getTerm_spec_id())) ;

    if ( (  (objs22292.length) > 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Element Specification", //$NON-NLS-1$
           "Consistency: Object: Element Specification: Association: 209: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs22292.length )  + " Term_Spec_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Element Specification: Association: 209: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22292.length )  + " Term_Spec_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Supertype: rel.Numb = 200
    int objs22295 = 0;
            // Subtype Object: Shape Specification
    class ShapeSpecification_c_test22296_c implements ClassQueryInterface_c
    {
	  ShapeSpecification_c_test22296_c( int     p22297 ) {
	  m_p22297 = p22297;
	  }
	  private int      m_p22297; 
	  public boolean evaluate (Object candidate)
	  {
	      ShapeSpecification_c selected = (ShapeSpecification_c) candidate;
	      boolean retval = false;
	      retval = (selected.getOoa_type() == (m_p22297));
	      return retval;
	  }
    }

    ShapeSpecification_c [] objs22298 = 
    ShapeSpecification_c.ShapeSpecificationInstances(Ooaofgraphics.getDefaultInstance(), new ShapeSpecification_c_test22296_c(getOoa_type())) ;
 
    objs22295 = objs22295 + objs22298.length;
            // Subtype Object: Connector Specification
    class ConnectorSpecification_c_test22299_c implements ClassQueryInterface_c
    {
	  ConnectorSpecification_c_test22299_c( int     p22300 ) {
	  m_p22300 = p22300;
	  }
	  private int      m_p22300; 
	  public boolean evaluate (Object candidate)
	  {
	      ConnectorSpecification_c selected = (ConnectorSpecification_c) candidate;
	      boolean retval = false;
	      retval = (selected.getOoa_type() == (m_p22300));
	      return retval;
	  }
    }

    ConnectorSpecification_c [] objs22301 = 
    ConnectorSpecification_c.ConnectorSpecificationInstances(Ooaofgraphics.getDefaultInstance(), new ConnectorSpecification_c_test22299_c(getOoa_type())) ;
 
    objs22295 = objs22295 + objs22301.length;
    if ( objs22295 != 1 )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Element Specification", //$NON-NLS-1$
           "Consistency: Object: Element Specification: Association: 200: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs22295 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Element Specification: Association: 200: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22295 )  , e); 
      }
      retval = false;

    }

          // Associated Other Side: rel.Numb = 11
            // Link Object: Element in Model Specification
          // Element Specification is a participating class in association: rel.Numb = 10
             // Object: Graphical Element
          // Element Specification is a participating class in association: rel.Numb = 17
             // Object: Client Class Dependency
          // Element Specification is a participating class in association: rel.Numb = 29
             // Object: Auto Reconciliation Specification
          // Element Specification is a participating class in association: rel.Numb = 30
             // Object: Auto Reconciliation Specification
          // Element Specification is a participating class in association: rel.Numb = 31
             // Object: Auto Reconciliation Specification
          // Element Specification is a participating class in association: rel.Numb = 103
             // Object: Model Tool
    return retval;
  }


  // declare transform functions
  public  void Elementcreated(final Object p_Elem)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Element Specification", " Operation entered: ElementSpecification::Elementcreated") ; 
               final ModelRoot modelRoot = getModelRoot();
GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR16(this);


if ( (  (v_elem != null)) )
{

if (v_elem != null) {
  v_elem.setRepresents( p_Elem) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_elem != null) {
  v_elem.setOoa_id( Cl_c.Getooaid(			    
p_Elem)) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


   } // End elementCreated
  public static int          Defaultlayer(ModelRoot modelRoot)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Element Specification", " Operation entered: ElementSpecification::Defaultlayer") ; 
return 1;



   } // End defaultLayer
  public  int          Getdefaultwidth()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Element Specification", " Operation entered: ElementSpecification::Getdefaultwidth") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (getDefaultwidth() != 0) )
{

return getDefaultwidth();



}

else
{

return 200;



}


   } // End getDefaultWidth
  public  int          Getdefaultheight()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Element Specification", " Operation entered: ElementSpecification::Getdefaultheight") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (getDefaultheight() != 0) )
{

return getDefaultheight();



}

else
{

return 150;



}


   } // End getDefaultHeight

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Element Specification
