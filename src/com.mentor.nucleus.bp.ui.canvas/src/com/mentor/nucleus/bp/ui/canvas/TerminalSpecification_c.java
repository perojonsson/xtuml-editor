package com.mentor.nucleus.bp.ui.canvas;
//====================================================================
//
// File:      com.mentor.nucleus.bp.ui.canvas.TerminalSpecification_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

import com.mentor.nucleus.bp.core.*;
import org.eclipse.swt.graphics.GC;
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_TERMINAL_SPECIFICATION extends genericEvent_c {
	public abstract int getEvtcode();
}

public class TerminalSpecification_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public TerminalSpecification_c(ModelRoot modelRoot,
			java.util.UUID p_m_term_spec_id, String p_m_name,
			boolean p_m_satisfied, int p_m_starting_ooa_type,
			int p_m_ending_ooa_type, java.util.UUID p_m_diagramid,
			java.util.UUID p_m_elementid) {
		super(modelRoot);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_term_spec_id = IdAssigner.preprocessUUID(p_m_term_spec_id);
		//extract 28 bit value only            
		m_term_spec_idLongBased = 0xfffffff & p_m_term_spec_id
				.getLeastSignificantBits();
		m_name = p_m_name;
		m_satisfied = p_m_satisfied;
		m_starting_ooa_type = p_m_starting_ooa_type;
		m_ending_ooa_type = p_m_ending_ooa_type;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_diagramid = IdAssigner.preprocessUUID(p_m_diagramid);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_elementid = IdAssigner.preprocessUUID(p_m_elementid);

		setUniqueId(m_term_spec_id);
		Object[] key = {m_term_spec_id};
		addInstanceToMap(key);
	}
	static public TerminalSpecification_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_term_spec_id, String p_m_name,
			boolean p_m_satisfied, int p_m_starting_ooa_type,
			int p_m_ending_ooa_type, java.util.UUID p_m_diagramid,
			java.util.UUID p_m_elementid, String p_contentPath,
			IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);
		TerminalSpecification_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_term_spec_id};
			new_inst = (TerminalSpecification_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_term_spec_id = IdAssigner
						.preprocessUUID(p_m_term_spec_id);
				//extract 28 bit value only            
				new_inst.m_term_spec_idLongBased = 0xfffffff & p_m_term_spec_id
						.getLeastSignificantBits();
				new_inst.m_name = p_m_name;
				new_inst.m_satisfied = p_m_satisfied;
				new_inst.m_starting_ooa_type = p_m_starting_ooa_type;
				new_inst.m_ending_ooa_type = p_m_ending_ooa_type;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_diagramid = IdAssigner.preprocessUUID(p_m_diagramid);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_elementid = IdAssigner.preprocessUUID(p_m_elementid);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new TerminalSpecification_c(modelRoot, p_m_term_spec_id,
					p_m_name, p_m_satisfied, p_m_starting_ooa_type,
					p_m_ending_ooa_type, p_m_diagramid, p_m_elementid);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public TerminalSpecification_c resolveInstance(ModelRoot modelRoot,
			java.util.UUID p_m_term_spec_id, String p_m_name,
			boolean p_m_satisfied, int p_m_starting_ooa_type,
			int p_m_ending_ooa_type, java.util.UUID p_m_diagramid,
			java.util.UUID p_m_elementid) {
		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);
		TerminalSpecification_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_term_spec_id};
			source = (TerminalSpecification_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_term_spec_id = IdAssigner
						.preprocessUUID(p_m_term_spec_id);
				//extract 28 bit value only            
				source.m_term_spec_idLongBased = 0xfffffff & p_m_term_spec_id
						.getLeastSignificantBits();
				source.m_name = p_m_name;
				source.m_satisfied = p_m_satisfied;
				source.m_starting_ooa_type = p_m_starting_ooa_type;
				source.m_ending_ooa_type = p_m_ending_ooa_type;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_diagramid = IdAssigner.preprocessUUID(p_m_diagramid);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_elementid = IdAssigner.preprocessUUID(p_m_elementid);

				return source;
			}
		}
		// there is no instance matching the id
		TerminalSpecification_c new_inst = new TerminalSpecification_c(
				modelRoot, p_m_term_spec_id, p_m_name, p_m_satisfied,
				p_m_starting_ooa_type, p_m_ending_ooa_type, p_m_diagramid,
				p_m_elementid);
		return new_inst;
	}
	public TerminalSpecification_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_term_spec_id = idAssigner.createUUID();
		m_name = "";
		m_starting_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
		m_ending_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
		m_diagramid = IdAssigner.NULL_UUID;
		m_elementid = IdAssigner.NULL_UUID;
		setUniqueId(m_term_spec_id);
		Object[] key = {m_term_spec_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_term_spec_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p5
		if (m_term_spec_id != p_newKey) {

			m_term_spec_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof TerminalSpecification_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof TerminalSpecification_c)) {
			return false;
		}

		TerminalSpecification_c me = (TerminalSpecification_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getTerm_spec_id()) || IdAssigner.NULL_UUID
						.equals(((TerminalSpecification_c) elem)
								.getTerm_spec_id())) && this != elem)) {
			return false;
		}
		if (!getTerm_spec_id().equals(
				((TerminalSpecification_c) elem).getTerm_spec_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof TerminalSpecification_c)) {
			return false;
		}

		TerminalSpecification_c me = (TerminalSpecification_c) elem;
		if (!getTerm_spec_id().equals(
				((TerminalSpecification_c) elem).getTerm_spec_id()))
			return false;
		return true;
	}

	// Attributes
	private java.util.UUID m_term_spec_id;
	private long m_term_spec_idLongBased;
	private String m_name;
	private boolean m_satisfied;
	private int m_starting_ooa_type;
	private int m_ending_ooa_type;
	private java.util.UUID m_diagramid;
	private java.util.UUID m_elementid;

	// declare association references from this class

	// referring navigation

	ConnectorSpecification_c DefinesValidStartPointForConnectorSpecification;
	public void relateAcrossR202To(ConnectorSpecification_c target) {
		relateAcrossR202To(target, true);
	}
	public void relateAcrossR202To(ConnectorSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == DefinesValidStartPointForConnectorSpecification)
			return; // already related

		if (DefinesValidStartPointForConnectorSpecification != target) {

			Object oldKey = getInstanceKey();

			if (DefinesValidStartPointForConnectorSpecification != null) {

				DefinesValidStartPointForConnectorSpecification
						.clearBackPointerR202To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofgraphics.log
							.println(
									ILogger.CONSISTENCY,
									"TerminalSpecification_c.relateAcrossR202To(ConnectorSpecification_c target)",
									"Relate performed across R202 from Terminal Specification to Connector Specification without unrelate of prior instance.");
				}
			}

			DefinesValidStartPointForConnectorSpecification = target;
			if (target.getOoa_type() == 0) {
				// do not update cached value
			} else {
				// update cached value
				m_starting_ooa_type = target.getOoa_typeCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR202To(this);
			target.addRef();
		}
	}
	public void unrelateAcrossR202From(ConnectorSpecification_c target) {
		unrelateAcrossR202From(target, true);
	}
	public void unrelateAcrossR202From(ConnectorSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (DefinesValidStartPointForConnectorSpecification == null)
			return; // already unrelated

		if (target != DefinesValidStartPointForConnectorSpecification) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CanvasPlugin.logError(
					"Tried to unrelate from non-related instance across R202",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR202To(this);
		}

		if (DefinesValidStartPointForConnectorSpecification != null) {

			m_starting_ooa_type = DefinesValidStartPointForConnectorSpecification
					.getOoa_type();
			if (m_starting_ooa_type == 0) {
				m_starting_ooa_type = DefinesValidStartPointForConnectorSpecification
						.getOoa_typeCachedValue();
			}
			DefinesValidStartPointForConnectorSpecification = null;
			target.removeRef();
		}
	}

	public static TerminalSpecification_c getOneTS_TSPOnR202(
			ConnectorSpecification_c[] targets) {
		return getOneTS_TSPOnR202(targets, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR202(
			ConnectorSpecification_c[] targets, ClassQueryInterface_c test) {
		TerminalSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneTS_TSPOnR202(targets[i], test);
			}
		}

		return ret_val;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR202(
			ConnectorSpecification_c target) {
		return getOneTS_TSPOnR202(target, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR202(
			ConnectorSpecification_c target, boolean loadComponent) {
		return getOneTS_TSPOnR202(Ooaofgraphics.getDefaultInstance(), target,
				null, loadComponent);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR202(
			ConnectorSpecification_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneTS_TSPOnR202(Ooaofgraphics.getDefaultInstance(),
					target, test);
		}
		return null;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR202(
			ModelRoot modelRoot, ConnectorSpecification_c target,
			ClassQueryInterface_c test) {
		return getOneTS_TSPOnR202(modelRoot, target, test, true);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR202(
			ModelRoot modelRoot, ConnectorSpecification_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneTS_TSPOnR202(modelRoot, target, test);
	}
	private static TerminalSpecification_c find_getOneTS_TSPOnR202(
			ModelRoot modelRoot, ConnectorSpecification_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_StartsWithTerminalSpecificationStartsWith_R202) {
				for (int i = 0; i < target.backPointer_StartsWithTerminalSpecificationStartsWith_R202
						.size(); ++i) {
					TerminalSpecification_c source = (TerminalSpecification_c) target.backPointer_StartsWithTerminalSpecificationStartsWith_R202
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR202(
			ConnectorSpecification_c[] targets) {
		return getManyTS_TSPsOnR202(targets, null);
	}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR202(
			ConnectorSpecification_c[] targets, boolean loadComponent) {
		return getManyTS_TSPsOnR202(targets, null, loadComponent);
	}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR202(
			ConnectorSpecification_c[] targets, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR202(targets, test, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR202(
			ConnectorSpecification_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new TerminalSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();

		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_StartsWithTerminalSpecificationStartsWith_R202) {
				for (int j = 0; j < targets[i].backPointer_StartsWithTerminalSpecificationStartsWith_R202
						.size(); ++j) {
					TerminalSpecification_c source = (TerminalSpecification_c) targets[i].backPointer_StartsWithTerminalSpecificationStartsWith_R202
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new TerminalSpecification_c[0];
		}
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR202(
			ConnectorSpecification_c target) {
		return getManyTS_TSPsOnR202(target, null);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR202(
			ConnectorSpecification_c target, boolean loadComponent) {
		return getManyTS_TSPsOnR202(target, null, loadComponent);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR202(
			ConnectorSpecification_c target, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR202(target, test, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR202(
			ConnectorSpecification_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new TerminalSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
		Vector matches = new Vector();
		synchronized (target.backPointer_StartsWithTerminalSpecificationStartsWith_R202) {
			for (int i = 0; i < target.backPointer_StartsWithTerminalSpecificationStartsWith_R202
					.size(); ++i) {
				TerminalSpecification_c source = (TerminalSpecification_c) target.backPointer_StartsWithTerminalSpecificationStartsWith_R202
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new TerminalSpecification_c[0];
		}
	}

	// referring navigation

	ConnectorSpecification_c DefinesValidEndPointForConnectorSpecification;
	public void relateAcrossR203To(ConnectorSpecification_c target) {
		relateAcrossR203To(target, true);
	}
	public void relateAcrossR203To(ConnectorSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == DefinesValidEndPointForConnectorSpecification)
			return; // already related

		if (DefinesValidEndPointForConnectorSpecification != target) {

			Object oldKey = getInstanceKey();

			if (DefinesValidEndPointForConnectorSpecification != null) {

				DefinesValidEndPointForConnectorSpecification
						.clearBackPointerR203To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofgraphics.log
							.println(
									ILogger.CONSISTENCY,
									"TerminalSpecification_c.relateAcrossR203To(ConnectorSpecification_c target)",
									"Relate performed across R203 from Terminal Specification to Connector Specification without unrelate of prior instance.");
				}
			}

			DefinesValidEndPointForConnectorSpecification = target;
			if (target.getOoa_type() == 0) {
				// do not update cached value
			} else {
				// update cached value
				m_ending_ooa_type = target.getOoa_typeCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR203To(this);
			target.addRef();
		}
	}
	public void unrelateAcrossR203From(ConnectorSpecification_c target) {
		unrelateAcrossR203From(target, true);
	}
	public void unrelateAcrossR203From(ConnectorSpecification_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (DefinesValidEndPointForConnectorSpecification == null)
			return; // already unrelated

		if (target != DefinesValidEndPointForConnectorSpecification) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CanvasPlugin.logError(
					"Tried to unrelate from non-related instance across R203",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR203To(this);
		}

		if (DefinesValidEndPointForConnectorSpecification != null) {

			m_ending_ooa_type = DefinesValidEndPointForConnectorSpecification
					.getOoa_type();
			if (m_ending_ooa_type == 0) {
				m_ending_ooa_type = DefinesValidEndPointForConnectorSpecification
						.getOoa_typeCachedValue();
			}
			DefinesValidEndPointForConnectorSpecification = null;
			target.removeRef();
		}
	}

	public static TerminalSpecification_c getOneTS_TSPOnR203(
			ConnectorSpecification_c[] targets) {
		return getOneTS_TSPOnR203(targets, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR203(
			ConnectorSpecification_c[] targets, ClassQueryInterface_c test) {
		TerminalSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneTS_TSPOnR203(targets[i], test);
			}
		}

		return ret_val;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR203(
			ConnectorSpecification_c target) {
		return getOneTS_TSPOnR203(target, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR203(
			ConnectorSpecification_c target, boolean loadComponent) {
		return getOneTS_TSPOnR203(Ooaofgraphics.getDefaultInstance(), target,
				null, loadComponent);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR203(
			ConnectorSpecification_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneTS_TSPOnR203(Ooaofgraphics.getDefaultInstance(),
					target, test);
		}
		return null;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR203(
			ModelRoot modelRoot, ConnectorSpecification_c target,
			ClassQueryInterface_c test) {
		return getOneTS_TSPOnR203(modelRoot, target, test, true);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR203(
			ModelRoot modelRoot, ConnectorSpecification_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneTS_TSPOnR203(modelRoot, target, test);
	}
	private static TerminalSpecification_c find_getOneTS_TSPOnR203(
			ModelRoot modelRoot, ConnectorSpecification_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_EndsWithTerminalSpecificationEndsWith_R203) {
				for (int i = 0; i < target.backPointer_EndsWithTerminalSpecificationEndsWith_R203
						.size(); ++i) {
					TerminalSpecification_c source = (TerminalSpecification_c) target.backPointer_EndsWithTerminalSpecificationEndsWith_R203
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR203(
			ConnectorSpecification_c[] targets) {
		return getManyTS_TSPsOnR203(targets, null);
	}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR203(
			ConnectorSpecification_c[] targets, boolean loadComponent) {
		return getManyTS_TSPsOnR203(targets, null, loadComponent);
	}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR203(
			ConnectorSpecification_c[] targets, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR203(targets, test, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR203(
			ConnectorSpecification_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new TerminalSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();

		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_EndsWithTerminalSpecificationEndsWith_R203) {
				for (int j = 0; j < targets[i].backPointer_EndsWithTerminalSpecificationEndsWith_R203
						.size(); ++j) {
					TerminalSpecification_c source = (TerminalSpecification_c) targets[i].backPointer_EndsWithTerminalSpecificationEndsWith_R203
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new TerminalSpecification_c[0];
		}
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR203(
			ConnectorSpecification_c target) {
		return getManyTS_TSPsOnR203(target, null);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR203(
			ConnectorSpecification_c target, boolean loadComponent) {
		return getManyTS_TSPsOnR203(target, null, loadComponent);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR203(
			ConnectorSpecification_c target, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR203(target, test, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR203(
			ConnectorSpecification_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new TerminalSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
		Vector matches = new Vector();
		synchronized (target.backPointer_EndsWithTerminalSpecificationEndsWith_R203) {
			for (int i = 0; i < target.backPointer_EndsWithTerminalSpecificationEndsWith_R203
					.size(); ++i) {
				TerminalSpecification_c source = (TerminalSpecification_c) target.backPointer_EndsWithTerminalSpecificationEndsWith_R203
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new TerminalSpecification_c[0];
		}
	}

	// referring navigation

	Model_c SpecifiesTerminationOfConnectorOnModel;
	public void relateAcrossR207To(Model_c target) {
		relateAcrossR207To(target, true);
	}
	public void relateAcrossR207To(Model_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (target == SpecifiesTerminationOfConnectorOnModel)
			return; // already related

		if (SpecifiesTerminationOfConnectorOnModel != target) {

			Object oldKey = getInstanceKey();

			if (SpecifiesTerminationOfConnectorOnModel != null) {

				SpecifiesTerminationOfConnectorOnModel
						.clearBackPointerR207To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofgraphics.log
							.println(
									ILogger.CONSISTENCY,
									"TerminalSpecification_c.relateAcrossR207To(Model_c target)",
									"Relate performed across R207 from Terminal Specification to Model without unrelate of prior instance.");
				}
			}

			SpecifiesTerminationOfConnectorOnModel = target;
			if (IdAssigner.NULL_UUID.equals(target.getDiagramid())) {
				// do not update cached value
			} else {
				// update cached value
				m_diagramid = target.getDiagramidCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR207To(this);
			target.addRef();
		}
	}
	public void unrelateAcrossR207From(Model_c target) {
		unrelateAcrossR207From(target, true);
	}
	public void unrelateAcrossR207From(Model_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (SpecifiesTerminationOfConnectorOnModel == null)
			return; // already unrelated

		if (target != SpecifiesTerminationOfConnectorOnModel) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CanvasPlugin.logError(
					"Tried to unrelate from non-related instance across R207",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR207To(this);
		}

		if (SpecifiesTerminationOfConnectorOnModel != null) {

			m_diagramid = SpecifiesTerminationOfConnectorOnModel.getDiagramid();
			if (IdAssigner.NULL_UUID.equals(m_diagramid)) {
				m_diagramid = SpecifiesTerminationOfConnectorOnModel
						.getDiagramidCachedValue();
			}
			SpecifiesTerminationOfConnectorOnModel = null;
			target.removeRef();
		}
	}

	public static TerminalSpecification_c getOneTS_TSPOnR207(Model_c[] targets) {
		return getOneTS_TSPOnR207(targets, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR207(Model_c[] targets,
			ClassQueryInterface_c test) {
		TerminalSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneTS_TSPOnR207(targets[i], test);
			}
		}

		return ret_val;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR207(Model_c target) {
		return getOneTS_TSPOnR207(target, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR207(Model_c target,
			boolean loadComponent) {
		return getOneTS_TSPOnR207(Ooaofgraphics.getDefaultInstance(), target,
				null, loadComponent);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR207(Model_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			return getOneTS_TSPOnR207(Ooaofgraphics.getDefaultInstance(),
					target, test);
		}
		return null;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR207(
			ModelRoot modelRoot, Model_c target, ClassQueryInterface_c test) {
		return getOneTS_TSPOnR207(modelRoot, target, test, true);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR207(
			ModelRoot modelRoot, Model_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		return find_getOneTS_TSPOnR207(modelRoot, target, test);
	}
	private static TerminalSpecification_c find_getOneTS_TSPOnR207(
			ModelRoot modelRoot, Model_c target, ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207) {
				for (int i = 0; i < target.backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207
						.size(); ++i) {
					TerminalSpecification_c source = (TerminalSpecification_c) target.backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR207(
			Model_c[] targets) {
		return getManyTS_TSPsOnR207(targets, null);
	}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR207(
			Model_c[] targets, boolean loadComponent) {
		return getManyTS_TSPsOnR207(targets, null, loadComponent);
	}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR207(
			Model_c[] targets, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR207(targets, test, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR207(
			Model_c[] targets, ClassQueryInterface_c test, boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new TerminalSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();

		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207) {
				for (int j = 0; j < targets[i].backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207
						.size(); ++j) {
					TerminalSpecification_c source = (TerminalSpecification_c) targets[i].backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new TerminalSpecification_c[0];
		}
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR207(Model_c target) {
		return getManyTS_TSPsOnR207(target, null);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR207(
			Model_c target, boolean loadComponent) {
		return getManyTS_TSPsOnR207(target, null, loadComponent);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR207(
			Model_c target, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR207(target, test, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR207(
			Model_c target, ClassQueryInterface_c test, boolean loadComponent) {
		if (target == null)
			return new TerminalSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
		Vector matches = new Vector();
		synchronized (target.backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207) {
			for (int i = 0; i < target.backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207
					.size(); ++i) {
				TerminalSpecification_c source = (TerminalSpecification_c) target.backPointer_HasValidConnectorTerminationsSpecifiedByTerminalSpecificationHasValidConnectorTerminationsSpecifiedBy_R207
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new TerminalSpecification_c[0];
		}
	}

	// referring navigation

	GraphicalElement_c CriteriaLastMetByGraphicalElement;
	public void relateAcrossR206To(GraphicalElement_c target) {
		relateAcrossR206To(target, true);
	}
	public void relateAcrossR206To(GraphicalElement_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == CriteriaLastMetByGraphicalElement)
			return; // already related

		if (CriteriaLastMetByGraphicalElement != target) {

			Object oldKey = getInstanceKey();

			if (CriteriaLastMetByGraphicalElement != null) {

				CriteriaLastMetByGraphicalElement.clearBackPointerR206To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofgraphics.log
							.println(
									ILogger.CONSISTENCY,
									"TerminalSpecification_c.relateAcrossR206To(GraphicalElement_c target)",
									"Relate performed across R206 from Terminal Specification to Graphical Element without unrelate of prior instance.");
				}
			}

			CriteriaLastMetByGraphicalElement = target;
			if (IdAssigner.NULL_UUID.equals(target.getElementid())) {
				// do not update cached value
			} else {
				// update cached value
				m_elementid = target.getElementidCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR206To(this);
			target.addRef();
		}
	}
	public void unrelateAcrossR206From(GraphicalElement_c target) {
		unrelateAcrossR206From(target, true);
	}
	public void unrelateAcrossR206From(GraphicalElement_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (CriteriaLastMetByGraphicalElement == null)
			return; // already unrelated

		if (target != CriteriaLastMetByGraphicalElement) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CanvasPlugin.logError(
					"Tried to unrelate from non-related instance across R206",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR206To(this);
		}

		if (CriteriaLastMetByGraphicalElement != null) {

			m_elementid = CriteriaLastMetByGraphicalElement.getElementid();
			if (IdAssigner.NULL_UUID.equals(m_elementid)) {
				m_elementid = CriteriaLastMetByGraphicalElement
						.getElementidCachedValue();
			}
			CriteriaLastMetByGraphicalElement = null;
			target.removeRef();
		}
	}

	public static TerminalSpecification_c getOneTS_TSPOnR206(
			GraphicalElement_c[] targets) {
		return getOneTS_TSPOnR206(targets, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR206(
			GraphicalElement_c[] targets, ClassQueryInterface_c test) {
		TerminalSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneTS_TSPOnR206(targets[i], test);
			}
		}

		return ret_val;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR206(
			GraphicalElement_c target) {
		return getOneTS_TSPOnR206(target, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR206(
			GraphicalElement_c target, boolean loadComponent) {
		return getOneTS_TSPOnR206(Ooaofgraphics.getDefaultInstance(), target,
				null, loadComponent);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR206(
			GraphicalElement_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneTS_TSPOnR206(Ooaofgraphics.getDefaultInstance(),
					target, test);
		}
		return null;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR206(
			ModelRoot modelRoot, GraphicalElement_c target,
			ClassQueryInterface_c test) {
		return getOneTS_TSPOnR206(modelRoot, target, test, true);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR206(
			ModelRoot modelRoot, GraphicalElement_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneTS_TSPOnR206(modelRoot, target, test);
	}
	private static TerminalSpecification_c find_getOneTS_TSPOnR206(
			ModelRoot modelRoot, GraphicalElement_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206) {
				for (int i = 0; i < target.backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206
						.size(); ++i) {
					TerminalSpecification_c source = (TerminalSpecification_c) target.backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR206(
			GraphicalElement_c[] targets) {
		return getManyTS_TSPsOnR206(targets, null);
	}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR206(
			GraphicalElement_c[] targets, boolean loadComponent) {
		return getManyTS_TSPsOnR206(targets, null, loadComponent);
	}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR206(
			GraphicalElement_c[] targets, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR206(targets, test, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR206(
			GraphicalElement_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new TerminalSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();

		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206) {
				for (int j = 0; j < targets[i].backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206
						.size(); ++j) {
					TerminalSpecification_c source = (TerminalSpecification_c) targets[i].backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new TerminalSpecification_c[0];
		}
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR206(
			GraphicalElement_c target) {
		return getManyTS_TSPsOnR206(target, null);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR206(
			GraphicalElement_c target, boolean loadComponent) {
		return getManyTS_TSPsOnR206(target, null, loadComponent);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR206(
			GraphicalElement_c target, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR206(target, test, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR206(
			GraphicalElement_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new TerminalSpecification_c[0];

		ModelRoot modelRoot = Ooaofgraphics.getDefaultInstance();
		Vector matches = new Vector();
		synchronized (target.backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206) {
			for (int i = 0; i < target.backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206
					.size(); ++i) {
				TerminalSpecification_c source = (TerminalSpecification_c) target.backPointer_MeetsCriteriaOfTerminalSpecificationMeetsCriteriaOf_R206
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new TerminalSpecification_c[0];
		}
	}

	// declare associations referring to this class

	// referred to navigation

	WhitespaceTerminal_c backPointer_IsSubtypeWhitespaceTerminalIsSubtype_R201;

	public void setWhitespaceTerminalOrderInChildListR201(
			WhitespaceTerminal_c target, int index) {
		unrelateAcrossR201From(target);
		WhitespaceTerminal_c[] elements = WhitespaceTerminal_c
				.getManyTS_WSTsOnR201(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR201From((WhitespaceTerminal_c) elements[i]);
			}
			count++;
		}
		relateAcrossR201To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR201To((WhitespaceTerminal_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR201To(WhitespaceTerminal_c target) {
		if (target != null) {
			target.relateAcrossR201To(this, true);
		}
	}

	public void relateAcrossR201To(WhitespaceTerminal_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR201To(this, notifyChanges);
		}
	}

	public void setBackPointerR201To(WhitespaceTerminal_c target) {
		backPointer_IsSubtypeWhitespaceTerminalIsSubtype_R201 = target;
	}

	public void unrelateAcrossR201From(WhitespaceTerminal_c target) {
		if (target != null) {
			target.unrelateAcrossR201From(this, true);
		}
	}

	public void unrelateAcrossR201From(WhitespaceTerminal_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR201From(this, notifyChanges);
		}
	}

	public void clearBackPointerR201To(WhitespaceTerminal_c target) {
		if (target == backPointer_IsSubtypeWhitespaceTerminalIsSubtype_R201) {
			backPointer_IsSubtypeWhitespaceTerminalIsSubtype_R201 = null;
		}
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			WhitespaceTerminal_c[] targets) {
		return getOneTS_TSPOnR201(targets, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			WhitespaceTerminal_c[] targets, ClassQueryInterface_c test) {
		return getOneTS_TSPOnR201(targets, test, true);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			WhitespaceTerminal_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		TerminalSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					TerminalSpecification_c candidate_val = getOneTS_TSPOnR201(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneTS_TSPOnR201(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			WhitespaceTerminal_c target) {
		return getOneTS_TSPOnR201(target, true);
	}
	public static TerminalSpecification_c getOneTS_TSPOnR201(
			WhitespaceTerminal_c target, boolean loadComponent) {
		if (target != null) {
			return target.IsSupertypeTerminalSpecification;
		} else {
			return null;
		}
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			WhitespaceTerminal_c[] targets, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR201(targets, test, true);
	}

	public static TerminalSpecification_c [] getManyTS_TSPsOnR201(WhitespaceTerminal_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new TerminalSpecification_c[0];
  
  
  LinkedHashSet<TerminalSpecification_c> elementsSet = new LinkedHashSet<TerminalSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    TerminalSpecification_c associate = targets[i].IsSupertypeTerminalSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  TerminalSpecification_c[] result = new TerminalSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			WhitespaceTerminal_c[] targets) {
		return getManyTS_TSPsOnR201(targets, null);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			WhitespaceTerminal_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			WhitespaceTerminal_c[] targetArray = new WhitespaceTerminal_c[1];
			targetArray[0] = target;
			return getManyTS_TSPsOnR201(targetArray, test, loadComponent);
		} else {
			TerminalSpecification_c[] result = new TerminalSpecification_c[0];
			return result;
		}

	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			WhitespaceTerminal_c target, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR201(target, null, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			WhitespaceTerminal_c target) {
		return getManyTS_TSPsOnR201(target, null, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			WhitespaceTerminal_c target, boolean loadComponent) {
		return getManyTS_TSPsOnR201(target, null, loadComponent);
	}

	// referred to navigation

	ShapeTerminal_c backPointer_IsSubtypeShapeTerminalIsSubtype_R201;

	public void setShapeTerminalOrderInChildListR201(ShapeTerminal_c target,
			int index) {
		unrelateAcrossR201From(target);
		ShapeTerminal_c[] elements = ShapeTerminal_c.getManyTS_SHTsOnR201(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR201From((ShapeTerminal_c) elements[i]);
			}
			count++;
		}
		relateAcrossR201To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR201To((ShapeTerminal_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR201To(ShapeTerminal_c target) {
		if (target != null) {
			target.relateAcrossR201To(this, true);
		}
	}

	public void relateAcrossR201To(ShapeTerminal_c target, boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR201To(this, notifyChanges);
		}
	}

	public void setBackPointerR201To(ShapeTerminal_c target) {
		backPointer_IsSubtypeShapeTerminalIsSubtype_R201 = target;
	}

	public void unrelateAcrossR201From(ShapeTerminal_c target) {
		if (target != null) {
			target.unrelateAcrossR201From(this, true);
		}
	}

	public void unrelateAcrossR201From(ShapeTerminal_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR201From(this, notifyChanges);
		}
	}

	public void clearBackPointerR201To(ShapeTerminal_c target) {
		if (target == backPointer_IsSubtypeShapeTerminalIsSubtype_R201) {
			backPointer_IsSubtypeShapeTerminalIsSubtype_R201 = null;
		}
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ShapeTerminal_c[] targets) {
		return getOneTS_TSPOnR201(targets, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ShapeTerminal_c[] targets, ClassQueryInterface_c test) {
		return getOneTS_TSPOnR201(targets, test, true);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ShapeTerminal_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		TerminalSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					TerminalSpecification_c candidate_val = getOneTS_TSPOnR201(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneTS_TSPOnR201(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ShapeTerminal_c target) {
		return getOneTS_TSPOnR201(target, true);
	}
	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ShapeTerminal_c target, boolean loadComponent) {
		if (target != null) {
			return target.IsSupertypeTerminalSpecification;
		} else {
			return null;
		}
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ShapeTerminal_c[] targets, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR201(targets, test, true);
	}

	public static TerminalSpecification_c [] getManyTS_TSPsOnR201(ShapeTerminal_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new TerminalSpecification_c[0];
  
  
  LinkedHashSet<TerminalSpecification_c> elementsSet = new LinkedHashSet<TerminalSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    TerminalSpecification_c associate = targets[i].IsSupertypeTerminalSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  TerminalSpecification_c[] result = new TerminalSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ShapeTerminal_c[] targets) {
		return getManyTS_TSPsOnR201(targets, null);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ShapeTerminal_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			ShapeTerminal_c[] targetArray = new ShapeTerminal_c[1];
			targetArray[0] = target;
			return getManyTS_TSPsOnR201(targetArray, test, loadComponent);
		} else {
			TerminalSpecification_c[] result = new TerminalSpecification_c[0];
			return result;
		}

	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ShapeTerminal_c target, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR201(target, null, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ShapeTerminal_c target) {
		return getManyTS_TSPsOnR201(target, null, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ShapeTerminal_c target, boolean loadComponent) {
		return getManyTS_TSPsOnR201(target, null, loadComponent);
	}

	// referred to navigation

	ConnectorTerminal_c backPointer_IsSubtypeConnectorTerminalIsSubtype_R201;

	public void setConnectorTerminalOrderInChildListR201(
			ConnectorTerminal_c target, int index) {
		unrelateAcrossR201From(target);
		ConnectorTerminal_c[] elements = ConnectorTerminal_c
				.getManyTS_CNTsOnR201(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR201From((ConnectorTerminal_c) elements[i]);
			}
			count++;
		}
		relateAcrossR201To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR201To((ConnectorTerminal_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR201To(ConnectorTerminal_c target) {
		if (target != null) {
			target.relateAcrossR201To(this, true);
		}
	}

	public void relateAcrossR201To(ConnectorTerminal_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR201To(this, notifyChanges);
		}
	}

	public void setBackPointerR201To(ConnectorTerminal_c target) {
		backPointer_IsSubtypeConnectorTerminalIsSubtype_R201 = target;
	}

	public void unrelateAcrossR201From(ConnectorTerminal_c target) {
		if (target != null) {
			target.unrelateAcrossR201From(this, true);
		}
	}

	public void unrelateAcrossR201From(ConnectorTerminal_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR201From(this, notifyChanges);
		}
	}

	public void clearBackPointerR201To(ConnectorTerminal_c target) {
		if (target == backPointer_IsSubtypeConnectorTerminalIsSubtype_R201) {
			backPointer_IsSubtypeConnectorTerminalIsSubtype_R201 = null;
		}
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ConnectorTerminal_c[] targets) {
		return getOneTS_TSPOnR201(targets, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ConnectorTerminal_c[] targets, ClassQueryInterface_c test) {
		return getOneTS_TSPOnR201(targets, test, true);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ConnectorTerminal_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		TerminalSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					TerminalSpecification_c candidate_val = getOneTS_TSPOnR201(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneTS_TSPOnR201(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ConnectorTerminal_c target) {
		return getOneTS_TSPOnR201(target, true);
	}
	public static TerminalSpecification_c getOneTS_TSPOnR201(
			ConnectorTerminal_c target, boolean loadComponent) {
		if (target != null) {
			return target.IsSupertypeTerminalSpecification;
		} else {
			return null;
		}
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ConnectorTerminal_c[] targets, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR201(targets, test, true);
	}

	public static TerminalSpecification_c [] getManyTS_TSPsOnR201(ConnectorTerminal_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new TerminalSpecification_c[0];
  
  
  LinkedHashSet<TerminalSpecification_c> elementsSet = new LinkedHashSet<TerminalSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    TerminalSpecification_c associate = targets[i].IsSupertypeTerminalSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  TerminalSpecification_c[] result = new TerminalSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ConnectorTerminal_c[] targets) {
		return getManyTS_TSPsOnR201(targets, null);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ConnectorTerminal_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			ConnectorTerminal_c[] targetArray = new ConnectorTerminal_c[1];
			targetArray[0] = target;
			return getManyTS_TSPsOnR201(targetArray, test, loadComponent);
		} else {
			TerminalSpecification_c[] result = new TerminalSpecification_c[0];
			return result;
		}

	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ConnectorTerminal_c target, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR201(target, null, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ConnectorTerminal_c target) {
		return getManyTS_TSPsOnR201(target, null, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR201(
			ConnectorTerminal_c target, boolean loadComponent) {
		return getManyTS_TSPsOnR201(target, null, loadComponent);
	}

	// referred to navigation

	ElementSpecification_c backPointer_CreatesElementSpecificationCreates_R209;

	public void setElementSpecificationOrderInChildListR209(
			ElementSpecification_c target, int index) {
		unrelateAcrossR209From(target);
		ElementSpecification_c[] elements = ElementSpecification_c
				.getManyGD_ESsOnR209(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR209From((ElementSpecification_c) elements[i]);
			}
			count++;
		}
		relateAcrossR209To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR209To((ElementSpecification_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR209To(ElementSpecification_c target) {
		if (target != null) {
			target.relateAcrossR209To(this, true);
		}
	}

	public void relateAcrossR209To(ElementSpecification_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR209To(this, notifyChanges);
		}
	}

	public void setBackPointerR209To(ElementSpecification_c target) {
		backPointer_CreatesElementSpecificationCreates_R209 = target;
	}

	public void unrelateAcrossR209From(ElementSpecification_c target) {
		if (target != null) {
			target.unrelateAcrossR209From(this, true);
		}
	}

	public void unrelateAcrossR209From(ElementSpecification_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR209From(this, notifyChanges);
		}
	}

	public void clearBackPointerR209To(ElementSpecification_c target) {
		if (target == backPointer_CreatesElementSpecificationCreates_R209) {
			backPointer_CreatesElementSpecificationCreates_R209 = null;
		}
	}

	public static TerminalSpecification_c getOneTS_TSPOnR209(
			ElementSpecification_c[] targets) {
		return getOneTS_TSPOnR209(targets, null);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR209(
			ElementSpecification_c[] targets, ClassQueryInterface_c test) {
		return getOneTS_TSPOnR209(targets, test, true);
	}

	public static TerminalSpecification_c getOneTS_TSPOnR209(
			ElementSpecification_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		TerminalSpecification_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					TerminalSpecification_c candidate_val = getOneTS_TSPOnR209(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneTS_TSPOnR209(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static TerminalSpecification_c getOneTS_TSPOnR209(
			ElementSpecification_c target) {
		return getOneTS_TSPOnR209(target, true);
	}
	public static TerminalSpecification_c getOneTS_TSPOnR209(
			ElementSpecification_c target, boolean loadComponent) {
		if (target != null) {
			return target.CreatedByTerminalSpecification;
		} else {
			return null;
		}
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR209(
			ElementSpecification_c[] targets, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR209(targets, test, true);
	}

	public static TerminalSpecification_c [] getManyTS_TSPsOnR209(ElementSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new TerminalSpecification_c[0];
  
  
  LinkedHashSet<TerminalSpecification_c> elementsSet = new LinkedHashSet<TerminalSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    TerminalSpecification_c associate = targets[i].CreatedByTerminalSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  TerminalSpecification_c[] result = new TerminalSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static TerminalSpecification_c[] getManyTS_TSPsOnR209(
			ElementSpecification_c[] targets) {
		return getManyTS_TSPsOnR209(targets, null);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR209(
			ElementSpecification_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			ElementSpecification_c[] targetArray = new ElementSpecification_c[1];
			targetArray[0] = target;
			return getManyTS_TSPsOnR209(targetArray, test, loadComponent);
		} else {
			TerminalSpecification_c[] result = new TerminalSpecification_c[0];
			return result;
		}

	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR209(
			ElementSpecification_c target, ClassQueryInterface_c test) {
		return getManyTS_TSPsOnR209(target, null, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR209(
			ElementSpecification_c target) {
		return getManyTS_TSPsOnR209(target, null, true);
	}

	public static TerminalSpecification_c[] getManyTS_TSPsOnR209(
			ElementSpecification_c target, boolean loadComponent) {
		return getManyTS_TSPsOnR209(target, null, loadComponent);
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (DefinesValidStartPointForConnectorSpecification == null) {          
      // R202
      baseRoot = Ooaofgraphics.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
	  instances = baseRoot.getInstanceList(ConnectorSpecification_c.class);
      ConnectorSpecification_c relInst21940 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           ConnectorSpecification_c source = (ConnectorSpecification_c)cursor.next() ;
           if (     source.getOoa_typeCachedValue() == m_starting_ooa_type 		){
  		relInst21940 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst21940 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst21940) && !isProxy())) {
	      relInst21940.relateAcrossR202To(this, notifyChanges);
	  }
	  }
          baseRoot = modelRoot;
	}
	          

	if (DefinesValidEndPointForConnectorSpecification == null) {          
      // R203
      baseRoot = Ooaofgraphics.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
	  instances = baseRoot.getInstanceList(ConnectorSpecification_c.class);
      ConnectorSpecification_c relInst21941 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           ConnectorSpecification_c source = (ConnectorSpecification_c)cursor.next() ;
           if (     source.getOoa_typeCachedValue() == m_ending_ooa_type 		){
  		relInst21941 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst21941 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst21941) && !isProxy())) {
	      relInst21941.relateAcrossR203To(this, notifyChanges);
	  }
	  }
          baseRoot = modelRoot;
	}
	          

	if (SpecifiesTerminationOfConnectorOnModel == null) {          
      // R207
      Model_c relInst21942 = (Model_c) baseRoot.getInstanceList(Model_c.class).get(new Object[] {m_diagramid});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst21942 == null) {
      			relInst21942 = (Model_c) Ooaofooa.getDefaultInstance().getInstanceList(Model_c.class).get(new Object[] {m_diagramid});
      		}
			//synchronized
      if ( relInst21942 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst21942) && !isProxy())) {
	      relInst21942.relateAcrossR207To(this, notifyChanges);
	  }
	  }
	}
	          

	if (CriteriaLastMetByGraphicalElement == null) {          
      // R206
      GraphicalElement_c relInst21943 = (GraphicalElement_c) baseRoot.getInstanceList(GraphicalElement_c.class).get(new Object[] {m_elementid});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst21943 == null) {
      			relInst21943 = (GraphicalElement_c) Ooaofooa.getDefaultInstance().getInstanceList(GraphicalElement_c.class).get(new Object[] {m_elementid});
      		}
			//synchronized
      if ( relInst21943 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst21943) && !isProxy())) {
	      relInst21943.relateAcrossR206To(this, notifyChanges);
	  }
	  }
	}
	          
	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R202
		// TS_CSP
		inst = DefinesValidStartPointForConnectorSpecification;
		unrelateAcrossR202From(DefinesValidStartPointForConnectorSpecification,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R203
		// TS_CSP
		inst = DefinesValidEndPointForConnectorSpecification;
		unrelateAcrossR203From(DefinesValidEndPointForConnectorSpecification,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R207
		// GD_MD
		inst = SpecifiesTerminationOfConnectorOnModel;
		unrelateAcrossR207From(SpecifiesTerminationOfConnectorOnModel,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R206
		// GD_GE
		inst = CriteriaLastMetByGraphicalElement;
		unrelateAcrossR206From(CriteriaLastMetByGraphicalElement, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(TerminalSpecification_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final TerminalSpecification_c inst = (TerminalSpecification_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static TerminalSpecification_c TerminalSpecificationInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		TerminalSpecification_c result = findTerminalSpecificationInstance(
				modelRoot, test, loadComponent);
		return result;
	}
	private static TerminalSpecification_c findTerminalSpecificationInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				TerminalSpecification_c x = (TerminalSpecification_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					return x;
				}
			}
		}
		return null;
	}
	public static TerminalSpecification_c TerminalSpecificationInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return TerminalSpecificationInstance(modelRoot, test, true);
	}

	public static TerminalSpecification_c TerminalSpecificationInstance(
			ModelRoot modelRoot) {
		return TerminalSpecificationInstance(modelRoot, null, true);
	}

	public static TerminalSpecification_c[] TerminalSpecificationInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(TerminalSpecification_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				TerminalSpecification_c x = (TerminalSpecification_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					matches.add(x);
				}
			}
			if (matches.size() > 0) {
				TerminalSpecification_c[] ret_set = new TerminalSpecification_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new TerminalSpecification_c[0];
			}
		}
	}
	public static TerminalSpecification_c[] TerminalSpecificationInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return TerminalSpecificationInstances(modelRoot, test, true);
	}
	public static TerminalSpecification_c[] TerminalSpecificationInstances(
			ModelRoot modelRoot) {
		return TerminalSpecificationInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Terminal Specification.dispose call: ";
		WhitespaceTerminal_c testR201Inst1 = WhitespaceTerminal_c
				.getOneTS_WSTOnR201(this, false);

		if (testR201Inst1 != null) {
			delete_error = true;
			errorMsg = errorMsg + "201 ";
		}
		ShapeTerminal_c testR201Inst2 = ShapeTerminal_c.getOneTS_SHTOnR201(
				this, false);

		if (testR201Inst2 != null) {
			delete_error = true;
			errorMsg = errorMsg + "201 ";
		}
		ConnectorTerminal_c testR201Inst3 = ConnectorTerminal_c
				.getOneTS_CNTOnR201(this, false);

		if (testR201Inst3 != null) {
			delete_error = true;
			errorMsg = errorMsg + "201 ";
		}
		ConnectorSpecification_c testR202Inst = ConnectorSpecification_c
				.getOneTS_CSPOnR202(this, false);

		if (testR202Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "202 ";
		}
		ConnectorSpecification_c testR203Inst = ConnectorSpecification_c
				.getOneTS_CSPOnR203(this, false);

		if (testR203Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "203 ";
		}
		Model_c testR207Inst = Model_c.getOneGD_MDOnR207(this, false);

		if (testR207Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "207 ";
		}
		GraphicalElement_c testR206Inst = GraphicalElement_c.getOneGD_GEOnR206(
				this, false);

		if (testR206Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "206 ";
		}
		ElementSpecification_c testR209Inst = ElementSpecification_c
				.getOneGD_ESOnR209(this, false);

		if (testR209Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "209 ";
		}
		if (delete_error == true) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log.println(ILogger.DELETE,
						"Terminal Specification", errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CanvasPlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	/**
	 * Assigns IDs to instances of this class.
	 */
	private static IdAssigner idAssigner = new IdAssigner();

	/**
	 * See field.
	 */
	public IdAssigner getIdAssigner() {
		return idAssigner;
	}

	/**
	 * See field.
	 */
	public static IdAssigner getIdAssigner_() {
		return idAssigner;
	}
	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("term_spec_id")) {
			return true;
		}
		if (attributeName.equals("diagramid")) {
			return true;
		}
		if (attributeName.equals("elementid")) {
			return true;
		}
		return false;
	}
	// declare attribute accessors
	public long getTerm_spec_idLongBased() {
		if (m_term_spec_idLongBased == 0
				&& !IdAssigner.NULL_UUID.equals(m_term_spec_id)) {
			return 0xfffffff & m_term_spec_id.getLeastSignificantBits();
		}
		return m_term_spec_idLongBased;
	}
	public java.util.UUID getTerm_spec_id() {
		return m_term_spec_id;
	}

	public void setTerm_spec_id(java.util.UUID newValue) {
		m_term_spec_id = IdAssigner.preprocessUUID(newValue);
	}
	public String getName() {
		return m_name;
	}

	public void setName(String newValue) {
		m_name = newValue;
	}
	public boolean getSatisfied() {
		return m_satisfied;
	}

	public void setSatisfied(boolean newValue) {
		m_satisfied = newValue;
	}
	public int getStarting_ooa_type() {
		if (DefinesValidStartPointForConnectorSpecification != null) {
			return DefinesValidStartPointForConnectorSpecification
					.getOoa_type();
		}
		return 0;
	}

	public int getStarting_ooa_typeCachedValue() {
		return m_starting_ooa_type;
	}

	public void setStarting_ooa_type(int newValue) {
		m_starting_ooa_type = newValue;
	}
	public int getEnding_ooa_type() {
		if (DefinesValidEndPointForConnectorSpecification != null) {
			return DefinesValidEndPointForConnectorSpecification.getOoa_type();
		}
		return 0;
	}

	public int getEnding_ooa_typeCachedValue() {
		return m_ending_ooa_type;
	}

	public void setEnding_ooa_type(int newValue) {
		m_ending_ooa_type = newValue;
	}
	public long getDiagramidLongBased() {
		if (SpecifiesTerminationOfConnectorOnModel != null) {
			return SpecifiesTerminationOfConnectorOnModel
					.getDiagramidLongBased();
		}
		return 0;
	}
	public java.util.UUID getDiagramid() {
		if (SpecifiesTerminationOfConnectorOnModel != null) {
			return SpecifiesTerminationOfConnectorOnModel.getDiagramid();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getDiagramidCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_diagramid))
			return m_diagramid;
		else
			return getDiagramid();
	}

	public void setDiagramid(java.util.UUID newValue) {
		m_diagramid = IdAssigner.preprocessUUID(newValue);
	}
	public long getElementidLongBased() {
		if (CriteriaLastMetByGraphicalElement != null) {
			return CriteriaLastMetByGraphicalElement.getElementidLongBased();
		}
		return 0;
	}
	public java.util.UUID getElementid() {
		if (CriteriaLastMetByGraphicalElement != null) {
			return CriteriaLastMetByGraphicalElement.getElementid();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getElementidCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_elementid))
			return m_elementid;
		else
			return getElementid();
	}

	public void setElementid(java.util.UUID newValue) {
		m_elementid = IdAssigner.preprocessUUID(newValue);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Terminal Specification", //$NON-NLS-1$
						" Operation entered: Terminal Specification::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		TerminalSpecification_c[] objs = TerminalSpecification_c
				.TerminalSpecificationInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log.println(ILogger.OPERATION, "Terminal Specification", //$NON-NLS-1$
				" Operation entered: Terminal Specification::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class TerminalSpecification_c_test21945_c
				implements
					ClassQueryInterface_c {
			TerminalSpecification_c_test21945_c(java.util.UUID p21946) {
				m_p21946 = p21946;
			}
			private java.util.UUID m_p21946;
			public boolean evaluate(Object candidate) {
				TerminalSpecification_c selected = (TerminalSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getTerm_spec_id().equals(m_p21946));
				return retval;
			}
		}

		TerminalSpecification_c[] objs21944 = TerminalSpecification_c
				.TerminalSpecificationInstances(Ooaofgraphics
						.getDefaultInstance(),
						new TerminalSpecification_c_test21945_c(
								getTerm_spec_id()));

		if (((objs21944.length) == 0)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(ILogger.CONSISTENCY,
								"Terminal Specification", //$NON-NLS-1$
								"Consistency: Object: Terminal Specification: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs21944.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Terminal Specification: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs21944.length), e);
			}
			retval = false;

		}

		if (((objs21944.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(ILogger.CONSISTENCY,
								"Terminal Specification", //$NON-NLS-1$
								"Consistency: Object: Terminal Specification: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs21944.length)
										+ " Term_Spec_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Terminal Specification: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs21944.length)
										+ " Term_Spec_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Terminal Specification is a referring class in association: rel.Numb = 202
		// The participating class is: Connector Specification
		class ConnectorSpecification_c_test21950_c
				implements
					ClassQueryInterface_c {
			ConnectorSpecification_c_test21950_c(int p21951) {
				m_p21951 = p21951;
			}
			private int m_p21951;
			public boolean evaluate(Object candidate) {
				ConnectorSpecification_c selected = (ConnectorSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getOoa_type() == (m_p21951));
				return retval;
			}
		}

		ConnectorSpecification_c[] objs21949 = ConnectorSpecification_c
				.ConnectorSpecificationInstances(Ooaofgraphics
						.getDefaultInstance(),
						new ConnectorSpecification_c_test21950_c(
								getStarting_ooa_type()));

		if (((objs21949.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(ILogger.CONSISTENCY,
								"Terminal Specification", //$NON-NLS-1$
								"Consistency: Object: Terminal Specification: Association: 202: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs21949.length)
										+ " Starting_OOA_Type: " + Integer.toString(getStarting_ooa_type())); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Terminal Specification: Association: 202: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs21949.length)
										+ " Starting_OOA_Type: " + Integer.toString(getStarting_ooa_type()), e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Terminal Specification is a referring class in association: rel.Numb = 203
		// The participating class is: Connector Specification
		class ConnectorSpecification_c_test21953_c
				implements
					ClassQueryInterface_c {
			ConnectorSpecification_c_test21953_c(int p21954) {
				m_p21954 = p21954;
			}
			private int m_p21954;
			public boolean evaluate(Object candidate) {
				ConnectorSpecification_c selected = (ConnectorSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getOoa_type() == (m_p21954));
				return retval;
			}
		}

		ConnectorSpecification_c[] objs21952 = ConnectorSpecification_c
				.ConnectorSpecificationInstances(Ooaofgraphics
						.getDefaultInstance(),
						new ConnectorSpecification_c_test21953_c(
								getEnding_ooa_type()));

		if (((objs21952.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(ILogger.CONSISTENCY,
								"Terminal Specification", //$NON-NLS-1$
								"Consistency: Object: Terminal Specification: Association: 203: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs21952.length)
										+ " Ending_OOA_Type: " + Integer.toString(getEnding_ooa_type())); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Terminal Specification: Association: 203: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs21952.length)
										+ " Ending_OOA_Type: " + Integer.toString(getEnding_ooa_type()), e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Terminal Specification is a referring class in association: rel.Numb = 207
		// The participating class is: Model
		class Model_c_test21956_c implements ClassQueryInterface_c {
			Model_c_test21956_c(java.util.UUID p21957) {
				m_p21957 = p21957;
			}
			private java.util.UUID m_p21957;
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				boolean retval = false;
				retval = (selected.getDiagramid().equals(m_p21957));
				return retval;
			}
		}

		Model_c[] objs21955 = Model_c.ModelInstances(modelRoot,
				new Model_c_test21956_c(getDiagramid()));

		if (((objs21955.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(ILogger.CONSISTENCY,
								"Terminal Specification", //$NON-NLS-1$
								"Consistency: Object: Terminal Specification: Association: 207: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs21955.length)
										+ " diagramId: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Terminal Specification: Association: 207: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs21955.length)
										+ " diagramId: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Terminal Specification is a referring class in association: rel.Numb = 206
		// The participating class is: Graphical Element
		class GraphicalElement_c_test21959_c implements ClassQueryInterface_c {
			GraphicalElement_c_test21959_c(java.util.UUID p21960) {
				m_p21960 = p21960;
			}
			private java.util.UUID m_p21960;
			public boolean evaluate(Object candidate) {
				GraphicalElement_c selected = (GraphicalElement_c) candidate;
				boolean retval = false;
				retval = (selected.getElementid().equals(m_p21960));
				return retval;
			}
		}

		GraphicalElement_c[] objs21958 = GraphicalElement_c
				.GraphicalElementInstances(modelRoot,
						new GraphicalElement_c_test21959_c(getElementid()));

		if (((objs21958.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(ILogger.CONSISTENCY,
								"Terminal Specification", //$NON-NLS-1$
								"Consistency: Object: Terminal Specification: Association: 206: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs21958.length)
										+ " elementId: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Terminal Specification: Association: 206: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs21958.length)
										+ " elementId: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Supertype: rel.Numb = 201
		int objs21961 = 0;
		// Subtype Object: WhiteSpace Terminal
		class WhitespaceTerminal_c_test21962_c implements ClassQueryInterface_c {
			WhitespaceTerminal_c_test21962_c(java.util.UUID p21963) {
				m_p21963 = p21963;
			}
			private java.util.UUID m_p21963;
			public boolean evaluate(Object candidate) {
				WhitespaceTerminal_c selected = (WhitespaceTerminal_c) candidate;
				boolean retval = false;
				retval = (selected.getTerm_spec_id().equals(m_p21963));
				return retval;
			}
		}

		WhitespaceTerminal_c[] objs21964 = WhitespaceTerminal_c
				.WhitespaceTerminalInstances(
						Ooaofgraphics.getDefaultInstance(),
						new WhitespaceTerminal_c_test21962_c(getTerm_spec_id()));

		objs21961 = objs21961 + objs21964.length;
		// Subtype Object: Shape Terminal
		class ShapeTerminal_c_test21965_c implements ClassQueryInterface_c {
			ShapeTerminal_c_test21965_c(java.util.UUID p21966) {
				m_p21966 = p21966;
			}
			private java.util.UUID m_p21966;
			public boolean evaluate(Object candidate) {
				ShapeTerminal_c selected = (ShapeTerminal_c) candidate;
				boolean retval = false;
				retval = (selected.getTerm_spec_id().equals(m_p21966));
				return retval;
			}
		}

		ShapeTerminal_c[] objs21967 = ShapeTerminal_c.ShapeTerminalInstances(
				Ooaofgraphics.getDefaultInstance(),
				new ShapeTerminal_c_test21965_c(getTerm_spec_id()));

		objs21961 = objs21961 + objs21967.length;
		// Subtype Object: Connector Terminal
		class ConnectorTerminal_c_test21968_c implements ClassQueryInterface_c {
			ConnectorTerminal_c_test21968_c(java.util.UUID p21969) {
				m_p21969 = p21969;
			}
			private java.util.UUID m_p21969;
			public boolean evaluate(Object candidate) {
				ConnectorTerminal_c selected = (ConnectorTerminal_c) candidate;
				boolean retval = false;
				retval = (selected.getTerm_spec_id().equals(m_p21969));
				return retval;
			}
		}

		ConnectorTerminal_c[] objs21970 = ConnectorTerminal_c
				.ConnectorTerminalInstances(Ooaofgraphics.getDefaultInstance(),
						new ConnectorTerminal_c_test21968_c(getTerm_spec_id()));

		objs21961 = objs21961 + objs21970.length;
		if (objs21961 != 1) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(ILogger.CONSISTENCY,
								"Terminal Specification", //$NON-NLS-1$
								"Consistency: Object: Terminal Specification: Association: 201: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs21961)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Terminal Specification: Association: 201: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs21961), e);
			}
			retval = false;

		}

		// Terminal Specification is a participating class in association: rel.Numb = 209
		// Object: Element Specification
		class ElementSpecification_c_test21972_c
				implements
					ClassQueryInterface_c {
			ElementSpecification_c_test21972_c(java.util.UUID p21973) {
				m_p21973 = p21973;
			}
			private java.util.UUID m_p21973;
			public boolean evaluate(Object candidate) {
				ElementSpecification_c selected = (ElementSpecification_c) candidate;
				boolean retval = false;
				retval = (selected.getTerm_spec_id().equals(m_p21973));
				return retval;
			}
		}

		ElementSpecification_c[] objs21971 = ElementSpecification_c
				.ElementSpecificationInstances(Ooaofgraphics
						.getDefaultInstance(),
						new ElementSpecification_c_test21972_c(
								getTerm_spec_id()));

		if (((objs21971.length) > 1)) {

			if (CanvasPlugin.getDefault().isDebugging()) {
				Ooaofgraphics.log
						.println(ILogger.CONSISTENCY,
								"Terminal Specification", //$NON-NLS-1$
								"Consistency: Object: Terminal Specification: Association: 209: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs21971.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CanvasPlugin
						.logError(
								"Consistency: Object: Terminal Specification: Association: 209: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs21971.length), e);
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public boolean Criteriamet(final int p_X1, final int p_X2, final int p_Y1,
			final int p_Y2) {
		Ooaofgraphics.log.println(ILogger.OPERATION, "Terminal Specification",
				" Operation entered: TerminalSpecification::Criteriamet");
		final ModelRoot modelRoot = getModelRoot();
		WhitespaceTerminal_c v_wst = WhitespaceTerminal_c
				.getOneTS_WSTOnR201(this);

		ShapeTerminal_c v_sht = ShapeTerminal_c.getOneTS_SHTOnR201(this);

		ConnectorTerminal_c v_cnt = ConnectorTerminal_c
				.getOneTS_CNTOnR201(this);

		if (((v_wst != null))) {

			return v_wst.Criteriamet(p_X1, p_Y1);

		}

		else if (((v_sht != null))) {

			return v_sht.Criteriamet(p_X1, p_Y1);

		}

		else if (((v_cnt != null))) {

			return v_cnt.Criteriamet(p_X1, p_X2, p_Y1, p_Y2);

		}

		return false;

	} // End criteriaMet
	public void Reset() {
		Ooaofgraphics.log.println(ILogger.OPERATION, "Terminal Specification",
				" Operation entered: TerminalSpecification::Reset");
		final ModelRoot modelRoot = getModelRoot();
		GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR206(this);

		if (((v_elem != null))) {

			this.unrelateAcrossR206From(v_elem);

		}

		setSatisfied(false);

	} // End reset

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		return null;
	}
} // end Terminal Specification
