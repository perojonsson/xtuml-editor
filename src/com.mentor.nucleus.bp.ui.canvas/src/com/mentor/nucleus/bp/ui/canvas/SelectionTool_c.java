      
package com.mentor.nucleus.bp.ui.canvas ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.ui.canvas.SelectionTool_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

import com.mentor.nucleus.bp.core.*;
import org.eclipse.swt.graphics.GC;
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_SELECTION_TOOL extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}
  class EV_SELECTION_TOOL_MOUSE_MOVED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_MOUSE_MOVED = 4 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_MOVED ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_RELEASED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_MOUSE_RELEASED = 3 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_RELEASED ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public boolean      edi_retain_selection ;
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL = 9 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_PRESSED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public boolean      edi_retain_selection ;
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_MOUSE_PRESSED = 2 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_PRESSED ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public boolean      edi_retain_selection ;
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE = 8 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE ;
    }
  }
  class EV_SELECTION_TOOL_DONE extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_DONE = 6 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_DONE ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL = 12 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED = 5 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED ;
    }
  }
  class EV_SELECTION_TOOL_SPACE_PRESSED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_SPACE_PRESSED = 14 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_SPACE_PRESSED ;
    }
  }
  class EV_SELECTION_TOOL_SPACE_RELEASED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_SPACE_RELEASED = 15 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_SPACE_RELEASED ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE = 18 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT = 19 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_EXITED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_MOUSE_EXITED = 22 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_EXITED ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_ENTERED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_MOUSE_ENTERED = 23 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_ENTERED ;
    }
  }
  class EV_SELECTION_TOOL_WAYPOINT_CREATED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_WAYPOINT_CREATED = 24 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_WAYPOINT_CREATED ;
    }
  }
  class EV_SELECTION_TOOL_DEACTIVATED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_DEACTIVATED = 17 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_DEACTIVATED ;
    }
  }
  class EV_SELECTION_TOOL_ACTIVATED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_ACTIVATED = 16 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_ACTIVATED ;
    }
  }
  class EV_SELECTION_TOOL_TRANSACTION_STARTED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_TRANSACTION_STARTED = 25 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_TRANSACTION_STARTED ;
    }
  }
  class EV_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT extends EV_SELECTION_TOOL
  {
    // supplemental event data
    static final int EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT = 27 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT ;
    }
  }
  class EV_SELECTION_TOOL_TRANSACTION_CANCELLED extends EV_SELECTION_TOOL
  {
    // supplemental event data
    public int          edi_x ;
    public int          edi_y ;
    static final int EVCD_SELECTION_TOOL_TRANSACTION_CANCELLED = 28 ;
    public final int getEvtcode()
    {
      return EVCD_SELECTION_TOOL_TRANSACTION_CANCELLED ;
    }
  }

public class SelectionTool_c extends NonRootModelElement implements timerClient_c, ActiveObject_c, IAdaptable, Cloneable
{
  // Public Constructors
  public SelectionTool_c(ModelRoot modelRoot,
       java.util.UUID         p_m_tool_id,
       boolean      p_m_shouldrestorecursorshape,
       Transaction p_m_currenttransaction,
       int          p_m_symbolmovemousestartx,
       int          p_m_symbolmovemousestarty)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_tool_id = IdAssigner.preprocessUUID(p_m_tool_id);
       // default value for m_current_state
       m_shouldrestorecursorshape = p_m_shouldrestorecursorshape;
       m_currenttransaction = p_m_currenttransaction;
       m_symbolmovemousestartx = p_m_symbolmovemousestartx;
       m_symbolmovemousestarty = p_m_symbolmovemousestarty;
        
    // register with event queue poller
    Activepoller_c.register(this) ;
    Object [] key = {m_tool_id};
    addInstanceToMap(key);
  }
  static public SelectionTool_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_tool_id,
       boolean      p_m_shouldrestorecursorshape,
       Transaction p_m_currenttransaction,
       int          p_m_symbolmovemousestartx,
       int          p_m_symbolmovemousestarty, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(SelectionTool_c.class);
      SelectionTool_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_tool_id};
          new_inst = (SelectionTool_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_tool_id = IdAssigner.preprocessUUID(p_m_tool_id);
       // default value for m_current_state
       new_inst.m_shouldrestorecursorshape = p_m_shouldrestorecursorshape;
       new_inst.m_currenttransaction = p_m_currenttransaction;
       new_inst.m_symbolmovemousestartx = p_m_symbolmovemousestartx;
       new_inst.m_symbolmovemousestarty = p_m_symbolmovemousestarty;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new SelectionTool_c(modelRoot,
p_m_tool_id,
p_m_shouldrestorecursorshape,
p_m_currenttransaction,
p_m_symbolmovemousestartx,
p_m_symbolmovemousestarty
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public SelectionTool_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_tool_id,
       boolean      p_m_shouldrestorecursorshape,
       Transaction p_m_currenttransaction,
       int          p_m_symbolmovemousestartx,
       int          p_m_symbolmovemousestarty){
    InstanceList instances = modelRoot.getInstanceList(SelectionTool_c.class);
    SelectionTool_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_tool_id
            };
        source = (SelectionTool_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_tool_id = IdAssigner.preprocessUUID(p_m_tool_id);
       // default value for m_current_state
       source.m_shouldrestorecursorshape = p_m_shouldrestorecursorshape;
       source.m_currenttransaction = p_m_currenttransaction;
       source.m_symbolmovemousestartx = p_m_symbolmovemousestartx;
       source.m_symbolmovemousestarty = p_m_symbolmovemousestarty;
        
           return source ;
        }
      }
      // there is no instance matching the id
    SelectionTool_c new_inst = new SelectionTool_c(modelRoot,
p_m_tool_id,
p_m_shouldrestorecursorshape,
p_m_currenttransaction,
p_m_symbolmovemousestartx,
p_m_symbolmovemousestarty
);
    return new_inst;
  }
  public SelectionTool_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_tool_id = IdAssigner.NULL_UUID;   
    Object [] key = {m_tool_id};
    addInstanceToMap(key);
    // register with event queue poller
    Activepoller_c.register(this) ;
  }

  public Object getInstanceKey() {
    Object [] key =  {m_tool_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_tool_id !=  p_newKey ){
	
		m_tool_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  


  // Run Entry Point
  public boolean poll()
  {
      if (!eventQueue.isEmpty() || !selfEventQueue.isEmpty())
      { // an event queue is not empty
        procEvent() ;
        return true;
      } else {
        return false;
      }
  }

  public boolean equals (Object elem) {
     if (!(elem instanceof SelectionTool_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof SelectionTool_c)) {
           return false;
       }
       
       SelectionTool_c me = (SelectionTool_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getTool_id()) || IdAssigner.NULL_UUID.equals(((SelectionTool_c)elem).getTool_id())) && this != elem)) {
      	return false;
      }
      if (!getTool_id().equals(((SelectionTool_c)elem).getTool_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof SelectionTool_c)) {
           return false;
       }
       
       SelectionTool_c me = (SelectionTool_c)elem;
      if (!getTool_idCachedValue().equals(((SelectionTool_c)elem).getTool_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_tool_id ;
  private boolean      m_shouldrestorecursorshape ;
  private Transaction m_currenttransaction ;
  private int          m_symbolmovemousestartx ;
  private int          m_symbolmovemousestarty ;
      
// declare association references from this class
  
  
    
// referring navigation

ModelTool_c IsSupertypeModelTool ;
public void relateAcrossR102To(ModelTool_c target)
{
	relateAcrossR102To(target, true);
}
public void relateAcrossR102To(ModelTool_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypeModelTool) return;  // already related

    if ( IsSupertypeModelTool != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypeModelTool != null) {
    
        IsSupertypeModelTool.clearBackPointerR102To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofgraphics.log.println(ILogger.CONSISTENCY, 
			"SelectionTool_c.relateAcrossR102To(ModelTool_c target)", 
			"Relate performed across R102 from Selection Tool to Model Tool without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypeModelTool = target ;
        m_tool_id = target.getTool_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR102To(this);
        target.addRef();
    }
}
public void unrelateAcrossR102From(ModelTool_c target)
{
	unrelateAcrossR102From(target, true);
}
public void unrelateAcrossR102From(ModelTool_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypeModelTool == null) return;  // already unrelated
	
	if (target != IsSupertypeModelTool) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CanvasPlugin.logError("Tried to unrelate from non-related instance across R102", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR102To(this);
    }
    

      if(IsSupertypeModelTool != null) {
      
        m_tool_id = IsSupertypeModelTool.getTool_id();
        IsSupertypeModelTool = null ;
        target.removeRef();
    }
}

  
    
      
public static SelectionTool_c getOneCT_SELOnR102(ModelTool_c [] targets)
{
    return getOneCT_SELOnR102(targets, null);
}

public static SelectionTool_c getOneCT_SELOnR102(ModelTool_c [] targets, ClassQueryInterface_c test)
{
    SelectionTool_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneCT_SELOnR102(targets[i], test);
        }
    }

    return ret_val;
}

public static SelectionTool_c getOneCT_SELOnR102(ModelTool_c target)
{
  return getOneCT_SELOnR102(target, null);
}

public static SelectionTool_c getOneCT_SELOnR102(ModelTool_c target, boolean loadComponent)
{
    return getOneCT_SELOnR102(target.getModelRoot(), target, null, loadComponent);
}

public static SelectionTool_c getOneCT_SELOnR102(ModelTool_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneCT_SELOnR102(target.getModelRoot(), target, test);
  }
  return null;
}

public static SelectionTool_c getOneCT_SELOnR102(ModelRoot modelRoot, ModelTool_c target, ClassQueryInterface_c test)
{
	return getOneCT_SELOnR102(modelRoot, target, test, true);
}

public static SelectionTool_c getOneCT_SELOnR102(ModelRoot modelRoot, ModelTool_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneCT_SELOnR102(modelRoot,target,test);
}
private static SelectionTool_c find_getOneCT_SELOnR102(ModelRoot modelRoot, ModelTool_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    SelectionTool_c source = (SelectionTool_c)target.backPointer_IsSubtypeSelectionToolIsSubtype_R102;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static SelectionTool_c [] getManyCT_SELsOnR102(ModelTool_c [] targets)
{
  return getManyCT_SELsOnR102(targets, null);
}
public static SelectionTool_c [] getManyCT_SELsOnR102(ModelTool_c [] targets, boolean loadComponent)
{
  return getManyCT_SELsOnR102(targets, null, loadComponent);
}
public static SelectionTool_c [] getManyCT_SELsOnR102(ModelTool_c [] targets, ClassQueryInterface_c test)
{
	return getManyCT_SELsOnR102(targets, test, true);
}

public static SelectionTool_c [] getManyCT_SELsOnR102(ModelTool_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new SelectionTool_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(SelectionTool_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      SelectionTool_c source = (SelectionTool_c)targets[i].backPointer_IsSubtypeSelectionToolIsSubtype_R102;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	SelectionTool_c[] ret_set = new SelectionTool_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new SelectionTool_c[0];
  }
  }

public static SelectionTool_c [] getManyCT_SELsOnR102(ModelTool_c target)
{
  if (target != null) {
    ModelTool_c [] targetArray = new ModelTool_c[1];
    targetArray[0] = target;
    return getManyCT_SELsOnR102(targetArray);
  } else {
    SelectionTool_c [] result = new SelectionTool_c [0] ;
  return result ;
}
}

public static SelectionTool_c [] getManyCT_SELsOnR102(ModelTool_c target, boolean loadComponent)
{
  if (target != null) {
    ModelTool_c [] targetArray = new ModelTool_c[1];
    targetArray[0] = target;
    return getManyCT_SELsOnR102(targetArray, loadComponent);
  } else {
    SelectionTool_c [] result = new SelectionTool_c [0] ;
  return result ;
}
}



      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R102
      ModelTool_c relInst22444 = (ModelTool_c) baseRoot.getInstanceList(ModelTool_c.class).get(new Object[] {m_tool_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst22444 == null) {
      			relInst22444 = (ModelTool_c) Ooaofooa.getDefaultInstance().getInstanceList(ModelTool_c.class).get(new Object[] {m_tool_id});
      		}
			//synchronized
      if ( relInst22444 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst22444) && !isProxy())) {
	      relInst22444.relateAcrossR102To(this, notifyChanges);
	  }
	  }
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R102
      // CT_MTL
		  inst=IsSupertypeModelTool;
			unrelateAcrossR102From(IsSupertypeModelTool, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(SelectionTool_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final SelectionTool_c inst = (SelectionTool_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(SelectionTool_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static SelectionTool_c SelectionToolInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		SelectionTool_c result=findSelectionToolInstance(modelRoot,test,loadComponent);
	  return result;  
  }
private static SelectionTool_c findSelectionToolInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(SelectionTool_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				SelectionTool_c x = (SelectionTool_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					return x;
			}
		}
		}
			return null;
}
  public static SelectionTool_c SelectionToolInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return SelectionToolInstance(modelRoot,test,true);
  }
  
  public static SelectionTool_c SelectionToolInstance(ModelRoot modelRoot)
  {
	 return SelectionToolInstance(modelRoot,null,true);
  }

  public static SelectionTool_c [] SelectionToolInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
		    InstanceList instances = modelRoot.getInstanceList(SelectionTool_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					SelectionTool_c x = (SelectionTool_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				SelectionTool_c[] ret_set = new SelectionTool_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new SelectionTool_c[0];
			}		
		} 
  }
  public static SelectionTool_c [] SelectionToolInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  SelectionToolInstances(modelRoot,test,true);
  }
  public static SelectionTool_c [] SelectionToolInstances(ModelRoot modelRoot)
  {
	return SelectionToolInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
    Activepoller_c.unRegister(this) ;
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Selection Tool.dispose call: ";
	ModelTool_c testR102Inst2 = ModelTool_c.getOneCT_MTLOnR102(this, false);

	if ( testR102Inst2 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "102 ";
	}
	if(delete_error == true) {

		if(CanvasPlugin.getDefault().isDebugging()) {
			Ooaofgraphics.log.println(ILogger.DELETE, "Selection Tool", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CanvasPlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("tool_id")){
         return true;
      }
      return false;      
  }      
  // declare attribute accessors
  public long getTool_idLongBased()
  {
    if ( IsSupertypeModelTool != null )
    {
      return IsSupertypeModelTool.getTool_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getTool_id()
  {
    if ( IsSupertypeModelTool != null )
    {
      return IsSupertypeModelTool.getTool_id();
    }
    return IdAssigner.NULL_UUID;
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypeModelTool != null );
 
 }                  

  public java.util.UUID getTool_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_tool_id) )
      return m_tool_id;
    else
      return getTool_id();
  }
  
  public void setTool_id(java.util.UUID newValue)
  {
   m_tool_id = IdAssigner.preprocessUUID(newValue);
  }
  public boolean getShouldrestorecursorshape()
  {
    return m_shouldrestorecursorshape ;
  }


  public void setShouldrestorecursorshape(boolean newValue)
  {
   m_shouldrestorecursorshape = newValue ;
  }
  public Transaction getCurrenttransaction()
  {
    return m_currenttransaction ;
  }


  public void setCurrenttransaction(Transaction newValue)
  {
   m_currenttransaction = newValue ;
  }
  public int getSymbolmovemousestartx()
  {
    return m_symbolmovemousestartx ;
  }


  public void setSymbolmovemousestartx(int newValue)
  {
   m_symbolmovemousestartx = newValue ;
  }
  public int getSymbolmovemousestarty()
  {
    return m_symbolmovemousestarty ;
  }


  public void setSymbolmovemousestarty(int newValue)
  {
   m_symbolmovemousestarty = newValue ;
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Selection Tool", //$NON-NLS-1$
	  " Operation entered: Selection Tool::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     SelectionTool_c [] objs = SelectionTool_c.SelectionToolInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Selection Tool", //$NON-NLS-1$
	  " Operation entered: Selection Tool::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class SelectionTool_c_test22446_c implements ClassQueryInterface_c
    {
	  SelectionTool_c_test22446_c( java.util.UUID            p22447 ) {
	  m_p22447 = p22447;
	  }
	  private java.util.UUID             m_p22447; 
	  public boolean evaluate (Object candidate)
	  {
	      SelectionTool_c selected = (SelectionTool_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTool_id().equals(m_p22447));
	      return retval;
	  }
    }

    SelectionTool_c [] objs22445 = 
    SelectionTool_c.SelectionToolInstances(modelRoot, new SelectionTool_c_test22446_c(getTool_id())) ;

    if ( (  (objs22445.length) == 0) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Selection Tool", //$NON-NLS-1$
           "Consistency: Object: Selection Tool: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs22445.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Selection Tool: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22445.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs22445.length) > 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Selection Tool", //$NON-NLS-1$
           "Consistency: Object: Selection Tool: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs22445.length )  + " Tool_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Selection Tool: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22445.length )  + " Tool_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Selection Tool is a subtype in association: rel.Numb = 102
          // The supertype class is: Model Tool
    class ModelTool_c_test22451_c implements ClassQueryInterface_c
    {
	  ModelTool_c_test22451_c( java.util.UUID            p22452 ) {
	  m_p22452 = p22452;
	  }
	  private java.util.UUID             m_p22452; 
	  public boolean evaluate (Object candidate)
	  {
	      ModelTool_c selected = (ModelTool_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTool_id().equals(m_p22452));
	      return retval;
	  }
    }

    ModelTool_c [] objs22450 = 
    ModelTool_c.ModelToolInstances(modelRoot, new ModelTool_c_test22451_c(getTool_id())) ;

    if ( (  (objs22450.length) != 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Selection Tool", //$NON-NLS-1$
           "Consistency: Object: Selection Tool: Association: 102: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs22450.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Selection Tool: Association: 102: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22450.length )  , e); 
      }
      retval = false;

    }

    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Selection Tool", " Operation entered: SelectionTool::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelTool_c v_mtl = ModelTool_c.getOneCT_MTLOnR102(this);


if ( (  (v_mtl != null)) )
{

this.unrelateAcrossR102From(v_mtl);



}

delete() ;



   } // End dispose
  public  void Unselectall()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Selection Tool", " Operation entered: SelectionTool::Unselectall") ; 
               final ModelRoot modelRoot = getModelRoot();
Cl_c.Clearselection() ;



   } // End unSelectAll
  public  void Enabletextmoveunder(final int          p_X,final int          p_Y)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Selection Tool", " Operation entered: SelectionTool::Enabletextmoveunder") ; 
               final ModelRoot modelRoot = getModelRoot();
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


if (v_model != null) {
v_model.Enabletextmoveunder(			    
p_X			    
,p_Y ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End enableTextMoveUnder
  public  void Disabletextmove()
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Selection Tool", " Operation entered: SelectionTool::Disabletextmove") ; 
               final ModelRoot modelRoot = getModelRoot();
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


FloatingText_c v_con_text = FloatingText_c.getOneGD_CTXTOnR14(v_model);


if ( (  (v_con_text != null)) )
{

TextInMove_c v_tim = TextInMove_c.getOneGD_TIMOnR14(v_model);


if (v_tim != null) {
v_tim.unrelateAcrossR14From( v_model ) ; v_tim.unrelateAcrossR14From( v_con_text ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_tim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_tim.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_tim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}


   } // End disableTextMove
  public  void Waypointmoved(final java.util.UUID         p_Waypoint_id)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Selection Tool", " Operation entered: SelectionTool::Waypointmoved") ; 
               final ModelRoot modelRoot = getModelRoot();
Waypoint_c v_waypoint = (Waypoint_c) modelRoot.getInstanceList(Waypoint_c.class).getGlobal(null, p_Waypoint_id);


LineSegment_c v_beforeSegment = LineSegment_c.getOneGD_LSOnR22(v_waypoint);


LineSegment_c v_afterSegment = LineSegment_c.getOneGD_LSOnR21(v_waypoint);


if ( ((  (v_beforeSegment != null)) && (  (v_afterSegment == null))) )
{

GraphicalElement_c v_srcElement = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR6(v_beforeSegment));


Connector_c v_myCon = Connector_c.getOneGD_CONOnR2(v_srcElement);


if ( (  !Cl_c.Connectorsupportslinking(			    
v_srcElement.getRepresents())) )
{

return ;



}

if ( (v_myCon.Endsonws()) )
{

Model_c v_canvas = Model_c.getOneGD_MDOnR1(v_srcElement);


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(v_canvas);


Connector_c [] v_connectors = Connector_c.getManyGD_CONsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(v_canvas));


Connector_c  v_connector = null;
for ( int i21433 = 0; i21433 < v_connectors.length; i21433++)
{
  v_connector = v_connectors[i21433] ;

if ( (! v_connector.getElementid().equals(v_myCon.getElementid())) )
{

int          v_unScaledX = Gr_c.Unscale(			    
(int)((v_waypoint.getPositionx() - v_diagram.getViewportx()))) ;


int          v_unScaledY = Gr_c.Unscale(			    
(int)((v_waypoint.getPositiony() - v_diagram.getViewporty()))) ;


if ( (v_connector.Isover(			    
v_unScaledX			    
,v_unScaledY)) )
{

ConnectorSpecification_c v_myConSpec = ConnectorSpecification_c.getOneTS_CSPOnR200(ElementSpecification_c.getOneGD_ESOnR10(GraphicalElement_c.getOneGD_GEOnR2(v_myCon)));


  class ConnectorTerminal_test21617_c implements ClassQueryInterface_c
  {
	ConnectorTerminal_test21617_c( int  p21618 ) {
		m_p21618 = p21618;
	}
	private int  m_p21618;
	public boolean evaluate (Object candidate)
	{
		ConnectorTerminal_c selected = (ConnectorTerminal_c)candidate;
		return (selected.getOoa_type() == m_p21618 && selected.getTerminatesat() == End_c.End) ;
	}
  }
ConnectorTerminal_c v_srcTermSpec = ConnectorTerminal_c.getOneTS_CNTOnR201(TerminalSpecification_c.getManyTS_TSPsOnR203(ConnectorSpecification_c.getManyTS_CSPsOnR200(ElementSpecification_c.getManyGD_ESsOnR10(GraphicalElement_c.getManyGD_GEsOnR2(v_connector)))), new ConnectorTerminal_test21617_c(v_myConSpec.getOoa_type()));


if ( (  (v_srcTermSpec != null)) )
{

GraphicalElement_c v_targetElement = GraphicalElement_c.getOneGD_GEOnR2(v_connector);


if ( (  (v_srcElement != null)) )
{

TerminalSpecification_c v_srcTSSpec = TerminalSpecification_c.getOneTS_TSPOnR201(v_srcTermSpec);


if (v_srcTSSpec != null) {
  v_srcTSSpec.relateAcrossR206To(v_targetElement);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  class ConnectorTerminal_test21619_c implements ClassQueryInterface_c
  {
	ConnectorTerminal_test21619_c( int  p21620 ) {
		m_p21620 = p21620;
	}
	private int  m_p21620;
	public boolean evaluate (Object candidate)
	{
		ConnectorTerminal_c selected = (ConnectorTerminal_c)candidate;
		return (selected.getOoa_type() == m_p21620 && selected.getTerminatesat() == End_c.End) ;
	}
  }
ConnectorTerminal_c v_targetCntSpec = ConnectorTerminal_c.getOneTS_CNTOnR201(TerminalSpecification_c.getManyTS_TSPsOnR203(v_myConSpec), new ConnectorTerminal_test21619_c(v_targetElement.getOoa_type()));


TerminalSpecification_c v_targetTSSpec = TerminalSpecification_c.getOneTS_TSPOnR201(v_targetCntSpec);


if (v_targetTSSpec != null) {
  v_targetTSSpec.relateAcrossR206To(v_srcElement);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

boolean      v_success = Cl_c.Linkconnector(			    
v_srcElement.getRepresents()			    
,Cl_c.Getooaid(			    
v_targetElement.getRepresents())) ;


if ( (v_success) )
{

ModelTool_c v_tool = ModelTool_c.getOneCT_MTLOnR102(this);


if (v_tool != null) {
v_tool.Finalizeconnector(			    
v_targetElement.getElementid()			    
,v_srcElement.getElementid() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


}


}


}


}


   } // End waypointMoved

  // end transform functions

  public static final int
    ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS = 12, 
    ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE = 14, 
    ST_SELECTION_TOOL_SELECTING_SYMBOL = 16, 
    ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE = 15, 
    ST_SELECTION_TOOL_DRAGGING_SYMBOLS = 20, 
    ST_SELECTION_TOOL_TOGGLING_SYMBOLS_CAUGHT_BY_SELECTION_RECTANGLE = 18, 
    ST_SELECTION_TOOL_IDLE = 1, 
    ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS = 19, 
    ST_SELECTION_TOOL_OPENING_CONTEXT_MENU = 2, 
    ST_SELECTION_TOOL_MOUSE_RELEASED = 13, 
    ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS = 4, 
    ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT = 5, 
    ST_SELECTION_TOOL_MOVING_HOTSPOT = 6, 
    ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT = 3, 
    ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE = 17, 
    ST_SELECTION_TOOL_SAVING_SYMBOL_MOVEMENT = 21, 
    ST_SELECTION_TOOL_SAVING_SYMBOL_RESIZE = 22, 
    ST_SELECTION_TOOL_STARTING_TRANSACTION_FOR_DRAGGING_SELECTED_SYMBOLS = 23, 
    ST_SELECTION_TOOL_CANCELLING_RESIZE_TRANSACTION = 24;

   private int state = ST_SELECTION_TOOL_IDLE ;
   private Vector<genericEvent_c> eventQueue = new Vector<genericEvent_c>(10,10) ;
   private Vector<genericEvent_c> selfEventQueue = new Vector<genericEvent_c>(10,10) ;

  public int get_current_state() { return state; }
    
  static final int EVCD_SELECTION_TOOL_MOUSE_MOVED = 4 ;
   public synchronized void MouseMoved( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_MOUSE_MOVED incoming_event = new EV_SELECTION_TOOL_MOUSE_MOVED() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_RELEASED = 3 ;
   public synchronized void MouseReleased( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_MOUSE_RELEASED incoming_event = new EV_SELECTION_TOOL_MOUSE_RELEASED() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL = 9 ;
   public synchronized void MousePressedOverSymbol( boolean self_directed , final boolean      p_retain_selection, final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL incoming_event = new EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL() ;
    incoming_event.edi_retain_selection = p_retain_selection ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_PRESSED = 2 ;
   public synchronized void MousePressed( boolean self_directed , final boolean      p_retain_selection, final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_MOUSE_PRESSED incoming_event = new EV_SELECTION_TOOL_MOUSE_PRESSED() ;
    incoming_event.edi_retain_selection = p_retain_selection ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE = 8 ;
   public synchronized void MousePressedOverWhitespace( boolean self_directed , final boolean      p_retain_selection, final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE incoming_event = new EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE() ;
    incoming_event.edi_retain_selection = p_retain_selection ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_DONE = 6 ;
   public synchronized void Done( boolean self_directed )
  {
    EV_SELECTION_TOOL_DONE incoming_event = new EV_SELECTION_TOOL_DONE() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL = 12 ;
   public synchronized void MousePressedOverSelectedSymbol( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL incoming_event = new EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED = 5 ;
   public synchronized void MouseContextPressed( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED incoming_event = new EV_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_SPACE_PRESSED = 14 ;
   public synchronized void SpacePressed( boolean self_directed )
  {
    EV_SELECTION_TOOL_SPACE_PRESSED incoming_event = new EV_SELECTION_TOOL_SPACE_PRESSED() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_SPACE_RELEASED = 15 ;
   public synchronized void SpaceReleased( boolean self_directed )
  {
    EV_SELECTION_TOOL_SPACE_RELEASED incoming_event = new EV_SELECTION_TOOL_SPACE_RELEASED() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE = 18 ;
   public synchronized void MouseMovedOverWhitespace( boolean self_directed )
  {
    EV_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE incoming_event = new EV_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT = 19 ;
   public synchronized void MouseMovedOverHotspot( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT incoming_event = new EV_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_EXITED = 22 ;
   public synchronized void MouseExited( boolean self_directed )
  {
    EV_SELECTION_TOOL_MOUSE_EXITED incoming_event = new EV_SELECTION_TOOL_MOUSE_EXITED() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_ENTERED = 23 ;
   public synchronized void MouseEntered( boolean self_directed )
  {
    EV_SELECTION_TOOL_MOUSE_ENTERED incoming_event = new EV_SELECTION_TOOL_MOUSE_ENTERED() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_WAYPOINT_CREATED = 24 ;
   public synchronized void WaypointCreated( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_WAYPOINT_CREATED incoming_event = new EV_SELECTION_TOOL_WAYPOINT_CREATED() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_DEACTIVATED = 17 ;
   public synchronized void Deactivated( boolean self_directed )
  {
    EV_SELECTION_TOOL_DEACTIVATED incoming_event = new EV_SELECTION_TOOL_DEACTIVATED() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_ACTIVATED = 16 ;
   public synchronized void Activated( boolean self_directed )
  {
    EV_SELECTION_TOOL_ACTIVATED incoming_event = new EV_SELECTION_TOOL_ACTIVATED() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_TRANSACTION_STARTED = 25 ;
   public synchronized void TransactionStarted( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_TRANSACTION_STARTED incoming_event = new EV_SELECTION_TOOL_TRANSACTION_STARTED() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT = 27 ;
   public synchronized void MouseMovedOverNonhotspot( boolean self_directed )
  {
    EV_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT incoming_event = new EV_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT() ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }
  static final int EVCD_SELECTION_TOOL_TRANSACTION_CANCELLED = 28 ;
   public synchronized void TransactionCancelled( boolean self_directed , final int          p_x, final int          p_y)
  {
    EV_SELECTION_TOOL_TRANSACTION_CANCELLED incoming_event = new EV_SELECTION_TOOL_TRANSACTION_CANCELLED() ;
    incoming_event.edi_x = p_x ;
    incoming_event.edi_y = p_y ;
	if (self_directed == true) {
	  selfEventQueue.addElement(incoming_event) ;
	}
	else {
      eventQueue.addElement(incoming_event) ;
	}
	notify() ;
  }

  public synchronized void takeEvent(genericEvent_c incoming_event)
  {
    eventQueue.addElement(incoming_event) ;
	notify() ;
  }

  public synchronized void procEvent()
  {
    ModelRoot modelRoot = getModelRoot();
    EV_SELECTION_TOOL currentEvent ;
	if (selfEventQueue.size() != 0) {
	  currentEvent = (EV_SELECTION_TOOL)selfEventQueue.firstElement() ;
	  selfEventQueue.removeElement(currentEvent) ;
	}
	else {
      currentEvent = (EV_SELECTION_TOOL)eventQueue.firstElement() ;
      if (currentEvent != null) {
        eventQueue.removeElement(currentEvent) ;
	  }
	}
	if (currentEvent != null) {
      switch (currentEvent.getEvtcode())
      {
        case EVCD_SELECTION_TOOL_MOUSE_MOVED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MouseMoved in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_MOVED arch_event = (EV_SELECTION_TOOL_MOUSE_MOVED)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(v_model);


if (v_model != null) {
  v_model.setSelrectw( (int)(Gr_c.Scale(			    
Gr_c.Getabsolutexposition()) + v_diagram.getViewportx() - v_model.getSelrectx())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_model != null) {
  v_model.setSelrecth( (int)(Gr_c.Scale(			    
Gr_c.Getabsoluteyposition()) + v_diagram.getViewporty() - v_model.getSelrecty())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



            }
            state = ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE ;
            break ;
          case ST_SELECTION_TOOL_SELECTING_SYMBOL:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


setCurrenttransaction( Cl_c.Starttransaction(			    
v_model.getRepresents()			    
,"Shape(s) movement")) ;


setSymbolmovemousestartx( Gr_c.Getabsolutexposition() - arch_event.edi_x) ;


setSymbolmovemousestarty( Gr_c.Getabsoluteyposition() - arch_event.edi_y) ;


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


GraphicalElement_c  v_symbol = null;
for ( int i21431 = 0; i21431 < v_symbols.length; i21431++)
{
  v_symbol = v_symbols[i21431] ;

if ( (v_symbol.Isselected()) )
{

ElementInMove_c v_inMove = new ElementInMove_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_inMove));


if (v_inMove != null) {
  v_inMove.relateAcrossR25To( v_symbol ) ;   v_inMove.relateAcrossR25To( v_model ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_symbol);


Graphedge_c v_edge = Graphedge_c.getOneDIM_EDOnR301(v_graphElem);


if ( (  (v_edge != null)) )
{

Connector_c v_connector = Connector_c.getOneGD_CONOnR20(v_edge);


if ( (v_connector.Startsonws() && v_connector.Endsonws()) )
{

  class LineSegment_test21615_c implements ClassQueryInterface_c
  {
	LineSegment_test21615_c( java.util.UUID         p21616 ) {
		m_p21616 = p21616;
	}
	private java.util.UUID         m_p21616;
	public boolean evaluate (Object candidate)
	{
		LineSegment_c selected = (LineSegment_c)candidate;
		return (selected.getElementid().equals(m_p21616)) ;
	}
  }
LineSegment_c v_segment = LineSegment_c.getOneGD_LSOnR6(v_connector, new LineSegment_test21615_c(v_connector.Getstartingsegmentid()));


if ( (  (v_segment != null)) )
{

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR21(v_segment);


if (v_inMove != null) {
  v_inMove.setStartingx( v_waypoint.getPositionx()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_inMove != null) {
  v_inMove.setStartingy( v_waypoint.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


}

else
{

if (v_inMove != null) {
  v_inMove.setStartingx( v_graphElem.getPositionx()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_inMove != null) {
  v_inMove.setStartingy( v_graphElem.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


}

// Generate event CT_SEL25:TransactionStarted to self
TransactionStarted(true , arch_event.edi_x,arch_event.edi_y ) ;



            }
            state = ST_SELECTION_TOOL_STARTING_TRANSACTION_FOR_DRAGGING_SELECTED_SYMBOLS ;
            break ;
          case ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(v_model);


if (v_model != null) {
  v_model.setSelrectw( (int)(Gr_c.Scale(			    
Gr_c.Getabsolutexposition()) + v_diagram.getViewportx() - v_model.getSelrectx())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_model != null) {
  v_model.setSelrecth( (int)(Gr_c.Scale(			    
Gr_c.Getabsoluteyposition()) + v_diagram.getViewporty() - v_model.getSelrecty())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



            }
            state = ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE ;
            break ;
          case ST_SELECTION_TOOL_DRAGGING_SYMBOLS:
            {
FloatingText_c v_con_text = FloatingText_c.getOneGD_CTXTOnR14(Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this)));


if ( (  (v_con_text != null)) )
{

if (v_con_text != null) {
v_con_text.Move(			    
Gr_c.Scale(			    
arch_event.edi_x)			    
,Gr_c.Scale(			    
arch_event.edi_y) ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR8(v_con_text));


if ( (  (v_elem == null)) )
{

v_elem = GraphicalElement_c.getOneGD_GEOnR2(Shape_c.getOneGD_SHPOnR27(v_con_text));



}

Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_elem)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

else
{

int          v_mouseX = Gr_c.Getabsolutexposition() ;


int          v_mouseY = Gr_c.Getabsoluteyposition() ;


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


ContainingShape_c v_container = (ContainingShape_c) modelRoot.getInstanceList(ContainingShape_c.class).getGlobal(null, Os_c.Null_unique_id());


boolean      v_resize = false ;


GraphicalElement_c  v_symbol = null;
for ( int i21420 = 0; i21420 < v_symbols.length; i21420++)
{
  v_symbol = v_symbols[i21420] ;

if ( (v_symbol.Isselected()) )
{

int          v_positionX = 0 ;


int          v_positionY = 0 ;


ElementInMove_c v_inMove = ElementInMove_c.getOneGD_EIMOnR25(v_symbol);


Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_symbol);


Graphedge_c v_edge = Graphedge_c.getOneDIM_EDOnR301(v_graphElem);


if ( (  (v_edge != null)) )
{

Connector_c v_connector = Connector_c.getOneGD_CONOnR20(v_edge);


if ( (v_connector.Startsonws() && v_connector.Endsonws()) )
{

  class LineSegment_test21612_c implements ClassQueryInterface_c
  {
	LineSegment_test21612_c( java.util.UUID         p21613 ) {
		m_p21613 = p21613;
	}
	private java.util.UUID         m_p21613;
	public boolean evaluate (Object candidate)
	{
		LineSegment_c selected = (LineSegment_c)candidate;
		return (selected.getElementid().equals(m_p21613)) ;
	}
  }
LineSegment_c v_segment = LineSegment_c.getOneGD_LSOnR6(v_connector, new LineSegment_test21612_c(v_connector.Getstartingsegmentid()));


if ( (  (v_segment != null)) )
{

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR21(v_segment);


v_positionX = (int)(v_waypoint.getPositionx()) ;


v_positionY = (int)(v_waypoint.getPositiony()) ;



}


}


}

else
{

v_positionX = (int)(v_graphElem.getPositionx()) ;


v_positionY = (int)(v_graphElem.getPositiony()) ;



}

int          v_dx = (v_mouseX - getSymbolmovemousestartx()) - Gr_c.Unscale(			    
(int)((v_positionX - v_inMove.getStartingx()))) ;


int          v_dy = (v_mouseY - getSymbolmovemousestarty()) - Gr_c.Unscale(			    
(int)((v_positionY - v_inMove.getStartingy()))) ;


if (v_symbol != null) {
v_symbol.Move(			    
v_dx			    
,v_dy ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_symbol)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

v_resize = true ;


v_container = v_containerShape ;



}


}


}


}

if ( (v_resize) )
{

if (v_container != null) {
v_container.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

Gr_c.Redraw() ;



            }
            state = ST_SELECTION_TOOL_DRAGGING_SYMBOLS ;
            break ;
          case ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


setCurrenttransaction( Cl_c.Starttransaction(			    
v_model.getRepresents()			    
,"Shape(s) movement")) ;


setSymbolmovemousestartx( Gr_c.Getabsolutexposition() - arch_event.edi_x) ;


setSymbolmovemousestarty( Gr_c.Getabsoluteyposition() - arch_event.edi_y) ;


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


GraphicalElement_c  v_symbol = null;
for ( int i21431 = 0; i21431 < v_symbols.length; i21431++)
{
  v_symbol = v_symbols[i21431] ;

if ( (v_symbol.Isselected()) )
{

ElementInMove_c v_inMove = new ElementInMove_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_inMove));


if (v_inMove != null) {
  v_inMove.relateAcrossR25To( v_symbol ) ;   v_inMove.relateAcrossR25To( v_model ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_symbol);


Graphedge_c v_edge = Graphedge_c.getOneDIM_EDOnR301(v_graphElem);


if ( (  (v_edge != null)) )
{

Connector_c v_connector = Connector_c.getOneGD_CONOnR20(v_edge);


if ( (v_connector.Startsonws() && v_connector.Endsonws()) )
{

  class LineSegment_test21615_c implements ClassQueryInterface_c
  {
	LineSegment_test21615_c( java.util.UUID         p21616 ) {
		m_p21616 = p21616;
	}
	private java.util.UUID         m_p21616;
	public boolean evaluate (Object candidate)
	{
		LineSegment_c selected = (LineSegment_c)candidate;
		return (selected.getElementid().equals(m_p21616)) ;
	}
  }
LineSegment_c v_segment = LineSegment_c.getOneGD_LSOnR6(v_connector, new LineSegment_test21615_c(v_connector.Getstartingsegmentid()));


if ( (  (v_segment != null)) )
{

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR21(v_segment);


if (v_inMove != null) {
  v_inMove.setStartingx( v_waypoint.getPositionx()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_inMove != null) {
  v_inMove.setStartingy( v_waypoint.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


}

else
{

if (v_inMove != null) {
  v_inMove.setStartingx( v_graphElem.getPositionx()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_inMove != null) {
  v_inMove.setStartingy( v_graphElem.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


}

// Generate event CT_SEL25:TransactionStarted to self
TransactionStarted(true , arch_event.edi_x,arch_event.edi_y ) ;



            }
            state = ST_SELECTION_TOOL_STARTING_TRANSACTION_FOR_DRAGGING_SELECTED_SYMBOLS ;
            break ;
               case ST_SELECTION_TOOL_OPENING_CONTEXT_MENU:
              	// Event Ignored
               break ;
          case ST_SELECTION_TOOL_IDLE:
            {
boolean      v_readonly = false ;


GraphicalElement_c v_symbol = GraphicalElement_c.getOneGD_GEOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


boolean      v_onHotspot = false ;


for ( int i21423 = 0; i21423 < v_symbols.length; i21423++)
{
  v_symbol = v_symbols[i21423] ;

if ( (v_symbol.Isselected() && v_symbol.Isoververtex(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

ElementSpecification_c v_elemSpec = ElementSpecification_c.getOneGD_ESOnR10(v_symbol);


v_readonly = v_readonly || v_elemSpec.getIsfixedsize() ;


if ( (  !v_readonly) )
{

if ( (v_symbol.Isovernwse(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

Gr_c.Setmousecursor(			    
"nwse" ) ;



}

else
{

Gr_c.Setmousecursor(			    
"nesw" ) ;



}

v_onHotspot = true ;


break;



}


}


}

if ( (  !v_onHotspot) )
{

LineSegment_c [] v_segs = LineSegment_c.getManyGD_LSsOnR6(Connector_c.getManyGD_CONsOnR2(v_symbols));


LineSegment_c  v_seg = null;
for ( int i21424 = 0; i21424 < v_segs.length; i21424++)
{
  v_seg = v_segs[i21424] ;

if ( (v_seg.Isselected() && v_seg.Isoververtex(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

if ( (  !v_readonly) )
{

Gr_c.Setmousecursor(			    
"waypoint tool" ) ;


v_onHotspot = true ;


break;



}


}


}


}

if ( (v_onHotspot) && (  !v_readonly) )
{

// Generate event CT_SEL19:MouseMovedOverHotspot to self
MouseMovedOverHotspot(true , Gr_c.Getabsolutexposition(),Gr_c.Getabsoluteyposition() ) ;



}

else
{

// Generate event CT_SEL27:MouseMovedOverNonhotspot to self
MouseMovedOverNonhotspot(true ) ;



}


            }
            state = ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS ;
            break ;
          case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
            {
boolean      v_readonly = false ;


GraphicalElement_c v_symbol = GraphicalElement_c.getOneGD_GEOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


boolean      v_onHotspot = false ;


for ( int i21423 = 0; i21423 < v_symbols.length; i21423++)
{
  v_symbol = v_symbols[i21423] ;

if ( (v_symbol.Isselected() && v_symbol.Isoververtex(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

ElementSpecification_c v_elemSpec = ElementSpecification_c.getOneGD_ESOnR10(v_symbol);


v_readonly = v_readonly || v_elemSpec.getIsfixedsize() ;


if ( (  !v_readonly) )
{

if ( (v_symbol.Isovernwse(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

Gr_c.Setmousecursor(			    
"nwse" ) ;



}

else
{

Gr_c.Setmousecursor(			    
"nesw" ) ;



}

v_onHotspot = true ;


break;



}


}


}

if ( (  !v_onHotspot) )
{

LineSegment_c [] v_segs = LineSegment_c.getManyGD_LSsOnR6(Connector_c.getManyGD_CONsOnR2(v_symbols));


LineSegment_c  v_seg = null;
for ( int i21424 = 0; i21424 < v_segs.length; i21424++)
{
  v_seg = v_segs[i21424] ;

if ( (v_seg.Isselected() && v_seg.Isoververtex(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

if ( (  !v_readonly) )
{

Gr_c.Setmousecursor(			    
"waypoint tool" ) ;


v_onHotspot = true ;


break;



}


}


}


}

if ( (v_onHotspot) && (  !v_readonly) )
{

// Generate event CT_SEL19:MouseMovedOverHotspot to self
MouseMovedOverHotspot(true , Gr_c.Getabsolutexposition(),Gr_c.Getabsoluteyposition() ) ;



}

else
{

// Generate event CT_SEL27:MouseMovedOverNonhotspot to self
MouseMovedOverNonhotspot(true ) ;



}


            }
            state = ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS ;
            break ;
          case ST_SELECTION_TOOL_MOVING_HOTSPOT:
            {
Model_c v_canvas = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(v_canvas);


ElementInResize_c v_resize = ElementInResize_c.getOneGD_EIROnR12(v_canvas);


if ( (  (v_resize != null)) )
{

GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR12(v_resize);


if (v_elem != null) {
v_elem.Movevertex(			    
v_resize.getEnd()			    
,v_resize.getVertex()			    
,arch_event.edi_x			    
,arch_event.edi_y ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_elem)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

else
{

WaypointInMove_c [] v_inMoves = WaypointInMove_c.getManyGD_WIMsOnR24(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


WaypointInMove_c  v_inMove = null;
for ( int i21425 = 0; i21425 < v_inMoves.length; i21425++)
{
  v_inMove = v_inMoves[i21425] ;

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR24(v_inMove);


float        v_xDelta = Ooaofgraphics.Roundtogridsnappoint(modelRoot			    
,true			    
,(Gr_c.Scale(			    
Gr_c.Getabsolutexposition()) + v_diagram.getViewportx())) - v_waypoint.getPositionx() ;


float        v_yDelta = Ooaofgraphics.Roundtogridsnappoint(modelRoot			    
,true			    
,(Gr_c.Scale(			    
Gr_c.Getabsoluteyposition()) + v_diagram.getViewporty())) - v_waypoint.getPositiony() ;


float        v_oldWaypointX = v_waypoint.getPositionx() ;


float        v_oldWaypointY = v_waypoint.getPositiony() ;


LineSegment_c v_segment = LineSegment_c.getOneGD_LSOnR21(v_waypoint);


if ( (  (v_segment != null)) )
{

if (v_segment != null) {
v_segment.Movestart(			    
false			    
,(int)(v_xDelta)			    
,(int)(v_yDelta) ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

v_segment = LineSegment_c.getOneGD_LSOnR22(v_waypoint);


if ( (  (v_segment != null)) )
{

if (v_segment != null) {
v_segment.Moveend(			    
false			    
,(int)(v_xDelta)			    
,(int)(v_yDelta) ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX + v_xDelta) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY + v_yDelta) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR6(LineSegment_c.getOneGD_LSOnR21(v_waypoint)));


if ( (  (v_elem == null)) )
{

v_elem = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR6(LineSegment_c.getOneGD_LSOnR22(v_waypoint)));



}

Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_elem)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


}


            }
            state = ST_SELECTION_TOOL_MOVING_HOTSPOT ;
            break ;
          case ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT:
            {
Model_c v_canvas = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(v_canvas);


ElementInResize_c v_resize = ElementInResize_c.getOneGD_EIROnR12(v_canvas);


if ( (  (v_resize != null)) )
{

GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR12(v_resize);


if (v_elem != null) {
v_elem.Movevertex(			    
v_resize.getEnd()			    
,v_resize.getVertex()			    
,arch_event.edi_x			    
,arch_event.edi_y ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_elem)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

else
{

WaypointInMove_c [] v_inMoves = WaypointInMove_c.getManyGD_WIMsOnR24(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


WaypointInMove_c  v_inMove = null;
for ( int i21425 = 0; i21425 < v_inMoves.length; i21425++)
{
  v_inMove = v_inMoves[i21425] ;

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR24(v_inMove);


float        v_xDelta = Ooaofgraphics.Roundtogridsnappoint(modelRoot			    
,true			    
,(Gr_c.Scale(			    
Gr_c.Getabsolutexposition()) + v_diagram.getViewportx())) - v_waypoint.getPositionx() ;


float        v_yDelta = Ooaofgraphics.Roundtogridsnappoint(modelRoot			    
,true			    
,(Gr_c.Scale(			    
Gr_c.Getabsoluteyposition()) + v_diagram.getViewporty())) - v_waypoint.getPositiony() ;


float        v_oldWaypointX = v_waypoint.getPositionx() ;


float        v_oldWaypointY = v_waypoint.getPositiony() ;


LineSegment_c v_segment = LineSegment_c.getOneGD_LSOnR21(v_waypoint);


if ( (  (v_segment != null)) )
{

if (v_segment != null) {
v_segment.Movestart(			    
false			    
,(int)(v_xDelta)			    
,(int)(v_yDelta) ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

v_segment = LineSegment_c.getOneGD_LSOnR22(v_waypoint);


if ( (  (v_segment != null)) )
{

if (v_segment != null) {
v_segment.Moveend(			    
false			    
,(int)(v_xDelta)			    
,(int)(v_yDelta) ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX + v_xDelta) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY + v_yDelta) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR6(LineSegment_c.getOneGD_LSOnR21(v_waypoint)));


if ( (  (v_elem == null)) )
{

v_elem = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR6(LineSegment_c.getOneGD_LSOnR22(v_waypoint)));



}

Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_elem)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


}


            }
            state = ST_SELECTION_TOOL_MOVING_HOTSPOT ;
            break ;
          case ST_SELECTION_TOOL_STARTING_TRANSACTION_FOR_DRAGGING_SELECTED_SYMBOLS:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


setCurrenttransaction( Cl_c.Starttransaction(			    
v_model.getRepresents()			    
,"Shape(s) movement")) ;


setSymbolmovemousestartx( Gr_c.Getabsolutexposition() - arch_event.edi_x) ;


setSymbolmovemousestarty( Gr_c.Getabsoluteyposition() - arch_event.edi_y) ;


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


GraphicalElement_c  v_symbol = null;
for ( int i21431 = 0; i21431 < v_symbols.length; i21431++)
{
  v_symbol = v_symbols[i21431] ;

if ( (v_symbol.Isselected()) )
{

ElementInMove_c v_inMove = new ElementInMove_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_inMove));


if (v_inMove != null) {
  v_inMove.relateAcrossR25To( v_symbol ) ;   v_inMove.relateAcrossR25To( v_model ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_symbol);


Graphedge_c v_edge = Graphedge_c.getOneDIM_EDOnR301(v_graphElem);


if ( (  (v_edge != null)) )
{

Connector_c v_connector = Connector_c.getOneGD_CONOnR20(v_edge);


if ( (v_connector.Startsonws() && v_connector.Endsonws()) )
{

  class LineSegment_test21615_c implements ClassQueryInterface_c
  {
	LineSegment_test21615_c( java.util.UUID         p21616 ) {
		m_p21616 = p21616;
	}
	private java.util.UUID         m_p21616;
	public boolean evaluate (Object candidate)
	{
		LineSegment_c selected = (LineSegment_c)candidate;
		return (selected.getElementid().equals(m_p21616)) ;
	}
  }
LineSegment_c v_segment = LineSegment_c.getOneGD_LSOnR6(v_connector, new LineSegment_test21615_c(v_connector.Getstartingsegmentid()));


if ( (  (v_segment != null)) )
{

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR21(v_segment);


if (v_inMove != null) {
  v_inMove.setStartingx( v_waypoint.getPositionx()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_inMove != null) {
  v_inMove.setStartingy( v_waypoint.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


}

else
{

if (v_inMove != null) {
  v_inMove.setStartingx( v_graphElem.getPositionx()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_inMove != null) {
  v_inMove.setStartingy( v_graphElem.getPositiony()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


}

// Generate event CT_SEL25:TransactionStarted to self
TransactionStarted(true , arch_event.edi_x,arch_event.edi_y ) ;



            }
            state = ST_SELECTION_TOOL_STARTING_TRANSACTION_FOR_DRAGGING_SELECTED_SYMBOLS ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL4:Mouse Moved", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_RELEASED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MouseReleased in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_RELEASED arch_event = (EV_SELECTION_TOOL_MOUSE_RELEASED)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE:
            {
// Generate event CT_SEL6:Done to self
Done(true ) ;



            }
            state = ST_SELECTION_TOOL_MOUSE_RELEASED ;
            break ;
          case ST_SELECTION_TOOL_SELECTING_SYMBOL:
            {
Disabletextmove() ;


// Generate event CT_SEL6:Done to self
Done(true ) ;



            }
            state = ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE ;
            break ;
          case ST_SELECTION_TOOL_DRAGGING_SYMBOLS:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


Cl_c.Endtransaction(			    
v_model.getRepresents()			    
,getCurrenttransaction() ) ;


ElementInMove_c [] v_inMoves = ElementInMove_c.getManyGD_EIMsOnR25(v_model);


ElementInMove_c  v_inMove = null;
for ( int i21429 = 0; i21429 < v_inMoves.length; i21429++)
{
  v_inMove = v_inMoves[i21429] ;

if (v_inMove != null) {
v_inMove.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

// Generate event CT_SEL3:MouseReleased to self
MouseReleased(true , arch_event.edi_x,arch_event.edi_y ) ;



            }
            state = ST_SELECTION_TOOL_SAVING_SYMBOL_MOVEMENT ;
            break ;
          case ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


if ( (v_model.getSelrectw() < 0) )
{

if (v_model != null) {
  v_model.setSelrectw(   - v_model.getSelrectw()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_model != null) {
  v_model.setSelrectx( v_model.getSelrectx() - v_model.getSelrectw()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

if ( (v_model.getSelrecth() < 0) )
{

if (v_model != null) {
  v_model.setSelrecth(   - v_model.getSelrecth()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_model != null) {
  v_model.setSelrecty( v_model.getSelrecty() - v_model.getSelrecth()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


GraphicalElement_c  v_symbol = null;
for ( int i21421 = 0; i21421 < v_symbols.length; i21421++)
{
  v_symbol = v_symbols[i21421] ;

if ( (v_symbol.Isinside(			    
v_model.getSelrecth()			    
,v_model.getSelrectw()			    
,v_model.getSelrectx()			    
,v_model.getSelrecty())) )
{

if (v_symbol != null) {
v_symbol.Toggleselect() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

if (v_model != null) {
  v_model.setSelrectw( 0) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_model != null) {
  v_model.setSelrecth( 0) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


// Generate event CT_SEL6:Done to self
Done(true ) ;



            }
            state = ST_SELECTION_TOOL_TOGGLING_SYMBOLS_CAUGHT_BY_SELECTION_RECTANGLE ;
            break ;
          case ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS:
            {
Disabletextmove() ;


// Generate event CT_SEL6:Done to self
Done(true ) ;



            }
            state = ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE ;
            break ;
          case ST_SELECTION_TOOL_OPENING_CONTEXT_MENU:
            {
boolean      v_readonly = false ;


GraphicalElement_c v_symbol = GraphicalElement_c.getOneGD_GEOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


boolean      v_onHotspot = false ;


for ( int i21423 = 0; i21423 < v_symbols.length; i21423++)
{
  v_symbol = v_symbols[i21423] ;

if ( (v_symbol.Isselected() && v_symbol.Isoververtex(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

ElementSpecification_c v_elemSpec = ElementSpecification_c.getOneGD_ESOnR10(v_symbol);


v_readonly = v_readonly || v_elemSpec.getIsfixedsize() ;


if ( (  !v_readonly) )
{

if ( (v_symbol.Isovernwse(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

Gr_c.Setmousecursor(			    
"nwse" ) ;



}

else
{

Gr_c.Setmousecursor(			    
"nesw" ) ;



}

v_onHotspot = true ;


break;



}


}


}

if ( (  !v_onHotspot) )
{

LineSegment_c [] v_segs = LineSegment_c.getManyGD_LSsOnR6(Connector_c.getManyGD_CONsOnR2(v_symbols));


LineSegment_c  v_seg = null;
for ( int i21424 = 0; i21424 < v_segs.length; i21424++)
{
  v_seg = v_segs[i21424] ;

if ( (v_seg.Isselected() && v_seg.Isoververtex(			    
Gr_c.Getabsolutexposition()			    
,Gr_c.Getabsoluteyposition())) )
{

if ( (  !v_readonly) )
{

Gr_c.Setmousecursor(			    
"waypoint tool" ) ;


v_onHotspot = true ;


break;



}


}


}


}

if ( (v_onHotspot) && (  !v_readonly) )
{

// Generate event CT_SEL19:MouseMovedOverHotspot to self
MouseMovedOverHotspot(true , Gr_c.Getabsolutexposition(),Gr_c.Getabsoluteyposition() ) ;



}

else
{

// Generate event CT_SEL27:MouseMovedOverNonhotspot to self
MouseMovedOverNonhotspot(true ) ;



}


            }
            state = ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS ;
            break ;
          case ST_SELECTION_TOOL_SAVING_SYMBOL_RESIZE:
            {
if ( (getShouldrestorecursorshape()) )
{

setShouldrestorecursorshape( false) ;


// Generate event CT_SEL4:MouseMoved to self
MouseMoved(true , 0,0 ) ;



}


            }
            state = ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT ;
            break ;
          case ST_SELECTION_TOOL_MOVING_HOTSPOT:
            {
Model_c v_canvas = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


ElementInResize_c v_resize = ElementInResize_c.getOneGD_EIROnR12(v_canvas);


if ( (  (v_resize != null)) )
{

if (v_resize != null) {
v_resize.Finish() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_resize != null) {
v_resize.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

WaypointInMove_c [] v_inMoves = WaypointInMove_c.getManyGD_WIMsOnR24(v_canvas);


WaypointInMove_c  v_inMove = null;
for ( int i21430 = 0; i21430 < v_inMoves.length; i21430++)
{
  v_inMove = v_inMoves[i21430] ;

if (v_inMove != null) {
v_inMove.Finalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR24(v_inMove);


if (v_inMove != null) {
v_inMove.unrelateAcrossR24From( v_canvas ) ; v_inMove.unrelateAcrossR24From( v_waypoint ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_inMove != null) {
// get the location of this element in the instance list
// before deleting
if ( v_inMove.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_inMove));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


Waypointmoved(			    
v_waypoint.getWay_id() ) ;



}

Cl_c.Endtransaction(			    
v_canvas.getRepresents()			    
,getCurrenttransaction() ) ;


setShouldrestorecursorshape( (  (v_inMoves.length != 0))) ;


// Generate event CT_SEL3:MouseReleased to self
MouseReleased(true , arch_event.edi_x,arch_event.edi_y ) ;



            }
            state = ST_SELECTION_TOOL_SAVING_SYMBOL_RESIZE ;
            break ;
          case ST_SELECTION_TOOL_STARTING_TRANSACTION_FOR_DRAGGING_SELECTED_SYMBOLS:
            {
Disabletextmove() ;


// Generate event CT_SEL6:Done to self
Done(true ) ;



            }
            state = ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE ;
            break ;
          case ST_SELECTION_TOOL_SAVING_SYMBOL_MOVEMENT:
            {
Disabletextmove() ;


// Generate event CT_SEL6:Done to self
Done(true ) ;



            }
            state = ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE ;
            break ;
          case ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


Cl_c.Canceltransaction(			    
v_model.getRepresents()			    
,getCurrenttransaction() ) ;


ElementInResize_c v_resize = ElementInResize_c.getOneGD_EIROnR12(v_model);


if ( (  (v_resize != null)) )
{

GraphicalElement_c v_symbol = GraphicalElement_c.getOneGD_GEOnR12(v_resize);


if (v_resize != null) {
v_resize.unrelateAcrossR12From( v_model ) ; v_resize.unrelateAcrossR12From( v_symbol ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_resize != null) {
// get the location of this element in the instance list
// before deleting
if ( v_resize.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_resize));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

WaypointInMove_c [] v_inMoves = WaypointInMove_c.getManyGD_WIMsOnR24(v_model);


WaypointInMove_c  v_inMove = null;
for ( int i21432 = 0; i21432 < v_inMoves.length; i21432++)
{
  v_inMove = v_inMoves[i21432] ;

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR24(v_inMove);


if (v_inMove != null) {
v_inMove.unrelateAcrossR24From( v_model ) ; v_inMove.unrelateAcrossR24From( v_waypoint ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_inMove != null) {
// get the location of this element in the instance list
// before deleting
if ( v_inMove.delete() ) {
    Ooaofgraphics.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_inMove));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

// Generate event CT_SEL28:TransactionCancelled to self
TransactionCancelled(true , arch_event.edi_x,arch_event.edi_y ) ;



            }
            state = ST_SELECTION_TOOL_CANCELLING_RESIZE_TRANSACTION ;
            break ;
               case ST_SELECTION_TOOL_IDLE:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL3:Mouse Released", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MousePressedOverSymbol in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL arch_event = (EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SYMBOL)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS:
            {
if ( (  !arch_event.edi_retain_selection) )
{

Unselectall() ;



}

GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


GraphicalElement_c v_selSymbol = GraphicalElement_c.getOneGD_GEOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


boolean      v_selectionFound = false ;


GraphicalElement_c  v_symbol = null;
for ( int i21419 = 0; i21419 < v_symbols.length; i21419++)
{
  v_symbol = v_symbols[i21419] ;

if ( (v_symbol.Isover(			    
arch_event.edi_x			    
,arch_event.edi_y)) )
{

v_selectionFound = true ;


v_selSymbol = v_symbol ;



}


}

if ( (v_selectionFound) )
{

if (v_selSymbol != null) {
v_selSymbol.Toggleselect() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Enabletextmoveunder(			    
arch_event.edi_x			    
,arch_event.edi_y ) ;



            }
            state = ST_SELECTION_TOOL_SELECTING_SYMBOL ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL9:Mouse Pressed over Symbol", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_PRESSED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MousePressed in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_PRESSED arch_event = (EV_SELECTION_TOOL_MOUSE_PRESSED)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_IDLE:
            {
GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


boolean      v_over_unselected = false ;


boolean      v_symbol_found = false ;


boolean      v_over_unselected_container = false ;


GraphicalElement_c  v_symbol = null;
for ( int i21418 = 0; i21418 < v_symbols.length; i21418++)
{
  v_symbol = v_symbols[i21418] ;

if ( (v_symbol.Isover(			    
arch_event.edi_x			    
,arch_event.edi_y)) )
{

v_symbol_found = true ;


if ( (v_symbol.Isselected()) )
{

ContainingShape_c v_ctrShp = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR2(v_symbol));


if ( (  (v_ctrShp != null)) )
{

v_over_unselected_container = true ;


continue;



}

if ( (  !arch_event.edi_retain_selection) )
{

// Generate event CT_SEL12:MousePressedOverSelectedSymbol to self
MousePressedOverSelectedSymbol(true , arch_event.edi_x,arch_event.edi_y ) ;



}

else
{

// Generate event CT_SEL9:MousePressedOverSymbol to self
MousePressedOverSymbol(true , arch_event.edi_retain_selection,arch_event.edi_x,arch_event.edi_y ) ;



}

v_over_unselected = false ;


break;



}

else
{

v_over_unselected = true ;



}


}


}

if ( (v_over_unselected_container &&   !v_over_unselected) )
{

if ( (  !arch_event.edi_retain_selection) )
{

// Generate event CT_SEL12:MousePressedOverSelectedSymbol to self
MousePressedOverSelectedSymbol(true , arch_event.edi_x,arch_event.edi_y ) ;



}

else
{

// Generate event CT_SEL9:MousePressedOverSymbol to self
MousePressedOverSymbol(true , arch_event.edi_retain_selection,arch_event.edi_x,arch_event.edi_y ) ;



}


}

else
{

if ( (  !v_symbol_found) )
{

// Generate event CT_SEL8:MousePressedOverWhitespace to self
MousePressedOverWhitespace(true , arch_event.edi_retain_selection,arch_event.edi_x,arch_event.edi_y ) ;



}

else if ( (v_over_unselected) )
{

// Generate event CT_SEL9:MousePressedOverSymbol to self
MousePressedOverSymbol(true , arch_event.edi_retain_selection,arch_event.edi_x,arch_event.edi_y ) ;



}


}


            }
            state = ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS ;
            break ;
          case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
            {
Model_c v_canvas = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


setCurrenttransaction( Cl_c.Starttransaction(			    
v_canvas.getRepresents()			    
,"Symbol Resize")) ;


boolean      v_found_elem = false ;


int          v_x = Gr_c.Getabsolutexposition() ;


int          v_y = Gr_c.Getabsoluteyposition() ;


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(v_canvas);


GraphicalElement_c  v_symbol = null;
for ( int i21426 = 0; i21426 < v_symbols.length; i21426++)
{
  v_symbol = v_symbols[i21426] ;

if ( (v_symbol.Isselected() && v_symbol.Isoververtex(			    
v_x			    
,v_y)) )
{

ElementInResize_c v_eir = ElementInResize_c.getOneGD_EIROnR12(v_canvas);


if ( (  (v_eir != null)) )
{

if (v_eir != null) {
v_eir.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ElementInResize_c v_resize = new ElementInResize_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_resize));


if (v_resize != null) {
  v_resize.relateAcrossR12To( v_canvas ) ;   v_resize.relateAcrossR12To( v_symbol ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_resize != null) {
v_resize.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_found_elem = true ;


break;



}


}

if ( (  !v_found_elem) )
{

Connector_c [] v_cons = Connector_c.getManyGD_CONsOnR2(v_symbols);


boolean      v_checkingConsEndingOnCons = true ;


boolean      v_waypointCheckComplete = false ;


while ( (  !v_waypointCheckComplete) )
{

Connector_c  v_con = null;
for ( int i21427 = 0; i21427 < v_cons.length; i21427++)
{
  v_con = v_cons[i21427] ;

Connector_c v_targCon = Connector_c.getOneGD_CONOnR2(GraphicalElement_c.getOneGD_GEOnR23(Graphelement_c.getOneDIM_GEOnR311(Graphconnector_c.getOneDIM_CONOnR321(Graphedge_c.getOneDIM_EDOnR20(v_con)))));


if ( ((v_checkingConsEndingOnCons &&   (v_targCon != null)) || (  !v_checkingConsEndingOnCons &&   (v_targCon == null))) )
{

LineSegment_c [] v_segs = LineSegment_c.getManyGD_LSsOnR6(v_con);


LineSegment_c  v_seg = null;
for ( int i21428 = 0; i21428 < v_segs.length; i21428++)
{
  v_seg = v_segs[i21428] ;

if ( (v_seg.Isselected() && v_seg.Isoververtex(			    
v_x			    
,v_y)) )
{

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR21(v_seg);


if ( (v_seg.Isoverend(			    
v_x			    
,v_y)) )
{

v_waypoint = Waypoint_c.getOneDIM_WAYOnR22(v_seg);



}

  class WaypointInMove_test21472_c implements ClassQueryInterface_c
  {
	WaypointInMove_test21472_c( java.util.UUID         p21473 ) {
		m_p21473 = p21473;
	}
	private java.util.UUID         m_p21473;
	public boolean evaluate (Object candidate)
	{
		WaypointInMove_c selected = (WaypointInMove_c)candidate;
		return selected.getWay_id().equals(m_p21473) ;
	}
  }
WaypointInMove_c v_alreadyInMove = WaypointInMove_c.WaypointInMoveInstance(modelRoot, new WaypointInMove_test21472_c(v_waypoint.getWay_id())) ;


if ( (  (v_alreadyInMove != null)) )
{

continue;



}

WaypointInMove_c v_inMove = new WaypointInMove_c(modelRoot) ;
Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_inMove));


if (v_inMove != null) {
  v_inMove.relateAcrossR24To( v_canvas ) ;   v_inMove.relateAcrossR24To( v_waypoint ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_inMove != null) {
v_inMove.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


}

if ( (  !v_checkingConsEndingOnCons || v_found_elem) )
{

v_waypointCheckComplete = true ;



}

v_checkingConsEndingOnCons = false ;



}


}


            }
            state = ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL2:Mouse Pressed", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MousePressedOverWhitespace in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE arch_event = (EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_WHITESPACE)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS:
            {
if ( (  !arch_event.edi_retain_selection) )
{

Unselectall() ;



}

Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(v_model);


if (v_model != null) {
  v_model.setSelrectx( (int)(Gr_c.Scale(			    
arch_event.edi_x) + v_diagram.getViewportx())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_model != null) {
  v_model.setSelrecty( (int)(Gr_c.Scale(			    
arch_event.edi_y) + v_diagram.getViewporty())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_model != null) {
  v_model.setSelrectw( 0) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_model != null) {
  v_model.setSelrecth( 0) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



            }
            state = ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL8:Mouse Pressed over Whitespace", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_DONE:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.Done in " + state) ; 
          final EV_SELECTION_TOOL_DONE arch_event = (EV_SELECTION_TOOL_DONE)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_TOGGLING_SYMBOLS_CAUGHT_BY_SELECTION_RECTANGLE:
            {
Gr_c.Setmousecursor(			    
"default" ) ;


setShouldrestorecursorshape( false) ;



            }
            state = ST_SELECTION_TOOL_IDLE ;
            break ;
          case ST_SELECTION_TOOL_MOUSE_RELEASED:
            {
Gr_c.Setmousecursor(			    
"default" ) ;


setShouldrestorecursorshape( false) ;



            }
            state = ST_SELECTION_TOOL_IDLE ;
            break ;
          case ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE:
            {
Gr_c.Setmousecursor(			    
"default" ) ;


setShouldrestorecursorshape( false) ;



            }
            state = ST_SELECTION_TOOL_IDLE ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL6:Done", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MousePressedOverSelectedSymbol in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL arch_event = (EV_SELECTION_TOOL_MOUSE_PRESSED_OVER_SELECTED_SYMBOL)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS:
            {
Enabletextmoveunder(			    
arch_event.edi_x			    
,arch_event.edi_y ) ;



            }
            state = ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL12:Mouse Pressed over Selected Symbol", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MouseContextPressed in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED arch_event = (EV_SELECTION_TOOL_MOUSE_CONTEXT_PRESSED)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_IDLE:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


boolean      v_onSymbol = false ;


GraphicalElement_c  v_symbol = null;
for ( int i21422 = 0; i21422 < v_symbols.length; i21422++)
{
  v_symbol = v_symbols[i21422] ;

if ( (v_symbol.Isover(			    
arch_event.edi_x			    
,arch_event.edi_y)) )
{

v_onSymbol = true ;


if ( (  !v_symbol.Isselected()) )
{

Unselectall() ;


if (v_symbol != null) {
v_symbol.Toggleselect() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Cl_c.Setonsymbol(			    
true ) ;



}

break;



}


}

if ( (v_model.Hascontainersymbol()) )
{

  class ElementSpecification_test21614_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ElementSpecification_c selected = (ElementSpecification_c)candidate;
		return (selected.getSymboltype().equals("container") && selected.getCreationrule().equals("on canvas creation")) ;
	}
  }
ElementSpecification_c v_containerSpec = ElementSpecification_c.getOneGD_ESOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(ModelSpecification_c.getManyGD_MSsOnR9(v_model)), new ElementSpecification_test21614_c());


if ( (  (v_containerSpec != null)) )
{

ContainingShape_c v_element = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(v_model)));


if ( (  (v_element != null)) )
{

if ( (v_element.Isoveranypartof(			    
arch_event.edi_x			    
,arch_event.edi_y)) )
{

Cl_c.Addtoselection(			    
v_model.getRepresents() ) ;


Cl_c.Setrightclickcoordinates(			    
arch_event.edi_x			    
,arch_event.edi_y ) ;



}

else
{

Unselectall() ;



}


}


}


}

if ( ((v_onSymbol == false) &&   !(v_model.Hascontainersymbol())) )
{

Cl_c.Setonsymbol(			    
false ) ;


Cl_c.Addtoselection(			    
v_model.getRepresents() ) ;


Cl_c.Setrightclickcoordinates(			    
arch_event.edi_x			    
,arch_event.edi_y ) ;



}


            }
            state = ST_SELECTION_TOOL_OPENING_CONTEXT_MENU ;
            break ;
          case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
            {
Model_c v_model = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


boolean      v_onSymbol = false ;


GraphicalElement_c  v_symbol = null;
for ( int i21422 = 0; i21422 < v_symbols.length; i21422++)
{
  v_symbol = v_symbols[i21422] ;

if ( (v_symbol.Isover(			    
arch_event.edi_x			    
,arch_event.edi_y)) )
{

v_onSymbol = true ;


if ( (  !v_symbol.Isselected()) )
{

Unselectall() ;


if (v_symbol != null) {
v_symbol.Toggleselect() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Cl_c.Setonsymbol(			    
true ) ;



}

break;



}


}

if ( (v_model.Hascontainersymbol()) )
{

  class ElementSpecification_test21614_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ElementSpecification_c selected = (ElementSpecification_c)candidate;
		return (selected.getSymboltype().equals("container") && selected.getCreationrule().equals("on canvas creation")) ;
	}
  }
ElementSpecification_c v_containerSpec = ElementSpecification_c.getOneGD_ESOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(ModelSpecification_c.getManyGD_MSsOnR9(v_model)), new ElementSpecification_test21614_c());


if ( (  (v_containerSpec != null)) )
{

ContainingShape_c v_element = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getManyGD_SHPsOnR2(GraphicalElement_c.getManyGD_GEsOnR1(v_model)));


if ( (  (v_element != null)) )
{

if ( (v_element.Isoveranypartof(			    
arch_event.edi_x			    
,arch_event.edi_y)) )
{

Cl_c.Addtoselection(			    
v_model.getRepresents() ) ;


Cl_c.Setrightclickcoordinates(			    
arch_event.edi_x			    
,arch_event.edi_y ) ;



}

else
{

Unselectall() ;



}


}


}


}

if ( ((v_onSymbol == false) &&   !(v_model.Hascontainersymbol())) )
{

Cl_c.Setonsymbol(			    
false ) ;


Cl_c.Addtoselection(			    
v_model.getRepresents() ) ;


Cl_c.Setrightclickcoordinates(			    
arch_event.edi_x			    
,arch_event.edi_y ) ;



}


            }
            state = ST_SELECTION_TOOL_OPENING_CONTEXT_MENU ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL5:Mouse Context Pressed", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_SPACE_PRESSED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.SpacePressed in " + state) ; 
          final EV_SELECTION_TOOL_SPACE_PRESSED arch_event = (EV_SELECTION_TOOL_SPACE_PRESSED)currentEvent ;
          switch (state)
          {
               case ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_SELECTING_SYMBOL:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_OPENING_CONTEXT_MENU:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOVING_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_TOGGLING_SYMBOLS_CAUGHT_BY_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_IDLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOUSE_RELEASED:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL14:Space Pressed", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_SPACE_RELEASED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.SpaceReleased in " + state) ; 
          final EV_SELECTION_TOOL_SPACE_RELEASED arch_event = (EV_SELECTION_TOOL_SPACE_RELEASED)currentEvent ;
          switch (state)
          {
               case ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_SELECTING_SYMBOL:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_OPENING_CONTEXT_MENU:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOVING_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_TOGGLING_SYMBOLS_CAUGHT_BY_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_IDLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOUSE_RELEASED:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL15:Space Released", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MouseMovedOverWhitespace in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE arch_event = (EV_SELECTION_TOOL_MOUSE_MOVED_OVER_WHITESPACE)currentEvent ;
          switch (state)
          {
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL18:Mouse Moved over Whitespace", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MouseMovedOverHotspot in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT arch_event = (EV_SELECTION_TOOL_MOUSE_MOVED_OVER_HOTSPOT)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
            {
if ( (getShouldrestorecursorshape()) )
{

setShouldrestorecursorshape( false) ;


// Generate event CT_SEL4:MouseMoved to self
MouseMoved(true , 0,0 ) ;



}


            }
            state = ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL19:Mouse Moved over Hotspot", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_EXITED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MouseExited in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_EXITED arch_event = (EV_SELECTION_TOOL_MOUSE_EXITED)currentEvent ;
          switch (state)
          {
               case ST_SELECTION_TOOL_IDLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL22:Mouse Exited", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_ENTERED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MouseEntered in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_ENTERED arch_event = (EV_SELECTION_TOOL_MOUSE_ENTERED)currentEvent ;
          switch (state)
          {
               case ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_SELECTING_SYMBOL:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_OPENING_CONTEXT_MENU:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_IDLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL23:Mouse Entered", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_WAYPOINT_CREATED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.WaypointCreated in " + state) ; 
          final EV_SELECTION_TOOL_WAYPOINT_CREATED arch_event = (EV_SELECTION_TOOL_WAYPOINT_CREATED)currentEvent ;
          switch (state)
          {
               case ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_SELECTING_SYMBOL:
              	// Event Ignored
               break ;
          case ST_SELECTION_TOOL_DRAGGING_SYMBOLS:
            {
Model_c v_canvas = Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this));


Diagram_c v_diagram = Diagram_c.getOneDIM_DIAOnR18(v_canvas);


ElementInResize_c v_resize = ElementInResize_c.getOneGD_EIROnR12(v_canvas);


if ( (  (v_resize != null)) )
{

GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR12(v_resize);


if (v_elem != null) {
v_elem.Movevertex(			    
v_resize.getEnd()			    
,v_resize.getVertex()			    
,arch_event.edi_x			    
,arch_event.edi_y ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_elem)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

else
{

WaypointInMove_c [] v_inMoves = WaypointInMove_c.getManyGD_WIMsOnR24(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


WaypointInMove_c  v_inMove = null;
for ( int i21425 = 0; i21425 < v_inMoves.length; i21425++)
{
  v_inMove = v_inMoves[i21425] ;

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR24(v_inMove);


float        v_xDelta = Ooaofgraphics.Roundtogridsnappoint(modelRoot			    
,true			    
,(Gr_c.Scale(			    
Gr_c.Getabsolutexposition()) + v_diagram.getViewportx())) - v_waypoint.getPositionx() ;


float        v_yDelta = Ooaofgraphics.Roundtogridsnappoint(modelRoot			    
,true			    
,(Gr_c.Scale(			    
Gr_c.Getabsoluteyposition()) + v_diagram.getViewporty())) - v_waypoint.getPositiony() ;


float        v_oldWaypointX = v_waypoint.getPositionx() ;


float        v_oldWaypointY = v_waypoint.getPositiony() ;


LineSegment_c v_segment = LineSegment_c.getOneGD_LSOnR21(v_waypoint);


if ( (  (v_segment != null)) )
{

if (v_segment != null) {
v_segment.Movestart(			    
false			    
,(int)(v_xDelta)			    
,(int)(v_yDelta) ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

v_segment = LineSegment_c.getOneGD_LSOnR22(v_waypoint);


if ( (  (v_segment != null)) )
{

if (v_segment != null) {
v_segment.Moveend(			    
false			    
,(int)(v_xDelta)			    
,(int)(v_yDelta) ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}

if (v_waypoint != null) {
  v_waypoint.setPositionx( v_oldWaypointX + v_xDelta) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_waypoint != null) {
  v_waypoint.setPositiony( v_oldWaypointY + v_yDelta) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR6(LineSegment_c.getOneGD_LSOnR21(v_waypoint)));


if ( (  (v_elem == null)) )
{

v_elem = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR6(LineSegment_c.getOneGD_LSOnR22(v_waypoint)));



}

Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_elem)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


}


            }
            state = ST_SELECTION_TOOL_MOVING_HOTSPOT ;
            break ;
               case ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_OPENING_CONTEXT_MENU:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOVING_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_TOGGLING_SYMBOLS_CAUGHT_BY_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_IDLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOUSE_RELEASED:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL24:Waypoint Created", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_DEACTIVATED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.Deactivated in " + state) ; 
          final EV_SELECTION_TOOL_DEACTIVATED arch_event = (EV_SELECTION_TOOL_DEACTIVATED)currentEvent ;
          switch (state)
          {
               case ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_SELECTING_SYMBOL:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_OPENING_CONTEXT_MENU:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOVING_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_TOGGLING_SYMBOLS_CAUGHT_BY_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_IDLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOUSE_RELEASED:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL17:Deactivated", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_ACTIVATED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.Activated in " + state) ; 
          final EV_SELECTION_TOOL_ACTIVATED arch_event = (EV_SELECTION_TOOL_ACTIVATED)currentEvent ;
          switch (state)
          {
               case ST_SELECTION_TOOL_CHECKING_MOUSE_PRESS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_PREPARING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_SELECTING_SYMBOL:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SYMBOLS:
              	// Event Ignored
               break ;
          case ST_SELECTION_TOOL_IDLE:
            {
Gr_c.Setmousecursor(			    
"default" ) ;


setShouldrestorecursorshape( false) ;



            }
            state = ST_SELECTION_TOOL_IDLE ;
            break ;
               case ST_SELECTION_TOOL_PICKING_UP_SELECTED_SYMBOLS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_OPENING_CONTEXT_MENU:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOVING_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_DRAGGING_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_TOGGLING_SYMBOLS_CAUGHT_BY_SELECTION_RECTANGLE:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_MOUSE_RELEASED:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_WAITING_TO_MOVE_HOTSPOT:
              	// Event Ignored
               break ;
               case ST_SELECTION_TOOL_RELEASING_TEXT_IN_MOVE:
              	// Event Ignored
               break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL16:Activated", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_TRANSACTION_STARTED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.TransactionStarted in " + state) ; 
          final EV_SELECTION_TOOL_TRANSACTION_STARTED arch_event = (EV_SELECTION_TOOL_TRANSACTION_STARTED)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_STARTING_TRANSACTION_FOR_DRAGGING_SELECTED_SYMBOLS:
            {
FloatingText_c v_con_text = FloatingText_c.getOneGD_CTXTOnR14(Model_c.getOneGD_MDOnR100(ModelTool_c.getOneCT_MTLOnR102(this)));


if ( (  (v_con_text != null)) )
{

if (v_con_text != null) {
v_con_text.Move(			    
Gr_c.Scale(			    
arch_event.edi_x)			    
,Gr_c.Scale(			    
arch_event.edi_y) ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


GraphicalElement_c v_elem = GraphicalElement_c.getOneGD_GEOnR2(Connector_c.getOneGD_CONOnR8(v_con_text));


if ( (  (v_elem == null)) )
{

v_elem = GraphicalElement_c.getOneGD_GEOnR2(Shape_c.getOneGD_SHPOnR27(v_con_text));



}

Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_elem)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

if (v_containerShape != null) {
v_containerShape.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

else
{

int          v_mouseX = Gr_c.Getabsolutexposition() ;


int          v_mouseY = Gr_c.Getabsoluteyposition() ;


GraphicalElement_c [] v_symbols = GraphicalElement_c.getManyGD_GEsOnR1(Model_c.getManyGD_MDsOnR100(ModelTool_c.getManyCT_MTLsOnR102(this)));


ContainingShape_c v_container = (ContainingShape_c) modelRoot.getInstanceList(ContainingShape_c.class).getGlobal(null, Os_c.Null_unique_id());


boolean      v_resize = false ;


GraphicalElement_c  v_symbol = null;
for ( int i21420 = 0; i21420 < v_symbols.length; i21420++)
{
  v_symbol = v_symbols[i21420] ;

if ( (v_symbol.Isselected()) )
{

int          v_positionX = 0 ;


int          v_positionY = 0 ;


ElementInMove_c v_inMove = ElementInMove_c.getOneGD_EIMOnR25(v_symbol);


Graphelement_c v_graphElem = Graphelement_c.getOneDIM_GEOnR23(v_symbol);


Graphedge_c v_edge = Graphedge_c.getOneDIM_EDOnR301(v_graphElem);


if ( (  (v_edge != null)) )
{

Connector_c v_connector = Connector_c.getOneGD_CONOnR20(v_edge);


if ( (v_connector.Startsonws() && v_connector.Endsonws()) )
{

  class LineSegment_test21612_c implements ClassQueryInterface_c
  {
	LineSegment_test21612_c( java.util.UUID         p21613 ) {
		m_p21613 = p21613;
	}
	private java.util.UUID         m_p21613;
	public boolean evaluate (Object candidate)
	{
		LineSegment_c selected = (LineSegment_c)candidate;
		return (selected.getElementid().equals(m_p21613)) ;
	}
  }
LineSegment_c v_segment = LineSegment_c.getOneGD_LSOnR6(v_connector, new LineSegment_test21612_c(v_connector.Getstartingsegmentid()));


if ( (  (v_segment != null)) )
{

Waypoint_c v_waypoint = Waypoint_c.getOneDIM_WAYOnR21(v_segment);


v_positionX = (int)(v_waypoint.getPositionx()) ;


v_positionY = (int)(v_waypoint.getPositiony()) ;



}


}


}

else
{

v_positionX = (int)(v_graphElem.getPositionx()) ;


v_positionY = (int)(v_graphElem.getPositiony()) ;



}

int          v_dx = (v_mouseX - getSymbolmovemousestartx()) - Gr_c.Unscale(			    
(int)((v_positionX - v_inMove.getStartingx()))) ;


int          v_dy = (v_mouseY - getSymbolmovemousestarty()) - Gr_c.Unscale(			    
(int)((v_positionY - v_inMove.getStartingy()))) ;


if (v_symbol != null) {
v_symbol.Move(			    
v_dx			    
,v_dy ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Graphelement_c v_containingShape = Graphelement_c.getOneDIM_GEOnR307(Diagramelement_c.getOneDIM_ELEOnR302(Graphelement_c.getOneDIM_GEOnR23(v_symbol)));


if ( (  (v_containingShape != null)) )
{

ContainingShape_c v_containerShape = ContainingShape_c.getOneGD_CTROnR28(Shape_c.getOneGD_SHPOnR19(Graphnode_c.getOneDIM_NDOnR301(v_containingShape)));


if ( (  (v_containerShape != null)) )
{

v_resize = true ;


v_container = v_containerShape ;



}


}


}


}

if ( (v_resize) )
{

if (v_container != null) {
v_container.Autoresize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

Gr_c.Redraw() ;



            }
            state = ST_SELECTION_TOOL_DRAGGING_SYMBOLS ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL25:Transaction Started", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.MouseMovedOverNonhotspot in " + state) ; 
          final EV_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT arch_event = (EV_SELECTION_TOOL_MOUSE_MOVED_OVER_NONHOTSPOT)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_CHECKING_FOR_HOTSPOTS:
            {
Gr_c.Setmousecursor(			    
"default" ) ;


setShouldrestorecursorshape( false) ;



            }
            state = ST_SELECTION_TOOL_IDLE ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL27:Mouse Moved over NonHotspot", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
        case EVCD_SELECTION_TOOL_TRANSACTION_CANCELLED:
        {
        Ooaofgraphics.log.println(ILogger.STATE_MACHINE, "Selection Tool", " Event dequeued: SelectionTool.TransactionCancelled in " + state) ; 
          final EV_SELECTION_TOOL_TRANSACTION_CANCELLED arch_event = (EV_SELECTION_TOOL_TRANSACTION_CANCELLED)currentEvent ;
          switch (state)
          {
          case ST_SELECTION_TOOL_CANCELLING_RESIZE_TRANSACTION:
            {
if ( (getShouldrestorecursorshape()) )
{

setShouldrestorecursorshape( false) ;


// Generate event CT_SEL4:MouseMoved to self
MouseMoved(true , 0,0 ) ;



}


            }
            state = ST_SELECTION_TOOL_WAITING_FOR_MOUSE_PRESS_OVER_HOTSPOT ;
            break ;
            default:
          CanvasPlugin.logError(" Can't Happen:  Selection Tool state = " + state + " event = CT_SEL28:Transaction Cancelled", null);
          // throw cantHappenException here ;
          }  // end state switch
          break ;
        }
      } // end currentEvent switch
	} // end if currentEvent valid
  } // end Selection Tool procEvent

  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Selection Tool
