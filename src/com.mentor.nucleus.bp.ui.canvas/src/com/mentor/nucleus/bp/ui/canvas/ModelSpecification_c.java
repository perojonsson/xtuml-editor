      
package com.mentor.nucleus.bp.ui.canvas ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.ui.canvas.ModelSpecification_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

import com.mentor.nucleus.bp.core.*;
import org.eclipse.swt.graphics.GC;
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.swt.graphics.Color;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_MODEL_SPECIFICATION extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ModelSpecification_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ModelSpecification_c(ModelRoot modelRoot,
       int  p_m_model_type,
       int  p_m_ooa_type,
       String       p_m_name,
       Color p_m_background,
       Class p_m_represents)
  {
    super(modelRoot);
       m_model_type = p_m_model_type;
       m_ooa_type = p_m_ooa_type;
       m_name = p_m_name;
       m_background = p_m_background;
       m_represents = p_m_represents;
        
  }
  static public ModelSpecification_c createProxy(ModelRoot modelRoot,
       int  p_m_model_type,
       int  p_m_ooa_type,
       String       p_m_name,
       Color p_m_background,
       Class p_m_represents, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ModelSpecification_c.class);
      ModelSpecification_c new_inst = null;
      synchronized(instances) {
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_model_type = p_m_model_type;
       new_inst.m_ooa_type = p_m_ooa_type;
       new_inst.m_name = p_m_name;
       new_inst.m_background = p_m_background;
       new_inst.m_represents = p_m_represents;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ModelSpecification_c(modelRoot,
p_m_model_type,
p_m_ooa_type,
p_m_name,
p_m_background,
p_m_represents
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ModelSpecification_c resolveInstance(ModelRoot modelRoot,
       int  p_m_model_type,
       int  p_m_ooa_type,
       String       p_m_name,
       Color p_m_background,
       Class p_m_represents){
    InstanceList instances = modelRoot.getInstanceList(ModelSpecification_c.class);
    ModelSpecification_c source = null;
    synchronized(instances) {
        Object [] key = {
        new UUID(0, new Long(p_m_ooa_type))
        ,
        new UUID(0, new Long(p_m_model_type))
            };
        source = (ModelSpecification_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_model_type = p_m_model_type;
       source.m_ooa_type = p_m_ooa_type;
       source.m_name = p_m_name;
       source.m_background = p_m_background;
       source.m_represents = p_m_represents;
        
           return source ;
        }
      }
      // there is no instance matching the id
    ModelSpecification_c new_inst = new ModelSpecification_c(modelRoot,
p_m_model_type,
p_m_ooa_type,
p_m_name,
p_m_background,
p_m_represents
);
    return new_inst;
  }
  public ModelSpecification_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_model_type = Modeltype_c.OOA_UNINITIALIZED_ENUM;
     m_ooa_type = Ooatype_c.OOA_UNINITIALIZED_ENUM;
     m_name = "";   
  }




  public boolean equals (Object elem) {
     if (!(elem instanceof ModelSpecification_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ModelSpecification_c)) {
           return false;
       }
       
       ModelSpecification_c me = (ModelSpecification_c)elem;
      if (getOoa_type() != ((ModelSpecification_c)elem).getOoa_type()) return false;
      if (getModel_type() != ((ModelSpecification_c)elem).getModel_type()) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ModelSpecification_c)) {
           return false;
       }
       
       ModelSpecification_c me = (ModelSpecification_c)elem;
      if (getOoa_type() != ((ModelSpecification_c)elem).getOoa_type()) return false;
      if (getModel_type() != ((ModelSpecification_c)elem).getModel_type()) return false;
      return true;
    }


  // Attributes
  private int  m_model_type ;
  private int  m_ooa_type ;
  private String       m_name ;
  private Color m_background ;
  private Class m_represents ;

// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<Model_c> backPointer_HasInstanceModelHasInstance_R9 = new ArrayList<Model_c>();

public void setModelOrderInChildListR9(Model_c target, int index) {
	unrelateAcrossR9From(target);
	Model_c[] elements = Model_c.getManyGD_MDsOnR9(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR9From((Model_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR9To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR9To((Model_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR9To(Model_c target)
{
  if (target != null) {
    target.relateAcrossR9To(this, true) ;
  }
}

public void relateAcrossR9To(Model_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR9To(this, notifyChanges) ;
  }
}

public void setBackPointerR9To(Model_c target)
{
  	synchronized (backPointer_HasInstanceModelHasInstance_R9) {
		backPointer_HasInstanceModelHasInstance_R9.add(target);
	}
}

public void unrelateAcrossR9From(Model_c target)
{
  if (target != null) {
    target.unrelateAcrossR9From(this, true) ;
  }
}

public void unrelateAcrossR9From(Model_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR9From(this, notifyChanges) ;
  }
}

public void clearBackPointerR9To(Model_c target)
{
  synchronized (backPointer_HasInstanceModelHasInstance_R9) {
	    backPointer_HasInstanceModelHasInstance_R9.remove(target);
	}
}

public static ModelSpecification_c getOneGD_MSOnR9(Model_c [] targets)
{
    return getOneGD_MSOnR9(targets, null);
}

public static ModelSpecification_c getOneGD_MSOnR9(Model_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MSOnR9(targets, test, true);
}

public static ModelSpecification_c getOneGD_MSOnR9(Model_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelSpecification_c candidate_val = getOneGD_MSOnR9(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MSOnR9(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelSpecification_c getOneGD_MSOnR9(Model_c target)
{
	return getOneGD_MSOnR9(target, true);
}
public static ModelSpecification_c getOneGD_MSOnR9(Model_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsInstanceOfModelSpecification ;
  } else {
    return null;
  }
}

public static ModelSpecification_c [] getManyGD_MSsOnR9(Model_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MSsOnR9(targets, test, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR9(Model_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelSpecification_c[0];
  
  
  LinkedHashSet<ModelSpecification_c> elementsSet = new LinkedHashSet<ModelSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelSpecification_c associate = targets[i].IsInstanceOfModelSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelSpecification_c[] result = new ModelSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelSpecification_c [] getManyGD_MSsOnR9(Model_c [] targets)
{
  return getManyGD_MSsOnR9(targets, null);
}

public static ModelSpecification_c [] getManyGD_MSsOnR9(Model_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Model_c [] targetArray = new Model_c[1];
    targetArray[0] = target;
    return getManyGD_MSsOnR9(targetArray, test, loadComponent);
  } else {
    ModelSpecification_c [] result = new ModelSpecification_c [0] ;
    return result ;
  }
  
}

public static ModelSpecification_c [] getManyGD_MSsOnR9(Model_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MSsOnR9(target, null, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR9(Model_c target)
{
    return getManyGD_MSsOnR9(target, null, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR9(Model_c target, boolean loadComponent)
{
    return getManyGD_MSsOnR9(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ElementInModelSpecification_c> backPointer_CanShowElementInModelSpecificationCanShow_R11 = new ArrayList<ElementInModelSpecification_c>();

public void setElementInModelSpecificationOrderInChildListR11(ElementInModelSpecification_c target, int index) {
	unrelateAcrossR11From(target);
	ElementInModelSpecification_c[] elements = ElementInModelSpecification_c.getManyGD_EMSsOnR11(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR11From((ElementInModelSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR11To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR11To((ElementInModelSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR11To(ElementInModelSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR11To(this, true) ;
  }
}

public void relateAcrossR11To(ElementInModelSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR11To(this, notifyChanges) ;
  }
}

public void setBackPointerR11To(ElementInModelSpecification_c target)
{
  	synchronized (backPointer_CanShowElementInModelSpecificationCanShow_R11) {
		backPointer_CanShowElementInModelSpecificationCanShow_R11.add(target);
	}
}

public void unrelateAcrossR11From(ElementInModelSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR11From(this, true) ;
  }
}

public void unrelateAcrossR11From(ElementInModelSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR11From(this, notifyChanges) ;
  }
}

public void clearBackPointerR11To(ElementInModelSpecification_c target)
{
  synchronized (backPointer_CanShowElementInModelSpecificationCanShow_R11) {
	    backPointer_CanShowElementInModelSpecificationCanShow_R11.remove(target);
	}
}

public static ModelSpecification_c getOneGD_MSOnR11(ElementInModelSpecification_c [] targets)
{
    return getOneGD_MSOnR11(targets, null);
}

public static ModelSpecification_c getOneGD_MSOnR11(ElementInModelSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MSOnR11(targets, test, true);
}

public static ModelSpecification_c getOneGD_MSOnR11(ElementInModelSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelSpecification_c candidate_val = getOneGD_MSOnR11(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MSOnR11(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelSpecification_c getOneGD_MSOnR11(ElementInModelSpecification_c target)
{
	return getOneGD_MSOnR11(target, true);
}
public static ModelSpecification_c getOneGD_MSOnR11(ElementInModelSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.CanAppearOnModelSpecification ;
  } else {
    return null;
  }
}

public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementInModelSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MSsOnR11(targets, test, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementInModelSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelSpecification_c[0];
  
  
  LinkedHashSet<ModelSpecification_c> elementsSet = new LinkedHashSet<ModelSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelSpecification_c associate = targets[i].CanAppearOnModelSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelSpecification_c[] result = new ModelSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementInModelSpecification_c [] targets)
{
  return getManyGD_MSsOnR11(targets, null);
}

public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementInModelSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ElementInModelSpecification_c [] targetArray = new ElementInModelSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_MSsOnR11(targetArray, test, loadComponent);
  } else {
    ModelSpecification_c [] result = new ModelSpecification_c [0] ;
    return result ;
  }
  
}

public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementInModelSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MSsOnR11(target, null, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementInModelSpecification_c target)
{
    return getManyGD_MSsOnR11(target, null, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementInModelSpecification_c target, boolean loadComponent)
{
    return getManyGD_MSsOnR11(target, null, loadComponent);
}

public static ModelSpecification_c getOneGD_MSOnR11(ElementSpecification_c target)
{
  return ModelSpecification_c.getOneGD_MSOnR11(ElementInModelSpecification_c.getOneGD_EMSOnR11(target)) ;
}

public static ModelSpecification_c getOneGD_MSOnR11(ElementSpecification_c target,
    ClassQueryInterface_c test)
{
  return ModelSpecification_c.getOneGD_MSOnR11(ElementInModelSpecification_c.getManyGD_EMSsOnR11(target), test) ;
}

public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementSpecification_c target,
    ClassQueryInterface_c test)
{
	return getManyGD_MSsOnR11(target, test, true);
}
public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  ElementInModelSpecification_c [] associators = ElementInModelSpecification_c.getManyGD_EMSsOnR11(target, loadComponent) ;
    return ModelSpecification_c.getManyGD_MSsOnR11(associators, test, loadComponent) ;
}
public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementSpecification_c target)
{
    return getManyGD_MSsOnR11(target, null, true);
}
public static ModelSpecification_c [] getManyGD_MSsOnR11(ElementSpecification_c target, boolean loadComponent)
{
    return getManyGD_MSsOnR11(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<AutoReconciliationSpecification_c> backPointer_AutoReconciliationSpecification_R33 = new ArrayList<AutoReconciliationSpecification_c>();

public void setAutoReconciliationSpecificationOrderInChildListR33(AutoReconciliationSpecification_c target, int index) {
	unrelateAcrossR33From(target);
	AutoReconciliationSpecification_c[] elements = AutoReconciliationSpecification_c.getManyGD_ARSsOnR33(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR33From((AutoReconciliationSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR33To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR33To((AutoReconciliationSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR33To(AutoReconciliationSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR33To(this, true) ;
  }
}

public void relateAcrossR33To(AutoReconciliationSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR33To(this, notifyChanges) ;
  }
}

public void setBackPointerR33To(AutoReconciliationSpecification_c target)
{
  	synchronized (backPointer_AutoReconciliationSpecification_R33) {
		backPointer_AutoReconciliationSpecification_R33.add(target);
	}
}

public void unrelateAcrossR33From(AutoReconciliationSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR33From(this, true) ;
  }
}

public void unrelateAcrossR33From(AutoReconciliationSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR33From(this, notifyChanges) ;
  }
}

public void clearBackPointerR33To(AutoReconciliationSpecification_c target)
{
  synchronized (backPointer_AutoReconciliationSpecification_R33) {
	    backPointer_AutoReconciliationSpecification_R33.remove(target);
	}
}

public static ModelSpecification_c getOneGD_MSOnR33(AutoReconciliationSpecification_c [] targets)
{
    return getOneGD_MSOnR33(targets, null);
}

public static ModelSpecification_c getOneGD_MSOnR33(AutoReconciliationSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOneGD_MSOnR33(targets, test, true);
}

public static ModelSpecification_c getOneGD_MSOnR33(AutoReconciliationSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelSpecification_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelSpecification_c candidate_val = getOneGD_MSOnR33(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneGD_MSOnR33(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelSpecification_c getOneGD_MSOnR33(AutoReconciliationSpecification_c target)
{
	return getOneGD_MSOnR33(target, true);
}
public static ModelSpecification_c getOneGD_MSOnR33(AutoReconciliationSpecification_c target, boolean loadComponent)
{
  if (target != null) {
    return target.ModelSpecification ;
  } else {
    return null;
  }
}

public static ModelSpecification_c [] getManyGD_MSsOnR33(AutoReconciliationSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyGD_MSsOnR33(targets, test, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR33(AutoReconciliationSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelSpecification_c[0];
  
  
  LinkedHashSet<ModelSpecification_c> elementsSet = new LinkedHashSet<ModelSpecification_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelSpecification_c associate = targets[i].ModelSpecification;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelSpecification_c[] result = new ModelSpecification_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelSpecification_c [] getManyGD_MSsOnR33(AutoReconciliationSpecification_c [] targets)
{
  return getManyGD_MSsOnR33(targets, null);
}

public static ModelSpecification_c [] getManyGD_MSsOnR33(AutoReconciliationSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    AutoReconciliationSpecification_c [] targetArray = new AutoReconciliationSpecification_c[1];
    targetArray[0] = target;
    return getManyGD_MSsOnR33(targetArray, test, loadComponent);
  } else {
    ModelSpecification_c [] result = new ModelSpecification_c [0] ;
    return result ;
  }
  
}

public static ModelSpecification_c [] getManyGD_MSsOnR33(AutoReconciliationSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyGD_MSsOnR33(target, null, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR33(AutoReconciliationSpecification_c target)
{
    return getManyGD_MSsOnR33(target, null, true);
}

public static ModelSpecification_c [] getManyGD_MSsOnR33(AutoReconciliationSpecification_c target, boolean loadComponent)
{
    return getManyGD_MSsOnR33(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
	}
  public void batchUnrelate(boolean notifyChanges)
  {
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	    
      // class has no referential attributes
  
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ModelSpecification_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ModelSpecification_c ModelSpecificationInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ModelSpecification_c result=findModelSpecificationInstance(modelRoot,test,loadComponent);
	  return result;  
  }
private static ModelSpecification_c findModelSpecificationInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ModelSpecification_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ModelSpecification_c x = (ModelSpecification_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					return x;
			}
		}
		}
			return null;
}
  public static ModelSpecification_c ModelSpecificationInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ModelSpecificationInstance(modelRoot,test,true);
  }
  
  public static ModelSpecification_c ModelSpecificationInstance(ModelRoot modelRoot)
  {
	 return ModelSpecificationInstance(modelRoot,null,true);
  }

  public static ModelSpecification_c [] ModelSpecificationInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
		    InstanceList instances = modelRoot.getInstanceList(ModelSpecification_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ModelSpecification_c x = (ModelSpecification_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ModelSpecification_c[] ret_set = new ModelSpecification_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ModelSpecification_c[0];
			}		
		} 
  }
  public static ModelSpecification_c [] ModelSpecificationInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ModelSpecificationInstances(modelRoot,test,true);
  }
  public static ModelSpecification_c [] ModelSpecificationInstances(ModelRoot modelRoot)
  {
	return ModelSpecificationInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Model Specification.dispose call: ";
	Model_c testR9Inst = Model_c.getOneGD_MDOnR9(this, false);

	if ( testR9Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "9 ";	
	}
	ElementInModelSpecification_c testR11Inst = ElementInModelSpecification_c.getOneGD_EMSOnR11(this, false);

	if ( testR11Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "11 ";
	}
	AutoReconciliationSpecification_c testR33Inst = AutoReconciliationSpecification_c.getOneGD_ARSOnR33(this, false);

	if ( testR33Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "33 ";	
	}
	if(delete_error == true) {

		if(CanvasPlugin.getDefault().isDebugging()) {
			Ooaofgraphics.log.println(ILogger.DELETE, "Model Specification", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CanvasPlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      return false;      
  }      
  // declare attribute accessors
  public int getModel_type()
  {
    return m_model_type ;
  }


  public void setModel_type(int newValue)
  {
    if(m_model_type == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Model_type", new Integer(m_model_type), new Integer(newValue),false);

   m_model_type = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getOoa_type()
  {
    return m_ooa_type ;
  }


  public void setOoa_type(int newValue)
  {
    if(m_ooa_type == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ooa_type", new Integer(m_ooa_type), new Integer(newValue),false);

   m_ooa_type = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,false); 
   m_name = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public Color getBackground()
  {
    return m_background ;
  }


  public void setBackground(Color newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_background)){
	        return;
	    }
	}else if(m_background != null){
	    if(m_background.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Background", m_background, newValue,false); 
   m_background = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public Class getRepresents()
  {
    return m_represents ;
  }


  public void setRepresents(Class newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_represents)){
	        return;
	    }
	}else if(m_represents != null){
	    if(m_represents.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Represents", m_represents, newValue,false); 
   m_represents = newValue ;
    Ooaofgraphics.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Model Specification", //$NON-NLS-1$
	  " Operation entered: Model Specification::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ModelSpecification_c [] objs = ModelSpecification_c.ModelSpecificationInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Model Specification", //$NON-NLS-1$
	  " Operation entered: Model Specification::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ModelSpecification_c_test22157_c implements ClassQueryInterface_c
    {
	  ModelSpecification_c_test22157_c( int     p22158, int     p22159 ) {
	       m_p22158 = p22158; 
m_p22159 = p22159;
	  }
	  private int      m_p22158; private int      m_p22159; 
	  public boolean evaluate (Object candidate)
	  {
	      ModelSpecification_c selected = (ModelSpecification_c) candidate;
	      boolean retval = false;
	      retval = (selected.getOoa_type() == (m_p22158)) & (selected.getModel_type() == (m_p22159));
	      return retval;
	  }
    }

    ModelSpecification_c [] objs22156 = 
    ModelSpecification_c.ModelSpecificationInstances(Ooaofgraphics.getDefaultInstance(), new ModelSpecification_c_test22157_c(getOoa_type(), getModel_type())) ;

    if ( (  (objs22156.length) == 0) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Model Specification", //$NON-NLS-1$
           "Consistency: Object: Model Specification: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs22156.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Model Specification: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22156.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs22156.length) > 1) )
    {

      if (CanvasPlugin.getDefault().isDebugging()){
          Ooaofgraphics.log.println(ILogger.CONSISTENCY, "Model Specification", //$NON-NLS-1$
           "Consistency: Object: Model Specification: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs22156.length )  + " OOA_Type: " + Integer.toString(getOoa_type())  + " Model_Type: " + Integer.toString(getModel_type()) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CanvasPlugin.logError("Consistency: Object: Model Specification: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs22156.length )  + " OOA_Type: " + Integer.toString(getOoa_type())  + " Model_Type: " + Integer.toString(getModel_type()) , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Model Specification is a participating class in association: rel.Numb = 9
             // Object: Model
          // Associated One Side: rel.Numb = 11
            // Link Object: Element in Model Specification
            // Other Side Class: Element Specification
          // Model Specification is a participating class in association: rel.Numb = 33
             // Object: Auto Reconciliation Specification
    return retval;
  }


  // declare transform functions
  public  void Elementcreated(final Object p_Elem)
  {
      Ooaofgraphics.log.println(ILogger.OPERATION, "Model Specification", " Operation entered: ModelSpecification::Elementcreated") ; 
        Ooaofgraphics modelRoot = Ooaofgraphics.getInstance(Cl_c.getModelRootname(p_Elem));
        Model_c mdl = new Model_c(modelRoot);
		Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(
			Modeleventnotification_c.DELTA_NEW,
			mdl));
		Diagram_c diagram = new Diagram_c(modelRoot);
		Ooaofgraphics.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(
			Modeleventnotification_c.DELTA_NEW,
			diagram));
        diagram.relateAcrossR18To(mdl);
        this.relateAcrossR9To(mdl);
        mdl.Initialize(p_Elem);

   } // End elementCreated

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Model Specification
