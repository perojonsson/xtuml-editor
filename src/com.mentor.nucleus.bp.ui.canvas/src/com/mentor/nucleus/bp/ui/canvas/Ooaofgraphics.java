//====================================================================
//
// File:      com.mentor.nucleus.bp.ui.canvas.Ooaofgraphics.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

package com.mentor.nucleus.bp.ui.canvas;

import org.eclipse.core.runtime.IProgressMonitor;
import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.common.*;
import com.mentor.nucleus.bp.core.util.*;
/**
 * The model-root of the domain.  
 */
public class Ooaofgraphics extends OoaofgraphicsBase {
	protected Ooaofgraphics(String aRootId) {
		super(aRootId);
	}

	public void clearDatabase(IProgressMonitor pm) {
		pm.beginTask("Clearing database...", 60);
		Waypoint_c.clearInstances(this);
		pm.worked(1);
		Textelement_c.clearInstances(this);
		pm.worked(1);
		Simplesemanticmodelelement_c.clearInstances(this);
		pm.worked(1);
		Semanticmodelbridge_c.clearInstances(this);
		pm.worked(1);
		Reference_c.clearInstances(this);
		pm.worked(1);
		Property_c.clearInstances(this);
		pm.worked(1);
		Polyline_c.clearInstances(this);
		pm.worked(1);
		Point_c.clearInstances(this);
		pm.worked(1);
		Leafelement_c.clearInstances(this);
		pm.worked(1);
		Image_c.clearInstances(this);
		pm.worked(1);
		Graphnode_c.clearInstances(this);
		pm.worked(1);
		Graphicprimitive_c.clearInstances(this);
		pm.worked(1);
		Graphelement_c.clearInstances(this);
		pm.worked(1);
		Graphedge_c.clearInstances(this);
		pm.worked(1);
		Graphconnector_c.clearInstances(this);
		pm.worked(1);
		Ellipse_c.clearInstances(this);
		pm.worked(1);
		Element_c.clearInstances(this);
		pm.worked(1);
		Diagramlink_c.clearInstances(this);
		pm.worked(1);
		Diagramelement_c.clearInstances(this);
		pm.worked(1);
		Diagram_c.clearInstances(this);
		pm.worked(1);
		Coresemanticmodelbridge_c.clearInstances(this);
		pm.worked(1);
		NoncontainingShapeSpecification_c.clearInstances(this);
		pm.worked(1);
		ContainingShapeSpecification_c.clearInstances(this);
		pm.worked(1);
		Linecolorstyle_c.clearInstances(this);
		pm.worked(1);
		Fontstyle_c.clearInstances(this);
		pm.worked(1);
		Fillcolorstyle_c.clearInstances(this);
		pm.worked(1);
		Elementstyle_c.clearInstances(this);
		pm.worked(1);
		WaypointInMove_c.clearInstances(this);
		pm.worked(1);
		TextInMove_c.clearInstances(this);
		pm.worked(1);
		Shape_c.clearInstances(this);
		pm.worked(1);
		NoncontainingShape_c.clearInstances(this);
		pm.worked(1);
		Model_c.clearInstances(this);
		pm.worked(1);
		LineSegment_c.clearInstances(this);
		pm.worked(1);
		Layer_c.clearInstances(this);
		pm.worked(1);
		Graphicalelementinlayer_c.clearInstances(this);
		pm.worked(1);
		GraphicalElement_c.clearInstances(this);
		pm.worked(1);
		FloatingText_c.clearInstances(this);
		pm.worked(1);
		ElementInSuppression_c.clearInstances(this);
		pm.worked(1);
		ElementInResize_c.clearInstances(this);
		pm.worked(1);
		ElementInMove_c.clearInstances(this);
		pm.worked(1);
		ContainingShape_c.clearInstances(this);
		pm.worked(1);
		Connector_c.clearInstances(this);
		pm.worked(1);
		AnchorOnSegment_c.clearInstances(this);
		pm.worked(1);
		ToolActivationPolicy_c.clearInstances(this);
		pm.worked(1);
		ShapeTool_c.clearInstances(this);
		pm.worked(1);
		SelectionTool_c.clearInstances(this);
		pm.worked(1);
		ScrollTool_c.clearInstances(this);
		pm.worked(1);
		ModelTool_c.clearInstances(this);
		pm.worked(1);
		ConnectorTool_c.clearInstances(this);
		pm.worked(1);

	}
	//
	//
	public void checkDomainConsistency() {
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		Waypoint_c.checkClassConsistency(this);
		Textelement_c.checkClassConsistency(this);
		Simplesemanticmodelelement_c.checkClassConsistency(this);
		Semanticmodelbridge_c.checkClassConsistency(this);
		Reference_c.checkClassConsistency(this);
		Property_c.checkClassConsistency(this);
		Polyline_c.checkClassConsistency(this);
		Point_c.checkClassConsistency(this);
		Leafelement_c.checkClassConsistency(this);
		Image_c.checkClassConsistency(this);
		Graphnode_c.checkClassConsistency(this);
		Graphicprimitive_c.checkClassConsistency(this);
		Graphelement_c.checkClassConsistency(this);
		Graphedge_c.checkClassConsistency(this);
		Graphconnector_c.checkClassConsistency(this);
		Ellipse_c.checkClassConsistency(this);
		Element_c.checkClassConsistency(this);
		Diagramlink_c.checkClassConsistency(this);
		Diagramelement_c.checkClassConsistency(this);
		Diagram_c.checkClassConsistency(this);
		Coresemanticmodelbridge_c.checkClassConsistency(this);
		NoncontainingShapeSpecification_c.checkClassConsistency(this);
		ContainingShapeSpecification_c.checkClassConsistency(this);
		Linecolorstyle_c.checkClassConsistency(this);
		Fontstyle_c.checkClassConsistency(this);
		Fillcolorstyle_c.checkClassConsistency(this);
		Elementstyle_c.checkClassConsistency(this);
		WaypointInMove_c.checkClassConsistency(this);
		TextInMove_c.checkClassConsistency(this);
		Shape_c.checkClassConsistency(this);
		NoncontainingShape_c.checkClassConsistency(this);
		Model_c.checkClassConsistency(this);
		LineSegment_c.checkClassConsistency(this);
		Layer_c.checkClassConsistency(this);
		Graphicalelementinlayer_c.checkClassConsistency(this);
		GraphicalElement_c.checkClassConsistency(this);
		FloatingText_c.checkClassConsistency(this);
		ElementInSuppression_c.checkClassConsistency(this);
		ElementInResize_c.checkClassConsistency(this);
		ElementInMove_c.checkClassConsistency(this);
		ContainingShape_c.checkClassConsistency(this);
		Connector_c.checkClassConsistency(this);
		AnchorOnSegment_c.checkClassConsistency(this);
		ToolActivationPolicy_c.checkClassConsistency(this);
		ShapeTool_c.checkClassConsistency(this);
		SelectionTool_c.checkClassConsistency(this);
		ScrollTool_c.checkClassConsistency(this);
		ModelTool_c.checkClassConsistency(this);
		ConnectorTool_c.checkClassConsistency(this);
	}

	//
	// Domain level functions

	static public int Max(ModelRoot modelRoot, final int p_A, final int p_B) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "max",
				" Function entered: Max");
		if ((p_A > p_B)) {

			return p_A;

		}

		else {

			return p_B;

		}

	} // End max

	static public int Min(ModelRoot modelRoot, final int p_A, final int p_B) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "min",
				" Function entered: Min");
		if ((p_A < p_B)) {

			return p_A;

		}

		else {

			return p_B;

		}

	} // End min

	static public void Fixbpgraphics(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "fixBPGraphics",
				" Function entered: Fixbpgraphics");
		class Model_test21476_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == Modeltype_c.DomainPackageDiagram);
			}
		}
		Model_c v_dpd = Model_c.ModelInstance(modelRoot,
				new Model_test21476_c());

		class Model_test21477_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == Modeltype_c.DataTypePackageDiagram);
			}
		}
		Model_c v_dtp = Model_c.ModelInstance(modelRoot,
				new Model_test21477_c());

		class Model_test21478_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == Modeltype_c.FunctionPackageDiagram);
			}
		}
		Model_c v_fnp = Model_c.ModelInstance(modelRoot,
				new Model_test21478_c());

		class Model_test21479_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == Modeltype_c.ExternalEntityPackageDiagram);
			}
		}
		Model_c v_eep = Model_c.ModelInstance(modelRoot,
				new Model_test21479_c());

		if (((v_eep != null))) {

			Ooaofgraphics.Fixbpeegraphics(modelRoot);

		}

		if (((v_dtp != null))) {

			Ooaofgraphics.Fixbpdtgraphics(modelRoot);

		}

		if (((v_fnp != null))) {

			Ooaofgraphics.Fixbpfngraphics(modelRoot);

		}

		if (((v_dpd != null))) {

			class GraphicalElement_test21632_c implements ClassQueryInterface_c {
				public boolean evaluate(Object candidate) {
					GraphicalElement_c selected = (GraphicalElement_c) candidate;
					return (selected.getOoa_type() == Ooatype_c.EE);
				}
			}
			GraphicalElement_c[] v_eeGes = GraphicalElement_c
					.getManyGD_GEsOnR1(v_dpd,
							new GraphicalElement_test21632_c());

			GraphicalElement_c v_eeGe = null;
			for (int i21444 = 0; i21444 < v_eeGes.length; i21444++) {
				v_eeGe = v_eeGes[i21444];

				if (v_eeGe != null) {
					v_eeGe.Dispose();
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

			}

		}

	} // End fixBPGraphics

	static public void Fixbpfngraphics(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "fixBPFNGraphics",
				" Function entered: Fixbpfngraphics");
		int v_DPD_Model_Type = Modeltype_c.DomainPackageDiagram;

		int v_Function_Model_Type = Modeltype_c.FunctionPackageDiagram;

		int v_EE_OOA_Type = Ooatype_c.EE;

		class Model_test21480_c implements ClassQueryInterface_c {
			Model_test21480_c(int p21481) {
				m_p21481 = p21481;
			}
			private int m_p21481;
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == m_p21481);
			}
		}
		Model_c v_dpd = Model_c.ModelInstance(modelRoot, new Model_test21480_c(
				v_DPD_Model_Type));

		class Model_test21482_c implements ClassQueryInterface_c {
			Model_test21482_c(int p21483) {
				m_p21483 = p21483;
			}
			private int m_p21483;
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == m_p21483);
			}
		}
		Model_c v_fnp = Model_c.ModelInstance(modelRoot, new Model_test21482_c(
				v_Function_Model_Type));

		if (((v_fnp != null) && (v_dpd != null))) {

			class ModelSpecification_test21484_c
					implements
						ClassQueryInterface_c {
				ModelSpecification_test21484_c(int p21485) {
					m_p21485 = p21485;
				}
				private int m_p21485;
				public boolean evaluate(Object candidate) {
					ModelSpecification_c selected = (ModelSpecification_c) candidate;
					return (selected.getModel_type() == m_p21485);
				}
			}
			ModelSpecification_c v_fnpSpec = ModelSpecification_c
					.ModelSpecificationInstance(Ooaofgraphics
							.getDefaultInstance(),
							new ModelSpecification_test21484_c(
									v_Function_Model_Type));

			if (((v_fnpSpec != null))) {

				Object v_represents = v_fnp.getRepresents();

				class GraphicalElement_test21486_c
						implements
							ClassQueryInterface_c {
					GraphicalElement_test21486_c(Object p21487) {
						m_p21487 = p21487;
					}
					private Object m_p21487;
					public boolean evaluate(Object candidate) {
						GraphicalElement_c selected = (GraphicalElement_c) candidate;
						return (selected.getRepresents() == m_p21487);
					}
				}
				GraphicalElement_c v_fnpGe = GraphicalElement_c
						.GraphicalElementInstance(modelRoot,
								new GraphicalElement_test21486_c(v_represents));

				class GraphicalElement_test21633_c
						implements
							ClassQueryInterface_c {
					GraphicalElement_test21633_c(int p21634) {
						m_p21634 = p21634;
					}
					private int m_p21634;
					public boolean evaluate(Object candidate) {
						GraphicalElement_c selected = (GraphicalElement_c) candidate;
						return (selected.getOoa_type() == m_p21634);
					}
				}
				GraphicalElement_c v_oldEE = GraphicalElement_c
						.getOneGD_GEOnR1(v_dpd,
								new GraphicalElement_test21633_c(v_EE_OOA_Type));

				if (((v_oldEE != null))) {

					Shape_c v_oldShp = Shape_c.getOneGD_SHPOnR2(v_oldEE);

					if (v_oldEE != null) {
						v_oldEE.unrelateAcrossR2From(v_oldShp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Unrelate attempted on null left hand instance.",
										t);
					}

					Graphelement_c v_oldGraphElem = Graphelement_c
							.getOneDIM_GEOnR23(v_oldEE);

					if (v_oldEE != null) {
						v_oldEE.unrelateAcrossR23From(v_oldGraphElem);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Unrelate attempted on null left hand instance.",
										t);
					}

					if (v_oldEE != null) {
						v_oldEE.Dispose();
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

					if (v_fnpGe != null) {
						v_fnpGe.relateAcrossR2To(v_oldShp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_fnpGe != null) {
						v_fnpGe.relateAcrossR23To(v_oldGraphElem);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

				}

				else {

					Shape_c[] v_otherShps = Shape_c
							.getManyGD_SHPsOnR2(GraphicalElement_c
									.getManyGD_GEsOnR1(v_dpd));

					Shape_c v_rightMostShp = Shape_c
							.getOneGD_SHPOnR2(GraphicalElement_c
									.getManyGD_GEsOnR1(v_dpd));

					Graphnode_c v_rightMostNode = Graphnode_c
							.getOneDIM_NDOnR19(v_rightMostShp);

					Graphelement_c v_rightMostElement = Graphelement_c
							.getOneDIM_GEOnR301(v_rightMostNode);

					Shape_c v_otherShp = null;
					for (int i21445 = 0; i21445 < v_otherShps.length; i21445++) {
						v_otherShp = v_otherShps[i21445];

						Graphnode_c v_otherNode = Graphnode_c
								.getOneDIM_NDOnR19(v_otherShp);

						Graphelement_c v_otherElement = Graphelement_c
								.getOneDIM_GEOnR301(v_otherNode);

						if ((v_otherElement.getPositionx() > v_rightMostElement
								.getPositionx())) {

							v_rightMostShp = v_otherShp;

							v_rightMostNode = v_otherNode;

							v_rightMostElement = v_otherElement;

						}

					}

					Shape_c v_shp = new Shape_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW, v_shp));

					Graphnode_c v_graphNode = new Graphnode_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphNode));

					if (v_graphNode != null) {
						v_graphNode.relateAcrossR19To(v_shp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Graphelement_c v_graphElement = new Graphelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphElement));

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR301To(v_graphNode);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR23To(v_fnpGe);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Diagramelement_c v_diagramElement = new Diagramelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_diagramElement));

					if (v_diagramElement != null) {
						v_diagramElement.relateAcrossR302To(v_graphElement);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_fnpGe != null) {
						v_fnpGe.relateAcrossR2To(v_shp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (((v_rightMostShp != null))) {

						float v_width = v_rightMostNode.getWidth();

						if (v_graphElement != null) {
							v_graphElement.setPositionx(v_rightMostElement
									.getPositionx()
									+ v_rightMostNode.getWidth()
									+ (v_width)
									/ 10);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

						if (v_graphNode != null) {
							v_graphNode.setWidth(v_width);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

						if (v_graphElement != null) {
							v_graphElement.setPositiony(v_rightMostElement
									.getPositiony());
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

						if (v_graphNode != null) {
							v_graphNode.setHeight(v_rightMostNode.getHeight());
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

					}

					else {

						if (v_shp != null) {
							v_shp.Movetodefaultposition();
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

				}

			}

		}

	} // End fixBPFNGraphics

	static public void Fixbpdtgraphics(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "fixBPDTGraphics",
				" Function entered: Fixbpdtgraphics");
		int v_DPD_Model_Type = Modeltype_c.DomainPackageDiagram;

		int v_DataType_Model_Type = Modeltype_c.DataTypePackageDiagram;

		int v_EE_OOA_Type = Ooatype_c.EE;

		int v_Core_OOA_Type = Ooatype_c.CoreDataType;

		int v_User_OOA_Type = Ooatype_c.UserDataType;

		int v_Enum_OOA_Type = Ooatype_c.EnumerationDataType;

		class Model_test21488_c implements ClassQueryInterface_c {
			Model_test21488_c(int p21489) {
				m_p21489 = p21489;
			}
			private int m_p21489;
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == m_p21489);
			}
		}
		Model_c v_dpd = Model_c.ModelInstance(modelRoot, new Model_test21488_c(
				v_DPD_Model_Type));

		Diagram_c v_dpdDiagram = Diagram_c.getOneDIM_DIAOnR18(v_dpd);

		class Model_test21490_c implements ClassQueryInterface_c {
			Model_test21490_c(int p21491) {
				m_p21491 = p21491;
			}
			private int m_p21491;
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == m_p21491);
			}
		}
		Model_c v_dtp = Model_c.ModelInstance(modelRoot, new Model_test21490_c(
				v_DataType_Model_Type));

		Diagram_c v_dtpDiagram = Diagram_c.getOneDIM_DIAOnR18(v_dtp);

		if (((v_dtp != null) && (v_dpd != null))) {

			if (v_dtpDiagram != null) {
				v_dtpDiagram.setViewportx(v_dpdDiagram.getViewportx());
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

			if (v_dtpDiagram != null) {
				v_dtpDiagram.setViewporty(v_dpdDiagram.getViewporty());
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

			if (v_dtpDiagram != null) {
				v_dtpDiagram.setZoom(v_dpdDiagram.getZoom());
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

			class ModelSpecification_test21492_c
					implements
						ClassQueryInterface_c {
				ModelSpecification_test21492_c(int p21493) {
					m_p21493 = p21493;
				}
				private int m_p21493;
				public boolean evaluate(Object candidate) {
					ModelSpecification_c selected = (ModelSpecification_c) candidate;
					return (selected.getModel_type() == m_p21493);
				}
			}
			ModelSpecification_c v_dtpSpec = ModelSpecification_c
					.ModelSpecificationInstance(Ooaofgraphics
							.getDefaultInstance(),
							new ModelSpecification_test21492_c(
									v_DataType_Model_Type));

			if (((v_dtpSpec != null))) {

				Object v_represents = v_dtp.getRepresents();

				class GraphicalElement_test21494_c
						implements
							ClassQueryInterface_c {
					GraphicalElement_test21494_c(Object p21495) {
						m_p21495 = p21495;
					}
					private Object m_p21495;
					public boolean evaluate(Object candidate) {
						GraphicalElement_c selected = (GraphicalElement_c) candidate;
						return (selected.getRepresents() == m_p21495);
					}
				}
				GraphicalElement_c v_dtpGe = GraphicalElement_c
						.GraphicalElementInstance(modelRoot,
								new GraphicalElement_test21494_c(v_represents));

				class GraphicalElement_test21635_c
						implements
							ClassQueryInterface_c {
					GraphicalElement_test21635_c(int p21636) {
						m_p21636 = p21636;
					}
					private int m_p21636;
					public boolean evaluate(Object candidate) {
						GraphicalElement_c selected = (GraphicalElement_c) candidate;
						return (selected.getOoa_type() == m_p21636);
					}
				}
				GraphicalElement_c v_oldEE = GraphicalElement_c
						.getOneGD_GEOnR1(v_dpd,
								new GraphicalElement_test21635_c(v_EE_OOA_Type));

				if (((v_oldEE != null))) {

					Shape_c v_oldShp = Shape_c.getOneGD_SHPOnR2(v_oldEE);

					if (v_oldEE != null) {
						v_oldEE.unrelateAcrossR2From(v_oldShp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Unrelate attempted on null left hand instance.",
										t);
					}

					Graphelement_c v_oldGraphElem = Graphelement_c
							.getOneDIM_GEOnR23(v_oldEE);

					if (v_oldEE != null) {
						v_oldEE.unrelateAcrossR23From(v_oldGraphElem);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Unrelate attempted on null left hand instance.",
										t);
					}

					if (v_oldEE != null) {
						v_oldEE.Dispose();
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

					if (v_dtpGe != null) {
						v_dtpGe.relateAcrossR2To(v_oldShp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_dtpGe != null) {
						v_dtpGe.relateAcrossR23To(v_oldGraphElem);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

				}

				else {

					Shape_c[] v_otherShps = Shape_c
							.getManyGD_SHPsOnR2(GraphicalElement_c
									.getManyGD_GEsOnR1(v_dpd));

					Shape_c v_rightMostShp = Shape_c
							.getOneGD_SHPOnR2(GraphicalElement_c
									.getManyGD_GEsOnR1(v_dpd));

					Graphnode_c v_rightMostNode = Graphnode_c
							.getOneDIM_NDOnR19(v_rightMostShp);

					Graphelement_c v_rightMostElement = Graphelement_c
							.getOneDIM_GEOnR301(v_rightMostNode);

					Shape_c v_otherShp = null;
					for (int i21446 = 0; i21446 < v_otherShps.length; i21446++) {
						v_otherShp = v_otherShps[i21446];

						Graphnode_c v_otherNode = Graphnode_c
								.getOneDIM_NDOnR19(v_otherShp);

						Graphelement_c v_otherElement = Graphelement_c
								.getOneDIM_GEOnR301(v_otherNode);

						if ((v_otherElement.getPositionx() > v_rightMostElement
								.getPositionx())) {

							v_rightMostShp = v_otherShp;

							v_rightMostNode = v_otherNode;

							v_rightMostElement = v_otherElement;

						}

					}

					Shape_c v_shp = new Shape_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW, v_shp));

					Graphnode_c v_graphNode = new Graphnode_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphNode));

					if (v_graphNode != null) {
						v_graphNode.relateAcrossR19To(v_shp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Graphelement_c v_graphElement = new Graphelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphElement));

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR301To(v_graphNode);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR23To(v_dtpGe);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Diagramelement_c v_diagramElement = new Diagramelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_diagramElement));

					if (v_diagramElement != null) {
						v_diagramElement.relateAcrossR302To(v_graphElement);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_dtpGe != null) {
						v_dtpGe.relateAcrossR2To(v_shp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (((v_rightMostShp != null))) {

						float v_width = v_rightMostNode.getWidth();

						if (v_graphElement != null) {
							v_graphElement.setPositionx(v_rightMostElement
									.getPositionx()
									+ v_rightMostNode.getWidth()
									+ (v_width)
									/ 10);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

						if (v_graphNode != null) {
							v_graphNode.setWidth(v_width);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

						if (v_graphElement != null) {
							v_graphElement.setPositiony(v_rightMostElement
									.getPositiony());
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

						if (v_graphNode != null) {
							v_graphNode.setHeight(v_rightMostNode.getHeight());
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attribute write attempted on null instance.",
											t);
						}

					}

					else {

						if (v_shp != null) {
							v_shp.Movetodefaultposition();
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

				}

				class ElementSpecification_test21496_c
						implements
							ClassQueryInterface_c {
					ElementSpecification_test21496_c(int p21497) {
						m_p21497 = p21497;
					}
					private int m_p21497;
					public boolean evaluate(Object candidate) {
						ElementSpecification_c selected = (ElementSpecification_c) candidate;
						return (selected.getOoa_type() == m_p21497);
					}
				}
				ElementSpecification_c v_dtSpec = ElementSpecification_c
						.ElementSpecificationInstance(Ooaofgraphics
								.getDefaultInstance(),
								new ElementSpecification_test21496_c(
										v_Core_OOA_Type));

				float v_xPosn = v_dtpDiagram.getViewportx()
						+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

				float v_yPosn = v_dtpDiagram.getViewporty()
						+ Os_c.Realtoint((v_dtSpec.getDefaultheight() / 10.0f));

				class GraphicalElement_test21498_c
						implements
							ClassQueryInterface_c {
					GraphicalElement_test21498_c(int p21499) {
						m_p21499 = p21499;
					}
					private int m_p21499;
					public boolean evaluate(Object candidate) {
						GraphicalElement_c selected = (GraphicalElement_c) candidate;
						return (selected.getOoa_type() == m_p21499);
					}
				}
				GraphicalElement_c[] v_dts = GraphicalElement_c
						.GraphicalElementInstances(modelRoot,
								new GraphicalElement_test21498_c(
										v_Core_OOA_Type));

				GraphicalElement_c v_dt = null;
				for (int i21447 = 0; i21447 < v_dts.length; i21447++) {
					v_dt = v_dts[i21447];

					if (v_dt != null) {
						v_dt.relateAcrossR1To(v_dtp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Shape_c v_shp = new Shape_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW, v_shp));

					Graphnode_c v_graphNode = new Graphnode_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphNode));

					if (v_graphNode != null) {
						v_graphNode.relateAcrossR19To(v_shp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Graphelement_c v_graphElement = new Graphelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphElement));

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR301To(v_graphNode);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR23To(v_dt);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Diagramelement_c v_diagramElement = new Diagramelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_diagramElement));

					if (v_diagramElement != null) {
						v_diagramElement.relateAcrossR302To(v_graphElement);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_shp != null) {
						v_shp.relateAcrossR2To(v_dt);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.setPositionx(v_xPosn);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.setPositiony(v_yPosn);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphNode != null) {
						v_graphNode.setWidth(v_dtSpec.getDefaultwidth());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphNode != null) {
						v_graphNode.setHeight(v_dtSpec.getDefaultheight());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					v_xPosn = v_xPosn
							+ v_dtSpec.getDefaultwidth()
							+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

					if ((v_xPosn > v_dtpDiagram.getViewportx()
							+ v_dtSpec.getDefaultwidth() * 5)) {

						v_xPosn = v_dtpDiagram.getViewportx()
								+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

						v_yPosn = v_yPosn
								+ v_dtSpec.getDefaultheight()
								+ Os_c.Realtoint((v_dtSpec.getDefaultheight() / 10.0f));

					}

				}

				if ((v_xPosn != v_dtpDiagram.getViewportx()
						+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f)))) {

					v_xPosn = v_dtpDiagram.getViewportx()
							+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

					v_yPosn = v_yPosn
							+ v_dtSpec.getDefaultheight()
							+ Os_c.Realtoint((v_dtSpec.getDefaultheight() / 10.0f));

				}

				class ElementSpecification_test21500_c
						implements
							ClassQueryInterface_c {
					ElementSpecification_test21500_c(int p21501) {
						m_p21501 = p21501;
					}
					private int m_p21501;
					public boolean evaluate(Object candidate) {
						ElementSpecification_c selected = (ElementSpecification_c) candidate;
						return (selected.getOoa_type() == m_p21501);
					}
				}
				v_dtSpec = ElementSpecification_c.ElementSpecificationInstance(
						Ooaofgraphics.getDefaultInstance(),
						new ElementSpecification_test21500_c(v_User_OOA_Type));

				class GraphicalElement_test21502_c
						implements
							ClassQueryInterface_c {
					GraphicalElement_test21502_c(int p21503) {
						m_p21503 = p21503;
					}
					private int m_p21503;
					public boolean evaluate(Object candidate) {
						GraphicalElement_c selected = (GraphicalElement_c) candidate;
						return (selected.getOoa_type() == m_p21503);
					}
				}
				v_dts = GraphicalElement_c.GraphicalElementInstances(modelRoot,
						new GraphicalElement_test21502_c(v_User_OOA_Type));

				for (int i21448 = 0; i21448 < v_dts.length; i21448++) {
					v_dt = v_dts[i21448];

					if (v_dt != null) {
						v_dt.relateAcrossR1To(v_dtp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Shape_c v_shp = new Shape_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW, v_shp));

					Graphnode_c v_graphNode = new Graphnode_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphNode));

					if (v_graphNode != null) {
						v_graphNode.relateAcrossR19To(v_shp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Graphelement_c v_graphElement = new Graphelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphElement));

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR301To(v_graphNode);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR23To(v_dt);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Diagramelement_c v_diagramElement = new Diagramelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_diagramElement));

					if (v_diagramElement != null) {
						v_diagramElement.relateAcrossR302To(v_graphElement);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_shp != null) {
						v_shp.relateAcrossR2To(v_dt);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.setPositionx(v_xPosn);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.setPositiony(v_yPosn);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphNode != null) {
						v_graphNode.setWidth(v_dtSpec.getDefaultwidth());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphNode != null) {
						v_graphNode.setHeight(v_dtSpec.getDefaultheight());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					v_xPosn = v_xPosn
							+ v_dtSpec.getDefaultwidth()
							+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

					if ((v_xPosn > v_dtpDiagram.getViewportx()
							+ v_dtSpec.getDefaultwidth() * 5)) {

						v_xPosn = v_dtpDiagram.getViewportx()
								+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

						v_yPosn = v_yPosn
								+ v_dtSpec.getDefaultheight()
								+ Os_c.Realtoint((v_dtSpec.getDefaultheight() / 10.0f));

					}

				}

				if ((v_xPosn != v_dtpDiagram.getViewportx()
						+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f)))) {

					v_xPosn = v_dtpDiagram.getViewportx()
							+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

					v_yPosn = v_yPosn
							+ v_dtSpec.getDefaultheight()
							+ Os_c.Realtoint((v_dtSpec.getDefaultheight() / 10.0f));

				}

				class ElementSpecification_test21504_c
						implements
							ClassQueryInterface_c {
					ElementSpecification_test21504_c(int p21505) {
						m_p21505 = p21505;
					}
					private int m_p21505;
					public boolean evaluate(Object candidate) {
						ElementSpecification_c selected = (ElementSpecification_c) candidate;
						return (selected.getOoa_type() == m_p21505);
					}
				}
				v_dtSpec = ElementSpecification_c.ElementSpecificationInstance(
						Ooaofgraphics.getDefaultInstance(),
						new ElementSpecification_test21504_c(v_Enum_OOA_Type));

				class GraphicalElement_test21506_c
						implements
							ClassQueryInterface_c {
					GraphicalElement_test21506_c(int p21507) {
						m_p21507 = p21507;
					}
					private int m_p21507;
					public boolean evaluate(Object candidate) {
						GraphicalElement_c selected = (GraphicalElement_c) candidate;
						return (selected.getOoa_type() == m_p21507);
					}
				}
				v_dts = GraphicalElement_c.GraphicalElementInstances(modelRoot,
						new GraphicalElement_test21506_c(v_Enum_OOA_Type));

				for (int i21449 = 0; i21449 < v_dts.length; i21449++) {
					v_dt = v_dts[i21449];

					if (v_dt != null) {
						v_dt.relateAcrossR1To(v_dtp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Shape_c v_shp = new Shape_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW, v_shp));

					if (v_shp != null) {
						v_shp.relateAcrossR2To(v_dt);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Graphnode_c v_graphNode = new Graphnode_c(modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphNode));

					if (v_graphNode != null) {
						v_graphNode.relateAcrossR19To(v_shp);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Graphelement_c v_graphElement = new Graphelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_graphElement));

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR301To(v_graphNode);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.relateAcrossR23To(v_dt);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					Diagramelement_c v_diagramElement = new Diagramelement_c(
							modelRoot);
					Ooaofgraphics.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW,
									v_diagramElement));

					if (v_diagramElement != null) {
						v_diagramElement.relateAcrossR302To(v_graphElement);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.setPositionx(v_xPosn);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphElement != null) {
						v_graphElement.setPositiony(v_yPosn);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphNode != null) {
						v_graphNode.setWidth(v_dtSpec.getDefaultwidth());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					if (v_graphNode != null) {
						v_graphNode.setHeight(v_dtSpec.getDefaultheight());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

					v_xPosn = v_xPosn
							+ v_dtSpec.getDefaultwidth()
							+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

					if ((v_xPosn > v_dtpDiagram.getViewportx()
							+ v_dtSpec.getDefaultwidth() * 5)) {

						v_xPosn = v_dtpDiagram.getViewportx()
								+ Os_c.Realtoint((v_dtSpec.getDefaultwidth() / 10.0f));

						v_yPosn = v_yPosn
								+ v_dtSpec.getDefaultheight()
								+ Os_c.Realtoint((v_dtSpec.getDefaultheight() / 10.0f));

					}

				}

			}

		}

	} // End fixBPDTGraphics

	static public void Fixbpeegraphics(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "fixBPEEGraphics",
				" Function entered: Fixbpeegraphics");
		class Model_test21508_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return selected.getModel_type() == Modeltype_c.DomainPackageDiagram;
			}
		}
		Model_c v_dpModel = Model_c.ModelInstance(modelRoot,
				new Model_test21508_c());

		class Model_test21509_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return selected.getModel_type() == Modeltype_c.ExternalEntityPackageDiagram;
			}
		}
		Model_c v_eepModel = Model_c.ModelInstance(modelRoot,
				new Model_test21509_c());

		if (((v_dpModel == null) || (v_eepModel == null))) {

			return;

		}

		Diagram_c v_dpDiagram = Diagram_c.getOneDIM_DIAOnR18(v_dpModel);

		Diagram_c v_eepDiagram = Diagram_c.getOneDIM_DIAOnR18(v_eepModel);

		if (v_eepDiagram != null) {
			v_eepDiagram.setViewportx(v_dpDiagram.getViewportx());
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Attribute write attempted on null instance.",
					t);
		}

		if (v_eepDiagram != null) {
			v_eepDiagram.setViewporty(v_dpDiagram.getViewporty());
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Attribute write attempted on null instance.",
					t);
		}

		if (v_eepDiagram != null) {
			v_eepDiagram.setZoom(v_dpDiagram.getZoom());
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Attribute write attempted on null instance.",
					t);
		}

		class GraphicalElement_test21637_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				GraphicalElement_c selected = (GraphicalElement_c) candidate;
				return selected.getOoa_type() == Ooatype_c.EE;
			}
		}
		GraphicalElement_c[] v_eeElements = GraphicalElement_c
				.getManyGD_GEsOnR1(v_dpModel,
						new GraphicalElement_test21637_c());

		class GraphicalElement_test21510_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				GraphicalElement_c selected = (GraphicalElement_c) candidate;
				return !selected.getElementid().equals(selected.getElementid());
			}
		}
		GraphicalElement_c v_firstEeElement = GraphicalElement_c
				.GraphicalElementInstance(modelRoot,
						new GraphicalElement_test21510_c());

		GraphicalElement_c v_eeElement = null;
		for (int i21450 = 0; i21450 < v_eeElements.length; i21450++) {
			v_eeElement = v_eeElements[i21450];

			if (v_eeElement != null) {
				v_eeElement.unrelateAcrossR1From(v_dpModel);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if (v_eeElement != null) {
				v_eeElement.relateAcrossR1To(v_eepModel);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (((v_firstEeElement == null))) {

				v_firstEeElement = v_eeElement;

			}

		}

		class GraphicalElement_test21511_c implements ClassQueryInterface_c {
			GraphicalElement_test21511_c(Object p21512) {
				m_p21512 = p21512;
			}
			private Object m_p21512;
			public boolean evaluate(Object candidate) {
				GraphicalElement_c selected = (GraphicalElement_c) candidate;
				return selected.getRepresents() == m_p21512;
			}
		}
		GraphicalElement_c v_eepElement = GraphicalElement_c
				.GraphicalElementInstance(
						modelRoot,
						new GraphicalElement_test21511_c(v_eepModel
								.getRepresents()));

		Model_c v_previousModel = Model_c.getOneGD_MDOnR1(v_eepElement);

		if (v_eepElement != null) {
			v_eepElement.unrelateAcrossR1From(v_previousModel);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError(
					"Unrelate attempted on null left hand instance.", t);
		}

		if (v_eepElement != null) {
			v_eepElement.relateAcrossR1To(v_dpModel);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Relate attempted on null left hand instance.",
					t);
		}

		Graphelement_c v_eepGraphElement = Graphelement_c
				.getOneDIM_GEOnR23(v_eepElement);

		Graphnode_c v_eepGraphNode = Graphnode_c
				.getOneDIM_NDOnR301(v_eepGraphElement);

		if ((v_eepGraphNode.getWidth() == 0 && (v_firstEeElement != null))) {

			Graphelement_c v_eeGraphElement = Graphelement_c
					.getOneDIM_GEOnR23(v_firstEeElement);

			Graphnode_c v_eeGraphNode = Graphnode_c
					.getOneDIM_NDOnR301(v_eeGraphElement);

			if (v_eepGraphElement != null) {
				v_eepGraphElement.setPositionx(v_eeGraphElement.getPositionx());
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

			if (v_eepGraphElement != null) {
				v_eepGraphElement.setPositiony(v_eeGraphElement.getPositiony());
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

			if (v_eepGraphNode != null) {
				v_eepGraphNode.setWidth(v_eeGraphNode.getWidth());
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

			if (v_eepGraphNode != null) {
				v_eepGraphNode.setHeight(v_eeGraphNode.getHeight());
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

		}

	} // End fixBPEEGraphics

	static public void Tigertobpgraphics(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "TigerToBPGraphics",
				" Function entered: Tigertobpgraphics");
		int v_DPD_Model_Type = Modeltype_c.DomainPackageDiagram;

		int v_DataType_Model_Type = Modeltype_c.DataTypePackageDiagram;

		int v_Function_Model_Type = Modeltype_c.FunctionPackageDiagram;

		int v_EE_Model_Type = Modeltype_c.ExternalEntityPackageDiagram;

		int v_SS_OOA_Type = Ooatype_c.Subsystem;

		int v_EE_OOA_Type = Ooatype_c.EE;

		class Model_test21513_c implements ClassQueryInterface_c {
			Model_test21513_c(int p21514) {
				m_p21514 = p21514;
			}
			private int m_p21514;
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == m_p21514);
			}
		}
		Model_c v_dpd = Model_c.ModelInstance(modelRoot, new Model_test21513_c(
				v_DPD_Model_Type));

		class GraphicalElement_test21638_c implements ClassQueryInterface_c {
			GraphicalElement_test21638_c(int p21639) {
				m_p21639 = p21639;
			}
			private int m_p21639;
			public boolean evaluate(Object candidate) {
				GraphicalElement_c selected = (GraphicalElement_c) candidate;
				return (selected.getOoa_type() != m_p21639);
			}
		}
		GraphicalElement_c[] v_ges = GraphicalElement_c.getManyGD_GEsOnR1(
				v_dpd, new GraphicalElement_test21638_c(v_SS_OOA_Type));

		GraphicalElement_c v_ge = null;
		for (int i21451 = 0; i21451 < v_ges.length; i21451++) {
			v_ge = v_ges[i21451];

			if (v_ge != null) {
				v_ge.unrelateAcrossR1From(v_dpd);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

		}

		class GraphicalElement_test21515_c implements ClassQueryInterface_c {
			GraphicalElement_test21515_c(int p21516) {
				m_p21516 = p21516;
			}
			private int m_p21516;
			public boolean evaluate(Object candidate) {
				GraphicalElement_c selected = (GraphicalElement_c) candidate;
				return (selected.getOoa_type() == m_p21516);
			}
		}
		GraphicalElement_c[] v_eeGes = GraphicalElement_c
				.GraphicalElementInstances(modelRoot,
						new GraphicalElement_test21515_c(v_EE_OOA_Type));

		GraphicalElement_c v_eeGe = null;
		for (int i21452 = 0; i21452 < v_eeGes.length; i21452++) {
			v_eeGe = v_eeGes[i21452];

			Model_c v_mdl = Model_c.getOneGD_MDOnR1(v_eeGe);

			if (v_eeGe != null) {
				v_eeGe.unrelateAcrossR1From(v_mdl);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if (v_eeGe != null) {
				v_eeGe.relateAcrossR1To(v_dpd);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

		}

	} // End TigerToBPGraphics

	static public void Bptotigergraphics(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "BPToTigerGraphics",
				" Function entered: Bptotigergraphics");
		Ooaofgraphics.Fixbpeegraphics(modelRoot);

		int v_DPD_Model_Type = Modeltype_c.DomainPackageDiagram;

		int v_DT_OOA_Type = Ooatype_c.DataTypePackage;

		int v_FN_OOA_Type = Ooatype_c.FunctionPackage;

		int v_EE_OOA_Type = Ooatype_c.EE;

		class Model_test21517_c implements ClassQueryInterface_c {
			Model_test21517_c(int p21518) {
				m_p21518 = p21518;
			}
			private int m_p21518;
			public boolean evaluate(Object candidate) {
				Model_c selected = (Model_c) candidate;
				return (selected.getModel_type() == m_p21518);
			}
		}
		Model_c v_dpd = Model_c.ModelInstance(modelRoot, new Model_test21517_c(
				v_DPD_Model_Type));

		if (((v_dpd != null))) {

			class GraphicalElement_test21519_c implements ClassQueryInterface_c {
				GraphicalElement_test21519_c(int p21520, int p21521) {
					m_p21520 = p21520;
					m_p21521 = p21521;
				}
				private int m_p21520;
				private int m_p21521;
				public boolean evaluate(Object candidate) {
					GraphicalElement_c selected = (GraphicalElement_c) candidate;
					return (selected.getOoa_type() == m_p21520 || selected
							.getOoa_type() == m_p21521);
				}
			}
			GraphicalElement_c[] v_ges = GraphicalElement_c
					.GraphicalElementInstances(modelRoot,
							new GraphicalElement_test21519_c(v_DT_OOA_Type,
									v_FN_OOA_Type));

			GraphicalElement_c v_ge = null;
			for (int i21453 = 0; i21453 < v_ges.length; i21453++) {
				v_ge = v_ges[i21453];

				if (v_ge != null) {
					v_ge.relateAcrossR1To(v_dpd);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin.logError(
							"Relate attempted on null left hand instance.", t);
				}

			}

		}

	} // End BPToTigerGraphics

	static public int Roundtogridsnappointwithinlimits(ModelRoot modelRoot,
			final boolean p_Isconnector, final int p_Max, final int p_Min,
			final float p_Ordinate) {
		Ooaofgraphics.log.println(ILogger.FUNCTION,
				"roundToGridSnapPointWithinLimits",
				" Function entered: Roundtogridsnappointwithinlimits");
		int v_snapIncr = Ooaofgraphics.Getgridsnapincrement(modelRoot,
				p_Isconnector);

		int v_snap = Ooaofgraphics.Round(modelRoot, (p_Ordinate / v_snapIncr))
				* v_snapIncr;

		if ((v_snap < p_Min)) {

			v_snap = v_snap + v_snapIncr;

		}

		else if ((v_snap > p_Max)) {

			v_snap = v_snap - v_snapIncr;

		}

		return v_snap;

	} // End roundToGridSnapPointWithinLimits

	static public int Round(ModelRoot modelRoot, final float p_Value) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "round",
				" Function entered: Round");
		return Math.round(p_Value);
	} // End round

	static public int Getgridsnapincrement(ModelRoot modelRoot,
			final boolean p_Isconnector) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "getGridSnapIncrement",
				" Function entered: Getgridsnapincrement");
		if ((p_Isconnector)) {

			return 6;

		}

		else {

			return 12;

		}

	} // End getGridSnapIncrement

	static public int Roundtogridsnappoint(ModelRoot modelRoot,
			final boolean p_Isconnector, final float p_Ordinate) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "roundToGridSnapPoint",
				" Function entered: Roundtogridsnappoint");
		int v_maxInt = Os_c.Max_int();

		return Ooaofgraphics.Roundtogridsnappointwithinlimits(modelRoot,
				p_Isconnector, v_maxInt, -v_maxInt, p_Ordinate);

	} // End roundToGridSnapPoint

	static public float Getdistance(ModelRoot modelRoot, final float p_X1,
			final float p_X2, final float p_Y1, final float p_Y2) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "getDistance",
				" Function entered: Getdistance");
		float v_a = p_X2 - p_X1;

		float v_b = p_Y2 - p_Y1;

		return Os_c.Getsquareroot((v_a * v_a + v_b * v_b));

	} // End getDistance

	static public int Geticondistancefromedge(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "getIconDistanceFromEdge",
				" Function entered: Geticondistancefromedge");
		return 4;

	} // End getIconDistanceFromEdge

	static public int Geticonsize(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "getIconSize",
				" Function entered: Geticonsize");
		return 16;

	} // End getIconSize

	static public int Geticonspacing(ModelRoot modelRoot) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "getIconSpacing",
				" Function entered: Geticonspacing");
		return 2;

	} // End getIconSpacing

	static public void Drawdiamond(ModelRoot modelRoot,
			final GCDelegate p_Context, final int p_H, final int p_W,
			final int p_X, final int p_Y) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "drawDiamond",
				" Function entered: Drawdiamond");
		Object v_p = Gr_c.Startpoly(4);

		int v_x = p_X;

		int v_y = p_Y;

		int v_w = p_W;

		int v_h = p_H;

		Gr_c.Polyaddpoint(v_p, v_x + v_w / 2, v_y);

		Gr_c.Polyaddpoint(v_p, v_x + v_w, v_y + v_h / 2);

		Gr_c.Polyaddpoint(v_p, v_x + v_w / 2, v_y + v_h);

		Gr_c.Polyaddpoint(v_p, v_x, v_y + v_h / 2);

		Gr_c.Polydraw(p_Context, v_p);

	} // End drawDiamond

	static public void Drawconcavepentagon(ModelRoot modelRoot,
			final GCDelegate p_Context, final int p_H, final int p_W,
			final int p_X, final int p_Y) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "drawConcavePentagon",
				" Function entered: Drawconcavepentagon");
		Object v_p = Gr_c.Startpoly(5);

		int v_x = p_X;

		int v_y = p_Y;

		int v_w = p_W;

		int v_h = p_H;

		Gr_c.Polyaddpoint(v_p, v_x, v_y);

		Gr_c.Polyaddpoint(v_p, v_x + v_w, v_y);

		Gr_c.Polyaddpoint(v_p, v_x + v_w, v_y + v_h);

		Gr_c.Polyaddpoint(v_p, v_x, v_y + v_h);

		Gr_c.Polyaddpoint(v_p, v_x + v_w / 5, v_y + v_h / 2);

		Gr_c.Polydraw(p_Context, v_p);

	} // End drawConcavePentagon

	static public void Drawconvexpentagon(ModelRoot modelRoot,
			final GCDelegate p_Context, final int p_H, final int p_W,
			final int p_X, final int p_Y) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "drawConvexPentagon",
				" Function entered: Drawconvexpentagon");
		int v_x = p_X;

		int v_y = p_Y;

		int v_w = p_W;

		int v_h = p_H;

		Object v_p = Gr_c.Startpoly(5);

		Gr_c.Polyaddpoint(v_p, v_x, v_y);

		Gr_c.Polyaddpoint(v_p, v_x + (4 * v_w) / 5, v_y);

		Gr_c.Polyaddpoint(v_p, v_x + v_w, v_y + v_h / 2);

		Gr_c.Polyaddpoint(v_p, v_x + (4 * v_w) / 5, v_y + v_h);

		Gr_c.Polyaddpoint(v_p, v_x, v_y + v_h);

		Gr_c.Polydraw(p_Context, v_p);

	} // End drawConvexPentagon

	static public void Drawhourglass(ModelRoot modelRoot,
			final GCDelegate p_Context, final int p_H, final int p_W,
			final int p_X, final int p_Y) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "drawHourglass",
				" Function entered: Drawhourglass");
		int v_x = p_X;

		int v_y = p_Y;

		int v_w = p_W;

		int v_h = p_H;

		Object v_p1 = Gr_c.Startpoly(5);

		Gr_c.Polyaddpoint(v_p1, v_x, v_y);

		Gr_c.Polyaddpoint(v_p1, v_x + v_w, v_y);

		Gr_c.Polyaddpoint(v_p1, v_x, v_y + v_h);

		Gr_c.Polyaddpoint(v_p1, v_x + v_w, v_y + v_h);

		Gr_c.Polyaddpoint(v_p1, v_x, v_y);

		Gr_c.Polydraw(p_Context, v_p1);

	} // End drawHourglass

	static public float Getintersectionofsegmentwithellipse(
			ModelRoot modelRoot, final int p_Axis,
			final boolean p_Considerline, final float p_Ellipseh,
			final float p_Ellipsew, final float p_Ellipsex,
			final float p_Ellipsey, final float p_X, final float p_X2,
			final float p_Y, final float p_Y2) {
		Ooaofgraphics.log.println(ILogger.FUNCTION,
				"getIntersectionOfSegmentWithEllipse",
				" Function entered: Getintersectionofsegmentwithellipse");
		float v_ellipseA = p_Ellipsew / 2;

		float v_ellipseB = p_Ellipseh / 2;

		float v_centerX = p_Ellipsex + p_Ellipsew / 2;

		float v_centerY = p_Ellipsey + p_Ellipseh / 2;

		float v_x = p_X - v_centerX;

		float v_y = p_Y - v_centerY;

		float v_x2 = p_X2 - v_centerX;

		float v_y2 = p_Y2 - v_centerY;

		float v_result1X = 0.0f;

		float v_result1Y = 0.0f;

		float v_result2X = 0.0f;

		float v_result2Y = 0.0f;

		if ((v_x == v_x2)) {

			float v_determinant = 1 - (v_x * v_x) / (v_ellipseA * v_ellipseA);

			if ((v_determinant < 0)) {

				return 0;

			}

			v_result1X = v_x;

			v_result1Y = v_ellipseB * Os_c.Getsquareroot(v_determinant);

			v_result2X = v_x;

			v_result2Y = -v_result1Y;

		}

		else {

			float v_slope = Ooaofgraphics.Getslope(modelRoot, v_x, v_x2, v_y,
					v_y2);

			float v_yIntercept = Ooaofgraphics.Getyintercept(modelRoot, v_x,
					v_x2, v_y, v_y2);

			float v_slopeSquared = v_slope * v_slope;

			float v_ellipseBSquared = v_ellipseB * v_ellipseB;

			float v_quadA = 1 / (v_ellipseA * v_ellipseA) + v_slopeSquared
					/ v_ellipseBSquared;

			float v_quadB = 2 * v_yIntercept * v_slope / v_ellipseBSquared;

			float v_quadC = (v_yIntercept * v_yIntercept) / v_ellipseBSquared
					- 1;

			float v_determinant = v_quadB * v_quadB - 4 * v_quadA * v_quadC;

			if ((v_determinant < 0)) {

				return 0;

			}

			float v_determinantSquareRoot = Os_c.Getsquareroot(v_determinant);

			v_result1X = (-v_quadB + v_determinantSquareRoot) / (2 * v_quadA);

			v_result1Y = v_slope * v_result1X + v_yIntercept;

			v_result2X = (-v_quadB - v_determinantSquareRoot) / (2 * v_quadA);

			v_result2Y = v_slope * v_result2X + v_yIntercept;

		}

		boolean v_result1OnSegment = p_Considerline
				|| Ooaofgraphics.Getboxdefinedbysegmentcontains(modelRoot,
						v_result1X, v_x, v_x2, v_result1Y, v_y, v_y2);

		boolean v_result2OnSegment = p_Considerline
				|| Ooaofgraphics.Getboxdefinedbysegmentcontains(modelRoot,
						v_result2X, v_x, v_x2, v_result2Y, v_y, v_y2);

		float v_result1Distance = Ooaofgraphics.Getdistance(modelRoot, v_x,
				v_result1X, v_y, v_result1Y);

		float v_result2Distance = Ooaofgraphics.Getdistance(modelRoot, v_x,
				v_result2X, v_y, v_result2Y);

		boolean v_useResult2 = false;

		v_useResult2 = ((!v_result1OnSegment) && v_result2OnSegment)
				|| (!(v_result1OnSegment && (!v_result2OnSegment)) && v_result2Distance < v_result1Distance);

		v_x = 0;

		v_y = 0;

		if ((!v_useResult2)) {

			v_x = v_result1X;

			v_y = v_result1Y;

		}

		else {

			v_x = v_result2X;

			v_y = v_result2Y;

		}

		v_x = v_x + v_centerX;

		v_y = v_y + v_centerY;

		if ((p_Axis == Axis_c.X)) {

			return v_x;

		}

		else {

			return v_y;

		}

	} // End getIntersectionOfSegmentWithEllipse

	static public float Getslope(ModelRoot modelRoot, final float p_X,
			final float p_X2, final float p_Y, final float p_Y2) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "getSlope",
				" Function entered: Getslope");
		if ((p_X == p_X2)) {

			return Os_c.Max_int();

		}

		return (p_Y2 - p_Y) / (p_X2 - p_X);

	} // End getSlope

	static public float Getyintercept(ModelRoot modelRoot, final float p_X,
			final float p_X2, final float p_Y, final float p_Y2) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "getYIntercept",
				" Function entered: Getyintercept");
		float v_slope = Ooaofgraphics.Getslope(modelRoot, p_X, p_X2, p_Y, p_Y2);

		return p_Y - v_slope * p_X;

	} // End getYIntercept

	static public boolean Getboxdefinedbysegmentcontains(ModelRoot modelRoot,
			final float p_X, final float p_X1, final float p_X2,
			final float p_Y, final float p_Y1, final float p_Y2) {
		Ooaofgraphics.log.println(ILogger.FUNCTION,
				"getBoxDefinedBySegmentContains",
				" Function entered: Getboxdefinedbysegmentcontains");
		float v_x1 = p_X1;

		float v_y1 = p_Y1;

		float v_x2 = p_X2;

		float v_y2 = p_Y2;

		float v_x = p_X;

		float v_y = p_Y;

		int v_minX = Ooaofgraphics.Min(modelRoot, (int) (v_x1), (int) (v_x2));

		int v_maxX = Ooaofgraphics.Max(modelRoot, (int) (v_x1), (int) (v_x2));

		int v_minY = Ooaofgraphics.Min(modelRoot, (int) (v_y1), (int) (v_y2));

		int v_maxY = Ooaofgraphics.Max(modelRoot, (int) (v_y1), (int) (v_y2));

		return ((v_x >= v_minX && v_x <= v_maxX) && (v_y >= v_minY && v_y <= v_maxY));

	} // End getBoxDefinedBySegmentContains

	static public float Getintersectionofsegmentwithsquare(ModelRoot modelRoot,
			final int p_Axis, final boolean p_Considerline,
			final float p_Squareh, final float p_Squarew,
			final float p_Squarex, final float p_Squarey, final float p_X1,
			final float p_X2, final float p_Y1, final float p_Y2) {
		Ooaofgraphics.log.println(ILogger.FUNCTION,
				"getIntersectionOfSegmentWithSquare",
				" Function entered: Getintersectionofsegmentwithsquare");
		int v_minX = Ooaofgraphics.Min(modelRoot, (int) (p_X1), (int) (p_X2));

		int v_maxX = Ooaofgraphics.Max(modelRoot, (int) (p_X1), (int) (p_X2));

		int v_minY = Ooaofgraphics.Min(modelRoot, (int) (p_Y1), (int) (p_Y2));

		int v_maxY = Ooaofgraphics.Max(modelRoot, (int) (p_Y1), (int) (p_Y2));

		float v_leftX = p_Squarex;

		float v_rightX = p_Squarex + p_Squarew;

		float v_topY = p_Squarey;

		float v_bottomY = p_Squarey + p_Squareh;

		int v_intersectX = Gr_c.Getxintersect((int) (p_X1), (int) (p_X2),
				(int) (v_leftX), (int) (v_rightX), (int) (p_Y1), (int) (p_Y2),
				(int) (v_topY), (int) (v_topY));

		int v_intersectY = Gr_c.Getyintersect((int) (p_X1), (int) (p_X2),
				(int) (v_leftX), (int) (v_rightX), (int) (p_Y1), (int) (p_Y2),
				(int) (v_topY), (int) (v_topY));

		if (((v_intersectX >= v_minX && v_intersectX <= v_maxX) && (v_intersectY >= v_minY && v_intersectY <= v_maxY))) {

			if (((v_intersectX >= v_leftX && v_intersectX <= v_rightX) && (v_intersectY == v_topY))) {

				if ((p_Axis == Axis_c.X)) {

					return v_intersectX;

				}

				else {

					return v_intersectY;

				}

			}

		}

		int v_topIntersectX = v_intersectX;

		int v_topIntersectY = v_intersectY;

		v_intersectX = Gr_c.Getxintersect((int) (p_X1), (int) (p_X2),
				(int) (v_leftX), (int) (v_rightX), (int) (p_Y1), (int) (p_Y2),
				(int) (v_bottomY), (int) (v_bottomY));

		v_intersectY = Gr_c.Getyintersect((int) (p_X1), (int) (p_X2),
				(int) (v_leftX), (int) (v_rightX), (int) (p_Y1), (int) (p_Y2),
				(int) (v_bottomY), (int) (v_bottomY));

		if (((v_intersectX >= v_minX && v_intersectX <= v_maxX) && (v_intersectY >= v_minY && v_intersectY <= v_maxY))) {

			if (((v_intersectX >= v_leftX && v_intersectX <= v_rightX) && (v_intersectY == v_bottomY))) {

				if ((p_Axis == Axis_c.X)) {

					return v_intersectX;

				}

				else {

					return v_intersectY;

				}

			}

		}

		int v_bottomIntersectX = v_intersectX;

		int v_bottomIntersectY = v_intersectY;

		v_intersectX = Gr_c.Getxintersect((int) (p_X1), (int) (p_X2),
				(int) (v_leftX), (int) (v_leftX), (int) (p_Y1), (int) (p_Y2),
				(int) (v_topY), (int) (v_bottomY));

		v_intersectY = Gr_c.Getyintersect((int) (p_X1), (int) (p_X2),
				(int) (v_leftX), (int) (v_leftX), (int) (p_Y1), (int) (p_Y2),
				(int) (v_topY), (int) (v_bottomY));

		if (((v_intersectX >= v_minX && v_intersectX <= v_maxX) && (v_intersectY >= v_minY && v_intersectY <= v_maxY))) {

			if (((v_intersectX == v_leftX) && (v_intersectY >= v_topY && v_intersectY <= v_bottomY))) {

				if ((p_Axis == Axis_c.X)) {

					return v_intersectX;

				}

				else {

					return v_intersectY;

				}

			}

		}

		int v_leftIntersectX = v_intersectX;

		int v_leftIntersectY = v_intersectY;

		v_intersectX = Gr_c.Getxintersect((int) (p_X1), (int) (p_X2),
				(int) (v_rightX), (int) (v_rightX), (int) (p_Y1), (int) (p_Y2),
				(int) (v_topY), (int) (v_bottomY));

		v_intersectY = Gr_c.Getyintersect((int) (p_X1), (int) (p_X2),
				(int) (v_rightX), (int) (v_rightX), (int) (p_Y1), (int) (p_Y2),
				(int) (v_topY), (int) (v_bottomY));

		if (((v_intersectX >= v_minX && v_intersectX <= v_maxX) && (v_intersectY >= v_minY && v_intersectY <= v_maxY))) {

			if (((v_intersectX == v_rightX) && (v_intersectY >= v_topY && v_intersectY <= v_bottomY))) {

				if ((p_Axis == Axis_c.X)) {

					return v_intersectX;

				}

				else {

					return v_intersectY;

				}

			}

		}

		int v_rightIntersectX = v_intersectX;

		int v_rightIntersectY = v_intersectY;

		int v_point1IntersectX = v_topIntersectX;

		int v_point1IntersectY = v_topIntersectY;

		int v_point2IntersectX = v_topIntersectX;

		int v_point2IntersectY = v_topIntersectY;

		float v_distanceToPoint1 = Ooaofgraphics.Getdistance(modelRoot,
				v_topIntersectX, p_X1, v_topIntersectY, p_Y1);

		float v_tempDistance = Ooaofgraphics.Getdistance(modelRoot,
				v_bottomIntersectX, p_X1, v_bottomIntersectY, p_Y1);

		if ((v_tempDistance < v_distanceToPoint1)) {

			v_distanceToPoint1 = v_tempDistance;

			v_point1IntersectX = v_bottomIntersectX;

			v_point1IntersectY = v_bottomIntersectY;

		}

		v_tempDistance = Ooaofgraphics.Getdistance(modelRoot, v_leftIntersectX,
				p_X1, v_leftIntersectY, p_Y1);

		if ((v_tempDistance < v_distanceToPoint1)) {

			v_distanceToPoint1 = v_tempDistance;

			v_point1IntersectX = v_leftIntersectX;

			v_point1IntersectY = v_leftIntersectY;

		}

		v_tempDistance = Ooaofgraphics.Getdistance(modelRoot,
				v_rightIntersectX, p_X1, v_rightIntersectY, p_Y1);

		if ((v_tempDistance < v_distanceToPoint1)) {

			v_distanceToPoint1 = v_tempDistance;

			v_point1IntersectX = v_rightIntersectX;

			v_point1IntersectY = v_rightIntersectY;

		}

		float v_distanceToPoint2 = Ooaofgraphics.Getdistance(modelRoot,
				v_topIntersectX, p_X2, v_topIntersectY, p_Y2);

		v_tempDistance = Ooaofgraphics.Getdistance(modelRoot,
				v_bottomIntersectX, p_X2, v_bottomIntersectY, p_Y2);

		if ((v_tempDistance < v_distanceToPoint2)) {

			v_distanceToPoint2 = v_tempDistance;

			v_point2IntersectX = v_bottomIntersectX;

			v_point2IntersectY = v_bottomIntersectY;

		}

		v_tempDistance = Ooaofgraphics.Getdistance(modelRoot, v_leftIntersectX,
				p_X2, v_leftIntersectY, p_Y2);

		if ((v_tempDistance < v_distanceToPoint2)) {

			v_distanceToPoint2 = v_tempDistance;

			v_point2IntersectX = v_leftIntersectX;

			v_point2IntersectY = v_leftIntersectY;

		}

		v_tempDistance = Ooaofgraphics.Getdistance(modelRoot,
				v_rightIntersectX, p_X2, v_rightIntersectY, p_Y2);

		if ((v_tempDistance < v_distanceToPoint2)) {

			v_distanceToPoint2 = v_tempDistance;

			v_point2IntersectX = v_rightIntersectX;

			v_point2IntersectY = v_rightIntersectY;

		}

		int v_lineIntersectX = 0;

		int v_lineIntersectY = 0;

		if ((v_distanceToPoint1 < v_distanceToPoint2)) {

			v_lineIntersectX = v_point1IntersectX;

			v_lineIntersectY = v_point1IntersectY;

		}

		else {

			v_lineIntersectX = v_point2IntersectX;

			v_lineIntersectY = v_point2IntersectY;

		}

		if ((p_Axis == Axis_c.X) && (p_Considerline)) {

			return v_lineIntersectX;

		}

		else if ((p_Axis == Axis_c.Y) && (p_Considerline)) {

			return v_lineIntersectY;

		}

		return 0;

	} // End getIntersectionOfSegmentWithSquare

	static public String Truncatetextblock(ModelRoot modelRoot,
			final int p_Maxlines, final String p_Text) {
		Ooaofgraphics.log.println(ILogger.FUNCTION, "truncateTextBlock",
				" Function entered: Truncatetextblock");
		//
		// Take a string with embedded newlines and chop it down based on the maximum
		// number of lines the user wants to allow.  Return the result.
		//
		String[] lines = p_Text.split("\n");
		String trimmed_text = "";
		if (p_Maxlines < lines.length) {
			for (int i = 0; i < p_Maxlines; ++i) {
				trimmed_text += lines[i] + "\n";
			}
		} else {
			trimmed_text = p_Text;
		}
		return (trimmed_text);
	} // End truncateTextBlock

	// End Domain functions

	/**
	 * The single model-root that used to be accessed by most of the code
	 * back when only one domain could be loaded into the product at a time.
	 * 
	 * @deprecated  Since issue 684, all code should specifically identify 
	 *              which instance of this class it seeks to retrieve, by 
	 *              calling other access methods of this class like 
	 *              getInstance(id).
	 */
	protected static Ooaofgraphics m_default_instance = null;

	public static Ooaofgraphics getDefaultInstance() {
		if (m_default_instance == null) {
			m_default_instance = getInstance(DEFAULT_WORKING_MODELSPACE);
		}
		return m_default_instance;
	}

	public static Ooaofgraphics getInstance(String id) {
		Ooaofgraphics modelRoot = (Ooaofgraphics) rootInstanceMap.get(id);
		if (modelRoot == null) {
			modelRoot = new Ooaofgraphics(id);
			if (DEFAULT_WORKING_MODELSPACE.equals(id)) {
				m_default_instance = modelRoot;
				init();
			}
		}

		return modelRoot;
	}

	static private masterTimer_c m_myMasterTimer;
	protected static void init() {

		if (m_myMasterTimer != null) {
			m_myMasterTimer = new masterTimer_c();
			m_myMasterTimer.start();
		}

	}
	/****** end init() ******/

	public static void shutdown() {
		if (m_myMasterTimer != null) {
			m_myMasterTimer.halt();
		}
	}

}
