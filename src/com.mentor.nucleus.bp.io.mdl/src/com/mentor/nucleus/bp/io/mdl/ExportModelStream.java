






//========================================================================
//
// File: ExportModelStream.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/gen_stream_export.arc
// Version:      $Revision: 1.31.16.1 $
//
// (c) Copyright 2007-2014 by Mentor Graphics Corp.  All rights reserved.
//
//========================================================================
// Licensed under the Apache License, Version 2.0 (the "License"); you may not 
// use this file except in compliance with the License.  You may obtain a copy 
// of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the 
// License for the specific language governing permissions and limitations under
// the License.
//========================================================================
//
package com.mentor.nucleus.bp.io.mdl;

import java.io.ByteArrayInputStream;
import java.io.OutputStream;
import java.io.InputStream;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import com.mentor.nucleus.bp.core.common.PersistableModelComponent;
import com.mentor.nucleus.bp.core.common.PersistenceManager;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.text.NumberFormat;
import java.util.UUID;
import java.util.HashMap;
import java.util.Locale;
import java.util.HashSet;
import java.util.Set;
import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.core.runtime.Path;
import org.eclipse.swt.dnd.Clipboard;

import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.CorePlugin;
import com.mentor.nucleus.bp.ui.canvas.*;
import com.mentor.nucleus.bp.io.core.*;
import com.mentor.nucleus.bp.core.common.ClassQueryInterface_c;
import com.mentor.nucleus.bp.core.common.NonRootModelElement;
import com.mentor.nucleus.bp.core.common.IdAssigner;

public class ExportModelStream extends CoreExport {
  NonRootModelElement m_inst;

  protected PrintStream m_fh;

  protected IPath m_path;

  protected boolean m_export_graphics = true;
  protected boolean m_fileExportInProgress = false;

  OutputStream m_outStream;

  protected boolean	m_is_fully_derived = false;

  public ExportModelStream(Ooaofooa modelRoot, OutputStream outStream,
      boolean export_graphics, NonRootModelElement[] instances,
      boolean file_export_in_progress) {
    super(modelRoot, CoreExport.NO);
        m_instances = instances;
    m_outStream = outStream;
    m_fh = new PrintStream(m_outStream);
    m_fileExportInProgress = file_export_in_progress;
  }

  Set<String> savedRTOSystems = new HashSet<String>();
  Set<Object> writtenProxies = new HashSet<Object>();
  List<ProxyPath> collectedProxies = new ArrayList<ProxyPath>();
  Set<Object> writtenInstances = new HashSet<Object>();
  NonRootModelElement[] m_instances = null;

  public Set<String> getSavedRTOSystems() { return savedRTOSystems; }
  
  /* (non-Javadoc)
   * @see org.eclipse.core.resources.IWorkspaceRunnable#run(org.eclipse.core.runtime.IProgressMonitor)
   */
  public void run(IProgressMonitor pm) throws InvocationTargetException {
    try {
      savedRTOSystems.clear();
      Ooaofgraphics graphicsModelRoot = getGraphicsModelRoot();
      pm.beginTask("Exporting data...", Model_c.ModelInstances(graphicsModelRoot).length);
      // setup root types contained string
      String rootTypes = "-- root-types-contained: ";
      ArrayList<String> types = new ArrayList<String>();
      for(int i = 0; i < m_instances.length; i++) {
        if(m_instances[i] instanceof GraphicalElement_c) continue;
        if(!types.contains(m_instances[i].getClass().getSimpleName())) {
          types.add(m_instances[i].getClass().getSimpleName());
        }
      }
      for (int i = 0; i < types.size(); i++) {
        if(i == types.size() - 1) {
          rootTypes += types.get(i);
        } else {
          rootTypes += types.get(i) + ",";
        }
      }
      m_fh.print(rootTypes + "\n");
      m_fh.print(get_file_header("StreamData", "7.1", CorePlugin.getPersistenceVersion())); //$NON-NLS-1$ //$NON-NLS-2$
      for(int i = 0; i < m_instances.length; i++) {
          m_inst = m_instances[i];
          PersistableModelComponent component = PersistenceManager.getComponent(m_inst);
          if(component != null) {
          	m_path = component.getFile().getLocation();
          }
          if(m_inst.getModelRoot() instanceof Ooaofooa)
            m_modelRoot = (Ooaofooa) m_inst.getModelRoot();
        if(m_inst instanceof SystemModel_c) {
          export_SystemModel_c((SystemModel_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Domain_c) {
          export_Domain_c((Domain_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Sequence_c) {
          export_Sequence_c((Sequence_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Communication_c) {
          export_Communication_c((Communication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseDiagram_c) {
          export_UseCaseDiagram_c((UseCaseDiagram_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Activity_c) {
          export_Activity_c((Activity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DatatypeInSuppression_c) {
          export_DatatypeInSuppression_c((DatatypeInSuppression_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DataType_c) {
          export_DataType_c((DataType_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Sequence_c) {
          export_Sequence_c((Sequence_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Communication_c) {
          export_Communication_c((Communication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseDiagram_c) {
          export_UseCaseDiagram_c((UseCaseDiagram_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Activity_c) {
          export_Activity_c((Activity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Package_c) {
          export_Package_c((Package_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof PackageInPackage_c) {
          export_PackageInPackage_c((PackageInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Activity_c) {
          export_Activity_c((Activity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Communication_c) {
          export_Communication_c((Communication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ComponentPackage_c) {
          export_ComponentPackage_c((ComponentPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DataTypePackage_c) {
          export_DataTypePackage_c((DataTypePackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InterfacePackage_c) {
          export_InterfacePackage_c((InterfacePackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Sequence_c) {
          export_Sequence_c((Sequence_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseDiagram_c) {
          export_UseCaseDiagram_c((UseCaseDiagram_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof PackageableElement_c) {
          export_PackageableElement_c((PackageableElement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DataType_c) {
          export_DataType_c((DataType_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InteractionParticipant_c) {
          export_InteractionParticipant_c((InteractionParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityNode_c) {
          export_ActivityNode_c((ActivityNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ModelClass_c) {
          export_ModelClass_c((ModelClass_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof Component_c) {
          export_Component_c((Component_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ComponentReference_c) {
          export_ComponentReference_c((ComponentReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Interface_c) {
          export_Interface_c((Interface_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ConstantSpecification_c) {
          export_ConstantSpecification_c((ConstantSpecification_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityPartition_c) {
          export_ActivityPartition_c((ActivityPartition_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityEdge_c) {
          export_ActivityEdge_c((ActivityEdge_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Message_c) {
          export_Message_c((Message_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Association_c) {
          export_Association_c((Association_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ImportedClass_c) {
          export_ImportedClass_c((ImportedClass_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ExternalEntity_c) {
          export_ExternalEntity_c((ExternalEntity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Function_c) {
          export_Function_c((Function_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseAssociation_c) {
          export_UseCaseAssociation_c((UseCaseAssociation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Satisfaction_c) {
          export_Satisfaction_c((Satisfaction_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Delegation_c) {
          export_Delegation_c((Delegation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ComponentPackageInPackage_c) {
          export_ComponentPackageInPackage_c((ComponentPackageInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ComponentPackage_c) {
          export_ComponentPackage_c((ComponentPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ComponentReference_c) {
          export_ComponentReference_c((ComponentReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Component_c) {
          export_Component_c((Component_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ComponentInComponent_c) {
          export_ComponentInComponent_c((ComponentInComponent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Port_c) {
          export_Port_c((Port_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Port_c) {
          export_Port_c((Port_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InterfaceReference_c) {
          export_InterfaceReference_c((InterfaceReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Requirement_c) {
          export_Requirement_c((Requirement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof RequiredExecutableProperty_c) {
          export_RequiredExecutableProperty_c((RequiredExecutableProperty_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof RequiredSignal_c) {
          export_RequiredSignal_c((RequiredSignal_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof RequiredSignalBody_c) {
          export_RequiredSignalBody_c((RequiredSignalBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof RequiredOperation_c) {
          export_RequiredOperation_c((RequiredOperation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof RequiredOperationBody_c) {
          export_RequiredOperationBody_c((RequiredOperationBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Provision_c) {
          export_Provision_c((Provision_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ProvidedExecutableProperty_c) {
          export_ProvidedExecutableProperty_c((ProvidedExecutableProperty_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ProvidedSignal_c) {
          export_ProvidedSignal_c((ProvidedSignal_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ProvidedSignalBody_c) {
          export_ProvidedSignalBody_c((ProvidedSignalBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ProvidedOperation_c) {
          export_ProvidedOperation_c((ProvidedOperation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ProvidedOperationBody_c) {
          export_ProvidedOperationBody_c((ProvidedOperationBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DomainAsComponent_c) {
          export_DomainAsComponent_c((DomainAsComponent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ComponentReference_c) {
          export_ComponentReference_c((ComponentReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ImportedReference_c) {
          export_ImportedReference_c((ImportedReference_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ImportedProvision_c) {
          export_ImportedProvision_c((ImportedProvision_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ImportedProvisionInSatisfaction_c) {
          export_ImportedProvisionInSatisfaction_c((ImportedProvisionInSatisfaction_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ImportedRequirement_c) {
          export_ImportedRequirement_c((ImportedRequirement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DelegationInComponent_c) {
          export_DelegationInComponent_c((DelegationInComponent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Delegation_c) {
          export_Delegation_c((Delegation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InterfaceReferenceInDelegation_c) {
          export_InterfaceReferenceInDelegation_c((InterfaceReferenceInDelegation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SatisfactionInComponent_c) {
          export_SatisfactionInComponent_c((SatisfactionInComponent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Sequence_c) {
          export_Sequence_c((Sequence_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Communication_c) {
          export_Communication_c((Communication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseDiagram_c) {
          export_UseCaseDiagram_c((UseCaseDiagram_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Activity_c) {
          export_Activity_c((Activity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SatisfactionInComponentPackage_c) {
          export_SatisfactionInComponentPackage_c((SatisfactionInComponentPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Satisfaction_c) {
          export_Satisfaction_c((Satisfaction_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Sequence_c) {
          export_Sequence_c((Sequence_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Communication_c) {
          export_Communication_c((Communication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseDiagram_c) {
          export_UseCaseDiagram_c((UseCaseDiagram_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Activity_c) {
          export_Activity_c((Activity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SpecificationPackage_c) {
          export_SpecificationPackage_c((SpecificationPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InterfacePackageInInterfacePackage_c) {
          export_InterfacePackageInInterfacePackage_c((InterfacePackageInInterfacePackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InterfacePackage_c) {
          export_InterfacePackage_c((InterfacePackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Interface_c) {
          export_Interface_c((Interface_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ExecutableProperty_c) {
          export_ExecutableProperty_c((ExecutableProperty_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InterfaceSignal_c) {
          export_InterfaceSignal_c((InterfaceSignal_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof InterfaceOperation_c) {
          export_InterfaceOperation_c((InterfaceOperation_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof PropertyParameter_c) {
          export_PropertyParameter_c((PropertyParameter_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SpecificationPackage_c) {
          export_SpecificationPackage_c((SpecificationPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DataTypePackageInPackage_c) {
          export_DataTypePackageInPackage_c((DataTypePackageInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DataTypePackage_c) {
          export_DataTypePackage_c((DataTypePackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DataTypeInPackage_c) {
          export_DataTypeInPackage_c((DataTypeInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DataType_c) {
          export_DataType_c((DataType_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DataType_c) {
          export_DataType_c((DataType_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CoreDataType_c) {
          export_CoreDataType_c((CoreDataType_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UserDataType_c) {
          export_UserDataType_c((UserDataType_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof EnumerationDataType_c) {
          export_EnumerationDataType_c((EnumerationDataType_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Enumerator_c) {
          export_Enumerator_c((Enumerator_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof StructuredDataType_c) {
          export_StructuredDataType_c((StructuredDataType_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof StructureMember_c) {
          export_StructureMember_c((StructureMember_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InstanceReferenceDataType_c) {
          export_InstanceReferenceDataType_c((InstanceReferenceDataType_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SystemDatatypeInPackage_c) {
          export_SystemDatatypeInPackage_c((SystemDatatypeInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SpecificationPackage_c) {
          export_SpecificationPackage_c((SpecificationPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ConstantInPackage_c) {
          export_ConstantInPackage_c((ConstantInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ConstantSpecification_c) {
          export_ConstantSpecification_c((ConstantSpecification_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SymbolicConstant_c) {
          export_SymbolicConstant_c((SymbolicConstant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LeafSymbolicConstant_c) {
          export_LeafSymbolicConstant_c((LeafSymbolicConstant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LiteralSymbolicConstant_c) {
          export_LiteralSymbolicConstant_c((LiteralSymbolicConstant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SystemConstantInPackage_c) {
          export_SystemConstantInPackage_c((SystemConstantInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof EePackageInPackage_c) {
          export_EePackageInPackage_c((EePackageInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ExternalEntityPackage_c) {
          export_ExternalEntityPackage_c((ExternalEntityPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ExternalEntityPackageInDomain_c) {
          export_ExternalEntityPackageInDomain_c((ExternalEntityPackageInDomain_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ExternalEntityInPackage_c) {
          export_ExternalEntityInPackage_c((ExternalEntityInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ExternalEntity_c) {
          export_ExternalEntity_c((ExternalEntity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Bridge_c) {
          export_Bridge_c((Bridge_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BridgeParameter_c) {
          export_BridgeParameter_c((BridgeParameter_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BridgeBody_c) {
          export_BridgeBody_c((BridgeBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionPackageInPackage_c) {
          export_FunctionPackageInPackage_c((FunctionPackageInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionPackage_c) {
          export_FunctionPackage_c((FunctionPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionPackageInDomain_c) {
          export_FunctionPackageInDomain_c((FunctionPackageInDomain_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionInPackage_c) {
          export_FunctionInPackage_c((FunctionInPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Function_c) {
          export_Function_c((Function_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionParameter_c) {
          export_FunctionParameter_c((FunctionParameter_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionBody_c) {
          export_FunctionBody_c((FunctionBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityNode_c) {
          export_ActivityNode_c((ActivityNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActionNode_c) {
          export_ActionNode_c((ActionNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityDiagramAction_c) {
          export_ActivityDiagramAction_c((ActivityDiagramAction_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof AcceptEvent_c) {
          export_AcceptEvent_c((AcceptEvent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof AcceptEventAction_c) {
          export_AcceptEventAction_c((AcceptEventAction_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof AcceptTimeEventAction_c) {
          export_AcceptTimeEventAction_c((AcceptTimeEventAction_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SendSignal_c) {
          export_SendSignal_c((SendSignal_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ObjectNode_c) {
          export_ObjectNode_c((ObjectNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ControlNode_c) {
          export_ControlNode_c((ControlNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InitialNode_c) {
          export_InitialNode_c((InitialNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityFinalNode_c) {
          export_ActivityFinalNode_c((ActivityFinalNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FlowFinalNode_c) {
          export_FlowFinalNode_c((FlowFinalNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DecisionMergeNode_c) {
          export_DecisionMergeNode_c((DecisionMergeNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ForkJoinNode_c) {
          export_ForkJoinNode_c((ForkJoinNode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityEdge_c) {
          export_ActivityEdge_c((ActivityEdge_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityPartition_c) {
          export_ActivityPartition_c((ActivityPartition_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActivityInActivity_c) {
          export_ActivityInActivity_c((ActivityInActivity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SpecificationPackage_c) {
          export_SpecificationPackage_c((SpecificationPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Subsystem_c) {
          export_Subsystem_c((Subsystem_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ModelClass_c) {
          export_ModelClass_c((ModelClass_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ImportedClass_c) {
          export_ImportedClass_c((ImportedClass_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof ExternalEntityInModel_c) {
          export_ExternalEntityInModel_c((ExternalEntityInModel_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Association_c) {
          export_Association_c((Association_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SubsystemInSubsystem_c) {
          export_SubsystemInSubsystem_c((SubsystemInSubsystem_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Subsystem_c) {
          export_Subsystem_c((Subsystem_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof Sequence_c) {
          export_Sequence_c((Sequence_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Communication_c) {
          export_Communication_c((Communication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseDiagram_c) {
          export_UseCaseDiagram_c((UseCaseDiagram_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Activity_c) {
          export_Activity_c((Activity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Operation_c) {
          export_Operation_c((Operation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof OperationParameter_c) {
          export_OperationParameter_c((OperationParameter_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof OperationBody_c) {
          export_OperationBody_c((OperationBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Attribute_c) {
          export_Attribute_c((Attribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BaseAttribute_c) {
          export_BaseAttribute_c((BaseAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DerivedBaseAttribute_c) {
          export_DerivedBaseAttribute_c((DerivedBaseAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DerivedAttributeBody_c) {
          export_DerivedAttributeBody_c((DerivedAttributeBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof NewBaseAttribute_c) {
          export_NewBaseAttribute_c((NewBaseAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ReferentialAttribute_c) {
          export_ReferentialAttribute_c((ReferentialAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof AttributeReferenceInClass_c) {
          export_AttributeReferenceInClass_c((AttributeReferenceInClass_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassIdentifier_c) {
          export_ClassIdentifier_c((ClassIdentifier_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassIdentifierAttribute_c) {
          export_ClassIdentifierAttribute_c((ClassIdentifierAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InstanceStateMachine_c) {
          export_InstanceStateMachine_c((InstanceStateMachine_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassStateMachine_c) {
          export_ClassStateMachine_c((ClassStateMachine_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SimpleAssociation_c) {
          export_SimpleAssociation_c((SimpleAssociation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LinkedAssociation_c) {
          export_LinkedAssociation_c((LinkedAssociation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SubtypeSupertypeAssociation_c) {
          export_SubtypeSupertypeAssociation_c((SubtypeSupertypeAssociation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof DerivedAssociation_c) {
          export_DerivedAssociation_c((DerivedAssociation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassInAssociation_c) {
          export_ClassInAssociation_c((ClassInAssociation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ReferredToClassInAssoc_c) {
          export_ReferredToClassInAssoc_c((ReferredToClassInAssoc_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsSimpleParticipant_c) {
          export_ClassAsSimpleParticipant_c((ClassAsSimpleParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsAssociatedOneSide_c) {
          export_ClassAsAssociatedOneSide_c((ClassAsAssociatedOneSide_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsAssociatedOtherSide_c) {
          export_ClassAsAssociatedOtherSide_c((ClassAsAssociatedOtherSide_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsSupertype_c) {
          export_ClassAsSupertype_c((ClassAsSupertype_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ReferredToIdentifierAttribute_c) {
          export_ReferredToIdentifierAttribute_c((ReferredToIdentifierAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ReferringClassInAssoc_c) {
          export_ReferringClassInAssoc_c((ReferringClassInAssoc_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsSimpleFormalizer_c) {
          export_ClassAsSimpleFormalizer_c((ClassAsSimpleFormalizer_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsLink_c) {
          export_ClassAsLink_c((ClassAsLink_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsSubtype_c) {
          export_ClassAsSubtype_c((ClassAsSubtype_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsDerivedOneSide_c) {
          export_ClassAsDerivedOneSide_c((ClassAsDerivedOneSide_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassAsDerivedOtherSide_c) {
          export_ClassAsDerivedOtherSide_c((ClassAsDerivedOtherSide_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof StateMachine_c) {
          export_StateMachine_c((StateMachine_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof MooreStateMachine_c) {
          export_MooreStateMachine_c((MooreStateMachine_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof MealyStateMachine_c) {
          export_MealyStateMachine_c((MealyStateMachine_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof StateMachineEventDataItem_c) {
          export_StateMachineEventDataItem_c((StateMachineEventDataItem_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof StateMachineEvent_c) {
          export_StateMachineEvent_c((StateMachineEvent_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof StateMachineState_c) {
          export_StateMachineState_c((StateMachineState_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Transition_c) {
          export_Transition_c((Transition_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof PolymorphicEvent_c) {
          export_PolymorphicEvent_c((PolymorphicEvent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SemEvent_c) {
          export_SemEvent_c((SemEvent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LocalEvent_c) {
          export_LocalEvent_c((LocalEvent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof NonLocalEvent_c) {
          export_NonLocalEvent_c((NonLocalEvent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SignalEvent_c) {
          export_SignalEvent_c((SignalEvent_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof StateEventMatrixEntry_c) {
          export_StateEventMatrixEntry_c((StateEventMatrixEntry_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof EventIgnored_c) {
          export_EventIgnored_c((EventIgnored_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CantHappen_c) {
          export_CantHappen_c((CantHappen_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof MooreActionHome_c) {
          export_MooreActionHome_c((MooreActionHome_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActionHome_c) {
          export_ActionHome_c((ActionHome_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Action_c) {
          export_Action_c((Action_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof StateActionBody_c) {
          export_StateActionBody_c((StateActionBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof TransitionActionBody_c) {
          export_TransitionActionBody_c((TransitionActionBody_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof NoEventTransition_c) {
          export_NoEventTransition_c((NoEventTransition_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof NewStateTransition_c) {
          export_NewStateTransition_c((NewStateTransition_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CreationTransition_c) {
          export_CreationTransition_c((CreationTransition_c)m_inst, pm, false, true, true);
          continue;
        }
        if(m_inst instanceof TransitionActionHome_c) {
          export_TransitionActionHome_c((TransitionActionHome_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Model_c) {
          export_Model_c((Model_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof GraphicalElement_c) {
          export_GraphicalElement_c((GraphicalElement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Connector_c) {
          export_Connector_c((Connector_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FloatingText_c) {
          export_FloatingText_c((FloatingText_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Shape_c) {
          export_Shape_c((Shape_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Elementstyle_c) {
          export_Elementstyle_c((Elementstyle_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Fillcolorstyle_c) {
          export_Fillcolorstyle_c((Fillcolorstyle_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Fontstyle_c) {
          export_Fontstyle_c((Fontstyle_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Linecolorstyle_c) {
          export_Linecolorstyle_c((Linecolorstyle_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ContainingShape_c) {
          export_ContainingShape_c((ContainingShape_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof NoncontainingShape_c) {
          export_NoncontainingShape_c((NoncontainingShape_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FloatingText_c) {
          export_FloatingText_c((FloatingText_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LineSegment_c) {
          export_LineSegment_c((LineSegment_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof AnchorOnSegment_c) {
          export_AnchorOnSegment_c((AnchorOnSegment_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Diagram_c) {
          export_Diagram_c((Diagram_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ElementInSuppression_c) {
          export_ElementInSuppression_c((ElementInSuppression_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof GraphicalElement_c) {
          export_GraphicalElement_c((GraphicalElement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Elementstyle_c) {
          export_Elementstyle_c((Elementstyle_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Layer_c) {
          export_Layer_c((Layer_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Graphicalelementinlayer_c) {
          export_Graphicalelementinlayer_c((Graphicalelementinlayer_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Graphnode_c) {
          export_Graphnode_c((Graphnode_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Graphelement_c) {
          export_Graphelement_c((Graphelement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Diagramelement_c) {
          export_Diagramelement_c((Diagramelement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Graphconnector_c) {
          export_Graphconnector_c((Graphconnector_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Graphedge_c) {
          export_Graphedge_c((Graphedge_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Waypoint_c) {
          export_Waypoint_c((Waypoint_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ExternalEntityParticipant_c) {
          export_ExternalEntityParticipant_c((ExternalEntityParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionPackageParticipant_c) {
          export_FunctionPackageParticipant_c((FunctionPackageParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassParticipant_c) {
          export_ClassParticipant_c((ClassParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassParticipantAttribute_c) {
          export_ClassParticipantAttribute_c((ClassParticipantAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InformalAttribute_c) {
          export_InformalAttribute_c((InformalAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FormalAttribute_c) {
          export_FormalAttribute_c((FormalAttribute_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ClassInstanceParticipant_c) {
          export_ClassInstanceParticipant_c((ClassInstanceParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InstanceAttributeValue_c) {
          export_InstanceAttributeValue_c((InstanceAttributeValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InstanceAttributeValue_c) {
          export_InstanceAttributeValue_c((InstanceAttributeValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InformalAttributeValue_c) {
          export_InformalAttributeValue_c((InformalAttributeValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FormalAttributeValue_c) {
          export_FormalAttributeValue_c((FormalAttributeValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActorParticipant_c) {
          export_ActorParticipant_c((ActorParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CommunicationLink_c) {
          export_CommunicationLink_c((CommunicationLink_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Message_c) {
          export_Message_c((Message_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseAssociation_c) {
          export_UseCaseAssociation_c((UseCaseAssociation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BinaryAssociation_c) {
          export_BinaryAssociation_c((BinaryAssociation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Generalization_c) {
          export_Generalization_c((Generalization_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Include_c) {
          export_Include_c((Include_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Extend_c) {
          export_Extend_c((Extend_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseParticipant_c) {
          export_UseCaseParticipant_c((UseCaseParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ComponentParticipant_c) {
          export_ComponentParticipant_c((ComponentParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Lifespan_c) {
          export_Lifespan_c((Lifespan_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof TimingMark_c) {
          export_TimingMark_c((TimingMark_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof TimeSpan_c) {
          export_TimeSpan_c((TimeSpan_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof PackageParticipant_c) {
          export_PackageParticipant_c((PackageParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ReturnMessage_c) {
          export_ReturnMessage_c((ReturnMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SynchronousMessage_c) {
          export_SynchronousMessage_c((SynchronousMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InformalSynchronousMessage_c) {
          export_InformalSynchronousMessage_c((InformalSynchronousMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionMessage_c) {
          export_FunctionMessage_c((FunctionMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof OperationMessage_c) {
          export_OperationMessage_c((OperationMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BridgeMessage_c) {
          export_BridgeMessage_c((BridgeMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InterfaceOperationMessage_c) {
          export_InterfaceOperationMessage_c((InterfaceOperationMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof AsynchronousMessage_c) {
          export_AsynchronousMessage_c((AsynchronousMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof EventMessage_c) {
          export_EventMessage_c((EventMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InformalAsynchronousMessage_c) {
          export_InformalAsynchronousMessage_c((InformalAsynchronousMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SignalMessage_c) {
          export_SignalMessage_c((SignalMessage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof MessageArgument_c) {
          export_MessageArgument_c((MessageArgument_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof MessageArgument_c) {
          export_MessageArgument_c((MessageArgument_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BridgeArgument_c) {
          export_BridgeArgument_c((BridgeArgument_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof OperationArgument_c) {
          export_OperationArgument_c((OperationArgument_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionArgument_c) {
          export_FunctionArgument_c((FunctionArgument_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof EventArgument_c) {
          export_EventArgument_c((EventArgument_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InformalArgument_c) {
          export_InformalArgument_c((InformalArgument_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ExecutablePropertyArgument_c) {
          export_ExecutablePropertyArgument_c((ExecutablePropertyArgument_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SequenceInSequence_c) {
          export_SequenceInSequence_c((SequenceInSequence_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SequenceInSequence_c) {
          export_SequenceInSequence_c((SequenceInSequence_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InteractionParticipant_c) {
          export_InteractionParticipant_c((InteractionParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SpecificationPackage_c) {
          export_SpecificationPackage_c((SpecificationPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CommunicationInCommunication_c) {
          export_CommunicationInCommunication_c((CommunicationInCommunication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CommunicationInCommunication_c) {
          export_CommunicationInCommunication_c((CommunicationInCommunication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ParticipantInCommunication_c) {
          export_ParticipantInCommunication_c((ParticipantInCommunication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InteractionParticipant_c) {
          export_InteractionParticipant_c((InteractionParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof MessageInCommunication_c) {
          export_MessageInCommunication_c((MessageInCommunication_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Message_c) {
          export_Message_c((Message_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SpecificationPackage_c) {
          export_SpecificationPackage_c((SpecificationPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseInUseCase_c) {
          export_UseCaseInUseCase_c((UseCaseInUseCase_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UseCaseInUseCase_c) {
          export_UseCaseInUseCase_c((UseCaseInUseCase_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ParticipantInUseCase_c) {
          export_ParticipantInUseCase_c((ParticipantInUseCase_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InteractionParticipant_c) {
          export_InteractionParticipant_c((InteractionParticipant_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SpecificationPackage_c) {
          export_SpecificationPackage_c((SpecificationPackage_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Body_c) {
          export_Body_c((Body_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Block_c) {
          export_Block_c((Block_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Statement_c) {
          export_Statement_c((Statement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BridgeInvocation_c) {
          export_BridgeInvocation_c((BridgeInvocation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionInvocation_c) {
          export_FunctionInvocation_c((FunctionInvocation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ReturnStmt_c) {
          export_ReturnStmt_c((ReturnStmt_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof OperationInvocation_c) {
          export_OperationInvocation_c((OperationInvocation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InterfaceOperationInvocation_c) {
          export_InterfaceOperationInvocation_c((InterfaceOperationInvocation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SignalInvocation_c) {
          export_SignalInvocation_c((SignalInvocation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Create_c) {
          export_Create_c((Create_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CreateNoVariable_c) {
          export_CreateNoVariable_c((CreateNoVariable_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Delete_c) {
          export_Delete_c((Delete_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof AssignToMember_c) {
          export_AssignToMember_c((AssignToMember_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Select_c) {
          export_Select_c((Select_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SelectRelatedWhere_c) {
          export_SelectRelatedWhere_c((SelectRelatedWhere_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SelectRelatedBy_c) {
          export_SelectRelatedBy_c((SelectRelatedBy_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ChainLink_c) {
          export_ChainLink_c((ChainLink_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ChainLink_c) {
          export_ChainLink_c((ChainLink_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SelectFromInstances_c) {
          export_SelectFromInstances_c((SelectFromInstances_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SelectFromInstancesWhere_c) {
          export_SelectFromInstancesWhere_c((SelectFromInstancesWhere_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof EventSpecificationStatement_c) {
          export_EventSpecificationStatement_c((EventSpecificationStatement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CreateEventStatement_c) {
          export_CreateEventStatement_c((CreateEventStatement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CreateSmEventStatement_c) {
          export_CreateSmEventStatement_c((CreateSmEventStatement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CreateEventToInstance_c) {
          export_CreateEventToInstance_c((CreateEventToInstance_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CreateEventToClass_c) {
          export_CreateEventToClass_c((CreateEventToClass_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CreateEventToCreator_c) {
          export_CreateEventToCreator_c((CreateEventToCreator_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof CreateEventToExternalEntity_c) {
          export_CreateEventToExternalEntity_c((CreateEventToExternalEntity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof GenerateEventStatement_c) {
          export_GenerateEventStatement_c((GenerateEventStatement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof GenerateSmEventStatement_c) {
          export_GenerateSmEventStatement_c((GenerateSmEventStatement_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Generate_c) {
          export_Generate_c((Generate_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof GenerateToClass_c) {
          export_GenerateToClass_c((GenerateToClass_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof GenerateToCreator_c) {
          export_GenerateToCreator_c((GenerateToCreator_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof GenerateToExternalEntity_c) {
          export_GenerateToExternalEntity_c((GenerateToExternalEntity_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof GeneratePreexistingEvent_c) {
          export_GeneratePreexistingEvent_c((GeneratePreexistingEvent_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Relate_c) {
          export_Relate_c((Relate_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof RelateUsing_c) {
          export_RelateUsing_c((RelateUsing_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Unrelate_c) {
          export_Unrelate_c((Unrelate_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UnrelateUsing_c) {
          export_UnrelateUsing_c((UnrelateUsing_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Break_c) {
          export_Break_c((Break_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Continue_c) {
          export_Continue_c((Continue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Control_c) {
          export_Control_c((Control_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof WhileStmt_c) {
          export_WhileStmt_c((WhileStmt_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof IfStmt_c) {
          export_IfStmt_c((IfStmt_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ElseifStmt_c) {
          export_ElseifStmt_c((ElseifStmt_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ElseStmt_c) {
          export_ElseStmt_c((ElseStmt_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ForStmt_c) {
          export_ForStmt_c((ForStmt_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Value_c) {
          export_Value_c((Value_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ParameterValue_c) {
          export_ParameterValue_c((ParameterValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof FunctionValue_c) {
          export_FunctionValue_c((FunctionValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SelectedReference_c) {
          export_SelectedReference_c((SelectedReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BinaryOperation_c) {
          export_BinaryOperation_c((BinaryOperation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof UnaryOperation_c) {
          export_UnaryOperation_c((UnaryOperation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LiteralBoolean_c) {
          export_LiteralBoolean_c((LiteralBoolean_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LiteralString_c) {
          export_LiteralString_c((LiteralString_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LiteralReal_c) {
          export_LiteralReal_c((LiteralReal_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LiteralInteger_c) {
          export_LiteralInteger_c((LiteralInteger_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof TransientValueReference_c) {
          export_TransientValueReference_c((TransientValueReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof AttributeValueReference_c) {
          export_AttributeValueReference_c((AttributeValueReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InstanceSetReference_c) {
          export_InstanceSetReference_c((InstanceSetReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InstanceReference_c) {
          export_InstanceReference_c((InstanceReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof EventDatumValue_c) {
          export_EventDatumValue_c((EventDatumValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof EventParameterReference_c) {
          export_EventParameterReference_c((EventParameterReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof OperationValue_c) {
          export_OperationValue_c((OperationValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof BridgeValue_c) {
          export_BridgeValue_c((BridgeValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof LiteralEnumerator_c) {
          export_LiteralEnumerator_c((LiteralEnumerator_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof MemberValueReference_c) {
          export_MemberValueReference_c((MemberValueReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ArrayElementReference_c) {
          export_ArrayElementReference_c((ArrayElementReference_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ArrayLengthValue_c) {
          export_ArrayLengthValue_c((ArrayLengthValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof MessageValue_c) {
          export_MessageValue_c((MessageValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof SymbolicConstantValue_c) {
          export_SymbolicConstantValue_c((SymbolicConstantValue_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof ActualParameter_c) {
          export_ActualParameter_c((ActualParameter_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Variable_c) {
          export_Variable_c((Variable_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InstanceHandle_c) {
          export_InstanceHandle_c((InstanceHandle_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof InstanceSet_c) {
          export_InstanceSet_c((InstanceSet_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof TransientVar_c) {
          export_TransientVar_c((TransientVar_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof VariableLocation_c) {
          export_VariableLocation_c((VariableLocation_c)m_inst, pm, false, true );
          continue;
        }
        if(m_inst instanceof Dimensions_c) {
          export_Dimensions_c((Dimensions_c)m_inst, pm, false, true );
          continue;
        }
      }
      writeCollectedProxies();
      m_fh.close();
      pm.done();
    } catch (IOException e) {
      // do nothing
    }
    writtenProxies.clear();
    collectedProxies.clear();
    writtenInstances.clear();
  }

protected void export_SystemModel_c( SystemModel_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SystemModel_c_sql(inst);
                Domain_c [] Domain_c28 = 
Domain_c.getManyS_DOMsOnR28(
inst)
;



      for ( int Domain_c_index = 0;
            Domain_c_index < Domain_c28.length;
            ++Domain_c_index )
      {
        export_Domain_c(Domain_c28[Domain_c_index], pm, writeAsProxies, isPersistable );
      }

                SystemDatatypePackage_c [] SystemDatatypePackage_c4400 = 
SystemDatatypePackage_c.getManySLD_SDPsOnR4400(
inst)
;



      for ( int SystemDatatypePackage_c_index = 0;
            SystemDatatypePackage_c_index < SystemDatatypePackage_c4400.length;
            ++SystemDatatypePackage_c_index )
      {
        export_SystemDatatypePackage_c(SystemDatatypePackage_c4400[SystemDatatypePackage_c_index], pm, writeAsProxies, isPersistable );
      }

                ComponentPackage_c [] ComponentPackage_c4602 = 
ComponentPackage_c.getManyCP_CPsOnR4602(
inst)
;



      for ( int ComponentPackage_c_index = 0;
            ComponentPackage_c_index < ComponentPackage_c4602.length;
            ++ComponentPackage_c_index )
      {
        export_ComponentPackage_c(ComponentPackage_c4602[ComponentPackage_c_index], pm, writeAsProxies, isPersistable );
      }

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_SystemModelPackage(inst, pm, false, isPersistable);

                InterfacePackage_c [] InterfacePackage_c4302 = 
InterfacePackage_c.getManyIP_IPsOnR4302(
inst)
;



      for ( int InterfacePackage_c_index = 0;
            InterfacePackage_c_index < InterfacePackage_c4302.length;
            ++InterfacePackage_c_index )
      {
        export_InterfacePackage_c(InterfacePackage_c4302[InterfacePackage_c_index], pm, writeAsProxies, isPersistable );
      }

                Sequence_c [] Sequence_c950 = 
Sequence_c.getManySQ_SsOnR950(
inst)
;



      for ( int Sequence_c_index = 0;
            Sequence_c_index < Sequence_c950.length;
            ++Sequence_c_index )
      {
        export_Sequence_c(Sequence_c950[Sequence_c_index], pm, writeAsProxies, isPersistable );
      }

                Communication_c [] Communication_c1136 = 
Communication_c.getManyCOMM_COMMsOnR1136(
inst)
;



      for ( int Communication_c_index = 0;
            Communication_c_index < Communication_c1136.length;
            ++Communication_c_index )
      {
        export_Communication_c(Communication_c1136[Communication_c_index], pm, writeAsProxies, isPersistable );
      }

                UseCaseDiagram_c [] UseCaseDiagram_c1211 = 
UseCaseDiagram_c.getManyUC_UCCsOnR1211(
inst)
;



      for ( int UseCaseDiagram_c_index = 0;
            UseCaseDiagram_c_index < UseCaseDiagram_c1211.length;
            ++UseCaseDiagram_c_index )
      {
        export_UseCaseDiagram_c(UseCaseDiagram_c1211[UseCaseDiagram_c_index], pm, writeAsProxies, isPersistable );
      }

                Activity_c [] Activity_c1113 = 
Activity_c.getManyA_AsOnR1113(
inst)
;



      for ( int Activity_c_index = 0;
            Activity_c_index < Activity_c1113.length;
            ++Activity_c_index )
      {
        export_Activity_c(Activity_c1113[Activity_c_index], pm, writeAsProxies, isPersistable );
      }

                Package_c [] Package_c1401 = 
Package_c.getManyEP_PKGsOnR1401(
inst)
;



      for ( int Package_c_index = 0;
            Package_c_index < Package_c1401.length;
            ++Package_c_index )
      {
        export_Package_c(Package_c1401[Package_c_index], pm, writeAsProxies, isPersistable );
      }

}
protected void export_Domain_c( Domain_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Domain_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_DPD(inst, pm, false, isPersistable);

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_SRM(inst, pm, false, isPersistable);

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_SCM(inst, pm, false, isPersistable);

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_SAM(inst, pm, false, isPersistable);

                DataTypePackage_c [] DataTypePackage_c40 = 
DataTypePackage_c.getManyS_DPKsOnR40(
inst)
;



      for ( int DataTypePackage_c_index = 0;
            DataTypePackage_c_index < DataTypePackage_c40.length;
            ++DataTypePackage_c_index )
      {
        export_DataTypePackage_c(DataTypePackage_c40[DataTypePackage_c_index], pm, writeAsProxies, isPersistable );
      }

                ExternalEntityPackage_c [] ExternalEntityPackage_c36 = 
ExternalEntityPackage_c.getManyS_EEPKsOnR36(
inst)
;



      for ( int ExternalEntityPackage_c_index = 0;
            ExternalEntityPackage_c_index < ExternalEntityPackage_c36.length;
            ++ExternalEntityPackage_c_index )
      {
        export_ExternalEntityPackage_c(ExternalEntityPackage_c36[ExternalEntityPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                FunctionPackage_c [] FunctionPackage_c29 = 
FunctionPackage_c.getManyS_FPKsOnR29(
inst)
;



      for ( int FunctionPackage_c_index = 0;
            FunctionPackage_c_index < FunctionPackage_c29.length;
            ++FunctionPackage_c_index )
      {
        export_FunctionPackage_c(FunctionPackage_c29[FunctionPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                SubsystemInDomain_c [] SubsystemInDomain_c43 = 
SubsystemInDomain_c.getManyS_SIDsOnR43(
inst)
;



      for ( int SubsystemInDomain_c_index = 0;
            SubsystemInDomain_c_index < SubsystemInDomain_c43.length;
            ++SubsystemInDomain_c_index )
      {
        export_SubsystemInDomain_c(SubsystemInDomain_c43[SubsystemInDomain_c_index], pm, writeAsProxies, isPersistable );
      }

                Sequence_c [] Sequence_c913 = 
Sequence_c.getManySQ_SsOnR913(
inst)
;



      for ( int Sequence_c_index = 0;
            Sequence_c_index < Sequence_c913.length;
            ++Sequence_c_index )
      {
        export_Sequence_c(Sequence_c913[Sequence_c_index], pm, writeAsProxies, isPersistable );
      }

                Communication_c [] Communication_c1132 = 
Communication_c.getManyCOMM_COMMsOnR1132(
inst)
;



      for ( int Communication_c_index = 0;
            Communication_c_index < Communication_c1132.length;
            ++Communication_c_index )
      {
        export_Communication_c(Communication_c1132[Communication_c_index], pm, writeAsProxies, isPersistable );
      }

                UseCaseDiagram_c [] UseCaseDiagram_c1201 = 
UseCaseDiagram_c.getManyUC_UCCsOnR1201(
inst)
;



      for ( int UseCaseDiagram_c_index = 0;
            UseCaseDiagram_c_index < UseCaseDiagram_c1201.length;
            ++UseCaseDiagram_c_index )
      {
        export_UseCaseDiagram_c(UseCaseDiagram_c1201[UseCaseDiagram_c_index], pm, writeAsProxies, isPersistable );
      }

                Activity_c [] Activity_c1100 = 
Activity_c.getManyA_AsOnR1100(
inst)
;



      for ( int Activity_c_index = 0;
            Activity_c_index < Activity_c1100.length;
            ++Activity_c_index )
      {
        export_Activity_c(Activity_c1100[Activity_c_index], pm, writeAsProxies, isPersistable );
      }

                DatatypeInSuppression_c [] DatatypeInSuppression_c47 = 
DatatypeInSuppression_c.getManyS_DISsOnR47(
inst)
;



      for ( int DatatypeInSuppression_c_index = 0;
            DatatypeInSuppression_c_index < DatatypeInSuppression_c47.length;
            ++DatatypeInSuppression_c_index )
      {
        export_DatatypeInSuppression_c(DatatypeInSuppression_c47[DatatypeInSuppression_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_SYS on R28
            SystemModel_c temp1 = SystemModel_c.getOneS_SYSOnR28(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_DPD( Domain_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DPD_sql(inst, pm);
}
protected void export_SRM( Domain_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SRM_sql(inst, pm);
}
protected void export_SCM( Domain_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SCM_sql(inst, pm);
}
protected void export_SAM( Domain_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SAM_sql(inst, pm);
}
protected void export_DataTypePackage_c( DataTypePackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DataTypePackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_DataTypePackageDiagram(inst, pm, false, isPersistable);

                DataTypePackageInPackage_c DataTypePackageInPackage_c37 = 
DataTypePackageInPackage_c.getOneS_DPIPOnR37(
inst)
;



      export_DataTypePackageInPackage_c( DataTypePackageInPackage_c37, pm, writeAsProxies, isPersistable );

                DataTypeInPackage_c [] DataTypeInPackage_c39 = 
DataTypeInPackage_c.getManyS_DIPsOnR39(
inst)
;



      for ( int DataTypeInPackage_c_index = 0;
            DataTypeInPackage_c_index < DataTypeInPackage_c39.length;
            ++DataTypeInPackage_c_index )
      {
        export_DataTypeInPackage_c(DataTypeInPackage_c39[DataTypeInPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                SystemDatatypeInPackage_c [] SystemDatatypeInPackage_c4401 = 
SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4401(
inst)
;



      for ( int SystemDatatypeInPackage_c_index = 0;
            SystemDatatypeInPackage_c_index < SystemDatatypeInPackage_c4401.length;
            ++SystemDatatypeInPackage_c_index )
      {
        export_SystemDatatypeInPackage_c(SystemDatatypeInPackage_c4401[SystemDatatypeInPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                SpecificationPackage_c [] SpecificationPackage_c1402 = 
SpecificationPackage_c.getManyEP_SPKGsOnR1402(
inst)
;



      for ( int SpecificationPackage_c_index = 0;
            SpecificationPackage_c_index < SpecificationPackage_c1402.length;
            ++SpecificationPackage_c_index )
      {
        export_SpecificationPackage_c(SpecificationPackage_c1402[SpecificationPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                ConstantInPackage_c [] ConstantInPackage_c1506 = 
ConstantInPackage_c.getManyCNST_CIPsOnR1506(
inst)
;



      for ( int ConstantInPackage_c_index = 0;
            ConstantInPackage_c_index < ConstantInPackage_c1506.length;
            ++ConstantInPackage_c_index )
      {
        export_ConstantInPackage_c(ConstantInPackage_c1506[ConstantInPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                SystemConstantInPackage_c [] SystemConstantInPackage_c4403 = 
SystemConstantInPackage_c.getManySLD_SCINPsOnR4403(
inst)
;



      for ( int SystemConstantInPackage_c_index = 0;
            SystemConstantInPackage_c_index < SystemConstantInPackage_c4403.length;
            ++SystemConstantInPackage_c_index )
      {
        export_SystemConstantInPackage_c(SystemConstantInPackage_c4403[SystemConstantInPackage_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SpecificationPackage_c SpecificationPackage_c_inst = 
SpecificationPackage_c.getOneEP_SPKGOnR1402(
inst)
;



	write_SpecificationPackage_c_sql(SpecificationPackage_c_inst);

}
    // select part S_DPIP on R38
            DataTypePackageInPackage_c temp2 = DataTypePackageInPackage_c.getOneS_DPIPOnR38(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_DOM on R40
            Domain_c temp3 = Domain_c.getOneS_DOMOnR40(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ExternalEntityPackage_c( ExternalEntityPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExternalEntityPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_ExternalEntityPackageDiagram(inst, pm, false, isPersistable);

                EePackageInPackage_c EePackageInPackage_c34 = 
EePackageInPackage_c.getOneS_EEPIPOnR34(
inst)
;



      export_EePackageInPackage_c( EePackageInPackage_c34, pm, writeAsProxies, isPersistable );

                ExternalEntityPackageInDomain_c ExternalEntityPackageInDomain_c300 = 
ExternalEntityPackageInDomain_c.getOnePL_EEPIDOnR300(
inst)
;



      export_ExternalEntityPackageInDomain_c( ExternalEntityPackageInDomain_c300, pm, writeAsProxies, isPersistable );

                ExternalEntityInPackage_c [] ExternalEntityInPackage_c33 = 
ExternalEntityInPackage_c.getManyS_EEIPsOnR33(
inst)
;



      for ( int ExternalEntityInPackage_c_index = 0;
            ExternalEntityInPackage_c_index < ExternalEntityInPackage_c33.length;
            ++ExternalEntityInPackage_c_index )
      {
        export_ExternalEntityInPackage_c(ExternalEntityInPackage_c33[ExternalEntityInPackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_EEPIP on R35
            EePackageInPackage_c temp1 = EePackageInPackage_c.getOneS_EEPIPOnR35(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_DOM on R36
            Domain_c temp2 = Domain_c.getOneS_DOMOnR36(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_FunctionPackage_c( FunctionPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_FunctionPackageDiagram(inst, pm, false, isPersistable);

                FunctionPackageInPackage_c FunctionPackageInPackage_c30 = 
FunctionPackageInPackage_c.getOneS_FPIPOnR30(
inst)
;



      export_FunctionPackageInPackage_c( FunctionPackageInPackage_c30, pm, writeAsProxies, isPersistable );

                FunctionPackageInDomain_c FunctionPackageInDomain_c301 = 
FunctionPackageInDomain_c.getOnePL_FPIDOnR301(
inst)
;



      export_FunctionPackageInDomain_c( FunctionPackageInDomain_c301, pm, writeAsProxies, isPersistable );

                FunctionInPackage_c [] FunctionInPackage_c31 = 
FunctionInPackage_c.getManyS_FIPsOnR31(
inst)
;



      for ( int FunctionInPackage_c_index = 0;
            FunctionInPackage_c_index < FunctionInPackage_c31.length;
            ++FunctionInPackage_c_index )
      {
        export_FunctionInPackage_c(FunctionInPackage_c31[FunctionInPackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DOM on R29
            Domain_c temp1 = Domain_c.getOneS_DOMOnR29(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_FPIP on R32
            FunctionPackageInPackage_c temp2 = FunctionPackageInPackage_c.getOneS_FPIPOnR32(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SubsystemInDomain_c( SubsystemInDomain_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SubsystemInDomain_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Subsystem_c [] Subsystem_c43 = 
Subsystem_c.getManyS_SSsOnR43(
inst)
;



      for ( int Subsystem_c_index = 0;
            Subsystem_c_index < Subsystem_c43.length;
            ++Subsystem_c_index )
      {
        export_Subsystem_c(Subsystem_c43[Subsystem_c_index], pm, writeAsProxies, isPersistable , false);
      }

    // select aone S_SS on R43
            Subsystem_c temp1 = Subsystem_c.getOneS_SSOnR43(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_DOM on R43
            Domain_c temp2 = Domain_c.getOneS_DOMOnR43(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Sequence_c( Sequence_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Sequence_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_SequenceDiagram(inst, pm, false, isPersistable);

                SequenceInSequence_c SequenceInSequence_c911 = 
SequenceInSequence_c.getOneSQ_SISOnR911(
inst)
;



      export_SequenceInSequence_c( SequenceInSequence_c911, pm, writeAsProxies, isPersistable );


                InteractionParticipant_c [] InteractionParticipant_c929 = 
InteractionParticipant_c.getManySQ_PsOnR929(
inst)
;



      for ( int InteractionParticipant_c_index = 0;
            InteractionParticipant_c_index < InteractionParticipant_c929.length;
            ++InteractionParticipant_c_index )
      {
        export_InteractionParticipant_c(InteractionParticipant_c929[InteractionParticipant_c_index], pm, writeAsProxies, isPersistable );
      }

                SpecificationPackage_c [] SpecificationPackage_c1402 = 
SpecificationPackage_c.getManyEP_SPKGsOnR1402(
inst)
;



      for ( int SpecificationPackage_c_index = 0;
            SpecificationPackage_c_index < SpecificationPackage_c1402.length;
            ++SpecificationPackage_c_index )
      {
        export_SpecificationPackage_c(SpecificationPackage_c1402[SpecificationPackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DOM on R913
            Domain_c temp1 = Domain_c.getOneS_DOMOnR913(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SS on R914
            Subsystem_c temp2 = Subsystem_c.getOneS_SSOnR914(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SQ_SIS on R928
            SequenceInSequence_c temp3 = SequenceInSequence_c.getOneSQ_SISOnR928(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R950
            SystemModel_c temp4 = SystemModel_c.getOneS_SYSOnR950(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part CP_CP on R951
            ComponentPackage_c temp5 = ComponentPackage_c.getOneCP_CPOnR951(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_C on R952
            Component_c temp6 = Component_c.getOneC_COnR952(inst,true);
	      if(forceProxyExport && temp6 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp6 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp6_pmc = temp6.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp6_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp6.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp6.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp6.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp6.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SpecificationPackage_c SpecificationPackage_c_inst = 
SpecificationPackage_c.getOneEP_SPKGOnR1402(
inst)
;



	write_SpecificationPackage_c_sql(SpecificationPackage_c_inst);

}
}
protected void export_Communication_c( Communication_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Communication_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_CommunicationDiagram(inst, pm, false, isPersistable);

                CommunicationInCommunication_c CommunicationInCommunication_c1130 = 
CommunicationInCommunication_c.getOneCOMM_CICOnR1130(
inst)
;



      export_CommunicationInCommunication_c( CommunicationInCommunication_c1130, pm, writeAsProxies, isPersistable );


                ParticipantInCommunication_c [] ParticipantInCommunication_c1126 = 
ParticipantInCommunication_c.getManyCOMM_PICsOnR1126(
inst)
;



      for ( int ParticipantInCommunication_c_index = 0;
            ParticipantInCommunication_c_index < ParticipantInCommunication_c1126.length;
            ++ParticipantInCommunication_c_index )
      {
        export_ParticipantInCommunication_c(ParticipantInCommunication_c1126[ParticipantInCommunication_c_index], pm, writeAsProxies, isPersistable );
      }

                MessageInCommunication_c [] MessageInCommunication_c1135 = 
MessageInCommunication_c.getManyCOMM_MICsOnR1135(
inst)
;



      for ( int MessageInCommunication_c_index = 0;
            MessageInCommunication_c_index < MessageInCommunication_c1135.length;
            ++MessageInCommunication_c_index )
      {
        export_MessageInCommunication_c(MessageInCommunication_c1135[MessageInCommunication_c_index], pm, writeAsProxies, isPersistable );
      }

                SpecificationPackage_c [] SpecificationPackage_c1402 = 
SpecificationPackage_c.getManyEP_SPKGsOnR1402(
inst)
;



      for ( int SpecificationPackage_c_index = 0;
            SpecificationPackage_c_index < SpecificationPackage_c1402.length;
            ++SpecificationPackage_c_index )
      {
        export_SpecificationPackage_c(SpecificationPackage_c1402[SpecificationPackage_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SpecificationPackage_c SpecificationPackage_c_inst = 
SpecificationPackage_c.getOneEP_SPKGOnR1402(
inst)
;



	write_SpecificationPackage_c_sql(SpecificationPackage_c_inst);

}
    // select part COMM_CIC on R1129
            CommunicationInCommunication_c temp2 = CommunicationInCommunication_c.getOneCOMM_CICOnR1129(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_DOM on R1132
            Domain_c temp3 = Domain_c.getOneS_DOMOnR1132(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SS on R1131
            Subsystem_c temp4 = Subsystem_c.getOneS_SSOnR1131(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R1136
            SystemModel_c temp5 = SystemModel_c.getOneS_SYSOnR1136(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part CP_CP on R1137
            ComponentPackage_c temp6 = ComponentPackage_c.getOneCP_CPOnR1137(inst,true);
	      if(forceProxyExport && temp6 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp6 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp6_pmc = temp6.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp6_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp6.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp6.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp6.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp6.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_C on R1138
            Component_c temp7 = Component_c.getOneC_COnR1138(inst,true);
	      if(forceProxyExport && temp7 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp7, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp7 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp7_pmc = temp7.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp7_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp7.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp7, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp7.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp7.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp7.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_UseCaseDiagram_c( UseCaseDiagram_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_UseCaseDiagram_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_UseCaseDiagram(inst, pm, false, isPersistable);

                UseCaseInUseCase_c UseCaseInUseCase_c1208 = 
UseCaseInUseCase_c.getOneUC_UIUOnR1208(
inst)
;



      export_UseCaseInUseCase_c( UseCaseInUseCase_c1208, pm, writeAsProxies, isPersistable );


                ParticipantInUseCase_c [] ParticipantInUseCase_c1203 = 
ParticipantInUseCase_c.getManyUC_PIUCsOnR1203(
inst)
;



      for ( int ParticipantInUseCase_c_index = 0;
            ParticipantInUseCase_c_index < ParticipantInUseCase_c1203.length;
            ++ParticipantInUseCase_c_index )
      {
        export_ParticipantInUseCase_c(ParticipantInUseCase_c1203[ParticipantInUseCase_c_index], pm, writeAsProxies, isPersistable );
      }

                SpecificationPackage_c [] SpecificationPackage_c1402 = 
SpecificationPackage_c.getManyEP_SPKGsOnR1402(
inst)
;



      for ( int SpecificationPackage_c_index = 0;
            SpecificationPackage_c_index < SpecificationPackage_c1402.length;
            ++SpecificationPackage_c_index )
      {
        export_SpecificationPackage_c(SpecificationPackage_c1402[SpecificationPackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DOM on R1201
            Domain_c temp1 = Domain_c.getOneS_DOMOnR1201(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SS on R1202
            Subsystem_c temp2 = Subsystem_c.getOneS_SSOnR1202(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part UC_UIU on R1209
            UseCaseInUseCase_c temp3 = UseCaseInUseCase_c.getOneUC_UIUOnR1209(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R1211
            SystemModel_c temp4 = SystemModel_c.getOneS_SYSOnR1211(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part CP_CP on R1212
            ComponentPackage_c temp5 = ComponentPackage_c.getOneCP_CPOnR1212(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_C on R1213
            Component_c temp6 = Component_c.getOneC_COnR1213(inst,true);
	      if(forceProxyExport && temp6 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp6 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp6_pmc = temp6.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp6_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp6.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp6.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp6.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp6.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SpecificationPackage_c SpecificationPackage_c_inst = 
SpecificationPackage_c.getOneEP_SPKGOnR1402(
inst)
;



	write_SpecificationPackage_c_sql(SpecificationPackage_c_inst);

}
}
protected void export_Activity_c( Activity_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Activity_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_ActivityDiagram(inst, pm, false, isPersistable);

                ActivityNode_c [] ActivityNode_c1101 = 
ActivityNode_c.getManyA_NsOnR1101(
inst)
;



      for ( int ActivityNode_c_index = 0;
            ActivityNode_c_index < ActivityNode_c1101.length;
            ++ActivityNode_c_index )
      {
        export_ActivityNode_c(ActivityNode_c1101[ActivityNode_c_index], pm, writeAsProxies, isPersistable );
      }

                ActivityEdge_c [] ActivityEdge_c1102 = 
ActivityEdge_c.getManyA_EsOnR1102(
inst)
;



      for ( int ActivityEdge_c_index = 0;
            ActivityEdge_c_index < ActivityEdge_c1102.length;
            ++ActivityEdge_c_index )
      {
        export_ActivityEdge_c(ActivityEdge_c1102[ActivityEdge_c_index], pm, writeAsProxies, isPersistable );
      }

                ActivityPartition_c [] ActivityPartition_c1111 = 
ActivityPartition_c.getManyA_APsOnR1111(
inst)
;



      for ( int ActivityPartition_c_index = 0;
            ActivityPartition_c_index < ActivityPartition_c1111.length;
            ++ActivityPartition_c_index )
      {
        export_ActivityPartition_c(ActivityPartition_c1111[ActivityPartition_c_index], pm, writeAsProxies, isPersistable );
      }

                ActivityInActivity_c ActivityInActivity_c1109 = 
ActivityInActivity_c.getOneA_AIAOnR1109(
inst)
;



      export_ActivityInActivity_c( ActivityInActivity_c1109, pm, writeAsProxies, isPersistable );

                SpecificationPackage_c [] SpecificationPackage_c1402 = 
SpecificationPackage_c.getManyEP_SPKGsOnR1402(
inst)
;



      for ( int SpecificationPackage_c_index = 0;
            SpecificationPackage_c_index < SpecificationPackage_c1402.length;
            ++SpecificationPackage_c_index )
      {
        export_SpecificationPackage_c(SpecificationPackage_c1402[SpecificationPackage_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SpecificationPackage_c SpecificationPackage_c_inst = 
SpecificationPackage_c.getOneEP_SPKGOnR1402(
inst)
;



	write_SpecificationPackage_c_sql(SpecificationPackage_c_inst);

}
    // select part S_DOM on R1100
            Domain_c temp2 = Domain_c.getOneS_DOMOnR1100(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SS on R1108
            Subsystem_c temp3 = Subsystem_c.getOneS_SSOnR1108(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part A_AIA on R1110
            ActivityInActivity_c temp4 = ActivityInActivity_c.getOneA_AIAOnR1110(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R1113
            SystemModel_c temp5 = SystemModel_c.getOneS_SYSOnR1113(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part CP_CP on R1114
            ComponentPackage_c temp6 = ComponentPackage_c.getOneCP_CPOnR1114(inst,true);
	      if(forceProxyExport && temp6 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp6 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp6_pmc = temp6.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp6_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp6.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp6.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp6.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp6.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_C on R1115
            Component_c temp7 = Component_c.getOneC_COnR1115(inst,true);
	      if(forceProxyExport && temp7 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp7, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp7 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp7_pmc = temp7.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp7_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp7.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp7, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp7.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp7.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp7.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SystemDatatypePackage_c( SystemDatatypePackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SystemDatatypePackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                DataTypePackage_c [] DataTypePackage_c4400 = 
DataTypePackage_c.getManyS_DPKsOnR4400(
inst)
;



      for ( int DataTypePackage_c_index = 0;
            DataTypePackage_c_index < DataTypePackage_c4400.length;
            ++DataTypePackage_c_index )
      {
        export_DataTypePackage_c(DataTypePackage_c4400[DataTypePackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone S_SYS on R4400
            SystemModel_c temp1 = SystemModel_c.getOneS_SYSOnR4400(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_DPK on R4400
            DataTypePackage_c temp2 = DataTypePackage_c.getOneS_DPKOnR4400(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ComponentPackage_c( ComponentPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ComponentPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_ComponentPackage(inst, pm, false, isPersistable);

                ComponentPackageInPackage_c [] ComponentPackageInPackage_c4600 = 
ComponentPackageInPackage_c.getManyCP_CPINPsOnR4600(
inst)
;



      for ( int ComponentPackageInPackage_c_index = 0;
            ComponentPackageInPackage_c_index < ComponentPackageInPackage_c4600.length;
            ++ComponentPackageInPackage_c_index )
      {
        export_ComponentPackageInPackage_c(ComponentPackageInPackage_c4600[ComponentPackageInPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                ComponentReference_c [] ComponentReference_c4605 = 
ComponentReference_c.getManyCL_ICsOnR4605(
inst)
;



      for ( int ComponentReference_c_index = 0;
            ComponentReference_c_index < ComponentReference_c4605.length;
            ++ComponentReference_c_index )
      {
        export_ComponentReference_c(ComponentReference_c4605[ComponentReference_c_index], pm, writeAsProxies, isPersistable );
      }

                Component_c [] Component_c4604 = 
Component_c.getManyC_CsOnR4604(
inst)
;



      for ( int Component_c_index = 0;
            Component_c_index < Component_c4604.length;
            ++Component_c_index )
      {
        export_Component_c(Component_c4604[Component_c_index], pm, writeAsProxies, isPersistable , true);
      }

                InterfacePackage_c [] InterfacePackage_c4607 = 
InterfacePackage_c.getManyIP_IPsOnR4607(
inst)
;



      for ( int InterfacePackage_c_index = 0;
            InterfacePackage_c_index < InterfacePackage_c4607.length;
            ++InterfacePackage_c_index )
      {
        export_InterfacePackage_c(InterfacePackage_c4607[InterfacePackage_c_index], pm, writeAsProxies, isPersistable );
      }

                SatisfactionInComponentPackage_c [] SatisfactionInComponentPackage_c9001 = 
SatisfactionInComponentPackage_c.getManyPA_SICPsOnR9001(
inst)
;



      for ( int SatisfactionInComponentPackage_c_index = 0;
            SatisfactionInComponentPackage_c_index < SatisfactionInComponentPackage_c9001.length;
            ++SatisfactionInComponentPackage_c_index )
      {
        export_SatisfactionInComponentPackage_c(SatisfactionInComponentPackage_c9001[SatisfactionInComponentPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                Sequence_c [] Sequence_c951 = 
Sequence_c.getManySQ_SsOnR951(
inst)
;



      for ( int Sequence_c_index = 0;
            Sequence_c_index < Sequence_c951.length;
            ++Sequence_c_index )
      {
        export_Sequence_c(Sequence_c951[Sequence_c_index], pm, writeAsProxies, isPersistable );
      }

                Communication_c [] Communication_c1137 = 
Communication_c.getManyCOMM_COMMsOnR1137(
inst)
;



      for ( int Communication_c_index = 0;
            Communication_c_index < Communication_c1137.length;
            ++Communication_c_index )
      {
        export_Communication_c(Communication_c1137[Communication_c_index], pm, writeAsProxies, isPersistable );
      }

                UseCaseDiagram_c [] UseCaseDiagram_c1212 = 
UseCaseDiagram_c.getManyUC_UCCsOnR1212(
inst)
;



      for ( int UseCaseDiagram_c_index = 0;
            UseCaseDiagram_c_index < UseCaseDiagram_c1212.length;
            ++UseCaseDiagram_c_index )
      {
        export_UseCaseDiagram_c(UseCaseDiagram_c1212[UseCaseDiagram_c_index], pm, writeAsProxies, isPersistable );
      }

                Activity_c [] Activity_c1114 = 
Activity_c.getManyA_AsOnR1114(
inst)
;



      for ( int Activity_c_index = 0;
            Activity_c_index < Activity_c1114.length;
            ++Activity_c_index )
      {
        export_Activity_c(Activity_c1114[Activity_c_index], pm, writeAsProxies, isPersistable );
      }

                SpecificationPackage_c [] SpecificationPackage_c1402 = 
SpecificationPackage_c.getManyEP_SPKGsOnR1402(
inst)
;



      for ( int SpecificationPackage_c_index = 0;
            SpecificationPackage_c_index < SpecificationPackage_c1402.length;
            ++SpecificationPackage_c_index )
      {
        export_SpecificationPackage_c(SpecificationPackage_c1402[SpecificationPackage_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SpecificationPackage_c SpecificationPackage_c_inst = 
SpecificationPackage_c.getOneEP_SPKGOnR1402(
inst)
;



	write_SpecificationPackage_c_sql(SpecificationPackage_c_inst);

}
    // select part CP_CPINP on R4601
            ComponentPackageInPackage_c temp2 = ComponentPackageInPackage_c.getOneCP_CPINPOnR4601(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R4602
            SystemModel_c temp3 = SystemModel_c.getOneS_SYSOnR4602(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R4606
            SystemModel_c temp4 = SystemModel_c.getOneS_SYSOnR4606(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SystemModelPackage( SystemModel_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SystemModelPackage_sql(inst, pm);
}
protected void export_InterfacePackage_c( InterfacePackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfacePackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_InterfacePackage(inst, pm, false, isPersistable);

                InterfacePackageInInterfacePackage_c InterfacePackageInInterfacePackage_c4300 = 
InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4300(
inst)
;



      export_InterfacePackageInInterfacePackage_c( InterfacePackageInInterfacePackage_c4300, pm, writeAsProxies, isPersistable );

                Interface_c [] Interface_c4303 = 
Interface_c.getManyC_IsOnR4303(
inst)
;



      for ( int Interface_c_index = 0;
            Interface_c_index < Interface_c4303.length;
            ++Interface_c_index )
      {
        export_Interface_c(Interface_c4303[Interface_c_index], pm, writeAsProxies, isPersistable );
      }

                SpecificationPackage_c [] SpecificationPackage_c1402 = 
SpecificationPackage_c.getManyEP_SPKGsOnR1402(
inst)
;



      for ( int SpecificationPackage_c_index = 0;
            SpecificationPackage_c_index < SpecificationPackage_c1402.length;
            ++SpecificationPackage_c_index )
      {
        export_SpecificationPackage_c(SpecificationPackage_c1402[SpecificationPackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part IP_IPINIP on R4301
            InterfacePackageInInterfacePackage_c temp1 = InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4301(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R4302
            SystemModel_c temp2 = SystemModel_c.getOneS_SYSOnR4302(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R4304
            SystemModel_c temp3 = SystemModel_c.getOneS_SYSOnR4304(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SpecificationPackage_c SpecificationPackage_c_inst = 
SpecificationPackage_c.getOneEP_SPKGOnR1402(
inst)
;



	write_SpecificationPackage_c_sql(SpecificationPackage_c_inst);

}
    // select part CP_CP on R4607
            ComponentPackage_c temp5 = ComponentPackage_c.getOneCP_CPOnR4607(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_C on R4206
            Component_c temp6 = Component_c.getOneC_COnR4206(inst,true);
	      if(forceProxyExport && temp6 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp6 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp6_pmc = temp6.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp6_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp6.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp6.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp6.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp6.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_DatatypeInSuppression_c( DatatypeInSuppression_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DatatypeInSuppression_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                DataType_c [] DataType_c47 = 
DataType_c.getManyS_DTsOnR47(
inst)
;



      for ( int DataType_c_index = 0;
            DataType_c_index < DataType_c47.length;
            ++DataType_c_index )
      {
        export_DataType_c(DataType_c47[DataType_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone S_DOM on R47
            Domain_c temp1 = Domain_c.getOneS_DOMOnR47(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_DT on R47
            DataType_c temp2 = DataType_c.getOneS_DTOnR47(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp2));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp2 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
  public void export_DataType_c_RGO_Proxies(DataType_c inst) {
    if (!m_fileExportInProgress) {
    // select R_FORM V_VAL on R820
            Value_c[] temp2_set = Value_c.getManyV_VALsOnR820(inst,true);
            for(int i = 0; i < temp2_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp2_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM V_VAR on R848
            Variable_c[] temp4_set = Variable_c.getManyV_VARsOnR848(inst,true);
            for(int i = 0; i < temp4_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp4_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM O_TPARM on R118
            OperationParameter_c[] temp6_set = OperationParameter_c.getManyO_TPARMsOnR118(inst,true);
            for(int i = 0; i < temp6_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp6_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM O_TFR on R116
            Operation_c[] temp7_set = Operation_c.getManyO_TFRsOnR116(inst,true);
            for(int i = 0; i < temp7_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp7_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM O_ATTR on R114
            Attribute_c[] temp8_set = Attribute_c.getManyO_ATTRsOnR114(inst,true);
            for(int i = 0; i < temp8_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp8_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM SM_EVTDI on R524
            StateMachineEventDataItem_c[] temp9_set = StateMachineEventDataItem_c.getManySM_EVTDIsOnR524(inst,true);
            for(int i = 0; i < temp9_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp9_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM S_BRG on R20
            Bridge_c[] temp12_set = Bridge_c.getManyS_BRGsOnR20(inst,true);
            for(int i = 0; i < temp12_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp12_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM S_BPARM on R22
            BridgeParameter_c[] temp14_set = BridgeParameter_c.getManyS_BPARMsOnR22(inst,true);
            for(int i = 0; i < temp14_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp14_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM S_SYNC on R25
            Function_c[] temp15_set = Function_c.getManyS_SYNCsOnR25(inst,true);
            for(int i = 0; i < temp15_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp15_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM S_SPARM on R26
            FunctionParameter_c[] temp16_set = FunctionParameter_c.getManyS_SPARMsOnR26(inst,true);
            for(int i = 0; i < temp16_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp16_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM S_MBR on R45
            StructureMember_c[] temp18_set = StructureMember_c.getManyS_MBRsOnR45(inst,true);
            for(int i = 0; i < temp18_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp18_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM S_UDT on R18
            UserDataType_c[] temp19_set = UserDataType_c.getManyS_UDTsOnR18(inst,true);
            for(int i = 0; i < temp19_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp19_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM C_PP on R4007
            PropertyParameter_c[] temp21_set = PropertyParameter_c.getManyC_PPsOnR4007(inst,true);
            for(int i = 0; i < temp21_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp21_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM C_IO on R4008
            InterfaceOperation_c[] temp22_set = InterfaceOperation_c.getManyC_IOsOnR4008(inst,true);
            for(int i = 0; i < temp22_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp22_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    }
  }
protected void export_DataType_c( DataType_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DataType_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                CoreDataType_c CoreDataType_c17 = 
CoreDataType_c.getOneS_CDTOnR17(
inst)
;



      export_CoreDataType_c( CoreDataType_c17, pm, writeAsProxies, isPersistable );

                UserDataType_c UserDataType_c17 = 
UserDataType_c.getOneS_UDTOnR17(
inst)
;



      export_UserDataType_c( UserDataType_c17, pm, writeAsProxies, isPersistable , false);

                EnumerationDataType_c EnumerationDataType_c17 = 
EnumerationDataType_c.getOneS_EDTOnR17(
inst)
;



      export_EnumerationDataType_c( EnumerationDataType_c17, pm, writeAsProxies, isPersistable );

                StructuredDataType_c StructuredDataType_c17 = 
StructuredDataType_c.getOneS_SDTOnR17(
inst)
;



      export_StructuredDataType_c( StructuredDataType_c17, pm, writeAsProxies, isPersistable );

                InstanceReferenceDataType_c InstanceReferenceDataType_c17 = 
InstanceReferenceDataType_c.getOneS_IRDTOnR17(
inst)
;



      export_InstanceReferenceDataType_c( InstanceReferenceDataType_c17, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part S_DOM on R14
            Domain_c temp2 = Domain_c.getOneS_DOMOnR14(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
        export_DataType_c_RGO_Proxies(inst);
}
protected void export_Package_c( Package_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Package_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_PackageDiagram(inst, pm, false, isPersistable);

                PackageInPackage_c [] PackageInPackage_c1403 = 
PackageInPackage_c.getManyEP_PIPsOnR1403(
inst)
;



      for ( int PackageInPackage_c_index = 0;
            PackageInPackage_c_index < PackageInPackage_c1403.length;
            ++PackageInPackage_c_index )
      {
        export_PackageInPackage_c(PackageInPackage_c1403[PackageInPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                Activity_c [] Activity_c1402 = 
Activity_c.getManyA_AsOnR1402(
SpecificationPackage_c.getManyEP_SPKGsOnR1400(
inst)
)
;



      for ( int Activity_c_index = 0;
            Activity_c_index < Activity_c1402.length;
            ++Activity_c_index )
      {
        export_Activity_c(Activity_c1402[Activity_c_index], pm, writeAsProxies, isPersistable );
      }

                Communication_c [] Communication_c1402 = 
Communication_c.getManyCOMM_COMMsOnR1402(
SpecificationPackage_c.getManyEP_SPKGsOnR1400(
inst)
)
;



      for ( int Communication_c_index = 0;
            Communication_c_index < Communication_c1402.length;
            ++Communication_c_index )
      {
        export_Communication_c(Communication_c1402[Communication_c_index], pm, writeAsProxies, isPersistable );
      }

                ComponentPackage_c [] ComponentPackage_c1402 = 
ComponentPackage_c.getManyCP_CPsOnR1402(
SpecificationPackage_c.getManyEP_SPKGsOnR1400(
inst)
)
;



      for ( int ComponentPackage_c_index = 0;
            ComponentPackage_c_index < ComponentPackage_c1402.length;
            ++ComponentPackage_c_index )
      {
        export_ComponentPackage_c(ComponentPackage_c1402[ComponentPackage_c_index], pm, writeAsProxies, isPersistable );
      }

                DataTypePackage_c [] DataTypePackage_c1402 = 
DataTypePackage_c.getManyS_DPKsOnR1402(
SpecificationPackage_c.getManyEP_SPKGsOnR1400(
inst)
)
;



      for ( int DataTypePackage_c_index = 0;
            DataTypePackage_c_index < DataTypePackage_c1402.length;
            ++DataTypePackage_c_index )
      {
        export_DataTypePackage_c(DataTypePackage_c1402[DataTypePackage_c_index], pm, writeAsProxies, isPersistable );
      }

                InterfacePackage_c [] InterfacePackage_c1402 = 
InterfacePackage_c.getManyIP_IPsOnR1402(
SpecificationPackage_c.getManyEP_SPKGsOnR1400(
inst)
)
;



      for ( int InterfacePackage_c_index = 0;
            InterfacePackage_c_index < InterfacePackage_c1402.length;
            ++InterfacePackage_c_index )
      {
        export_InterfacePackage_c(InterfacePackage_c1402[InterfacePackage_c_index], pm, writeAsProxies, isPersistable );
      }

                Sequence_c [] Sequence_c1402 = 
Sequence_c.getManySQ_SsOnR1402(
SpecificationPackage_c.getManyEP_SPKGsOnR1400(
inst)
)
;



      for ( int Sequence_c_index = 0;
            Sequence_c_index < Sequence_c1402.length;
            ++Sequence_c_index )
      {
        export_Sequence_c(Sequence_c1402[Sequence_c_index], pm, writeAsProxies, isPersistable );
      }

                UseCaseDiagram_c [] UseCaseDiagram_c1402 = 
UseCaseDiagram_c.getManyUC_UCCsOnR1402(
SpecificationPackage_c.getManyEP_SPKGsOnR1400(
inst)
)
;



      for ( int UseCaseDiagram_c_index = 0;
            UseCaseDiagram_c_index < UseCaseDiagram_c1402.length;
            ++UseCaseDiagram_c_index )
      {
        export_UseCaseDiagram_c(UseCaseDiagram_c1402[UseCaseDiagram_c_index], pm, writeAsProxies, isPersistable );
      }

                PackageableElement_c [] PackageableElement_c8000 = 
PackageableElement_c.getManyPE_PEsOnR8000(
inst)
;



      for ( int PackageableElement_c_index = 0;
            PackageableElement_c_index < PackageableElement_c8000.length;
            ++PackageableElement_c_index )
      {
        export_PackageableElement_c(PackageableElement_c8000[PackageableElement_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part S_SYS on R1401
            SystemModel_c temp2 = SystemModel_c.getOneS_SYSOnR1401(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R1405
            SystemModel_c temp3 = SystemModel_c.getOneS_SYSOnR1405(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_PackageDiagram( Package_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_PackageDiagram_sql(inst, pm);
}
protected void export_PackageInPackage_c( PackageInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_PackageInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Package_c Package_c1404 = 
Package_c.getOneEP_PKGOnR1404(
inst)
;



      export_Package_c( Package_c1404, pm, writeAsProxies, isPersistable );

    // select part EP_PKG on R1403
            Package_c temp1 = Package_c.getOneEP_PKGOnR1403(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part EP_PKG on R1404
            Package_c temp2 = Package_c.getOneEP_PKGOnR1404(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_PackageableElement_c( PackageableElement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_PackageableElement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                DataType_c DataType_c8001 = 
DataType_c.getOneS_DTOnR8001(
inst)
;



      export_DataType_c( DataType_c8001, pm, writeAsProxies, isPersistable );

                InteractionParticipant_c InteractionParticipant_c8001 = 
InteractionParticipant_c.getOneSQ_POnR8001(
inst)
;



      export_InteractionParticipant_c( InteractionParticipant_c8001, pm, writeAsProxies, isPersistable );

                ActivityNode_c ActivityNode_c8001 = 
ActivityNode_c.getOneA_NOnR8001(
inst)
;



      export_ActivityNode_c( ActivityNode_c8001, pm, writeAsProxies, isPersistable );

                ModelClass_c ModelClass_c8001 = 
ModelClass_c.getOneO_OBJOnR8001(
inst)
;



      export_ModelClass_c( ModelClass_c8001, pm, writeAsProxies, isPersistable , false);

                Component_c Component_c8001 = 
Component_c.getOneC_COnR8001(
inst)
;



      export_Component_c( Component_c8001, pm, writeAsProxies, isPersistable , true);

                ComponentReference_c ComponentReference_c8001 = 
ComponentReference_c.getOneCL_ICOnR8001(
inst)
;



      export_ComponentReference_c( ComponentReference_c8001, pm, writeAsProxies, isPersistable );

                Interface_c Interface_c8001 = 
Interface_c.getOneC_IOnR8001(
inst)
;



      export_Interface_c( Interface_c8001, pm, writeAsProxies, isPersistable );

                Package_c Package_c8001 = 
Package_c.getOneEP_PKGOnR8001(
inst)
;



      export_Package_c( Package_c8001, pm, writeAsProxies, isPersistable );

                ConstantSpecification_c ConstantSpecification_c8001 = 
ConstantSpecification_c.getOneCNST_CSPOnR8001(
inst)
;



      export_ConstantSpecification_c( ConstantSpecification_c8001, pm, writeAsProxies, isPersistable );

                ActivityPartition_c ActivityPartition_c8001 = 
ActivityPartition_c.getOneA_APOnR8001(
inst)
;



      export_ActivityPartition_c( ActivityPartition_c8001, pm, writeAsProxies, isPersistable );

                ActivityEdge_c ActivityEdge_c8001 = 
ActivityEdge_c.getOneA_EOnR8001(
inst)
;



      export_ActivityEdge_c( ActivityEdge_c8001, pm, writeAsProxies, isPersistable );

                Message_c Message_c8001 = 
Message_c.getOneMSG_MOnR8001(
inst)
;



      export_Message_c( Message_c8001, pm, writeAsProxies, isPersistable );

                Association_c Association_c8001 = 
Association_c.getOneR_RELOnR8001(
inst)
;



      export_Association_c( Association_c8001, pm, writeAsProxies, isPersistable );

                ImportedClass_c ImportedClass_c8001 = 
ImportedClass_c.getOneO_IOBJOnR8001(
inst)
;



      export_ImportedClass_c( ImportedClass_c8001, pm, writeAsProxies, isPersistable , false);

                ExternalEntity_c ExternalEntity_c8001 = 
ExternalEntity_c.getOneS_EEOnR8001(
inst)
;



      export_ExternalEntity_c( ExternalEntity_c8001, pm, writeAsProxies, isPersistable );

                Function_c Function_c8001 = 
Function_c.getOneS_SYNCOnR8001(
inst)
;



      export_Function_c( Function_c8001, pm, writeAsProxies, isPersistable );

                UseCaseAssociation_c UseCaseAssociation_c8001 = 
UseCaseAssociation_c.getOneUC_UCAOnR8001(
inst)
;



      export_UseCaseAssociation_c( UseCaseAssociation_c8001, pm, writeAsProxies, isPersistable );

                Satisfaction_c Satisfaction_c8001 = 
Satisfaction_c.getOneC_SFOnR8001(
inst)
;



      export_Satisfaction_c( Satisfaction_c8001, pm, writeAsProxies, isPersistable );

                Delegation_c Delegation_c8001 = 
Delegation_c.getOneC_DGOnR8001(
inst)
;



      export_Delegation_c( Delegation_c8001, pm, writeAsProxies, isPersistable );

    // select part EP_PKG on R8000
            Package_c temp1 = Package_c.getOneEP_PKGOnR8000(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_C on R8003
            Component_c temp2 = Component_c.getOneC_COnR8003(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InteractionParticipant_c( InteractionParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InteractionParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ExternalEntityParticipant_c ExternalEntityParticipant_c930 = 
ExternalEntityParticipant_c.getOneSQ_EEPOnR930(
inst)
;



      export_ExternalEntityParticipant_c( ExternalEntityParticipant_c930, pm, writeAsProxies, isPersistable );

                FunctionPackageParticipant_c FunctionPackageParticipant_c930 = 
FunctionPackageParticipant_c.getOneSQ_FPPOnR930(
inst)
;



      export_FunctionPackageParticipant_c( FunctionPackageParticipant_c930, pm, writeAsProxies, isPersistable );

                ClassParticipant_c ClassParticipant_c930 = 
ClassParticipant_c.getOneSQ_CPOnR930(
inst)
;



      export_ClassParticipant_c( ClassParticipant_c930, pm, writeAsProxies, isPersistable );

                ClassInstanceParticipant_c ClassInstanceParticipant_c930 = 
ClassInstanceParticipant_c.getOneSQ_CIPOnR930(
inst)
;



      export_ClassInstanceParticipant_c( ClassInstanceParticipant_c930, pm, writeAsProxies, isPersistable );

                ActorParticipant_c ActorParticipant_c930 = 
ActorParticipant_c.getOneSQ_APOnR930(
inst)
;



      export_ActorParticipant_c( ActorParticipant_c930, pm, writeAsProxies, isPersistable );

                CommunicationLink_c [] CommunicationLink_c1133 = 
CommunicationLink_c.getManyCOMM_LNKsOnR1133(
inst)
;



      for ( int CommunicationLink_c_index = 0;
            CommunicationLink_c_index < CommunicationLink_c1133.length;
            ++CommunicationLink_c_index )
      {
        export_CommunicationLink_c(CommunicationLink_c1133[CommunicationLink_c_index], pm, writeAsProxies, isPersistable );
      }

                Message_c [] Message_c1007 = 
Message_c.getManyMSG_MsOnR1007(
inst)
;



      for ( int Message_c_index = 0;
            Message_c_index < Message_c1007.length;
            ++Message_c_index )
      {
        export_Message_c(Message_c1007[Message_c_index], pm, writeAsProxies, isPersistable );
      }

                UseCaseAssociation_c [] UseCaseAssociation_c1206 = 
UseCaseAssociation_c.getManyUC_UCAsOnR1206(
inst)
;



      for ( int UseCaseAssociation_c_index = 0;
            UseCaseAssociation_c_index < UseCaseAssociation_c1206.length;
            ++UseCaseAssociation_c_index )
      {
        export_UseCaseAssociation_c(UseCaseAssociation_c1206[UseCaseAssociation_c_index], pm, writeAsProxies, isPersistable );
      }

                UseCaseParticipant_c UseCaseParticipant_c930 = 
UseCaseParticipant_c.getOneIA_UCPOnR930(
inst)
;



      export_UseCaseParticipant_c( UseCaseParticipant_c930, pm, writeAsProxies, isPersistable );

                ComponentParticipant_c ComponentParticipant_c930 = 
ComponentParticipant_c.getOneSQ_COPOnR930(
inst)
;



      export_ComponentParticipant_c( ComponentParticipant_c930, pm, writeAsProxies, isPersistable );

                Lifespan_c Lifespan_c930 = 
Lifespan_c.getOneSQ_LSOnR930(
inst)
;



      export_Lifespan_c( Lifespan_c930, pm, writeAsProxies, isPersistable );

                PackageParticipant_c PackageParticipant_c930 = 
PackageParticipant_c.getOneSQ_PPOnR930(
inst)
;



      export_PackageParticipant_c( PackageParticipant_c930, pm, writeAsProxies, isPersistable );

    // select part SQ_S on R929
            Sequence_c temp1 = Sequence_c.getOneSQ_SOnR929(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
}
protected void export_ActivityNode_c( ActivityNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActivityNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ActionNode_c ActionNode_c1105 = 
ActionNode_c.getOneA_ACTOnR1105(
inst)
;



      export_ActionNode_c( ActionNode_c1105, pm, writeAsProxies, isPersistable );

                ObjectNode_c ObjectNode_c1105 = 
ObjectNode_c.getOneA_OBJOnR1105(
inst)
;



      export_ObjectNode_c( ObjectNode_c1105, pm, writeAsProxies, isPersistable );

                ControlNode_c ControlNode_c1105 = 
ControlNode_c.getOneA_CTLOnR1105(
inst)
;



      export_ControlNode_c( ControlNode_c1105, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part A_A on R1101
            Activity_c temp2 = Activity_c.getOneA_AOnR1101(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ModelClass_c( ModelClass_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ModelClass_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Operation_c [] Operation_c115 = 
Operation_c.getManyO_TFRsOnR115(
inst)
;



      for ( int Operation_c_index = 0;
            Operation_c_index < Operation_c115.length;
            ++Operation_c_index )
      {
        export_Operation_c(Operation_c115[Operation_c_index], pm, writeAsProxies, isPersistable );
      }

                Attribute_c [] Attribute_c102 = 
Attribute_c.getManyO_ATTRsOnR102(
inst)
;



      for ( int Attribute_c_index = 0;
            Attribute_c_index < Attribute_c102.length;
            ++Attribute_c_index )
      {
        export_Attribute_c(Attribute_c102[Attribute_c_index], pm, writeAsProxies, isPersistable );
      }

                ClassIdentifier_c [] ClassIdentifier_c104 = 
ClassIdentifier_c.getManyO_IDsOnR104(
inst)
;



      for ( int ClassIdentifier_c_index = 0;
            ClassIdentifier_c_index < ClassIdentifier_c104.length;
            ++ClassIdentifier_c_index )
      {
        export_ClassIdentifier_c(ClassIdentifier_c104[ClassIdentifier_c_index], pm, writeAsProxies, isPersistable );
      }

                InstanceStateMachine_c InstanceStateMachine_c518 = 
InstanceStateMachine_c.getOneSM_ISMOnR518(
inst)
;



      export_InstanceStateMachine_c( InstanceStateMachine_c518, pm, writeAsProxies, isPersistable );

                ClassStateMachine_c ClassStateMachine_c519 = 
ClassStateMachine_c.getOneSM_ASMOnR519(
inst)
;



      export_ClassStateMachine_c( ClassStateMachine_c519, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part S_SS on R2
            Subsystem_c temp2 = Subsystem_c.getOneS_SSOnR2(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
  public void export_Component_c_RGO_Proxies(Component_c inst) {
    if (!m_fileExportInProgress) {
    // select R_FORM SQ_COP on R955
            ComponentParticipant_c[] temp11_set = ComponentParticipant_c.getManySQ_COPsOnR955(inst,true);
            for(int i = 0; i < temp11_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp11_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM CL_IC on R4201
            ComponentReference_c[] temp16_set = ComponentReference_c.getManyCL_ICsOnR4201(inst,true);
            for(int i = 0; i < temp16_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp16_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM CL_IC on R4205
            ComponentReference_c[] temp17_set = ComponentReference_c.getManyCL_ICsOnR4205(inst,true);
            for(int i = 0; i < temp17_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp17_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    }
  }
protected void export_Component_c( Component_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Component_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_ComponentDiagram(inst, pm, false, isPersistable);

                ComponentInComponent_c [] ComponentInComponent_c4202 = 
ComponentInComponent_c.getManyCN_CICsOnR4202(
inst)
;



      for ( int ComponentInComponent_c_index = 0;
            ComponentInComponent_c_index < ComponentInComponent_c4202.length;
            ++ComponentInComponent_c_index )
      {
        export_ComponentInComponent_c(ComponentInComponent_c4202[ComponentInComponent_c_index], pm, writeAsProxies, isPersistable );
      }

                Port_c [] Port_c4010 = 
Port_c.getManyC_POsOnR4010(
inst)
;



      for ( int Port_c_index = 0;
            Port_c_index < Port_c4010.length;
            ++Port_c_index )
      {
        export_Port_c(Port_c4010[Port_c_index], pm, writeAsProxies, isPersistable );
      }

                DomainAsComponent_c DomainAsComponent_c4204 = 
DomainAsComponent_c.getOneCN_DCOnR4204(
inst)
;



      export_DomainAsComponent_c( DomainAsComponent_c4204, pm, writeAsProxies, isPersistable );

                InterfacePackage_c [] InterfacePackage_c4206 = 
InterfacePackage_c.getManyIP_IPsOnR4206(
inst)
;



      for ( int InterfacePackage_c_index = 0;
            InterfacePackage_c_index < InterfacePackage_c4206.length;
            ++InterfacePackage_c_index )
      {
        export_InterfacePackage_c(InterfacePackage_c4206[InterfacePackage_c_index], pm, writeAsProxies, isPersistable );
      }

                ComponentReference_c [] ComponentReference_c4205 = 
ComponentReference_c.getManyCL_ICsOnR4205(
inst)
;



      for ( int ComponentReference_c_index = 0;
            ComponentReference_c_index < ComponentReference_c4205.length;
            ++ComponentReference_c_index )
      {
        export_ComponentReference_c(ComponentReference_c4205[ComponentReference_c_index], pm, writeAsProxies, isPersistable );
      }

                DelegationInComponent_c [] DelegationInComponent_c9002 = 
DelegationInComponent_c.getManyPA_DICsOnR9002(
inst)
;



      for ( int DelegationInComponent_c_index = 0;
            DelegationInComponent_c_index < DelegationInComponent_c9002.length;
            ++DelegationInComponent_c_index )
      {
        export_DelegationInComponent_c(DelegationInComponent_c9002[DelegationInComponent_c_index], pm, writeAsProxies, isPersistable );
      }

                SatisfactionInComponent_c [] SatisfactionInComponent_c9000 = 
SatisfactionInComponent_c.getManyPA_SICsOnR9000(
inst)
;



      for ( int SatisfactionInComponent_c_index = 0;
            SatisfactionInComponent_c_index < SatisfactionInComponent_c9000.length;
            ++SatisfactionInComponent_c_index )
      {
        export_SatisfactionInComponent_c(SatisfactionInComponent_c9000[SatisfactionInComponent_c_index], pm, writeAsProxies, isPersistable );
      }

                Sequence_c [] Sequence_c952 = 
Sequence_c.getManySQ_SsOnR952(
inst)
;



      for ( int Sequence_c_index = 0;
            Sequence_c_index < Sequence_c952.length;
            ++Sequence_c_index )
      {
        export_Sequence_c(Sequence_c952[Sequence_c_index], pm, writeAsProxies, isPersistable );
      }

                Communication_c [] Communication_c1138 = 
Communication_c.getManyCOMM_COMMsOnR1138(
inst)
;



      for ( int Communication_c_index = 0;
            Communication_c_index < Communication_c1138.length;
            ++Communication_c_index )
      {
        export_Communication_c(Communication_c1138[Communication_c_index], pm, writeAsProxies, isPersistable );
      }

                UseCaseDiagram_c [] UseCaseDiagram_c1213 = 
UseCaseDiagram_c.getManyUC_UCCsOnR1213(
inst)
;



      for ( int UseCaseDiagram_c_index = 0;
            UseCaseDiagram_c_index < UseCaseDiagram_c1213.length;
            ++UseCaseDiagram_c_index )
      {
        export_UseCaseDiagram_c(UseCaseDiagram_c1213[UseCaseDiagram_c_index], pm, writeAsProxies, isPersistable );
      }

                Activity_c [] Activity_c1115 = 
Activity_c.getManyA_AsOnR1115(
inst)
;



      for ( int Activity_c_index = 0;
            Activity_c_index < Activity_c1115.length;
            ++Activity_c_index )
      {
        export_Activity_c(Activity_c1115[Activity_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part CP_CP on R4604
            ComponentPackage_c temp2 = ComponentPackage_c.getOneCP_CPOnR4604(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part CP_CP on R4608
            ComponentPackage_c temp3 = ComponentPackage_c.getOneCP_CPOnR4608(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part CN_CIC on R4203
            ComponentInComponent_c temp4 = ComponentInComponent_c.getOneCN_CICOnR4203(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
        export_Component_c_RGO_Proxies(inst);
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          PackageableElement_c [] PackageableElement_c80001_set = 
PackageableElement_c.getManyPE_PEsOnR8003(
inst)
;



      for ( int PackageableElement_c_index = 0;
            PackageableElement_c_index < PackageableElement_c80001_set.length;
            ++PackageableElement_c_index )
      {
        export_PackageableElement_c(PackageableElement_c80001_set[PackageableElement_c_index], pm, false, isPersistable );
      }
    }
}
protected void export_ComponentReference_c( ComponentReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ComponentReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ImportedReference_c [] ImportedReference_c4700 = 
ImportedReference_c.getManyCL_IIRsOnR4700(
inst)
;



      for ( int ImportedReference_c_index = 0;
            ImportedReference_c_index < ImportedReference_c4700.length;
            ++ImportedReference_c_index )
      {
        export_ImportedReference_c(ImportedReference_c4700[ImportedReference_c_index], pm, writeAsProxies, isPersistable , true);
      }

    // select part C_C on R4201
            Component_c temp1 = Component_c.getOneC_COnR4201(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_C on R4205
            Component_c temp2 = Component_c.getOneC_COnR4205(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part CP_CP on R4605
            ComponentPackage_c temp4 = ComponentPackage_c.getOneCP_CPOnR4605(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
  public void export_Interface_c_RGO_Proxies(Interface_c inst) {
    if (!m_fileExportInProgress) {
    // select R_FORM C_IR on R4012
            InterfaceReference_c[] temp2_set = InterfaceReference_c.getManyC_IRsOnR4012(inst,true);
            for(int i = 0; i < temp2_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp2_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    }
  }
protected void export_Interface_c( Interface_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Interface_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ExecutableProperty_c [] ExecutableProperty_c4003 = 
ExecutableProperty_c.getManyC_EPsOnR4003(
inst)
;



      for ( int ExecutableProperty_c_index = 0;
            ExecutableProperty_c_index < ExecutableProperty_c4003.length;
            ++ExecutableProperty_c_index )
      {
        export_ExecutableProperty_c(ExecutableProperty_c4003[ExecutableProperty_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part IP_IP on R4303
            InterfacePackage_c temp2 = InterfacePackage_c.getOneIP_IPOnR4303(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
        export_Interface_c_RGO_Proxies(inst);
}
protected void export_ConstantSpecification_c( ConstantSpecification_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ConstantSpecification_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                SymbolicConstant_c [] SymbolicConstant_c1504 = 
SymbolicConstant_c.getManyCNST_SYCsOnR1504(
inst)
;



      for ( int SymbolicConstant_c_index = 0;
            SymbolicConstant_c_index < SymbolicConstant_c1504.length;
            ++SymbolicConstant_c_index )
      {
        export_SymbolicConstant_c(SymbolicConstant_c1504[SymbolicConstant_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
}
protected void export_ActivityPartition_c( ActivityPartition_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActivityPartition_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part A_A on R1111
            Activity_c temp2 = Activity_c.getOneA_AOnR1111(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ActivityEdge_c( ActivityEdge_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActivityEdge_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part A_A on R1102
            Activity_c temp2 = Activity_c.getOneA_AOnR1102(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part A_N on R1103
            ActivityNode_c temp3 = ActivityNode_c.getOneA_NOnR1103(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part A_N on R1104
            ActivityNode_c temp4 = ActivityNode_c.getOneA_NOnR1104(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Message_c( Message_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Message_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ReturnMessage_c [] ReturnMessage_c1018 = 
ReturnMessage_c.getManyMSG_RsOnR1018(
inst)
;



      for ( int ReturnMessage_c_index = 0;
            ReturnMessage_c_index < ReturnMessage_c1018.length;
            ++ReturnMessage_c_index )
      {
        export_ReturnMessage_c(ReturnMessage_c1018[ReturnMessage_c_index], pm, writeAsProxies, isPersistable );
      }

                SynchronousMessage_c [] SynchronousMessage_c1018 = 
SynchronousMessage_c.getManyMSG_SMsOnR1018(
inst)
;



      for ( int SynchronousMessage_c_index = 0;
            SynchronousMessage_c_index < SynchronousMessage_c1018.length;
            ++SynchronousMessage_c_index )
      {
        export_SynchronousMessage_c(SynchronousMessage_c1018[SynchronousMessage_c_index], pm, writeAsProxies, isPersistable );
      }

                AsynchronousMessage_c [] AsynchronousMessage_c1018 = 
AsynchronousMessage_c.getManyMSG_AMsOnR1018(
inst)
;



      for ( int AsynchronousMessage_c_index = 0;
            AsynchronousMessage_c_index < AsynchronousMessage_c1018.length;
            ++AsynchronousMessage_c_index )
      {
        export_AsynchronousMessage_c(AsynchronousMessage_c1018[AsynchronousMessage_c_index], pm, writeAsProxies, isPersistable );
      }

                MessageArgument_c [] MessageArgument_c1000 = 
MessageArgument_c.getManyMSG_AsOnR1000(
inst)
;



      for ( int MessageArgument_c_index = 0;
            MessageArgument_c_index < MessageArgument_c1000.length;
            ++MessageArgument_c_index )
      {
        export_MessageArgument_c(MessageArgument_c1000[MessageArgument_c_index], pm, writeAsProxies, isPersistable );
      }

                MessageArgument_c [] MessageArgument_c1001 = 
MessageArgument_c.getManyMSG_AsOnR1001(
inst)
;



      for ( int MessageArgument_c_index = 0;
            MessageArgument_c_index < MessageArgument_c1001.length;
            ++MessageArgument_c_index )
      {
        export_MessageArgument_c(MessageArgument_c1001[MessageArgument_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part SQ_P on R1007
            InteractionParticipant_c temp2 = InteractionParticipant_c.getOneSQ_POnR1007(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SQ_P on R1008
            InteractionParticipant_c temp3 = InteractionParticipant_c.getOneSQ_POnR1008(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Association_c( Association_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Association_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                SimpleAssociation_c SimpleAssociation_c206 = 
SimpleAssociation_c.getOneR_SIMPOnR206(
inst)
;



      export_SimpleAssociation_c( SimpleAssociation_c206, pm, writeAsProxies, isPersistable );

                LinkedAssociation_c LinkedAssociation_c206 = 
LinkedAssociation_c.getOneR_ASSOCOnR206(
inst)
;



      export_LinkedAssociation_c( LinkedAssociation_c206, pm, writeAsProxies, isPersistable );

                SubtypeSupertypeAssociation_c SubtypeSupertypeAssociation_c206 = 
SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR206(
inst)
;



      export_SubtypeSupertypeAssociation_c( SubtypeSupertypeAssociation_c206, pm, writeAsProxies, isPersistable );

                DerivedAssociation_c DerivedAssociation_c206 = 
DerivedAssociation_c.getOneR_COMPOnR206(
inst)
;



      export_DerivedAssociation_c( DerivedAssociation_c206, pm, writeAsProxies, isPersistable );

                ClassInAssociation_c [] ClassInAssociation_c201 = 
ClassInAssociation_c.getManyR_OIRsOnR201(
inst)
;



      for ( int ClassInAssociation_c_index = 0;
            ClassInAssociation_c_index < ClassInAssociation_c201.length;
            ++ClassInAssociation_c_index )
      {
        export_ClassInAssociation_c(ClassInAssociation_c201[ClassInAssociation_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part S_SS on R4
            Subsystem_c temp2 = Subsystem_c.getOneS_SSOnR4(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ImportedClass_c( ImportedClass_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ImportedClass_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part O_OBJ on R101
            ModelClass_c temp1 = ModelClass_c.getOneO_OBJOnR101(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part S_SS on R3
            Subsystem_c temp3 = Subsystem_c.getOneS_SSOnR3(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ExternalEntity_c( ExternalEntity_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExternalEntity_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Bridge_c [] Bridge_c19 = 
Bridge_c.getManyS_BRGsOnR19(
inst)
;



      for ( int Bridge_c_index = 0;
            Bridge_c_index < Bridge_c19.length;
            ++Bridge_c_index )
      {
        export_Bridge_c(Bridge_c19[Bridge_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part S_DOM on R8
            Domain_c temp2 = Domain_c.getOneS_DOMOnR8(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Function_c( Function_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Function_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                FunctionParameter_c [] FunctionParameter_c24 = 
FunctionParameter_c.getManyS_SPARMsOnR24(
inst)
;



      for ( int FunctionParameter_c_index = 0;
            FunctionParameter_c_index < FunctionParameter_c24.length;
            ++FunctionParameter_c_index )
      {
        export_FunctionParameter_c(FunctionParameter_c24[FunctionParameter_c_index], pm, writeAsProxies, false );
      }

                FunctionBody_c FunctionBody_c695 = 
FunctionBody_c.getOneACT_FNBOnR695(
inst)
;



      export_FunctionBody_c( FunctionBody_c695, pm, writeAsProxies, false );

                Dimensions_c [] Dimensions_c51 = 
Dimensions_c.getManyS_DIMsOnR51(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c51.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c51[Dimensions_c_index], pm, writeAsProxies, false );
      }

    // select part S_DT on R25
            DataType_c temp1 = DataType_c.getOneS_DTOnR25(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select part S_DOM on R23
            Domain_c temp3 = Domain_c.getOneS_DOMOnR23(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_UseCaseAssociation_c( UseCaseAssociation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_UseCaseAssociation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                BinaryAssociation_c BinaryAssociation_c1210 = 
BinaryAssociation_c.getOneUC_BAOnR1210(
inst)
;



      export_BinaryAssociation_c( BinaryAssociation_c1210, pm, writeAsProxies, isPersistable );

                Generalization_c Generalization_c1210 = 
Generalization_c.getOneUC_GOnR1210(
inst)
;



      export_Generalization_c( Generalization_c1210, pm, writeAsProxies, isPersistable );

                Include_c Include_c1210 = 
Include_c.getOneUC_IOnR1210(
inst)
;



      export_Include_c( Include_c1210, pm, writeAsProxies, isPersistable );

                Extend_c Extend_c1210 = 
Extend_c.getOneUC_EOnR1210(
inst)
;



      export_Extend_c( Extend_c1210, pm, writeAsProxies, isPersistable );

    // select part SQ_P on R1206
            InteractionParticipant_c temp1 = InteractionParticipant_c.getOneSQ_POnR1206(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SQ_P on R1207
            InteractionParticipant_c temp2 = InteractionParticipant_c.getOneSQ_POnR1207(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
}
protected void export_Satisfaction_c( Satisfaction_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Satisfaction_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
    // select aone C_R on R4002
            Requirement_c temp2 = Requirement_c.getOneC_ROnR4002(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth C_P on R4002
            Provision_c temp3 = Provision_c.getOneC_POnR4002(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Delegation_c( Delegation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Delegation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InterfaceReferenceInDelegation_c [] InterfaceReferenceInDelegation_c4013 = 
InterfaceReferenceInDelegation_c.getManyC_RIDsOnR4013(
inst)
;



      for ( int InterfaceReferenceInDelegation_c_index = 0;
            InterfaceReferenceInDelegation_c_index < InterfaceReferenceInDelegation_c4013.length;
            ++InterfaceReferenceInDelegation_c_index )
      {
        export_InterfaceReferenceInDelegation_c(InterfaceReferenceInDelegation_c4013[InterfaceReferenceInDelegation_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
inst)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);

}
}
protected void export_ComponentPackage( ComponentPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ComponentPackage_sql(inst, pm);
}
protected void export_ComponentPackageInPackage_c( ComponentPackageInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ComponentPackageInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ComponentPackage_c ComponentPackage_c4601 = 
ComponentPackage_c.getOneCP_CPOnR4601(
inst)
;



      export_ComponentPackage_c( ComponentPackage_c4601, pm, writeAsProxies, isPersistable );

    // select part CP_CP on R4600
            ComponentPackage_c temp1 = ComponentPackage_c.getOneCP_CPOnR4600(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ComponentDiagram( Component_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ComponentDiagram_sql(inst, pm);
}
protected void export_ComponentInComponent_c( ComponentInComponent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ComponentInComponent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Component_c Component_c4203 = 
Component_c.getOneC_COnR4203(
inst)
;



      export_Component_c( Component_c4203, pm, writeAsProxies, isPersistable , true);

    // select part C_C on R4202
            Component_c temp1 = Component_c.getOneC_COnR4202(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Port_c( Port_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Port_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InterfaceReference_c [] InterfaceReference_c4016 = 
InterfaceReference_c.getManyC_IRsOnR4016(
inst)
;



      for ( int InterfaceReference_c_index = 0;
            InterfaceReference_c_index < InterfaceReference_c4016.length;
            ++InterfaceReference_c_index )
      {
        export_InterfaceReference_c(InterfaceReference_c4016[InterfaceReference_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part C_C on R4010
            Component_c temp1 = Component_c.getOneC_COnR4010(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
  public void export_InterfaceReference_c_RGO_Proxies(InterfaceReference_c inst) {
    if (!m_fileExportInProgress) {
    // select R_FORM CL_IIR on R4701
            ImportedReference_c[] temp3_set = ImportedReference_c.getManyCL_IIRsOnR4701(inst,true);
            for(int i = 0; i < temp3_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp3_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    }
  }
protected void export_InterfaceReference_c( InterfaceReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfaceReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Requirement_c Requirement_c4009 = 
Requirement_c.getOneC_ROnR4009(
inst)
;



      export_Requirement_c( Requirement_c4009, pm, writeAsProxies, isPersistable );

                Provision_c Provision_c4009 = 
Provision_c.getOneC_POnR4009(
inst)
;



      export_Provision_c( Provision_c4009, pm, writeAsProxies, isPersistable , false);

    // select part C_I on R4012
            Interface_c temp1 = Interface_c.getOneC_IOnR4012(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_DG on R4014
            Delegation_c temp2 = Delegation_c.getOneC_DGOnR4014(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_PO on R4016
            Port_c temp3 = Port_c.getOneC_POOnR4016(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
        export_InterfaceReference_c_RGO_Proxies(inst);
}
protected void export_Requirement_c( Requirement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Requirement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                RequiredExecutableProperty_c [] RequiredExecutableProperty_c4500 = 
RequiredExecutableProperty_c.getManySPR_REPsOnR4500(
inst)
;



      for ( int RequiredExecutableProperty_c_index = 0;
            RequiredExecutableProperty_c_index < RequiredExecutableProperty_c4500.length;
            ++RequiredExecutableProperty_c_index )
      {
        export_RequiredExecutableProperty_c(RequiredExecutableProperty_c4500[RequiredExecutableProperty_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InterfaceReference_c InterfaceReference_c_inst = 
InterfaceReference_c.getOneC_IROnR4009(
inst)
;



	write_InterfaceReference_c_sql(InterfaceReference_c_inst);

}
}
protected void export_RequiredExecutableProperty_c( RequiredExecutableProperty_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_RequiredExecutableProperty_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                RequiredSignal_c RequiredSignal_c4502 = 
RequiredSignal_c.getOneSPR_RSOnR4502(
inst)
;



      export_RequiredSignal_c( RequiredSignal_c4502, pm, writeAsProxies, isPersistable );

                RequiredOperation_c RequiredOperation_c4502 = 
RequiredOperation_c.getOneSPR_ROOnR4502(
inst)
;



      export_RequiredOperation_c( RequiredOperation_c4502, pm, writeAsProxies, isPersistable );

    // select aone C_EP on R4500
            ExecutableProperty_c temp1 = ExecutableProperty_c.getOneC_EPOnR4500(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth C_R on R4500
            Requirement_c temp2 = Requirement_c.getOneC_ROnR4500(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_RequiredSignal_c( RequiredSignal_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_RequiredSignal_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                RequiredSignalBody_c RequiredSignalBody_c684 = 
RequiredSignalBody_c.getOneACT_RSBOnR684(
inst)
;



      export_RequiredSignalBody_c( RequiredSignalBody_c684, pm, writeAsProxies, false );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    RequiredExecutableProperty_c RequiredExecutableProperty_c_inst = 
RequiredExecutableProperty_c.getOneSPR_REPOnR4502(
inst)
;



	write_RequiredExecutableProperty_c_sql(RequiredExecutableProperty_c_inst);

}
}
protected void export_RequiredSignalBody_c( RequiredSignalBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_RequiredSignalBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
    // select part SPR_RS on R684
            RequiredSignal_c temp2 = RequiredSignal_c.getOneSPR_RSOnR684(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_RequiredOperation_c( RequiredOperation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_RequiredOperation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                RequiredOperationBody_c RequiredOperationBody_c685 = 
RequiredOperationBody_c.getOneACT_ROBOnR685(
inst)
;



      export_RequiredOperationBody_c( RequiredOperationBody_c685, pm, writeAsProxies, false );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    RequiredExecutableProperty_c RequiredExecutableProperty_c_inst = 
RequiredExecutableProperty_c.getOneSPR_REPOnR4502(
inst)
;



	write_RequiredExecutableProperty_c_sql(RequiredExecutableProperty_c_inst);

}
}
protected void export_RequiredOperationBody_c( RequiredOperationBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_RequiredOperationBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
    // select part SPR_RO on R685
            RequiredOperation_c temp2 = RequiredOperation_c.getOneSPR_ROOnR685(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Provision_c( Provision_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Provision_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ProvidedExecutableProperty_c [] ProvidedExecutableProperty_c4501 = 
ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(
inst)
;



      for ( int ProvidedExecutableProperty_c_index = 0;
            ProvidedExecutableProperty_c_index < ProvidedExecutableProperty_c4501.length;
            ++ProvidedExecutableProperty_c_index )
      {
        export_ProvidedExecutableProperty_c(ProvidedExecutableProperty_c4501[ProvidedExecutableProperty_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InterfaceReference_c InterfaceReference_c_inst = 
InterfaceReference_c.getOneC_IROnR4009(
inst)
;



	write_InterfaceReference_c_sql(InterfaceReference_c_inst);

}
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          Satisfaction_c [] Satisfaction_c90001_set = 
Satisfaction_c.getManyC_SFsOnR4002(
inst)
;



      for ( int Satisfaction_c_index = 0;
            Satisfaction_c_index < Satisfaction_c90001_set.length;
            ++Satisfaction_c_index )
      {
          write_Satisfaction_c_sql(Satisfaction_c90001_set[Satisfaction_c_index]);
      }
          PackageableElement_c PackageableElement_c2_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Satisfaction_c.getOneC_SFOnR4002(
inst)
)
;



        write_PackageableElement_c_sql(PackageableElement_c2_inst);
          Requirement_c [] Requirement_c40093_set = 
Requirement_c.getManyC_RsOnR4002(
Satisfaction_c.getManyC_SFsOnR4002(
inst)
)
;



      for ( int Requirement_c_index = 0;
            Requirement_c_index < Requirement_c40093_set.length;
            ++Requirement_c_index )
      {
          write_Requirement_c_sql(Requirement_c40093_set[Requirement_c_index]);
      }
          ImportedRequirement_c [] ImportedRequirement_c47034_set = 
ImportedRequirement_c.getManyCL_IRsOnR4706(
Satisfaction_c.getManyC_SFsOnR4002(
inst)
)
;



      for ( int ImportedRequirement_c_index = 0;
            ImportedRequirement_c_index < ImportedRequirement_c47034_set.length;
            ++ImportedRequirement_c_index )
      {
          write_ImportedRequirement_c_sql(ImportedRequirement_c47034_set[ImportedRequirement_c_index]);
      }
    }
}
protected void export_ProvidedExecutableProperty_c( ProvidedExecutableProperty_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ProvidedExecutableProperty_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ProvidedSignal_c ProvidedSignal_c4503 = 
ProvidedSignal_c.getOneSPR_PSOnR4503(
inst)
;



      export_ProvidedSignal_c( ProvidedSignal_c4503, pm, writeAsProxies, isPersistable );

                ProvidedOperation_c ProvidedOperation_c4503 = 
ProvidedOperation_c.getOneSPR_POOnR4503(
inst)
;



      export_ProvidedOperation_c( ProvidedOperation_c4503, pm, writeAsProxies, isPersistable );

    // select aone C_EP on R4501
            ExecutableProperty_c temp1 = ExecutableProperty_c.getOneC_EPOnR4501(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth C_P on R4501
            Provision_c temp2 = Provision_c.getOneC_POnR4501(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ProvidedSignal_c( ProvidedSignal_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ProvidedSignal_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ProvidedSignalBody_c ProvidedSignalBody_c686 = 
ProvidedSignalBody_c.getOneACT_PSBOnR686(
inst)
;



      export_ProvidedSignalBody_c( ProvidedSignalBody_c686, pm, writeAsProxies, false );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ProvidedExecutableProperty_c ProvidedExecutableProperty_c_inst = 
ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(
inst)
;



	write_ProvidedExecutableProperty_c_sql(ProvidedExecutableProperty_c_inst);

}
}
protected void export_ProvidedSignalBody_c( ProvidedSignalBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ProvidedSignalBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
    // select part SPR_PS on R686
            ProvidedSignal_c temp2 = ProvidedSignal_c.getOneSPR_PSOnR686(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ProvidedOperation_c( ProvidedOperation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ProvidedOperation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ProvidedOperationBody_c ProvidedOperationBody_c687 = 
ProvidedOperationBody_c.getOneACT_POBOnR687(
inst)
;



      export_ProvidedOperationBody_c( ProvidedOperationBody_c687, pm, writeAsProxies, false );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ProvidedExecutableProperty_c ProvidedExecutableProperty_c_inst = 
ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(
inst)
;



	write_ProvidedExecutableProperty_c_sql(ProvidedExecutableProperty_c_inst);

}
}
protected void export_ProvidedOperationBody_c( ProvidedOperationBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ProvidedOperationBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
    // select part SPR_PO on R687
            ProvidedOperation_c temp2 = ProvidedOperation_c.getOneSPR_POOnR687(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_DomainAsComponent_c( DomainAsComponent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DomainAsComponent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Domain_c Domain_c4204 = 
Domain_c.getOneS_DOMOnR4204(
inst)
;



      export_Domain_c( Domain_c4204, pm, writeAsProxies, isPersistable );

    // select aone C_C on R4204
            Component_c temp1 = Component_c.getOneC_COnR4204(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_DOM on R4204
            Domain_c temp2 = Domain_c.getOneS_DOMOnR4204(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ImportedReference_c( ImportedReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ImportedReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ImportedProvision_c ImportedProvision_c4703 = 
ImportedProvision_c.getOneCL_IPOnR4703(
inst)
;



      export_ImportedProvision_c( ImportedProvision_c4703, pm, writeAsProxies, isPersistable , false);

                ImportedRequirement_c ImportedRequirement_c4703 = 
ImportedRequirement_c.getOneCL_IROnR4703(
inst)
;



      export_ImportedRequirement_c( ImportedRequirement_c4703, pm, writeAsProxies, isPersistable );

    // select part C_IR on R4701
            InterfaceReference_c temp1 = InterfaceReference_c.getOneC_IROnR4701(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part CL_IC on R4700
            ComponentReference_c temp2 = ComponentReference_c.getOneCL_ICOnR4700(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_DG on R4704
            Delegation_c temp3 = Delegation_c.getOneC_DGOnR4704(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          InterfaceReference_c InterfaceReference_c1_inst = 
InterfaceReference_c.getOneC_IROnR4701(
inst)
;



      export_InterfaceReference_c(InterfaceReference_c1_inst, pm, true, isPersistable );
          Interface_c Interface_c2_inst = 
Interface_c.getOneC_IOnR4012(
InterfaceReference_c.getOneC_IROnR4701(
inst)
)
;



      export_Interface_c(Interface_c2_inst, pm, true, isPersistable );
          Component_c Component_c3_inst = 
Component_c.getOneC_COnR4010(
Port_c.getOneC_POOnR4016(
InterfaceReference_c.getOneC_IROnR4701(
inst)
)
)
;



        ProxyPath proxyPath = new ProxyPath(Component_c3_inst, m_inst);
        collectedProxies.add(proxyPath);
          PackageableElement_c PackageableElement_c4_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Component_c.getOneC_COnR4010(
Port_c.getOneC_POOnR4016(
InterfaceReference_c.getOneC_IROnR4701(
inst)
)
)
)
;



        proxyPath = new ProxyPath(PackageableElement_c4_inst, m_inst);
        collectedProxies.add(proxyPath);
    }
}
protected void export_ImportedProvision_c( ImportedProvision_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ImportedProvision_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ImportedProvisionInSatisfaction_c [] ImportedProvisionInSatisfaction_c4705 = 
ImportedProvisionInSatisfaction_c.getManyCL_IPINSsOnR4705(
inst)
;



      for ( int ImportedProvisionInSatisfaction_c_index = 0;
            ImportedProvisionInSatisfaction_c_index < ImportedProvisionInSatisfaction_c4705.length;
            ++ImportedProvisionInSatisfaction_c_index )
      {
        export_ImportedProvisionInSatisfaction_c(ImportedProvisionInSatisfaction_c4705[ImportedProvisionInSatisfaction_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ImportedReference_c ImportedReference_c_inst = 
ImportedReference_c.getOneCL_IIROnR4703(
inst)
;



	write_ImportedReference_c_sql(ImportedReference_c_inst);

}
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          Satisfaction_c [] Satisfaction_c90001_set = 
Satisfaction_c.getManyC_SFsOnR4705(
ImportedProvisionInSatisfaction_c.getManyCL_IPINSsOnR4705(
inst)
)
;



      for ( int Satisfaction_c_index = 0;
            Satisfaction_c_index < Satisfaction_c90001_set.length;
            ++Satisfaction_c_index )
      {
          write_Satisfaction_c_sql(Satisfaction_c90001_set[Satisfaction_c_index]);
      }
          PackageableElement_c PackageableElement_c2_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Satisfaction_c.getOneC_SFOnR4705(
ImportedProvisionInSatisfaction_c.getOneCL_IPINSOnR4705(
inst)
)
)
;



        write_PackageableElement_c_sql(PackageableElement_c2_inst);
          Requirement_c [] Requirement_c40093_set = 
Requirement_c.getManyC_RsOnR4002(
Satisfaction_c.getManyC_SFsOnR4705(
ImportedProvisionInSatisfaction_c.getManyCL_IPINSsOnR4705(
inst)
)
)
;



      for ( int Requirement_c_index = 0;
            Requirement_c_index < Requirement_c40093_set.length;
            ++Requirement_c_index )
      {
          ProxyPath proxyPath = new ProxyPath(Requirement_c40093_set[Requirement_c_index], m_inst);
          collectedProxies.add(proxyPath);
      }
          ImportedRequirement_c [] ImportedRequirement_c47034_set = 
ImportedRequirement_c.getManyCL_IRsOnR4706(
Satisfaction_c.getManyC_SFsOnR4705(
ImportedProvisionInSatisfaction_c.getManyCL_IPINSsOnR4705(
inst)
)
)
;



      for ( int ImportedRequirement_c_index = 0;
            ImportedRequirement_c_index < ImportedRequirement_c47034_set.length;
            ++ImportedRequirement_c_index )
      {
          ProxyPath proxyPath = new ProxyPath(ImportedRequirement_c47034_set[ImportedRequirement_c_index], m_inst);
          collectedProxies.add(proxyPath);
      }
    }
}
protected void export_ImportedProvisionInSatisfaction_c( ImportedProvisionInSatisfaction_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ImportedProvisionInSatisfaction_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone C_SF on R4705
            Satisfaction_c temp1 = Satisfaction_c.getOneC_SFOnR4705(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth CL_IP on R4705
            ImportedProvision_c temp2 = ImportedProvision_c.getOneCL_IPOnR4705(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ImportedRequirement_c( ImportedRequirement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ImportedRequirement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ImportedReference_c ImportedReference_c_inst = 
ImportedReference_c.getOneCL_IIROnR4703(
inst)
;



	write_ImportedReference_c_sql(ImportedReference_c_inst);

}
    // select part C_SF on R4706
            Satisfaction_c temp2 = Satisfaction_c.getOneC_SFOnR4706(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_DelegationInComponent_c( DelegationInComponent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DelegationInComponent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Delegation_c [] Delegation_c9002 = 
Delegation_c.getManyC_DGsOnR9002(
inst)
;



      for ( int Delegation_c_index = 0;
            Delegation_c_index < Delegation_c9002.length;
            ++Delegation_c_index )
      {
        export_Delegation_c(Delegation_c9002[Delegation_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone C_C on R9002
            Component_c temp1 = Component_c.getOneC_COnR9002(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth C_DG on R9002
            Delegation_c temp2 = Delegation_c.getOneC_DGOnR9002(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InterfaceReferenceInDelegation_c( InterfaceReferenceInDelegation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfaceReferenceInDelegation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone C_IR on R4013
            InterfaceReference_c temp1 = InterfaceReference_c.getOneC_IROnR4013(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth C_DG on R4013
            Delegation_c temp2 = Delegation_c.getOneC_DGOnR4013(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SatisfactionInComponent_c( SatisfactionInComponent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SatisfactionInComponent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Satisfaction_c [] Satisfaction_c9000 = 
Satisfaction_c.getManyC_SFsOnR9000(
inst)
;



      for ( int Satisfaction_c_index = 0;
            Satisfaction_c_index < Satisfaction_c9000.length;
            ++Satisfaction_c_index )
      {
        export_Satisfaction_c(Satisfaction_c9000[Satisfaction_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone C_C on R9000
            Component_c temp1 = Component_c.getOneC_COnR9000(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth C_SF on R9000
            Satisfaction_c temp2 = Satisfaction_c.getOneC_SFOnR9000(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SatisfactionInComponentPackage_c( SatisfactionInComponentPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SatisfactionInComponentPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Satisfaction_c [] Satisfaction_c9001 = 
Satisfaction_c.getManyC_SFsOnR9001(
inst)
;



      for ( int Satisfaction_c_index = 0;
            Satisfaction_c_index < Satisfaction_c9001.length;
            ++Satisfaction_c_index )
      {
        export_Satisfaction_c(Satisfaction_c9001[Satisfaction_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone C_SF on R9001
            Satisfaction_c temp1 = Satisfaction_c.getOneC_SFOnR9001(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth CP_CP on R9001
            ComponentPackage_c temp2 = ComponentPackage_c.getOneCP_CPOnR9001(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SpecificationPackage_c( SpecificationPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SpecificationPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part EP_PKG on R1400
            Package_c temp1 = Package_c.getOneEP_PKGOnR1400(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InterfacePackage( InterfacePackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfacePackage_sql(inst, pm);
}
protected void export_InterfacePackageInInterfacePackage_c( InterfacePackageInInterfacePackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfacePackageInInterfacePackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InterfacePackage_c [] InterfacePackage_c4301 = 
InterfacePackage_c.getManyIP_IPsOnR4301(
inst)
;



      for ( int InterfacePackage_c_index = 0;
            InterfacePackage_c_index < InterfacePackage_c4301.length;
            ++InterfacePackage_c_index )
      {
        export_InterfacePackage_c(InterfacePackage_c4301[InterfacePackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part IP_IP on R4300
            InterfacePackage_c temp1 = InterfacePackage_c.getOneIP_IPOnR4300(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
  public void export_ExecutableProperty_c_RGO_Proxies(ExecutableProperty_c inst) {
    if (!m_fileExportInProgress) {
    // select R_AONE SPR_REP on R4500
            RequiredExecutableProperty_c[] temp1_set = RequiredExecutableProperty_c.getManySPR_REPsOnR4500(inst,true);
            for(int i = 0; i < temp1_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp1_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_AONE SPR_PEP on R4501
            ProvidedExecutableProperty_c[] temp2_set = ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(inst,true);
            for(int i = 0; i < temp2_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp2_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_SUB C_IO on R4004
            InterfaceOperation_c[] temp4_set = InterfaceOperation_c.getManyC_IOsOnR4004(inst,true);
            for(int i = 0; i < temp4_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp4_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select R_FORM C_PP on R4006
            PropertyParameter_c[] temp5_set = PropertyParameter_c.getManyC_PPsOnR4006(inst,true);
            for(int i = 0; i < temp5_set.length; i++) {
                  ProxyPath proxyPath = new ProxyPath(temp5_set[i], m_inst);
                  collectedProxies.add(proxyPath);
                }
    }
  }
protected void export_ExecutableProperty_c( ExecutableProperty_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExecutableProperty_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InterfaceSignal_c InterfaceSignal_c4004 = 
InterfaceSignal_c.getOneC_ASOnR4004(
inst)
;



      export_InterfaceSignal_c( InterfaceSignal_c4004, pm, writeAsProxies, isPersistable , false);

                InterfaceOperation_c InterfaceOperation_c4004 = 
InterfaceOperation_c.getOneC_IOOnR4004(
inst)
;



      export_InterfaceOperation_c( InterfaceOperation_c4004, pm, writeAsProxies, isPersistable , false);

                PropertyParameter_c [] PropertyParameter_c4006 = 
PropertyParameter_c.getManyC_PPsOnR4006(
inst)
;



      for ( int PropertyParameter_c_index = 0;
            PropertyParameter_c_index < PropertyParameter_c4006.length;
            ++PropertyParameter_c_index )
      {
        export_PropertyParameter_c(PropertyParameter_c4006[PropertyParameter_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part C_I on R4003
            Interface_c temp1 = Interface_c.getOneC_IOnR4003(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
        export_ExecutableProperty_c_RGO_Proxies(inst);
}
protected void export_InterfaceSignal_c( InterfaceSignal_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfaceSignal_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ExecutableProperty_c ExecutableProperty_c_inst = 
ExecutableProperty_c.getOneC_EPOnR4004(
inst)
;



	write_ExecutableProperty_c_sql(ExecutableProperty_c_inst);

}
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          PropertyParameter_c [] PropertyParameter_c40061_set = 
PropertyParameter_c.getManyC_PPsOnR4006(
ExecutableProperty_c.getManyC_EPsOnR4004(
inst)
)
;



      for ( int PropertyParameter_c_index = 0;
            PropertyParameter_c_index < PropertyParameter_c40061_set.length;
            ++PropertyParameter_c_index )
      {
        export_PropertyParameter_c(PropertyParameter_c40061_set[PropertyParameter_c_index], pm, false, isPersistable );
      }
    }
}
protected void export_InterfaceOperation_c( InterfaceOperation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfaceOperation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Dimensions_c [] Dimensions_c4018 = 
Dimensions_c.getManyS_DIMsOnR4018(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c4018.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c4018[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R4008
            DataType_c temp1 = DataType_c.getOneS_DTOnR4008(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ExecutableProperty_c ExecutableProperty_c_inst = 
ExecutableProperty_c.getOneC_EPOnR4004(
inst)
;



	write_ExecutableProperty_c_sql(ExecutableProperty_c_inst);

}
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          PropertyParameter_c [] PropertyParameter_c40061_set = 
PropertyParameter_c.getManyC_PPsOnR4006(
ExecutableProperty_c.getManyC_EPsOnR4004(
inst)
)
;



      for ( int PropertyParameter_c_index = 0;
            PropertyParameter_c_index < PropertyParameter_c40061_set.length;
            ++PropertyParameter_c_index )
      {
        export_PropertyParameter_c(PropertyParameter_c40061_set[PropertyParameter_c_index], pm, false, isPersistable );
      }
    }
}
protected void export_Dimensions_c( Dimensions_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Dimensions_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_TRN on R844
            TransientVar_c temp1 = TransientVar_c.getOneV_TRNOnR844(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R849
            Variable_c temp2 = Variable_c.getOneV_VAROnR849(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_ATTR on R120
            Attribute_c temp3 = Attribute_c.getOneO_ATTROnR120(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_TPARM on R121
            OperationParameter_c temp4 = OperationParameter_c.getOneO_TPARMOnR121(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_TFR on R122
            Operation_c temp5 = Operation_c.getOneO_TFROnR122(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SM_EVTDI on R531
            StateMachineEventDataItem_c temp6 = StateMachineEventDataItem_c.getOneSM_EVTDIOnR531(inst,true);
	      if(forceProxyExport && temp6 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp6 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp6_pmc = temp6.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp6_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp6.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp6.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp6.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp6.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_BPARM on R49
            BridgeParameter_c temp7 = BridgeParameter_c.getOneS_BPARMOnR49(inst,true);
	      if(forceProxyExport && temp7 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp7, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp7 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp7_pmc = temp7.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp7_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp7.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp7, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp7.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp7.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp7.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_BRG on R50
            Bridge_c temp8 = Bridge_c.getOneS_BRGOnR50(inst,true);
	      if(forceProxyExport && temp8 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp8, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp8 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp8_pmc = temp8.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp8_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp8.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp8, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp8.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp8.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp8.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYNC on R51
            Function_c temp9 = Function_c.getOneS_SYNCOnR51(inst,true);
	      if(forceProxyExport && temp9 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp9, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp9 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp9_pmc = temp9.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp9_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp9.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp9, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp9.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp9.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp9.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SPARM on R52
            FunctionParameter_c temp10 = FunctionParameter_c.getOneS_SPARMOnR52(inst,true);
	      if(forceProxyExport && temp10 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp10, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp10 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp10_pmc = temp10.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp10_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp10.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp10, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp10.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp10.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp10.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_MBR on R53
            StructureMember_c temp11 = StructureMember_c.getOneS_MBROnR53(inst,true);
	      if(forceProxyExport && temp11 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp11, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp11 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp11_pmc = temp11.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp11_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp11.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp11, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp11.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp11.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp11.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_PP on R4017
            PropertyParameter_c temp12 = PropertyParameter_c.getOneC_PPOnR4017(inst,true);
	      if(forceProxyExport && temp12 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp12, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp12 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp12_pmc = temp12.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp12_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp12.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp12, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp12.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp12.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp12.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_IO on R4018
            InterfaceOperation_c temp13 = InterfaceOperation_c.getOneC_IOOnR4018(inst,true);
	      if(forceProxyExport && temp13 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp13, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp13 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp13_pmc = temp13.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp13_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp13.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp13, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp13.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp13.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp13.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_PropertyParameter_c( PropertyParameter_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_PropertyParameter_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Dimensions_c [] Dimensions_c4017 = 
Dimensions_c.getManyS_DIMsOnR4017(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c4017.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c4017[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R4007
            DataType_c temp1 = DataType_c.getOneS_DTOnR4007(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_EP on R4006
            ExecutableProperty_c temp2 = ExecutableProperty_c.getOneC_EPOnR4006(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_DataTypePackageDiagram( DataTypePackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DataTypePackageDiagram_sql(inst, pm);
}
protected void export_DataTypePackageInPackage_c( DataTypePackageInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DataTypePackageInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                DataTypePackage_c [] DataTypePackage_c38 = 
DataTypePackage_c.getManyS_DPKsOnR38(
inst)
;



      for ( int DataTypePackage_c_index = 0;
            DataTypePackage_c_index < DataTypePackage_c38.length;
            ++DataTypePackage_c_index )
      {
        export_DataTypePackage_c(DataTypePackage_c38[DataTypePackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DPK on R37
            DataTypePackage_c temp1 = DataTypePackage_c.getOneS_DPKOnR37(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_DataTypeInPackage_c( DataTypeInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DataTypeInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                DataType_c DataType_c39 = 
DataType_c.getOneS_DTOnR39(
inst)
;



      export_DataType_c( DataType_c39, pm, writeAsProxies, isPersistable );

    // select aone S_DT on R39
            DataType_c temp1 = DataType_c.getOneS_DTOnR39(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_DPK on R39
            DataTypePackage_c temp2 = DataTypePackage_c.getOneS_DPKOnR39(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_CoreDataType_c( CoreDataType_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CoreDataType_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    DataType_c DataType_c_inst = 
DataType_c.getOneS_DTOnR17(
inst)
;



	write_DataType_c_sql(DataType_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
DataType_c.getOneS_DTOnR17(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_UserDataType_c( UserDataType_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_UserDataType_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    DataType_c DataType_c_inst = 
DataType_c.getOneS_DTOnR17(
inst)
;



	write_DataType_c_sql(DataType_c_inst);
                if((m_inst instanceof UserDataType_c) || (m_inst instanceof EnumerationDataType_c) || (m_inst instanceof StructuredDataType_c)) {
                  DataType_c dt = DataType_c.getOneS_DTOnR17(inst);
                  export_DataType_c_RGO_Proxies(dt);
                }
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
DataType_c.getOneS_DTOnR17(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part S_DT on R18
            DataType_c temp2 = DataType_c.getOneS_DTOnR18(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp2));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp2 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          DataType_c DataType_c1_inst = 
DataType_c.getOneS_DTOnR18(
inst)
;



        ProxyPath proxyPath = new ProxyPath(DataType_c1_inst, m_inst);
        collectedProxies.add(proxyPath);
    }
}
protected void export_EnumerationDataType_c( EnumerationDataType_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_EnumerationDataType_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Enumerator_c [] Enumerator_c27 = 
Enumerator_c.getManyS_ENUMsOnR27(
inst)
;



      for ( int Enumerator_c_index = 0;
            Enumerator_c_index < Enumerator_c27.length;
            ++Enumerator_c_index )
      {
        export_Enumerator_c(Enumerator_c27[Enumerator_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    DataType_c DataType_c_inst = 
DataType_c.getOneS_DTOnR17(
inst)
;



	write_DataType_c_sql(DataType_c_inst);
                if((m_inst instanceof UserDataType_c) || (m_inst instanceof EnumerationDataType_c) || (m_inst instanceof StructuredDataType_c)) {
                  DataType_c dt = DataType_c.getOneS_DTOnR17(inst);
                  export_DataType_c_RGO_Proxies(dt);
                }
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
DataType_c.getOneS_DTOnR17(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_Enumerator_c( Enumerator_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Enumerator_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_EDT on R27
            EnumerationDataType_c temp1 = EnumerationDataType_c.getOneS_EDTOnR27(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_StructuredDataType_c( StructuredDataType_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_StructuredDataType_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                StructureMember_c [] StructureMember_c44 = 
StructureMember_c.getManyS_MBRsOnR44(
inst)
;



      for ( int StructureMember_c_index = 0;
            StructureMember_c_index < StructureMember_c44.length;
            ++StructureMember_c_index )
      {
        export_StructureMember_c(StructureMember_c44[StructureMember_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    DataType_c DataType_c_inst = 
DataType_c.getOneS_DTOnR17(
inst)
;



	write_DataType_c_sql(DataType_c_inst);
                if((m_inst instanceof UserDataType_c) || (m_inst instanceof EnumerationDataType_c) || (m_inst instanceof StructuredDataType_c)) {
                  DataType_c dt = DataType_c.getOneS_DTOnR17(inst);
                  export_DataType_c_RGO_Proxies(dt);
                }
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
DataType_c.getOneS_DTOnR17(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_StructureMember_c( StructureMember_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_StructureMember_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Dimensions_c [] Dimensions_c53 = 
Dimensions_c.getManyS_DIMsOnR53(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c53.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c53[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R45
            DataType_c temp1 = DataType_c.getOneS_DTOnR45(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
                if(m_inst instanceof StructuredDataType_c) {
                   DataType_c dt = DataType_c.getOneS_DTOnR45(inst);
                  ProxyPath proxyPath = new ProxyPath(dt, m_inst);
                  collectedProxies.add(proxyPath);
                }
    // select part S_SDT on R44
            StructuredDataType_c temp2 = StructuredDataType_c.getOneS_SDTOnR44(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InstanceReferenceDataType_c( InstanceReferenceDataType_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InstanceReferenceDataType_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    DataType_c DataType_c_inst = 
DataType_c.getOneS_DTOnR17(
inst)
;



	write_DataType_c_sql(DataType_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
DataType_c.getOneS_DTOnR17(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part O_OBJ on R123
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR123(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SystemDatatypeInPackage_c( SystemDatatypeInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SystemDatatypeInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone S_DPK on R4401
            DataTypePackage_c temp1 = DataTypePackage_c.getOneS_DPKOnR4401(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_DT on R4401
            DataType_c temp2 = DataType_c.getOneS_DTOnR4401(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp2));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp2 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYS on R4402
            SystemModel_c temp3 = SystemModel_c.getOneS_SYSOnR4402(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ConstantInPackage_c( ConstantInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ConstantInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ConstantSpecification_c ConstantSpecification_c1506 = 
ConstantSpecification_c.getOneCNST_CSPOnR1506(
inst)
;



      export_ConstantSpecification_c( ConstantSpecification_c1506, pm, writeAsProxies, isPersistable );

    // select aone CNST_CSP on R1506
            ConstantSpecification_c temp1 = ConstantSpecification_c.getOneCNST_CSPOnR1506(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_DPK on R1506
            DataTypePackage_c temp2 = DataTypePackage_c.getOneS_DPKOnR1506(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SymbolicConstant_c( SymbolicConstant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SymbolicConstant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                LeafSymbolicConstant_c LeafSymbolicConstant_c1502 = 
LeafSymbolicConstant_c.getOneCNST_LFSCOnR1502(
inst)
;



      export_LeafSymbolicConstant_c( LeafSymbolicConstant_c1502, pm, writeAsProxies, isPersistable );

    // select part S_DT on R1500
            DataType_c temp1 = DataType_c.getOneS_DTOnR1500(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part CNST_CSP on R1504
            ConstantSpecification_c temp2 = ConstantSpecification_c.getOneCNST_CSPOnR1504(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_LeafSymbolicConstant_c( LeafSymbolicConstant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LeafSymbolicConstant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                LiteralSymbolicConstant_c LiteralSymbolicConstant_c1503 = 
LiteralSymbolicConstant_c.getOneCNST_LSCOnR1503(
inst)
;



      export_LiteralSymbolicConstant_c( LiteralSymbolicConstant_c1503, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SymbolicConstant_c SymbolicConstant_c_inst = 
SymbolicConstant_c.getOneCNST_SYCOnR1502(
inst)
;



	write_SymbolicConstant_c_sql(SymbolicConstant_c_inst);

}
}
protected void export_LiteralSymbolicConstant_c( LiteralSymbolicConstant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LiteralSymbolicConstant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    LeafSymbolicConstant_c LeafSymbolicConstant_c_inst = 
LeafSymbolicConstant_c.getOneCNST_LFSCOnR1503(
inst)
;



	write_LeafSymbolicConstant_c_sql(LeafSymbolicConstant_c_inst);
    SymbolicConstant_c SymbolicConstant_c_inst = 
SymbolicConstant_c.getOneCNST_SYCOnR1502(
LeafSymbolicConstant_c.getOneCNST_LFSCOnR1503(
inst)
)
;



	write_SymbolicConstant_c_sql(SymbolicConstant_c_inst);


}
}
protected void export_SystemConstantInPackage_c( SystemConstantInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SystemConstantInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_SYS on R4404
            SystemModel_c temp1 = SystemModel_c.getOneS_SYSOnR4404(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aone S_DPK on R4403
            DataTypePackage_c temp2 = DataTypePackage_c.getOneS_DPKOnR4403(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth CNST_CSP on R4403
            ConstantSpecification_c temp3 = ConstantSpecification_c.getOneCNST_CSPOnR4403(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ExternalEntityPackageDiagram( ExternalEntityPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExternalEntityPackageDiagram_sql(inst, pm);
}
protected void export_EePackageInPackage_c( EePackageInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_EePackageInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ExternalEntityPackage_c [] ExternalEntityPackage_c35 = 
ExternalEntityPackage_c.getManyS_EEPKsOnR35(
inst)
;



      for ( int ExternalEntityPackage_c_index = 0;
            ExternalEntityPackage_c_index < ExternalEntityPackage_c35.length;
            ++ExternalEntityPackage_c_index )
      {
        export_ExternalEntityPackage_c(ExternalEntityPackage_c35[ExternalEntityPackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_EEPK on R34
            ExternalEntityPackage_c temp1 = ExternalEntityPackage_c.getOneS_EEPKOnR34(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ExternalEntityPackageInDomain_c( ExternalEntityPackageInDomain_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExternalEntityPackageInDomain_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone S_DOM on R300
            Domain_c temp1 = Domain_c.getOneS_DOMOnR300(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_EEPK on R300
            ExternalEntityPackage_c temp2 = ExternalEntityPackage_c.getOneS_EEPKOnR300(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ExternalEntityInPackage_c( ExternalEntityInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExternalEntityInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ExternalEntity_c ExternalEntity_c33 = 
ExternalEntity_c.getOneS_EEOnR33(
inst)
;



      export_ExternalEntity_c( ExternalEntity_c33, pm, writeAsProxies, isPersistable );

    // select aone S_EEPK on R33
            ExternalEntityPackage_c temp1 = ExternalEntityPackage_c.getOneS_EEPKOnR33(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_EE on R33
            ExternalEntity_c temp2 = ExternalEntity_c.getOneS_EEOnR33(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Bridge_c( Bridge_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Bridge_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                BridgeParameter_c [] BridgeParameter_c21 = 
BridgeParameter_c.getManyS_BPARMsOnR21(
inst)
;



      for ( int BridgeParameter_c_index = 0;
            BridgeParameter_c_index < BridgeParameter_c21.length;
            ++BridgeParameter_c_index )
      {
        export_BridgeParameter_c(BridgeParameter_c21[BridgeParameter_c_index], pm, writeAsProxies, false );
      }

                BridgeBody_c BridgeBody_c697 = 
BridgeBody_c.getOneACT_BRBOnR697(
inst)
;



      export_BridgeBody_c( BridgeBody_c697, pm, writeAsProxies, false );

                Dimensions_c [] Dimensions_c50 = 
Dimensions_c.getManyS_DIMsOnR50(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c50.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c50[Dimensions_c_index], pm, writeAsProxies, false );
      }

    // select part S_DT on R20
            DataType_c temp1 = DataType_c.getOneS_DTOnR20(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_EE on R19
            ExternalEntity_c temp2 = ExternalEntity_c.getOneS_EEOnR19(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_BridgeParameter_c( BridgeParameter_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_BridgeParameter_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Dimensions_c [] Dimensions_c49 = 
Dimensions_c.getManyS_DIMsOnR49(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c49.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c49[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R22
            DataType_c temp1 = DataType_c.getOneS_DTOnR22(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_BRG on R21
            Bridge_c temp2 = Bridge_c.getOneS_BRGOnR21(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_BridgeBody_c( BridgeBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_BridgeBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

    // select part S_BRG on R697
            Bridge_c temp1 = Bridge_c.getOneS_BRGOnR697(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
}
protected void export_FunctionPackageDiagram( FunctionPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionPackageDiagram_sql(inst, pm);
}
protected void export_FunctionPackageInPackage_c( FunctionPackageInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionPackageInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                FunctionPackage_c [] FunctionPackage_c32 = 
FunctionPackage_c.getManyS_FPKsOnR32(
inst)
;



      for ( int FunctionPackage_c_index = 0;
            FunctionPackage_c_index < FunctionPackage_c32.length;
            ++FunctionPackage_c_index )
      {
        export_FunctionPackage_c(FunctionPackage_c32[FunctionPackage_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_FPK on R30
            FunctionPackage_c temp1 = FunctionPackage_c.getOneS_FPKOnR30(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_FunctionPackageInDomain_c( FunctionPackageInDomain_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionPackageInDomain_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone S_FPK on R301
            FunctionPackage_c temp1 = FunctionPackage_c.getOneS_FPKOnR301(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_DOM on R301
            Domain_c temp2 = Domain_c.getOneS_DOMOnR301(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_FunctionInPackage_c( FunctionInPackage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionInPackage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Function_c Function_c31 = 
Function_c.getOneS_SYNCOnR31(
inst)
;



      export_Function_c( Function_c31, pm, writeAsProxies, isPersistable );

    // select aone S_FPK on R31
            FunctionPackage_c temp1 = FunctionPackage_c.getOneS_FPKOnR31(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth S_SYNC on R31
            Function_c temp2 = Function_c.getOneS_SYNCOnR31(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_FunctionParameter_c( FunctionParameter_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionParameter_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Dimensions_c [] Dimensions_c52 = 
Dimensions_c.getManyS_DIMsOnR52(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c52.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c52[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R26
            DataType_c temp1 = DataType_c.getOneS_DTOnR26(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SYNC on R24
            Function_c temp2 = Function_c.getOneS_SYNCOnR24(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_FunctionBody_c( FunctionBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

    // select part S_SYNC on R695
            Function_c temp1 = Function_c.getOneS_SYNCOnR695(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
}
protected void export_ActivityDiagram( Activity_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActivityDiagram_sql(inst, pm);
}
protected void export_ActionNode_c( ActionNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActionNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ActivityDiagramAction_c ActivityDiagramAction_c1107 = 
ActivityDiagramAction_c.getOneA_GAOnR1107(
inst)
;



      export_ActivityDiagramAction_c( ActivityDiagramAction_c1107, pm, writeAsProxies, isPersistable );

                AcceptEvent_c AcceptEvent_c1107 = 
AcceptEvent_c.getOneA_AEOnR1107(
inst)
;



      export_AcceptEvent_c( AcceptEvent_c1107, pm, writeAsProxies, isPersistable );

                SendSignal_c SendSignal_c1107 = 
SendSignal_c.getOneA_SSOnR1107(
inst)
;



      export_SendSignal_c( SendSignal_c1107, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
inst)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_ActivityDiagramAction_c( ActivityDiagramAction_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActivityDiagramAction_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ActionNode_c ActionNode_c_inst = 
ActionNode_c.getOneA_ACTOnR1107(
inst)
;



	write_ActionNode_c_sql(ActionNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
inst)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_AcceptEvent_c( AcceptEvent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_AcceptEvent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                AcceptEventAction_c AcceptEventAction_c1112 = 
AcceptEventAction_c.getOneA_AEAOnR1112(
inst)
;



      export_AcceptEventAction_c( AcceptEventAction_c1112, pm, writeAsProxies, isPersistable );

                AcceptTimeEventAction_c AcceptTimeEventAction_c1112 = 
AcceptTimeEventAction_c.getOneA_ATEOnR1112(
inst)
;



      export_AcceptTimeEventAction_c( AcceptTimeEventAction_c1112, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ActionNode_c ActionNode_c_inst = 
ActionNode_c.getOneA_ACTOnR1107(
inst)
;



	write_ActionNode_c_sql(ActionNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
inst)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_AcceptEventAction_c( AcceptEventAction_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_AcceptEventAction_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    AcceptEvent_c AcceptEvent_c_inst = 
AcceptEvent_c.getOneA_AEOnR1112(
inst)
;



	write_AcceptEvent_c_sql(AcceptEvent_c_inst);
    ActionNode_c ActionNode_c_inst = 
ActionNode_c.getOneA_ACTOnR1107(
AcceptEvent_c.getOneA_AEOnR1112(
inst)
)
;



	write_ActionNode_c_sql(ActionNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
AcceptEvent_c.getOneA_AEOnR1112(
inst)
)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
AcceptEvent_c.getOneA_AEOnR1112(
inst)
)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);




}
}
protected void export_AcceptTimeEventAction_c( AcceptTimeEventAction_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_AcceptTimeEventAction_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    AcceptEvent_c AcceptEvent_c_inst = 
AcceptEvent_c.getOneA_AEOnR1112(
inst)
;



	write_AcceptEvent_c_sql(AcceptEvent_c_inst);
    ActionNode_c ActionNode_c_inst = 
ActionNode_c.getOneA_ACTOnR1107(
AcceptEvent_c.getOneA_AEOnR1112(
inst)
)
;



	write_ActionNode_c_sql(ActionNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
AcceptEvent_c.getOneA_AEOnR1112(
inst)
)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
AcceptEvent_c.getOneA_AEOnR1112(
inst)
)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);




}
}
protected void export_SendSignal_c( SendSignal_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SendSignal_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ActionNode_c ActionNode_c_inst = 
ActionNode_c.getOneA_ACTOnR1107(
inst)
;



	write_ActionNode_c_sql(ActionNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
inst)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ActionNode_c.getOneA_ACTOnR1107(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_ObjectNode_c( ObjectNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ObjectNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
inst)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_ControlNode_c( ControlNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ControlNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InitialNode_c InitialNode_c1106 = 
InitialNode_c.getOneA_INIOnR1106(
inst)
;



      export_InitialNode_c( InitialNode_c1106, pm, writeAsProxies, isPersistable );

                ActivityFinalNode_c ActivityFinalNode_c1106 = 
ActivityFinalNode_c.getOneA_AFOnR1106(
inst)
;



      export_ActivityFinalNode_c( ActivityFinalNode_c1106, pm, writeAsProxies, isPersistable );

                FlowFinalNode_c FlowFinalNode_c1106 = 
FlowFinalNode_c.getOneA_FFOnR1106(
inst)
;



      export_FlowFinalNode_c( FlowFinalNode_c1106, pm, writeAsProxies, isPersistable );

                DecisionMergeNode_c DecisionMergeNode_c1106 = 
DecisionMergeNode_c.getOneA_DMOnR1106(
inst)
;



      export_DecisionMergeNode_c( DecisionMergeNode_c1106, pm, writeAsProxies, isPersistable );

                ForkJoinNode_c ForkJoinNode_c1106 = 
ForkJoinNode_c.getOneA_FJOnR1106(
inst)
;



      export_ForkJoinNode_c( ForkJoinNode_c1106, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
inst)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_InitialNode_c( InitialNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InitialNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ControlNode_c ControlNode_c_inst = 
ControlNode_c.getOneA_CTLOnR1106(
inst)
;



	write_ControlNode_c_sql(ControlNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_ActivityFinalNode_c( ActivityFinalNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActivityFinalNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ControlNode_c ControlNode_c_inst = 
ControlNode_c.getOneA_CTLOnR1106(
inst)
;



	write_ControlNode_c_sql(ControlNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_FlowFinalNode_c( FlowFinalNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FlowFinalNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ControlNode_c ControlNode_c_inst = 
ControlNode_c.getOneA_CTLOnR1106(
inst)
;



	write_ControlNode_c_sql(ControlNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_DecisionMergeNode_c( DecisionMergeNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DecisionMergeNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ControlNode_c ControlNode_c_inst = 
ControlNode_c.getOneA_CTLOnR1106(
inst)
;



	write_ControlNode_c_sql(ControlNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_ForkJoinNode_c( ForkJoinNode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ForkJoinNode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ControlNode_c ControlNode_c_inst = 
ControlNode_c.getOneA_CTLOnR1106(
inst)
;



	write_ControlNode_c_sql(ControlNode_c_inst);
    ActivityNode_c ActivityNode_c_inst = 
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
;



	write_ActivityNode_c_sql(ActivityNode_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
ActivityNode_c.getOneA_NOnR1105(
ControlNode_c.getOneA_CTLOnR1106(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_ActivityInActivity_c( ActivityInActivity_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActivityInActivity_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Activity_c [] Activity_c1110 = 
Activity_c.getManyA_AsOnR1110(
inst)
;



      for ( int Activity_c_index = 0;
            Activity_c_index < Activity_c1110.length;
            ++Activity_c_index )
      {
        export_Activity_c(Activity_c1110[Activity_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part A_A on R1109
            Activity_c temp1 = Activity_c.getOneA_AOnR1109(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Subsystem_c( Subsystem_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Subsystem_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ModelClass_c [] ModelClass_c2 = 
ModelClass_c.getManyO_OBJsOnR2(
inst)
;



      for ( int ModelClass_c_index = 0;
            ModelClass_c_index < ModelClass_c2.length;
            ++ModelClass_c_index )
      {
        export_ModelClass_c(ModelClass_c2[ModelClass_c_index], pm, writeAsProxies, isPersistable , false);
      }

                ImportedClass_c [] ImportedClass_c3 = 
ImportedClass_c.getManyO_IOBJsOnR3(
inst)
;



      for ( int ImportedClass_c_index = 0;
            ImportedClass_c_index < ImportedClass_c3.length;
            ++ImportedClass_c_index )
      {
        export_ImportedClass_c(ImportedClass_c3[ImportedClass_c_index], pm, writeAsProxies, isPersistable , false);
      }

                ExternalEntityInModel_c [] ExternalEntityInModel_c7 = 
ExternalEntityInModel_c.getManyS_EEMsOnR7(
inst)
;



      for ( int ExternalEntityInModel_c_index = 0;
            ExternalEntityInModel_c_index < ExternalEntityInModel_c7.length;
            ++ExternalEntityInModel_c_index )
      {
        export_ExternalEntityInModel_c(ExternalEntityInModel_c7[ExternalEntityInModel_c_index], pm, writeAsProxies, isPersistable );
      }

                Association_c [] Association_c4 = 
Association_c.getManyR_RELsOnR4(
inst)
;



      for ( int Association_c_index = 0;
            Association_c_index < Association_c4.length;
            ++Association_c_index )
      {
        export_Association_c(Association_c4[Association_c_index], pm, writeAsProxies, isPersistable );
      }

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_OIM(inst, pm, false, isPersistable);

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_OCM(inst, pm, false, isPersistable);

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_OAM(inst, pm, false, isPersistable);

                SubsystemInSubsystem_c [] SubsystemInSubsystem_c41 = 
SubsystemInSubsystem_c.getManyS_SISsOnR41(
inst)
;



      for ( int SubsystemInSubsystem_c_index = 0;
            SubsystemInSubsystem_c_index < SubsystemInSubsystem_c41.length;
            ++SubsystemInSubsystem_c_index )
      {
        export_SubsystemInSubsystem_c(SubsystemInSubsystem_c41[SubsystemInSubsystem_c_index], pm, writeAsProxies, isPersistable );
      }

                Sequence_c [] Sequence_c914 = 
Sequence_c.getManySQ_SsOnR914(
inst)
;



      for ( int Sequence_c_index = 0;
            Sequence_c_index < Sequence_c914.length;
            ++Sequence_c_index )
      {
        export_Sequence_c(Sequence_c914[Sequence_c_index], pm, writeAsProxies, isPersistable );
      }

                Communication_c [] Communication_c1131 = 
Communication_c.getManyCOMM_COMMsOnR1131(
inst)
;



      for ( int Communication_c_index = 0;
            Communication_c_index < Communication_c1131.length;
            ++Communication_c_index )
      {
        export_Communication_c(Communication_c1131[Communication_c_index], pm, writeAsProxies, isPersistable );
      }

                UseCaseDiagram_c [] UseCaseDiagram_c1202 = 
UseCaseDiagram_c.getManyUC_UCCsOnR1202(
inst)
;



      for ( int UseCaseDiagram_c_index = 0;
            UseCaseDiagram_c_index < UseCaseDiagram_c1202.length;
            ++UseCaseDiagram_c_index )
      {
        export_UseCaseDiagram_c(UseCaseDiagram_c1202[UseCaseDiagram_c_index], pm, writeAsProxies, isPersistable );
      }

                Activity_c [] Activity_c1108 = 
Activity_c.getManyA_AsOnR1108(
inst)
;



      for ( int Activity_c_index = 0;
            Activity_c_index < Activity_c1108.length;
            ++Activity_c_index )
      {
        export_Activity_c(Activity_c1108[Activity_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DOM on R1
            Domain_c temp1 = Domain_c.getOneS_DOMOnR1(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          ModelClass_c [] ModelClass_c21_set = 
ModelClass_c.getManyO_OBJsOnR101(
ImportedClass_c.getManyO_IOBJsOnR3(
inst)
)
;



      for ( int ModelClass_c_index = 0;
            ModelClass_c_index < ModelClass_c21_set.length;
            ++ModelClass_c_index )
      {
        export_ModelClass_c(ModelClass_c21_set[ModelClass_c_index], pm, true, isPersistable , false);
      }
    }
}
protected void export_ExternalEntityInModel_c( ExternalEntityInModel_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExternalEntityInModel_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_SS on R7
            Subsystem_c temp1 = Subsystem_c.getOneS_SSOnR7(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_EE on R9
            ExternalEntity_c temp2 = ExternalEntity_c.getOneS_EEOnR9(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_OIM( Subsystem_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OIM_sql(inst, pm);
}
protected void export_OCM( Subsystem_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OCM_sql(inst, pm);
}
protected void export_OAM( Subsystem_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OAM_sql(inst, pm);
}
protected void export_SubsystemInSubsystem_c( SubsystemInSubsystem_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SubsystemInSubsystem_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Subsystem_c Subsystem_c42 = 
Subsystem_c.getOneS_SSOnR42(
inst)
;



      export_Subsystem_c( Subsystem_c42, pm, writeAsProxies, isPersistable , false);

    // select part S_SS on R42
            Subsystem_c temp1 = Subsystem_c.getOneS_SSOnR42(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SS on R41
            Subsystem_c temp2 = Subsystem_c.getOneS_SSOnR41(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Operation_c( Operation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Operation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                OperationParameter_c [] OperationParameter_c117 = 
OperationParameter_c.getManyO_TPARMsOnR117(
inst)
;



      for ( int OperationParameter_c_index = 0;
            OperationParameter_c_index < OperationParameter_c117.length;
            ++OperationParameter_c_index )
      {
        export_OperationParameter_c(OperationParameter_c117[OperationParameter_c_index], pm, writeAsProxies, false );
      }

                OperationBody_c OperationBody_c696 = 
OperationBody_c.getOneACT_OPBOnR696(
inst)
;



      export_OperationBody_c( OperationBody_c696, pm, writeAsProxies, false );

                Dimensions_c [] Dimensions_c122 = 
Dimensions_c.getManyS_DIMsOnR122(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c122.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c122[Dimensions_c_index], pm, writeAsProxies, false );
      }

    // select part S_DT on R116
            DataType_c temp1 = DataType_c.getOneS_DTOnR116(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_OBJ on R115
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR115(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_OperationParameter_c( OperationParameter_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OperationParameter_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Dimensions_c [] Dimensions_c121 = 
Dimensions_c.getManyS_DIMsOnR121(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c121.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c121[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R118
            DataType_c temp1 = DataType_c.getOneS_DTOnR118(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_TFR on R117
            Operation_c temp2 = Operation_c.getOneO_TFROnR117(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_OperationBody_c( OperationBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OperationBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

    // select part O_TFR on R696
            Operation_c temp1 = Operation_c.getOneO_TFROnR696(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
}
protected void export_Attribute_c( Attribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                BaseAttribute_c BaseAttribute_c106 = 
BaseAttribute_c.getOneO_BATTROnR106(
inst)
;



      export_BaseAttribute_c( BaseAttribute_c106, pm, writeAsProxies, isPersistable );

                ReferentialAttribute_c ReferentialAttribute_c106 = 
ReferentialAttribute_c.getOneO_RATTROnR106(
inst)
;



      export_ReferentialAttribute_c( ReferentialAttribute_c106, pm, writeAsProxies, isPersistable );

                Dimensions_c [] Dimensions_c120 = 
Dimensions_c.getManyS_DIMsOnR120(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c120.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c120[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }


     if(!writeAsProxies && !forceWriteAsProxy)
      write_Attribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_DT on R114
            DataType_c temp1 = DataType_c.getOneS_DTOnR114(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_OBJ on R102
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR102(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_BaseAttribute_c( BaseAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                DerivedBaseAttribute_c DerivedBaseAttribute_c107 = 
DerivedBaseAttribute_c.getOneO_DBATTROnR107(
inst)
;



      export_DerivedBaseAttribute_c( DerivedBaseAttribute_c107, pm, writeAsProxies, isPersistable );

                NewBaseAttribute_c NewBaseAttribute_c107 = 
NewBaseAttribute_c.getOneO_NBATTROnR107(
inst)
;



      export_NewBaseAttribute_c( NewBaseAttribute_c107, pm, writeAsProxies, isPersistable );


     if(!writeAsProxies && !forceWriteAsProxy)
      write_BaseAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Attribute_c Attribute_c_inst = 
Attribute_c.getOneO_ATTROnR106(
inst)
;



	write_Attribute_c_sql(Attribute_c_inst);

}
}
protected void export_DerivedBaseAttribute_c( DerivedBaseAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DerivedBaseAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                DerivedAttributeBody_c DerivedAttributeBody_c693 = 
DerivedAttributeBody_c.getOneACT_DABOnR693(
inst)
;



      export_DerivedAttributeBody_c( DerivedAttributeBody_c693, pm, writeAsProxies, false );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    BaseAttribute_c BaseAttribute_c_inst = 
BaseAttribute_c.getOneO_BATTROnR107(
inst)
;



	write_BaseAttribute_c_sql(BaseAttribute_c_inst);
    Attribute_c Attribute_c_inst = 
Attribute_c.getOneO_ATTROnR106(
BaseAttribute_c.getOneO_BATTROnR107(
inst)
)
;



	write_Attribute_c_sql(Attribute_c_inst);


}
}
protected void export_DerivedAttributeBody_c( DerivedAttributeBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DerivedAttributeBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

    // select part O_DBATTR on R693
            DerivedBaseAttribute_c temp1 = DerivedBaseAttribute_c.getOneO_DBATTROnR693(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
}
protected void export_NewBaseAttribute_c( NewBaseAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_NewBaseAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    BaseAttribute_c BaseAttribute_c_inst = 
BaseAttribute_c.getOneO_BATTROnR107(
inst)
;



	write_BaseAttribute_c_sql(BaseAttribute_c_inst);
    Attribute_c Attribute_c_inst = 
Attribute_c.getOneO_ATTROnR106(
BaseAttribute_c.getOneO_BATTROnR107(
inst)
)
;



	write_Attribute_c_sql(Attribute_c_inst);


}
}
protected void export_ReferentialAttribute_c( ReferentialAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                AttributeReferenceInClass_c [] AttributeReferenceInClass_c108 = 
AttributeReferenceInClass_c.getManyO_REFsOnR108(
inst)
;



      for ( int AttributeReferenceInClass_c_index = 0;
            AttributeReferenceInClass_c_index < AttributeReferenceInClass_c108.length;
            ++AttributeReferenceInClass_c_index )
      {
        export_AttributeReferenceInClass_c(AttributeReferenceInClass_c108[AttributeReferenceInClass_c_index], pm, writeAsProxies, isPersistable );
      }


     if(!writeAsProxies && !forceWriteAsProxy)
      write_ReferentialAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Attribute_c Attribute_c_inst = 
Attribute_c.getOneO_ATTROnR106(
inst)
;



	write_Attribute_c_sql(Attribute_c_inst);

}
    // select part O_BATTR on R113
            BaseAttribute_c temp2 = BaseAttribute_c.getOneO_BATTROnR113(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_AttributeReferenceInClass_c( AttributeReferenceInClass_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_AttributeReferenceInClass_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part O_RATTR on R108
            ReferentialAttribute_c temp1 = ReferentialAttribute_c.getOneO_RATTROnR108(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aone R_RGO on R111
            ReferringClassInAssoc_c temp3 = ReferringClassInAssoc_c.getOneR_RGOOnR111(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth O_RTIDA on R111
            ReferredToIdentifierAttribute_c temp4 = ReferredToIdentifierAttribute_c.getOneO_RTIDAOnR111(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ClassIdentifier_c( ClassIdentifier_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassIdentifier_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ClassIdentifierAttribute_c [] ClassIdentifierAttribute_c105 = 
ClassIdentifierAttribute_c.getManyO_OIDAsOnR105(
inst)
;



      for ( int ClassIdentifierAttribute_c_index = 0;
            ClassIdentifierAttribute_c_index < ClassIdentifierAttribute_c105.length;
            ++ClassIdentifierAttribute_c_index )
      {
        export_ClassIdentifierAttribute_c(ClassIdentifierAttribute_c105[ClassIdentifierAttribute_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part O_OBJ on R104
            ModelClass_c temp1 = ModelClass_c.getOneO_OBJOnR104(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ClassIdentifierAttribute_c( ClassIdentifierAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassIdentifierAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone O_ID on R105
            ClassIdentifier_c temp1 = ClassIdentifier_c.getOneO_IDOnR105(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth O_ATTR on R105
            Attribute_c temp2 = Attribute_c.getOneO_ATTROnR105(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InstanceStateMachine_c( InstanceStateMachine_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InstanceStateMachine_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                StateMachine_c StateMachine_c517 = 
StateMachine_c.getOneSM_SMOnR517(
inst)
;



      export_StateMachine_c( StateMachine_c517, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateMachine_c StateMachine_c_inst = 
StateMachine_c.getOneSM_SMOnR517(
inst)
;



	write_StateMachine_c_sql(StateMachine_c_inst);

}
    // select part O_OBJ on R518
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR518(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ClassStateMachine_c( ClassStateMachine_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassStateMachine_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                StateMachine_c StateMachine_c517 = 
StateMachine_c.getOneSM_SMOnR517(
inst)
;



      export_StateMachine_c( StateMachine_c517, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateMachine_c StateMachine_c_inst = 
StateMachine_c.getOneSM_SMOnR517(
inst)
;



	write_StateMachine_c_sql(StateMachine_c_inst);

}
    // select part O_OBJ on R519
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR519(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SimpleAssociation_c( SimpleAssociation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SimpleAssociation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Association_c Association_c_inst = 
Association_c.getOneR_RELOnR206(
inst)
;



	write_Association_c_sql(Association_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Association_c.getOneR_RELOnR206(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_LinkedAssociation_c( LinkedAssociation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LinkedAssociation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Association_c Association_c_inst = 
Association_c.getOneR_RELOnR206(
inst)
;



	write_Association_c_sql(Association_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Association_c.getOneR_RELOnR206(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_SubtypeSupertypeAssociation_c( SubtypeSupertypeAssociation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SubtypeSupertypeAssociation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Association_c Association_c_inst = 
Association_c.getOneR_RELOnR206(
inst)
;



	write_Association_c_sql(Association_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Association_c.getOneR_RELOnR206(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_DerivedAssociation_c( DerivedAssociation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_DerivedAssociation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Association_c Association_c_inst = 
Association_c.getOneR_RELOnR206(
inst)
;



	write_Association_c_sql(Association_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Association_c.getOneR_RELOnR206(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_ClassInAssociation_c( ClassInAssociation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                ReferredToClassInAssoc_c ReferredToClassInAssoc_c203 = 
ReferredToClassInAssoc_c.getOneR_RTOOnR203(
inst)
;



      export_ReferredToClassInAssoc_c( ReferredToClassInAssoc_c203, pm, writeAsProxies, isPersistable );

                ReferringClassInAssoc_c ReferringClassInAssoc_c203 = 
ReferringClassInAssoc_c.getOneR_RGOOnR203(
inst)
;



      export_ReferringClassInAssoc_c( ReferringClassInAssoc_c203, pm, writeAsProxies, isPersistable );

                ClassAsDerivedOneSide_c ClassAsDerivedOneSide_c203 = 
ClassAsDerivedOneSide_c.getOneR_CONEOnR203(
inst)
;



      export_ClassAsDerivedOneSide_c( ClassAsDerivedOneSide_c203, pm, writeAsProxies, isPersistable );

                ClassAsDerivedOtherSide_c ClassAsDerivedOtherSide_c203 = 
ClassAsDerivedOtherSide_c.getOneR_COTHOnR203(
inst)
;



      export_ClassAsDerivedOtherSide_c( ClassAsDerivedOtherSide_c203, pm, writeAsProxies, isPersistable );


     if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassInAssociation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone R_REL on R201
            Association_c temp1 = Association_c.getOneR_RELOnR201(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth O_OBJ on R201
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR201(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_IOBJ on R202
            ImportedClass_c temp3 = ImportedClass_c.getOneO_IOBJOnR202(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ReferredToClassInAssoc_c( ReferredToClassInAssoc_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                ClassAsSimpleParticipant_c ClassAsSimpleParticipant_c204 = 
ClassAsSimpleParticipant_c.getOneR_PARTOnR204(
inst)
;



      export_ClassAsSimpleParticipant_c( ClassAsSimpleParticipant_c204, pm, writeAsProxies, isPersistable );

                ClassAsAssociatedOneSide_c ClassAsAssociatedOneSide_c204 = 
ClassAsAssociatedOneSide_c.getOneR_AONEOnR204(
inst)
;



      export_ClassAsAssociatedOneSide_c( ClassAsAssociatedOneSide_c204, pm, writeAsProxies, isPersistable );

                ClassAsAssociatedOtherSide_c ClassAsAssociatedOtherSide_c204 = 
ClassAsAssociatedOtherSide_c.getOneR_AOTHOnR204(
inst)
;



      export_ClassAsAssociatedOtherSide_c( ClassAsAssociatedOtherSide_c204, pm, writeAsProxies, isPersistable );

                ClassAsSupertype_c ClassAsSupertype_c204 = 
ClassAsSupertype_c.getOneR_SUPEROnR204(
inst)
;



      export_ClassAsSupertype_c( ClassAsSupertype_c204, pm, writeAsProxies, isPersistable );

                ReferredToIdentifierAttribute_c [] ReferredToIdentifierAttribute_c110 = 
ReferredToIdentifierAttribute_c.getManyO_RTIDAsOnR110(
inst)
;



      for ( int ReferredToIdentifierAttribute_c_index = 0;
            ReferredToIdentifierAttribute_c_index < ReferredToIdentifierAttribute_c110.length;
            ++ReferredToIdentifierAttribute_c_index )
      {
        export_ReferredToIdentifierAttribute_c(ReferredToIdentifierAttribute_c110[ReferredToIdentifierAttribute_c_index], pm, writeAsProxies, isPersistable );
      }


     if(!writeAsProxies && !forceWriteAsProxy)
      write_ReferredToClassInAssoc_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part O_ID on R109
            ClassIdentifier_c temp1 = ClassIdentifier_c.getOneO_IDOnR109(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
inst)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);

}
}
protected void export_ClassAsSimpleParticipant_c( ClassAsSimpleParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsSimpleParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_SIMP on R207
            SimpleAssociation_c temp1 = SimpleAssociation_c.getOneR_SIMPOnR207(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ReferredToClassInAssoc_c ReferredToClassInAssoc_c_inst = 
ReferredToClassInAssoc_c.getOneR_RTOOnR204(
inst)
;



	write_ReferredToClassInAssoc_c_sql(ReferredToClassInAssoc_c_inst);
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
ReferredToClassInAssoc_c.getOneR_RTOOnR204(
inst)
)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);


}
}
protected void export_ClassAsAssociatedOneSide_c( ClassAsAssociatedOneSide_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsAssociatedOneSide_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_ASSOC on R209
            LinkedAssociation_c temp1 = LinkedAssociation_c.getOneR_ASSOCOnR209(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ReferredToClassInAssoc_c ReferredToClassInAssoc_c_inst = 
ReferredToClassInAssoc_c.getOneR_RTOOnR204(
inst)
;



	write_ReferredToClassInAssoc_c_sql(ReferredToClassInAssoc_c_inst);
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
ReferredToClassInAssoc_c.getOneR_RTOOnR204(
inst)
)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);


}
}
protected void export_ClassAsAssociatedOtherSide_c( ClassAsAssociatedOtherSide_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsAssociatedOtherSide_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_ASSOC on R210
            LinkedAssociation_c temp1 = LinkedAssociation_c.getOneR_ASSOCOnR210(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ReferredToClassInAssoc_c ReferredToClassInAssoc_c_inst = 
ReferredToClassInAssoc_c.getOneR_RTOOnR204(
inst)
;



	write_ReferredToClassInAssoc_c_sql(ReferredToClassInAssoc_c_inst);
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
ReferredToClassInAssoc_c.getOneR_RTOOnR204(
inst)
)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);


}
}
protected void export_ClassAsSupertype_c( ClassAsSupertype_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsSupertype_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_SUBSUP on R212
            SubtypeSupertypeAssociation_c temp1 = SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR212(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ReferredToClassInAssoc_c ReferredToClassInAssoc_c_inst = 
ReferredToClassInAssoc_c.getOneR_RTOOnR204(
inst)
;



	write_ReferredToClassInAssoc_c_sql(ReferredToClassInAssoc_c_inst);
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
ReferredToClassInAssoc_c.getOneR_RTOOnR204(
inst)
)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);


}
}
protected void export_ReferredToIdentifierAttribute_c( ReferredToIdentifierAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ReferredToIdentifierAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone R_RTO on R110
            ReferredToClassInAssoc_c temp1 = ReferredToClassInAssoc_c.getOneR_RTOOnR110(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth O_OIDA on R110
            ClassIdentifierAttribute_c temp2 = ClassIdentifierAttribute_c.getOneO_OIDAOnR110(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ReferringClassInAssoc_c( ReferringClassInAssoc_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
      if (ClassAsSubtype_c.getOneR_SUBOnR205(inst) !=null)
                {	  
              	  if(m_inst.getClass().toString().endsWith("Association_c"))
              	  {
              		ClassInAssociation_c classInAssociation =ClassInAssociation_c.getOneR_OIROnR203(inst) ;
              	    ModelClass_c modelClass = ModelClass_c.getOneO_OBJOnR201( classInAssociation );
              	    ImportedClass_c importedClass = ImportedClass_c.getOneO_IOBJOnR202( classInAssociation );  
              	     if (! Cl_c.Isselected( modelClass )&&!Cl_c.Isselected( importedClass ))
              		   {
              		     return;
              		   }    
              	   }  
                } 
  
  
  
                ClassAsSimpleFormalizer_c ClassAsSimpleFormalizer_c205 = 
ClassAsSimpleFormalizer_c.getOneR_FORMOnR205(
inst)
;



      export_ClassAsSimpleFormalizer_c( ClassAsSimpleFormalizer_c205, pm, writeAsProxies, isPersistable );

                ClassAsLink_c ClassAsLink_c205 = 
ClassAsLink_c.getOneR_ASSROnR205(
inst)
;



      export_ClassAsLink_c( ClassAsLink_c205, pm, writeAsProxies, isPersistable );

                ClassAsSubtype_c ClassAsSubtype_c205 = 
ClassAsSubtype_c.getOneR_SUBOnR205(
inst)
;



      export_ClassAsSubtype_c( ClassAsSubtype_c205, pm, writeAsProxies, isPersistable );


     if(!writeAsProxies && !forceWriteAsProxy)
      write_ReferringClassInAssoc_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
inst)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);

}
}
protected void export_ClassAsSimpleFormalizer_c( ClassAsSimpleFormalizer_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsSimpleFormalizer_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_SIMP on R208
            SimpleAssociation_c temp1 = SimpleAssociation_c.getOneR_SIMPOnR208(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ReferringClassInAssoc_c ReferringClassInAssoc_c_inst = 
ReferringClassInAssoc_c.getOneR_RGOOnR205(
inst)
;



	write_ReferringClassInAssoc_c_sql(ReferringClassInAssoc_c_inst);
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
ReferringClassInAssoc_c.getOneR_RGOOnR205(
inst)
)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);


}
}
protected void export_ClassAsLink_c( ClassAsLink_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsLink_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_ASSOC on R211
            LinkedAssociation_c temp1 = LinkedAssociation_c.getOneR_ASSOCOnR211(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ReferringClassInAssoc_c ReferringClassInAssoc_c_inst = 
ReferringClassInAssoc_c.getOneR_RGOOnR205(
inst)
;



	write_ReferringClassInAssoc_c_sql(ReferringClassInAssoc_c_inst);
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
ReferringClassInAssoc_c.getOneR_RGOOnR205(
inst)
)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);


}
}
protected void export_ClassAsSubtype_c( ClassAsSubtype_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsSubtype_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_SUBSUP on R213
            SubtypeSupertypeAssociation_c temp1 = SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR213(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ReferringClassInAssoc_c ReferringClassInAssoc_c_inst = 
ReferringClassInAssoc_c.getOneR_RGOOnR205(
inst)
;



	write_ReferringClassInAssoc_c_sql(ReferringClassInAssoc_c_inst);
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
ReferringClassInAssoc_c.getOneR_RGOOnR205(
inst)
)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);


}
}
protected void export_ClassAsDerivedOneSide_c( ClassAsDerivedOneSide_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsDerivedOneSide_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_COMP on R214
            DerivedAssociation_c temp1 = DerivedAssociation_c.getOneR_COMPOnR214(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
inst)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);

}
}
protected void export_ClassAsDerivedOtherSide_c( ClassAsDerivedOtherSide_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassAsDerivedOtherSide_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_COMP on R215
            DerivedAssociation_c temp1 = DerivedAssociation_c.getOneR_COMPOnR215(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ClassInAssociation_c ClassInAssociation_c_inst = 
ClassInAssociation_c.getOneR_OIROnR203(
inst)
;



	write_ClassInAssociation_c_sql(ClassInAssociation_c_inst);

}
}
protected void export_StateMachine_c( StateMachine_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_StateMachine_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                MooreStateMachine_c MooreStateMachine_c510 = 
MooreStateMachine_c.getOneSM_MOOREOnR510(
inst)
;



      export_MooreStateMachine_c( MooreStateMachine_c510, pm, writeAsProxies, isPersistable );

                MealyStateMachine_c MealyStateMachine_c510 = 
MealyStateMachine_c.getOneSM_MEALYOnR510(
inst)
;



      export_MealyStateMachine_c( MealyStateMachine_c510, pm, writeAsProxies, isPersistable );

                StateMachineEventDataItem_c [] StateMachineEventDataItem_c516 = 
StateMachineEventDataItem_c.getManySM_EVTDIsOnR516(
inst)
;



      for ( int StateMachineEventDataItem_c_index = 0;
            StateMachineEventDataItem_c_index < StateMachineEventDataItem_c516.length;
            ++StateMachineEventDataItem_c_index )
      {
        export_StateMachineEventDataItem_c(StateMachineEventDataItem_c516[StateMachineEventDataItem_c_index], pm, writeAsProxies, isPersistable );
      }

                StateMachineEvent_c [] StateMachineEvent_c502 = 
StateMachineEvent_c.getManySM_EVTsOnR502(
inst)
;



      for ( int StateMachineEvent_c_index = 0;
            StateMachineEvent_c_index < StateMachineEvent_c502.length;
            ++StateMachineEvent_c_index )
      {
        export_StateMachineEvent_c(StateMachineEvent_c502[StateMachineEvent_c_index], pm, writeAsProxies, isPersistable , false);
      }

                StateMachineState_c [] StateMachineState_c501 = 
StateMachineState_c.getManySM_STATEsOnR501(
inst)
;



      for ( int StateMachineState_c_index = 0;
            StateMachineState_c_index < StateMachineState_c501.length;
            ++StateMachineState_c_index )
      {
        export_StateMachineState_c(StateMachineState_c501[StateMachineState_c_index], pm, writeAsProxies, isPersistable );
      }

                Transition_c [] Transition_c505 = 
Transition_c.getManySM_TXNsOnR505(
inst)
;



      for ( int Transition_c_index = 0;
            Transition_c_index < Transition_c505.length;
            ++Transition_c_index )
      {
        export_Transition_c(Transition_c505[Transition_c_index], pm, writeAsProxies, isPersistable , true);
      }

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_ISM(inst, pm, false, isPersistable);

      if (m_export_graphics && !writeAsProxies && !forceWriteAsProxy) export_ASM(inst, pm, false, isPersistable);

}
protected void export_MooreStateMachine_c( MooreStateMachine_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_MooreStateMachine_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateMachine_c StateMachine_c_inst = 
StateMachine_c.getOneSM_SMOnR510(
inst)
;



	write_StateMachine_c_sql(StateMachine_c_inst);

}
}
protected void export_MealyStateMachine_c( MealyStateMachine_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_MealyStateMachine_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateMachine_c StateMachine_c_inst = 
StateMachine_c.getOneSM_SMOnR510(
inst)
;



	write_StateMachine_c_sql(StateMachine_c_inst);

}
}
protected void export_StateMachineEventDataItem_c( StateMachineEventDataItem_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_StateMachineEventDataItem_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Dimensions_c [] Dimensions_c531 = 
Dimensions_c.getManyS_DIMsOnR531(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c531.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c531[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R524
            DataType_c temp1 = DataType_c.getOneS_DTOnR524(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SM_SM on R516
            StateMachine_c temp2 = StateMachine_c.getOneSM_SMOnR516(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SM_EVT on R532
            StateMachineEvent_c temp3 = StateMachineEvent_c.getOneSM_EVTOnR532(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_StateMachineEvent_c( StateMachineEvent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                PolymorphicEvent_c PolymorphicEvent_c525 = 
PolymorphicEvent_c.getOneSM_PEVTOnR525(
inst)
;



      export_PolymorphicEvent_c( PolymorphicEvent_c525, pm, writeAsProxies, isPersistable );

                SemEvent_c SemEvent_c525 = 
SemEvent_c.getOneSM_SEVTOnR525(
inst)
;



      export_SemEvent_c( SemEvent_c525, pm, writeAsProxies, isPersistable );


     if(!writeAsProxies && !forceWriteAsProxy)
      write_StateMachineEvent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part SM_SM on R502
            StateMachine_c temp1 = StateMachine_c.getOneSM_SMOnR502(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SM_SUPDT on R520
            EventSupplementalData_c temp2 = EventSupplementalData_c.getOneSM_SUPDTOnR520(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          StateMachineEventDataItem_c [] StateMachineEventDataItem_c5161_set = 
StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(
inst)
;



      for ( int StateMachineEventDataItem_c_index = 0;
            StateMachineEventDataItem_c_index < StateMachineEventDataItem_c5161_set.length;
            ++StateMachineEventDataItem_c_index )
      {
        export_StateMachineEventDataItem_c(StateMachineEventDataItem_c5161_set[StateMachineEventDataItem_c_index], pm, false, isPersistable );
      }
    }
}
protected void export_StateMachineState_c( StateMachineState_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_StateMachineState_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                StateEventMatrixEntry_c [] StateEventMatrixEntry_c503 = 
StateEventMatrixEntry_c.getManySM_SEMEsOnR503(
inst)
;



      for ( int StateEventMatrixEntry_c_index = 0;
            StateEventMatrixEntry_c_index < StateEventMatrixEntry_c503.length;
            ++StateEventMatrixEntry_c_index )
      {
        export_StateEventMatrixEntry_c(StateEventMatrixEntry_c503[StateEventMatrixEntry_c_index], pm, writeAsProxies, isPersistable );
      }

                MooreActionHome_c MooreActionHome_c511 = 
MooreActionHome_c.getOneSM_MOAHOnR511(
inst)
;



      export_MooreActionHome_c( MooreActionHome_c511, pm, writeAsProxies, isPersistable );

    // select part SM_SM on R501
            StateMachine_c temp1 = StateMachine_c.getOneSM_SMOnR501(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SM_SUPDT on R521
            EventSupplementalData_c temp2 = EventSupplementalData_c.getOneSM_SUPDTOnR521(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Transition_c( Transition_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                NoEventTransition_c NoEventTransition_c507 = 
NoEventTransition_c.getOneSM_NETXNOnR507(
inst)
;



      export_NoEventTransition_c( NoEventTransition_c507, pm, writeAsProxies, isPersistable );

                NewStateTransition_c NewStateTransition_c507 = 
NewStateTransition_c.getOneSM_NSTXNOnR507(
inst)
;



      export_NewStateTransition_c( NewStateTransition_c507, pm, writeAsProxies, isPersistable );

                CreationTransition_c CreationTransition_c507 = 
CreationTransition_c.getOneSM_CRTXNOnR507(
inst)
;



      export_CreationTransition_c( CreationTransition_c507, pm, writeAsProxies, isPersistable , false);

                TransitionActionHome_c TransitionActionHome_c530 = 
TransitionActionHome_c.getOneSM_TAHOnR530(
inst)
;



      export_TransitionActionHome_c( TransitionActionHome_c530, pm, writeAsProxies, isPersistable );


     if(!writeAsProxies && !forceWriteAsProxy)
      write_Transition_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part SM_STATE on R506
            StateMachineState_c temp1 = StateMachineState_c.getOneSM_STATEOnR506(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SM_SM on R505
            StateMachine_c temp2 = StateMachine_c.getOneSM_SMOnR505(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          StateMachineEvent_c StateMachineEvent_c1_inst = 
StateMachineEvent_c.getOneSM_EVTOnR525(
SemEvent_c.getOneSM_SEVTOnR503(
StateEventMatrixEntry_c.getOneSM_SEMEOnR504(
NewStateTransition_c.getOneSM_NSTXNOnR507(
inst)
)
)
)
;



      export_StateMachineEvent_c(StateMachineEvent_c1_inst, pm, (m_inst == inst) ? false : true, isPersistable , false);
          StateMachineEventDataItem_c [] StateMachineEventDataItem_c5162_set = 
StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(
StateMachineEvent_c.getManySM_EVTsOnR525(
SemEvent_c.getManySM_SEVTsOnR503(
StateEventMatrixEntry_c.getManySM_SEMEsOnR504(
NewStateTransition_c.getManySM_NSTXNsOnR507(
inst)
)
)
)
)
;



      for ( int StateMachineEventDataItem_c_index = 0;
            StateMachineEventDataItem_c_index < StateMachineEventDataItem_c5162_set.length;
            ++StateMachineEventDataItem_c_index )
      {
        export_StateMachineEventDataItem_c(StateMachineEventDataItem_c5162_set[StateMachineEventDataItem_c_index], pm, (m_inst == inst) ? false : true, isPersistable );
      }
          ModelClass_c ModelClass_c3_inst = 
ModelClass_c.getOneO_OBJOnR518(
InstanceStateMachine_c.getOneSM_ISMOnR517(
StateMachine_c.getOneSM_SMOnR502(
StateMachineEvent_c.getOneSM_EVTOnR525(
PolymorphicEvent_c.getOneSM_PEVTOnR527(
NonLocalEvent_c.getOneSM_NLEVTOnR526(
SemEvent_c.getOneSM_SEVTOnR503(
StateEventMatrixEntry_c.getOneSM_SEMEOnR504(
NewStateTransition_c.getOneSM_NSTXNOnR507(
inst)
)
)
)
)
)
)
)
)
;



      export_ModelClass_c(ModelClass_c3_inst, pm, true, isPersistable , false);
    }
}
protected void export_ISM( StateMachine_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ISM_sql(inst, pm);
}
protected void export_ASM( StateMachine_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ASM_sql(inst, pm);
}
protected void export_PolymorphicEvent_c( PolymorphicEvent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  

     if(!writeAsProxies && !forceWriteAsProxy)
      write_PolymorphicEvent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateMachineEvent_c StateMachineEvent_c_inst = 
StateMachineEvent_c.getOneSM_EVTOnR525(
inst)
;



	write_StateMachineEvent_c_sql(StateMachineEvent_c_inst);

}
}
protected void export_SemEvent_c( SemEvent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                LocalEvent_c LocalEvent_c526 = 
LocalEvent_c.getOneSM_LEVTOnR526(
inst)
;



      export_LocalEvent_c( LocalEvent_c526, pm, writeAsProxies, isPersistable );

                NonLocalEvent_c NonLocalEvent_c526 = 
NonLocalEvent_c.getOneSM_NLEVTOnR526(
inst)
;



      export_NonLocalEvent_c( NonLocalEvent_c526, pm, writeAsProxies, isPersistable );

                SignalEvent_c SignalEvent_c526 = 
SignalEvent_c.getOneSM_SGEVTOnR526(
inst)
;



      export_SignalEvent_c( SignalEvent_c526, pm, writeAsProxies, isPersistable , true);


     if(!writeAsProxies && !forceWriteAsProxy)
      write_SemEvent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateMachineEvent_c StateMachineEvent_c_inst = 
StateMachineEvent_c.getOneSM_EVTOnR525(
inst)
;



	write_StateMachineEvent_c_sql(StateMachineEvent_c_inst);

}
}
protected void export_LocalEvent_c( LocalEvent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LocalEvent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SemEvent_c SemEvent_c_inst = 
SemEvent_c.getOneSM_SEVTOnR526(
inst)
;



	write_SemEvent_c_sql(SemEvent_c_inst);
    StateMachineEvent_c StateMachineEvent_c_inst = 
StateMachineEvent_c.getOneSM_EVTOnR525(
SemEvent_c.getOneSM_SEVTOnR526(
inst)
)
;



	write_StateMachineEvent_c_sql(StateMachineEvent_c_inst);


}
}
protected void export_NonLocalEvent_c( NonLocalEvent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_NonLocalEvent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SemEvent_c SemEvent_c_inst = 
SemEvent_c.getOneSM_SEVTOnR526(
inst)
;



	write_SemEvent_c_sql(SemEvent_c_inst);
    StateMachineEvent_c StateMachineEvent_c_inst = 
StateMachineEvent_c.getOneSM_EVTOnR525(
SemEvent_c.getOneSM_SEVTOnR526(
inst)
)
;



	write_StateMachineEvent_c_sql(StateMachineEvent_c_inst);


}
    // select part SM_PEVT on R527
            PolymorphicEvent_c temp2 = PolymorphicEvent_c.getOneSM_PEVTOnR527(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
                 StateMachineEvent_c evt = StateMachineEvent_c.getOneSM_EVTOnR525(temp2);
                proxyPath = new ProxyPath(evt, m_inst);
                collectedProxies.add(proxyPath);
                StateMachine_c sm = StateMachine_c.getOneSM_SMOnR502(evt);
                proxyPath = new ProxyPath(sm, m_inst);
                collectedProxies.add(proxyPath);
                InstanceStateMachine_c ism = InstanceStateMachine_c.getOneSM_ISMOnR517(sm);
                proxyPath = new ProxyPath(ism, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SignalEvent_c( SignalEvent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SignalEvent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SemEvent_c SemEvent_c_inst = 
SemEvent_c.getOneSM_SEVTOnR526(
inst)
;



	write_SemEvent_c_sql(SemEvent_c_inst);
    StateMachineEvent_c StateMachineEvent_c_inst = 
StateMachineEvent_c.getOneSM_EVTOnR525(
SemEvent_c.getOneSM_SEVTOnR526(
inst)
)
;



	write_StateMachineEvent_c_sql(StateMachineEvent_c_inst);


}
    // select part SPR_PS on R528
            ProvidedSignal_c temp2 = ProvidedSignal_c.getOneSPR_PSOnR528(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SPR_RS on R529
            RequiredSignal_c temp3 = RequiredSignal_c.getOneSPR_RSOnR529(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          ProvidedExecutableProperty_c ProvidedExecutableProperty_c1_inst = 
ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(
ProvidedSignal_c.getOneSPR_PSOnR528(
inst)
)
;



      export_ProvidedExecutableProperty_c(ProvidedExecutableProperty_c1_inst, pm, true, isPersistable );
          ExecutableProperty_c ExecutableProperty_c2_inst = 
ExecutableProperty_c.getOneC_EPOnR4501(
ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(
ProvidedSignal_c.getOneSPR_PSOnR528(
inst)
)
)
;



      export_ExecutableProperty_c(ExecutableProperty_c2_inst, pm, true, isPersistable );
          InterfaceReference_c InterfaceReference_c3_inst = 
InterfaceReference_c.getOneC_IROnR4009(
Provision_c.getOneC_POnR4501(
ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(
ProvidedSignal_c.getOneSPR_PSOnR528(
inst)
)
)
)
;



      export_InterfaceReference_c(InterfaceReference_c3_inst, pm, true, isPersistable );
          Port_c Port_c4_inst = 
Port_c.getOneC_POOnR4016(
InterfaceReference_c.getOneC_IROnR4009(
Provision_c.getOneC_POnR4501(
ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(
ProvidedSignal_c.getOneSPR_PSOnR528(
inst)
)
)
)
)
;



      export_Port_c(Port_c4_inst, pm, true, isPersistable );
          RequiredExecutableProperty_c RequiredExecutableProperty_c5_inst = 
RequiredExecutableProperty_c.getOneSPR_REPOnR4502(
RequiredSignal_c.getOneSPR_RSOnR529(
inst)
)
;



      export_RequiredExecutableProperty_c(RequiredExecutableProperty_c5_inst, pm, true, isPersistable );
          ExecutableProperty_c ExecutableProperty_c6_inst = 
ExecutableProperty_c.getOneC_EPOnR4500(
RequiredExecutableProperty_c.getOneSPR_REPOnR4502(
RequiredSignal_c.getOneSPR_RSOnR529(
inst)
)
)
;



      export_ExecutableProperty_c(ExecutableProperty_c6_inst, pm, true, isPersistable );
          InterfaceReference_c InterfaceReference_c7_inst = 
InterfaceReference_c.getOneC_IROnR4009(
Requirement_c.getOneC_ROnR4500(
RequiredExecutableProperty_c.getOneSPR_REPOnR4502(
RequiredSignal_c.getOneSPR_RSOnR529(
inst)
)
)
)
;



      export_InterfaceReference_c(InterfaceReference_c7_inst, pm, true, isPersistable );
          Port_c Port_c8_inst = 
Port_c.getOneC_POOnR4016(
InterfaceReference_c.getOneC_IROnR4009(
Requirement_c.getOneC_ROnR4500(
RequiredExecutableProperty_c.getOneSPR_REPOnR4502(
RequiredSignal_c.getOneSPR_RSOnR529(
inst)
)
)
)
)
;



      export_Port_c(Port_c8_inst, pm, true, isPersistable );
    }
}
protected void export_StateEventMatrixEntry_c( StateEventMatrixEntry_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
                EventIgnored_c EventIgnored_c504 = 
EventIgnored_c.getOneSM_EIGNOnR504(
inst)
;



      export_EventIgnored_c( EventIgnored_c504, pm, writeAsProxies, isPersistable );

                CantHappen_c CantHappen_c504 = 
CantHappen_c.getOneSM_CHOnR504(
inst)
;



      export_CantHappen_c( CantHappen_c504, pm, writeAsProxies, isPersistable );


     if(!writeAsProxies && !forceWriteAsProxy)
      write_StateEventMatrixEntry_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone SM_STATE on R503
            StateMachineState_c temp1 = StateMachineState_c.getOneSM_STATEOnR503(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth SM_SEVT on R503
            SemEvent_c temp2 = SemEvent_c.getOneSM_SEVTOnR503(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_EventIgnored_c( EventIgnored_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_EventIgnored_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateEventMatrixEntry_c StateEventMatrixEntry_c_inst = 
StateEventMatrixEntry_c.getOneSM_SEMEOnR504(
inst)
;



	write_StateEventMatrixEntry_c_sql(StateEventMatrixEntry_c_inst);

}
}
protected void export_CantHappen_c( CantHappen_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CantHappen_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateEventMatrixEntry_c StateEventMatrixEntry_c_inst = 
StateEventMatrixEntry_c.getOneSM_SEMEOnR504(
inst)
;



	write_StateEventMatrixEntry_c_sql(StateEventMatrixEntry_c_inst);

}
}
protected void export_MooreActionHome_c( MooreActionHome_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_MooreActionHome_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ActionHome_c ActionHome_c513 = 
ActionHome_c.getOneSM_AHOnR513(
inst)
;



      export_ActionHome_c( ActionHome_c513, pm, writeAsProxies, isPersistable );

    // select aone SM_MOORE on R511
            MooreStateMachine_c temp1 = MooreStateMachine_c.getOneSM_MOOREOnR511(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth SM_STATE on R511
            StateMachineState_c temp2 = StateMachineState_c.getOneSM_STATEOnR511(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ActionHome_c ActionHome_c_inst = 
ActionHome_c.getOneSM_AHOnR513(
inst)
;



	write_ActionHome_c_sql(ActionHome_c_inst);

}
}
protected void export_ActionHome_c( ActionHome_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActionHome_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Action_c Action_c514 = 
Action_c.getOneSM_ACTOnR514(
inst)
;



      export_Action_c( Action_c514, pm, writeAsProxies, isPersistable );

    // select part SM_ACT on R514
            Action_c temp1 = Action_c.getOneSM_ACTOnR514(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Action_c( Action_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Action_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                StateActionBody_c StateActionBody_c691 = 
StateActionBody_c.getOneACT_SABOnR691(
inst)
;



      export_StateActionBody_c( StateActionBody_c691, pm, writeAsProxies, false );

                TransitionActionBody_c TransitionActionBody_c688 = 
TransitionActionBody_c.getOneACT_TABOnR688(
inst)
;



      export_TransitionActionBody_c( TransitionActionBody_c688, pm, writeAsProxies, false );

    // select part SM_SM on R515
            StateMachine_c temp1 = StateMachine_c.getOneSM_SMOnR515(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_StateActionBody_c( StateActionBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_StateActionBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

    // select part SM_ACT on R691
            Action_c temp1 = Action_c.getOneSM_ACTOnR691(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
}
protected void export_TransitionActionBody_c( TransitionActionBody_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_TransitionActionBody_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Body_c Body_c698 = 
Body_c.getOneACT_ACTOnR698(
inst)
;



      export_Body_c( Body_c698, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Body_c Body_c_inst = 
Body_c.getOneACT_ACTOnR698(
inst)
;



	write_Body_c_sql(Body_c_inst);

}
    // select part SM_ACT on R688
            Action_c temp2 = Action_c.getOneSM_ACTOnR688(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_NoEventTransition_c( NoEventTransition_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_NoEventTransition_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Transition_c Transition_c_inst = 
Transition_c.getOneSM_TXNOnR507(
inst)
;



	write_Transition_c_sql(Transition_c_inst);

}
    // select part SM_STATE on R508
            StateMachineState_c temp2 = StateMachineState_c.getOneSM_STATEOnR508(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_NewStateTransition_c( NewStateTransition_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_NewStateTransition_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    StateEventMatrixEntry_c StateEventMatrixEntry_c_inst = 
StateEventMatrixEntry_c.getOneSM_SEMEOnR504(
inst)
;



	write_StateEventMatrixEntry_c_sql(StateEventMatrixEntry_c_inst);

}
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Transition_c Transition_c_inst = 
Transition_c.getOneSM_TXNOnR507(
inst)
;



	write_Transition_c_sql(Transition_c_inst);

}
}
protected void export_CreationTransition_c( CreationTransition_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable, boolean exportAlternateChildren )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CreationTransition_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Transition_c Transition_c_inst = 
Transition_c.getOneSM_TXNOnR507(
inst)
;



	write_Transition_c_sql(Transition_c_inst);

}
    // select part SM_LEVT on R509
            LocalEvent_c temp2 = LocalEvent_c.getOneSM_LEVTOnR509(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    if(exportAlternateChildren && !ignoreAlternateChildren) {
          StateMachineEvent_c StateMachineEvent_c1_inst = 
StateMachineEvent_c.getOneSM_EVTOnR525(
SemEvent_c.getOneSM_SEVTOnR526(
LocalEvent_c.getOneSM_LEVTOnR509(
inst)
)
)
;



      export_StateMachineEvent_c(StateMachineEvent_c1_inst, pm, (m_inst == inst) ? false : true, isPersistable , false);
          StateMachineEventDataItem_c [] StateMachineEventDataItem_c5162_set = 
StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(
StateMachineEvent_c.getManySM_EVTsOnR525(
SemEvent_c.getManySM_SEVTsOnR526(
LocalEvent_c.getManySM_LEVTsOnR509(
inst)
)
)
)
;



      for ( int StateMachineEventDataItem_c_index = 0;
            StateMachineEventDataItem_c_index < StateMachineEventDataItem_c5162_set.length;
            ++StateMachineEventDataItem_c_index )
      {
        export_StateMachineEventDataItem_c(StateMachineEventDataItem_c5162_set[StateMachineEventDataItem_c_index], pm, (m_inst == inst) ? false : true, isPersistable );
      }
          TransitionActionHome_c TransitionActionHome_c3_inst = 
TransitionActionHome_c.getOneSM_TAHOnR530(
Transition_c.getOneSM_TXNOnR507(
inst)
)
;



      export_TransitionActionHome_c(TransitionActionHome_c3_inst, pm, (m_inst == inst) ? false : true, isPersistable );
    }
}
protected void export_TransitionActionHome_c( TransitionActionHome_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_TransitionActionHome_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ActionHome_c ActionHome_c513 = 
ActionHome_c.getOneSM_AHOnR513(
inst)
;



      export_ActionHome_c( ActionHome_c513, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ActionHome_c ActionHome_c_inst = 
ActionHome_c.getOneSM_AHOnR513(
inst)
;



	write_ActionHome_c_sql(ActionHome_c_inst);

}
    // select part SM_TXN on R530
            Transition_c temp2 = Transition_c.getOneSM_TXNOnR530(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Model_c( Model_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Model_c_sql(inst);
                GraphicalElement_c [] GraphicalElement_c1 = 
GraphicalElement_c.getManyGD_GEsOnR1(
inst)
;



      for ( int GraphicalElement_c_index = 0;
            GraphicalElement_c_index < GraphicalElement_c1.length;
            ++GraphicalElement_c_index )
      {
        export_GraphicalElement_c(GraphicalElement_c1[GraphicalElement_c_index], pm, writeAsProxies, isPersistable );
      }

                Diagram_c Diagram_c18 = 
Diagram_c.getOneDIM_DIAOnR18(
inst)
;



      export_Diagram_c( Diagram_c18, pm, writeAsProxies, isPersistable );

                ElementInSuppression_c [] ElementInSuppression_c32 = 
ElementInSuppression_c.getManyGD_EISsOnR32(
inst)
;



      for ( int ElementInSuppression_c_index = 0;
            ElementInSuppression_c_index < ElementInSuppression_c32.length;
            ++ElementInSuppression_c_index )
      {
        export_ElementInSuppression_c(ElementInSuppression_c32[ElementInSuppression_c_index], pm, writeAsProxies, isPersistable );
      }

                Elementstyle_c [] Elementstyle_c402 = 
Elementstyle_c.getManySTY_SsOnR402(
inst)
;



      for ( int Elementstyle_c_index = 0;
            Elementstyle_c_index < Elementstyle_c402.length;
            ++Elementstyle_c_index )
      {
        export_Elementstyle_c(Elementstyle_c402[Elementstyle_c_index], pm, writeAsProxies, isPersistable );
      }

                Layer_c [] Layer_c34 = 
Layer_c.getManyGD_LAYsOnR34(
inst)
;



      for ( int Layer_c_index = 0;
            Layer_c_index < Layer_c34.length;
            ++Layer_c_index )
      {
        export_Layer_c(Layer_c34[Layer_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Diagram_c Diagram_c_inst = 
Diagram_c.getOneDIM_DIAOnR18(
inst)
;



	write_Diagram_c_sql(Diagram_c_inst);

}
}
protected void export_GraphicalElement_c( GraphicalElement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_GraphicalElement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Connector_c Connector_c2 = 
Connector_c.getOneGD_CONOnR2(
inst)
;



      export_Connector_c( Connector_c2, pm, writeAsProxies, isPersistable );

                Shape_c Shape_c2 = 
Shape_c.getOneGD_SHPOnR2(
inst)
;



      export_Shape_c( Shape_c2, pm, writeAsProxies, isPersistable );

                Elementstyle_c [] Elementstyle_c401 = 
Elementstyle_c.getManySTY_SsOnR401(
inst)
;



      for ( int Elementstyle_c_index = 0;
            Elementstyle_c_index < Elementstyle_c401.length;
            ++Elementstyle_c_index )
      {
        export_Elementstyle_c(Elementstyle_c401[Elementstyle_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part GD_MD on R1
            Model_c temp1 = Model_c.getOneGD_MDOnR1(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part DIM_GE on R23
            Graphelement_c temp3 = Graphelement_c.getOneDIM_GEOnR23(inst,true);
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Connector_c( Connector_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Connector_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                FloatingText_c [] FloatingText_c8 = 
FloatingText_c.getManyGD_CTXTsOnR8(
inst)
;



      for ( int FloatingText_c_index = 0;
            FloatingText_c_index < FloatingText_c8.length;
            ++FloatingText_c_index )
      {
        export_FloatingText_c(FloatingText_c8[FloatingText_c_index], pm, writeAsProxies, isPersistable );
      }

                LineSegment_c [] LineSegment_c6 = 
LineSegment_c.getManyGD_LSsOnR6(
inst)
;



      for ( int LineSegment_c_index = 0;
            LineSegment_c_index < LineSegment_c6.length;
            ++LineSegment_c_index )
      {
        export_LineSegment_c(LineSegment_c6[LineSegment_c_index], pm, writeAsProxies, isPersistable );
      }

                Graphedge_c Graphedge_c20 = 
Graphedge_c.getOneDIM_EDOnR20(
inst)
;



      export_Graphedge_c( Graphedge_c20, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    GraphicalElement_c GraphicalElement_c_inst = 
GraphicalElement_c.getOneGD_GEOnR2(
inst)
;



	write_GraphicalElement_c_sql(GraphicalElement_c_inst);

}
    // select part GD_LS on R5
            LineSegment_c temp2 = LineSegment_c.getOneGD_LSOnR5(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Graphedge_c Graphedge_c_inst = 
Graphedge_c.getOneDIM_EDOnR20(
inst)
;



	write_Graphedge_c_sql(Graphedge_c_inst);
    Graphelement_c Graphelement_c_inst = 
Graphelement_c.getOneDIM_GEOnR301(
Graphedge_c.getOneDIM_EDOnR20(
inst)
)
;



	write_Graphelement_c_sql(Graphelement_c_inst);
    Diagramelement_c Diagramelement_c_inst = 
Diagramelement_c.getOneDIM_ELEOnR302(
Graphelement_c.getOneDIM_GEOnR301(
Graphedge_c.getOneDIM_EDOnR20(
inst)
)
)
;



	write_Diagramelement_c_sql(Diagramelement_c_inst);



}
}
protected void export_FloatingText_c( FloatingText_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FloatingText_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Graphnode_c Graphnode_c19 = 
Graphnode_c.getOneDIM_NDOnR19(
inst)
;



      export_Graphnode_c( Graphnode_c19, pm, writeAsProxies, isPersistable );

    // select part GD_CON on R8
            Connector_c temp1 = Connector_c.getOneGD_CONOnR8(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part GD_SHP on R27
            Shape_c temp2 = Shape_c.getOneGD_SHPOnR27(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Graphnode_c Graphnode_c_inst = 
Graphnode_c.getOneDIM_NDOnR19(
inst)
;



	write_Graphnode_c_sql(Graphnode_c_inst);
    Graphelement_c Graphelement_c_inst = 
Graphelement_c.getOneDIM_GEOnR301(
Graphnode_c.getOneDIM_NDOnR19(
inst)
)
;



	write_Graphelement_c_sql(Graphelement_c_inst);
    Diagramelement_c Diagramelement_c_inst = 
Diagramelement_c.getOneDIM_ELEOnR302(
Graphelement_c.getOneDIM_GEOnR301(
Graphnode_c.getOneDIM_NDOnR19(
inst)
)
)
;



	write_Diagramelement_c_sql(Diagramelement_c_inst);



}
}
protected void export_Shape_c( Shape_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Shape_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ContainingShape_c ContainingShape_c28 = 
ContainingShape_c.getOneGD_CTROnR28(
inst)
;



      export_ContainingShape_c( ContainingShape_c28, pm, writeAsProxies, isPersistable );

                NoncontainingShape_c NoncontainingShape_c28 = 
NoncontainingShape_c.getOneGD_NCSOnR28(
inst)
;



      export_NoncontainingShape_c( NoncontainingShape_c28, pm, writeAsProxies, isPersistable );

                FloatingText_c FloatingText_c27 = 
FloatingText_c.getOneGD_CTXTOnR27(
inst)
;



      export_FloatingText_c( FloatingText_c27, pm, writeAsProxies, isPersistable );

                Graphnode_c Graphnode_c19 = 
Graphnode_c.getOneDIM_NDOnR19(
inst)
;



      export_Graphnode_c( Graphnode_c19, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    GraphicalElement_c GraphicalElement_c_inst = 
GraphicalElement_c.getOneGD_GEOnR2(
inst)
;



	write_GraphicalElement_c_sql(GraphicalElement_c_inst);

}
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Graphnode_c Graphnode_c_inst = 
Graphnode_c.getOneDIM_NDOnR19(
inst)
;



	write_Graphnode_c_sql(Graphnode_c_inst);
    Graphelement_c Graphelement_c_inst = 
Graphelement_c.getOneDIM_GEOnR301(
Graphnode_c.getOneDIM_NDOnR19(
inst)
)
;



	write_Graphelement_c_sql(Graphelement_c_inst);
    Diagramelement_c Diagramelement_c_inst = 
Diagramelement_c.getOneDIM_ELEOnR302(
Graphelement_c.getOneDIM_GEOnR301(
Graphnode_c.getOneDIM_NDOnR19(
inst)
)
)
;



	write_Diagramelement_c_sql(Diagramelement_c_inst);



}
}
protected void export_Elementstyle_c( Elementstyle_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Elementstyle_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Fillcolorstyle_c Fillcolorstyle_c400 = 
Fillcolorstyle_c.getOneSTY_FCSOnR400(
inst)
;



      export_Fillcolorstyle_c( Fillcolorstyle_c400, pm, writeAsProxies, isPersistable );

                Fontstyle_c Fontstyle_c400 = 
Fontstyle_c.getOneSTY_FSOnR400(
inst)
;



      export_Fontstyle_c( Fontstyle_c400, pm, writeAsProxies, isPersistable );

                Linecolorstyle_c Linecolorstyle_c400 = 
Linecolorstyle_c.getOneSTY_LCSOnR400(
inst)
;



      export_Linecolorstyle_c( Linecolorstyle_c400, pm, writeAsProxies, isPersistable );

    // select part GD_GE on R401
            GraphicalElement_c temp1 = GraphicalElement_c.getOneGD_GEOnR401(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part GD_MD on R402
            Model_c temp2 = Model_c.getOneGD_MDOnR402(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Fillcolorstyle_c( Fillcolorstyle_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Fillcolorstyle_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Elementstyle_c Elementstyle_c_inst = 
Elementstyle_c.getOneSTY_SOnR400(
inst)
;



	write_Elementstyle_c_sql(Elementstyle_c_inst);

}
}
protected void export_Fontstyle_c( Fontstyle_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Fontstyle_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Elementstyle_c Elementstyle_c_inst = 
Elementstyle_c.getOneSTY_SOnR400(
inst)
;



	write_Elementstyle_c_sql(Elementstyle_c_inst);

}
}
protected void export_Linecolorstyle_c( Linecolorstyle_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Linecolorstyle_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Elementstyle_c Elementstyle_c_inst = 
Elementstyle_c.getOneSTY_SOnR400(
inst)
;



	write_Elementstyle_c_sql(Elementstyle_c_inst);

}
}
protected void export_ContainingShape_c( ContainingShape_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ContainingShape_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Shape_c Shape_c_inst = 
Shape_c.getOneGD_SHPOnR28(
inst)
;



	write_Shape_c_sql(Shape_c_inst);
    GraphicalElement_c GraphicalElement_c_inst = 
GraphicalElement_c.getOneGD_GEOnR2(
Shape_c.getOneGD_SHPOnR28(
inst)
)
;



	write_GraphicalElement_c_sql(GraphicalElement_c_inst);


}
}
protected void export_NoncontainingShape_c( NoncontainingShape_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_NoncontainingShape_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Shape_c Shape_c_inst = 
Shape_c.getOneGD_SHPOnR28(
inst)
;



	write_Shape_c_sql(Shape_c_inst);
    GraphicalElement_c GraphicalElement_c_inst = 
GraphicalElement_c.getOneGD_GEOnR2(
Shape_c.getOneGD_SHPOnR28(
inst)
)
;



	write_GraphicalElement_c_sql(GraphicalElement_c_inst);


}
}
protected void export_LineSegment_c( LineSegment_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LineSegment_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                AnchorOnSegment_c [] AnchorOnSegment_c26 = 
AnchorOnSegment_c.getManyGD_AOSsOnR26(
inst)
;



      for ( int AnchorOnSegment_c_index = 0;
            AnchorOnSegment_c_index < AnchorOnSegment_c26.length;
            ++AnchorOnSegment_c_index )
      {
        export_AnchorOnSegment_c(AnchorOnSegment_c26[AnchorOnSegment_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part DIM_WAY on R21
            Waypoint_c temp2 = Waypoint_c.getOneDIM_WAYOnR21(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part DIM_WAY on R22
            Waypoint_c temp3 = Waypoint_c.getOneDIM_WAYOnR22(inst,true);
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part GD_CON on R6
            Connector_c temp4 = Connector_c.getOneGD_CONOnR6(inst,true);
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_AnchorOnSegment_c( AnchorOnSegment_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_AnchorOnSegment_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone DIM_CON on R26
            Graphconnector_c temp1 = Graphconnector_c.getOneDIM_CONOnR26(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth GD_LS on R26
            LineSegment_c temp2 = LineSegment_c.getOneGD_LSOnR26(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Diagram_c( Diagram_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Diagram_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part DIM_SMB on R317
            Semanticmodelbridge_c temp1 = Semanticmodelbridge_c.getOneDIM_SMBOnR317(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ElementInSuppression_c( ElementInSuppression_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ElementInSuppression_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                GraphicalElement_c [] GraphicalElement_c32 = 
GraphicalElement_c.getManyGD_GEsOnR32(
inst)
;



      for ( int GraphicalElement_c_index = 0;
            GraphicalElement_c_index < GraphicalElement_c32.length;
            ++GraphicalElement_c_index )
      {
        export_GraphicalElement_c(GraphicalElement_c32[GraphicalElement_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone GD_MD on R32
            Model_c temp1 = Model_c.getOneGD_MDOnR32(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth GD_GE on R32
            GraphicalElement_c temp2 = GraphicalElement_c.getOneGD_GEOnR32(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Layer_c( Layer_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Layer_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Graphicalelementinlayer_c [] Graphicalelementinlayer_c35 = 
Graphicalelementinlayer_c.getManyGD_GLAYsOnR35(
inst)
;



      for ( int Graphicalelementinlayer_c_index = 0;
            Graphicalelementinlayer_c_index < Graphicalelementinlayer_c35.length;
            ++Graphicalelementinlayer_c_index )
      {
        export_Graphicalelementinlayer_c(Graphicalelementinlayer_c35[Graphicalelementinlayer_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part GD_MD on R34
            Model_c temp1 = Model_c.getOneGD_MDOnR34(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Graphicalelementinlayer_c( Graphicalelementinlayer_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Graphicalelementinlayer_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select aone GD_LAY on R35
            Layer_c temp1 = Layer_c.getOneGD_LAYOnR35(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth GD_GE on R35
            GraphicalElement_c temp2 = GraphicalElement_c.getOneGD_GEOnR35(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Graphnode_c( Graphnode_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Graphnode_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Graphelement_c Graphelement_c301 = 
Graphelement_c.getOneDIM_GEOnR301(
inst)
;



      export_Graphelement_c( Graphelement_c301, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Graphelement_c Graphelement_c_inst = 
Graphelement_c.getOneDIM_GEOnR301(
inst)
;



	write_Graphelement_c_sql(Graphelement_c_inst);
    Diagramelement_c Diagramelement_c_inst = 
Diagramelement_c.getOneDIM_ELEOnR302(
Graphelement_c.getOneDIM_GEOnR301(
inst)
)
;



	write_Diagramelement_c_sql(Diagramelement_c_inst);


}
}
protected void export_Graphelement_c( Graphelement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Graphelement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Diagramelement_c Diagramelement_c302 = 
Diagramelement_c.getOneDIM_ELEOnR302(
inst)
;



      export_Diagramelement_c( Diagramelement_c302, pm, writeAsProxies, isPersistable );

                Graphconnector_c [] Graphconnector_c311 = 
Graphconnector_c.getManyDIM_CONsOnR311(
inst)
;



      for ( int Graphconnector_c_index = 0;
            Graphconnector_c_index < Graphconnector_c311.length;
            ++Graphconnector_c_index )
      {
        export_Graphconnector_c(Graphconnector_c311[Graphconnector_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Diagramelement_c Diagramelement_c_inst = 
Diagramelement_c.getOneDIM_ELEOnR302(
inst)
;



	write_Diagramelement_c_sql(Diagramelement_c_inst);

}
    // select part DIM_SMB on R312
            Semanticmodelbridge_c temp2 = Semanticmodelbridge_c.getOneDIM_SMBOnR312(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Diagramelement_c( Diagramelement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Diagramelement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part DIM_GE on R307
            Graphelement_c temp1 = Graphelement_c.getOneDIM_GEOnR307(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Graphconnector_c( Graphconnector_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Graphconnector_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part DIM_GE on R311
            Graphelement_c temp1 = Graphelement_c.getOneDIM_GEOnR311(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Graphedge_c( Graphedge_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
                Waypoint_c [] Waypoint_c319 = 
Waypoint_c.getManyDIM_WAYsOnR319(
inst)
;



      for ( int Waypoint_c_index = 0;
            Waypoint_c_index < Waypoint_c319.length;
            ++Waypoint_c_index )
      {
        export_Waypoint_c(Waypoint_c319[Waypoint_c_index], pm, writeAsProxies, isPersistable );
      }

                Graphelement_c Graphelement_c301 = 
Graphelement_c.getOneDIM_GEOnR301(
inst)
;



      export_Graphelement_c( Graphelement_c301, pm, writeAsProxies, isPersistable );


     if(!writeAsProxies && !forceWriteAsProxy)
      write_Graphedge_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Graphelement_c Graphelement_c_inst = 
Graphelement_c.getOneDIM_GEOnR301(
inst)
;



	write_Graphelement_c_sql(Graphelement_c_inst);
    Diagramelement_c Diagramelement_c_inst = 
Diagramelement_c.getOneDIM_ELEOnR302(
Graphelement_c.getOneDIM_GEOnR301(
inst)
)
;



	write_Diagramelement_c_sql(Diagramelement_c_inst);


}
    // select part DIM_CON on R320
            Graphconnector_c temp2 = Graphconnector_c.getOneDIM_CONOnR320(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part DIM_CON on R321
            Graphconnector_c temp3 = Graphconnector_c.getOneDIM_CONOnR321(inst,true);
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Waypoint_c( Waypoint_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportGraphics()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Waypoint_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part DIM_ED on R319
            Graphedge_c temp1 = Graphedge_c.getOneDIM_EDOnR319(inst,true);
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part DIM_PLN on R323
            Polyline_c temp2 = Polyline_c.getOneDIM_PLNOnR323(inst,true);
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ExternalEntityParticipant_c( ExternalEntityParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExternalEntityParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part S_EE on R933
            ExternalEntity_c temp2 = ExternalEntity_c.getOneS_EEOnR933(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_FunctionPackageParticipant_c( FunctionPackageParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionPackageParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part S_FPK on R932
            FunctionPackage_c temp2 = FunctionPackage_c.getOneS_FPKOnR932(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ClassParticipant_c( ClassParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ClassParticipantAttribute_c [] ClassParticipantAttribute_c935 = 
ClassParticipantAttribute_c.getManySQ_CPAsOnR935(
inst)
;



      for ( int ClassParticipantAttribute_c_index = 0;
            ClassParticipantAttribute_c_index < ClassParticipantAttribute_c935.length;
            ++ClassParticipantAttribute_c_index )
      {
        export_ClassParticipantAttribute_c(ClassParticipantAttribute_c935[ClassParticipantAttribute_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part O_OBJ on R939
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR939(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ClassParticipantAttribute_c( ClassParticipantAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassParticipantAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InformalAttribute_c InformalAttribute_c947 = 
InformalAttribute_c.getOneSQ_IAOnR947(
inst)
;



      export_InformalAttribute_c( InformalAttribute_c947, pm, writeAsProxies, isPersistable );

                FormalAttribute_c FormalAttribute_c947 = 
FormalAttribute_c.getOneSQ_FAOnR947(
inst)
;



      export_FormalAttribute_c( FormalAttribute_c947, pm, writeAsProxies, isPersistable );

    // select part SQ_CP on R935
            ClassParticipant_c temp1 = ClassParticipant_c.getOneSQ_CPOnR935(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InformalAttribute_c( InformalAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InformalAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ClassParticipantAttribute_c ClassParticipantAttribute_c_inst = 
ClassParticipantAttribute_c.getOneSQ_CPAOnR947(
inst)
;



	write_ClassParticipantAttribute_c_sql(ClassParticipantAttribute_c_inst);

}
}
protected void export_FormalAttribute_c( FormalAttribute_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FormalAttribute_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    ClassParticipantAttribute_c ClassParticipantAttribute_c_inst = 
ClassParticipantAttribute_c.getOneSQ_CPAOnR947(
inst)
;



	write_ClassParticipantAttribute_c_sql(ClassParticipantAttribute_c_inst);

}
}
protected void export_ClassInstanceParticipant_c( ClassInstanceParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ClassInstanceParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InstanceAttributeValue_c [] InstanceAttributeValue_c936 = 
InstanceAttributeValue_c.getManySQ_AVsOnR936(
inst)
;



      for ( int InstanceAttributeValue_c_index = 0;
            InstanceAttributeValue_c_index < InstanceAttributeValue_c936.length;
            ++InstanceAttributeValue_c_index )
      {
        export_InstanceAttributeValue_c(InstanceAttributeValue_c936[InstanceAttributeValue_c_index], pm, writeAsProxies, isPersistable );
      }

                InstanceAttributeValue_c [] InstanceAttributeValue_c937 = 
InstanceAttributeValue_c.getManySQ_AVsOnR937(
inst)
;



      for ( int InstanceAttributeValue_c_index = 0;
            InstanceAttributeValue_c_index < InstanceAttributeValue_c937.length;
            ++InstanceAttributeValue_c_index )
      {
        export_InstanceAttributeValue_c(InstanceAttributeValue_c937[InstanceAttributeValue_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part O_OBJ on R934
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR934(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InstanceAttributeValue_c( InstanceAttributeValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InstanceAttributeValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InformalAttributeValue_c InformalAttributeValue_c948 = 
InformalAttributeValue_c.getOneSQ_IAVOnR948(
inst)
;



      export_InformalAttributeValue_c( InformalAttributeValue_c948, pm, writeAsProxies, isPersistable );

                FormalAttributeValue_c FormalAttributeValue_c948 = 
FormalAttributeValue_c.getOneSQ_FAVOnR948(
inst)
;



      export_FormalAttributeValue_c( FormalAttributeValue_c948, pm, writeAsProxies, isPersistable );

    // select part SQ_CIP on R936
            ClassInstanceParticipant_c temp1 = ClassInstanceParticipant_c.getOneSQ_CIPOnR936(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SQ_CIP on R937
            ClassInstanceParticipant_c temp2 = ClassInstanceParticipant_c.getOneSQ_CIPOnR937(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_ATTR on R938
            Attribute_c temp3 = Attribute_c.getOneO_ATTROnR938(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InformalAttributeValue_c( InformalAttributeValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InformalAttributeValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InstanceAttributeValue_c InstanceAttributeValue_c_inst = 
InstanceAttributeValue_c.getOneSQ_AVOnR948(
inst)
;



	write_InstanceAttributeValue_c_sql(InstanceAttributeValue_c_inst);

}
}
protected void export_FormalAttributeValue_c( FormalAttributeValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FormalAttributeValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InstanceAttributeValue_c InstanceAttributeValue_c_inst = 
InstanceAttributeValue_c.getOneSQ_AVOnR948(
inst)
;



	write_InstanceAttributeValue_c_sql(InstanceAttributeValue_c_inst);

}
}
protected void export_ActorParticipant_c( ActorParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActorParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part SQ_LS on R949
            Lifespan_c temp2 = Lifespan_c.getOneSQ_LSOnR949(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_CommunicationLink_c( CommunicationLink_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CommunicationLink_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part R_REL on R1128
            Association_c temp1 = Association_c.getOneR_RELOnR1128(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SQ_P on R1133
            InteractionParticipant_c temp2 = InteractionParticipant_c.getOneSQ_POnR1133(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SQ_P on R1134
            InteractionParticipant_c temp3 = InteractionParticipant_c.getOneSQ_POnR1134(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_BinaryAssociation_c( BinaryAssociation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_BinaryAssociation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    UseCaseAssociation_c UseCaseAssociation_c_inst = 
UseCaseAssociation_c.getOneUC_UCAOnR1210(
inst)
;



	write_UseCaseAssociation_c_sql(UseCaseAssociation_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
UseCaseAssociation_c.getOneUC_UCAOnR1210(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_Generalization_c( Generalization_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Generalization_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    UseCaseAssociation_c UseCaseAssociation_c_inst = 
UseCaseAssociation_c.getOneUC_UCAOnR1210(
inst)
;



	write_UseCaseAssociation_c_sql(UseCaseAssociation_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
UseCaseAssociation_c.getOneUC_UCAOnR1210(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_Include_c( Include_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Include_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    UseCaseAssociation_c UseCaseAssociation_c_inst = 
UseCaseAssociation_c.getOneUC_UCAOnR1210(
inst)
;



	write_UseCaseAssociation_c_sql(UseCaseAssociation_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
UseCaseAssociation_c.getOneUC_UCAOnR1210(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_Extend_c( Extend_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Extend_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    UseCaseAssociation_c UseCaseAssociation_c_inst = 
UseCaseAssociation_c.getOneUC_UCAOnR1210(
inst)
;



	write_UseCaseAssociation_c_sql(UseCaseAssociation_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
UseCaseAssociation_c.getOneUC_UCAOnR1210(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_UseCaseParticipant_c( UseCaseParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_UseCaseParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_ComponentParticipant_c( ComponentParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ComponentParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part C_C on R955
            Component_c temp1 = Component_c.getOneC_COnR955(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_Lifespan_c( Lifespan_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Lifespan_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                TimingMark_c [] TimingMark_c931 = 
TimingMark_c.getManySQ_TMsOnR931(
inst)
;



      for ( int TimingMark_c_index = 0;
            TimingMark_c_index < TimingMark_c931.length;
            ++TimingMark_c_index )
      {
        export_TimingMark_c(TimingMark_c931[TimingMark_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part SQ_P on R940
            InteractionParticipant_c temp2 = InteractionParticipant_c.getOneSQ_POnR940(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_TimingMark_c( TimingMark_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_TimingMark_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                TimeSpan_c [] TimeSpan_c941 = 
TimeSpan_c.getManySQ_TSsOnR941(
inst)
;



      for ( int TimeSpan_c_index = 0;
            TimeSpan_c_index < TimeSpan_c941.length;
            ++TimeSpan_c_index )
      {
        export_TimeSpan_c(TimeSpan_c941[TimeSpan_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part SQ_LS on R931
            Lifespan_c temp1 = Lifespan_c.getOneSQ_LSOnR931(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_TimeSpan_c( TimeSpan_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_TimeSpan_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part SQ_TM on R941
            TimingMark_c temp1 = TimingMark_c.getOneSQ_TMOnR941(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SQ_TM on R942
            TimingMark_c temp2 = TimingMark_c.getOneSQ_TMOnR942(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_PackageParticipant_c( PackageParticipant_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_PackageParticipant_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    InteractionParticipant_c InteractionParticipant_c_inst = 
InteractionParticipant_c.getOneSQ_POnR930(
inst)
;



	write_InteractionParticipant_c_sql(InteractionParticipant_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
InteractionParticipant_c.getOneSQ_POnR930(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
    // select part EP_PKG on R956
            Package_c temp2 = Package_c.getOneEP_PKGOnR956(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ReturnMessage_c( ReturnMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ReturnMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
inst)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_SynchronousMessage_c( SynchronousMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SynchronousMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InformalSynchronousMessage_c InformalSynchronousMessage_c1020 = 
InformalSynchronousMessage_c.getOneMSG_ISMOnR1020(
inst)
;



      export_InformalSynchronousMessage_c( InformalSynchronousMessage_c1020, pm, writeAsProxies, isPersistable );

                FunctionMessage_c FunctionMessage_c1020 = 
FunctionMessage_c.getOneMSG_FOnR1020(
inst)
;



      export_FunctionMessage_c( FunctionMessage_c1020, pm, writeAsProxies, isPersistable );

                OperationMessage_c OperationMessage_c1020 = 
OperationMessage_c.getOneMSG_OOnR1020(
inst)
;



      export_OperationMessage_c( OperationMessage_c1020, pm, writeAsProxies, isPersistable );

                BridgeMessage_c BridgeMessage_c1020 = 
BridgeMessage_c.getOneMSG_BOnR1020(
inst)
;



      export_BridgeMessage_c( BridgeMessage_c1020, pm, writeAsProxies, isPersistable );

                InterfaceOperationMessage_c InterfaceOperationMessage_c1020 = 
InterfaceOperationMessage_c.getOneMSG_IOPOnR1020(
inst)
;



      export_InterfaceOperationMessage_c( InterfaceOperationMessage_c1020, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
inst)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_InformalSynchronousMessage_c( InformalSynchronousMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InformalSynchronousMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SynchronousMessage_c SynchronousMessage_c_inst = 
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
;



	write_SynchronousMessage_c_sql(SynchronousMessage_c_inst);
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_FunctionMessage_c( FunctionMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_SYNC on R1010
            Function_c temp1 = Function_c.getOneS_SYNCOnR1010(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SynchronousMessage_c SynchronousMessage_c_inst = 
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
;



	write_SynchronousMessage_c_sql(SynchronousMessage_c_inst);
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_OperationMessage_c( OperationMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OperationMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part O_TFR on R1011
            Operation_c temp1 = Operation_c.getOneO_TFROnR1011(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SynchronousMessage_c SynchronousMessage_c_inst = 
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
;



	write_SynchronousMessage_c_sql(SynchronousMessage_c_inst);
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_BridgeMessage_c( BridgeMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_BridgeMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_BRG on R1012
            Bridge_c temp1 = Bridge_c.getOneS_BRGOnR1012(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SynchronousMessage_c SynchronousMessage_c_inst = 
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
;



	write_SynchronousMessage_c_sql(SynchronousMessage_c_inst);
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_InterfaceOperationMessage_c( InterfaceOperationMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfaceOperationMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    SynchronousMessage_c SynchronousMessage_c_inst = 
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
;



	write_SynchronousMessage_c_sql(SynchronousMessage_c_inst);
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
SynchronousMessage_c.getOneMSG_SMOnR1020(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
    // select part C_IO on R1022
            InterfaceOperation_c temp2 = InterfaceOperation_c.getOneC_IOOnR1022(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_AsynchronousMessage_c( AsynchronousMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_AsynchronousMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                EventMessage_c EventMessage_c1019 = 
EventMessage_c.getOneMSG_EOnR1019(
inst)
;



      export_EventMessage_c( EventMessage_c1019, pm, writeAsProxies, isPersistable );

                InformalAsynchronousMessage_c InformalAsynchronousMessage_c1019 = 
InformalAsynchronousMessage_c.getOneMSG_IAMOnR1019(
inst)
;



      export_InformalAsynchronousMessage_c( InformalAsynchronousMessage_c1019, pm, writeAsProxies, isPersistable );

                SignalMessage_c SignalMessage_c1019 = 
SignalMessage_c.getOneMSG_SIGOnR1019(
inst)
;



      export_SignalMessage_c( SignalMessage_c1019, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
inst)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
inst)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);


}
}
protected void export_EventMessage_c( EventMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_EventMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part SM_EVT on R1009
            StateMachineEvent_c temp1 = StateMachineEvent_c.getOneSM_EVTOnR1009(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    AsynchronousMessage_c AsynchronousMessage_c_inst = 
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
;



	write_AsynchronousMessage_c_sql(AsynchronousMessage_c_inst);
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_InformalAsynchronousMessage_c( InformalAsynchronousMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InformalAsynchronousMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    AsynchronousMessage_c AsynchronousMessage_c_inst = 
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
;



	write_AsynchronousMessage_c_sql(AsynchronousMessage_c_inst);
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
}
protected void export_SignalMessage_c( SignalMessage_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SignalMessage_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    AsynchronousMessage_c AsynchronousMessage_c_inst = 
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
;



	write_AsynchronousMessage_c_sql(AsynchronousMessage_c_inst);
    Message_c Message_c_inst = 
Message_c.getOneMSG_MOnR1018(
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
)
;



	write_Message_c_sql(Message_c_inst);
    PackageableElement_c PackageableElement_c_inst = 
PackageableElement_c.getOnePE_PEOnR8001(
Message_c.getOneMSG_MOnR1018(
AsynchronousMessage_c.getOneMSG_AMOnR1019(
inst)
)
)
;



	write_PackageableElement_c_sql(PackageableElement_c_inst);



}
    // select part C_AS on R1021
            InterfaceSignal_c temp2 = InterfaceSignal_c.getOneC_ASOnR1021(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_MessageArgument_c( MessageArgument_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_MessageArgument_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                BridgeArgument_c BridgeArgument_c1013 = 
BridgeArgument_c.getOneMSG_BAOnR1013(
inst)
;



      export_BridgeArgument_c( BridgeArgument_c1013, pm, writeAsProxies, isPersistable );

                OperationArgument_c OperationArgument_c1013 = 
OperationArgument_c.getOneMSG_OAOnR1013(
inst)
;



      export_OperationArgument_c( OperationArgument_c1013, pm, writeAsProxies, isPersistable );

                FunctionArgument_c FunctionArgument_c1013 = 
FunctionArgument_c.getOneMSG_FAOnR1013(
inst)
;



      export_FunctionArgument_c( FunctionArgument_c1013, pm, writeAsProxies, isPersistable );

                EventArgument_c EventArgument_c1013 = 
EventArgument_c.getOneMSG_EAOnR1013(
inst)
;



      export_EventArgument_c( EventArgument_c1013, pm, writeAsProxies, isPersistable );

                InformalArgument_c InformalArgument_c1013 = 
InformalArgument_c.getOneMSG_IAOnR1013(
inst)
;



      export_InformalArgument_c( InformalArgument_c1013, pm, writeAsProxies, isPersistable );

                ExecutablePropertyArgument_c ExecutablePropertyArgument_c1013 = 
ExecutablePropertyArgument_c.getOneMSG_EPAOnR1013(
inst)
;



      export_ExecutablePropertyArgument_c( ExecutablePropertyArgument_c1013, pm, writeAsProxies, isPersistable );

    // select part MSG_M on R1000
            Message_c temp1 = Message_c.getOneMSG_MOnR1000(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part MSG_M on R1001
            Message_c temp2 = Message_c.getOneMSG_MOnR1001(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_BridgeArgument_c( BridgeArgument_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_BridgeArgument_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    MessageArgument_c MessageArgument_c_inst = 
MessageArgument_c.getOneMSG_AOnR1013(
inst)
;



	write_MessageArgument_c_sql(MessageArgument_c_inst);

}
    // select part S_BPARM on R1014
            BridgeParameter_c temp2 = BridgeParameter_c.getOneS_BPARMOnR1014(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_OperationArgument_c( OperationArgument_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OperationArgument_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    MessageArgument_c MessageArgument_c_inst = 
MessageArgument_c.getOneMSG_AOnR1013(
inst)
;



	write_MessageArgument_c_sql(MessageArgument_c_inst);

}
    // select part O_TPARM on R1015
            OperationParameter_c temp2 = OperationParameter_c.getOneO_TPARMOnR1015(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_FunctionArgument_c( FunctionArgument_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionArgument_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    MessageArgument_c MessageArgument_c_inst = 
MessageArgument_c.getOneMSG_AOnR1013(
inst)
;



	write_MessageArgument_c_sql(MessageArgument_c_inst);

}
    // select part S_SPARM on R1016
            FunctionParameter_c temp2 = FunctionParameter_c.getOneS_SPARMOnR1016(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_EventArgument_c( EventArgument_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_EventArgument_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    MessageArgument_c MessageArgument_c_inst = 
MessageArgument_c.getOneMSG_AOnR1013(
inst)
;



	write_MessageArgument_c_sql(MessageArgument_c_inst);

}
    // select part SM_EVTDI on R1017
            StateMachineEventDataItem_c temp2 = StateMachineEventDataItem_c.getOneSM_EVTDIOnR1017(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InformalArgument_c( InformalArgument_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InformalArgument_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    MessageArgument_c MessageArgument_c_inst = 
MessageArgument_c.getOneMSG_AOnR1013(
inst)
;



	write_MessageArgument_c_sql(MessageArgument_c_inst);

}
}
protected void export_ExecutablePropertyArgument_c( ExecutablePropertyArgument_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ExecutablePropertyArgument_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    MessageArgument_c MessageArgument_c_inst = 
MessageArgument_c.getOneMSG_AOnR1013(
inst)
;



	write_MessageArgument_c_sql(MessageArgument_c_inst);

}
    // select part C_PP on R1023
            PropertyParameter_c temp2 = PropertyParameter_c.getOneC_PPOnR1023(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SequenceDiagram( Sequence_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SequenceDiagram_sql(inst, pm);
}
protected void export_SequenceInSequence_c( SequenceInSequence_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SequenceInSequence_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Sequence_c [] Sequence_c928 = 
Sequence_c.getManySQ_SsOnR928(
inst)
;



      for ( int Sequence_c_index = 0;
            Sequence_c_index < Sequence_c928.length;
            ++Sequence_c_index )
      {
        export_Sequence_c(Sequence_c928[Sequence_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part SQ_S on R911
            Sequence_c temp1 = Sequence_c.getOneSQ_SOnR911(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_CommunicationDiagram( Communication_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CommunicationDiagram_sql(inst, pm);
}
protected void export_CommunicationInCommunication_c( CommunicationInCommunication_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CommunicationInCommunication_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Communication_c [] Communication_c1129 = 
Communication_c.getManyCOMM_COMMsOnR1129(
inst)
;



      for ( int Communication_c_index = 0;
            Communication_c_index < Communication_c1129.length;
            ++Communication_c_index )
      {
        export_Communication_c(Communication_c1129[Communication_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part COMM_COMM on R1130
            Communication_c temp1 = Communication_c.getOneCOMM_COMMOnR1130(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ParticipantInCommunication_c( ParticipantInCommunication_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ParticipantInCommunication_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InteractionParticipant_c [] InteractionParticipant_c1126 = 
InteractionParticipant_c.getManySQ_PsOnR1126(
inst)
;



      for ( int InteractionParticipant_c_index = 0;
            InteractionParticipant_c_index < InteractionParticipant_c1126.length;
            ++InteractionParticipant_c_index )
      {
        export_InteractionParticipant_c(InteractionParticipant_c1126[InteractionParticipant_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone COMM_COMM on R1126
            Communication_c temp1 = Communication_c.getOneCOMM_COMMOnR1126(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth SQ_P on R1126
            InteractionParticipant_c temp2 = InteractionParticipant_c.getOneSQ_POnR1126(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_MessageInCommunication_c( MessageInCommunication_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_MessageInCommunication_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Message_c [] Message_c1135 = 
Message_c.getManyMSG_MsOnR1135(
inst)
;



      for ( int Message_c_index = 0;
            Message_c_index < Message_c1135.length;
            ++Message_c_index )
      {
        export_Message_c(Message_c1135[Message_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone COMM_COMM on R1135
            Communication_c temp1 = Communication_c.getOneCOMM_COMMOnR1135(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth MSG_M on R1135
            Message_c temp2 = Message_c.getOneMSG_MOnR1135(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_UseCaseDiagram( UseCaseDiagram_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_UseCaseDiagram_sql(inst, pm);
}
protected void export_UseCaseInUseCase_c( UseCaseInUseCase_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_UseCaseInUseCase_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                UseCaseDiagram_c [] UseCaseDiagram_c1209 = 
UseCaseDiagram_c.getManyUC_UCCsOnR1209(
inst)
;



      for ( int UseCaseDiagram_c_index = 0;
            UseCaseDiagram_c_index < UseCaseDiagram_c1209.length;
            ++UseCaseDiagram_c_index )
      {
        export_UseCaseDiagram_c(UseCaseDiagram_c1209[UseCaseDiagram_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part UC_UCC on R1208
            UseCaseDiagram_c temp1 = UseCaseDiagram_c.getOneUC_UCCOnR1208(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ParticipantInUseCase_c( ParticipantInUseCase_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ParticipantInUseCase_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InteractionParticipant_c [] InteractionParticipant_c1203 = 
InteractionParticipant_c.getManySQ_PsOnR1203(
inst)
;



      for ( int InteractionParticipant_c_index = 0;
            InteractionParticipant_c_index < InteractionParticipant_c1203.length;
            ++InteractionParticipant_c_index )
      {
        export_InteractionParticipant_c(InteractionParticipant_c1203[InteractionParticipant_c_index], pm, writeAsProxies, isPersistable );
      }

    // select aone UC_UCC on R1203
            UseCaseDiagram_c temp1 = UseCaseDiagram_c.getOneUC_UCCOnR1203(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select aoth SQ_P on R1203
            InteractionParticipant_c temp2 = InteractionParticipant_c.getOneSQ_POnR1203(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Body_c( Body_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Body_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Block_c [] Block_c601 = 
Block_c.getManyACT_BLKsOnR601(
inst)
;



      for ( int Block_c_index = 0;
            Block_c_index < Block_c601.length;
            ++Block_c_index )
      {
        export_Block_c(Block_c601[Block_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part ACT_BLK on R666
            Block_c temp1 = Block_c.getOneACT_BLKOnR666(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_BLK on R699
            Block_c temp2 = Block_c.getOneACT_BLKOnR699(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Block_c( Block_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Block_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Statement_c [] Statement_c602 = 
Statement_c.getManyACT_SMTsOnR602(
inst)
;



      for ( int Statement_c_index = 0;
            Statement_c_index < Statement_c602.length;
            ++Statement_c_index )
      {
        export_Statement_c(Statement_c602[Statement_c_index], pm, writeAsProxies, isPersistable );
      }

                Value_c [] Value_c826 = 
Value_c.getManyV_VALsOnR826(
inst)
;



      for ( int Value_c_index = 0;
            Value_c_index < Value_c826.length;
            ++Value_c_index )
      {
        export_Value_c(Value_c826[Value_c_index], pm, writeAsProxies, isPersistable );
      }

                Variable_c [] Variable_c823 = 
Variable_c.getManyV_VARsOnR823(
inst)
;



      for ( int Variable_c_index = 0;
            Variable_c_index < Variable_c823.length;
            ++Variable_c_index )
      {
        export_Variable_c(Variable_c823[Variable_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part ACT_ACT on R601
            Body_c temp1 = Body_c.getOneACT_ACTOnR601(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Statement_c( Statement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Statement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                BridgeInvocation_c BridgeInvocation_c603 = 
BridgeInvocation_c.getOneACT_BRGOnR603(
inst)
;



      export_BridgeInvocation_c( BridgeInvocation_c603, pm, writeAsProxies, isPersistable );

                FunctionInvocation_c FunctionInvocation_c603 = 
FunctionInvocation_c.getOneACT_FNCOnR603(
inst)
;



      export_FunctionInvocation_c( FunctionInvocation_c603, pm, writeAsProxies, isPersistable );

                ReturnStmt_c ReturnStmt_c603 = 
ReturnStmt_c.getOneACT_RETOnR603(
inst)
;



      export_ReturnStmt_c( ReturnStmt_c603, pm, writeAsProxies, isPersistable );

                OperationInvocation_c OperationInvocation_c603 = 
OperationInvocation_c.getOneACT_TFMOnR603(
inst)
;



      export_OperationInvocation_c( OperationInvocation_c603, pm, writeAsProxies, isPersistable );

                InterfaceOperationInvocation_c InterfaceOperationInvocation_c603 = 
InterfaceOperationInvocation_c.getOneACT_IOPOnR603(
inst)
;



      export_InterfaceOperationInvocation_c( InterfaceOperationInvocation_c603, pm, writeAsProxies, isPersistable );

                SignalInvocation_c SignalInvocation_c603 = 
SignalInvocation_c.getOneACT_SGNOnR603(
inst)
;



      export_SignalInvocation_c( SignalInvocation_c603, pm, writeAsProxies, isPersistable );

                Create_c Create_c603 = 
Create_c.getOneACT_CROnR603(
inst)
;



      export_Create_c( Create_c603, pm, writeAsProxies, isPersistable );

                CreateNoVariable_c CreateNoVariable_c603 = 
CreateNoVariable_c.getOneACT_CNVOnR603(
inst)
;



      export_CreateNoVariable_c( CreateNoVariable_c603, pm, writeAsProxies, isPersistable );

                Delete_c Delete_c603 = 
Delete_c.getOneACT_DELOnR603(
inst)
;



      export_Delete_c( Delete_c603, pm, writeAsProxies, isPersistable );

                AssignToMember_c AssignToMember_c603 = 
AssignToMember_c.getOneACT_AIOnR603(
inst)
;



      export_AssignToMember_c( AssignToMember_c603, pm, writeAsProxies, isPersistable );

                Select_c Select_c603 = 
Select_c.getOneACT_SELOnR603(
inst)
;



      export_Select_c( Select_c603, pm, writeAsProxies, isPersistable );

                SelectFromInstances_c SelectFromInstances_c603 = 
SelectFromInstances_c.getOneACT_FIOOnR603(
inst)
;



      export_SelectFromInstances_c( SelectFromInstances_c603, pm, writeAsProxies, isPersistable );

                SelectFromInstancesWhere_c SelectFromInstancesWhere_c603 = 
SelectFromInstancesWhere_c.getOneACT_FIWOnR603(
inst)
;



      export_SelectFromInstancesWhere_c( SelectFromInstancesWhere_c603, pm, writeAsProxies, isPersistable );

                EventSpecificationStatement_c EventSpecificationStatement_c603 = 
EventSpecificationStatement_c.getOneE_ESSOnR603(
inst)
;



      export_EventSpecificationStatement_c( EventSpecificationStatement_c603, pm, writeAsProxies, isPersistable );

                GeneratePreexistingEvent_c GeneratePreexistingEvent_c603 = 
GeneratePreexistingEvent_c.getOneE_GPROnR603(
inst)
;



      export_GeneratePreexistingEvent_c( GeneratePreexistingEvent_c603, pm, writeAsProxies, isPersistable );

                Relate_c Relate_c603 = 
Relate_c.getOneACT_RELOnR603(
inst)
;



      export_Relate_c( Relate_c603, pm, writeAsProxies, isPersistable );

                RelateUsing_c RelateUsing_c603 = 
RelateUsing_c.getOneACT_RUOnR603(
inst)
;



      export_RelateUsing_c( RelateUsing_c603, pm, writeAsProxies, isPersistable );

                Unrelate_c Unrelate_c603 = 
Unrelate_c.getOneACT_UNROnR603(
inst)
;



      export_Unrelate_c( Unrelate_c603, pm, writeAsProxies, isPersistable );

                UnrelateUsing_c UnrelateUsing_c603 = 
UnrelateUsing_c.getOneACT_URUOnR603(
inst)
;



      export_UnrelateUsing_c( UnrelateUsing_c603, pm, writeAsProxies, isPersistable );

                Break_c Break_c603 = 
Break_c.getOneACT_BRKOnR603(
inst)
;



      export_Break_c( Break_c603, pm, writeAsProxies, isPersistable );

                Continue_c Continue_c603 = 
Continue_c.getOneACT_CONOnR603(
inst)
;



      export_Continue_c( Continue_c603, pm, writeAsProxies, isPersistable );

                Control_c Control_c603 = 
Control_c.getOneACT_CTLOnR603(
inst)
;



      export_Control_c( Control_c603, pm, writeAsProxies, isPersistable );

                WhileStmt_c WhileStmt_c603 = 
WhileStmt_c.getOneACT_WHLOnR603(
inst)
;



      export_WhileStmt_c( WhileStmt_c603, pm, writeAsProxies, isPersistable );

                IfStmt_c IfStmt_c603 = 
IfStmt_c.getOneACT_IFOnR603(
inst)
;



      export_IfStmt_c( IfStmt_c603, pm, writeAsProxies, isPersistable );

                ElseifStmt_c ElseifStmt_c603 = 
ElseifStmt_c.getOneACT_ELOnR603(
inst)
;



      export_ElseifStmt_c( ElseifStmt_c603, pm, writeAsProxies, isPersistable );

                ElseStmt_c ElseStmt_c603 = 
ElseStmt_c.getOneACT_EOnR603(
inst)
;



      export_ElseStmt_c( ElseStmt_c603, pm, writeAsProxies, isPersistable );

                ForStmt_c ForStmt_c603 = 
ForStmt_c.getOneACT_FOROnR603(
inst)
;



      export_ForStmt_c( ForStmt_c603, pm, writeAsProxies, isPersistable );

    // select part ACT_BLK on R602
            Block_c temp2 = Block_c.getOneACT_BLKOnR602(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_BridgeInvocation_c( BridgeInvocation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_BridgeInvocation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_BRG on R674
            Bridge_c temp1 = Bridge_c.getOneS_BRGOnR674(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_FunctionInvocation_c( FunctionInvocation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionInvocation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_SYNC on R675
            Function_c temp1 = Function_c.getOneS_SYNCOnR675(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_ReturnStmt_c( ReturnStmt_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ReturnStmt_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAL on R668
            Value_c temp1 = Value_c.getOneV_VALOnR668(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_OperationInvocation_c( OperationInvocation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OperationInvocation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R667
            Variable_c temp1 = Variable_c.getOneV_VAROnR667(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_TFR on R673
            Operation_c temp2 = Operation_c.getOneO_TFROnR673(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_InterfaceOperationInvocation_c( InterfaceOperationInvocation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InterfaceOperationInvocation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part SPR_PO on R680
            ProvidedOperation_c temp1 = ProvidedOperation_c.getOneSPR_POOnR680(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SPR_RO on R657
            RequiredOperation_c temp2 = RequiredOperation_c.getOneSPR_ROOnR657(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R629
            Value_c temp3 = Value_c.getOneV_VALOnR629(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_SignalInvocation_c( SignalInvocation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SignalInvocation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part SPR_PS on R663
            ProvidedSignal_c temp1 = ProvidedSignal_c.getOneSPR_PSOnR663(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SPR_RS on R660
            RequiredSignal_c temp2 = RequiredSignal_c.getOneSPR_RSOnR660(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R630
            Value_c temp3 = Value_c.getOneV_VALOnR630(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_Create_c( Create_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Create_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R633
            Variable_c temp1 = Variable_c.getOneV_VAROnR633(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_OBJ on R671
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR671(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_CreateNoVariable_c( CreateNoVariable_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CreateNoVariable_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part O_OBJ on R672
            ModelClass_c temp1 = ModelClass_c.getOneO_OBJOnR672(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_Delete_c( Delete_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Delete_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R634
            Variable_c temp1 = Variable_c.getOneV_VAROnR634(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_AssignToMember_c( AssignToMember_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_AssignToMember_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAL on R609
            Value_c temp1 = Value_c.getOneV_VALOnR609(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R689
            Value_c temp2 = Value_c.getOneV_VALOnR689(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_Select_c( Select_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Select_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                SelectRelatedWhere_c SelectRelatedWhere_c664 = 
SelectRelatedWhere_c.getOneACT_SRWOnR664(
inst)
;



      export_SelectRelatedWhere_c( SelectRelatedWhere_c664, pm, writeAsProxies, isPersistable );

                SelectRelatedBy_c SelectRelatedBy_c664 = 
SelectRelatedBy_c.getOneACT_SROnR664(
inst)
;



      export_SelectRelatedBy_c( SelectRelatedBy_c664, pm, writeAsProxies, isPersistable );

                ChainLink_c ChainLink_c637 = 
ChainLink_c.getOneACT_LNKOnR637(
inst)
;



      export_ChainLink_c( ChainLink_c637, pm, writeAsProxies, isPersistable );

    // select part V_VAR on R638
            Variable_c temp1 = Variable_c.getOneV_VAROnR638(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R613
            Value_c temp2 = Value_c.getOneV_VALOnR613(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_SelectRelatedWhere_c( SelectRelatedWhere_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SelectRelatedWhere_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Select_c Select_c_inst = 
Select_c.getOneACT_SELOnR664(
inst)
;



	write_Select_c_sql(Select_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
Select_c.getOneACT_SELOnR664(
inst)
)
;



	write_Statement_c_sql(Statement_c_inst);


}
    // select part V_VAL on R611
            Value_c temp2 = Value_c.getOneV_VALOnR611(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SelectRelatedBy_c( SelectRelatedBy_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SelectRelatedBy_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Select_c Select_c_inst = 
Select_c.getOneACT_SELOnR664(
inst)
;



	write_Select_c_sql(Select_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
Select_c.getOneACT_SELOnR664(
inst)
)
;



	write_Statement_c_sql(Statement_c_inst);


}
}
protected void export_ChainLink_c( ChainLink_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ChainLink_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ChainLink_c ChainLink_c604 = 
ChainLink_c.getOneACT_LNKOnR604Precedes(
inst)
;



      export_ChainLink_c( ChainLink_c604, pm, writeAsProxies, isPersistable );

    // select part O_OBJ on R678
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR678(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part R_REL on R681
            Association_c temp3 = Association_c.getOneR_RELOnR681(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_SEL on R637
            Select_c temp4 = Select_c.getOneACT_SELOnR637(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SelectFromInstances_c( SelectFromInstances_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SelectFromInstances_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R639
            Variable_c temp1 = Variable_c.getOneV_VAROnR639(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_OBJ on R677
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR677(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_SelectFromInstancesWhere_c( SelectFromInstancesWhere_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SelectFromInstancesWhere_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAL on R610
            Value_c temp1 = Value_c.getOneV_VALOnR610(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R665
            Variable_c temp2 = Variable_c.getOneV_VAROnR665(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_OBJ on R676
            ModelClass_c temp3 = ModelClass_c.getOneO_OBJOnR676(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_EventSpecificationStatement_c( EventSpecificationStatement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_EventSpecificationStatement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ActualParameter_c [] ActualParameter_c700 = 
ActualParameter_c.getManyV_PARsOnR700(
inst)
;



      for ( int ActualParameter_c_index = 0;
            ActualParameter_c_index < ActualParameter_c700.length;
            ++ActualParameter_c_index )
      {
        export_ActualParameter_c(ActualParameter_c700[ActualParameter_c_index], pm, writeAsProxies, isPersistable );
      }

                CreateEventStatement_c CreateEventStatement_c701 = 
CreateEventStatement_c.getOneE_CESOnR701(
inst)
;



      export_CreateEventStatement_c( CreateEventStatement_c701, pm, writeAsProxies, isPersistable );

                GenerateEventStatement_c GenerateEventStatement_c701 = 
GenerateEventStatement_c.getOneE_GESOnR701(
inst)
;



      export_GenerateEventStatement_c( GenerateEventStatement_c701, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_ActualParameter_c( ActualParameter_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ActualParameter_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAL on R800
            Value_c temp1 = Value_c.getOneV_VALOnR800(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_FNV on R817
            FunctionValue_c temp2 = FunctionValue_c.getOneV_FNVOnR817(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_BRV on R810
            BridgeValue_c temp3 = BridgeValue_c.getOneV_BRVOnR810(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_TRV on R811
            OperationValue_c temp4 = OperationValue_c.getOneV_TRVOnR811(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_MSV on R842
            MessageValue_c temp6 = MessageValue_c.getOneV_MSVOnR842(inst,true);
	      if(forceProxyExport && temp6 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp6 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp6_pmc = temp6.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp6_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp6.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp6, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp6.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp6.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp6.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_FNC on R669
            FunctionInvocation_c temp7 = FunctionInvocation_c.getOneACT_FNCOnR669(inst,true);
	      if(forceProxyExport && temp7 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp7, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp7 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp7_pmc = temp7.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp7_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp7.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp7, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp7.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp7.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp7.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_BRG on R628
            BridgeInvocation_c temp8 = BridgeInvocation_c.getOneACT_BRGOnR628(inst,true);
	      if(forceProxyExport && temp8 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp8, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp8 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp8_pmc = temp8.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp8_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp8.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp8, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp8.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp8.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp8.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_TFM on R627
            OperationInvocation_c temp9 = OperationInvocation_c.getOneACT_TFMOnR627(inst,true);
	      if(forceProxyExport && temp9 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp9, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp9 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp9_pmc = temp9.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp9_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp9.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp9, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp9.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp9.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp9.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_IOP on R679
            InterfaceOperationInvocation_c temp10 = InterfaceOperationInvocation_c.getOneACT_IOPOnR679(inst,true);
	      if(forceProxyExport && temp10 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp10, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp10 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp10_pmc = temp10.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp10_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp10.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp10, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp10.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp10.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp10.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_SGN on R662
            SignalInvocation_c temp11 = SignalInvocation_c.getOneACT_SGNOnR662(inst,true);
	      if(forceProxyExport && temp11 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp11, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp11 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp11_pmc = temp11.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp11_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp11.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp11, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp11.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp11.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp11.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part E_ESS on R700
            EventSpecificationStatement_c temp12 = EventSpecificationStatement_c.getOneE_ESSOnR700(inst,true);
	      if(forceProxyExport && temp12 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp12, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp12 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp12_pmc = temp12.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp12_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp12.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp12, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp12.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp12.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp12.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_CreateEventStatement_c( CreateEventStatement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CreateEventStatement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                CreateSmEventStatement_c CreateSmEventStatement_c702 = 
CreateSmEventStatement_c.getOneE_CSMEOnR702(
inst)
;



      export_CreateSmEventStatement_c( CreateSmEventStatement_c702, pm, writeAsProxies, isPersistable );

                CreateEventToExternalEntity_c CreateEventToExternalEntity_c702 = 
CreateEventToExternalEntity_c.getOneE_CEEOnR702(
inst)
;



      export_CreateEventToExternalEntity_c( CreateEventToExternalEntity_c702, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
inst)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
inst)
)
;



	write_Statement_c_sql(Statement_c_inst);


}
    // select part V_VAR on R710
            Variable_c temp2 = Variable_c.getOneV_VAROnR710(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_CreateSmEventStatement_c( CreateSmEventStatement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CreateSmEventStatement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                CreateEventToInstance_c CreateEventToInstance_c704 = 
CreateEventToInstance_c.getOneE_CEIOnR704(
inst)
;



      export_CreateEventToInstance_c( CreateEventToInstance_c704, pm, writeAsProxies, isPersistable );

                CreateEventToClass_c CreateEventToClass_c704 = 
CreateEventToClass_c.getOneE_CEAOnR704(
inst)
;



      export_CreateEventToClass_c( CreateEventToClass_c704, pm, writeAsProxies, isPersistable );

                CreateEventToCreator_c CreateEventToCreator_c704 = 
CreateEventToCreator_c.getOneE_CECOnR704(
inst)
;



      export_CreateEventToCreator_c( CreateEventToCreator_c704, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    CreateEventStatement_c CreateEventStatement_c_inst = 
CreateEventStatement_c.getOneE_CESOnR702(
inst)
;



	write_CreateEventStatement_c_sql(CreateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
inst)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
inst)
)
)
;



	write_Statement_c_sql(Statement_c_inst);



}
    // select part SM_EVT on R706
            StateMachineEvent_c temp2 = StateMachineEvent_c.getOneSM_EVTOnR706(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_CreateEventToInstance_c( CreateEventToInstance_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CreateEventToInstance_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R711
            Variable_c temp1 = Variable_c.getOneV_VAROnR711(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    CreateSmEventStatement_c CreateSmEventStatement_c_inst = 
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
;



	write_CreateSmEventStatement_c_sql(CreateSmEventStatement_c_inst);
    CreateEventStatement_c CreateEventStatement_c_inst = 
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
;



	write_CreateEventStatement_c_sql(CreateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
)
)
;



	write_Statement_c_sql(Statement_c_inst);




}
}
protected void export_CreateEventToClass_c( CreateEventToClass_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CreateEventToClass_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    CreateSmEventStatement_c CreateSmEventStatement_c_inst = 
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
;



	write_CreateSmEventStatement_c_sql(CreateSmEventStatement_c_inst);
    CreateEventStatement_c CreateEventStatement_c_inst = 
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
;



	write_CreateEventStatement_c_sql(CreateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
)
)
;



	write_Statement_c_sql(Statement_c_inst);




}
}
protected void export_CreateEventToCreator_c( CreateEventToCreator_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CreateEventToCreator_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    CreateSmEventStatement_c CreateSmEventStatement_c_inst = 
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
;



	write_CreateSmEventStatement_c_sql(CreateSmEventStatement_c_inst);
    CreateEventStatement_c CreateEventStatement_c_inst = 
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
;



	write_CreateEventStatement_c_sql(CreateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
CreateSmEventStatement_c.getOneE_CSMEOnR704(
inst)
)
)
)
;



	write_Statement_c_sql(Statement_c_inst);




}
}
protected void export_CreateEventToExternalEntity_c( CreateEventToExternalEntity_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_CreateEventToExternalEntity_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_EEEVT on R708
            ExternalEntityEvent_c temp1 = ExternalEntityEvent_c.getOneS_EEEVTOnR708(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    CreateEventStatement_c CreateEventStatement_c_inst = 
CreateEventStatement_c.getOneE_CESOnR702(
inst)
;



	write_CreateEventStatement_c_sql(CreateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
inst)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
CreateEventStatement_c.getOneE_CESOnR702(
inst)
)
)
;



	write_Statement_c_sql(Statement_c_inst);



}
}
protected void export_GenerateEventStatement_c( GenerateEventStatement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_GenerateEventStatement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                GenerateSmEventStatement_c GenerateSmEventStatement_c703 = 
GenerateSmEventStatement_c.getOneE_GSMEOnR703(
inst)
;



      export_GenerateSmEventStatement_c( GenerateSmEventStatement_c703, pm, writeAsProxies, isPersistable );

                GenerateToExternalEntity_c GenerateToExternalEntity_c703 = 
GenerateToExternalEntity_c.getOneE_GEEOnR703(
inst)
;



      export_GenerateToExternalEntity_c( GenerateToExternalEntity_c703, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
inst)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
inst)
)
;



	write_Statement_c_sql(Statement_c_inst);


}
}
protected void export_GenerateSmEventStatement_c( GenerateSmEventStatement_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_GenerateSmEventStatement_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Generate_c Generate_c705 = 
Generate_c.getOneE_GENOnR705(
inst)
;



      export_Generate_c( Generate_c705, pm, writeAsProxies, isPersistable );

                GenerateToClass_c GenerateToClass_c705 = 
GenerateToClass_c.getOneE_GAROnR705(
inst)
;



      export_GenerateToClass_c( GenerateToClass_c705, pm, writeAsProxies, isPersistable );

                GenerateToCreator_c GenerateToCreator_c705 = 
GenerateToCreator_c.getOneE_GECOnR705(
inst)
;



      export_GenerateToCreator_c( GenerateToCreator_c705, pm, writeAsProxies, isPersistable );

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    GenerateEventStatement_c GenerateEventStatement_c_inst = 
GenerateEventStatement_c.getOneE_GESOnR703(
inst)
;



	write_GenerateEventStatement_c_sql(GenerateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
inst)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
inst)
)
)
;



	write_Statement_c_sql(Statement_c_inst);



}
    // select part SM_EVT on R707
            StateMachineEvent_c temp2 = StateMachineEvent_c.getOneSM_EVTOnR707(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Generate_c( Generate_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Generate_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R712
            Variable_c temp1 = Variable_c.getOneV_VAROnR712(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    GenerateSmEventStatement_c GenerateSmEventStatement_c_inst = 
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
;



	write_GenerateSmEventStatement_c_sql(GenerateSmEventStatement_c_inst);
    GenerateEventStatement_c GenerateEventStatement_c_inst = 
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
;



	write_GenerateEventStatement_c_sql(GenerateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
)
)
;



	write_Statement_c_sql(Statement_c_inst);




}
}
protected void export_GenerateToClass_c( GenerateToClass_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_GenerateToClass_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    GenerateSmEventStatement_c GenerateSmEventStatement_c_inst = 
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
;



	write_GenerateSmEventStatement_c_sql(GenerateSmEventStatement_c_inst);
    GenerateEventStatement_c GenerateEventStatement_c_inst = 
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
;



	write_GenerateEventStatement_c_sql(GenerateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
)
)
;



	write_Statement_c_sql(Statement_c_inst);




}
}
protected void export_GenerateToCreator_c( GenerateToCreator_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_GenerateToCreator_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    GenerateSmEventStatement_c GenerateSmEventStatement_c_inst = 
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
;



	write_GenerateSmEventStatement_c_sql(GenerateSmEventStatement_c_inst);
    GenerateEventStatement_c GenerateEventStatement_c_inst = 
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
;



	write_GenerateEventStatement_c_sql(GenerateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
GenerateSmEventStatement_c.getOneE_GSMEOnR705(
inst)
)
)
)
;



	write_Statement_c_sql(Statement_c_inst);




}
}
protected void export_GenerateToExternalEntity_c( GenerateToExternalEntity_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_GenerateToExternalEntity_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part S_EEEVT on R709
            ExternalEntityEvent_c temp1 = ExternalEntityEvent_c.getOneS_EEEVTOnR709(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    GenerateEventStatement_c GenerateEventStatement_c_inst = 
GenerateEventStatement_c.getOneE_GESOnR703(
inst)
;



	write_GenerateEventStatement_c_sql(GenerateEventStatement_c_inst);
    EventSpecificationStatement_c EventSpecificationStatement_c_inst = 
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
inst)
)
;



	write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c_inst);
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
EventSpecificationStatement_c.getOneE_ESSOnR701(
GenerateEventStatement_c.getOneE_GESOnR703(
inst)
)
)
;



	write_Statement_c_sql(Statement_c_inst);



}
}
protected void export_GeneratePreexistingEvent_c( GeneratePreexistingEvent_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_GeneratePreexistingEvent_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAL on R714
            Value_c temp1 = Value_c.getOneV_VALOnR714(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_Relate_c( Relate_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Relate_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R615
            Variable_c temp1 = Variable_c.getOneV_VAROnR615(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R616
            Variable_c temp2 = Variable_c.getOneV_VAROnR616(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part R_REL on R653
            Association_c temp3 = Association_c.getOneR_RELOnR653(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_RelateUsing_c( RelateUsing_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_RelateUsing_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R617
            Variable_c temp1 = Variable_c.getOneV_VAROnR617(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R618
            Variable_c temp2 = Variable_c.getOneV_VAROnR618(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R619
            Variable_c temp3 = Variable_c.getOneV_VAROnR619(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part R_REL on R654
            Association_c temp4 = Association_c.getOneR_RELOnR654(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_Unrelate_c( Unrelate_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Unrelate_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R620
            Variable_c temp1 = Variable_c.getOneV_VAROnR620(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R621
            Variable_c temp2 = Variable_c.getOneV_VAROnR621(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part R_REL on R655
            Association_c temp3 = Association_c.getOneR_RELOnR655(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_UnrelateUsing_c( UnrelateUsing_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_UnrelateUsing_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R622
            Variable_c temp1 = Variable_c.getOneV_VAROnR622(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R623
            Variable_c temp2 = Variable_c.getOneV_VAROnR623(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R624
            Variable_c temp3 = Variable_c.getOneV_VAROnR624(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part R_REL on R656
            Association_c temp4 = Association_c.getOneR_RELOnR656(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_Break_c( Break_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Break_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_Continue_c( Continue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Continue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_Control_c( Control_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Control_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
}
protected void export_WhileStmt_c( WhileStmt_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_WhileStmt_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part ACT_BLK on R608
            Block_c temp1 = Block_c.getOneACT_BLKOnR608(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
    // select part V_VAL on R626
            Value_c temp3 = Value_c.getOneV_VALOnR626(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_IfStmt_c( IfStmt_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_IfStmt_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part ACT_BLK on R607
            Block_c temp1 = Block_c.getOneACT_BLKOnR607(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
    // select part V_VAL on R625
            Value_c temp3 = Value_c.getOneV_VALOnR625(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_EL on R690
            ElseifStmt_c temp4 = ElseifStmt_c.getOneACT_ELOnR690(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_E on R692
            ElseStmt_c temp5 = ElseStmt_c.getOneACT_EOnR692(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ElseifStmt_c( ElseifStmt_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ElseifStmt_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part ACT_BLK on R658
            Block_c temp1 = Block_c.getOneACT_BLKOnR658(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
    // select part V_VAL on R659
            Value_c temp3 = Value_c.getOneV_VALOnR659(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_IF on R682
            IfStmt_c temp4 = IfStmt_c.getOneACT_IFOnR682(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ElseStmt_c( ElseStmt_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ElseStmt_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part ACT_BLK on R606
            Block_c temp1 = Block_c.getOneACT_BLKOnR606(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
    // select part ACT_IF on R683
            IfStmt_c temp3 = IfStmt_c.getOneACT_IFOnR683(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ForStmt_c( ForStmt_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ForStmt_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part ACT_BLK on R605
            Block_c temp1 = Block_c.getOneACT_BLKOnR605(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Statement_c Statement_c_inst = 
Statement_c.getOneACT_SMTOnR603(
inst)
;



	write_Statement_c_sql(Statement_c_inst);

}
    // select part V_VAR on R614
            Variable_c temp3 = Variable_c.getOneV_VAROnR614(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_OBJ on R670
            ModelClass_c temp4 = ModelClass_c.getOneO_OBJOnR670(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R652
            Variable_c temp5 = Variable_c.getOneV_VAROnR652(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Value_c( Value_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Value_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                ParameterValue_c ParameterValue_c801 = 
ParameterValue_c.getOneV_PVLOnR801(
inst)
;



      export_ParameterValue_c( ParameterValue_c801, pm, writeAsProxies, isPersistable );

                FunctionValue_c FunctionValue_c801 = 
FunctionValue_c.getOneV_FNVOnR801(
inst)
;



      export_FunctionValue_c( FunctionValue_c801, pm, writeAsProxies, isPersistable );

                SelectedReference_c SelectedReference_c801 = 
SelectedReference_c.getOneV_SLROnR801(
inst)
;



      export_SelectedReference_c( SelectedReference_c801, pm, writeAsProxies, isPersistable );

                BinaryOperation_c BinaryOperation_c801 = 
BinaryOperation_c.getOneV_BINOnR801(
inst)
;



      export_BinaryOperation_c( BinaryOperation_c801, pm, writeAsProxies, isPersistable );

                UnaryOperation_c UnaryOperation_c801 = 
UnaryOperation_c.getOneV_UNYOnR801(
inst)
;



      export_UnaryOperation_c( UnaryOperation_c801, pm, writeAsProxies, isPersistable );

                LiteralBoolean_c LiteralBoolean_c801 = 
LiteralBoolean_c.getOneV_LBOOnR801(
inst)
;



      export_LiteralBoolean_c( LiteralBoolean_c801, pm, writeAsProxies, isPersistable );

                LiteralString_c LiteralString_c801 = 
LiteralString_c.getOneV_LSTOnR801(
inst)
;



      export_LiteralString_c( LiteralString_c801, pm, writeAsProxies, isPersistable );

                LiteralReal_c LiteralReal_c801 = 
LiteralReal_c.getOneV_LRLOnR801(
inst)
;



      export_LiteralReal_c( LiteralReal_c801, pm, writeAsProxies, isPersistable );

                LiteralInteger_c LiteralInteger_c801 = 
LiteralInteger_c.getOneV_LINOnR801(
inst)
;



      export_LiteralInteger_c( LiteralInteger_c801, pm, writeAsProxies, isPersistable );

                TransientValueReference_c TransientValueReference_c801 = 
TransientValueReference_c.getOneV_TVLOnR801(
inst)
;



      export_TransientValueReference_c( TransientValueReference_c801, pm, writeAsProxies, isPersistable );

                AttributeValueReference_c AttributeValueReference_c801 = 
AttributeValueReference_c.getOneV_AVLOnR801(
inst)
;



      export_AttributeValueReference_c( AttributeValueReference_c801, pm, writeAsProxies, isPersistable );

                InstanceSetReference_c InstanceSetReference_c801 = 
InstanceSetReference_c.getOneV_ISROnR801(
inst)
;



      export_InstanceSetReference_c( InstanceSetReference_c801, pm, writeAsProxies, isPersistable );

                InstanceReference_c InstanceReference_c801 = 
InstanceReference_c.getOneV_IRFOnR801(
inst)
;



      export_InstanceReference_c( InstanceReference_c801, pm, writeAsProxies, isPersistable );

                EventDatumValue_c EventDatumValue_c801 = 
EventDatumValue_c.getOneV_EDVOnR801(
inst)
;



      export_EventDatumValue_c( EventDatumValue_c801, pm, writeAsProxies, isPersistable );

                OperationValue_c OperationValue_c801 = 
OperationValue_c.getOneV_TRVOnR801(
inst)
;



      export_OperationValue_c( OperationValue_c801, pm, writeAsProxies, isPersistable );

                BridgeValue_c BridgeValue_c801 = 
BridgeValue_c.getOneV_BRVOnR801(
inst)
;



      export_BridgeValue_c( BridgeValue_c801, pm, writeAsProxies, isPersistable );

                LiteralEnumerator_c LiteralEnumerator_c801 = 
LiteralEnumerator_c.getOneV_LENOnR801(
inst)
;



      export_LiteralEnumerator_c( LiteralEnumerator_c801, pm, writeAsProxies, isPersistable );

                MemberValueReference_c MemberValueReference_c801 = 
MemberValueReference_c.getOneV_MVLOnR801(
inst)
;



      export_MemberValueReference_c( MemberValueReference_c801, pm, writeAsProxies, isPersistable );

                ArrayElementReference_c ArrayElementReference_c801 = 
ArrayElementReference_c.getOneV_AEROnR801(
inst)
;



      export_ArrayElementReference_c( ArrayElementReference_c801, pm, writeAsProxies, isPersistable );

                ArrayLengthValue_c ArrayLengthValue_c801 = 
ArrayLengthValue_c.getOneV_ALVOnR801(
inst)
;



      export_ArrayLengthValue_c( ArrayLengthValue_c801, pm, writeAsProxies, isPersistable );

                MessageValue_c MessageValue_c801 = 
MessageValue_c.getOneV_MSVOnR801(
inst)
;



      export_MessageValue_c( MessageValue_c801, pm, writeAsProxies, isPersistable );

                SymbolicConstantValue_c SymbolicConstantValue_c801 = 
SymbolicConstantValue_c.getOneV_SCVOnR801(
inst)
;



      export_SymbolicConstantValue_c( SymbolicConstantValue_c801, pm, writeAsProxies, isPersistable );

                ActualParameter_c ActualParameter_c800 = 
ActualParameter_c.getOneV_PAROnR800(
inst)
;



      export_ActualParameter_c( ActualParameter_c800, pm, writeAsProxies, isPersistable );

    // select part S_DT on R820
            DataType_c temp1 = DataType_c.getOneS_DTOnR820(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_BLK on R826
            Block_c temp2 = Block_c.getOneACT_BLKOnR826(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ParameterValue_c( ParameterValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ParameterValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part S_BPARM on R831
            BridgeParameter_c temp2 = BridgeParameter_c.getOneS_BPARMOnR831(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part S_SPARM on R832
            FunctionParameter_c temp3 = FunctionParameter_c.getOneS_SPARMOnR832(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_TPARM on R833
            OperationParameter_c temp4 = OperationParameter_c.getOneO_TPARMOnR833(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_PP on R843
            PropertyParameter_c temp5 = PropertyParameter_c.getOneC_PPOnR843(inst,true);
	      if(forceProxyExport && temp5 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp5 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp5_pmc = temp5.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp5_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp5.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp5, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp5.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp5.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp5.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_FunctionValue_c( FunctionValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_FunctionValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part S_SYNC on R827
            Function_c temp2 = Function_c.getOneS_SYNCOnR827(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SelectedReference_c( SelectedReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SelectedReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part V_TRV on R825
            OperationValue_c temp2 = OperationValue_c.getOneV_TRVOnR825(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part O_ATTR on R812
            Attribute_c temp3 = Attribute_c.getOneO_ATTROnR812(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_BinaryOperation_c( BinaryOperation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_BinaryOperation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAL on R803
            Value_c temp1 = Value_c.getOneV_VALOnR803(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R802
            Value_c temp2 = Value_c.getOneV_VALOnR802(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
}
protected void export_UnaryOperation_c( UnaryOperation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_UnaryOperation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAL on R804
            Value_c temp1 = Value_c.getOneV_VALOnR804(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
}
protected void export_LiteralBoolean_c( LiteralBoolean_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LiteralBoolean_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
}
protected void export_LiteralString_c( LiteralString_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LiteralString_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
}
protected void export_LiteralReal_c( LiteralReal_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LiteralReal_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
}
protected void export_LiteralInteger_c( LiteralInteger_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LiteralInteger_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
}
protected void export_TransientValueReference_c( TransientValueReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_TransientValueReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part V_VAR on R805
            Variable_c temp2 = Variable_c.getOneV_VAROnR805(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_AttributeValueReference_c( AttributeValueReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_AttributeValueReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part O_ATTR on R806
            Attribute_c temp2 = Attribute_c.getOneO_ATTROnR806(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R807
            Value_c temp3 = Value_c.getOneV_VALOnR807(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InstanceSetReference_c( InstanceSetReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InstanceSetReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part V_VAR on R809
            Variable_c temp2 = Variable_c.getOneV_VAROnR809(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InstanceReference_c( InstanceReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InstanceReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part V_VAR on R808
            Variable_c temp2 = Variable_c.getOneV_VAROnR808(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_EventDatumValue_c( EventDatumValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_EventDatumValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                EventParameterReference_c [] EventParameterReference_c834 = 
EventParameterReference_c.getManyV_EPRsOnR834(
inst)
;



      for ( int EventParameterReference_c_index = 0;
            EventParameterReference_c_index < EventParameterReference_c834.length;
            ++EventParameterReference_c_index )
      {
        export_EventParameterReference_c(EventParameterReference_c834[EventParameterReference_c_index], pm, writeAsProxies, isPersistable );
      }

// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
}
protected void export_EventParameterReference_c( EventParameterReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_EventParameterReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_EDV on R834
            EventDatumValue_c temp1 = EventDatumValue_c.getOneV_EDVOnR834(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SM_EVTDI on R846
            StateMachineEventDataItem_c temp2 = StateMachineEventDataItem_c.getOneSM_EVTDIOnR846(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part C_PP on R847
            PropertyParameter_c temp3 = PropertyParameter_c.getOneC_PPOnR847(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_OperationValue_c( OperationValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_OperationValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part O_TFR on R829
            Operation_c temp2 = Operation_c.getOneO_TFROnR829(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAR on R830
            Variable_c temp3 = Variable_c.getOneV_VAROnR830(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_BridgeValue_c( BridgeValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_BridgeValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part S_BRG on R828
            Bridge_c temp2 = Bridge_c.getOneS_BRGOnR828(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_LiteralEnumerator_c( LiteralEnumerator_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_LiteralEnumerator_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part S_ENUM on R824
            Enumerator_c temp2 = Enumerator_c.getOneS_ENUMOnR824(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_MemberValueReference_c( MemberValueReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_MemberValueReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part S_MBR on R836
            StructureMember_c temp2 = StructureMember_c.getOneS_MBROnR836(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R837
            Value_c temp3 = Value_c.getOneV_VALOnR837(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ArrayElementReference_c( ArrayElementReference_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ArrayElementReference_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part V_VAL on R838
            Value_c temp2 = Value_c.getOneV_VALOnR838(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R839
            Value_c temp3 = Value_c.getOneV_VALOnR839(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_ArrayLengthValue_c( ArrayLengthValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_ArrayLengthValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part V_VAL on R840
            Value_c temp2 = Value_c.getOneV_VALOnR840(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_MessageValue_c( MessageValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_MessageValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part SPR_PEP on R841
            ProvidedExecutableProperty_c temp2 = ProvidedExecutableProperty_c.getOneSPR_PEPOnR841(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part SPR_REP on R845
            RequiredExecutableProperty_c temp3 = RequiredExecutableProperty_c.getOneSPR_REPOnR845(inst,true);
	      if(forceProxyExport && temp3 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp3 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp3_pmc = temp3.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp3_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp3.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp3, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp3.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp3.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp3.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part V_VAL on R851
            Value_c temp4 = Value_c.getOneV_VALOnR851(inst,true);
	      if(forceProxyExport && temp4 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp4 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp4_pmc = temp4.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp4_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp4.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp4, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp4.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp4.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp4.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_SymbolicConstantValue_c( SymbolicConstantValue_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_SymbolicConstantValue_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Value_c Value_c_inst = 
Value_c.getOneV_VALOnR801(
inst)
;



	write_Value_c_sql(Value_c_inst);

}
    // select part CNST_SYC on R850
            SymbolicConstant_c temp2 = SymbolicConstant_c.getOneCNST_SYCOnR850(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_Variable_c( Variable_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_Variable_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                InstanceHandle_c InstanceHandle_c814 = 
InstanceHandle_c.getOneV_INTOnR814(
inst)
;



      export_InstanceHandle_c( InstanceHandle_c814, pm, writeAsProxies, isPersistable );

                InstanceSet_c InstanceSet_c814 = 
InstanceSet_c.getOneV_INSOnR814(
inst)
;



      export_InstanceSet_c( InstanceSet_c814, pm, writeAsProxies, isPersistable );

                TransientVar_c TransientVar_c814 = 
TransientVar_c.getOneV_TRNOnR814(
inst)
;



      export_TransientVar_c( TransientVar_c814, pm, writeAsProxies, isPersistable );

                VariableLocation_c [] VariableLocation_c835 = 
VariableLocation_c.getManyV_LOCsOnR835(
inst)
;



      for ( int VariableLocation_c_index = 0;
            VariableLocation_c_index < VariableLocation_c835.length;
            ++VariableLocation_c_index )
      {
        export_VariableLocation_c(VariableLocation_c835[VariableLocation_c_index], pm, writeAsProxies, isPersistable );
      }

                Dimensions_c [] Dimensions_c849 = 
Dimensions_c.getManyS_DIMsOnR849(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c849.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c849[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R848
            DataType_c temp1 = DataType_c.getOneS_DTOnR848(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
    // select part ACT_BLK on R823
            Block_c temp2 = Block_c.getOneACT_BLKOnR823(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InstanceHandle_c( InstanceHandle_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InstanceHandle_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Variable_c Variable_c_inst = 
Variable_c.getOneV_VAROnR814(
inst)
;



	write_Variable_c_sql(Variable_c_inst);

}
    // select part O_OBJ on R818
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR818(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_InstanceSet_c( InstanceSet_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_InstanceSet_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Variable_c Variable_c_inst = 
Variable_c.getOneV_VAROnR814(
inst)
;



	write_Variable_c_sql(Variable_c_inst);

}
    // select part O_OBJ on R819
            ModelClass_c temp2 = ModelClass_c.getOneO_OBJOnR819(inst,true);
	      if(forceProxyExport && temp2 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp2 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp2_pmc = temp2.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp2_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp2.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp2, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp2.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp2.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp2.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}
protected void export_TransientVar_c( TransientVar_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_TransientVar_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
                Dimensions_c [] Dimensions_c844 = 
Dimensions_c.getManyS_DIMsOnR844(
inst)
;



      for ( int Dimensions_c_index = 0;
            Dimensions_c_index < Dimensions_c844.length;
            ++Dimensions_c_index )
      {
        export_Dimensions_c(Dimensions_c844[Dimensions_c_index], pm, writeAsProxies, isPersistable );
      }

    // select part S_DT on R821
            DataType_c temp1 = DataType_c.getOneS_DTOnR821(inst,true);
	  	  boolean isGlobal = false;
		  GlobalElementInSystem_c geis =
				     GlobalElementInSystem_c.getOneG_EISOnR9100(
							      PackageableElement_c.getOnePE_PEOnR8001(temp1));
		  if (geis != null) {
		  	isGlobal = true;
		  }
		  if(!isGlobal && temp1 != null && forceProxyExport) {
		        ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
		  }
		  // Global elements are not persisted, so do not throw an exception in this case
		  if(!isGlobal && temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
// only export the supertypes if this element was selected for export
// without its parents
if(m_inst == inst && exportSupertypes) {
    Variable_c Variable_c_inst = 
Variable_c.getOneV_VAROnR814(
inst)
;



	write_Variable_c_sql(Variable_c_inst);

}
}
protected void export_VariableLocation_c( VariableLocation_c inst, IProgressMonitor pm, boolean writeAsProxies, boolean isPersistable )
throws IOException
{
  if ( inst == null )
  {
    return;
  }  
  
  
  
  if (!exportOAL()) {
    return;
  }
    if(!writeAsProxies && !forceWriteAsProxy)
      write_VariableLocation_c_sql(inst);
    else {
      ProxyPath proxyPath = new ProxyPath(inst, m_inst);
      collectedProxies.add(proxyPath);
    }
    // select part V_VAR on R835
            Variable_c temp1 = Variable_c.getOneV_VAROnR835(inst,true);
	      if(forceProxyExport && temp1 != null) {
		       	ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
          }	      
		  if(temp1 != null && !forceProxyExport) {
                PersistableModelComponent inst_pmc = m_inst.getPersistableComponent();
                PersistableModelComponent temp1_pmc = temp1.getPersistableComponent();
                if (( inst_pmc != null ) && ( temp1_pmc != null ))
                {
                    if(!m_inst.getPersistableComponent().getFullPath().isPrefixOf(
                                  temp1.getPersistableComponent().getFullPath()))
                  {
                ProxyPath proxyPath = new ProxyPath(temp1, m_inst);
                collectedProxies.add(proxyPath);
              }
                } else {
                  if (isPersistable && !forceProxyExport && !ignoreMissingPMCErrors) {
                      if ( temp1.getPersistableComponent() == null ) {
                            Throwable e = new Throwable("Unable to locate PMC: " + temp1.getContent());
                            e.fillInStackTrace();
                            CorePlugin.logError("Unable to locate PMC: " + temp1.getContent(), e);
                      }					  
                      if ( m_inst.getPersistableComponent() == null ) {
                          Throwable e = new Throwable("Unable to locate PMC: " + m_inst.getContent());
                          e.fillInStackTrace();
                          CorePlugin.logError("Unable to locate PMC: " + m_inst.getContent(), e);
                      }
                  }
                }
                }
}

void write_AutomaticWiring_c_sql(AutomaticWiring_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_AW\n\tVALUES (" ); //$NON-NLS-1$
  write_AutomaticWiring_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AutomaticWiring_c_proxy_sql(AutomaticWiring_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_AW_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AutomaticWiring_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AutomaticWiring_c_attr_sql(AutomaticWiring_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBrg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBrg_idCachedValue():inst.getBrg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_VariableLocation_c_sql(VariableLocation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_LOC\n\tVALUES (" ); //$NON-NLS-1$
  write_VariableLocation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_VariableLocation_c_proxy_sql(VariableLocation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_LOC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_VariableLocation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_VariableLocation_c_attr_sql(VariableLocation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getLinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getStartposition());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEndposition());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Variable_c_sql(Variable_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_VAR\n\tVALUES (" ); //$NON-NLS-1$
  write_Variable_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Variable_c_proxy_sql(Variable_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_VAR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Variable_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Variable_c_attr_sql(Variable_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getDeclared()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Value_c_sql(Value_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_VAL\n\tVALUES (" ); //$NON-NLS-1$
  write_Value_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Value_c_proxy_sql(Value_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_VAL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Value_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Value_c_attr_sql(Value_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIslvalue()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsimplicit()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getLinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getStartposition());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEndposition());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getFirstparameterlabellinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getFirstparameterlabelcolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentlaterparameterlabellinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentlaterparameterlabelcolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_UnaryOperation_c_sql(UnaryOperation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_UNY\n\tVALUES (" ); //$NON-NLS-1$
  write_UnaryOperation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_UnaryOperation_c_proxy_sql(UnaryOperation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_UNY_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_UnaryOperation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_UnaryOperation_c_attr_sql(UnaryOperation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOperand_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOperand_value_idCachedValue():inst.getOperand_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getOperator().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_TransientVar_c_sql(TransientVar_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_TRN\n\tVALUES (" ); //$NON-NLS-1$
  write_TransientVar_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_TransientVar_c_proxy_sql(TransientVar_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_TRN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_TransientVar_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_TransientVar_c_attr_sql(TransientVar_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_TransientValueReference_c_sql(TransientValueReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_TVL\n\tVALUES (" ); //$NON-NLS-1$
  write_TransientValueReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_TransientValueReference_c_proxy_sql(TransientValueReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_TVL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_TransientValueReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_TransientValueReference_c_attr_sql(TransientValueReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SymbolicConstantValue_c_sql(SymbolicConstantValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_SCV\n\tVALUES (" ); //$NON-NLS-1$
  write_SymbolicConstantValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SymbolicConstantValue_c_proxy_sql(SymbolicConstantValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_SCV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SymbolicConstantValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SymbolicConstantValue_c_attr_sql(SymbolicConstantValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConst_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConst_idCachedValue():inst.getConst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SelectedReference_c_sql(SelectedReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_SLR\n\tVALUES (" ); //$NON-NLS-1$
  write_SelectedReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SelectedReference_c_proxy_sql(SelectedReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_SLR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SelectedReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SelectedReference_c_attr_sql(SelectedReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOp_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOp_value_idCachedValue():inst.getOp_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ParameterValue_c_sql(ParameterValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_PVL\n\tVALUES (" ); //$NON-NLS-1$
  write_ParameterValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ParameterValue_c_proxy_sql(ParameterValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_PVL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ParameterValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ParameterValue_c_attr_sql(ParameterValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBparm_idCachedValue():inst.getBparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSparm_idCachedValue():inst.getSparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTparm_idCachedValue():inst.getTparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPp_idCachedValue():inst.getPp_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_OperationValue_c_sql(OperationValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_TRV\n\tVALUES (" ); //$NON-NLS-1$
  write_OperationValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_OperationValue_c_proxy_sql(OperationValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_TRV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_OperationValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_OperationValue_c_attr_sql(OperationValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTfr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTfr_idCachedValue():inst.getTfr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getParmlistok()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterscolumn());
}
void write_MessageValue_c_sql(MessageValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_MSV\n\tVALUES (" ); //$NON-NLS-1$
  write_MessageValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MessageValue_c_proxy_sql(MessageValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_MSV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MessageValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MessageValue_c_attr_sql(MessageValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPep_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPep_idCachedValue():inst.getPep_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRep_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRep_idCachedValue():inst.getRep_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getParmlistok()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOwnernamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOwnernamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTarget_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTarget_value_idCachedValue():inst.getTarget_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_MemberValueReference_c_sql(MemberValueReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_MVL\n\tVALUES (" ); //$NON-NLS-1$
  write_MemberValueReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MemberValueReference_c_proxy_sql(MemberValueReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_MVL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MemberValueReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MemberValueReference_c_attr_sql(MemberValueReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRoot_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRoot_value_idCachedValue():inst.getRoot_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMember_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMember_idCachedValue():inst.getMember_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_dt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_dt_idCachedValue():inst.getDt_dt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_LiteralString_c_sql(LiteralString_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_LST\n\tVALUES (" ); //$NON-NLS-1$
  write_LiteralString_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LiteralString_c_proxy_sql(LiteralString_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_LST_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LiteralString_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LiteralString_c_attr_sql(LiteralString_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_LiteralReal_c_sql(LiteralReal_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_LRL\n\tVALUES (" ); //$NON-NLS-1$
  write_LiteralReal_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LiteralReal_c_proxy_sql(LiteralReal_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_LRL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LiteralReal_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LiteralReal_c_attr_sql(LiteralReal_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_LiteralInteger_c_sql(LiteralInteger_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_LIN\n\tVALUES (" ); //$NON-NLS-1$
  write_LiteralInteger_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LiteralInteger_c_proxy_sql(LiteralInteger_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_LIN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LiteralInteger_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LiteralInteger_c_attr_sql(LiteralInteger_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_LiteralEnumerator_c_sql(LiteralEnumerator_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_LEN\n\tVALUES (" ); //$NON-NLS-1$
  write_LiteralEnumerator_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LiteralEnumerator_c_proxy_sql(LiteralEnumerator_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_LEN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LiteralEnumerator_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LiteralEnumerator_c_attr_sql(LiteralEnumerator_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEnum_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEnum_idCachedValue():inst.getEnum_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getDatatypenamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getDatatypenamecolumn());
}
void write_LiteralBoolean_c_sql(LiteralBoolean_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_LBO\n\tVALUES (" ); //$NON-NLS-1$
  write_LiteralBoolean_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LiteralBoolean_c_proxy_sql(LiteralBoolean_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_LBO_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LiteralBoolean_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LiteralBoolean_c_attr_sql(LiteralBoolean_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_InstanceSetReference_c_sql(InstanceSetReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_ISR\n\tVALUES (" ); //$NON-NLS-1$
  write_InstanceSetReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InstanceSetReference_c_proxy_sql(InstanceSetReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_ISR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InstanceSetReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InstanceSetReference_c_attr_sql(InstanceSetReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InstanceSet_c_sql(InstanceSet_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_INS\n\tVALUES (" ); //$NON-NLS-1$
  write_InstanceSet_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InstanceSet_c_proxy_sql(InstanceSet_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_INS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InstanceSet_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InstanceSet_c_attr_sql(InstanceSet_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InstanceReference_c_sql(InstanceReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_IRF\n\tVALUES (" ); //$NON-NLS-1$
  write_InstanceReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InstanceReference_c_proxy_sql(InstanceReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_IRF_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InstanceReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InstanceReference_c_attr_sql(InstanceReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InstanceHandle_c_sql(InstanceHandle_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_INT\n\tVALUES (" ); //$NON-NLS-1$
  write_InstanceHandle_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InstanceHandle_c_proxy_sql(InstanceHandle_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_INT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InstanceHandle_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InstanceHandle_c_attr_sql(InstanceHandle_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsimplicitinfor()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionValue_c_sql(FunctionValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_FNV\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionValue_c_proxy_sql(FunctionValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_FNV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionValue_c_attr_sql(FunctionValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getParmlistok()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_EventParameterReference_c_sql(EventParameterReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_EPR\n\tVALUES (" ); //$NON-NLS-1$
  write_EventParameterReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EventParameterReference_c_proxy_sql(EventParameterReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_EPR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EventParameterReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EventParameterReference_c_attr_sql(EventParameterReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmedi_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmedi_idCachedValue():inst.getSmedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPp_idCachedValue():inst.getPp_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EventDatumValue_c_sql(EventDatumValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_EDV\n\tVALUES (" ); //$NON-NLS-1$
  write_EventDatumValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EventDatumValue_c_proxy_sql(EventDatumValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_EDV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EventDatumValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EventDatumValue_c_attr_sql(EventDatumValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_BridgeValue_c_sql(BridgeValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_BRV\n\tVALUES (" ); //$NON-NLS-1$
  write_BridgeValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BridgeValue_c_proxy_sql(BridgeValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_BRV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BridgeValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BridgeValue_c_attr_sql(BridgeValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBrg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBrg_idCachedValue():inst.getBrg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getParmlistok()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExternalentitykeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExternalentitykeyletterscolumn());
}
void write_BinaryOperation_c_sql(BinaryOperation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_BIN\n\tVALUES (" ); //$NON-NLS-1$
  write_BinaryOperation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BinaryOperation_c_proxy_sql(BinaryOperation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_BIN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BinaryOperation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BinaryOperation_c_attr_sql(BinaryOperation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRight_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRight_value_idCachedValue():inst.getRight_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getLeft_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getLeft_value_idCachedValue():inst.getLeft_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getOperator().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_AttributeValueReference_c_sql(AttributeValueReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_AVL\n\tVALUES (" ); //$NON-NLS-1$
  write_AttributeValueReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AttributeValueReference_c_proxy_sql(AttributeValueReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_AVL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AttributeValueReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AttributeValueReference_c_attr_sql(AttributeValueReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRoot_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRoot_value_idCachedValue():inst.getRoot_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ArrayLengthValue_c_sql(ArrayLengthValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_ALV\n\tVALUES (" ); //$NON-NLS-1$
  write_ArrayLengthValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ArrayLengthValue_c_proxy_sql(ArrayLengthValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_ALV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ArrayLengthValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ArrayLengthValue_c_attr_sql(ArrayLengthValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getArray_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getArray_value_idCachedValue():inst.getArray_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ArrayElementReference_c_sql(ArrayElementReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_AER\n\tVALUES (" ); //$NON-NLS-1$
  write_ArrayElementReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ArrayElementReference_c_proxy_sql(ArrayElementReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_AER_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ArrayElementReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ArrayElementReference_c_attr_sql(ArrayElementReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRoot_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRoot_value_idCachedValue():inst.getRoot_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIndex_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIndex_value_idCachedValue():inst.getIndex_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ActualParameter_c_sql(ActualParameter_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO V_PAR\n\tVALUES (" ); //$NON-NLS-1$
  write_ActualParameter_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActualParameter_c_proxy_sql(ActualParameter_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO V_PAR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActualParameter_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActualParameter_c_attr_sql(ActualParameter_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getInvocation_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getInvocation_value_idCachedValue():inst.getInvocation_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getNext_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getNext_value_idCachedValue():inst.getNext_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getLabellinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getLabelcolumn());
}
void write_UseCaseInUseCase_c_sql(UseCaseInUseCase_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_UIU\n\tVALUES (" ); //$NON-NLS-1$
  write_UseCaseInUseCase_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_UseCaseInUseCase_c_proxy_sql(UseCaseInUseCase_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_UIU_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_UseCaseInUseCase_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_UseCaseInUseCase_c_attr_sql(UseCaseInUseCase_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_UseCaseDiagram_c_sql(UseCaseDiagram_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_UCC\n\tVALUES (" ); //$NON-NLS-1$
  write_UseCaseDiagram_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_UseCaseDiagram_c_proxy_sql(UseCaseDiagram_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_UCC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_UseCaseDiagram_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_UseCaseDiagram_c_attr_sql(UseCaseDiagram_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_package_idCachedValue():inst.getParent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_package_idCachedValue():inst.getComponent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_UseCaseAssociation_c_sql(UseCaseAssociation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_UCA\n\tVALUES (" ); //$NON-NLS-1$
  write_UseCaseAssociation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_UseCaseAssociation_c_proxy_sql(UseCaseAssociation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_UCA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_UseCaseAssociation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_UseCaseAssociation_c_attr_sql(UseCaseAssociation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssoc_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssoc_idCachedValue():inst.getAssoc_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSource_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSource_part_idCachedValue():inst.getSource_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDestination_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDestination_part_idCachedValue():inst.getDestination_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ParticipantInUseCase_c_sql(ParticipantInUseCase_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_PIUC\n\tVALUES (" ); //$NON-NLS-1$
  write_ParticipantInUseCase_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ParticipantInUseCase_c_proxy_sql(ParticipantInUseCase_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_PIUC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ParticipantInUseCase_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ParticipantInUseCase_c_attr_sql(ParticipantInUseCase_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Include_c_sql(Include_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_I\n\tVALUES (" ); //$NON-NLS-1$
  write_Include_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Include_c_proxy_sql(Include_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_I_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Include_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Include_c_attr_sql(Include_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssoc_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssoc_idCachedValue():inst.getAssoc_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Generalization_c_sql(Generalization_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_G\n\tVALUES (" ); //$NON-NLS-1$
  write_Generalization_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Generalization_c_proxy_sql(Generalization_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_G_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Generalization_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Generalization_c_attr_sql(Generalization_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssoc_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssoc_idCachedValue():inst.getAssoc_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Extend_c_sql(Extend_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_E\n\tVALUES (" ); //$NON-NLS-1$
  write_Extend_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Extend_c_proxy_sql(Extend_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_E_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Extend_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Extend_c_attr_sql(Extend_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssoc_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssoc_idCachedValue():inst.getAssoc_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_BinaryAssociation_c_sql(BinaryAssociation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_BA\n\tVALUES (" ); //$NON-NLS-1$
  write_BinaryAssociation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BinaryAssociation_c_proxy_sql(BinaryAssociation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_BA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BinaryAssociation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BinaryAssociation_c_attr_sql(BinaryAssociation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssoc_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssoc_idCachedValue():inst.getAssoc_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_AssociationInUseCase_c_sql(AssociationInUseCase_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO UC_AIUC\n\tVALUES (" ); //$NON-NLS-1$
  write_AssociationInUseCase_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AssociationInUseCase_c_proxy_sql(AssociationInUseCase_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO UC_AIUC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AssociationInUseCase_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AssociationInUseCase_c_attr_sql(AssociationInUseCase_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssoc_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssoc_idCachedValue():inst.getAssoc_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SystemDatatypePackage_c_sql(SystemDatatypePackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SLD_SDP\n\tVALUES (" ); //$NON-NLS-1$
  write_SystemDatatypePackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SystemDatatypePackage_c_proxy_sql(SystemDatatypePackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SLD_SDP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SystemDatatypePackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SystemDatatypePackage_c_attr_sql(SystemDatatypePackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SystemDatatypeInPackage_c_sql(SystemDatatypeInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SLD_SDINP\n\tVALUES (" ); //$NON-NLS-1$
  write_SystemDatatypeInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SystemDatatypeInPackage_c_proxy_sql(SystemDatatypeInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SLD_SDINP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SystemDatatypeInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SystemDatatypeInPackage_c_attr_sql(SystemDatatypeInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SystemConstantInPackage_c_sql(SystemConstantInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SLD_SCINP\n\tVALUES (" ); //$NON-NLS-1$
  write_SystemConstantInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SystemConstantInPackage_c_proxy_sql(SystemConstantInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SLD_SCINP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SystemConstantInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SystemConstantInPackage_c_attr_sql(SystemConstantInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConstant_spec_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConstant_spec_idCachedValue():inst.getConstant_spec_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ReferredToIdentifierAttribute_c_sql(ReferredToIdentifierAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_RTIDA\n\tVALUES (" ); //$NON-NLS-1$
  write_ReferredToIdentifierAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ReferredToIdentifierAttribute_c_proxy_sql(ReferredToIdentifierAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_RTIDA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ReferredToIdentifierAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ReferredToIdentifierAttribute_c_attr_sql(ReferredToIdentifierAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getOid_idCachedValue():inst.getOid_id());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ReferentialAttribute_c_sql(ReferentialAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_RATTR\n\tVALUES (" ); //$NON-NLS-1$
  write_ReferentialAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ReferentialAttribute_c_proxy_sql(ReferentialAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_RATTR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ReferentialAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ReferentialAttribute_c_attr_sql(ReferentialAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBattr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBattr_idCachedValue():inst.getBattr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBobj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBobj_idCachedValue():inst.getBobj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getRef_mode());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getBaseattrname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_OperationParameter_c_sql(OperationParameter_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_TPARM\n\tVALUES (" ); //$NON-NLS-1$
  write_OperationParameter_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_OperationParameter_c_proxy_sql(OperationParameter_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_TPARM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_OperationParameter_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_OperationParameter_c_attr_sql(OperationParameter_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getTparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTfr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTfr_idCachedValue():inst.getTfr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBy_ref());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_tparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_tparm_idCachedValue():inst.getPrevious_tparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Operation_c_sql(Operation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_TFR\n\tVALUES (" ); //$NON-NLS-1$
  write_Operation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Operation_c_proxy_sql(Operation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_TFR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Operation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Operation_c_attr_sql(Operation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getTfr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getInstance_based());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getReturn_dimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_tfr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_tfr_idCachedValue():inst.getPrevious_tfr_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_NewBaseAttribute_c_sql(NewBaseAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_NBATTR\n\tVALUES (" ); //$NON-NLS-1$
  write_NewBaseAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_NewBaseAttribute_c_proxy_sql(NewBaseAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_NBATTR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_NewBaseAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_NewBaseAttribute_c_attr_sql(NewBaseAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ModelClass_c_sql(ModelClass_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_OBJ\n\tVALUES (" ); //$NON-NLS-1$
  write_ModelClass_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ModelClass_c_proxy_sql(ModelClass_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_OBJ_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ModelClass_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ModelClass_c_attr_sql(ModelClass_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNumb());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getKey_lett().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ImportedClass_c_sql(ImportedClass_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_IOBJ\n\tVALUES (" ); //$NON-NLS-1$
  write_ImportedClass_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ImportedClass_c_proxy_sql(ImportedClass_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_IOBJ_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ImportedClass_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ImportedClass_c_attr_sql(ImportedClass_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIobj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIobj_idCachedValue():inst.getIobj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModl_typ());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getObj_name().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getObj_kl().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_DerivedBaseAttribute_c_sql(DerivedBaseAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_DBATTR\n\tVALUES (" ); //$NON-NLS-1$
  write_DerivedBaseAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DerivedBaseAttribute_c_proxy_sql(DerivedBaseAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_DBATTR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DerivedBaseAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DerivedBaseAttribute_c_attr_sql(DerivedBaseAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
}
void write_ClassIdentifierAttribute_c_sql(ClassIdentifierAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_OIDA\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassIdentifierAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassIdentifierAttribute_c_proxy_sql(ClassIdentifierAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_OIDA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassIdentifierAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassIdentifierAttribute_c_attr_sql(ClassIdentifierAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getOid_idCachedValue():inst.getOid_id());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLocalattributename().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ClassIdentifier_c_sql(ClassIdentifier_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_ID\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassIdentifier_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassIdentifier_c_proxy_sql(ClassIdentifier_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_ID_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassIdentifier_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassIdentifier_c_attr_sql(ClassIdentifier_c inst)
throws IOException
{
  m_fh.print(inst.getOid_id());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_BaseAttribute_c_sql(BaseAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_BATTR\n\tVALUES (" ); //$NON-NLS-1$
  write_BaseAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BaseAttribute_c_proxy_sql(BaseAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_BATTR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BaseAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BaseAttribute_c_attr_sql(BaseAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_AttributeReferenceInClass_c_sql(AttributeReferenceInClass_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_REF\n\tVALUES (" ); //$NON-NLS-1$
  write_AttributeReferenceInClass_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AttributeReferenceInClass_c_proxy_sql(AttributeReferenceInClass_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_REF_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AttributeReferenceInClass_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AttributeReferenceInClass_c_attr_sql(AttributeReferenceInClass_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRobj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRobj_idCachedValue():inst.getRobj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getRoid_idCachedValue():inst.getRoid_id());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRattr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRattr_idCachedValue():inst.getRattr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRoir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRoir_idCachedValue():inst.getRoir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getAref_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParef_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParef_idCachedValue():inst.getParef_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIs_cstrd()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRobj_name().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRattr_name().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRel_name().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Attribute_c_sql(Attribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO O_ATTR\n\tVALUES (" ); //$NON-NLS-1$
  write_Attribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Attribute_c_proxy_sql(Attribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO O_ATTR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Attribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Attribute_c_attr_sql(Attribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPattr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPattr_idCachedValue():inst.getPattr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getPrefix().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRoot_nam().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getPfx_mode());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDefaultvalue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_TransitionActionHome_c_sql(TransitionActionHome_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_TAH\n\tVALUES (" ); //$NON-NLS-1$
  write_TransitionActionHome_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_TransitionActionHome_c_proxy_sql(TransitionActionHome_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_TAH_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_TransitionActionHome_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_TransitionActionHome_c_attr_sql(TransitionActionHome_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAct_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAct_idCachedValue():inst.getAct_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTrans_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTrans_idCachedValue():inst.getTrans_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Transition_c_sql(Transition_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_TXN\n\tVALUES (" ); //$NON-NLS-1$
  write_Transition_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Transition_c_proxy_sql(Transition_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_TXN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Transition_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Transition_c_attr_sql(Transition_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getTrans_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmstt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmstt_idCachedValue():inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SupplementalDataItems_c_sql(SupplementalDataItems_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_SDI\n\tVALUES (" ); //$NON-NLS-1$
  write_SupplementalDataItems_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SupplementalDataItems_c_proxy_sql(SupplementalDataItems_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_SDI_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SupplementalDataItems_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SupplementalDataItems_c_attr_sql(SupplementalDataItems_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmedi_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmedi_idCachedValue():inst.getSmedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_StateMachineState_c_sql(StateMachineState_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_STATE\n\tVALUES (" ); //$NON-NLS-1$
  write_StateMachineState_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_StateMachineState_c_proxy_sql(StateMachineState_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_STATE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_StateMachineState_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_StateMachineState_c_attr_sql(StateMachineState_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNumb());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getFinal());
}
void write_StateMachineEventDataItem_c_sql(StateMachineEventDataItem_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_EVTDI\n\tVALUES (" ); //$NON-NLS-1$
  write_StateMachineEventDataItem_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_StateMachineEventDataItem_c_proxy_sql(StateMachineEventDataItem_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_EVTDI_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_StateMachineEventDataItem_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_StateMachineEventDataItem_c_attr_sql(StateMachineEventDataItem_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSmedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_smedi_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_smedi_idCachedValue():inst.getPrevious_smedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_StateMachineEvent_c_sql(StateMachineEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_EVT\n\tVALUES (" ); //$NON-NLS-1$
  write_StateMachineEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_StateMachineEvent_c_proxy_sql(StateMachineEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_EVT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_StateMachineEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_StateMachineEvent_c_attr_sql(StateMachineEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNumb());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getMning().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getIs_lbl_u());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getUnq_lbl().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDrv_lbl().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_StateMachine_c_sql(StateMachine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_SM\n\tVALUES (" ); //$NON-NLS-1$
  write_StateMachine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_StateMachine_c_proxy_sql(StateMachine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_SM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_StateMachine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_StateMachine_c_attr_sql(StateMachine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getConfig_id());
}
void write_StateEventMatrixEntry_c_sql(StateEventMatrixEntry_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_SEME\n\tVALUES (" ); //$NON-NLS-1$
  write_StateEventMatrixEntry_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_StateEventMatrixEntry_c_proxy_sql(StateEventMatrixEntry_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_SEME_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_StateEventMatrixEntry_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_StateEventMatrixEntry_c_attr_sql(StateEventMatrixEntry_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmstt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmstt_idCachedValue():inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SignalEvent_c_sql(SignalEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_SGEVT\n\tVALUES (" ); //$NON-NLS-1$
  write_SignalEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SignalEvent_c_proxy_sql(SignalEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_SGEVT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SignalEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SignalEvent_c_attr_sql(SignalEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getProvided_signal_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getProvided_signal_idCachedValue():inst.getProvided_signal_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRequired_signal_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRequired_signal_idCachedValue():inst.getRequired_signal_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSignal_name().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_SemEvent_c_sql(SemEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_SEVT\n\tVALUES (" ); //$NON-NLS-1$
  write_SemEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SemEvent_c_proxy_sql(SemEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_SEVT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SemEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SemEvent_c_attr_sql(SemEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_PolymorphicEvent_c_sql(PolymorphicEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_PEVT\n\tVALUES (" ); //$NON-NLS-1$
  write_PolymorphicEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_PolymorphicEvent_c_proxy_sql(PolymorphicEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_PEVT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_PolymorphicEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_PolymorphicEvent_c_attr_sql(PolymorphicEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLocalclassname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLocalclasskl().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLocaleventmning().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_NonLocalEvent_c_sql(NonLocalEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_NLEVT\n\tVALUES (" ); //$NON-NLS-1$
  write_NonLocalEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_NonLocalEvent_c_proxy_sql(NonLocalEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_NLEVT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_NonLocalEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_NonLocalEvent_c_attr_sql(NonLocalEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPolysmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPolysmevt_idCachedValue():inst.getPolysmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPolysm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPolysm_idCachedValue():inst.getPolysm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getPolysmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLocal_meaning().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_NoEventTransition_c_sql(NoEventTransition_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_NETXN\n\tVALUES (" ); //$NON-NLS-1$
  write_NoEventTransition_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_NoEventTransition_c_proxy_sql(NoEventTransition_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_NETXN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_NoEventTransition_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_NoEventTransition_c_attr_sql(NoEventTransition_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTrans_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTrans_idCachedValue():inst.getTrans_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmstt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmstt_idCachedValue():inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_NewStateTransition_c_sql(NewStateTransition_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_NSTXN\n\tVALUES (" ); //$NON-NLS-1$
  write_NewStateTransition_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_NewStateTransition_c_proxy_sql(NewStateTransition_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_NSTXN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_NewStateTransition_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_NewStateTransition_c_attr_sql(NewStateTransition_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTrans_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTrans_idCachedValue():inst.getTrans_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmstt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmstt_idCachedValue():inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_MooreStateMachine_c_sql(MooreStateMachine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_MOORE\n\tVALUES (" ); //$NON-NLS-1$
  write_MooreStateMachine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MooreStateMachine_c_proxy_sql(MooreStateMachine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_MOORE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MooreStateMachine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MooreStateMachine_c_attr_sql(MooreStateMachine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_MooreActionHome_c_sql(MooreActionHome_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_MOAH\n\tVALUES (" ); //$NON-NLS-1$
  write_MooreActionHome_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MooreActionHome_c_proxy_sql(MooreActionHome_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_MOAH_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MooreActionHome_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MooreActionHome_c_attr_sql(MooreActionHome_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAct_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAct_idCachedValue():inst.getAct_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmstt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmstt_idCachedValue():inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_MealyStateMachine_c_sql(MealyStateMachine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_MEALY\n\tVALUES (" ); //$NON-NLS-1$
  write_MealyStateMachine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MealyStateMachine_c_proxy_sql(MealyStateMachine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_MEALY_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MealyStateMachine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MealyStateMachine_c_attr_sql(MealyStateMachine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_MealyActionHome_c_sql(MealyActionHome_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_MEAH\n\tVALUES (" ); //$NON-NLS-1$
  write_MealyActionHome_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MealyActionHome_c_proxy_sql(MealyActionHome_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_MEAH_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MealyActionHome_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MealyActionHome_c_attr_sql(MealyActionHome_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAct_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAct_idCachedValue():inst.getAct_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTrans_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTrans_idCachedValue():inst.getTrans_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_LocalEvent_c_sql(LocalEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_LEVT\n\tVALUES (" ); //$NON-NLS-1$
  write_LocalEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LocalEvent_c_proxy_sql(LocalEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_LEVT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LocalEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LocalEvent_c_attr_sql(LocalEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InstanceStateMachine_c_sql(InstanceStateMachine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_ISM\n\tVALUES (" ); //$NON-NLS-1$
  write_InstanceStateMachine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InstanceStateMachine_c_proxy_sql(InstanceStateMachine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_ISM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InstanceStateMachine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InstanceStateMachine_c_attr_sql(InstanceStateMachine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EventSupplementalData_c_sql(EventSupplementalData_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_SUPDT\n\tVALUES (" ); //$NON-NLS-1$
  write_EventSupplementalData_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EventSupplementalData_c_proxy_sql(EventSupplementalData_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_SUPDT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EventSupplementalData_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EventSupplementalData_c_attr_sql(EventSupplementalData_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getNon_local()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_EventIgnored_c_sql(EventIgnored_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_EIGN\n\tVALUES (" ); //$NON-NLS-1$
  write_EventIgnored_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EventIgnored_c_proxy_sql(EventIgnored_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_EIGN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EventIgnored_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EventIgnored_c_attr_sql(EventIgnored_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmstt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmstt_idCachedValue():inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_CreationTransition_c_sql(CreationTransition_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_CRTXN\n\tVALUES (" ); //$NON-NLS-1$
  write_CreationTransition_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CreationTransition_c_proxy_sql(CreationTransition_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_CRTXN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CreationTransition_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CreationTransition_c_attr_sql(CreationTransition_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTrans_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTrans_idCachedValue():inst.getTrans_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ClassStateMachine_c_sql(ClassStateMachine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_ASM\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassStateMachine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassStateMachine_c_proxy_sql(ClassStateMachine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_ASM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassStateMachine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassStateMachine_c_attr_sql(ClassStateMachine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CantHappen_c_sql(CantHappen_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_CH\n\tVALUES (" ); //$NON-NLS-1$
  write_CantHappen_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CantHappen_c_proxy_sql(CantHappen_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_CH_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CantHappen_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CantHappen_c_attr_sql(CantHappen_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmstt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmstt_idCachedValue():inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmspd_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmspd_idCachedValue():inst.getSmspd_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ActionHome_c_sql(ActionHome_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_AH\n\tVALUES (" ); //$NON-NLS-1$
  write_ActionHome_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActionHome_c_proxy_sql(ActionHome_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_AH_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActionHome_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActionHome_c_attr_sql(ActionHome_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAct_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAct_idCachedValue():inst.getAct_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Action_c_sql(Action_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SM_ACT\n\tVALUES (" ); //$NON-NLS-1$
  write_Action_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Action_c_proxy_sql(Action_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SM_ACT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Action_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Action_c_attr_sql(Action_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getAct_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_SequenceInSequence_c_sql(SequenceInSequence_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_SIS\n\tVALUES (" ); //$NON-NLS-1$
  write_SequenceInSequence_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SequenceInSequence_c_proxy_sql(SequenceInSequence_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_SIS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SequenceInSequence_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SequenceInSequence_c_attr_sql(SequenceInSequence_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Sequence_c_sql(Sequence_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_S\n\tVALUES (" ); //$NON-NLS-1$
  write_Sequence_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Sequence_c_proxy_sql(Sequence_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_S_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Sequence_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Sequence_c_attr_sql(Sequence_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrev_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrev_package_idCachedValue():inst.getPrev_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_package_idCachedValue():inst.getComponent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_MessageInSequence_c_sql(MessageInSequence_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_MIS\n\tVALUES (" ); //$NON-NLS-1$
  write_MessageInSequence_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MessageInSequence_c_proxy_sql(MessageInSequence_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_MIS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MessageInSequence_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MessageInSequence_c_attr_sql(MessageInSequence_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SelectRelatedWhere_c_sql(SelectRelatedWhere_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_SRW\n\tVALUES (" ); //$NON-NLS-1$
  write_SelectRelatedWhere_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SelectRelatedWhere_c_proxy_sql(SelectRelatedWhere_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_SRW_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SelectRelatedWhere_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SelectRelatedWhere_c_attr_sql(SelectRelatedWhere_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getWhere_clause_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getWhere_clause_value_idCachedValue():inst.getWhere_clause_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SelectRelatedBy_c_sql(SelectRelatedBy_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_SR\n\tVALUES (" ); //$NON-NLS-1$
  write_SelectRelatedBy_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SelectRelatedBy_c_proxy_sql(SelectRelatedBy_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_SR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SelectRelatedBy_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SelectRelatedBy_c_attr_sql(SelectRelatedBy_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SelectFromInstancesWhere_c_sql(SelectFromInstancesWhere_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_FIW\n\tVALUES (" ); //$NON-NLS-1$
  write_SelectFromInstancesWhere_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SelectFromInstancesWhere_c_proxy_sql(SelectFromInstancesWhere_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_FIW_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SelectFromInstancesWhere_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SelectFromInstancesWhere_c_attr_sql(SelectFromInstancesWhere_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIs_implicit()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getCardinality().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getWhere_clause_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getWhere_clause_value_idCachedValue():inst.getWhere_clause_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExtentlinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExtentcolumn());
}
void write_SelectFromInstances_c_sql(SelectFromInstances_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_FIO\n\tVALUES (" ); //$NON-NLS-1$
  write_SelectFromInstances_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SelectFromInstances_c_proxy_sql(SelectFromInstances_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_FIO_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SelectFromInstances_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SelectFromInstances_c_attr_sql(SelectFromInstances_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIs_implicit()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getCardinality().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExtentlinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExtentcolumn());
}
void write_Select_c_sql(Select_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_SEL\n\tVALUES (" ); //$NON-NLS-1$
  write_Select_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Select_c_proxy_sql(Select_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_SEL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Select_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Select_c_attr_sql(Select_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIs_implicit()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getCardinality().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ChainLink_c_sql(ChainLink_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_LNK\n\tVALUES (" ); //$NON-NLS-1$
  write_ChainLink_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ChainLink_c_proxy_sql(ChainLink_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_LNK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ChainLink_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ChainLink_c_attr_sql(ChainLink_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getLink_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRel_phrase().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getNext_link_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getNext_link_idCachedValue():inst.getNext_link_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterscolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumberlinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumbercolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getPhraselinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getPhrasecolumn());
}
void write_SearchResult_c_sql(SearchResult_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SR_SR\n\tVALUES (" ); //$NON-NLS-1$
  write_SearchResult_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SearchResult_c_proxy_sql(SearchResult_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SR_SR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SearchResult_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SearchResult_c_attr_sql(SearchResult_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEngine_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEngine_idCachedValue():inst.getEngine_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMatchedparticipant_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMatchedparticipant_idCachedValue():inst.getMatchedparticipant_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_NameMatch_c_sql(NameMatch_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SR_NM\n\tVALUES (" ); //$NON-NLS-1$
  write_NameMatch_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_NameMatch_c_proxy_sql(NameMatch_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SR_NM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_NameMatch_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_NameMatch_c_attr_sql(NameMatch_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getUnnamedAttribute());
}
void write_Match_c_sql(Match_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SR_M\n\tVALUES (" ); //$NON-NLS-1$
  write_Match_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Match_c_proxy_sql(Match_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SR_M_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Match_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Match_c_attr_sql(Match_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getResult_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getResult_idCachedValue():inst.getResult_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ContentMatchResult_c_sql(ContentMatchResult_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SR_CMR\n\tVALUES (" ); //$NON-NLS-1$
  write_ContentMatchResult_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ContentMatchResult_c_proxy_sql(ContentMatchResult_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SR_CMR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ContentMatchResult_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ContentMatchResult_c_attr_sql(ContentMatchResult_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getStartposition());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getLength());
}
void write_ContentMatch_c_sql(ContentMatch_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SR_CM\n\tVALUES (" ); //$NON-NLS-1$
  write_ContentMatch_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ContentMatch_c_proxy_sql(ContentMatch_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SR_CM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ContentMatch_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ContentMatch_c_attr_sql(ContentMatch_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getStartposition());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMatchlength());
}
void write_ReferencesQuery_c_sql(ReferencesQuery_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQU_R\n\tVALUES (" ); //$NON-NLS-1$
  write_ReferencesQuery_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ReferencesQuery_c_proxy_sql(ReferencesQuery_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQU_R_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ReferencesQuery_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ReferencesQuery_c_attr_sql(ReferencesQuery_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Query_c_sql(Query_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQU_Q\n\tVALUES (" ); //$NON-NLS-1$
  write_Query_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Query_c_proxy_sql(Query_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQU_Q_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Query_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Query_c_attr_sql(Query_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEngine_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEngine_idCachedValue():inst.getEngine_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getPattern().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getRegex()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getCasesensitive()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getScope());
}
void write_DescriptionQuery_c_sql(DescriptionQuery_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQU_DE\n\tVALUES (" ); //$NON-NLS-1$
  write_DescriptionQuery_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DescriptionQuery_c_proxy_sql(DescriptionQuery_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQU_DE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DescriptionQuery_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DescriptionQuery_c_attr_sql(DescriptionQuery_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DeclarationQuery_c_sql(DeclarationQuery_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQU_D\n\tVALUES (" ); //$NON-NLS-1$
  write_DeclarationQuery_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DeclarationQuery_c_proxy_sql(DeclarationQuery_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQU_D_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DeclarationQuery_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DeclarationQuery_c_attr_sql(DeclarationQuery_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ActionLanguageQuery_c_sql(ActionLanguageQuery_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQU_A\n\tVALUES (" ); //$NON-NLS-1$
  write_ActionLanguageQuery_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActionLanguageQuery_c_proxy_sql(ActionLanguageQuery_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQU_A_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActionLanguageQuery_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActionLanguageQuery_c_attr_sql(ActionLanguageQuery_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SearchableElement_c_sql(SearchableElement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SP_SE\n\tVALUES (" ); //$NON-NLS-1$
  write_SearchableElement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SearchableElement_c_proxy_sql(SearchableElement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SP_SE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SearchableElement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SearchableElement_c_attr_sql(SearchableElement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParticipant_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParticipant_idCachedValue():inst.getParticipant_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getModelrootid().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getClassname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "0" );  //$NON-NLS-1$
}
void write_SearchParticipant_c_sql(SearchParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SP_SP\n\tVALUES (" ); //$NON-NLS-1$
  write_SearchParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SearchParticipant_c_proxy_sql(SearchParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SP_SP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SearchParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SearchParticipant_c_attr_sql(SearchParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEngine_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEngine_idCachedValue():inst.getEngine_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_NamedSearchable_c_sql(NamedSearchable_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SP_NS\n\tVALUES (" ); //$NON-NLS-1$
  write_NamedSearchable_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_NamedSearchable_c_proxy_sql(NamedSearchable_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SP_NS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_NamedSearchable_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_NamedSearchable_c_attr_sql(NamedSearchable_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSearchablevalue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_DescriptionSearchable_c_sql(DescriptionSearchable_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SP_DS\n\tVALUES (" ); //$NON-NLS-1$
  write_DescriptionSearchable_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DescriptionSearchable_c_proxy_sql(DescriptionSearchable_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SP_DS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DescriptionSearchable_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DescriptionSearchable_c_attr_sql(DescriptionSearchable_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSearchablevalue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ActionLanguageSearchable_c_sql(ActionLanguageSearchable_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SP_ALS\n\tVALUES (" ); //$NON-NLS-1$
  write_ActionLanguageSearchable_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActionLanguageSearchable_c_proxy_sql(ActionLanguageSearchable_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SP_ALS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActionLanguageSearchable_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActionLanguageSearchable_c_attr_sql(ActionLanguageSearchable_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSearchablevalue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_SearchEngine_c_sql(SearchEngine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SEN_E\n\tVALUES (" ); //$NON-NLS-1$
  write_SearchEngine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SearchEngine_c_proxy_sql(SearchEngine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SEN_E_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SearchEngine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SearchEngine_c_attr_sql(SearchEngine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ReferencesEngine_c_sql(ReferencesEngine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SEN_RE\n\tVALUES (" ); //$NON-NLS-1$
  write_ReferencesEngine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ReferencesEngine_c_proxy_sql(ReferencesEngine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SEN_RE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ReferencesEngine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ReferencesEngine_c_attr_sql(ReferencesEngine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DescriptionEngine_c_sql(DescriptionEngine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SEN_DE\n\tVALUES (" ); //$NON-NLS-1$
  write_DescriptionEngine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DescriptionEngine_c_proxy_sql(DescriptionEngine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SEN_DE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DescriptionEngine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DescriptionEngine_c_attr_sql(DescriptionEngine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DeclarationsEngine_c_sql(DeclarationsEngine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SEN_DCE\n\tVALUES (" ); //$NON-NLS-1$
  write_DeclarationsEngine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DeclarationsEngine_c_proxy_sql(DeclarationsEngine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SEN_DCE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DeclarationsEngine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DeclarationsEngine_c_attr_sql(DeclarationsEngine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ActionLanguageEngine_c_sql(ActionLanguageEngine_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SEN_ALE\n\tVALUES (" ); //$NON-NLS-1$
  write_ActionLanguageEngine_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActionLanguageEngine_c_proxy_sql(ActionLanguageEngine_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SEN_ALE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActionLanguageEngine_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActionLanguageEngine_c_attr_sql(ActionLanguageEngine_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_UnrelateUsing_c_sql(UnrelateUsing_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_URU\n\tVALUES (" ); //$NON-NLS-1$
  write_UnrelateUsing_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_UnrelateUsing_c_proxy_sql(UnrelateUsing_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_URU_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_UnrelateUsing_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_UnrelateUsing_c_attr_sql(UnrelateUsing_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOne_side_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOne_side_var_idCachedValue():inst.getOne_side_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOther_side_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOther_side_var_idCachedValue():inst.getOther_side_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssociative_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssociative_var_idCachedValue():inst.getAssociative_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRelationship_phrase().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumberlinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumbercolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationphraselinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationphrasecolumn());
}
void write_Unrelate_c_sql(Unrelate_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_UNR\n\tVALUES (" ); //$NON-NLS-1$
  write_Unrelate_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Unrelate_c_proxy_sql(Unrelate_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_UNR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Unrelate_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Unrelate_c_attr_sql(Unrelate_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOne_side_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOne_side_var_idCachedValue():inst.getOne_side_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOther_side_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOther_side_var_idCachedValue():inst.getOther_side_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRelationship_phrase().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumberlinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumbercolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationphraselinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationphrasecolumn());
}
void write_RelateUsing_c_sql(RelateUsing_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_RU\n\tVALUES (" ); //$NON-NLS-1$
  write_RelateUsing_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_RelateUsing_c_proxy_sql(RelateUsing_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_RU_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_RelateUsing_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_RelateUsing_c_attr_sql(RelateUsing_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOne_side_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOne_side_var_idCachedValue():inst.getOne_side_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOther_side_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOther_side_var_idCachedValue():inst.getOther_side_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssociative_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssociative_var_idCachedValue():inst.getAssociative_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRelationship_phrase().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumberlinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumbercolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationphraselinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationphrasecolumn());
}
void write_Relate_c_sql(Relate_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_REL\n\tVALUES (" ); //$NON-NLS-1$
  write_Relate_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Relate_c_proxy_sql(Relate_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_REL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Relate_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Relate_c_attr_sql(Relate_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOne_side_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOne_side_var_idCachedValue():inst.getOne_side_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOther_side_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOther_side_var_idCachedValue():inst.getOther_side_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRelationship_phrase().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumberlinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationnumbercolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationphraselinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAssociationphrasecolumn());
}
void write_SatisfactionInComponentPackage_c_sql(SatisfactionInComponentPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO PA_SICP\n\tVALUES (" ); //$NON-NLS-1$
  write_SatisfactionInComponentPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SatisfactionInComponentPackage_c_proxy_sql(SatisfactionInComponentPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO PA_SICP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SatisfactionInComponentPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SatisfactionInComponentPackage_c_attr_sql(SatisfactionInComponentPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponentpackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponentpackage_idCachedValue():inst.getComponentpackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSatisfaction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSatisfaction_idCachedValue():inst.getSatisfaction_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SatisfactionInComponent_c_sql(SatisfactionInComponent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO PA_SIC\n\tVALUES (" ); //$NON-NLS-1$
  write_SatisfactionInComponent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SatisfactionInComponent_c_proxy_sql(SatisfactionInComponent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO PA_SIC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SatisfactionInComponent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SatisfactionInComponent_c_attr_sql(SatisfactionInComponent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSatisfaction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSatisfaction_idCachedValue():inst.getSatisfaction_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DelegationInComponent_c_sql(DelegationInComponent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO PA_DIC\n\tVALUES (" ); //$NON-NLS-1$
  write_DelegationInComponent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DelegationInComponent_c_proxy_sql(DelegationInComponent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO PA_DIC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DelegationInComponent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DelegationInComponent_c_attr_sql(DelegationInComponent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDelegation_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDelegation_idCachedValue():inst.getDelegation_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_PackageableElement_c_sql(PackageableElement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO PE_PE\n\tVALUES (" ); //$NON-NLS-1$
  write_PackageableElement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_PackageableElement_c_proxy_sql(PackageableElement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO PE_PE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_PackageableElement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_PackageableElement_c_attr_sql(PackageableElement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getElement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getVisibility());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getType());
}
void write_SynchronousMessage_c_sql(SynchronousMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_SM\n\tVALUES (" ); //$NON-NLS-1$
  write_SynchronousMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SynchronousMessage_c_proxy_sql(SynchronousMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_SM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SynchronousMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SynchronousMessage_c_attr_sql(SynchronousMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getGuardcondition().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getResulttarget().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getReturnvalue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSequencenumb().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_SignalMessage_c_sql(SignalMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_SIG\n\tVALUES (" ); //$NON-NLS-1$
  write_SignalMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SignalMessage_c_proxy_sql(SignalMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_SIG_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SignalMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SignalMessage_c_attr_sql(SignalMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ReturnMessage_c_sql(ReturnMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_R\n\tVALUES (" ); //$NON-NLS-1$
  write_ReturnMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ReturnMessage_c_proxy_sql(ReturnMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_R_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ReturnMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ReturnMessage_c_attr_sql(ReturnMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getGuardcondition().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getResulttarget().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getReturnvalue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSequencenumb().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_OperationMessage_c_sql(OperationMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_O\n\tVALUES (" ); //$NON-NLS-1$
  write_OperationMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_OperationMessage_c_proxy_sql(OperationMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_O_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_OperationMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_OperationMessage_c_attr_sql(OperationMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTfr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTfr_idCachedValue():inst.getTfr_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_OperationArgument_c_sql(OperationArgument_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_OA\n\tVALUES (" ); //$NON-NLS-1$
  write_OperationArgument_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_OperationArgument_c_proxy_sql(OperationArgument_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_OA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_OperationArgument_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_OperationArgument_c_attr_sql(OperationArgument_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getArg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getArg_idCachedValue():inst.getArg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTparm_idCachedValue():inst.getTparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_MessageArgument_c_sql(MessageArgument_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_A\n\tVALUES (" ); //$NON-NLS-1$
  write_MessageArgument_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MessageArgument_c_proxy_sql(MessageArgument_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_A_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MessageArgument_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MessageArgument_c_attr_sql(MessageArgument_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getArg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getInformal_msg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getInformal_msg_idCachedValue():inst.getInformal_msg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFormal_msg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFormal_msg_idCachedValue():inst.getFormal_msg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_Message_c_sql(Message_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_M\n\tVALUES (" ); //$NON-NLS-1$
  write_Message_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Message_c_proxy_sql(Message_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_M_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Message_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Message_c_attr_sql(Message_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getReceiver_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getReceiver_part_idCachedValue():inst.getReceiver_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSender_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSender_part_idCachedValue():inst.getSender_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getParticipatesincommunication()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_InterfaceOperationMessage_c_sql(InterfaceOperationMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_IOP\n\tVALUES (" ); //$NON-NLS-1$
  write_InterfaceOperationMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InterfaceOperationMessage_c_proxy_sql(InterfaceOperationMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_IOP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InterfaceOperationMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InterfaceOperationMessage_c_attr_sql(InterfaceOperationMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InformalSynchronousMessage_c_sql(InformalSynchronousMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_ISM\n\tVALUES (" ); //$NON-NLS-1$
  write_InformalSynchronousMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InformalSynchronousMessage_c_proxy_sql(InformalSynchronousMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_ISM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InformalSynchronousMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InformalSynchronousMessage_c_attr_sql(InformalSynchronousMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InformalAsynchronousMessage_c_sql(InformalAsynchronousMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_IAM\n\tVALUES (" ); //$NON-NLS-1$
  write_InformalAsynchronousMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InformalAsynchronousMessage_c_proxy_sql(InformalAsynchronousMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_IAM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InformalAsynchronousMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InformalAsynchronousMessage_c_attr_sql(InformalAsynchronousMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InformalArgument_c_sql(InformalArgument_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_IA\n\tVALUES (" ); //$NON-NLS-1$
  write_InformalArgument_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InformalArgument_c_proxy_sql(InformalArgument_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_IA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InformalArgument_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InformalArgument_c_attr_sql(InformalArgument_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getArg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getArg_idCachedValue():inst.getArg_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionMessage_c_sql(FunctionMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_F\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionMessage_c_proxy_sql(FunctionMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_F_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionMessage_c_attr_sql(FunctionMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionArgument_c_sql(FunctionArgument_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_FA\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionArgument_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionArgument_c_proxy_sql(FunctionArgument_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_FA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionArgument_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionArgument_c_attr_sql(FunctionArgument_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getArg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getArg_idCachedValue():inst.getArg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSparm_idCachedValue():inst.getSparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExecutablePropertyArgument_c_sql(ExecutablePropertyArgument_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_EPA\n\tVALUES (" ); //$NON-NLS-1$
  write_ExecutablePropertyArgument_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExecutablePropertyArgument_c_proxy_sql(ExecutablePropertyArgument_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_EPA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExecutablePropertyArgument_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExecutablePropertyArgument_c_attr_sql(ExecutablePropertyArgument_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getArg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getArg_idCachedValue():inst.getArg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPp_idCachedValue():inst.getPp_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EventMessage_c_sql(EventMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_E\n\tVALUES (" ); //$NON-NLS-1$
  write_EventMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EventMessage_c_proxy_sql(EventMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_E_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EventMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EventMessage_c_attr_sql(EventMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EventArgument_c_sql(EventArgument_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_EA\n\tVALUES (" ); //$NON-NLS-1$
  write_EventArgument_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EventArgument_c_proxy_sql(EventArgument_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_EA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EventArgument_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EventArgument_c_attr_sql(EventArgument_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getArg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getArg_idCachedValue():inst.getArg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmedi_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmedi_idCachedValue():inst.getSmedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_BridgeMessage_c_sql(BridgeMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_B\n\tVALUES (" ); //$NON-NLS-1$
  write_BridgeMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BridgeMessage_c_proxy_sql(BridgeMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_B_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BridgeMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BridgeMessage_c_attr_sql(BridgeMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBrg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBrg_idCachedValue():inst.getBrg_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_BridgeArgument_c_sql(BridgeArgument_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_BA\n\tVALUES (" ); //$NON-NLS-1$
  write_BridgeArgument_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BridgeArgument_c_proxy_sql(BridgeArgument_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_BA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BridgeArgument_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BridgeArgument_c_attr_sql(BridgeArgument_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getArg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getArg_idCachedValue():inst.getArg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBparm_idCachedValue():inst.getBparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_AsynchronousMessage_c_sql(AsynchronousMessage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO MSG_AM\n\tVALUES (" ); //$NON-NLS-1$
  write_AsynchronousMessage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AsynchronousMessage_c_proxy_sql(AsynchronousMessage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO MSG_AM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AsynchronousMessage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AsynchronousMessage_c_attr_sql(AsynchronousMessage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getGuardcondition().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDurationobservation().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDurationconstraint().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSequencenumb().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_SignalInvocation_c_sql(SignalInvocation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_SGN\n\tVALUES (" ); //$NON-NLS-1$
  write_SignalInvocation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SignalInvocation_c_proxy_sql(SignalInvocation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_SGN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SignalInvocation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SignalInvocation_c_attr_sql(SignalInvocation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSignamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSignamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOwnernamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOwnernamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getProvidedsig_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getProvidedsig_idCachedValue():inst.getProvidedsig_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRequiredsig_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRequiredsig_idCachedValue():inst.getRequiredsig_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ReturnStmt_c_sql(ReturnStmt_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_RET\n\tVALUES (" ); //$NON-NLS-1$
  write_ReturnStmt_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ReturnStmt_c_proxy_sql(ReturnStmt_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_RET_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ReturnStmt_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ReturnStmt_c_attr_sql(ReturnStmt_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_OperationInvocation_c_sql(OperationInvocation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_TFM\n\tVALUES (" ); //$NON-NLS-1$
  write_OperationInvocation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_OperationInvocation_c_proxy_sql(OperationInvocation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_TFM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_OperationInvocation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_OperationInvocation_c_attr_sql(OperationInvocation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTfr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTfr_idCachedValue():inst.getTfr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOperationnamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOperationnamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterscolumn());
}
void write_InterfaceOperationInvocation_c_sql(InterfaceOperationInvocation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_IOP\n\tVALUES (" ); //$NON-NLS-1$
  write_InterfaceOperationInvocation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InterfaceOperationInvocation_c_proxy_sql(InterfaceOperationInvocation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_IOP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InterfaceOperationInvocation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InterfaceOperationInvocation_c_attr_sql(InterfaceOperationInvocation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOpnamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOpnamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOwnernamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getOwnernamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getProvidedop_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getProvidedop_idCachedValue():inst.getProvidedop_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRequiredop_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRequiredop_idCachedValue():inst.getRequiredop_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionInvocation_c_sql(FunctionInvocation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_FNC\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionInvocation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionInvocation_c_proxy_sql(FunctionInvocation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_FNC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionInvocation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionInvocation_c_attr_sql(FunctionInvocation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getFunctionnamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getFunctionnamecolumn());
}
void write_BridgeInvocation_c_sql(BridgeInvocation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_BRG\n\tVALUES (" ); //$NON-NLS-1$
  write_BridgeInvocation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BridgeInvocation_c_proxy_sql(BridgeInvocation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_BRG_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BridgeInvocation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BridgeInvocation_c_attr_sql(BridgeInvocation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBrg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBrg_idCachedValue():inst.getBrg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBridgenamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBridgenamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExternalentitykeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExternalentitykeyletterscolumn());
}
void write_InterfacePackageInInterfacePackage_c_sql(InterfacePackageInInterfacePackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO IP_IPINIP\n\tVALUES (" ); //$NON-NLS-1$
  write_InterfacePackageInInterfacePackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InterfacePackageInInterfacePackage_c_proxy_sql(InterfacePackageInInterfacePackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO IP_IPINIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InterfacePackageInInterfacePackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InterfacePackageInInterfacePackage_c_attr_sql(InterfacePackageInInterfacePackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InterfacePackage_c_sql(InterfacePackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO IP_IP\n\tVALUES (" ); //$NON-NLS-1$
  write_InterfacePackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InterfacePackage_c_proxy_sql(InterfacePackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO IP_IP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InterfacePackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InterfacePackage_c_attr_sql(InterfacePackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_package_idCachedValue():inst.getParent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDirect_sys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDirect_sys_idCachedValue():inst.getDirect_sys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_package_idCachedValue():inst.getComponent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_UseCaseParticipant_c_sql(UseCaseParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO IA_UCP\n\tVALUES (" ); //$NON-NLS-1$
  write_UseCaseParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_UseCaseParticipant_c_proxy_sql(UseCaseParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO IA_UCP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_UseCaseParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_UseCaseParticipant_c_attr_sql(UseCaseParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_TimingMark_c_sql(TimingMark_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_TM\n\tVALUES (" ); //$NON-NLS-1$
  write_TimingMark_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_TimingMark_c_proxy_sql(TimingMark_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_TM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_TimingMark_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_TimingMark_c_attr_sql(TimingMark_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getMark_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_TimeSpan_c_sql(TimeSpan_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_TS\n\tVALUES (" ); //$NON-NLS-1$
  write_TimeSpan_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_TimeSpan_c_proxy_sql(TimeSpan_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_TS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_TimeSpan_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_TimeSpan_c_attr_sql(TimeSpan_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSpan_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMark_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMark_idCachedValue():inst.getMark_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrev_mark_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrev_mark_idCachedValue():inst.getPrev_mark_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_PackageParticipant_c_sql(PackageParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_PP\n\tVALUES (" ); //$NON-NLS-1$
  write_PackageParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_PackageParticipant_c_proxy_sql(PackageParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_PP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_PackageParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_PackageParticipant_c_attr_sql(PackageParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_Lifespan_c_sql(Lifespan_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_LS\n\tVALUES (" ); //$NON-NLS-1$
  write_Lifespan_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Lifespan_c_proxy_sql(Lifespan_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_LS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Lifespan_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Lifespan_c_attr_sql(Lifespan_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSource_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSource_part_idCachedValue():inst.getSource_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getDestroyed()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_InteractionParticipant_c_sql(InteractionParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_P\n\tVALUES (" ); //$NON-NLS-1$
  write_InteractionParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InteractionParticipant_c_proxy_sql(InteractionParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_P_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InteractionParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InteractionParticipant_c_attr_sql(InteractionParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSequence_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSequence_package_idCachedValue():inst.getSequence_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InstanceAttributeValue_c_sql(InstanceAttributeValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_AV\n\tVALUES (" ); //$NON-NLS-1$
  write_InstanceAttributeValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InstanceAttributeValue_c_proxy_sql(InstanceAttributeValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_AV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InstanceAttributeValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InstanceAttributeValue_c_attr_sql(InstanceAttributeValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getAv_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getInformal_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getInformal_part_idCachedValue():inst.getInformal_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFormal_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFormal_part_idCachedValue():inst.getFormal_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_InformalAttributeValue_c_sql(InformalAttributeValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_IAV\n\tVALUES (" ); //$NON-NLS-1$
  write_InformalAttributeValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InformalAttributeValue_c_proxy_sql(InformalAttributeValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_IAV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InformalAttributeValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InformalAttributeValue_c_attr_sql(InformalAttributeValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAv_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAv_idCachedValue():inst.getAv_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InformalAttribute_c_sql(InformalAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_IA\n\tVALUES (" ); //$NON-NLS-1$
  write_InformalAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InformalAttribute_c_proxy_sql(InformalAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_IA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InformalAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InformalAttribute_c_attr_sql(InformalAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIa_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIa_idCachedValue():inst.getIa_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionPackageParticipant_c_sql(FunctionPackageParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_FPP\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionPackageParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionPackageParticipant_c_proxy_sql(FunctionPackageParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_FPP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionPackageParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionPackageParticipant_c_attr_sql(FunctionPackageParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFunpack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFunpack_idCachedValue():inst.getFunpack_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_FormalAttributeValue_c_sql(FormalAttributeValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_FAV\n\tVALUES (" ); //$NON-NLS-1$
  write_FormalAttributeValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FormalAttributeValue_c_proxy_sql(FormalAttributeValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_FAV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FormalAttributeValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FormalAttributeValue_c_attr_sql(FormalAttributeValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAv_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAv_idCachedValue():inst.getAv_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FormalAttribute_c_sql(FormalAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_FA\n\tVALUES (" ); //$NON-NLS-1$
  write_FormalAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FormalAttribute_c_proxy_sql(FormalAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_FA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FormalAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FormalAttribute_c_attr_sql(FormalAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIa_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIa_idCachedValue():inst.getIa_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExternalEntityParticipant_c_sql(ExternalEntityParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_EEP\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityParticipant_c_proxy_sql(ExternalEntityParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_EEP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityParticipant_c_attr_sql(ExternalEntityParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_ComponentParticipant_c_sql(ComponentParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_COP\n\tVALUES (" ); //$NON-NLS-1$
  write_ComponentParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ComponentParticipant_c_proxy_sql(ComponentParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_COP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ComponentParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ComponentParticipant_c_attr_sql(ComponentParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalcomponentname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_ClassParticipantAttribute_c_sql(ClassParticipantAttribute_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_CPA\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassParticipantAttribute_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassParticipantAttribute_c_proxy_sql(ClassParticipantAttribute_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_CPA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassParticipantAttribute_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassParticipantAttribute_c_attr_sql(ClassParticipantAttribute_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getIa_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getType().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ClassParticipant_c_sql(ClassParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_CP\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassParticipant_c_proxy_sql(ClassParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_CP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassParticipant_c_attr_sql(ClassParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_ClassInstanceParticipant_c_sql(ClassInstanceParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_CIP\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassInstanceParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassInstanceParticipant_c_proxy_sql(ClassInstanceParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_CIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassInstanceParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassInstanceParticipant_c_attr_sql(ClassInstanceParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalclassname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_ActorParticipant_c_sql(ActorParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SQ_AP\n\tVALUES (" ); //$NON-NLS-1$
  write_ActorParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActorParticipant_c_proxy_sql(ActorParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SQ_AP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActorParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActorParticipant_c_attr_sql(ActorParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getLs_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getLs_part_idCachedValue():inst.getLs_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Delete_c_sql(Delete_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_DEL\n\tVALUES (" ); //$NON-NLS-1$
  write_Delete_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Delete_c_proxy_sql(Delete_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_DEL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Delete_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Delete_c_attr_sql(Delete_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CreateNoVariable_c_sql(CreateNoVariable_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_CNV\n\tVALUES (" ); //$NON-NLS-1$
  write_CreateNoVariable_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CreateNoVariable_c_proxy_sql(CreateNoVariable_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_CNV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CreateNoVariable_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CreateNoVariable_c_attr_sql(CreateNoVariable_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterscolumn());
}
void write_Create_c_sql(Create_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_CR\n\tVALUES (" ); //$NON-NLS-1$
  write_Create_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Create_c_proxy_sql(Create_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_CR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Create_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Create_c_attr_sql(Create_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIs_implicit()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModelclasskeyletterscolumn());
}
void write_AssignToMember_c_sql(AssignToMember_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_AI\n\tVALUES (" ); //$NON-NLS-1$
  write_AssignToMember_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AssignToMember_c_proxy_sql(AssignToMember_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_AI_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AssignToMember_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AssignToMember_c_attr_sql(AssignToMember_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getR_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getR_value_idCachedValue():inst.getR_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getL_value_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getL_value_idCachedValue():inst.getL_value_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAttributelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getAttributecolumn());
}
void write_Timer_c_sql(Timer_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_TIM\n\tVALUES (" ); //$NON-NLS-1$
  write_Timer_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Timer_c_proxy_sql(Timer_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_TIM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Timer_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Timer_c_attr_sql(Timer_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getTimer_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getDelay());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getRunning()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getRecurring()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEvent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEvent_idCachedValue():inst.getEvent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getExpiration());
}
void write_PendingEvent_c_sql(PendingEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_EVI\n\tVALUES (" ); //$NON-NLS-1$
  write_PendingEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_PendingEvent_c_proxy_sql(PendingEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_EVI_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_PendingEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_PendingEvent_c_attr_sql(PendingEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getEvent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsexecuting()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIscreation()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTarget_inst_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTarget_inst_idCachedValue():inst.getTarget_inst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getNextevent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getNextevent_idCachedValue():inst.getNextevent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSent_by_inst_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSent_by_inst_idCachedValue():inst.getSent_by_inst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getNext_self_event_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getNext_self_event_idCachedValue():inst.getNext_self_event_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getExecution_engine_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getExecution_engine_idCachedValue():inst.getExecution_engine_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOriginating_execution_engine_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOriginating_execution_engine_idCachedValue():inst.getOriginating_execution_engine_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_LinkParticipation_c_sql(LinkParticipation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_LIP\n\tVALUES (" ); //$NON-NLS-1$
  write_LinkParticipation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LinkParticipation_c_proxy_sql(LinkParticipation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_LIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LinkParticipation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LinkParticipation_c_attr_sql(LinkParticipation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getParticipation_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getInst_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getInst_idCachedValue():inst.getInst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Link_c_sql(Link_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_LNK\n\tVALUES (" ); //$NON-NLS-1$
  write_Link_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Link_c_proxy_sql(Link_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_LNK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Link_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Link_c_attr_sql(Link_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getLink_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParticipation_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParticipation_idCachedValue():inst.getParticipation_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFormalizing_participation_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFormalizing_participation_idCachedValue():inst.getFormalizing_participation_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssociator_participation_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssociator_participation_idCachedValue():inst.getAssociator_participation_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Instance_c_sql(Instance_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_INS\n\tVALUES (" ); //$NON-NLS-1$
  write_Instance_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Instance_c_proxy_sql(Instance_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_INS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Instance_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Instance_c_attr_sql(Instance_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getInst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmstt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmstt_idCachedValue():inst.getSmstt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getExecution_engine_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getExecution_engine_idCachedValue():inst.getExecution_engine_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTrans_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTrans_idCachedValue():inst.getTrans_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDefault_name().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_DataItemValue_c_sql(DataItemValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_DIV\n\tVALUES (" ); //$NON-NLS-1$
  write_DataItemValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DataItemValue_c_proxy_sql(DataItemValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_DIV_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DataItemValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DataItemValue_c_attr_sql(DataItemValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getDiv_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEvent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEvent_idCachedValue():inst.getEvent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmedi_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmedi_idCachedValue():inst.getSmedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPp_idCachedValue():inst.getPp_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ComponentInstanceContainer_c_sql(ComponentInstanceContainer_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_CIN\n\tVALUES (" ); //$NON-NLS-1$
  write_ComponentInstanceContainer_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ComponentInstanceContainer_c_proxy_sql(ComponentInstanceContainer_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_CIN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ComponentInstanceContainer_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ComponentInstanceContainer_c_attr_sql(ComponentInstanceContainer_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getContainer_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getContainer_idCachedValue():inst.getContainer_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ComponentInstance_c_sql(ComponentInstance_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_EXE\n\tVALUES (" ); //$NON-NLS-1$
  write_ComponentInstance_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ComponentInstance_c_proxy_sql(ComponentInstance_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_EXE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ComponentInstance_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ComponentInstance_c_attr_sql(ComponentInstance_c inst)
throws IOException
{
  m_fh.print( (inst.getRunning()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getExecution_engine_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNext_unique_id());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNext_instance_id());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getImportedcomponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getImportedcomponent_idCachedValue():inst.getImportedcomponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "0" );  //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "0" );  //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getContainer_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getContainer_idCachedValue():inst.getContainer_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "0" );  //$NON-NLS-1$
}
void write_AttributeValue_c_sql(AttributeValue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO I_AVL\n\tVALUES (" ); //$NON-NLS-1$
  write_AttributeValue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AttributeValue_c_proxy_sql(AttributeValue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO I_AVL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AttributeValue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AttributeValue_c_attr_sql(AttributeValue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getInst_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getInst_idCachedValue():inst.getInst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_GlobalElementInSystem_c_sql(GlobalElementInSystem_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO G_EIS\n\tVALUES (" ); //$NON-NLS-1$
  write_GlobalElementInSystem_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_GlobalElementInSystem_c_proxy_sql(GlobalElementInSystem_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO G_EIS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_GlobalElementInSystem_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_GlobalElementInSystem_c_attr_sql(GlobalElementInSystem_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElement_idCachedValue():inst.getElement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_GenerateToExternalEntity_c_sql(GenerateToExternalEntity_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_GEE\n\tVALUES (" ); //$NON-NLS-1$
  write_GenerateToExternalEntity_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_GenerateToExternalEntity_c_proxy_sql(GenerateToExternalEntity_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_GEE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_GenerateToExternalEntity_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_GenerateToExternalEntity_c_attr_sql(GenerateToExternalEntity_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEeevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEeevt_idCachedValue():inst.getEeevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_GenerateToCreator_c_sql(GenerateToCreator_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_GEC\n\tVALUES (" ); //$NON-NLS-1$
  write_GenerateToCreator_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_GenerateToCreator_c_proxy_sql(GenerateToCreator_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_GEC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_GenerateToCreator_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_GenerateToCreator_c_attr_sql(GenerateToCreator_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_GenerateToClass_c_sql(GenerateToClass_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_GAR\n\tVALUES (" ); //$NON-NLS-1$
  write_GenerateToClass_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_GenerateToClass_c_proxy_sql(GenerateToClass_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_GAR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_GenerateToClass_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_GenerateToClass_c_attr_sql(GenerateToClass_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_GenerateSmEventStatement_c_sql(GenerateSmEventStatement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_GSME\n\tVALUES (" ); //$NON-NLS-1$
  write_GenerateSmEventStatement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_GenerateSmEventStatement_c_proxy_sql(GenerateSmEventStatement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_GSME_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_GenerateSmEventStatement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_GenerateSmEventStatement_c_attr_sql(GenerateSmEventStatement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_GeneratePreexistingEvent_c_sql(GeneratePreexistingEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_GPR\n\tVALUES (" ); //$NON-NLS-1$
  write_GeneratePreexistingEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_GeneratePreexistingEvent_c_proxy_sql(GeneratePreexistingEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_GPR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_GeneratePreexistingEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_GeneratePreexistingEvent_c_attr_sql(GeneratePreexistingEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_GenerateEventStatement_c_sql(GenerateEventStatement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_GES\n\tVALUES (" ); //$NON-NLS-1$
  write_GenerateEventStatement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_GenerateEventStatement_c_proxy_sql(GenerateEventStatement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_GES_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_GenerateEventStatement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_GenerateEventStatement_c_attr_sql(GenerateEventStatement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Generate_c_sql(Generate_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_GEN\n\tVALUES (" ); //$NON-NLS-1$
  write_Generate_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Generate_c_proxy_sql(Generate_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_GEN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Generate_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Generate_c_attr_sql(Generate_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EventSpecificationStatement_c_sql(EventSpecificationStatement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_ESS\n\tVALUES (" ); //$NON-NLS-1$
  write_EventSpecificationStatement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EventSpecificationStatement_c_proxy_sql(EventSpecificationStatement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_ESS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EventSpecificationStatement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EventSpecificationStatement_c_attr_sql(EventSpecificationStatement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getParmlistok()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getPeindicated()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEventderivedlabellinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEventderivedlabelcolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEventmeaninglinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEventmeaningcolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEventtargetkeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEventtargetkeyletterscolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getFirsteventdataitemnamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getFirsteventdataitemnamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentlatereventdataitemnamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentlatereventdataitemnamecolumn());
}
void write_CreateSmEventStatement_c_sql(CreateSmEventStatement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_CSME\n\tVALUES (" ); //$NON-NLS-1$
  write_CreateSmEventStatement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CreateSmEventStatement_c_proxy_sql(CreateSmEventStatement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_CSME_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CreateSmEventStatement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CreateSmEventStatement_c_attr_sql(CreateSmEventStatement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CreateEventToInstance_c_sql(CreateEventToInstance_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_CEI\n\tVALUES (" ); //$NON-NLS-1$
  write_CreateEventToInstance_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CreateEventToInstance_c_proxy_sql(CreateEventToInstance_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_CEI_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CreateEventToInstance_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CreateEventToInstance_c_attr_sql(CreateEventToInstance_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CreateEventToExternalEntity_c_sql(CreateEventToExternalEntity_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_CEE\n\tVALUES (" ); //$NON-NLS-1$
  write_CreateEventToExternalEntity_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CreateEventToExternalEntity_c_proxy_sql(CreateEventToExternalEntity_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_CEE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CreateEventToExternalEntity_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CreateEventToExternalEntity_c_attr_sql(CreateEventToExternalEntity_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEeevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEeevt_idCachedValue():inst.getEeevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CreateEventToCreator_c_sql(CreateEventToCreator_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_CEC\n\tVALUES (" ); //$NON-NLS-1$
  write_CreateEventToCreator_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CreateEventToCreator_c_proxy_sql(CreateEventToCreator_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_CEC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CreateEventToCreator_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CreateEventToCreator_c_attr_sql(CreateEventToCreator_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CreateEventToClass_c_sql(CreateEventToClass_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_CEA\n\tVALUES (" ); //$NON-NLS-1$
  write_CreateEventToClass_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CreateEventToClass_c_proxy_sql(CreateEventToClass_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_CEA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CreateEventToClass_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CreateEventToClass_c_attr_sql(CreateEventToClass_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CreateEventStatement_c_sql(CreateEventStatement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO E_CES\n\tVALUES (" ); //$NON-NLS-1$
  write_CreateEventStatement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CreateEventStatement_c_proxy_sql(CreateEventStatement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO E_CES_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CreateEventStatement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CreateEventStatement_c_attr_sql(CreateEventStatement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIs_implicit()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SpecificationPackage_c_sql(SpecificationPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO EP_SPKG\n\tVALUES (" ); //$NON-NLS-1$
  write_SpecificationPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SpecificationPackage_c_proxy_sql(SpecificationPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO EP_SPKG_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SpecificationPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SpecificationPackage_c_attr_sql(SpecificationPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getContainer_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getContainer_package_idCachedValue():inst.getContainer_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_PackageInPackage_c_sql(PackageInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO EP_PIP\n\tVALUES (" ); //$NON-NLS-1$
  write_PackageInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_PackageInPackage_c_proxy_sql(PackageInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO EP_PIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_PackageInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_PackageInPackage_c_attr_sql(PackageInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_package_idCachedValue():inst.getParent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getChild_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getChild_package_idCachedValue():inst.getChild_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Package_c_sql(Package_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO EP_PKG\n\tVALUES (" ); //$NON-NLS-1$
  write_Package_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Package_c_proxy_sql(Package_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO EP_PKG_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Package_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Package_c_attr_sql(Package_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDirect_sys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDirect_sys_idCachedValue():inst.getDirect_sys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNum_rng());
}
void write_UserDataType_c_sql(UserDataType_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_UDT\n\tVALUES (" ); //$NON-NLS-1$
  write_UserDataType_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_UserDataType_c_proxy_sql(UserDataType_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_UDT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_UserDataType_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_UserDataType_c_attr_sql(UserDataType_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCdt_dt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCdt_dt_idCachedValue():inst.getCdt_dt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getGen_type());
}
void write_SystemModel_c_sql(SystemModel_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_SYS\n\tVALUES (" ); //$NON-NLS-1$
  write_SystemModel_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SystemModel_c_proxy_sql(SystemModel_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_SYS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SystemModel_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SystemModel_c_attr_sql(SystemModel_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
      if(inst.getModelRoot().isCompareRoot()) {
  m_fh.print("1");  //$NON-NLS-1$ //$NON-NLS-2$
      } else {
  m_fh.print( (inst.getUseglobals()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
      }
}
void write_SubsystemInSubsystem_c_sql(SubsystemInSubsystem_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_SIS\n\tVALUES (" ); //$NON-NLS-1$
  write_SubsystemInSubsystem_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SubsystemInSubsystem_c_proxy_sql(SubsystemInSubsystem_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_SIS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SubsystemInSubsystem_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SubsystemInSubsystem_c_attr_sql(SubsystemInSubsystem_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_ss_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_ss_idCachedValue():inst.getParent_ss_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getChild_ss_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getChild_ss_idCachedValue():inst.getChild_ss_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SubsystemInDomain_c_sql(SubsystemInDomain_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_SID\n\tVALUES (" ); //$NON-NLS-1$
  write_SubsystemInDomain_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SubsystemInDomain_c_proxy_sql(SubsystemInDomain_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_SID_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SubsystemInDomain_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SubsystemInDomain_c_attr_sql(SubsystemInDomain_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Subsystem_c_sql(Subsystem_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_SS\n\tVALUES (" ); //$NON-NLS-1$
  write_Subsystem_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Subsystem_c_proxy_sql(Subsystem_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_SS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Subsystem_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Subsystem_c_attr_sql(Subsystem_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getPrefix().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNum_rng());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getConfig_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_StructuredDataType_c_sql(StructuredDataType_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_SDT\n\tVALUES (" ); //$NON-NLS-1$
  write_StructuredDataType_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_StructuredDataType_c_proxy_sql(StructuredDataType_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_SDT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_StructuredDataType_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_StructuredDataType_c_attr_sql(StructuredDataType_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_StructureMember_c_sql(StructureMember_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_MBR\n\tVALUES (" ); //$NON-NLS-1$
  write_StructureMember_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_StructureMember_c_proxy_sql(StructureMember_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_MBR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_StructureMember_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_StructureMember_c_attr_sql(StructureMember_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getMember_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_dt_dt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_dt_dt_idCachedValue():inst.getParent_dt_dt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_member_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_member_idCachedValue():inst.getPrevious_member_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_FunctionPackageInDomain_c_sql(FunctionPackageInDomain_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO PL_FPID\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionPackageInDomain_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionPackageInDomain_c_proxy_sql(FunctionPackageInDomain_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO PL_FPID_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionPackageInDomain_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionPackageInDomain_c_attr_sql(FunctionPackageInDomain_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFunpack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFunpack_idCachedValue():inst.getFunpack_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExternalEntityPackageInDomain_c_sql(ExternalEntityPackageInDomain_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO PL_EEPID\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityPackageInDomain_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityPackageInDomain_c_proxy_sql(ExternalEntityPackageInDomain_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO PL_EEPID_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityPackageInDomain_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityPackageInDomain_c_attr_sql(ExternalEntityPackageInDomain_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEepack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEepack_idCachedValue():inst.getEepack_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InstanceReferenceDataType_c_sql(InstanceReferenceDataType_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_IRDT\n\tVALUES (" ); //$NON-NLS-1$
  write_InstanceReferenceDataType_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InstanceReferenceDataType_c_proxy_sql(InstanceReferenceDataType_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_IRDT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InstanceReferenceDataType_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InstanceReferenceDataType_c_attr_sql(InstanceReferenceDataType_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsset()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionParameter_c_sql(FunctionParameter_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_SPARM\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionParameter_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionParameter_c_proxy_sql(FunctionParameter_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_SPARM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionParameter_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionParameter_c_attr_sql(FunctionParameter_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBy_ref());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_sparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_sparm_idCachedValue():inst.getPrevious_sparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_FunctionPackageInPackage_c_sql(FunctionPackageInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_FPIP\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionPackageInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionPackageInPackage_c_proxy_sql(FunctionPackageInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_FPIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionPackageInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionPackageInPackage_c_attr_sql(FunctionPackageInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFunpack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFunpack_idCachedValue():inst.getFunpack_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionPackage_c_sql(FunctionPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_FPK\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionPackage_c_proxy_sql(FunctionPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_FPK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionPackage_c_attr_sql(FunctionPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getFunpack_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_funpack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_funpack_idCachedValue():inst.getParent_funpack_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionInPackage_c_sql(FunctionInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_FIP\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionInPackage_c_proxy_sql(FunctionInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_FIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionInPackage_c_attr_sql(FunctionInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFunpack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFunpack_idCachedValue():inst.getFunpack_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Function_c_sql(Function_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_SYNC\n\tVALUES (" ); //$NON-NLS-1$
  write_Function_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Function_c_proxy_sql(Function_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_SYNC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Function_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Function_c_attr_sql(Function_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getReturn_dimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ExternalEntityPackage_c_sql(ExternalEntityPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EEPK\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityPackage_c_proxy_sql(ExternalEntityPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EEPK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityPackage_c_attr_sql(ExternalEntityPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getEepack_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_eepack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_eepack_idCachedValue():inst.getParent_eepack_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExternalEntityInPackage_c_sql(ExternalEntityInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EEIP\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityInPackage_c_proxy_sql(ExternalEntityInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EEIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityInPackage_c_attr_sql(ExternalEntityInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEepack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEepack_idCachedValue():inst.getEepack_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExternalEntityInModel_c_sql(ExternalEntityInModel_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EEM\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityInModel_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityInModel_c_proxy_sql(ExternalEntityInModel_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EEM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityInModel_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityInModel_c_attr_sql(ExternalEntityInModel_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getEemod_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getModl_typ());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExternalEntityEventDataItem_c_sql(ExternalEntityEventDataItem_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EEEDI\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityEventDataItem_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityEventDataItem_c_proxy_sql(ExternalEntityEventDataItem_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EEEDI_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityEventDataItem_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityEventDataItem_c_attr_sql(ExternalEntityEventDataItem_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getEeedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExternalEntityEventData_c_sql(ExternalEntityEventData_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EEEDT\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityEventData_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityEventData_c_proxy_sql(ExternalEntityEventData_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EEEDT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityEventData_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityEventData_c_attr_sql(ExternalEntityEventData_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEeevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEeevt_idCachedValue():inst.getEeevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEeedi_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEeedi_idCachedValue():inst.getEeedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExternalEntityEvent_c_sql(ExternalEntityEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EEEVT\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityEvent_c_proxy_sql(ExternalEntityEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EEEVT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityEvent_c_attr_sql(ExternalEntityEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getEeevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNumb());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getMning().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getIs_lbl_u());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getUnq_lbl().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDrv_lbl().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ExternalEntityDataItem_c_sql(ExternalEntityDataItem_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EEDI\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntityDataItem_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntityDataItem_c_proxy_sql(ExternalEntityDataItem_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EEDI_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntityDataItem_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntityDataItem_c_attr_sql(ExternalEntityDataItem_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getEedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ExternalEntity_c_sql(ExternalEntity_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EE\n\tVALUES (" ); //$NON-NLS-1$
  write_ExternalEntity_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExternalEntity_c_proxy_sql(ExternalEntity_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExternalEntity_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExternalEntity_c_attr_sql(ExternalEntity_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getKey_lett().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRealized_class_path().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsrealized()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_Enumerator_c_sql(Enumerator_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_ENUM\n\tVALUES (" ); //$NON-NLS-1$
  write_Enumerator_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Enumerator_c_proxy_sql(Enumerator_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_ENUM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Enumerator_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Enumerator_c_attr_sql(Enumerator_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getEnum_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEdt_dt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEdt_dt_idCachedValue():inst.getEdt_dt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_enum_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_enum_idCachedValue():inst.getPrevious_enum_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EnumerationDataType_c_sql(EnumerationDataType_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EDT\n\tVALUES (" ); //$NON-NLS-1$
  write_EnumerationDataType_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EnumerationDataType_c_proxy_sql(EnumerationDataType_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EDT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EnumerationDataType_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EnumerationDataType_c_attr_sql(EnumerationDataType_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EePackageInPackage_c_sql(EePackageInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_EEPIP\n\tVALUES (" ); //$NON-NLS-1$
  write_EePackageInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EePackageInPackage_c_proxy_sql(EePackageInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_EEPIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EePackageInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EePackageInPackage_c_attr_sql(EePackageInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEepack_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEepack_idCachedValue():inst.getEepack_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Domain_c_sql(Domain_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_DOM\n\tVALUES (" ); //$NON-NLS-1$
  write_Domain_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Domain_c_proxy_sql(Domain_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_DOM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Domain_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Domain_c_attr_sql(Domain_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getFull_der());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getConfig_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Dimensions_c_sql(Dimensions_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_DIM\n\tVALUES (" ); //$NON-NLS-1$
  write_Dimensions_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Dimensions_c_proxy_sql(Dimensions_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_DIM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Dimensions_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Dimensions_c_attr_sql(Dimensions_c inst)
throws IOException
{
  m_fh.print(inst.getElementcount());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getDimensioncount());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSparm_idCachedValue():inst.getSparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBparm_idCachedValue():inst.getBparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBrg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBrg_idCachedValue():inst.getBrg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTparm_idCachedValue():inst.getTparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTfr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTfr_idCachedValue():inst.getTfr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMember_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMember_idCachedValue():inst.getMember_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPp_idCachedValue():inst.getPp_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmedi_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmedi_idCachedValue():inst.getSmedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getDim_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getVar_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getVar_idCachedValue():inst.getVar_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DatatypeInSuppression_c_sql(DatatypeInSuppression_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_DIS\n\tVALUES (" ); //$NON-NLS-1$
  write_DatatypeInSuppression_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DatatypeInSuppression_c_proxy_sql(DatatypeInSuppression_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_DIS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DatatypeInSuppression_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DatatypeInSuppression_c_attr_sql(DatatypeInSuppression_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DataTypePackageInPackage_c_sql(DataTypePackageInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_DPIP\n\tVALUES (" ); //$NON-NLS-1$
  write_DataTypePackageInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DataTypePackageInPackage_c_proxy_sql(DataTypePackageInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_DPIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DataTypePackageInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DataTypePackageInPackage_c_attr_sql(DataTypePackageInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DataTypePackage_c_sql(DataTypePackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_DPK\n\tVALUES (" ); //$NON-NLS-1$
  write_DataTypePackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DataTypePackage_c_proxy_sql(DataTypePackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_DPK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DataTypePackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DataTypePackage_c_attr_sql(DataTypePackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_package_idCachedValue():inst.getParent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DataTypeInPackage_c_sql(DataTypeInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_DIP\n\tVALUES (" ); //$NON-NLS-1$
  write_DataTypeInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DataTypeInPackage_c_proxy_sql(DataTypeInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_DIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DataTypeInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DataTypeInPackage_c_attr_sql(DataTypeInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DataType_c_sql(DataType_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_DT\n\tVALUES (" ); //$NON-NLS-1$
  write_DataType_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DataType_c_proxy_sql(DataType_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_DT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DataType_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DataType_c_attr_sql(DataType_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDefaultvalue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_CoreDataType_c_sql(CoreDataType_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_CDT\n\tVALUES (" ); //$NON-NLS-1$
  write_CoreDataType_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CoreDataType_c_proxy_sql(CoreDataType_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_CDT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CoreDataType_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CoreDataType_c_attr_sql(CoreDataType_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCore_typ());
}
void write_BridgeParameter_c_sql(BridgeParameter_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_BPARM\n\tVALUES (" ); //$NON-NLS-1$
  write_BridgeParameter_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BridgeParameter_c_proxy_sql(BridgeParameter_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_BPARM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BridgeParameter_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BridgeParameter_c_attr_sql(BridgeParameter_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getBparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBrg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBrg_idCachedValue():inst.getBrg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBy_ref());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_bparm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_bparm_idCachedValue():inst.getPrevious_bparm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Bridge_c_sql(Bridge_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO S_BRG\n\tVALUES (" ); //$NON-NLS-1$
  write_Bridge_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Bridge_c_proxy_sql(Bridge_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO S_BRG_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Bridge_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Bridge_c_attr_sql(Bridge_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getBrg_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBrg_typ());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getReturn_dimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_SymbolicConstant_c_sql(SymbolicConstant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CNST_SYC\n\tVALUES (" ); //$NON-NLS-1$
  write_SymbolicConstant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SymbolicConstant_c_proxy_sql(SymbolicConstant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CNST_SYC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SymbolicConstant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SymbolicConstant_c_attr_sql(SymbolicConstant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getConst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConstant_spec_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConstant_spec_idCachedValue():inst.getConstant_spec_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_const_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_const_idCachedValue():inst.getPrevious_const_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_dt_dt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_dt_dt_idCachedValue():inst.getPrevious_dt_dt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_LiteralSymbolicConstant_c_sql(LiteralSymbolicConstant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CNST_LSC\n\tVALUES (" ); //$NON-NLS-1$
  write_LiteralSymbolicConstant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LiteralSymbolicConstant_c_proxy_sql(LiteralSymbolicConstant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CNST_LSC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LiteralSymbolicConstant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LiteralSymbolicConstant_c_attr_sql(LiteralSymbolicConstant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConst_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConst_idCachedValue():inst.getConst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_LeafSymbolicConstant_c_sql(LeafSymbolicConstant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CNST_LFSC\n\tVALUES (" ); //$NON-NLS-1$
  write_LeafSymbolicConstant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LeafSymbolicConstant_c_proxy_sql(LeafSymbolicConstant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CNST_LFSC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LeafSymbolicConstant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LeafSymbolicConstant_c_attr_sql(LeafSymbolicConstant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConst_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConst_idCachedValue():inst.getConst_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ConstantSpecification_c_sql(ConstantSpecification_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CNST_CSP\n\tVALUES (" ); //$NON-NLS-1$
  write_ConstantSpecification_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ConstantSpecification_c_proxy_sql(ConstantSpecification_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CNST_CSP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ConstantSpecification_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ConstantSpecification_c_attr_sql(ConstantSpecification_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConstant_spec_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConstant_spec_idCachedValue():inst.getConstant_spec_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalgroupname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ConstantInPackage_c_sql(ConstantInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CNST_CIP\n\tVALUES (" ); //$NON-NLS-1$
  write_ConstantInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ConstantInPackage_c_proxy_sql(ConstantInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CNST_CIP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ConstantInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ConstantInPackage_c_attr_sql(ConstantInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConstant_spec_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConstant_spec_idCachedValue():inst.getConstant_spec_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_RequiredSignal_c_sql(RequiredSignal_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SPR_RS\n\tVALUES (" ); //$NON-NLS-1$
  write_RequiredSignal_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_RequiredSignal_c_proxy_sql(RequiredSignal_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SPR_RS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_RequiredSignal_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_RequiredSignal_c_attr_sql(RequiredSignal_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
}
void write_RequiredOperation_c_sql(RequiredOperation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SPR_RO\n\tVALUES (" ); //$NON-NLS-1$
  write_RequiredOperation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_RequiredOperation_c_proxy_sql(RequiredOperation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SPR_RO_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_RequiredOperation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_RequiredOperation_c_attr_sql(RequiredOperation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
}
void write_RequiredExecutableProperty_c_sql(RequiredExecutableProperty_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SPR_REP\n\tVALUES (" ); //$NON-NLS-1$
  write_RequiredExecutableProperty_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_RequiredExecutableProperty_c_proxy_sql(RequiredExecutableProperty_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SPR_REP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_RequiredExecutableProperty_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_RequiredExecutableProperty_c_attr_sql(RequiredExecutableProperty_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getExecutableproperty_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getExecutableproperty_idCachedValue():inst.getExecutableproperty_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRequirement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRequirement_idCachedValue():inst.getRequirement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ProvidedSignal_c_sql(ProvidedSignal_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SPR_PS\n\tVALUES (" ); //$NON-NLS-1$
  write_ProvidedSignal_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ProvidedSignal_c_proxy_sql(ProvidedSignal_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SPR_PS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ProvidedSignal_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ProvidedSignal_c_attr_sql(ProvidedSignal_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
}
void write_ProvidedOperation_c_sql(ProvidedOperation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SPR_PO\n\tVALUES (" ); //$NON-NLS-1$
  write_ProvidedOperation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ProvidedOperation_c_proxy_sql(ProvidedOperation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SPR_PO_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ProvidedOperation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ProvidedOperation_c_attr_sql(ProvidedOperation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getAction_semantics_internal().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSuc_pars());
}
void write_ProvidedExecutableProperty_c_sql(ProvidedExecutableProperty_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO SPR_PEP\n\tVALUES (" ); //$NON-NLS-1$
  write_ProvidedExecutableProperty_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ProvidedExecutableProperty_c_proxy_sql(ProvidedExecutableProperty_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO SPR_PEP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ProvidedExecutableProperty_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ProvidedExecutableProperty_c_attr_sql(ProvidedExecutableProperty_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getExecutableproperty_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getExecutableproperty_idCachedValue():inst.getExecutableproperty_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getProvision_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getProvision_idCachedValue():inst.getProvision_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Satisfaction_c_sql(Satisfaction_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_SF\n\tVALUES (" ); //$NON-NLS-1$
  write_Satisfaction_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Satisfaction_c_proxy_sql(Satisfaction_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_SF_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Satisfaction_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Satisfaction_c_attr_sql(Satisfaction_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRequirement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRequirement_idCachedValue():inst.getRequirement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getProvision_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getProvision_idCachedValue():inst.getProvision_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Requirement_c_sql(Requirement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_R\n\tVALUES (" ); //$NON-NLS-1$
  write_Requirement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Requirement_c_proxy_sql(Requirement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_R_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Requirement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Requirement_c_attr_sql(Requirement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRequirement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRequirement_idCachedValue():inst.getRequirement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getReversepathfromcomponent().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Provision_c_sql(Provision_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_P\n\tVALUES (" ); //$NON-NLS-1$
  write_Provision_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Provision_c_proxy_sql(Provision_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_P_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Provision_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Provision_c_attr_sql(Provision_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getProvision_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getProvision_idCachedValue():inst.getProvision_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getInformalname().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getPathfromcomponent().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_PropertyParameter_c_sql(PropertyParameter_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_PP\n\tVALUES (" ); //$NON-NLS-1$
  write_PropertyParameter_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_PropertyParameter_c_proxy_sql(PropertyParameter_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_PP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_PropertyParameter_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_PropertyParameter_c_attr_sql(PropertyParameter_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getPp_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSignal_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSignal_idCachedValue():inst.getSignal_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBy_ref());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_pp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_pp_idCachedValue():inst.getPrevious_pp_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Port_c_sql(Port_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_PO\n\tVALUES (" ); //$NON-NLS-1$
  write_Port_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Port_c_proxy_sql(Port_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_PO_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Port_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Port_c_attr_sql(Port_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getDonotshowportoncanvas()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_InterfaceSignal_c_sql(InterfaceSignal_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_AS\n\tVALUES (" ); //$NON-NLS-1$
  write_InterfaceSignal_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InterfaceSignal_c_proxy_sql(InterfaceSignal_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_AS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InterfaceSignal_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InterfaceSignal_c_attr_sql(InterfaceSignal_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getDirection());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_idCachedValue():inst.getPrevious_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InterfaceReferenceInDelegation_c_sql(InterfaceReferenceInDelegation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_RID\n\tVALUES (" ); //$NON-NLS-1$
  write_InterfaceReferenceInDelegation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InterfaceReferenceInDelegation_c_proxy_sql(InterfaceReferenceInDelegation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_RID_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InterfaceReferenceInDelegation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InterfaceReferenceInDelegation_c_attr_sql(InterfaceReferenceInDelegation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getReference_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getReference_idCachedValue():inst.getReference_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDelegation_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDelegation_idCachedValue():inst.getDelegation_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InterfaceReference_c_sql(InterfaceReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_IR\n\tVALUES (" ); //$NON-NLS-1$
  write_InterfaceReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InterfaceReference_c_proxy_sql(InterfaceReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_IR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InterfaceReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InterfaceReference_c_attr_sql(InterfaceReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFormal_interface_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFormal_interface_idCachedValue():inst.getFormal_interface_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDelegation_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDelegation_idCachedValue():inst.getDelegation_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPort_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPort_idCachedValue():inst.getPort_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_InterfaceOperation_c_sql(InterfaceOperation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_IO\n\tVALUES (" ); //$NON-NLS-1$
  write_InterfaceOperation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InterfaceOperation_c_proxy_sql(InterfaceOperation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_IO_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InterfaceOperation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InterfaceOperation_c_attr_sql(InterfaceOperation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDt_idCachedValue():inst.getDt_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getDirection());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getReturn_dimensions().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_idCachedValue():inst.getPrevious_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Interface_c_sql(Interface_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_I\n\tVALUES (" ); //$NON-NLS-1$
  write_Interface_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Interface_c_proxy_sql(Interface_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_I_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Interface_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Interface_c_attr_sql(Interface_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ExecutableProperty_c_sql(ExecutableProperty_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_EP\n\tVALUES (" ); //$NON-NLS-1$
  write_ExecutableProperty_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ExecutableProperty_c_proxy_sql(ExecutableProperty_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_EP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ExecutableProperty_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ExecutableProperty_c_attr_sql(ExecutableProperty_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getInterface_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getInterface_idCachedValue():inst.getInterface_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getDirection());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Delegation_c_sql(Delegation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_DG\n\tVALUES (" ); //$NON-NLS-1$
  write_Delegation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Delegation_c_proxy_sql(Delegation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_DG_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Delegation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Delegation_c_attr_sql(Delegation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ComponentPackageInPackage_c_sql(ComponentPackageInPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CP_CPINP\n\tVALUES (" ); //$NON-NLS-1$
  write_ComponentPackageInPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ComponentPackageInPackage_c_proxy_sql(ComponentPackageInPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CP_CPINP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ComponentPackageInPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ComponentPackageInPackage_c_attr_sql(ComponentPackageInPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_package_idCachedValue():inst.getParent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ComponentPackage_c_sql(ComponentPackage_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CP_CP\n\tVALUES (" ); //$NON-NLS-1$
  write_ComponentPackage_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ComponentPackage_c_proxy_sql(ComponentPackage_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CP_CP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ComponentPackage_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ComponentPackage_c_attr_sql(ComponentPackage_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParentlink_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParentlink_idCachedValue():inst.getParentlink_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getContaining_sys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getContaining_sys_idCachedValue():inst.getContaining_sys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_DomainAsComponent_c_sql(DomainAsComponent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CN_DC\n\tVALUES (" ); //$NON-NLS-1$
  write_DomainAsComponent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DomainAsComponent_c_proxy_sql(DomainAsComponent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CN_DC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DomainAsComponent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DomainAsComponent_c_attr_sql(DomainAsComponent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ComponentInComponent_c_sql(ComponentInComponent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CN_CIC\n\tVALUES (" ); //$NON-NLS-1$
  write_ComponentInComponent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ComponentInComponent_c_proxy_sql(ComponentInComponent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CN_CIC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ComponentInComponent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ComponentInComponent_c_attr_sql(ComponentInComponent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_idCachedValue():inst.getParent_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ImportedRequirement_c_sql(ImportedRequirement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CL_IR\n\tVALUES (" ); //$NON-NLS-1$
  write_ImportedRequirement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ImportedRequirement_c_proxy_sql(ImportedRequirement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CL_IR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ImportedRequirement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ImportedRequirement_c_attr_sql(ImportedRequirement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSatisfaction_element_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSatisfaction_element_idCachedValue():inst.getSatisfaction_element_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ImportedReference_c_sql(ImportedReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CL_IIR\n\tVALUES (" ); //$NON-NLS-1$
  write_ImportedReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ImportedReference_c_proxy_sql(ImportedReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CL_IIR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ImportedReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ImportedReference_c_attr_sql(ImportedReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRef_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRef_idCachedValue():inst.getRef_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getImportedcomp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getImportedcomp_idCachedValue():inst.getImportedcomp_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDelegation_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDelegation_idCachedValue():inst.getDelegation_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ImportedProvisionInSatisfaction_c_sql(ImportedProvisionInSatisfaction_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CL_IPINS\n\tVALUES (" ); //$NON-NLS-1$
  write_ImportedProvisionInSatisfaction_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ImportedProvisionInSatisfaction_c_proxy_sql(ImportedProvisionInSatisfaction_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CL_IPINS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ImportedProvisionInSatisfaction_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ImportedProvisionInSatisfaction_c_attr_sql(ImportedProvisionInSatisfaction_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSatisfaction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSatisfaction_idCachedValue():inst.getSatisfaction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getImportedprovision_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getImportedprovision_idCachedValue():inst.getImportedprovision_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ImportedProvision_c_sql(ImportedProvision_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CL_IP\n\tVALUES (" ); //$NON-NLS-1$
  write_ImportedProvision_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ImportedProvision_c_proxy_sql(ImportedProvision_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CL_IP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ImportedProvision_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ImportedProvision_c_attr_sql(ImportedProvision_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ComponentReference_c_sql(ComponentReference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CL_IC\n\tVALUES (" ); //$NON-NLS-1$
  write_ComponentReference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ComponentReference_c_proxy_sql(ComponentReference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CL_IC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ComponentReference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ComponentReference_c_attr_sql(ComponentReference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssignedcomp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssignedcomp_idCachedValue():inst.getAssignedcomp_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParentcomp_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParentcomp_idCachedValue():inst.getParentcomp_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_package_idCachedValue():inst.getComponent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getClassifiername().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Component_c_sql(Component_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO C_C\n\tVALUES (" ); //$NON-NLS-1$
  write_Component_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Component_c_proxy_sql(Component_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO C_C_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Component_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Component_c_attr_sql(Component_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getNestedcomponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getNestedcomponent_idCachedValue():inst.getNestedcomponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRoot_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRoot_package_idCachedValue():inst.getRoot_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsrealized()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRealized_class_path().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_SmToSmEventComm_c_sql(SmToSmEventComm_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_SMSME\n\tVALUES (" ); //$NON-NLS-1$
  write_SmToSmEventComm_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SmToSmEventComm_c_proxy_sql(SmToSmEventComm_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_SMSME_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SmToSmEventComm_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SmToSmEventComm_c_attr_sql(SmToSmEventComm_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCpath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCpath_idCachedValue():inst.getCpath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SmToSmCommPath_c_sql(SmToSmCommPath_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_SMSMC\n\tVALUES (" ); //$NON-NLS-1$
  write_SmToSmCommPath_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SmToSmCommPath_c_proxy_sql(SmToSmCommPath_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_SMSMC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SmToSmCommPath_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SmToSmCommPath_c_attr_sql(SmToSmCommPath_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCpath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCpath_idCachedValue():inst.getCpath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOsm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOsm_idCachedValue():inst.getOsm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDsm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDsm_idCachedValue():inst.getDsm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  if ( ! m_is_fully_derived )
  {
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOiobj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOiobj_idCachedValue():inst.getOiobj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDiobj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDiobj_idCachedValue():inst.getDiobj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  }
}
void write_SmToObjAttributeAccess_c_sql(SmToObjAttributeAccess_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_SMOAA\n\tVALUES (" ); //$NON-NLS-1$
  write_SmToObjAttributeAccess_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SmToObjAttributeAccess_c_proxy_sql(SmToObjAttributeAccess_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_SMOAA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SmToObjAttributeAccess_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SmToObjAttributeAccess_c_attr_sql(SmToObjAttributeAccess_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getApath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getApath_idCachedValue():inst.getApath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SmToObjAccessPath_c_sql(SmToObjAccessPath_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_SMOA\n\tVALUES (" ); //$NON-NLS-1$
  write_SmToObjAccessPath_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SmToObjAccessPath_c_proxy_sql(SmToObjAccessPath_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_SMOA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SmToObjAccessPath_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SmToObjAccessPath_c_attr_sql(SmToObjAccessPath_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getApath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getApath_idCachedValue():inst.getApath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIobj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIobj_idCachedValue():inst.getIobj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SmToEeEventComm_c_sql(SmToEeEventComm_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_SMEEE\n\tVALUES (" ); //$NON-NLS-1$
  write_SmToEeEventComm_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SmToEeEventComm_c_proxy_sql(SmToEeEventComm_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_SMEEE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SmToEeEventComm_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SmToEeEventComm_c_attr_sql(SmToEeEventComm_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCpath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCpath_idCachedValue():inst.getCpath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEeevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEeevt_idCachedValue():inst.getEeevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SmToEeDataItemAccess_c_sql(SmToEeDataItemAccess_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_SMEED\n\tVALUES (" ); //$NON-NLS-1$
  write_SmToEeDataItemAccess_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SmToEeDataItemAccess_c_proxy_sql(SmToEeDataItemAccess_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_SMEED_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SmToEeDataItemAccess_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SmToEeDataItemAccess_c_attr_sql(SmToEeDataItemAccess_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getApath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getApath_idCachedValue():inst.getApath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEedi_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEedi_idCachedValue():inst.getEedi_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SmToEeCommPath_c_sql(SmToEeCommPath_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_SMEEC\n\tVALUES (" ); //$NON-NLS-1$
  write_SmToEeCommPath_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SmToEeCommPath_c_proxy_sql(SmToEeCommPath_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_SMEEC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SmToEeCommPath_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SmToEeCommPath_c_attr_sql(SmToEeCommPath_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCpath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCpath_idCachedValue():inst.getCpath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEemod_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEemod_idCachedValue():inst.getEemod_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SmToEeAccessPath_c_sql(SmToEeAccessPath_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_SMEEA\n\tVALUES (" ); //$NON-NLS-1$
  write_SmToEeAccessPath_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SmToEeAccessPath_c_proxy_sql(SmToEeAccessPath_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_SMEEA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SmToEeAccessPath_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SmToEeAccessPath_c_attr_sql(SmToEeAccessPath_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getApath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getApath_idCachedValue():inst.getApath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEemod_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEemod_idCachedValue():inst.getEemod_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EeToSmEventComm_c_sql(EeToSmEventComm_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_EESME\n\tVALUES (" ); //$NON-NLS-1$
  write_EeToSmEventComm_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EeToSmEventComm_c_proxy_sql(EeToSmEventComm_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_EESME_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EeToSmEventComm_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EeToSmEventComm_c_attr_sql(EeToSmEventComm_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCpath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCpath_idCachedValue():inst.getCpath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmevt_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmevt_idCachedValue():inst.getSmevt_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_EeToSmCommPath_c_sql(EeToSmCommPath_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_EESMC\n\tVALUES (" ); //$NON-NLS-1$
  write_EeToSmCommPath_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_EeToSmCommPath_c_proxy_sql(EeToSmCommPath_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_EESMC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_EeToSmCommPath_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_EeToSmCommPath_c_attr_sql(EeToSmCommPath_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCpath_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCpath_idCachedValue():inst.getCpath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEemod_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEemod_idCachedValue():inst.getEemod_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEe_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEe_idCachedValue():inst.getEe_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CommunicationPath_c_sql(CommunicationPath_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_COMM\n\tVALUES (" ); //$NON-NLS-1$
  write_CommunicationPath_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CommunicationPath_c_proxy_sql(CommunicationPath_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_COMM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CommunicationPath_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CommunicationPath_c_attr_sql(CommunicationPath_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getCpath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_AccessPath_c_sql(AccessPath_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO CA_ACC\n\tVALUES (" ); //$NON-NLS-1$
  write_AccessPath_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AccessPath_c_proxy_sql(AccessPath_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO CA_ACC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AccessPath_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AccessPath_c_attr_sql(AccessPath_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getApath_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIobj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIobj_idCachedValue():inst.getIobj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ParticipantInCommunication_c_sql(ParticipantInCommunication_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO COMM_PIC\n\tVALUES (" ); //$NON-NLS-1$
  write_ParticipantInCommunication_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ParticipantInCommunication_c_proxy_sql(ParticipantInCommunication_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO COMM_PIC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ParticipantInCommunication_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ParticipantInCommunication_c_attr_sql(ParticipantInCommunication_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPart_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPart_idCachedValue():inst.getPart_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_MessageInCommunication_c_sql(MessageInCommunication_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO COMM_MIC\n\tVALUES (" ); //$NON-NLS-1$
  write_MessageInCommunication_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_MessageInCommunication_c_proxy_sql(MessageInCommunication_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO COMM_MIC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_MessageInCommunication_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_MessageInCommunication_c_attr_sql(MessageInCommunication_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getMsg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getMsg_idCachedValue():inst.getMsg_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CommunicationLink_c_sql(CommunicationLink_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO COMM_LNK\n\tVALUES (" ); //$NON-NLS-1$
  write_CommunicationLink_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CommunicationLink_c_proxy_sql(CommunicationLink_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO COMM_LNK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CommunicationLink_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CommunicationLink_c_attr_sql(CommunicationLink_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getLink_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getNumb().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getStarttext().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getEndtext().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsformal()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getStartvisibility());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEndvisibility());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStart_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStart_part_idCachedValue():inst.getStart_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDestination_part_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDestination_part_idCachedValue():inst.getDestination_part_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_CommunicationInCommunication_c_sql(CommunicationInCommunication_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO COMM_CIC\n\tVALUES (" ); //$NON-NLS-1$
  write_CommunicationInCommunication_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_CommunicationInCommunication_c_proxy_sql(CommunicationInCommunication_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO COMM_CIC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_CommunicationInCommunication_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_CommunicationInCommunication_c_attr_sql(CommunicationInCommunication_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Communication_c_sql(Communication_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO COMM_COMM\n\tVALUES (" ); //$NON-NLS-1$
  write_Communication_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Communication_c_proxy_sql(Communication_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO COMM_COMM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Communication_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Communication_c_attr_sql(Communication_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCic_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCic_package_idCachedValue():inst.getCic_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_package_idCachedValue():inst.getComponent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_WhileStmt_c_sql(WhileStmt_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_WHL\n\tVALUES (" ); //$NON-NLS-1$
  write_WhileStmt_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_WhileStmt_c_proxy_sql(WhileStmt_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_WHL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_WhileStmt_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_WhileStmt_c_attr_sql(WhileStmt_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_TransitionActionBody_c_sql(TransitionActionBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_TAB\n\tVALUES (" ); //$NON-NLS-1$
  write_TransitionActionBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_TransitionActionBody_c_proxy_sql(TransitionActionBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_TAB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_TransitionActionBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_TransitionActionBody_c_attr_sql(TransitionActionBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAct_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAct_idCachedValue():inst.getAct_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Statement_c_sql(Statement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_SMT\n\tVALUES (" ); //$NON-NLS-1$
  write_Statement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Statement_c_proxy_sql(Statement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_SMT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Statement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Statement_c_attr_sql(Statement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_statement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_statement_idCachedValue():inst.getPrevious_statement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getLinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getStartposition());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_StateActionBody_c_sql(StateActionBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_SAB\n\tVALUES (" ); //$NON-NLS-1$
  write_StateActionBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_StateActionBody_c_proxy_sql(StateActionBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_SAB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_StateActionBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_StateActionBody_c_attr_sql(StateActionBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSm_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSm_idCachedValue():inst.getSm_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAct_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAct_idCachedValue():inst.getAct_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_RequiredSignalBody_c_sql(RequiredSignalBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_RSB\n\tVALUES (" ); //$NON-NLS-1$
  write_RequiredSignalBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_RequiredSignalBody_c_proxy_sql(RequiredSignalBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_RSB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_RequiredSignalBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_RequiredSignalBody_c_attr_sql(RequiredSignalBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_RequiredOperationBody_c_sql(RequiredOperationBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_ROB\n\tVALUES (" ); //$NON-NLS-1$
  write_RequiredOperationBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_RequiredOperationBody_c_proxy_sql(RequiredOperationBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_ROB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_RequiredOperationBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_RequiredOperationBody_c_attr_sql(RequiredOperationBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ProvidedSignalBody_c_sql(ProvidedSignalBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_PSB\n\tVALUES (" ); //$NON-NLS-1$
  write_ProvidedSignalBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ProvidedSignalBody_c_proxy_sql(ProvidedSignalBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_PSB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ProvidedSignalBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ProvidedSignalBody_c_attr_sql(ProvidedSignalBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ProvidedOperationBody_c_sql(ProvidedOperationBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_POB\n\tVALUES (" ); //$NON-NLS-1$
  write_ProvidedOperationBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ProvidedOperationBody_c_proxy_sql(ProvidedOperationBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_POB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ProvidedOperationBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ProvidedOperationBody_c_attr_sql(ProvidedOperationBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_OperationBody_c_sql(OperationBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_OPB\n\tVALUES (" ); //$NON-NLS-1$
  write_OperationBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_OperationBody_c_proxy_sql(OperationBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_OPB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_OperationBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_OperationBody_c_attr_sql(OperationBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTfr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTfr_idCachedValue():inst.getTfr_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_IfStmt_c_sql(IfStmt_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_IF\n\tVALUES (" ); //$NON-NLS-1$
  write_IfStmt_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_IfStmt_c_proxy_sql(IfStmt_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_IF_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_IfStmt_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_IfStmt_c_attr_sql(IfStmt_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElif_statement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElif_statement_idCachedValue():inst.getElif_statement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElse_statement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElse_statement_idCachedValue():inst.getElse_statement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_FunctionBody_c_sql(FunctionBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_FNB\n\tVALUES (" ); //$NON-NLS-1$
  write_FunctionBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FunctionBody_c_proxy_sql(FunctionBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_FNB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FunctionBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FunctionBody_c_attr_sql(FunctionBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSync_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSync_idCachedValue():inst.getSync_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ForStmt_c_sql(ForStmt_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_FOR\n\tVALUES (" ); //$NON-NLS-1$
  write_ForStmt_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ForStmt_c_proxy_sql(ForStmt_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_FOR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ForStmt_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ForStmt_c_attr_sql(ForStmt_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIs_implicit()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getLoop_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getLoop_var_idCachedValue():inst.getLoop_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSet_var_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSet_var_idCachedValue():inst.getSet_var_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ElseifStmt_c_sql(ElseifStmt_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_EL\n\tVALUES (" ); //$NON-NLS-1$
  write_ElseifStmt_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ElseifStmt_c_proxy_sql(ElseifStmt_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_EL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ElseifStmt_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ElseifStmt_c_attr_sql(ElseifStmt_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getValue_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getValue_idCachedValue():inst.getValue_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIf_statement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIf_statement_idCachedValue():inst.getIf_statement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ElseStmt_c_sql(ElseStmt_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_E\n\tVALUES (" ); //$NON-NLS-1$
  write_ElseStmt_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ElseStmt_c_proxy_sql(ElseStmt_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_E_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ElseStmt_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ElseStmt_c_attr_sql(ElseStmt_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIf_statement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIf_statement_idCachedValue():inst.getIf_statement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DerivedAttributeBody_c_sql(DerivedAttributeBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_DAB\n\tVALUES (" ); //$NON-NLS-1$
  write_DerivedAttributeBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DerivedAttributeBody_c_proxy_sql(DerivedAttributeBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_DAB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DerivedAttributeBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DerivedAttributeBody_c_attr_sql(DerivedAttributeBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAttr_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAttr_idCachedValue():inst.getAttr_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getAttributewritten()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_Control_c_sql(Control_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_CTL\n\tVALUES (" ); //$NON-NLS-1$
  write_Control_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Control_c_proxy_sql(Control_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_CTL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Control_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Control_c_attr_sql(Control_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Continue_c_sql(Continue_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_CON\n\tVALUES (" ); //$NON-NLS-1$
  write_Continue_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Continue_c_proxy_sql(Continue_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_CON_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Continue_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Continue_c_attr_sql(Continue_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_BridgeBody_c_sql(BridgeBody_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_BRB\n\tVALUES (" ); //$NON-NLS-1$
  write_BridgeBody_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_BridgeBody_c_proxy_sql(BridgeBody_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_BRB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_BridgeBody_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_BridgeBody_c_attr_sql(BridgeBody_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBrg_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBrg_idCachedValue():inst.getBrg_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Break_c_sql(Break_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_BRK\n\tVALUES (" ); //$NON-NLS-1$
  write_Break_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Break_c_proxy_sql(Break_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_BRK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Break_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Break_c_attr_sql(Break_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStatement_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStatement_idCachedValue():inst.getStatement_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Body_c_sql(Body_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_ACT\n\tVALUES (" ); //$NON-NLS-1$
  write_Body_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Body_c_proxy_sql(Body_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_ACT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Body_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Body_c_attr_sql(Body_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getType().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getLooplevel());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getBlock_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getBlock_idCachedValue():inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getCurrentscope_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getCurrentscope_idCachedValue():inst.getCurrentscope_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "0" );  //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLabel().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParsed_block_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParsed_block_idCachedValue():inst.getParsed_block_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Block_c_sql(Block_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO ACT_BLK\n\tVALUES (" ); //$NON-NLS-1$
  write_Block_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Block_c_proxy_sql(Block_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO ACT_BLK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Block_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Block_c_attr_sql(Block_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getBlock_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getWherespecok()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getInwherespec()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getSelectedfound()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getTempbuffer().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSupdata1().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getSupdata2().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentline());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentcol());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentkeyletterslinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentkeyletterscolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentparameterassignmentnamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentparameterassignmentnamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentassociationnumberlinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentassociationnumbercolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentassociationphraselinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentassociationphrasecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentdatatypenamelinenumber());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCurrentdatatypenamecolumn());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getBlockinstackframecreated()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAction_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAction_idCachedValue():inst.getAction_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParsed_action_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParsed_action_idCachedValue():inst.getParsed_action_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SubtypeSupertypeAssociation_c_sql(SubtypeSupertypeAssociation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_SUBSUP\n\tVALUES (" ); //$NON-NLS-1$
  write_SubtypeSupertypeAssociation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SubtypeSupertypeAssociation_c_proxy_sql(SubtypeSupertypeAssociation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_SUBSUP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SubtypeSupertypeAssociation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SubtypeSupertypeAssociation_c_attr_sql(SubtypeSupertypeAssociation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SimpleAssociation_c_sql(SimpleAssociation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_SIMP\n\tVALUES (" ); //$NON-NLS-1$
  write_SimpleAssociation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SimpleAssociation_c_proxy_sql(SimpleAssociation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_SIMP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SimpleAssociation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SimpleAssociation_c_attr_sql(SimpleAssociation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ReferringClassInAssoc_c_sql(ReferringClassInAssoc_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_RGO\n\tVALUES (" ); //$NON-NLS-1$
  write_ReferringClassInAssoc_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ReferringClassInAssoc_c_proxy_sql(ReferringClassInAssoc_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_RGO_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ReferringClassInAssoc_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ReferringClassInAssoc_c_attr_sql(ReferringClassInAssoc_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ReferredToClassInAssoc_c_sql(ReferredToClassInAssoc_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_RTO\n\tVALUES (" ); //$NON-NLS-1$
  write_ReferredToClassInAssoc_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ReferredToClassInAssoc_c_proxy_sql(ReferredToClassInAssoc_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_RTO_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ReferredToClassInAssoc_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ReferredToClassInAssoc_c_attr_sql(ReferredToClassInAssoc_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getOid_idCachedValue():inst.getOid_id());
}
void write_LinkedAssociation_c_sql(LinkedAssociation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_ASSOC\n\tVALUES (" ); //$NON-NLS-1$
  write_LinkedAssociation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LinkedAssociation_c_proxy_sql(LinkedAssociation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_ASSOC_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LinkedAssociation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LinkedAssociation_c_attr_sql(LinkedAssociation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_DerivedAssociation_c_sql(DerivedAssociation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_COMP\n\tVALUES (" ); //$NON-NLS-1$
  write_DerivedAssociation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DerivedAssociation_c_proxy_sql(DerivedAssociation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_COMP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DerivedAssociation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DerivedAssociation_c_attr_sql(DerivedAssociation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRel_chn().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ClassInAssociation_c_sql(ClassInAssociation_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_OIR\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassInAssociation_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassInAssociation_c_proxy_sql(ClassInAssociation_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_OIR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassInAssociation_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassInAssociation_c_attr_sql(ClassInAssociation_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getIobj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIobj_idCachedValue():inst.getIobj_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ClassAsSupertype_c_sql(ClassAsSupertype_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_SUPER\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsSupertype_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsSupertype_c_proxy_sql(ClassAsSupertype_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_SUPER_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsSupertype_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsSupertype_c_attr_sql(ClassAsSupertype_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ClassAsSubtype_c_sql(ClassAsSubtype_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_SUB\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsSubtype_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsSubtype_c_proxy_sql(ClassAsSubtype_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_SUB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsSubtype_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsSubtype_c_attr_sql(ClassAsSubtype_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ClassAsSimpleParticipant_c_sql(ClassAsSimpleParticipant_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_PART\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsSimpleParticipant_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsSimpleParticipant_c_proxy_sql(ClassAsSimpleParticipant_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_PART_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsSimpleParticipant_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsSimpleParticipant_c_attr_sql(ClassAsSimpleParticipant_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCond());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getTxt_phrs().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ClassAsSimpleFormalizer_c_sql(ClassAsSimpleFormalizer_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_FORM\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsSimpleFormalizer_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsSimpleFormalizer_c_proxy_sql(ClassAsSimpleFormalizer_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_FORM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsSimpleFormalizer_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsSimpleFormalizer_c_attr_sql(ClassAsSimpleFormalizer_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCond());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getTxt_phrs().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ClassAsLink_c_sql(ClassAsLink_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_ASSR\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsLink_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsLink_c_proxy_sql(ClassAsLink_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_ASSR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsLink_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsLink_c_attr_sql(ClassAsLink_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
}
void write_ClassAsDerivedOtherSide_c_sql(ClassAsDerivedOtherSide_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_COTH\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsDerivedOtherSide_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsDerivedOtherSide_c_proxy_sql(ClassAsDerivedOtherSide_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_COTH_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsDerivedOtherSide_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsDerivedOtherSide_c_attr_sql(ClassAsDerivedOtherSide_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCond());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getTxt_phrs().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ClassAsDerivedOneSide_c_sql(ClassAsDerivedOneSide_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_CONE\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsDerivedOneSide_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsDerivedOneSide_c_proxy_sql(ClassAsDerivedOneSide_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_CONE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsDerivedOneSide_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsDerivedOneSide_c_attr_sql(ClassAsDerivedOneSide_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCond());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getTxt_phrs().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ClassAsAssociatedOtherSide_c_sql(ClassAsAssociatedOtherSide_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_AOTH\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsAssociatedOtherSide_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsAssociatedOtherSide_c_proxy_sql(ClassAsAssociatedOtherSide_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_AOTH_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsAssociatedOtherSide_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsAssociatedOtherSide_c_attr_sql(ClassAsAssociatedOtherSide_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCond());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getTxt_phrs().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ClassAsAssociatedOneSide_c_sql(ClassAsAssociatedOneSide_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_AONE\n\tVALUES (" ); //$NON-NLS-1$
  write_ClassAsAssociatedOneSide_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ClassAsAssociatedOneSide_c_proxy_sql(ClassAsAssociatedOneSide_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_AONE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ClassAsAssociatedOneSide_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ClassAsAssociatedOneSide_c_attr_sql(ClassAsAssociatedOneSide_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getObj_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getObj_idCachedValue():inst.getObj_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getOir_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getOir_idCachedValue():inst.getOir_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getMult());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getCond());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getTxt_phrs().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Association_c_sql(Association_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO R_REL\n\tVALUES (" ); //$NON-NLS-1$
  write_Association_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Association_c_proxy_sql(Association_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO R_REL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Association_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Association_c_attr_sql(Association_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getRel_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getRel_idCachedValue():inst.getRel_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getNumb());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_SendSignal_c_sql(SendSignal_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_SS\n\tVALUES (" ); //$NON-NLS-1$
  write_SendSignal_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_SendSignal_c_proxy_sql(SendSignal_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_SS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_SendSignal_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_SendSignal_c_attr_sql(SendSignal_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ObjectNode_c_sql(ObjectNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_OBJ\n\tVALUES (" ); //$NON-NLS-1$
  write_ObjectNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ObjectNode_c_proxy_sql(ObjectNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_OBJ_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ObjectNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ObjectNode_c_attr_sql(ObjectNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_InitialNode_c_sql(InitialNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_INI\n\tVALUES (" ); //$NON-NLS-1$
  write_InitialNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_InitialNode_c_proxy_sql(InitialNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_INI_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_InitialNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_InitialNode_c_attr_sql(InitialNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ForkJoinNode_c_sql(ForkJoinNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_FJ\n\tVALUES (" ); //$NON-NLS-1$
  write_ForkJoinNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ForkJoinNode_c_proxy_sql(ForkJoinNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_FJ_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ForkJoinNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ForkJoinNode_c_attr_sql(ForkJoinNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getGuardcondition().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_FlowFinalNode_c_sql(FlowFinalNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_FF\n\tVALUES (" ); //$NON-NLS-1$
  write_FlowFinalNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FlowFinalNode_c_proxy_sql(FlowFinalNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_FF_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FlowFinalNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FlowFinalNode_c_attr_sql(FlowFinalNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_DecisionMergeNode_c_sql(DecisionMergeNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_DM\n\tVALUES (" ); //$NON-NLS-1$
  write_DecisionMergeNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_DecisionMergeNode_c_proxy_sql(DecisionMergeNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_DM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_DecisionMergeNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_DecisionMergeNode_c_attr_sql(DecisionMergeNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ControlNode_c_sql(ControlNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_CTL\n\tVALUES (" ); //$NON-NLS-1$
  write_ControlNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ControlNode_c_proxy_sql(ControlNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_CTL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ControlNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ControlNode_c_attr_sql(ControlNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ActivityPartition_c_sql(ActivityPartition_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_AP\n\tVALUES (" ); //$NON-NLS-1$
  write_ActivityPartition_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActivityPartition_c_proxy_sql(ActivityPartition_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_AP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActivityPartition_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActivityPartition_c_attr_sql(ActivityPartition_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ActivityNode_c_sql(ActivityNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_N\n\tVALUES (" ); //$NON-NLS-1$
  write_ActivityNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActivityNode_c_proxy_sql(ActivityNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_N_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActivityNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActivityNode_c_attr_sql(ActivityNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ActivityInActivity_c_sql(ActivityInActivity_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_AIA\n\tVALUES (" ); //$NON-NLS-1$
  write_ActivityInActivity_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActivityInActivity_c_proxy_sql(ActivityInActivity_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_AIA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActivityInActivity_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActivityInActivity_c_attr_sql(ActivityInActivity_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ActivityFinalNode_c_sql(ActivityFinalNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_AF\n\tVALUES (" ); //$NON-NLS-1$
  write_ActivityFinalNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActivityFinalNode_c_proxy_sql(ActivityFinalNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_AF_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActivityFinalNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActivityFinalNode_c_attr_sql(ActivityFinalNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_ActivityEdge_c_sql(ActivityEdge_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_E\n\tVALUES (" ); //$NON-NLS-1$
  write_ActivityEdge_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActivityEdge_c_proxy_sql(ActivityEdge_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_E_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActivityEdge_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActivityEdge_c_attr_sql(ActivityEdge_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getGuard().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getTargetid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getTargetidCachedValue():inst.getTargetid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSourceid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSourceidCachedValue():inst.getSourceid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ActivityDiagramAction_c_sql(ActivityDiagramAction_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_GA\n\tVALUES (" ); //$NON-NLS-1$
  write_ActivityDiagramAction_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActivityDiagramAction_c_proxy_sql(ActivityDiagramAction_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_GA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActivityDiagramAction_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActivityDiagramAction_c_attr_sql(ActivityDiagramAction_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Activity_c_sql(Activity_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_A\n\tVALUES (" ); //$NON-NLS-1$
  write_Activity_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Activity_c_proxy_sql(Activity_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_A_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Activity_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Activity_c_attr_sql(Activity_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPackage_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPackage_idCachedValue():inst.getPackage_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDom_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDom_idCachedValue():inst.getDom_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSs_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSs_idCachedValue():inst.getSs_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getParent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getParent_package_idCachedValue():inst.getParent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSys_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSys_idCachedValue():inst.getSys_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_package_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_package_idCachedValue():inst.getComponent_package_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getComponent_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getComponent_idCachedValue():inst.getComponent_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ActionNode_c_sql(ActionNode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_ACT\n\tVALUES (" ); //$NON-NLS-1$
  write_ActionNode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ActionNode_c_proxy_sql(ActionNode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_ACT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ActionNode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ActionNode_c_attr_sql(ActionNode_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_AcceptTimeEventAction_c_sql(AcceptTimeEventAction_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_ATE\n\tVALUES (" ); //$NON-NLS-1$
  write_AcceptTimeEventAction_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AcceptTimeEventAction_c_proxy_sql(AcceptTimeEventAction_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_ATE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AcceptTimeEventAction_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AcceptTimeEventAction_c_attr_sql(AcceptTimeEventAction_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_AcceptEventAction_c_sql(AcceptEventAction_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_AEA\n\tVALUES (" ); //$NON-NLS-1$
  write_AcceptEventAction_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AcceptEventAction_c_proxy_sql(AcceptEventAction_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_AEA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AcceptEventAction_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AcceptEventAction_c_attr_sql(AcceptEventAction_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getDescrip().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_AcceptEvent_c_sql(AcceptEvent_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO A_AE\n\tVALUES (" ); //$NON-NLS-1$
  write_AcceptEvent_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AcceptEvent_c_proxy_sql(AcceptEvent_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO A_AE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AcceptEvent_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AcceptEvent_c_attr_sql(AcceptEvent_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getId().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getIdCachedValue():inst.getId());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Waypoint_c_sql(Waypoint_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_WAY\n\tVALUES (" ); //$NON-NLS-1$
  write_Waypoint_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Waypoint_c_proxy_sql(Waypoint_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_WAY_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Waypoint_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Waypoint_c_attr_sql(Waypoint_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getWay_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);
  nf.setMinimumFractionDigits(6);
  nf.setGroupingUsed(false);
  m_fh.print( nf.format(inst.getPositionx()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getPositiony()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEdge_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEdge_elementidCachedValue():inst.getEdge_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPolyline_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPolyline_elementidCachedValue():inst.getPolyline_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_way_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_way_idCachedValue():inst.getPrevious_way_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Textelement_c_sql(Textelement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_TEL\n\tVALUES (" ); //$NON-NLS-1$
  write_Textelement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Textelement_c_proxy_sql(Textelement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_TEL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Textelement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Textelement_c_attr_sql(Textelement_c inst)
throws IOException
{
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getText().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Simplesemanticmodelelement_c_sql(Simplesemanticmodelelement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_SSME\n\tVALUES (" ); //$NON-NLS-1$
  write_Simplesemanticmodelelement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Simplesemanticmodelelement_c_proxy_sql(Simplesemanticmodelelement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_SSME_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Simplesemanticmodelelement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Simplesemanticmodelelement_c_attr_sql(Simplesemanticmodelelement_c inst)
throws IOException
{
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getTypeinfo().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmb_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmb_idCachedValue():inst.getSmb_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Semanticmodelbridge_c_sql(Semanticmodelbridge_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_SMB\n\tVALUES (" ); //$NON-NLS-1$
  write_Semanticmodelbridge_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Semanticmodelbridge_c_proxy_sql(Semanticmodelbridge_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_SMB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Semanticmodelbridge_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Semanticmodelbridge_c_attr_sql(Semanticmodelbridge_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getSmb_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getPresentation().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Reference_c_sql(Reference_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_REF\n\tVALUES (" ); //$NON-NLS-1$
  write_Reference_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Reference_c_proxy_sql(Reference_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_REF_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Reference_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Reference_c_attr_sql(Reference_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getLeaf_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getLeaf_elementidCachedValue():inst.getLeaf_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsindividualrepresentation()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
}
void write_Property_c_sql(Property_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_PRP\n\tVALUES (" ); //$NON-NLS-1$
  write_Property_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Property_c_proxy_sql(Property_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_PRP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Property_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Property_c_attr_sql(Property_c inst)
throws IOException
{
  m_fh.print(inst.getProperty_id());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getKey().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getValue().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Polyline_c_sql(Polyline_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_PLN\n\tVALUES (" ); //$NON-NLS-1$
  write_Polyline_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Polyline_c_proxy_sql(Polyline_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_PLN_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Polyline_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Polyline_c_attr_sql(Polyline_c inst)
throws IOException
{
  m_fh.print( (inst.getClosed()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Leafelement_c_sql(Leafelement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_LEL\n\tVALUES (" ); //$NON-NLS-1$
  write_Leafelement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Leafelement_c_proxy_sql(Leafelement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_LEL_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Leafelement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Leafelement_c_attr_sql(Leafelement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Image_c_sql(Image_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_IMG\n\tVALUES (" ); //$NON-NLS-1$
  write_Image_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Image_c_proxy_sql(Image_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_IMG_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Image_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Image_c_attr_sql(Image_c inst)
throws IOException
{
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getUri().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getMimetype().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Graphnode_c_sql(Graphnode_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_ND\n\tVALUES (" ); //$NON-NLS-1$
  write_Graphnode_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Graphnode_c_proxy_sql(Graphnode_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_ND_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Graphnode_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Graphnode_c_attr_sql(Graphnode_c inst)
throws IOException
{
  NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);
  nf.setMinimumFractionDigits(6);
  nf.setGroupingUsed(false);
  m_fh.print( nf.format(inst.getWidth()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getHeight()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Graphicprimitive_c_sql(Graphicprimitive_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_GRP\n\tVALUES (" ); //$NON-NLS-1$
  write_Graphicprimitive_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Graphicprimitive_c_proxy_sql(Graphicprimitive_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_GRP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Graphicprimitive_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Graphicprimitive_c_attr_sql(Graphicprimitive_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Graphelement_c_sql(Graphelement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_GE\n\tVALUES (" ); //$NON-NLS-1$
  write_Graphelement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Graphelement_c_proxy_sql(Graphelement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_GE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Graphelement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Graphelement_c_attr_sql(Graphelement_c inst)
throws IOException
{
  NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);
  nf.setMinimumFractionDigits(6);
  nf.setGroupingUsed(false);
  m_fh.print( nf.format(inst.getPositionx()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getPositiony()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmb_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmb_idCachedValue():inst.getSmb_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Graphedge_c_sql(Graphedge_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_ED\n\tVALUES (" ); //$NON-NLS-1$
  write_Graphedge_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Graphedge_c_proxy_sql(Graphedge_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_ED_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Graphedge_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Graphedge_c_attr_sql(Graphedge_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getFirst_conid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getFirst_conidCachedValue():inst.getFirst_conid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getLast_conid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getLast_conidCachedValue():inst.getLast_conid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Graphconnector_c_sql(Graphconnector_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_CON\n\tVALUES (" ); //$NON-NLS-1$
  write_Graphconnector_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Graphconnector_c_proxy_sql(Graphconnector_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_CON_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Graphconnector_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Graphconnector_c_attr_sql(Graphconnector_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getConid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);
  nf.setMinimumFractionDigits(6);
  nf.setGroupingUsed(false);
  m_fh.print( nf.format(inst.getPositionx()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getPositiony()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Ellipse_c_sql(Ellipse_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_ELP\n\tVALUES (" ); //$NON-NLS-1$
  write_Ellipse_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Ellipse_c_proxy_sql(Ellipse_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_ELP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Ellipse_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Ellipse_c_attr_sql(Ellipse_c inst)
throws IOException
{
  NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);
  nf.setMinimumFractionDigits(6);
  nf.setGroupingUsed(false);
  m_fh.print( nf.format(inst.getCenterx()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getCentery()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getRadiusx()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getRadiusy()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getRotation()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getStartangle()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getEndangle()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Element_c_sql(Element_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_ELM\n\tVALUES (" ); //$NON-NLS-1$
  write_Element_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Element_c_proxy_sql(Element_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_ELM_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Element_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Element_c_attr_sql(Element_c inst)
throws IOException
{
  m_fh.print( "0" );  //$NON-NLS-1$
}
void write_Diagramlink_c_sql(Diagramlink_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_DLK\n\tVALUES (" ); //$NON-NLS-1$
  write_Diagramlink_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Diagramlink_c_proxy_sql(Diagramlink_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_DLK_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Diagramlink_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Diagramlink_c_attr_sql(Diagramlink_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getLink_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);
  nf.setMinimumFractionDigits(6);
  nf.setGroupingUsed(false);
  m_fh.print( nf.format(inst.getZoom()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getViewportx()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getViewporty()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getContainer_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getContainer_elementidCachedValue():inst.getContainer_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDiagram_diagramid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDiagram_diagramidCachedValue():inst.getDiagram_diagramid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Diagramelement_c_sql(Diagramelement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_ELE\n\tVALUES (" ); //$NON-NLS-1$
  write_Diagramelement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Diagramelement_c_proxy_sql(Diagramelement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_ELE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Diagramelement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Diagramelement_c_attr_sql(Diagramelement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIsvisible()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getContainer_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getContainer_elementidCachedValue():inst.getContainer_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Diagram_c_sql(Diagram_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_DIA\n\tVALUES (" ); //$NON-NLS-1$
  write_Diagram_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Diagram_c_proxy_sql(Diagram_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_DIA_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Diagram_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Diagram_c_attr_sql(Diagram_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getDiagramid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getName().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);
  nf.setMinimumFractionDigits(6);
  nf.setGroupingUsed(false);
  m_fh.print( nf.format(inst.getZoom()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getViewportx()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getViewporty()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmb_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmb_idCachedValue():inst.getSmb_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Coresemanticmodelbridge_c_sql(Coresemanticmodelbridge_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO DIM_CSMB\n\tVALUES (" ); //$NON-NLS-1$
  write_Coresemanticmodelbridge_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Coresemanticmodelbridge_c_proxy_sql(Coresemanticmodelbridge_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO DIM_CSMB_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Coresemanticmodelbridge_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Coresemanticmodelbridge_c_attr_sql(Coresemanticmodelbridge_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getSmb_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getSmb_idCachedValue():inst.getSmb_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "0" );  //$NON-NLS-1$
}
void write_NoncontainingShapeSpecification_c_sql(NoncontainingShapeSpecification_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO TS_NCS\n\tVALUES (" ); //$NON-NLS-1$
  write_NoncontainingShapeSpecification_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_NoncontainingShapeSpecification_c_proxy_sql(NoncontainingShapeSpecification_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO TS_NCS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_NoncontainingShapeSpecification_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_NoncontainingShapeSpecification_c_attr_sql(NoncontainingShapeSpecification_c inst)
throws IOException
{
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getOoa_typeCachedValue():inst.getOoa_type());
}
void write_ContainingShapeSpecification_c_sql(ContainingShapeSpecification_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO TS_CTR\n\tVALUES (" ); //$NON-NLS-1$
  write_ContainingShapeSpecification_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ContainingShapeSpecification_c_proxy_sql(ContainingShapeSpecification_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO TS_CTR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ContainingShapeSpecification_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ContainingShapeSpecification_c_attr_sql(ContainingShapeSpecification_c inst)
throws IOException
{
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getOoa_typeCachedValue():inst.getOoa_type());
}
void write_Linecolorstyle_c_sql(Linecolorstyle_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO STY_LCS\n\tVALUES (" ); //$NON-NLS-1$
  write_Linecolorstyle_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Linecolorstyle_c_proxy_sql(Linecolorstyle_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO STY_LCS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Linecolorstyle_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Linecolorstyle_c_attr_sql(Linecolorstyle_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStyle_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStyle_idCachedValue():inst.getStyle_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getRed());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getGreen());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBlue());
}
void write_Fontstyle_c_sql(Fontstyle_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO STY_FS\n\tVALUES (" ); //$NON-NLS-1$
  write_Fontstyle_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Fontstyle_c_proxy_sql(Fontstyle_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO STY_FS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Fontstyle_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Fontstyle_c_attr_sql(Fontstyle_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStyle_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStyle_idCachedValue():inst.getStyle_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getFont_identifier().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_Fillcolorstyle_c_sql(Fillcolorstyle_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO STY_FCS\n\tVALUES (" ); //$NON-NLS-1$
  write_Fillcolorstyle_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Fillcolorstyle_c_proxy_sql(Fillcolorstyle_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO STY_FCS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Fillcolorstyle_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Fillcolorstyle_c_attr_sql(Fillcolorstyle_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStyle_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStyle_idCachedValue():inst.getStyle_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getRed());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getGreen());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getBlue());
}
void write_Elementstyle_c_sql(Elementstyle_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO STY_S\n\tVALUES (" ); //$NON-NLS-1$
  write_Elementstyle_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Elementstyle_c_proxy_sql(Elementstyle_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO STY_S_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Elementstyle_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Elementstyle_c_attr_sql(Elementstyle_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getStyle_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDiagramid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDiagramidCachedValue():inst.getDiagramid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Shape_c_sql(Shape_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_SHP\n\tVALUES (" ); //$NON-NLS-1$
  write_Shape_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Shape_c_proxy_sql(Shape_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_SHP_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Shape_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Shape_c_attr_sql(Shape_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_NoncontainingShape_c_sql(NoncontainingShape_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_NCS\n\tVALUES (" ); //$NON-NLS-1$
  write_NoncontainingShape_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_NoncontainingShape_c_proxy_sql(NoncontainingShape_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_NCS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_NoncontainingShape_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_NoncontainingShape_c_attr_sql(NoncontainingShape_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Model_c_sql(Model_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_MD\n\tVALUES (" ); //$NON-NLS-1$
  write_Model_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Model_c_proxy_sql(Model_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_MD_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Model_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Model_c_attr_sql(Model_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDiagramid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDiagramidCachedValue():inst.getDiagramid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getModel_typeCachedValue():inst.getModel_type());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getOoa_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getOoa_typeCachedValue():inst.getOoa_type());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getUseglobalprint()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getPrintmode()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getPrintrows());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getPrintcols());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getIslandscape()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getZoomfontsize());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getGridon()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSelrectx());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSelrecty());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSelrectw());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getSelrecth());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "0" );  //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getVersion().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRepresents_path().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_LineSegment_c_sql(LineSegment_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_LS\n\tVALUES (" ); //$NON-NLS-1$
  write_LineSegment_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_LineSegment_c_proxy_sql(LineSegment_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_LS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_LineSegment_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_LineSegment_c_attr_sql(LineSegment_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConn_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConn_elementidCachedValue():inst.getConn_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getPrevious_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getPrevious_elementidCachedValue():inst.getPrevious_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getStart_way_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getStart_way_idCachedValue():inst.getStart_way_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getEnd_way_id().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getEnd_way_idCachedValue():inst.getEnd_way_id());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Layer_c_sql(Layer_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_LAY\n\tVALUES (" ); //$NON-NLS-1$
  write_Layer_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Layer_c_proxy_sql(Layer_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_LAY_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Layer_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Layer_c_attr_sql(Layer_c inst)
throws IOException
{
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLayer_name().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( (inst.getVisible()) ? "1" : "0" );  //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDiagramid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDiagramidCachedValue():inst.getDiagramid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Graphicalelementinlayer_c_sql(Graphicalelementinlayer_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_GLAY\n\tVALUES (" ); //$NON-NLS-1$
  write_Graphicalelementinlayer_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Graphicalelementinlayer_c_proxy_sql(Graphicalelementinlayer_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_GLAY_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Graphicalelementinlayer_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Graphicalelementinlayer_c_attr_sql(Graphicalelementinlayer_c inst)
throws IOException
{
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getLayer_name().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_GraphicalElement_c_sql(GraphicalElement_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_GE\n\tVALUES (" ); //$NON-NLS-1$
  write_GraphicalElement_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_GraphicalElement_c_proxy_sql(GraphicalElement_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_GE_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_GraphicalElement_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_GraphicalElement_c_attr_sql(GraphicalElement_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDiagramid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDiagramidCachedValue():inst.getDiagramid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(inst.getOoa_id());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( outputCachedIDs && inst.isProxy() ? inst.getOoa_typeCachedValue():inst.getOoa_type());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "0" );  //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( "'"); //$NON-NLS-1$
  m_fh.print( inst.getRepresents_path().replaceAll( "'", "''" ) ); //$NON-NLS-1$ //$NON-NLS-2$
  m_fh.print( "'"); //$NON-NLS-1$
}
void write_FloatingText_c_sql(FloatingText_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_CTXT\n\tVALUES (" ); //$NON-NLS-1$
  write_FloatingText_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_FloatingText_c_proxy_sql(FloatingText_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_CTXT_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_FloatingText_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_FloatingText_c_attr_sql(FloatingText_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConn_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConn_elementidCachedValue():inst.getConn_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print(inst.getEnd());
  m_fh.print(",\n\t");  //$NON-NLS-1$
  NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);
  nf.setMinimumFractionDigits(6);
  nf.setGroupingUsed(false);
  m_fh.print( nf.format(inst.getDeltax()) );
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print( nf.format(inst.getDeltay()) );
}
void write_ElementInSuppression_c_sql(ElementInSuppression_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_EIS\n\tVALUES (" ); //$NON-NLS-1$
  write_ElementInSuppression_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ElementInSuppression_c_proxy_sql(ElementInSuppression_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_EIS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ElementInSuppression_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ElementInSuppression_c_attr_sql(ElementInSuppression_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getDiagramid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getDiagramidCachedValue():inst.getDiagramid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_ContainingShape_c_sql(ContainingShape_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_CTR\n\tVALUES (" ); //$NON-NLS-1$
  write_ContainingShape_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_ContainingShape_c_proxy_sql(ContainingShape_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_CTR_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_ContainingShape_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_ContainingShape_c_attr_sql(ContainingShape_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_Connector_c_sql(Connector_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_CON\n\tVALUES (" ); //$NON-NLS-1$
  write_Connector_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_Connector_c_proxy_sql(Connector_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_CON_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_Connector_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_Connector_c_attr_sql(Connector_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getAssoc_elementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getAssoc_elementidCachedValue():inst.getAssoc_elementid());
  m_fh.print("\"");    //$NON-NLS-1$
}
void write_AnchorOnSegment_c_sql(AnchorOnSegment_c inst)
throws IOException
{
if(inst != null && !inst.isProxy()){
  if(writtenInstances.contains(inst)) return;
  writtenInstances.add(inst);
  m_fh.print( "INSERT INTO GD_AOS\n\tVALUES (" ); //$NON-NLS-1$
  write_AnchorOnSegment_c_attr_sql(inst);
  m_fh.print(");\n"); //$NON-NLS-1$
}
}

public void write_AnchorOnSegment_c_proxy_sql(AnchorOnSegment_c inst)
throws IOException
{
  if ( inst != null && !writtenProxies.contains(inst) && !writtenInstances.contains(inst))
  {
  writtenProxies.add(inst);
    m_fh.print( "INSERT INTO GD_AOS_PROXY\n\tVALUES (" ); //$NON-NLS-1$
    write_AnchorOnSegment_c_attr_sql(inst);
    m_fh.print(",\n\t"); //$NON-NLS-1$
    m_fh.print("'" + (!forceProxyExport ? inst.getContent(m_inst.getPersistableComponent().getFullPath()):inst.getContent()) + "'");
    m_fh.print(");\n"); //$NON-NLS-1$
  }
}

private void write_AnchorOnSegment_c_attr_sql(AnchorOnSegment_c inst)
throws IOException
{
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getConid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getConidCachedValue():inst.getConid());
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print(",\n\t");  //$NON-NLS-1$
  m_fh.print("\"");    //$NON-NLS-1$
  m_fh.print( (inst.getElementid().equals(IdAssigner.NULL_UUID) && outputCachedIDs && inst.isProxy()) ? inst.getElementidCachedValue():inst.getElementid());
  m_fh.print("\"");    //$NON-NLS-1$
}

void write_DPD_sql(final Domain_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getDom_id()) && selected.getModel_type() == Modeltype_c.DomainPackageDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_SRM_sql(final Domain_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getDom_id()) && selected.getModel_type() == Modeltype_c.PDDR;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_SCM_sql(final Domain_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getDom_id()) && selected.getModel_type() == Modeltype_c.PDDA;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_SAM_sql(final Domain_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getDom_id()) && selected.getModel_type() == Modeltype_c.PDDS;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_OIM_sql(final Subsystem_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getSs_id()) && selected.getModel_type() == Modeltype_c.ClassDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_OCM_sql(final Subsystem_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getSs_id()) && selected.getModel_type() == Modeltype_c.OCDA;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_OAM_sql(final Subsystem_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getSs_id()) && selected.getModel_type() == Modeltype_c.OCDS;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_ISM_sql(final StateMachine_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getSm_id()) && selected.getModel_type() == Modeltype_c.InstanceStateChartDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_ASM_sql(final StateMachine_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getSm_id()) && selected.getModel_type() == Modeltype_c.ClassStateChartDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_DataTypePackageDiagram_sql(final DataTypePackage_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getPackage_id()) && selected.getModel_type() == Modeltype_c.DataTypePackageDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_ExternalEntityPackageDiagram_sql(final ExternalEntityPackage_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getEepack_id()) && selected.getModel_type() == Modeltype_c.ExternalEntityPackageDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_FunctionPackageDiagram_sql(final FunctionPackage_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getFunpack_id()) && selected.getModel_type() == Modeltype_c.FunctionPackageDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_ActivityDiagram_sql(final Activity_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getPackage_id()) && selected.getModel_type() == Modeltype_c.ActivityDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_SequenceDiagram_sql(final Sequence_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getPackage_id()) && selected.getModel_type() == Modeltype_c.SequenceDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_CommunicationDiagram_sql(final Communication_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getPackage_id()) && selected.getModel_type() == Modeltype_c.CommunicationDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_UseCaseDiagram_sql(final UseCaseDiagram_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getPackage_id()) && selected.getModel_type() == Modeltype_c.UseCaseDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_SystemModelPackage_sql(final SystemModel_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getSys_id()) && selected.getModel_type() == Modeltype_c.SystemModelPackage;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_ComponentPackage_sql(final ComponentPackage_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getPackage_id()) && selected.getModel_type() == Modeltype_c.ComponentPackage;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_InterfacePackage_sql(final InterfacePackage_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getPackage_id()) && selected.getModel_type() == Modeltype_c.InterfacePackage;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_ComponentDiagram_sql(final Component_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getId()) && selected.getModel_type() == Modeltype_c.ComponentDiagram;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}

void write_PackageDiagram_sql(final Package_c inst, IProgressMonitor pm )
throws IOException
{
  class Model_test1_c implements ClassQueryInterface_c {
    public boolean evaluate(Object test_instance) {
      Model_c selected = (Model_c)test_instance;
      return selected.getOoa_id().equals(inst.getPackage_id()) && selected.getModel_type() == Modeltype_c.Package;
    }
  }
  Model_c model =
    Model_c.ModelInstance(getGraphicsModelRoot(), new Model_test1_c());
  export_Model_c( model, pm, false, true );
    pm.worked(1);
}



  class ProxyPath {
    NonRootModelElement fProxyElement;
    NonRootModelElement fLocalElement;
    public ProxyPath(NonRootModelElement p_proxyElement, NonRootModelElement p_localElement) {
      fProxyElement = p_proxyElement;
      fLocalElement = p_localElement;
    }
  }

  /**
   * @param  path content path relative to the current project
   * @return String name of the system/project if the path points outside the
   *         current system, or empty string if it does not.
   */
  protected String getReferredToSystem(IPath path) {
    String previousSegment = "";
    for (int i = 0; i < path.segmentCount(); ++i) {
      if (path.segment(i).equals("models")) {
        if (!previousSegment.isEmpty()) {
          return previousSegment;
        }
      }
      previousSegment = path.segment(i);
    }
    return previousSegment;
  }

  protected void writeCollectedProxies() throws IOException {
    for(int i = 0; i < collectedProxies.size(); i++) {
      ProxyPath proxyPath = collectedProxies.get(i);;
      NonRootModelElement element = proxyPath.fProxyElement;
      if(element instanceof DataType_c) {
    	  // skip if global
    	  GlobalElementInSystem_c geis = GlobalElementInSystem_c.getOneG_EISOnR9100(PackageableElement_c.getManyPE_PEsOnR8001((DataType_c) element));
    	  if(geis != null) {
    		  continue;
    	  }
      }
      if(proxyPath.fLocalElement.getPersistableComponent() != null) {
      m_path = proxyPath.fLocalElement.getPersistableComponent().getFullPath();
      }
      m_inst = proxyPath.fLocalElement;
      if(element != null && !writtenInstances.contains(element)) {
        	Method method;
        	try {
        	    if(!forceProxyExport) {
	        	    IPath rtoPath = new Path(element.getContent(m_path));
	                String rtoSystem = getReferredToSystem(rtoPath);
	                if (!rtoSystem.isEmpty()) {
	                  savedRTOSystems.add(rtoSystem);
	                }
	            }
        		method = getClass().getMethod("write_" + element.getClass().getSimpleName() + "_proxy_sql",
        				new Class[] { element.getClass() });
        		method.invoke(this, new Object[] { element });
        	} catch (SecurityException e) {
        		CorePlugin.logError("Unable to write proxy entries.", e);
        	} catch (NoSuchMethodException e) {
        		CorePlugin.logError("Unable to write proxy entries.", e);
        	} catch (IllegalArgumentException e) {
        		CorePlugin.logError("Unable to write proxy entries.", e);
        	} catch (IllegalAccessException e) {
        		CorePlugin.logError("Unable to write proxy entries.", e);
        	} catch (InvocationTargetException e) {
        		CorePlugin.logError("Unable to write proxy entries.", e);
        	}     
      }
    }
  }

}
