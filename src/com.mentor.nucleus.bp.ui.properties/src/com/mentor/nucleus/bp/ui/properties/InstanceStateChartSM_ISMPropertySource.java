//======================================================================
//
// File: InstanceStateChartSM_ISMPropertySource.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/BuildPropertySource.arc
// Version:      $Revision: 1.66 $
//
// (c) Copyright 2006-2014 by Mentor Graphics Corp.  All rights reserved.
//
//======================================================================

package com.mentor.nucleus.bp.ui.properties;
import org.eclipse.ui.views.properties.*;

import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.common.*;
import com.mentor.nucleus.bp.core.sorter.MetadataSortingManager;
import com.mentor.nucleus.bp.core.ui.cells.editors.*;
import com.mentor.nucleus.bp.core.util.DimensionsUtil;

public class InstanceStateChartSM_ISMPropertySource implements IPropertySource {
	private InstanceStateMachine_c m_inst;
	private StateMachineState_c[] m_State;
	private CreationTransition_c[] m_CreationTransitions;
	private StateMachineEvent_c[] m_EventLocalEvent;
	private StateMachineEvent_c[] m_EventDeclaredEvent;
	private NonLocalEvent_c[] m_InheritedEventInheritedEvent;
	private PropertyDescriptor[] m_propertyDescriptors;

	MetadataSortingManager sorter = MetadataSortingManager.createDefault();

	public InstanceStateChartSM_ISMPropertySource(InstanceStateMachine_c inst) {
		m_inst = inst;
	}
	/* (non-Javadoc)
	 * @see org.eclipse.ui.views.properties.IPropertySource#getEditableValue()
	 */
	public Object getEditableValue() {
		return this;
	}

	/* (non-Javadoc)
	 * @see org.eclipse.ui.views.properties.IPropertySource#isPropertySet(java.lang.Object)
	 */
	public boolean isPropertySet(Object id) {
		return false;
	}

	/* (non-Javadoc)
	 * @see org.eclipse.ui.views.properties.IPropertySource#resetPropertyValue(java.lang.Object)
	 */
	public void resetPropertyValue(Object id) {
		// do nothing
	}

	public String toString() {
		return m_inst.Get_name();
	}

	/* (non-Javadoc)
	 * @see org.eclipse.ui.views.properties.IPropertySource#getPropertyDescriptors()
	 */
	public IPropertyDescriptor[] getPropertyDescriptors() {
		if (m_inst == null || m_inst.isOrphaned())
			return new IPropertyDescriptor[0];
		int num_children = 0;
		StateMachineState_c[] v_state = StateMachineState_c
				.getManySM_STATEsOnR501(StateMachine_c
						.getManySM_SMsOnR517((InstanceStateMachine_c) m_inst));

		m_State = v_state;
		num_children += m_State.length;

		sorter.sort(v_state);
		CreationTransition_c[] v_creationtransitions = CreationTransition_c
				.getManySM_CRTXNsOnR507(Transition_c.getManySM_TXNsOnR505(StateMachine_c
						.getManySM_SMsOnR517((InstanceStateMachine_c) m_inst)));

		m_CreationTransitions = v_creationtransitions;
		num_children += m_CreationTransitions.length;

		sorter.sort(v_creationtransitions);
		StateMachineEvent_c[] v_eventLocalEvent = StateMachineEvent_c
				.getManySM_EVTsOnR525(SemEvent_c.getManySM_SEVTsOnR526(LocalEvent_c.getManySM_LEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR502(StateMachine_c
						.getManySM_SMsOnR517((InstanceStateMachine_c) m_inst))))));

		m_EventLocalEvent = v_eventLocalEvent;
		num_children += m_EventLocalEvent.length;

		sorter.sort(v_eventLocalEvent);
		StateMachineEvent_c[] v_eventDeclaredEvent = StateMachineEvent_c
				.getManySM_EVTsOnR525(PolymorphicEvent_c.getManySM_PEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR502(StateMachine_c
						.getManySM_SMsOnR517((InstanceStateMachine_c) m_inst))));

		m_EventDeclaredEvent = v_eventDeclaredEvent;
		num_children += m_EventDeclaredEvent.length;

		sorter.sort(v_eventDeclaredEvent);
		NonLocalEvent_c[] v_inheritedeventInheritedEvent = NonLocalEvent_c
				.getManySM_NLEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR502(StateMachine_c
						.getManySM_SMsOnR517((InstanceStateMachine_c) m_inst))));

		m_InheritedEventInheritedEvent = v_inheritedeventInheritedEvent;
		num_children += m_InheritedEventInheritedEvent.length;

		sorter.sort(v_inheritedeventInheritedEvent);
		if (m_propertyDescriptors == null
				|| 0 + num_children != m_propertyDescriptors.length) {
			m_propertyDescriptors = new PropertyDescriptor[0 + num_children];
			boolean readonly = false;

			int d_index = 0;
			for (int i = 0; i < m_State.length; ++i) {
				m_propertyDescriptors[d_index] = new PropertyDescriptor(
						"State." + String.valueOf(i), "State Machine State");
				m_propertyDescriptors[d_index].setCategory("State");
				++d_index;
			}

			for (int i = 0; i < m_CreationTransitions.length; ++i) {
				m_propertyDescriptors[d_index] = new PropertyDescriptor(
						"CreationTransitions." + String.valueOf(i),
						"Creation Transition");
				m_propertyDescriptors[d_index]
						.setCategory("Creation Transitions");
				++d_index;
			}

			for (int i = 0; i < m_EventLocalEvent.length; ++i) {
				m_propertyDescriptors[d_index] = new PropertyDescriptor(
						"EventLocalEvent." + String.valueOf(i), "Local Event");
				m_propertyDescriptors[d_index].setCategory("Event");
				++d_index;
			}

			for (int i = 0; i < m_EventDeclaredEvent.length; ++i) {
				m_propertyDescriptors[d_index] = new PropertyDescriptor(
						"EventDeclaredEvent." + String.valueOf(i),
						"Declared Event");
				m_propertyDescriptors[d_index].setCategory("Event");
				++d_index;
			}

			for (int i = 0; i < m_InheritedEventInheritedEvent.length; ++i) {
				m_propertyDescriptors[d_index] = new PropertyDescriptor(
						"InheritedEventInheritedEvent." + String.valueOf(i),
						"Inherited Event");
				m_propertyDescriptors[d_index].setCategory("Inherited Event");
				++d_index;
			}

		}
		if (m_propertyDescriptors.length > 0)
			m_propertyDescriptors[0]
					.setValidator(new InstanceStateMachineNameValidator());
		return m_propertyDescriptors;
	}

	/* (non-Javadoc)
	 * @see org.eclipse.ui.views.properties.IPropertySource#getPropertyValue(java.lang.Object)
	 */
	public Object getPropertyValue(Object id) {
		if (m_inst.isOrphaned()) {
			return "";
		}
		int d_index = 0;
		for (int i = 0; i < m_State.length; ++i) {
			if (m_propertyDescriptors[d_index].getId().equals(id)) {
				return new StateSM_STATEPropertySource(m_State[i]);
			}
			++d_index;
		}

		for (int i = 0; i < m_CreationTransitions.length; ++i) {
			if (m_propertyDescriptors[d_index].getId().equals(id)) {
				return new CreationTransitionsSM_CRTXNPropertySource(
						m_CreationTransitions[i]);
			}
			++d_index;
		}

		for (int i = 0; i < m_EventLocalEvent.length; ++i) {
			if (m_propertyDescriptors[d_index].getId().equals(id)) {
				return new EventSM_EVTPropertySource(m_EventLocalEvent[i]);
			}
			++d_index;
		}

		for (int i = 0; i < m_EventDeclaredEvent.length; ++i) {
			if (m_propertyDescriptors[d_index].getId().equals(id)) {
				return new EventSM_EVTPropertySource(m_EventDeclaredEvent[i]);
			}
			++d_index;
		}

		for (int i = 0; i < m_InheritedEventInheritedEvent.length; ++i) {
			if (m_propertyDescriptors[d_index].getId().equals(id)) {
				return new InheritedEventSM_NLEVTPropertySource(
						m_InheritedEventInheritedEvent[i]);
			}
			++d_index;
		}

		return null;
	}

	/* (non-Javadoc)
	 * @see org.eclipse.ui.views.properties.IPropertySource#setPropertyValue(java.lang.Object, java.lang.Object)
	 */
	public void setPropertyValue(Object id, Object value) {
	}
}
