      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.EventSupplementalData_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_EVENT_SUPPLEMENTAL_DATA extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class EventSupplementalData_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public EventSupplementalData_c(ModelRoot modelRoot,
       java.util.UUID         p_m_smspd_id,
       java.util.UUID         p_m_sm_id,
       boolean      p_m_non_local)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
       //extract 28 bit value only            
       m_smspd_idLongBased = 0xfffffff & p_m_smspd_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       m_non_local = p_m_non_local;
        
    setUniqueId(m_smspd_id);
    Object [] key = {m_smspd_id,m_sm_id};
    addInstanceToMap(key);
  }
  static public EventSupplementalData_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_smspd_id,
       java.util.UUID         p_m_sm_id,
       boolean      p_m_non_local, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(EventSupplementalData_c.class);
      EventSupplementalData_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_smspd_id,p_m_sm_id};
          new_inst = (EventSupplementalData_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
       //extract 28 bit value only            
       new_inst.m_smspd_idLongBased = 0xfffffff & p_m_smspd_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       new_inst.m_non_local = p_m_non_local;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new EventSupplementalData_c(modelRoot,
p_m_smspd_id,
p_m_sm_id,
p_m_non_local
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public EventSupplementalData_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_smspd_id,
       java.util.UUID         p_m_sm_id,
       boolean      p_m_non_local){
    InstanceList instances = modelRoot.getInstanceList(EventSupplementalData_c.class);
    EventSupplementalData_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_smspd_id
        ,
        p_m_sm_id
            };
        source = (EventSupplementalData_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
       //extract 28 bit value only            
       source.m_smspd_idLongBased = 0xfffffff & p_m_smspd_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       source.m_non_local = p_m_non_local;
        
           return source ;
        }
      }
      // there is no instance matching the id
    EventSupplementalData_c new_inst = new EventSupplementalData_c(modelRoot,
p_m_smspd_id,
p_m_sm_id,
p_m_non_local
);
    return new_inst;
  }
  public EventSupplementalData_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_smspd_id = idAssigner.createUUID();
     m_sm_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_smspd_id);
    Object [] key = {m_smspd_id,m_sm_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_smspd_id,m_sm_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_smspd_id !=  p_newKey ){
	
		m_smspd_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof EventSupplementalData_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof EventSupplementalData_c)) {
           return false;
       }
       
       EventSupplementalData_c me = (EventSupplementalData_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getSmspd_id()) || IdAssigner.NULL_UUID.equals(((EventSupplementalData_c)elem).getSmspd_id())) && this != elem)) {
      	return false;
      }
      if (!getSmspd_id().equals(((EventSupplementalData_c)elem).getSmspd_id())) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getSm_id()) || IdAssigner.NULL_UUID.equals(((EventSupplementalData_c)elem).getSm_id())) && this != elem)) {
      	return false;
      }
      if (!getSm_id().equals(((EventSupplementalData_c)elem).getSm_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof EventSupplementalData_c)) {
           return false;
       }
       
       EventSupplementalData_c me = (EventSupplementalData_c)elem;
      if (!getSmspd_id().equals(((EventSupplementalData_c)elem).getSmspd_id())) return false;
      if (!getSm_idCachedValue().equals(((EventSupplementalData_c)elem).getSm_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_smspd_id ;
  private long m_smspd_idLongBased ;
  private java.util.UUID         m_sm_id ;
  private boolean      m_non_local ;
      
// declare association references from this class
  
  
    
// referring navigation

StateMachine_c IsAssignedToStateMachine ;
public void relateAcrossR523To(StateMachine_c target)
{
	relateAcrossR523To(target, true);
}
public void relateAcrossR523To(StateMachine_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsAssignedToStateMachine) return;  // already related

    if ( IsAssignedToStateMachine != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsAssignedToStateMachine != null) {
    
        IsAssignedToStateMachine.clearBackPointerR523To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"EventSupplementalData_c.relateAcrossR523To(StateMachine_c target)", 
			"Relate performed across R523 from Event Supplemental Data to State Machine without unrelate of prior instance.");  
		}
    }
                
    	IsAssignedToStateMachine = target ;
        m_sm_id = target.getSm_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR523To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "523", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR523From(StateMachine_c target)
{
	unrelateAcrossR523From(target, true);
}
public void unrelateAcrossR523From(StateMachine_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsAssignedToStateMachine == null) return;  // already unrelated
	
	if (target != IsAssignedToStateMachine) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R523", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR523To(this);
    }
    

      if(IsAssignedToStateMachine != null) {
      
        m_sm_id = IsAssignedToStateMachine.getSm_id();
        IsAssignedToStateMachine = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "523", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static EventSupplementalData_c getOneSM_SUPDTOnR523(StateMachine_c [] targets)
{
    return getOneSM_SUPDTOnR523(targets, null);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR523(StateMachine_c [] targets, ClassQueryInterface_c test)
{
    EventSupplementalData_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_SUPDTOnR523(targets[i], test);
        }
    }

    return ret_val;
}

public static EventSupplementalData_c getOneSM_SUPDTOnR523(StateMachine_c target)
{
  return getOneSM_SUPDTOnR523(target, null);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR523(StateMachine_c target, boolean loadComponent)
{
    return getOneSM_SUPDTOnR523(target.getModelRoot(), target, null, loadComponent);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR523(StateMachine_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_SUPDTOnR523(target.getModelRoot(), target, test);
  }
  return null;
}

public static EventSupplementalData_c getOneSM_SUPDTOnR523(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test)
{
	return getOneSM_SUPDTOnR523(modelRoot, target, test, true);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR523(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSM_SUPDTOnR523(modelRoot,target,test);
}
private static EventSupplementalData_c find_getOneSM_SUPDTOnR523(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsEventSupplementalDataContains_R523) {
	    for ( int i = 0; i < target.backPointer_ContainsEventSupplementalDataContains_R523.size(); ++i ) {
	      EventSupplementalData_c source = (EventSupplementalData_c)target.backPointer_ContainsEventSupplementalDataContains_R523.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR523(StateMachine_c [] targets)
{
  return getManySM_SUPDTsOnR523(targets, null);
}
public static EventSupplementalData_c [] getManySM_SUPDTsOnR523(StateMachine_c [] targets, boolean loadComponent)
{
  return getManySM_SUPDTsOnR523(targets, null, loadComponent);
}
public static EventSupplementalData_c [] getManySM_SUPDTsOnR523(StateMachine_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_SUPDTsOnR523(targets, test, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR523(StateMachine_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new EventSupplementalData_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(EventSupplementalData_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsEventSupplementalDataContains_R523) {
	    for (int j = 0; j < targets[i].backPointer_ContainsEventSupplementalDataContains_R523.size(); ++j) {
	      EventSupplementalData_c source = (EventSupplementalData_c)targets[i].backPointer_ContainsEventSupplementalDataContains_R523.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	EventSupplementalData_c[] ret_set = new EventSupplementalData_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new EventSupplementalData_c[0];
  }
  }

public static EventSupplementalData_c [] getManySM_SUPDTsOnR523(StateMachine_c target)
{
  return getManySM_SUPDTsOnR523(target, null);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR523(StateMachine_c target, boolean loadComponent)
{
  return getManySM_SUPDTsOnR523(target, null, loadComponent);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR523(StateMachine_c target, ClassQueryInterface_c test)
{
	return getManySM_SUPDTsOnR523(target, test, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR523(StateMachine_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new EventSupplementalData_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsEventSupplementalDataContains_R523) {
    for (int i = 0; i < target.backPointer_ContainsEventSupplementalDataContains_R523.size(); ++i) {
      EventSupplementalData_c source = (EventSupplementalData_c)target.backPointer_ContainsEventSupplementalDataContains_R523.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		EventSupplementalData_c[] ret_set = new EventSupplementalData_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new EventSupplementalData_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<SupplementalDataItems_c> backPointer_IsMadeUpOfSupplementalDataItemsIsMadeUpOf_R522 = new ArrayList<SupplementalDataItems_c>();

public void setSupplementalDataItemsOrderInChildListR522(SupplementalDataItems_c target, int index) {
	unrelateAcrossR522From(target);
	SupplementalDataItems_c[] elements = SupplementalDataItems_c.getManySM_SDIsOnR522(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR522From((SupplementalDataItems_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR522To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR522To((SupplementalDataItems_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR522To(SupplementalDataItems_c target)
{
  if (target != null) {
    target.relateAcrossR522To(this, true) ;
  }
}

public void relateAcrossR522To(SupplementalDataItems_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR522To(this, notifyChanges) ;
  }
}

public void setBackPointerR522To(SupplementalDataItems_c target)
{
  	synchronized (backPointer_IsMadeUpOfSupplementalDataItemsIsMadeUpOf_R522) {
		backPointer_IsMadeUpOfSupplementalDataItemsIsMadeUpOf_R522.add(target);
	}
}

public void unrelateAcrossR522From(SupplementalDataItems_c target)
{
  if (target != null) {
    target.unrelateAcrossR522From(this, true) ;
  }
}

public void unrelateAcrossR522From(SupplementalDataItems_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR522From(this, notifyChanges) ;
  }
}

public void clearBackPointerR522To(SupplementalDataItems_c target)
{
  synchronized (backPointer_IsMadeUpOfSupplementalDataItemsIsMadeUpOf_R522) {
	    backPointer_IsMadeUpOfSupplementalDataItemsIsMadeUpOf_R522.remove(target);
	}
}

public static EventSupplementalData_c getOneSM_SUPDTOnR522(SupplementalDataItems_c [] targets)
{
    return getOneSM_SUPDTOnR522(targets, null);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR522(SupplementalDataItems_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_SUPDTOnR522(targets, test, true);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR522(SupplementalDataItems_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    EventSupplementalData_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             EventSupplementalData_c candidate_val = getOneSM_SUPDTOnR522(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_SUPDTOnR522(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static EventSupplementalData_c getOneSM_SUPDTOnR522(SupplementalDataItems_c target)
{
	return getOneSM_SUPDTOnR522(target, true);
}
public static EventSupplementalData_c getOneSM_SUPDTOnR522(SupplementalDataItems_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.MakesUpEventSupplementalData ;
  } else {
    return null;
  }
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(SupplementalDataItems_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_SUPDTsOnR522(targets, test, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(SupplementalDataItems_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new EventSupplementalData_c[0];
  
  
  LinkedHashSet<EventSupplementalData_c> elementsSet = new LinkedHashSet<EventSupplementalData_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].MakesUpEventSupplementalData == null)
	  targets[i].loadProxy();
    EventSupplementalData_c associate = targets[i].MakesUpEventSupplementalData;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  EventSupplementalData_c[] result = new EventSupplementalData_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(SupplementalDataItems_c [] targets)
{
  return getManySM_SUPDTsOnR522(targets, null);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(SupplementalDataItems_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SupplementalDataItems_c [] targetArray = new SupplementalDataItems_c[1];
    targetArray[0] = target;
    return getManySM_SUPDTsOnR522(targetArray, test, loadComponent);
  } else {
    EventSupplementalData_c [] result = new EventSupplementalData_c [0] ;
    return result ;
  }
  
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(SupplementalDataItems_c target,
    ClassQueryInterface_c test)
{
    return getManySM_SUPDTsOnR522(target, null, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(SupplementalDataItems_c target)
{
    return getManySM_SUPDTsOnR522(target, null, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(SupplementalDataItems_c target, boolean loadComponent)
{
    return getManySM_SUPDTsOnR522(target, null, loadComponent);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR522(StateMachineEventDataItem_c target)
{
  return EventSupplementalData_c.getOneSM_SUPDTOnR522(SupplementalDataItems_c.getOneSM_SDIOnR522(target)) ;
}

public static EventSupplementalData_c getOneSM_SUPDTOnR522(StateMachineEventDataItem_c target,
    ClassQueryInterface_c test)
{
  return EventSupplementalData_c.getOneSM_SUPDTOnR522(SupplementalDataItems_c.getManySM_SDIsOnR522(target), test) ;
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(StateMachineEventDataItem_c target,
    ClassQueryInterface_c test)
{
	return getManySM_SUPDTsOnR522(target, test, true);
}
public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(StateMachineEventDataItem_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  SupplementalDataItems_c [] associators = SupplementalDataItems_c.getManySM_SDIsOnR522(target, loadComponent) ;
    return EventSupplementalData_c.getManySM_SUPDTsOnR522(associators, test, loadComponent) ;
}
public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(StateMachineEventDataItem_c target)
{
    return getManySM_SUPDTsOnR522(target, null, true);
}
public static EventSupplementalData_c [] getManySM_SUPDTsOnR522(StateMachineEventDataItem_c target, boolean loadComponent)
{
    return getManySM_SUPDTsOnR522(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<StateMachineState_c> backPointer_IsDeliveredByReceivedEventToStateMachineStateIsDeliveredByReceivedEventTo_R521 = new ArrayList<StateMachineState_c>();

public void setStateMachineStateOrderInChildListR521(StateMachineState_c target, int index) {
	unrelateAcrossR521From(target);
	StateMachineState_c[] elements = StateMachineState_c.getManySM_STATEsOnR521(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR521From((StateMachineState_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR521To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR521To((StateMachineState_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR521To(StateMachineState_c target)
{
  if (target != null) {
    target.relateAcrossR521To(this, true) ;
  }
}

public void relateAcrossR521To(StateMachineState_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR521To(this, notifyChanges) ;
  }
}

public void setBackPointerR521To(StateMachineState_c target)
{
  	synchronized (backPointer_IsDeliveredByReceivedEventToStateMachineStateIsDeliveredByReceivedEventTo_R521) {
		backPointer_IsDeliveredByReceivedEventToStateMachineStateIsDeliveredByReceivedEventTo_R521.add(target);
	}
}

public void unrelateAcrossR521From(StateMachineState_c target)
{
  if (target != null) {
    target.unrelateAcrossR521From(this, true) ;
  }
}

public void unrelateAcrossR521From(StateMachineState_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR521From(this, notifyChanges) ;
  }
}

public void clearBackPointerR521To(StateMachineState_c target)
{
  synchronized (backPointer_IsDeliveredByReceivedEventToStateMachineStateIsDeliveredByReceivedEventTo_R521) {
	    backPointer_IsDeliveredByReceivedEventToStateMachineStateIsDeliveredByReceivedEventTo_R521.remove(target);
	}
}

public static EventSupplementalData_c getOneSM_SUPDTOnR521(StateMachineState_c [] targets)
{
    return getOneSM_SUPDTOnR521(targets, null);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR521(StateMachineState_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_SUPDTOnR521(targets, test, true);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR521(StateMachineState_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    EventSupplementalData_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             EventSupplementalData_c candidate_val = getOneSM_SUPDTOnR521(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_SUPDTOnR521(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static EventSupplementalData_c getOneSM_SUPDTOnR521(StateMachineState_c target)
{
	return getOneSM_SUPDTOnR521(target, true);
}
public static EventSupplementalData_c getOneSM_SUPDTOnR521(StateMachineState_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ReceivesAsynchronousDataViaEventSupplementalData ;
  } else {
    return null;
  }
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR521(StateMachineState_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_SUPDTsOnR521(targets, test, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR521(StateMachineState_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new EventSupplementalData_c[0];
  
  
  LinkedHashSet<EventSupplementalData_c> elementsSet = new LinkedHashSet<EventSupplementalData_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ReceivesAsynchronousDataViaEventSupplementalData == null)
	  targets[i].loadProxy();
    EventSupplementalData_c associate = targets[i].ReceivesAsynchronousDataViaEventSupplementalData;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  EventSupplementalData_c[] result = new EventSupplementalData_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR521(StateMachineState_c [] targets)
{
  return getManySM_SUPDTsOnR521(targets, null);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR521(StateMachineState_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    StateMachineState_c [] targetArray = new StateMachineState_c[1];
    targetArray[0] = target;
    return getManySM_SUPDTsOnR521(targetArray, test, loadComponent);
  } else {
    EventSupplementalData_c [] result = new EventSupplementalData_c [0] ;
    return result ;
  }
  
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR521(StateMachineState_c target,
    ClassQueryInterface_c test)
{
    return getManySM_SUPDTsOnR521(target, null, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR521(StateMachineState_c target)
{
    return getManySM_SUPDTsOnR521(target, null, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR521(StateMachineState_c target, boolean loadComponent)
{
    return getManySM_SUPDTsOnR521(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<StateMachineEvent_c> backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520 = new ArrayList<StateMachineEvent_c>();

public void setStateMachineEventOrderInChildListR520(StateMachineEvent_c target, int index) {
	unrelateAcrossR520From(target);
	StateMachineEvent_c[] elements = StateMachineEvent_c.getManySM_EVTsOnR520(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR520From((StateMachineEvent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR520To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR520To((StateMachineEvent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR520To(StateMachineEvent_c target)
{
  if (target != null) {
    target.relateAcrossR520To(this, true) ;
  }
}

public void relateAcrossR520To(StateMachineEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR520To(this, notifyChanges) ;
  }
}

public void setBackPointerR520To(StateMachineEvent_c target)
{
  	synchronized (backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520) {
		backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520.add(target);
	}
}

public void unrelateAcrossR520From(StateMachineEvent_c target)
{
  if (target != null) {
    target.unrelateAcrossR520From(this, true) ;
  }
}

public void unrelateAcrossR520From(StateMachineEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR520From(this, notifyChanges) ;
  }
}

public void clearBackPointerR520To(StateMachineEvent_c target)
{
  synchronized (backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520) {
	    backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520.remove(target);
	}
}

public static EventSupplementalData_c getOneSM_SUPDTOnR520(StateMachineEvent_c [] targets)
{
    return getOneSM_SUPDTOnR520(targets, null);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR520(StateMachineEvent_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_SUPDTOnR520(targets, test, true);
}

public static EventSupplementalData_c getOneSM_SUPDTOnR520(StateMachineEvent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    EventSupplementalData_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             EventSupplementalData_c candidate_val = getOneSM_SUPDTOnR520(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_SUPDTOnR520(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static EventSupplementalData_c getOneSM_SUPDTOnR520(StateMachineEvent_c target)
{
	return getOneSM_SUPDTOnR520(target, true);
}
public static EventSupplementalData_c getOneSM_SUPDTOnR520(StateMachineEvent_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.CarriesEventSupplementalData ;
  } else {
    return null;
  }
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR520(StateMachineEvent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_SUPDTsOnR520(targets, test, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR520(StateMachineEvent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new EventSupplementalData_c[0];
  
  
  LinkedHashSet<EventSupplementalData_c> elementsSet = new LinkedHashSet<EventSupplementalData_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].CarriesEventSupplementalData == null)
	  targets[i].loadProxy();
    EventSupplementalData_c associate = targets[i].CarriesEventSupplementalData;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  EventSupplementalData_c[] result = new EventSupplementalData_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR520(StateMachineEvent_c [] targets)
{
  return getManySM_SUPDTsOnR520(targets, null);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR520(StateMachineEvent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    StateMachineEvent_c [] targetArray = new StateMachineEvent_c[1];
    targetArray[0] = target;
    return getManySM_SUPDTsOnR520(targetArray, test, loadComponent);
  } else {
    EventSupplementalData_c [] result = new EventSupplementalData_c [0] ;
    return result ;
  }
  
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR520(StateMachineEvent_c target,
    ClassQueryInterface_c test)
{
    return getManySM_SUPDTsOnR520(target, null, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR520(StateMachineEvent_c target)
{
    return getManySM_SUPDTsOnR520(target, null, true);
}

public static EventSupplementalData_c [] getManySM_SUPDTsOnR520(StateMachineEvent_c target, boolean loadComponent)
{
    return getManySM_SUPDTsOnR520(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (IsAssignedToStateMachine == null) {          
      // R523
      StateMachine_c relInst39218 = (StateMachine_c) baseRoot.getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39218 == null) {
      			relInst39218 = (StateMachine_c) Ooaofooa.getDefaultInstance().getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
      		}
			if (relInst39218 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39218 = (StateMachine_c) roots[i].getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
					if (relInst39218 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39218 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39218) && !isProxy())) {
	      relInst39218.relateAcrossR523To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R523
      // SM_SM
		  inst=IsAssignedToStateMachine;
			unrelateAcrossR523From(IsAssignedToStateMachine, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(EventSupplementalData_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final EventSupplementalData_c inst = (EventSupplementalData_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(EventSupplementalData_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static EventSupplementalData_c EventSupplementalDataInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		EventSupplementalData_c result=findEventSupplementalDataInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,EventSupplementalData_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findEventSupplementalDataInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static EventSupplementalData_c findEventSupplementalDataInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(EventSupplementalData_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				EventSupplementalData_c x = (EventSupplementalData_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static EventSupplementalData_c EventSupplementalDataInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return EventSupplementalDataInstance(modelRoot,test,true);
  }
  
  public static EventSupplementalData_c EventSupplementalDataInstance(ModelRoot modelRoot)
  {
	 return EventSupplementalDataInstance(modelRoot,null,true);
  }

  public static EventSupplementalData_c [] EventSupplementalDataInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, EventSupplementalData_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(EventSupplementalData_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					EventSupplementalData_c x = (EventSupplementalData_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				EventSupplementalData_c[] ret_set = new EventSupplementalData_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new EventSupplementalData_c[0];
			}		
		} 
  }
  public static EventSupplementalData_c [] EventSupplementalDataInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  EventSupplementalDataInstances(modelRoot,test,true);
  }
  public static EventSupplementalData_c [] EventSupplementalDataInstances(ModelRoot modelRoot)
  {
	return EventSupplementalDataInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Event Supplemental Data.dispose call: ";
	SupplementalDataItems_c testR522Inst = SupplementalDataItems_c.getOneSM_SDIOnR522(this, false);

	if ( testR522Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "522 ";
	}
	StateMachineState_c testR521Inst = StateMachineState_c.getOneSM_STATEOnR521(this, false);

	if ( testR521Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "521 ";	
	}
	StateMachineEvent_c testR520Inst = StateMachineEvent_c.getOneSM_EVTOnR520(this, false);

	if ( testR520Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "520 ";	
	}
	StateMachine_c testR523Inst = StateMachine_c.getOneSM_SMOnR523(this, false);

	if ( testR523Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "523 ";
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Event Supplemental Data", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("smspd_id")){
         return true;
      }
      if(attributeName.equals("sm_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getSmspd_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    tempID= getSm_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getSm_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getSmspd_idLongBased()
  {
    if(m_smspd_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_smspd_id)){
    	return 0xfffffff & m_smspd_id.getLeastSignificantBits();
    }
    return m_smspd_idLongBased ;
  }
  public java.util.UUID getSmspd_id()
  {
    return m_smspd_id ;
  }


  public void setSmspd_id(java.util.UUID newValue)
  {
   m_smspd_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getSm_idLongBased()
  {
    if ( IsAssignedToStateMachine != null )
    {
      return IsAssignedToStateMachine.getSm_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSm_id()
  {
    if ( IsAssignedToStateMachine != null )
    {
      return IsAssignedToStateMachine.getSm_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSm_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sm_id) )
      return m_sm_id;
    else
      return getSm_id();
  }
  
  public void setSm_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_sm_id)){
	        return;
	    }
	}else if(m_sm_id != null){
	    if(m_sm_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Sm_id", m_sm_id, newValue,true); 
   m_sm_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getNon_local()
  {
ModelRoot modelRoot = getModelRoot();
NonLocalEvent_c v_nlevt = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getManySM_SEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR520(this)));


return   (v_nlevt != null);



  }


  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Event Supplemental Data", //$NON-NLS-1$
	  " Operation entered: Event Supplemental Data::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     EventSupplementalData_c [] objs = EventSupplementalData_c.EventSupplementalDataInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Event Supplemental Data", //$NON-NLS-1$
	  " Operation entered: Event Supplemental Data::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class EventSupplementalData_c_test39220_c implements ClassQueryInterface_c
    {
	  EventSupplementalData_c_test39220_c( java.util.UUID            p39221, java.util.UUID            p39222 ) {
	       m_p39221 = p39221; 
m_p39222 = p39222;
	  }
	  private java.util.UUID             m_p39221; private java.util.UUID             m_p39222; 
	  public boolean evaluate (Object candidate)
	  {
	      EventSupplementalData_c selected = (EventSupplementalData_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSmspd_id().equals(m_p39221)) & (selected.getSm_id().equals(m_p39222));
	      return retval;
	  }
    }

    EventSupplementalData_c [] objs39219 = 
    EventSupplementalData_c.EventSupplementalDataInstances(modelRoot, new EventSupplementalData_c_test39220_c(getSmspd_id(), getSm_id())) ;

    if ( (  (objs39219.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Event Supplemental Data", //$NON-NLS-1$
           "Consistency: Object: Event Supplemental Data: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs39219.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Event Supplemental Data: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39219.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs39219.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Event Supplemental Data", //$NON-NLS-1$
           "Consistency: Object: Event Supplemental Data: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39219.length )  + " SMspd_ID: " + "Not Printable"  + " SM_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Event Supplemental Data: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39219.length )  + " SMspd_ID: " + "Not Printable"  + " SM_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Event Supplemental Data is a referring class in association: rel.Numb = 523
          // The participating class is: State Machine
    class StateMachine_c_test39226_c implements ClassQueryInterface_c
    {
	  StateMachine_c_test39226_c( java.util.UUID            p39227 ) {
	  m_p39227 = p39227;
	  }
	  private java.util.UUID             m_p39227; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachine_c selected = (StateMachine_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p39227));
	      return retval;
	  }
    }

    StateMachine_c [] objs39225 = 
    StateMachine_c.StateMachineInstances(modelRoot, new StateMachine_c_test39226_c(getSm_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs39225.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Event Supplemental Data", //$NON-NLS-1$
           "Consistency: Object: Event Supplemental Data: Association: 523: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39225.length )  + " SM_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Event Supplemental Data: Association: 523: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39225.length )  + " SM_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Associated One Side: rel.Numb = 522
            // Link Object: Supplemental Data Items
            // Other Side Class: State Machine Event Data Item
          // Event Supplemental Data is a participating class in association: rel.Numb = 521
             // Object: State Machine State
          // Event Supplemental Data is a participating class in association: rel.Numb = 520
             // Object: State Machine Event
    class StateMachineEvent_c_test39229_c implements ClassQueryInterface_c
    {
	  StateMachineEvent_c_test39229_c( java.util.UUID            p39230, java.util.UUID            p39231 ) {
	       m_p39230 = p39230; 
m_p39231 = p39231;
	  }
	  private java.util.UUID             m_p39230; private java.util.UUID             m_p39231; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachineEvent_c selected = (StateMachineEvent_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSmspd_id().equals(m_p39230)) & (selected.getSm_id().equals(m_p39231));
	      return retval;
	  }
    }

    StateMachineEvent_c [] objs39228 = 
    StateMachineEvent_c.StateMachineEventInstances(modelRoot, new StateMachineEvent_c_test39229_c(getSmspd_id(), getSm_id())) ;

    if ( (  (objs39228.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Event Supplemental Data", //$NON-NLS-1$
           "Consistency: Object: Event Supplemental Data: Association: 520: Cardinality of an unconditional formalizer is equal to zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs39228.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Event Supplemental Data: Association: 520: Cardinality of an unconditional formalizer is equal to zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39228.length )  , e); 
      }
      retval = false;

    }
                
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Event Supplemental Data", " Operation entered: EventSupplementalData::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachineState_c [] v_states = StateMachineState_c.getManySM_STATEsOnR521(this);


StateMachineState_c  v_state = null;
for ( int i37215 = 0; i37215 < v_states.length; i37215++)
{
  v_state = v_states[i37215] ;

this.unrelateAcrossR521From(v_state);



}

StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR523(this);


if ( (  (v_sm != null)) )
{

this.unrelateAcrossR523From(v_sm);



}

SupplementalDataItems_c [] v_sdis = SupplementalDataItems_c.getManySM_SDIsOnR522(this);


SupplementalDataItems_c  v_sdi = null;
for ( int i37216 = 0; i37216 < v_sdis.length; i37216++)
{
  v_sdi = v_sdis[i37216] ;

if (v_sdi != null) {
v_sdi.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

StateMachineEvent_c [] v_events = StateMachineEvent_c.getManySM_EVTsOnR520(this);


StateMachineEvent_c  v_event = null;
for ( int i37217 = 0; i37217 < v_events.length; i37217++)
{
  v_event = v_events[i37217] ;

this.unrelateAcrossR520From(v_event);



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  String       Get_name()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Event Supplemental Data", " Operation entered: EventSupplementalData::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachineEventDataItem_c [] v_edi_set = StateMachineEventDataItem_c.getManySM_EVTDIsOnR522(this);


if ( (getNon_local()) )
{

NonLocalEvent_c v_nlevt = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getManySM_SEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR520(this)));


EventSupplementalData_c v_pevtdi = EventSupplementalData_c.getOneSM_SUPDTOnR520(StateMachineEvent_c.getOneSM_EVTOnR525(PolymorphicEvent_c.getOneSM_PEVTOnR527(v_nlevt)));


v_edi_set = StateMachineEventDataItem_c.getManySM_EVTDIsOnR522(v_pevtdi);



}

String       v_result = "(" ;


boolean      v_first = true ;


StateMachineEventDataItem_c  v_edi = null;
for ( int i37218 = 0; i37218 < v_edi_set.length; i37218++)
{
  v_edi = v_edi_set[i37218] ;

if ( (  !v_first) )
{

v_result = v_result + "," ;



}

v_result = v_result + v_edi.getName() ;


v_first = false ;



}

return v_result + ")";



   } // End get_name
  public  java.util.UUID         Findwithchangeddata(final boolean      p_Addtoset,final java.util.UUID         p_Data)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Event Supplemental Data", " Operation entered: EventSupplementalData::Findwithchangeddata") ; 
               final ModelRoot modelRoot = getModelRoot();
SupplementalDataItems_c [] v_my_sdi = SupplementalDataItems_c.getManySM_SDIsOnR522(this);


  class EventSupplementalData_test37682_c implements ClassQueryInterface_c
  {
	EventSupplementalData_test37682_c( java.util.UUID         p37683 ) {
		m_p37683 = p37683;
	}
	private java.util.UUID         m_p37683;
	public boolean evaluate (Object candidate)
	{
		EventSupplementalData_c selected = (EventSupplementalData_c)candidate;
		return ! selected.getSmspd_id().equals(m_p37683) ;
	}
  }
EventSupplementalData_c [] v_other_supdt_set = EventSupplementalData_c.getManySM_SUPDTsOnR523(StateMachine_c.getManySM_SMsOnR523(this), new EventSupplementalData_test37682_c(getSmspd_id()));


if ( (p_Addtoset) )
{

EventSupplementalData_c  v_other_supdt = null;
for ( int i37219 = 0; i37219 < v_other_supdt_set.length; i37219++)
{
  v_other_supdt = v_other_supdt_set[i37219] ;

SupplementalDataItems_c [] v_other_sdi_set = SupplementalDataItems_c.getManySM_SDIsOnR522(v_other_supdt);


if ( (  (v_other_sdi_set.length) - 1 ==   (v_my_sdi.length)) )
{

boolean      v_found_all = true ;


SupplementalDataItems_c  v_other_sdi = null;
for ( int i37220 = 0; i37220 < v_other_sdi_set.length; i37220++)
{
  v_other_sdi = v_other_sdi_set[i37220] ;

boolean      v_found = false ;


SupplementalDataItems_c  v_sdi = null;
for ( int i37221 = 0; i37221 < v_my_sdi.length; i37221++)
{
  v_sdi = v_my_sdi[i37221] ;

if ( (v_other_sdi.getSmedi_id().equals(v_sdi.getSmedi_id())) )
{

v_found = true ;


break;



}


}

if ( (  !v_found) )
{

if ( (! v_other_sdi.getSmedi_id().equals(p_Data)) )
{

v_found_all = false ;


break;



}


}


}

if ( (v_found_all) )
{

return v_other_supdt.getSmspd_id();



}


}


}


}

else
{

EventSupplementalData_c  v_other_supdt = null;
for ( int i37222 = 0; i37222 < v_other_supdt_set.length; i37222++)
{
  v_other_supdt = v_other_supdt_set[i37222] ;

SupplementalDataItems_c [] v_other_sdi_set = SupplementalDataItems_c.getManySM_SDIsOnR522(v_other_supdt);


if ( (  (v_other_sdi_set.length) + 1 ==   (v_my_sdi.length)) )
{

boolean      v_found_all = true ;


SupplementalDataItems_c  v_sdi = null;
for ( int i37223 = 0; i37223 < v_my_sdi.length; i37223++)
{
  v_sdi = v_my_sdi[i37223] ;

boolean      v_found = false ;


SupplementalDataItems_c  v_other_sdi = null;
for ( int i37224 = 0; i37224 < v_other_sdi_set.length; i37224++)
{
  v_other_sdi = v_other_sdi_set[i37224] ;

if ( (v_other_sdi.getSmedi_id().equals(v_sdi.getSmedi_id())) )
{

v_found = true ;


break;



}


}

if ( (  !v_found) )
{

if ( (! v_sdi.getSmedi_id().equals(p_Data)) )
{

v_found_all = false ;


break;



}


}


}

if ( (v_found_all) )
{

return v_other_supdt.getSmspd_id();



}


}


}


}

return Gd_c.Null_unique_id();



   } // End findWithChangedData

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Event Supplemental Data
