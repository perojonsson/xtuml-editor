      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.FunctionPackage_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_FUNCTION_PACKAGE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class FunctionPackage_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public FunctionPackage_c(ModelRoot modelRoot,
       java.util.UUID         p_m_funpack_id,
       String       p_m_name,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_parent_funpack_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_funpack_id = IdAssigner.preprocessUUID(p_m_funpack_id);
       //extract 28 bit value only            
       m_funpack_idLongBased = 0xfffffff & p_m_funpack_id.getLeastSignificantBits();
       m_name = p_m_name;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_parent_funpack_id = IdAssigner.preprocessUUID(p_m_parent_funpack_id);
        
    setUniqueId(m_funpack_id);
    Object [] key = {m_funpack_id};
    addInstanceToMap(key);
  }
  static public FunctionPackage_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_funpack_id,
       String       p_m_name,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_parent_funpack_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(FunctionPackage_c.class);
      FunctionPackage_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_funpack_id};
          new_inst = (FunctionPackage_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_funpack_id = IdAssigner.preprocessUUID(p_m_funpack_id);
       //extract 28 bit value only            
       new_inst.m_funpack_idLongBased = 0xfffffff & p_m_funpack_id.getLeastSignificantBits();
       new_inst.m_name = p_m_name;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_parent_funpack_id = IdAssigner.preprocessUUID(p_m_parent_funpack_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new FunctionPackage_c(modelRoot,
p_m_funpack_id,
p_m_name,
p_m_dom_id,
p_m_parent_funpack_id
);
		new_inst.m_contentPath = contentPath;
    new_inst.setComponent(null);
	}
    return new_inst;
  }

  static public FunctionPackage_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_funpack_id,
       String       p_m_name,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_parent_funpack_id){
    InstanceList instances = modelRoot.getInstanceList(FunctionPackage_c.class);
    FunctionPackage_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_funpack_id
            };
        source = (FunctionPackage_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_funpack_id = IdAssigner.preprocessUUID(p_m_funpack_id);
       //extract 28 bit value only            
       source.m_funpack_idLongBased = 0xfffffff & p_m_funpack_id.getLeastSignificantBits();
       source.m_name = p_m_name;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_parent_funpack_id = IdAssigner.preprocessUUID(p_m_parent_funpack_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    FunctionPackage_c new_inst = new FunctionPackage_c(modelRoot,
p_m_funpack_id,
p_m_name,
p_m_dom_id,
p_m_parent_funpack_id
);
    return new_inst;
  }
  public FunctionPackage_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_funpack_id = idAssigner.createUUID();
     m_name = "";   
     m_dom_id = IdAssigner.NULL_UUID;   
     m_parent_funpack_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_funpack_id);
    Object [] key = {m_funpack_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_funpack_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_funpack_id !=  p_newKey ){
	
		m_funpack_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof FunctionPackage_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof FunctionPackage_c)) {
           return false;
       }
       
       FunctionPackage_c me = (FunctionPackage_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getFunpack_id()) || IdAssigner.NULL_UUID.equals(((FunctionPackage_c)elem).getFunpack_id())) && this != elem)) {
      	return false;
      }
      if (!getFunpack_id().equals(((FunctionPackage_c)elem).getFunpack_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof FunctionPackage_c)) {
           return false;
       }
       
       FunctionPackage_c me = (FunctionPackage_c)elem;
      if (!getFunpack_id().equals(((FunctionPackage_c)elem).getFunpack_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_funpack_id ;
  private long m_funpack_idLongBased ;
  private String       m_name ;
  private java.util.UUID         m_dom_id ;
  private java.util.UUID         m_parent_funpack_id ;
      
// declare association references from this class
  
  
    
// referring navigation

FunctionPackageInPackage_c IsChildViaFunctionPackageInPackage ;
public void relateAcrossR32To(FunctionPackageInPackage_c target)
{
	relateAcrossR32To(target, true);
}
public void relateAcrossR32To(FunctionPackageInPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsChildViaFunctionPackageInPackage) return;  // already related

    if ( IsChildViaFunctionPackageInPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsChildViaFunctionPackageInPackage != null) {
        UmlProblem.removeXtUMLProblem(this, IsChildViaFunctionPackageInPackage);
    
        IsChildViaFunctionPackageInPackage.clearBackPointerR32To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"FunctionPackage_c.relateAcrossR32To(FunctionPackageInPackage_c target)", 
			"Relate performed across R32 from Function Package to Function Package in Package without unrelate of prior instance.");  
		}
    }
                
    	IsChildViaFunctionPackageInPackage = target ;
        if(IdAssigner.NULL_UUID.equals(target.getFunpack_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_parent_funpack_id = target.getFunpack_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR32To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "32", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR32From(FunctionPackageInPackage_c target)
{
	unrelateAcrossR32From(target, true);
}
public void unrelateAcrossR32From(FunctionPackageInPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsChildViaFunctionPackageInPackage == null) return;  // already unrelated
	
	if (target != IsChildViaFunctionPackageInPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R32", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR32To(this);
    }
    

      if(IsChildViaFunctionPackageInPackage != null) {
      
        m_parent_funpack_id = IsChildViaFunctionPackageInPackage.getFunpack_id();
        if(IdAssigner.NULL_UUID.equals(m_parent_funpack_id))
        {
          m_parent_funpack_id = IsChildViaFunctionPackageInPackage.getFunpack_idCachedValue();
        }       
        IsChildViaFunctionPackageInPackage = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "32", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static FunctionPackage_c getOneS_FPKOnR32(FunctionPackageInPackage_c [] targets)
{
    return getOneS_FPKOnR32(targets, null);
}

public static FunctionPackage_c getOneS_FPKOnR32(FunctionPackageInPackage_c [] targets, ClassQueryInterface_c test)
{
    FunctionPackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_FPKOnR32(targets[i], test);
        }
    }

    return ret_val;
}

public static FunctionPackage_c getOneS_FPKOnR32(FunctionPackageInPackage_c target)
{
  return getOneS_FPKOnR32(target, null);
}

public static FunctionPackage_c getOneS_FPKOnR32(FunctionPackageInPackage_c target, boolean loadComponent)
{
    return getOneS_FPKOnR32(target.getModelRoot(), target, null, loadComponent);
}

public static FunctionPackage_c getOneS_FPKOnR32(FunctionPackageInPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_FPKOnR32(target.getModelRoot(), target, test);
  }
  return null;
}

public static FunctionPackage_c getOneS_FPKOnR32(ModelRoot modelRoot, FunctionPackageInPackage_c target, ClassQueryInterface_c test)
{
	return getOneS_FPKOnR32(modelRoot, target, test, true);
}

public static FunctionPackage_c getOneS_FPKOnR32(ModelRoot modelRoot, FunctionPackageInPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  FunctionPackage_c result = null;
  
  result=find_getOneS_FPKOnR32(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,FunctionPackage_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_FPKOnR32(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static FunctionPackage_c find_getOneS_FPKOnR32(ModelRoot modelRoot, FunctionPackageInPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsFunctionPackageContains_R32) {
	    for ( int i = 0; i < target.backPointer_ContainsFunctionPackageContains_R32.size(); ++i ) {
	      FunctionPackage_c source = (FunctionPackage_c)target.backPointer_ContainsFunctionPackageContains_R32.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static FunctionPackage_c [] getManyS_FPKsOnR32(FunctionPackageInPackage_c [] targets)
{
  return getManyS_FPKsOnR32(targets, null);
}
public static FunctionPackage_c [] getManyS_FPKsOnR32(FunctionPackageInPackage_c [] targets, boolean loadComponent)
{
  return getManyS_FPKsOnR32(targets, null, loadComponent);
}
public static FunctionPackage_c [] getManyS_FPKsOnR32(FunctionPackageInPackage_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR32(targets, test, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR32(FunctionPackageInPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new FunctionPackage_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, FunctionPackage_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(FunctionPackage_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsFunctionPackageContains_R32) {
	    for (int j = 0; j < targets[i].backPointer_ContainsFunctionPackageContains_R32.size(); ++j) {
	      FunctionPackage_c source = (FunctionPackage_c)targets[i].backPointer_ContainsFunctionPackageContains_R32.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	FunctionPackage_c[] ret_set = new FunctionPackage_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new FunctionPackage_c[0];
  }
  }

public static FunctionPackage_c [] getManyS_FPKsOnR32(FunctionPackageInPackage_c target)
{
  return getManyS_FPKsOnR32(target, null);
}

public static FunctionPackage_c [] getManyS_FPKsOnR32(FunctionPackageInPackage_c target, boolean loadComponent)
{
  return getManyS_FPKsOnR32(target, null, loadComponent);
}

public static FunctionPackage_c [] getManyS_FPKsOnR32(FunctionPackageInPackage_c target, ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR32(target, test, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR32(FunctionPackageInPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new FunctionPackage_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, FunctionPackage_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsFunctionPackageContains_R32) {
    for (int i = 0; i < target.backPointer_ContainsFunctionPackageContains_R32.size(); ++i) {
      FunctionPackage_c source = (FunctionPackage_c)target.backPointer_ContainsFunctionPackageContains_R32.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		FunctionPackage_c[] ret_set = new FunctionPackage_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new FunctionPackage_c[0];
	}
  }


  
    
// referring navigation

Domain_c IsContainedInDomain ;
public void relateAcrossR29To(Domain_c target)
{
	relateAcrossR29To(target, true);
}
public void relateAcrossR29To(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsContainedInDomain) return;  // already related

    if ( IsContainedInDomain != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsContainedInDomain != null) {
        UmlProblem.removeXtUMLProblem(this, IsContainedInDomain);
    
        IsContainedInDomain.clearBackPointerR29To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"FunctionPackage_c.relateAcrossR29To(Domain_c target)", 
			"Relate performed across R29 from Function Package to Domain without unrelate of prior instance.");  
		}
    }
                
    	IsContainedInDomain = target ;
        m_dom_id = target.getDom_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR29To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "29", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR29From(Domain_c target)
{
	unrelateAcrossR29From(target, true);
}
public void unrelateAcrossR29From(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsContainedInDomain == null) return;  // already unrelated
	
	if (target != IsContainedInDomain) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R29", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR29To(this);
    }
    

      if(IsContainedInDomain != null) {
      
        m_dom_id = IsContainedInDomain.getDom_id();
        IsContainedInDomain = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "29", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static FunctionPackage_c getOneS_FPKOnR29(Domain_c [] targets)
{
    return getOneS_FPKOnR29(targets, null);
}

public static FunctionPackage_c getOneS_FPKOnR29(Domain_c [] targets, ClassQueryInterface_c test)
{
    FunctionPackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_FPKOnR29(targets[i], test);
        }
    }

    return ret_val;
}

public static FunctionPackage_c getOneS_FPKOnR29(Domain_c target)
{
  return getOneS_FPKOnR29(target, null);
}

public static FunctionPackage_c getOneS_FPKOnR29(Domain_c target, boolean loadComponent)
{
    return getOneS_FPKOnR29(target.getModelRoot(), target, null, loadComponent);
}

public static FunctionPackage_c getOneS_FPKOnR29(Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_FPKOnR29(target.getModelRoot(), target, test);
  }
  return null;
}

public static FunctionPackage_c getOneS_FPKOnR29(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
	return getOneS_FPKOnR29(modelRoot, target, test, true);
}

public static FunctionPackage_c getOneS_FPKOnR29(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  FunctionPackage_c result = null;
  
  result=find_getOneS_FPKOnR29(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,FunctionPackage_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_FPKOnR29(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static FunctionPackage_c find_getOneS_FPKOnR29(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsFunctionPackageContains_R29) {
	    for ( int i = 0; i < target.backPointer_ContainsFunctionPackageContains_R29.size(); ++i ) {
	      FunctionPackage_c source = (FunctionPackage_c)target.backPointer_ContainsFunctionPackageContains_R29.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static FunctionPackage_c [] getManyS_FPKsOnR29(Domain_c [] targets)
{
  return getManyS_FPKsOnR29(targets, null);
}
public static FunctionPackage_c [] getManyS_FPKsOnR29(Domain_c [] targets, boolean loadComponent)
{
  return getManyS_FPKsOnR29(targets, null, loadComponent);
}
public static FunctionPackage_c [] getManyS_FPKsOnR29(Domain_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR29(targets, test, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR29(Domain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new FunctionPackage_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, FunctionPackage_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(FunctionPackage_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsFunctionPackageContains_R29) {
	    for (int j = 0; j < targets[i].backPointer_ContainsFunctionPackageContains_R29.size(); ++j) {
	      FunctionPackage_c source = (FunctionPackage_c)targets[i].backPointer_ContainsFunctionPackageContains_R29.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	FunctionPackage_c[] ret_set = new FunctionPackage_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new FunctionPackage_c[0];
  }
  }

public static FunctionPackage_c [] getManyS_FPKsOnR29(Domain_c target)
{
  return getManyS_FPKsOnR29(target, null);
}

public static FunctionPackage_c [] getManyS_FPKsOnR29(Domain_c target, boolean loadComponent)
{
  return getManyS_FPKsOnR29(target, null, loadComponent);
}

public static FunctionPackage_c [] getManyS_FPKsOnR29(Domain_c target, ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR29(target, test, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR29(Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new FunctionPackage_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, FunctionPackage_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsFunctionPackageContains_R29) {
    for (int i = 0; i < target.backPointer_ContainsFunctionPackageContains_R29.size(); ++i) {
      FunctionPackage_c source = (FunctionPackage_c)target.backPointer_ContainsFunctionPackageContains_R29.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		FunctionPackage_c[] ret_set = new FunctionPackage_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new FunctionPackage_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

FunctionPackageInPackage_c backPointer_IsParentToOtherPackagesViaFunctionPackageInPackageIsParentToOtherPackagesVia_R30;

public void setFunctionPackageInPackageOrderInChildListR30(FunctionPackageInPackage_c target, int index) {
	unrelateAcrossR30From(target);
	FunctionPackageInPackage_c[] elements = FunctionPackageInPackage_c.getManyS_FPIPsOnR30(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR30From((FunctionPackageInPackage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR30To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR30To((FunctionPackageInPackage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR30To(FunctionPackageInPackage_c target)
{
  if (target != null) {
    target.relateAcrossR30To(this, true) ;
  }
}

public void relateAcrossR30To(FunctionPackageInPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR30To(this, notifyChanges) ;
  }
}

public void setBackPointerR30To(FunctionPackageInPackage_c target)
{
    backPointer_IsParentToOtherPackagesViaFunctionPackageInPackageIsParentToOtherPackagesVia_R30 = target;
}

public void unrelateAcrossR30From(FunctionPackageInPackage_c target)
{
  if (target != null) {
    target.unrelateAcrossR30From(this, true) ;
  }
}

public void unrelateAcrossR30From(FunctionPackageInPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR30From(this, notifyChanges) ;
  }
}

public void clearBackPointerR30To(FunctionPackageInPackage_c target)
{
	if (target == backPointer_IsParentToOtherPackagesViaFunctionPackageInPackageIsParentToOtherPackagesVia_R30) {
		backPointer_IsParentToOtherPackagesViaFunctionPackageInPackageIsParentToOtherPackagesVia_R30 = null;
	}
}

public static FunctionPackage_c getOneS_FPKOnR30(FunctionPackageInPackage_c [] targets)
{
    return getOneS_FPKOnR30(targets, null);
}

public static FunctionPackage_c getOneS_FPKOnR30(FunctionPackageInPackage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_FPKOnR30(targets, test, true);
}

public static FunctionPackage_c getOneS_FPKOnR30(FunctionPackageInPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    FunctionPackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             FunctionPackage_c candidate_val = getOneS_FPKOnR30(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_FPKOnR30(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static FunctionPackage_c getOneS_FPKOnR30(FunctionPackageInPackage_c target)
{
	return getOneS_FPKOnR30(target, true);
}
public static FunctionPackage_c getOneS_FPKOnR30(FunctionPackageInPackage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ContainsChildrenOfFunctionPackage ;
  } else {
    return null;
  }
}

public static FunctionPackage_c [] getManyS_FPKsOnR30(FunctionPackageInPackage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR30(targets, test, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR30(FunctionPackageInPackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new FunctionPackage_c[0];
  
  
  LinkedHashSet<FunctionPackage_c> elementsSet = new LinkedHashSet<FunctionPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ContainsChildrenOfFunctionPackage == null)
	  targets[i].loadProxy();
    FunctionPackage_c associate = targets[i].ContainsChildrenOfFunctionPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  FunctionPackage_c[] result = new FunctionPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static FunctionPackage_c [] getManyS_FPKsOnR30(FunctionPackageInPackage_c [] targets)
{
  return getManyS_FPKsOnR30(targets, null);
}

public static FunctionPackage_c [] getManyS_FPKsOnR30(FunctionPackageInPackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionPackageInPackage_c [] targetArray = new FunctionPackageInPackage_c[1];
    targetArray[0] = target;
    return getManyS_FPKsOnR30(targetArray, test, loadComponent);
  } else {
    FunctionPackage_c [] result = new FunctionPackage_c [0] ;
    return result ;
  }
  
}

public static FunctionPackage_c [] getManyS_FPKsOnR30(FunctionPackageInPackage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_FPKsOnR30(target, null, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR30(FunctionPackageInPackage_c target)
{
    return getManyS_FPKsOnR30(target, null, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR30(FunctionPackageInPackage_c target, boolean loadComponent)
{
    return getManyS_FPKsOnR30(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionPackageParticipant_c> backPointer_RepresentsParticipantOfFunctionPackageParticipantRepresentsParticipantOf_R932 = new ArrayList<FunctionPackageParticipant_c>();

public void setFunctionPackageParticipantOrderInChildListR932(FunctionPackageParticipant_c target, int index) {
	unrelateAcrossR932From(target);
	FunctionPackageParticipant_c[] elements = FunctionPackageParticipant_c.getManySQ_FPPsOnR932(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR932From((FunctionPackageParticipant_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR932To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR932To((FunctionPackageParticipant_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR932To(FunctionPackageParticipant_c target)
{
  if (target != null) {
    target.relateAcrossR932To(this, true) ;
  }
}

public void relateAcrossR932To(FunctionPackageParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR932To(this, notifyChanges) ;
  }
}

public void setBackPointerR932To(FunctionPackageParticipant_c target)
{
  	synchronized (backPointer_RepresentsParticipantOfFunctionPackageParticipantRepresentsParticipantOf_R932) {
		backPointer_RepresentsParticipantOfFunctionPackageParticipantRepresentsParticipantOf_R932.add(target);
	}
}

public void unrelateAcrossR932From(FunctionPackageParticipant_c target)
{
  if (target != null) {
    target.unrelateAcrossR932From(this, true) ;
  }
}

public void unrelateAcrossR932From(FunctionPackageParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR932From(this, notifyChanges) ;
  }
}

public void clearBackPointerR932To(FunctionPackageParticipant_c target)
{
  synchronized (backPointer_RepresentsParticipantOfFunctionPackageParticipantRepresentsParticipantOf_R932) {
	    backPointer_RepresentsParticipantOfFunctionPackageParticipantRepresentsParticipantOf_R932.remove(target);
	}
}

public static FunctionPackage_c getOneS_FPKOnR932(FunctionPackageParticipant_c [] targets)
{
    return getOneS_FPKOnR932(targets, null);
}

public static FunctionPackage_c getOneS_FPKOnR932(FunctionPackageParticipant_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_FPKOnR932(targets, test, true);
}

public static FunctionPackage_c getOneS_FPKOnR932(FunctionPackageParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    FunctionPackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             FunctionPackage_c candidate_val = getOneS_FPKOnR932(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_FPKOnR932(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static FunctionPackage_c getOneS_FPKOnR932(FunctionPackageParticipant_c target)
{
	return getOneS_FPKOnR932(target, true);
}
public static FunctionPackage_c getOneS_FPKOnR932(FunctionPackageParticipant_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.RepresentsFunctionPackage != null){
		target.RepresentsFunctionPackage.loadProxy();
	}
	}
    return target.RepresentsFunctionPackage ;
  } else {
    return null;
  }
}

public static FunctionPackage_c [] getManyS_FPKsOnR932(FunctionPackageParticipant_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR932(targets, test, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR932(FunctionPackageParticipant_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new FunctionPackage_c[0];
  
  
  LinkedHashSet<FunctionPackage_c> elementsSet = new LinkedHashSet<FunctionPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RepresentsFunctionPackage == null)
	  targets[i].loadProxy();
    FunctionPackage_c associate = targets[i].RepresentsFunctionPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  FunctionPackage_c[] result = new FunctionPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static FunctionPackage_c [] getManyS_FPKsOnR932(FunctionPackageParticipant_c [] targets)
{
  return getManyS_FPKsOnR932(targets, null);
}

public static FunctionPackage_c [] getManyS_FPKsOnR932(FunctionPackageParticipant_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionPackageParticipant_c [] targetArray = new FunctionPackageParticipant_c[1];
    targetArray[0] = target;
    return getManyS_FPKsOnR932(targetArray, test, loadComponent);
  } else {
    FunctionPackage_c [] result = new FunctionPackage_c [0] ;
    return result ;
  }
  
}

public static FunctionPackage_c [] getManyS_FPKsOnR932(FunctionPackageParticipant_c target,
    ClassQueryInterface_c test)
{
    return getManyS_FPKsOnR932(target, null, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR932(FunctionPackageParticipant_c target)
{
    return getManyS_FPKsOnR932(target, null, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR932(FunctionPackageParticipant_c target, boolean loadComponent)
{
    return getManyS_FPKsOnR932(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionInPackage_c> backPointer_ContainsFunctionInPackageContains_R31 = new ArrayList<FunctionInPackage_c>();

public void setFunctionInPackageOrderInChildListR31(FunctionInPackage_c target, int index) {
	unrelateAcrossR31From(target);
	FunctionInPackage_c[] elements = FunctionInPackage_c.getManyS_FIPsOnR31(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR31From((FunctionInPackage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR31To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR31To((FunctionInPackage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR31To(FunctionInPackage_c target)
{
  if (target != null) {
    target.relateAcrossR31To(this, true) ;
  }
}

public void relateAcrossR31To(FunctionInPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR31To(this, notifyChanges) ;
  }
}

public void setBackPointerR31To(FunctionInPackage_c target)
{
  	synchronized (backPointer_ContainsFunctionInPackageContains_R31) {
		backPointer_ContainsFunctionInPackageContains_R31.add(target);
	}
}

public void unrelateAcrossR31From(FunctionInPackage_c target)
{
  if (target != null) {
    target.unrelateAcrossR31From(this, true) ;
  }
}

public void unrelateAcrossR31From(FunctionInPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR31From(this, notifyChanges) ;
  }
}

public void clearBackPointerR31To(FunctionInPackage_c target)
{
  synchronized (backPointer_ContainsFunctionInPackageContains_R31) {
	    backPointer_ContainsFunctionInPackageContains_R31.remove(target);
	}
}

public static FunctionPackage_c getOneS_FPKOnR31(FunctionInPackage_c [] targets)
{
    return getOneS_FPKOnR31(targets, null);
}

public static FunctionPackage_c getOneS_FPKOnR31(FunctionInPackage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_FPKOnR31(targets, test, true);
}

public static FunctionPackage_c getOneS_FPKOnR31(FunctionInPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    FunctionPackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             FunctionPackage_c candidate_val = getOneS_FPKOnR31(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_FPKOnR31(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static FunctionPackage_c getOneS_FPKOnR31(FunctionInPackage_c target)
{
	return getOneS_FPKOnR31(target, true);
}
public static FunctionPackage_c getOneS_FPKOnR31(FunctionInPackage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsContainedInFunctionPackage ;
  } else {
    return null;
  }
}

public static FunctionPackage_c [] getManyS_FPKsOnR31(FunctionInPackage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR31(targets, test, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR31(FunctionInPackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new FunctionPackage_c[0];
  
  
  LinkedHashSet<FunctionPackage_c> elementsSet = new LinkedHashSet<FunctionPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsContainedInFunctionPackage == null)
	  targets[i].loadProxy();
    FunctionPackage_c associate = targets[i].IsContainedInFunctionPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  FunctionPackage_c[] result = new FunctionPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static FunctionPackage_c [] getManyS_FPKsOnR31(FunctionInPackage_c [] targets)
{
  return getManyS_FPKsOnR31(targets, null);
}

public static FunctionPackage_c [] getManyS_FPKsOnR31(FunctionInPackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionInPackage_c [] targetArray = new FunctionInPackage_c[1];
    targetArray[0] = target;
    return getManyS_FPKsOnR31(targetArray, test, loadComponent);
  } else {
    FunctionPackage_c [] result = new FunctionPackage_c [0] ;
    return result ;
  }
  
}

public static FunctionPackage_c [] getManyS_FPKsOnR31(FunctionInPackage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_FPKsOnR31(target, null, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR31(FunctionInPackage_c target)
{
    return getManyS_FPKsOnR31(target, null, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR31(FunctionInPackage_c target, boolean loadComponent)
{
    return getManyS_FPKsOnR31(target, null, loadComponent);
}

public static FunctionPackage_c getOneS_FPKOnR31(Function_c target)
{
  return FunctionPackage_c.getOneS_FPKOnR31(FunctionInPackage_c.getOneS_FIPOnR31(target)) ;
}

public static FunctionPackage_c getOneS_FPKOnR31(Function_c target,
    ClassQueryInterface_c test)
{
  return FunctionPackage_c.getOneS_FPKOnR31(FunctionInPackage_c.getManyS_FIPsOnR31(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<FunctionPackageInDomain_c> backPointer_IsContainerFunctionPackageInDomainIsContainer_R301 = new ArrayList<FunctionPackageInDomain_c>();

public void setFunctionPackageInDomainOrderInChildListR301(FunctionPackageInDomain_c target, int index) {
	unrelateAcrossR301From(target);
	FunctionPackageInDomain_c[] elements = FunctionPackageInDomain_c.getManyPL_FPIDsOnR301(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR301From((FunctionPackageInDomain_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR301To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR301To((FunctionPackageInDomain_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR301To(FunctionPackageInDomain_c target)
{
  if (target != null) {
    target.relateAcrossR301To(this, true) ;
  }
}

public void relateAcrossR301To(FunctionPackageInDomain_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR301To(this, notifyChanges) ;
  }
}

public void setBackPointerR301To(FunctionPackageInDomain_c target)
{
  	synchronized (backPointer_IsContainerFunctionPackageInDomainIsContainer_R301) {
		backPointer_IsContainerFunctionPackageInDomainIsContainer_R301.add(target);
	}
}

public void unrelateAcrossR301From(FunctionPackageInDomain_c target)
{
  if (target != null) {
    target.unrelateAcrossR301From(this, true) ;
  }
}

public void unrelateAcrossR301From(FunctionPackageInDomain_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR301From(this, notifyChanges) ;
  }
}

public void clearBackPointerR301To(FunctionPackageInDomain_c target)
{
  synchronized (backPointer_IsContainerFunctionPackageInDomainIsContainer_R301) {
	    backPointer_IsContainerFunctionPackageInDomainIsContainer_R301.remove(target);
	}
}

public static FunctionPackage_c getOneS_FPKOnR301(FunctionPackageInDomain_c [] targets)
{
    return getOneS_FPKOnR301(targets, null);
}

public static FunctionPackage_c getOneS_FPKOnR301(FunctionPackageInDomain_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_FPKOnR301(targets, test, true);
}

public static FunctionPackage_c getOneS_FPKOnR301(FunctionPackageInDomain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    FunctionPackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             FunctionPackage_c candidate_val = getOneS_FPKOnR301(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_FPKOnR301(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static FunctionPackage_c getOneS_FPKOnR301(FunctionPackageInDomain_c target)
{
	return getOneS_FPKOnR301(target, true);
}
public static FunctionPackage_c getOneS_FPKOnR301(FunctionPackageInDomain_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.ContainsFunctionPackage != null){
		target.ContainsFunctionPackage.loadProxy();
	}
	}
    return target.ContainsFunctionPackage ;
  } else {
    return null;
  }
}

public static FunctionPackage_c [] getManyS_FPKsOnR301(FunctionPackageInDomain_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR301(targets, test, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR301(FunctionPackageInDomain_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new FunctionPackage_c[0];
  
  
  LinkedHashSet<FunctionPackage_c> elementsSet = new LinkedHashSet<FunctionPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ContainsFunctionPackage == null)
	  targets[i].loadProxy();
    FunctionPackage_c associate = targets[i].ContainsFunctionPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  FunctionPackage_c[] result = new FunctionPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static FunctionPackage_c [] getManyS_FPKsOnR301(FunctionPackageInDomain_c [] targets)
{
  return getManyS_FPKsOnR301(targets, null);
}

public static FunctionPackage_c [] getManyS_FPKsOnR301(FunctionPackageInDomain_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionPackageInDomain_c [] targetArray = new FunctionPackageInDomain_c[1];
    targetArray[0] = target;
    return getManyS_FPKsOnR301(targetArray, test, loadComponent);
  } else {
    FunctionPackage_c [] result = new FunctionPackage_c [0] ;
    return result ;
  }
  
}

public static FunctionPackage_c [] getManyS_FPKsOnR301(FunctionPackageInDomain_c target,
    ClassQueryInterface_c test)
{
    return getManyS_FPKsOnR301(target, null, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR301(FunctionPackageInDomain_c target)
{
    return getManyS_FPKsOnR301(target, null, true);
}

public static FunctionPackage_c [] getManyS_FPKsOnR301(FunctionPackageInDomain_c target, boolean loadComponent)
{
    return getManyS_FPKsOnR301(target, null, loadComponent);
}

public static FunctionPackage_c getOneS_FPKOnR301(Domain_c target)
{
  return FunctionPackage_c.getOneS_FPKOnR301(FunctionPackageInDomain_c.getOnePL_FPIDOnR301(target)) ;
}

public static FunctionPackage_c getOneS_FPKOnR301(Domain_c target,
    ClassQueryInterface_c test)
{
  return FunctionPackage_c.getOneS_FPKOnR301(FunctionPackageInDomain_c.getManyPL_FPIDsOnR301(target), test) ;
}

public static FunctionPackage_c [] getManyS_FPKsOnR301(Domain_c target,
    ClassQueryInterface_c test)
{
	return getManyS_FPKsOnR301(target, test, true);
}
public static FunctionPackage_c [] getManyS_FPKsOnR301(Domain_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  FunctionPackageInDomain_c [] associators = FunctionPackageInDomain_c.getManyPL_FPIDsOnR301(target, loadComponent) ;
    return FunctionPackage_c.getManyS_FPKsOnR301(associators, test, loadComponent) ;
}
public static FunctionPackage_c [] getManyS_FPKsOnR301(Domain_c target)
{
    return getManyS_FPKsOnR301(target, null, true);
}
public static FunctionPackage_c [] getManyS_FPKsOnR301(Domain_c target, boolean loadComponent)
{
    return getManyS_FPKsOnR301(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (IsChildViaFunctionPackageInPackage == null) {          
      // R32
      FunctionPackageInPackage_c relInst56401 = (FunctionPackageInPackage_c) baseRoot.getInstanceList(FunctionPackageInPackage_c.class).get(new Object[] {m_parent_funpack_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56401 == null) {
      			relInst56401 = (FunctionPackageInPackage_c) Ooaofooa.getDefaultInstance().getInstanceList(FunctionPackageInPackage_c.class).get(new Object[] {m_parent_funpack_id});
      		}
			if (relInst56401 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56401 = (FunctionPackageInPackage_c) roots[i].getInstanceList(FunctionPackageInPackage_c.class).get(new Object[] {m_parent_funpack_id});
					if (relInst56401 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56401 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56401) && !isProxy())) {
	      relInst56401.relateAcrossR32To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsContainedInDomain == null) {          
      // R29
      Domain_c relInst56402 = (Domain_c) baseRoot.getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56402 == null) {
      			relInst56402 = (Domain_c) Ooaofooa.getDefaultInstance().getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
      		}
			if (relInst56402 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56402 = (Domain_c) roots[i].getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
					if (relInst56402 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56402 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56402) && !isProxy())) {
	      relInst56402.relateAcrossR29To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R32
      // S_FPIP
		  inst=IsChildViaFunctionPackageInPackage;
			unrelateAcrossR32From(IsChildViaFunctionPackageInPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R29
      // S_DOM
		  inst=IsContainedInDomain;
			unrelateAcrossR29From(IsContainedInDomain, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(FunctionPackage_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final FunctionPackage_c inst = (FunctionPackage_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(FunctionPackage_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static FunctionPackage_c FunctionPackageInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		FunctionPackage_c result=findFunctionPackageInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,FunctionPackage_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findFunctionPackageInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static FunctionPackage_c findFunctionPackageInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(FunctionPackage_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				FunctionPackage_c x = (FunctionPackage_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static FunctionPackage_c FunctionPackageInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return FunctionPackageInstance(modelRoot,test,true);
  }
  
  public static FunctionPackage_c FunctionPackageInstance(ModelRoot modelRoot)
  {
	 return FunctionPackageInstance(modelRoot,null,true);
  }

  public static FunctionPackage_c [] FunctionPackageInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, FunctionPackage_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(FunctionPackage_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					FunctionPackage_c x = (FunctionPackage_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				FunctionPackage_c[] ret_set = new FunctionPackage_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new FunctionPackage_c[0];
			}		
		} 
  }
  public static FunctionPackage_c [] FunctionPackageInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  FunctionPackageInstances(modelRoot,test,true);
  }
  public static FunctionPackage_c [] FunctionPackageInstances(ModelRoot modelRoot)
  {
	return FunctionPackageInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Function Package.dispose call: ";
	FunctionPackageInPackage_c testR30Inst = FunctionPackageInPackage_c.getOneS_FPIPOnR30(this, false);

	if ( testR30Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "30 ";	
	}
	FunctionPackageInPackage_c testR32Inst = FunctionPackageInPackage_c.getOneS_FPIPOnR32(this, false);

	if ( testR32Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "32 ";
	}
	FunctionPackageParticipant_c testR932Inst = FunctionPackageParticipant_c.getOneSQ_FPPOnR932(this, false);

	if ( testR932Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "932 ";	
	}
	Domain_c testR29Inst = Domain_c.getOneS_DOMOnR29(this, false);

	if ( testR29Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "29 ";
	}
	FunctionInPackage_c testR31Inst = FunctionInPackage_c.getOneS_FIPOnR31(this, false);

	if ( testR31Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "31 ";
	}
	FunctionPackageInDomain_c testR301Inst = FunctionPackageInDomain_c.getOnePL_FPIDOnR301(this, false);

	if ( testR301Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "301 ";
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Function Package", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("funpack_id")){
         return true;
      }
      if(attributeName.equals("dom_id")){
         return true;
      }
      if(attributeName.equals("parent_funpack_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getFunpack_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getFunpack_idLongBased()
  {
    if(m_funpack_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_funpack_id)){
    	return 0xfffffff & m_funpack_id.getLeastSignificantBits();
    }
    return m_funpack_idLongBased ;
  }
  public java.util.UUID getFunpack_id()
  {
    return m_funpack_id ;
  }


  public void setFunpack_id(java.util.UUID newValue)
  {
   m_funpack_id = IdAssigner.preprocessUUID(newValue);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDom_idLongBased()
  {
    if ( IsContainedInDomain != null )
    {
      return IsContainedInDomain.getDom_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDom_id()
  {
    if ( IsContainedInDomain != null )
    {
      return IsContainedInDomain.getDom_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDom_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dom_id) )
      return m_dom_id;
    else
      return getDom_id();
  }
  
  public void setDom_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dom_id)){
	        return;
	    }
	}else if(m_dom_id != null){
	    if(m_dom_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dom_id", m_dom_id, newValue,true); 
   m_dom_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getParent_funpack_idLongBased()
  {
    if ( IsChildViaFunctionPackageInPackage != null )
    {
      return IsChildViaFunctionPackageInPackage.getFunpack_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getParent_funpack_id()
  {
    if ( IsChildViaFunctionPackageInPackage != null )
    {
      return IsChildViaFunctionPackageInPackage.getFunpack_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getParent_funpack_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_parent_funpack_id) )
      return m_parent_funpack_id;
    else
      return getParent_funpack_id();
  }
  
  public void setParent_funpack_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_parent_funpack_id)){
	        return;
	    }
	}else if(m_parent_funpack_id != null){
	    if(m_parent_funpack_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Parent_funpack_id", m_parent_funpack_id, newValue,true); 
   m_parent_funpack_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Function Package", //$NON-NLS-1$
	  " Operation entered: Function Package::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     FunctionPackage_c [] objs = FunctionPackage_c.FunctionPackageInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Function Package", //$NON-NLS-1$
	  " Operation entered: Function Package::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class FunctionPackage_c_test56404_c implements ClassQueryInterface_c
    {
	  FunctionPackage_c_test56404_c( java.util.UUID            p56405 ) {
	  m_p56405 = p56405;
	  }
	  private java.util.UUID             m_p56405; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionPackage_c selected = (FunctionPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getFunpack_id().equals(m_p56405));
	      return retval;
	  }
    }

    FunctionPackage_c [] objs56403 = 
    FunctionPackage_c.FunctionPackageInstances(modelRoot, new FunctionPackage_c_test56404_c(getFunpack_id())) ;

    if ( (  (objs56403.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Package", //$NON-NLS-1$
           "Consistency: Object: Function Package: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56403.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Package: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56403.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56403.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Package", //$NON-NLS-1$
           "Consistency: Object: Function Package: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56403.length )  + " FunPack_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Package: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56403.length )  + " FunPack_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Function Package is a referring class in association: rel.Numb = 29
          // The participating class is: Domain
    class Domain_c_test56409_c implements ClassQueryInterface_c
    {
	  Domain_c_test56409_c( java.util.UUID            p56410 ) {
	  m_p56410 = p56410;
	  }
	  private java.util.UUID             m_p56410; 
	  public boolean evaluate (Object candidate)
	  {
	      Domain_c selected = (Domain_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDom_id().equals(m_p56410));
	      return retval;
	  }
    }

    Domain_c [] objs56408 = 
    Domain_c.DomainInstances(modelRoot, new Domain_c_test56409_c(getDom_id())) ;

    if ( (  (objs56408.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Package", //$NON-NLS-1$
           "Consistency: Object: Function Package: Association: 29: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56408.length )  + " Dom_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Package: Association: 29: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56408.length )  + " Dom_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Function Package is a referring class in association: rel.Numb = 32
          // The participating class is: Function Package in Package
    class FunctionPackageInPackage_c_test56412_c implements ClassQueryInterface_c
    {
	  FunctionPackageInPackage_c_test56412_c( java.util.UUID            p56413 ) {
	  m_p56413 = p56413;
	  }
	  private java.util.UUID             m_p56413; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionPackageInPackage_c selected = (FunctionPackageInPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getFunpack_id().equals(m_p56413));
	      return retval;
	  }
    }

    FunctionPackageInPackage_c [] objs56411 = 
    FunctionPackageInPackage_c.FunctionPackageInPackageInstances(modelRoot, new FunctionPackageInPackage_c_test56412_c(getParent_funpack_id())) ;

    if ( (  (objs56411.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Package", //$NON-NLS-1$
           "Consistency: Object: Function Package: Association: 32: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56411.length )  + " Parent_FunPack_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Package: Association: 32: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56411.length )  + " Parent_FunPack_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Function Package is a participating class in association: rel.Numb = 30
             // Object: Function Package in Package
    class FunctionPackageInPackage_c_test56415_c implements ClassQueryInterface_c
    {
	  FunctionPackageInPackage_c_test56415_c( java.util.UUID            p56416 ) {
	  m_p56416 = p56416;
	  }
	  private java.util.UUID             m_p56416; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionPackageInPackage_c selected = (FunctionPackageInPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getFunpack_id().equals(m_p56416));
	      return retval;
	  }
    }

    FunctionPackageInPackage_c [] objs56414 = 
    FunctionPackageInPackage_c.FunctionPackageInPackageInstances(modelRoot, new FunctionPackageInPackage_c_test56415_c(getFunpack_id())) ;

    if ( (  (objs56414.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Package", //$NON-NLS-1$
           "Consistency: Object: Function Package: Association: 30: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56414.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Package: Association: 30: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56414.length )  , e); 
      }
      retval = false;

    }

          // Function Package is a participating class in association: rel.Numb = 932
             // Object: Function Package Participant
          // Associated One Side: rel.Numb = 31
            // Link Object: Function in Package
            // Other Side Class: Function
          // Associated One Side: rel.Numb = 301
            // Link Object: Function Package in Domain
            // Other Side Class: Domain
    class FunctionPackageInDomain_c_test56419_c implements ClassQueryInterface_c
    {
	  FunctionPackageInDomain_c_test56419_c( java.util.UUID            p56420 ) {
	  m_p56420 = p56420;
	  }
	  private java.util.UUID             m_p56420; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionPackageInDomain_c selected = (FunctionPackageInDomain_c) candidate;
	      boolean retval = false;
	      retval = (selected.getFunpack_id().equals(m_p56420));
	      return retval;
	  }
    }

    FunctionPackageInDomain_c [] objs56421 = 
    FunctionPackageInDomain_c.FunctionPackageInDomainInstances(modelRoot, new FunctionPackageInDomain_c_test56419_c(getFunpack_id())) ;

    if ( (  (objs56421.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Package", //$NON-NLS-1$
           "Consistency: Object: Function Package: Association: 301: Cardinality of a link is equal to zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56421.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Package: Association: 301: Cardinality of a link is equal to zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56421.length )  , e); 
      }
      retval = false;

    }


    if ( (  (objs56421.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Package", //$NON-NLS-1$
           "Consistency: Object: Function Package: Association: 301: Cardinality of a link is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56421.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Package: Association: 301: Cardinality of a link is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56421.length )  , e); 
      }
      retval = false;

    }

    return retval;
  }


  // declare transform functions
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
setName( Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Function Package"			    
,Converttoinstance())) ;



   } // End initialize
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_dom = Domain_c.getOneS_DOMOnR29(this);


if ( (  (v_dom != null)) )
{

if (v_dom != null) {
v_dom.unrelateAcrossR29From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

Function_c [] v_fns = Function_c.getManyS_SYNCsOnR31(this);


Function_c  v_fn = null;
for ( int i54980 = 0; i54980 < v_fns.length; i54980++)
{
  v_fn = v_fns[i54980] ;

if (v_fn != null) {
v_fn.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

FunctionPackageInPackage_c v_fpip = FunctionPackageInPackage_c.getOneS_FPIPOnR30(this);


if ( (  (v_fpip != null)) )
{

FunctionPackage_c [] v_pkgs = FunctionPackage_c.getManyS_FPKsOnR32(v_fpip);


FunctionPackage_c  v_pkg = null;
for ( int i54981 = 0; i54981 < v_pkgs.length; i54981++)
{
  v_pkg = v_pkgs[i54981] ;

if (v_fpip != null) {
v_fpip.unrelateAcrossR32From(v_pkg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_pkg != null) {
v_pkg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

this.unrelateAcrossR30From(v_fpip);


if (v_fpip != null) {
// get the location of this element in the instance list
// before deleting
if ( v_fpip.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_fpip));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

FunctionPackageParticipant_c [] v_fpps = FunctionPackageParticipant_c.getManySQ_FPPsOnR932(this);


FunctionPackageParticipant_c  v_fpp = null;
for ( int i54982 = 0; i54982 < v_fpps.length; i54982++)
{
  v_fpp = v_fpps[i54982] ;

if (v_fpp != null) {
v_fpp.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( (  (v_dom == null)) )
{

v_dom = Domain_c.getOneS_DOMOnR301(FunctionPackageInDomain_c.getOnePL_FPIDOnR301(this));



}

FunctionPackageInDomain_c v_fpid = FunctionPackageInDomain_c.getOnePL_FPIDOnR301(this);


if ( (  (v_fpid != null)) )
{

if (v_fpid != null) {
v_fpid.unrelateAcrossR301From( this ) ; v_fpid.unrelateAcrossR301From( v_dom ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_fpid != null) {
// get the location of this element in the instance list
// before deleting
if ( v_fpid.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_fpid));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Newfunction()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Newfunction") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_dom = Domain_c.getOneS_DOMOnR29(this);


if ( (  (v_dom == null)) )
{

FunctionPackage_c v_rootPkg = FunctionPackage_c.getOneS_FPKOnR30(FunctionPackageInPackage_c.getOneS_FPIPOnR32(this));


while ( (  (v_dom == null)) )
{

v_dom = Domain_c.getOneS_DOMOnR29(v_rootPkg);


v_rootPkg = FunctionPackage_c.getOneS_FPKOnR30(FunctionPackageInPackage_c.getOneS_FPIPOnR32(v_rootPkg));



}


}

Function_c v_fn = new Function_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fn));


if (v_fn != null) {
  v_fn.relateAcrossR23To(v_dom);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


FunctionInPackage_c v_fip = new FunctionInPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fip));


if (v_fip != null) {
  v_fip.relateAcrossR31To( this ) ;   v_fip.relateAcrossR31To( v_fn ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_fn != null) {
v_fn.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newFunction
  public  void Newfunctionpackage()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Newfunctionpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionPackageInPackage_c v_helper = FunctionPackageInPackage_c.getOneS_FPIPOnR30(this);


if ( (  (v_helper == null)) )
{

v_helper = new FunctionPackageInPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_helper));


  this.relateAcrossR30To(v_helper);



}

FunctionPackage_c v_newFPkg = new FunctionPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_newFPkg));


if (v_helper != null) {
  v_helper.relateAcrossR32To(v_newFPkg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


FunctionPackageInDomain_c v_fPkgInDomain = new FunctionPackageInDomain_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fPkgInDomain));


Domain_c v_domain = Domain_c.getOneS_DOMOnR301(FunctionPackageInDomain_c.getOnePL_FPIDOnR301(this));


if (v_fPkgInDomain != null) {
  v_fPkgInDomain.relateAcrossR301To( v_domain ) ;   v_fPkgInDomain.relateAcrossR301To( v_newFPkg ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_newFPkg != null) {
v_newFPkg.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newFunctionPackage
  public  int  Get_style()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.Folder;



   } // End get_style
  public  int  Get_text_style(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Get_text_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.None;



   } // End get_text_style
  public  int          Get_compartments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Get_compartments") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_compartments
  public  int          Get_entries(final int          p_Comp_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Get_entries") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_entries
  public  String       Get_compartment_text(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Get_compartment_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


if ( (p_At == Justification_c.Center_in_X) )
{

v_result = "«function»" ;



}

else if ( (p_At == Justification_c.Center) )
{

v_result = getName() ;



}

return v_result;



   } // End get_compartment_text
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getFunpack_id();



   } // End get_ooa_id
  public  String       Getpath()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_domain = Domain_c.getOneS_DOMOnR301(FunctionPackageInDomain_c.getOnePL_FPIDOnR301(this));


String       v_result = getName() ;


FunctionPackage_c v_fpip = FunctionPackage_c.getOneS_FPKOnR30(FunctionPackageInPackage_c.getOneS_FPIPOnR32(this));


while ( (  (v_fpip != null)) )
{

v_result = v_fpip.getName() + "::" + v_result ;


v_fpip = FunctionPackage_c.getOneS_FPKOnR30(FunctionPackageInPackage_c.getOneS_FPIPOnR32(v_fpip));



}

return v_domain.getName() + "::" + v_result;



   } // End getPath
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  void Pastefunctionpackage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Pastefunctionpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionPackage_c v_pkg = (FunctionPackage_c) modelRoot.getInstanceList(FunctionPackage_c.class).getGlobal(null, p_Id);


if ( (  (v_pkg != null)) )
{

if (v_pkg != null) {
  v_pkg.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_pkg.Converttoinstance()			    
,v_pkg.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Domain_c v_dom = Domain_c.getOneS_DOMOnR29(v_pkg);


if ( (  (v_dom != null)) )
{

if (v_pkg != null) {
v_pkg.unrelateAcrossR29From(v_dom);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

FunctionPackageInPackage_c v_funpkInpk = FunctionPackageInPackage_c.getOneS_FPIPOnR32(v_pkg);


if ( (  (v_funpkInpk != null)) )
{

if (v_pkg != null) {
v_pkg.unrelateAcrossR32From(v_funpkInpk);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

FunctionPackageInPackage_c v_destFunpkInpk = FunctionPackageInPackage_c.getOneS_FPIPOnR30(this);


if ( (  (v_destFunpkInpk == null)) )
{

v_destFunpkInpk = new FunctionPackageInPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_destFunpkInpk));


  this.relateAcrossR30To(v_destFunpkInpk);



}

if (v_destFunpkInpk != null) {
  v_destFunpkInpk.relateAcrossR32To(v_pkg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Domain_c v_domain = Domain_c.getOneS_DOMOnR301(FunctionPackageInDomain_c.getOnePL_FPIDOnR301(this));


FunctionPackageInDomain_c v_fpid = FunctionPackageInDomain_c.getOnePL_FPIDOnR301(v_pkg);


if ( (  (v_fpid != null)) )
{

Domain_c v_prevDomain = Domain_c.getOneS_DOMOnR301(v_fpid);


if (v_fpid != null) {
v_fpid.unrelateAcrossR301From( v_pkg ) ; v_fpid.unrelateAcrossR301From( v_prevDomain ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_fpid != null) {
  v_fpid.relateAcrossR301To( v_pkg ) ;   v_fpid.relateAcrossR301To( v_domain ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

else
{

v_fpid = new FunctionPackageInDomain_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fpid));


if (v_fpid != null) {
  v_fpid.relateAcrossR301To( v_pkg ) ;   v_fpid.relateAcrossR301To( v_domain ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

if (v_pkg != null) {
v_pkg.Associatechildpackagestodomain(			    
v_domain.getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Function_c [] v_functions = Function_c.getManyS_SYNCsOnR31(v_pkg);


Function_c  v_function = null;
for ( int i54983 = 0; i54983 < v_functions.length; i54983++)
{
  v_function = v_functions[i54983] ;

Domain_c v_prevDomain = Domain_c.getOneS_DOMOnR23(v_function);


if ( (  (v_prevDomain != null)) )
{

if (v_function != null) {
v_function.unrelateAcrossR23From(v_prevDomain);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_function != null) {
  v_function.relateAcrossR23To(v_domain);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_pkg != null) {
v_pkg.Associatechildpackagefunctionstodomain(			    
v_domain.getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteFunctionPackage
  public  void Associatechildpackagestodomain(final java.util.UUID         p_Dom_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Associatechildpackagestodomain") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_domain = (Domain_c) modelRoot.getInstanceList(Domain_c.class).getGlobal(null, p_Dom_id);


if ( (  (v_domain != null)) )
{

FunctionPackage_c [] v_childPKGs = FunctionPackage_c.getManyS_FPKsOnR32(FunctionPackageInPackage_c.getManyS_FPIPsOnR30(this));


FunctionPackage_c  v_child = null;
for ( int i54984 = 0; i54984 < v_childPKGs.length; i54984++)
{
  v_child = v_childPKGs[i54984] ;

FunctionPackageInDomain_c v_existingFPID = FunctionPackageInDomain_c.getOnePL_FPIDOnR301(v_child);


Domain_c v_existingDom = Domain_c.getOneS_DOMOnR301(v_existingFPID);


if (v_existingFPID != null) {
v_existingFPID.unrelateAcrossR301From( v_child ) ; v_existingFPID.unrelateAcrossR301From( v_existingDom ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_existingFPID != null) {
  v_existingFPID.relateAcrossR301To( v_child ) ;   v_existingFPID.relateAcrossR301To( v_domain ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_child != null) {
v_child.Associatechildpackagestodomain(			    
p_Dom_id ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End associateChildPackagesToDomain
  public  void Associatechildpackagefunctionstodomain(final java.util.UUID         p_Dom_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Associatechildpackagefunctionstodomain") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_domain = (Domain_c) modelRoot.getInstanceList(Domain_c.class).getGlobal(null, p_Dom_id);


if ( (  (v_domain != null)) )
{

FunctionPackage_c [] v_childPkgs = FunctionPackage_c.getManyS_FPKsOnR32(FunctionPackageInPackage_c.getManyS_FPIPsOnR30(this));


FunctionPackage_c  v_child = null;
for ( int i54985 = 0; i54985 < v_childPkgs.length; i54985++)
{
  v_child = v_childPkgs[i54985] ;

Function_c [] v_functions = Function_c.getManyS_SYNCsOnR31(FunctionInPackage_c.getManyS_FIPsOnR31(v_child));


Function_c  v_function = null;
for ( int i54986 = 0; i54986 < v_functions.length; i54986++)
{
  v_function = v_functions[i54986] ;

Domain_c v_prevDomain = Domain_c.getOneS_DOMOnR23(v_function);


if (v_function != null) {
v_function.unrelateAcrossR23From(v_prevDomain);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_function != null) {
  v_function.relateAcrossR23To(v_domain);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_child != null) {
v_child.Associatechildpackagefunctionstodomain(			    
p_Dom_id ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End associateChildPackageFunctionsToDomain
  public  int          Getfunctionpckgcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Getfunctionpckgcount") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionPackage_c [] v_functionPckgs = FunctionPackage_c.getManyS_FPKsOnR32(FunctionPackageInPackage_c.getManyS_FPIPsOnR30(this));


return   (v_functionPckgs.length);



   } // End getFunctionPckgCount
  public  java.util.UUID         Getfunctionpckgid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Getfunctionpckgid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


FunctionPackage_c [] v_functionPckgs = FunctionPackage_c.getManyS_FPKsOnR32(FunctionPackageInPackage_c.getManyS_FPIPsOnR30(this));


int          v_count = -1 ;


FunctionPackage_c  v_functionPckg = null;
for ( int i54987 = 0; i54987 < v_functionPckgs.length; i54987++)
{
  v_functionPckg = v_functionPckgs[i54987] ;

if ( (  (v_functionPckg != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_functionPckg.Get_ooa_id();



}


}

return v_id;



   } // End getFunctionPckgId
  public  void Pastefunction(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Package", " Operation entered: FunctionPackage::Pastefunction") ; 
               final ModelRoot modelRoot = getModelRoot();
Function_c v_function = (Function_c) modelRoot.getInstanceList(Function_c.class).getGlobal(null, p_Id);


if ( (  (v_function != null)) )
{

FunctionPackage_c v_existing = FunctionPackage_c.getOneS_FPKOnR31(FunctionInPackage_c.getOneS_FIPOnR31(v_function));


if ( (  (v_existing != null)) )
{

FunctionInPackage_c v_fip = FunctionInPackage_c.getOneS_FIPOnR31(v_function);


if ( (  (v_fip != null)) )
{

if (v_fip != null) {
v_fip.unrelateAcrossR31From( v_function ) ; v_fip.unrelateAcrossR31From( v_existing ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}



}


}

Domain_c v_dom = Domain_c.getOneS_DOMOnR29(this);


if ( (  (v_dom == null)) )
{

FunctionPackage_c v_rootPkg = FunctionPackage_c.getOneS_FPKOnR30(FunctionPackageInPackage_c.getOneS_FPIPOnR32(this));


while ( (  (v_dom == null)) )
{

v_dom = Domain_c.getOneS_DOMOnR29(v_rootPkg);


v_rootPkg = FunctionPackage_c.getOneS_FPKOnR30(FunctionPackageInPackage_c.getOneS_FPIPOnR32(v_rootPkg));



}


}

FunctionInPackage_c v_fip = new FunctionInPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fip));


if (v_fip != null) {
  v_fip.relateAcrossR31To( v_function ) ;   v_fip.relateAcrossR31To( this ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_function != null) {
  v_function.relateAcrossR23To(v_dom);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_function != null) {
  v_function.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_function.Converttoinstance()			    
,v_function.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


   } // End pasteFunction

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	if (adapter == org.eclipse.core.resources.IResource.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
        	return comp.getFile().getParent();
        }
	}else if(adapter == org.eclipse.core.resources.IFile.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
            return comp.getFile();
        }
	}
	  return null;
  }
} // end Function Package
