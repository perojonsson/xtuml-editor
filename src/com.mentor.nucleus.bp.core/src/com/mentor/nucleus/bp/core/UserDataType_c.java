package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.UserDataType_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_USER_DATA_TYPE extends genericEvent_c {
	public abstract int getEvtcode();
}

public class UserDataType_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public UserDataType_c(ModelRoot modelRoot, java.util.UUID p_m_dt_id,
			java.util.UUID p_m_cdt_dt_id, int p_m_gen_type) {
		super(modelRoot);
		m_gen_type = p_m_gen_type;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_cdt_dt_id = IdAssigner.preprocessUUID(p_m_cdt_dt_id);

		Object[] key = {m_dt_id};
		addInstanceToMap(key);
	}
	static public UserDataType_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_dt_id, java.util.UUID p_m_cdt_dt_id,
			int p_m_gen_type, String p_contentPath, IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(UserDataType_c.class);
		UserDataType_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_dt_id};
			new_inst = (UserDataType_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				new_inst.m_gen_type = p_m_gen_type;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_cdt_dt_id = IdAssigner.preprocessUUID(p_m_cdt_dt_id);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new UserDataType_c(modelRoot, p_m_dt_id, p_m_cdt_dt_id,
					p_m_gen_type);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public UserDataType_c resolveInstance(ModelRoot modelRoot,
			java.util.UUID p_m_dt_id, java.util.UUID p_m_cdt_dt_id,
			int p_m_gen_type) {
		InstanceList instances = modelRoot
				.getInstanceList(UserDataType_c.class);
		UserDataType_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_dt_id};
			source = (UserDataType_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				source.m_gen_type = p_m_gen_type;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_cdt_dt_id = IdAssigner.preprocessUUID(p_m_cdt_dt_id);

				return source;
			}
		}
		// there is no instance matching the id
		UserDataType_c new_inst = new UserDataType_c(modelRoot, p_m_dt_id,
				p_m_cdt_dt_id, p_m_gen_type);
		return new_inst;
	}
	public UserDataType_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_dt_id = IdAssigner.NULL_UUID;
		m_cdt_dt_id = IdAssigner.NULL_UUID;
		Object[] key = {m_dt_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_dt_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p4
		// round p5
		if (m_dt_id != p_newKey) {

			m_dt_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof UserDataType_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof UserDataType_c)) {
			return false;
		}

		UserDataType_c me = (UserDataType_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getDt_id()) || IdAssigner.NULL_UUID
						.equals(((UserDataType_c) elem).getDt_id())) && this != elem)) {
			return false;
		}
		if (!getDt_id().equals(((UserDataType_c) elem).getDt_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof UserDataType_c)) {
			return false;
		}

		UserDataType_c me = (UserDataType_c) elem;
		if (!getDt_idCachedValue().equals(
				((UserDataType_c) elem).getDt_idCachedValue()))
			return false;
		return true;
	}

	// Attributes
	private int m_gen_type;
	private java.util.UUID m_dt_id;
	private java.util.UUID m_cdt_dt_id;

	// declare association references from this class

	// referring navigation

	DataType_c IsSupertypeDataType;
	public void relateAcrossR17To(DataType_c target) {
		relateAcrossR17To(target, true);
	}
	public void relateAcrossR17To(DataType_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsSupertypeDataType)
			return; // already related

		if (IsSupertypeDataType != target) {

			Object oldKey = getInstanceKey();

			if (IsSupertypeDataType != null) {

				IsSupertypeDataType.clearBackPointerR17To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"UserDataType_c.relateAcrossR17To(DataType_c target)",
									"Relate performed across R17 from User Data Type to Data Type without unrelate of prior instance.");
				}
			}

			IsSupertypeDataType = target;
			if (IdAssigner.NULL_UUID.equals(target.getDt_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_dt_id = target.getDt_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR17To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "17", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR17From(DataType_c target) {
		unrelateAcrossR17From(target, true);
	}
	public void unrelateAcrossR17From(DataType_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (IsSupertypeDataType == null)
			return; // already unrelated

		if (target != IsSupertypeDataType) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin
					.logError(
							"Tried to unrelate from non-related instance across R17",
							e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR17To(this);
		}

		if (IsSupertypeDataType != null) {

			m_dt_id = IsSupertypeDataType.getDt_id();
			if (IdAssigner.NULL_UUID.equals(m_dt_id)) {
				m_dt_id = IsSupertypeDataType.getDt_idCachedValue();
			}
			IsSupertypeDataType = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "17", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static UserDataType_c getOneS_UDTOnR17(DataType_c[] targets) {
		return getOneS_UDTOnR17(targets, null);
	}

	public static UserDataType_c getOneS_UDTOnR17(DataType_c[] targets,
			ClassQueryInterface_c test) {
		UserDataType_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneS_UDTOnR17(targets[i], test);
			}
		}

		return ret_val;
	}

	public static UserDataType_c getOneS_UDTOnR17(DataType_c target) {
		return getOneS_UDTOnR17(target, null);
	}

	public static UserDataType_c getOneS_UDTOnR17(DataType_c target,
			boolean loadComponent) {
		return getOneS_UDTOnR17(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static UserDataType_c getOneS_UDTOnR17(DataType_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			return getOneS_UDTOnR17(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static UserDataType_c getOneS_UDTOnR17(ModelRoot modelRoot,
			DataType_c target, ClassQueryInterface_c test) {
		return getOneS_UDTOnR17(modelRoot, target, test, true);
	}

	public static UserDataType_c getOneS_UDTOnR17(ModelRoot modelRoot,
			DataType_c target, ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneS_UDTOnR17(modelRoot, target, test);
	}
	private static UserDataType_c find_getOneS_UDTOnR17(ModelRoot modelRoot,
			DataType_c target, ClassQueryInterface_c test) {
		if (target != null) {
			UserDataType_c source = (UserDataType_c) target.backPointer_IsSubtypeUserDataTypeIsSubtype_R17;
			if (source != null && (test == null || test.evaluate(source))) {
				return source;
			}
		}
		// not found
		return null;
	}

	public static UserDataType_c[] getManyS_UDTsOnR17(DataType_c[] targets) {
		return getManyS_UDTsOnR17(targets, null);
	}
	public static UserDataType_c[] getManyS_UDTsOnR17(DataType_c[] targets,
			boolean loadComponent) {
		return getManyS_UDTsOnR17(targets, null, loadComponent);
	}
	public static UserDataType_c[] getManyS_UDTsOnR17(DataType_c[] targets,
			ClassQueryInterface_c test) {
		return getManyS_UDTsOnR17(targets, test, true);
	}

	public static UserDataType_c[] getManyS_UDTsOnR17(DataType_c[] targets,
			ClassQueryInterface_c test, boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new UserDataType_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(UserDataType_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			UserDataType_c source = (UserDataType_c) targets[i].backPointer_IsSubtypeUserDataTypeIsSubtype_R17;
			if (source != null && (test == null || test.evaluate(source))) {
				matches.add(source);
			}
		}
		if (matches.size() > 0) {
			UserDataType_c[] ret_set = new UserDataType_c[matches.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new UserDataType_c[0];
		}
	}

	public static UserDataType_c[] getManyS_UDTsOnR17(DataType_c target) {
		if (target != null) {
			DataType_c[] targetArray = new DataType_c[1];
			targetArray[0] = target;
			return getManyS_UDTsOnR17(targetArray);
		} else {
			UserDataType_c[] result = new UserDataType_c[0];
			return result;
		}
	}

	public static UserDataType_c[] getManyS_UDTsOnR17(DataType_c target,
			boolean loadComponent) {
		if (target != null) {
			DataType_c[] targetArray = new DataType_c[1];
			targetArray[0] = target;
			return getManyS_UDTsOnR17(targetArray, loadComponent);
		} else {
			UserDataType_c[] result = new UserDataType_c[0];
			return result;
		}
	}

	// referring navigation

	DataType_c AreDefinedWithinDataType;
	public void relateAcrossR18To(DataType_c target) {
		relateAcrossR18To(target, true);
	}
	public void relateAcrossR18To(DataType_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (target == AreDefinedWithinDataType)
			return; // already related

		if (AreDefinedWithinDataType != target) {

			Object oldKey = getInstanceKey();

			if (AreDefinedWithinDataType != null) {

				AreDefinedWithinDataType.clearBackPointerR18To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"UserDataType_c.relateAcrossR18To(DataType_c target)",
									"Relate performed across R18 from User Data Type to Data Type without unrelate of prior instance.");
				}
			}

			AreDefinedWithinDataType = target;
			if (IdAssigner.NULL_UUID.equals(target.getDt_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_cdt_dt_id = target.getDt_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR18To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "18", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR18From(DataType_c target) {
		unrelateAcrossR18From(target, true);
	}
	public void unrelateAcrossR18From(DataType_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (AreDefinedWithinDataType == null)
			return; // already unrelated

		if (target != AreDefinedWithinDataType) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin
					.logError(
							"Tried to unrelate from non-related instance across R18",
							e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR18To(this);
		}

		if (AreDefinedWithinDataType != null) {

			m_cdt_dt_id = AreDefinedWithinDataType.getDt_id();
			if (IdAssigner.NULL_UUID.equals(m_cdt_dt_id)) {
				m_cdt_dt_id = AreDefinedWithinDataType.getDt_idCachedValue();
			}
			AreDefinedWithinDataType = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "18", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static UserDataType_c getOneS_UDTOnR18(DataType_c[] targets) {
		return getOneS_UDTOnR18(targets, null);
	}

	public static UserDataType_c getOneS_UDTOnR18(DataType_c[] targets,
			ClassQueryInterface_c test) {
		UserDataType_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneS_UDTOnR18(targets[i], test);
			}
		}

		return ret_val;
	}

	public static UserDataType_c getOneS_UDTOnR18(DataType_c target) {
		return getOneS_UDTOnR18(target, null);
	}

	public static UserDataType_c getOneS_UDTOnR18(DataType_c target,
			boolean loadComponent) {
		return getOneS_UDTOnR18(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static UserDataType_c getOneS_UDTOnR18(DataType_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			return getOneS_UDTOnR18(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static UserDataType_c getOneS_UDTOnR18(ModelRoot modelRoot,
			DataType_c target, ClassQueryInterface_c test) {
		return getOneS_UDTOnR18(modelRoot, target, test, true);
	}

	public static UserDataType_c getOneS_UDTOnR18(ModelRoot modelRoot,
			DataType_c target, ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneS_UDTOnR18(modelRoot, target, test);
	}
	private static UserDataType_c find_getOneS_UDTOnR18(ModelRoot modelRoot,
			DataType_c target, ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18) {
				for (int i = 0; i < target.backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18
						.size(); ++i) {
					UserDataType_c source = (UserDataType_c) target.backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static UserDataType_c[] getManyS_UDTsOnR18(DataType_c[] targets) {
		return getManyS_UDTsOnR18(targets, null);
	}
	public static UserDataType_c[] getManyS_UDTsOnR18(DataType_c[] targets,
			boolean loadComponent) {
		return getManyS_UDTsOnR18(targets, null, loadComponent);
	}
	public static UserDataType_c[] getManyS_UDTsOnR18(DataType_c[] targets,
			ClassQueryInterface_c test) {
		return getManyS_UDTsOnR18(targets, test, true);
	}

	public static UserDataType_c[] getManyS_UDTsOnR18(DataType_c[] targets,
			ClassQueryInterface_c test, boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new UserDataType_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(UserDataType_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18) {
				for (int j = 0; j < targets[i].backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18
						.size(); ++j) {
					UserDataType_c source = (UserDataType_c) targets[i].backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			UserDataType_c[] ret_set = new UserDataType_c[matches.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new UserDataType_c[0];
		}
	}

	public static UserDataType_c[] getManyS_UDTsOnR18(DataType_c target) {
		return getManyS_UDTsOnR18(target, null);
	}

	public static UserDataType_c[] getManyS_UDTsOnR18(DataType_c target,
			boolean loadComponent) {
		return getManyS_UDTsOnR18(target, null, loadComponent);
	}

	public static UserDataType_c[] getManyS_UDTsOnR18(DataType_c target,
			ClassQueryInterface_c test) {
		return getManyS_UDTsOnR18(target, test, true);
	}

	public static UserDataType_c[] getManyS_UDTsOnR18(DataType_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		if (target == null)
			return new UserDataType_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		Vector matches = new Vector();
		synchronized (target.backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18) {
			for (int i = 0; i < target.backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18
					.size(); ++i) {
				UserDataType_c source = (UserDataType_c) target.backPointer_DefinesDomainOfUserDataTypeDefinesDomainOf_R18
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			UserDataType_c[] ret_set = new UserDataType_c[matches.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new UserDataType_c[0];
		}
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies,
			boolean notifyChanges, boolean searchAllRoots) {
		InstanceList instances = null;
		ModelRoot baseRoot = modelRoot;

		// R17
		DataType_c relInst56269 = (DataType_c) baseRoot.getInstanceList(
				DataType_c.class).get(new Object[]{m_dt_id});
		// if there was no local element, check for any global elements
		// failing that proceed to check other model roots
		if (relInst56269 == null) {
			relInst56269 = (DataType_c) Ooaofooa.getDefaultInstance()
					.getInstanceList(DataType_c.class)
					.get(new Object[]{m_dt_id});
		}
		if (relInst56269 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
			Ooaofooa[] roots = Ooaofooa.getInstances();
			for (int i = 0; i < roots.length; i++) {
				if (roots[i].isCompareRoot()) {
					// never use elements from any compare root
					continue;
				}
				relInst56269 = (DataType_c) roots[i].getInstanceList(
						DataType_c.class).get(new Object[]{m_dt_id});
				if (relInst56269 != null)
					break;
			}
		}
		//synchronized
		if (relInst56269 != null) {
			if (relateProxies || !isProxy()
					|| (inSameComponent(this, relInst56269) && !isProxy())) {
				relInst56269.relateAcrossR17To(this, notifyChanges);
			}
		}

		if (AreDefinedWithinDataType == null) {
			// R18
			DataType_c relInst56270 = (DataType_c) baseRoot.getInstanceList(
					DataType_c.class).get(new Object[]{m_cdt_dt_id});
			// if there was no local element, check for any global elements
			// failing that proceed to check other model roots
			if (relInst56270 == null) {
				relInst56270 = (DataType_c) Ooaofooa.getDefaultInstance()
						.getInstanceList(DataType_c.class)
						.get(new Object[]{m_cdt_dt_id});
			}
			if (relInst56270 == null && searchAllRoots
					&& !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
					if (roots[i].isCompareRoot()) {
						// never use elements from any compare root
						continue;
					}
					relInst56270 = (DataType_c) roots[i].getInstanceList(
							DataType_c.class).get(new Object[]{m_cdt_dt_id});
					if (relInst56270 != null)
						break;
				}
			}
			//synchronized
			if (relInst56270 != null) {
				if (relateProxies || !isProxy()
						|| (inSameComponent(this, relInst56270) && !isProxy())) {
					relInst56270.relateAcrossR18To(this, notifyChanges);
				}
			}
		}

	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R17
		// S_DT
		inst = IsSupertypeDataType;
		unrelateAcrossR17From(IsSupertypeDataType, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R18
		// S_DT
		inst = AreDefinedWithinDataType;
		unrelateAcrossR18From(AreDefinedWithinDataType, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(UserDataType_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final UserDataType_c inst = (UserDataType_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(UserDataType_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static UserDataType_c UserDataTypeInstance(ModelRoot modelRoot,
			ClassQueryInterface_c test, boolean loadComponent) {
		UserDataType_c result = findUserDataTypeInstance(modelRoot, test,
				loadComponent);
		if (result == null && loadComponent) {
			List pmcs = PersistenceManager.findAllComponents(modelRoot,
					UserDataType_c.class);
			for (int i = 0; i < pmcs.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) pmcs
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = findUserDataTypeInstance(modelRoot, test,
								loadComponent);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}
		if (result != null && loadComponent) {
			result.loadProxy();
		}
		return result;
	}
	private static UserDataType_c findUserDataTypeInstance(ModelRoot modelRoot,
			ClassQueryInterface_c test, boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(UserDataType_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				UserDataType_c x = (UserDataType_c) instances.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						return x;
				}
			}
		}
		return null;
	}
	public static UserDataType_c UserDataTypeInstance(ModelRoot modelRoot,
			ClassQueryInterface_c test) {
		return UserDataTypeInstance(modelRoot, test, true);
	}

	public static UserDataType_c UserDataTypeInstance(ModelRoot modelRoot) {
		return UserDataTypeInstance(modelRoot, null, true);
	}

	public static UserDataType_c[] UserDataTypeInstances(ModelRoot modelRoot,
			ClassQueryInterface_c test, boolean loadComponent) {
		if (loadComponent) {
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					UserDataType_c.class);
		}
		InstanceList instances = modelRoot
				.getInstanceList(UserDataType_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				UserDataType_c x = (UserDataType_c) instances.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						matches.add(x);
				}
			}
			if (matches.size() > 0) {
				UserDataType_c[] ret_set = new UserDataType_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new UserDataType_c[0];
			}
		}
	}
	public static UserDataType_c[] UserDataTypeInstances(ModelRoot modelRoot,
			ClassQueryInterface_c test) {
		return UserDataTypeInstances(modelRoot, test, true);
	}
	public static UserDataType_c[] UserDataTypeInstances(ModelRoot modelRoot) {
		return UserDataTypeInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the User Data Type.dispose call: ";
		DataType_c testR17Inst1 = DataType_c.getOneS_DTOnR17(this, false);

		if (testR17Inst1 != null) {
			delete_error = true;
			errorMsg = errorMsg + "17 ";
		}
		DataType_c testR18Inst = DataType_c.getOneS_DTOnR18(this, false);

		if (testR18Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "18 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.DELETE, "User Data Type", errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("dt_id")) {
			return true;
		}
		if (attributeName.equals("cdt_dt_id")) {
			return true;
		}
		return false;
	}
	public String getCompUniqueID() {
		UUID tempID = null;
		long longID = 0L;
		StringBuffer result = new StringBuffer();

		tempID = getDt_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getDt_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		return result.toString();
	}
	// declare attribute accessors
	public int getGen_type() {
		return m_gen_type;
	}

	public void setGen_type(int newValue) {
		if (m_gen_type == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Gen_type", new Integer(m_gen_type), new Integer(newValue),
				true);

		m_gen_type = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getDt_idLongBased() {
		if (IsSupertypeDataType != null) {
			return IsSupertypeDataType.getDt_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getDt_id() {
		if (IsSupertypeDataType != null) {
			return IsSupertypeDataType.getDt_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public boolean hasSuperType() {
		return (IsSupertypeDataType != null);

	}

	public java.util.UUID getDt_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_dt_id))
			return m_dt_id;
		else
			return getDt_id();
	}

	public void setDt_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_dt_id)) {
				return;
			}
		} else if (m_dt_id != null) {
			if (m_dt_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dt_id",
				m_dt_id, newValue, true);
		m_dt_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getCdt_dt_idLongBased() {
		if (AreDefinedWithinDataType != null) {
			return AreDefinedWithinDataType.getDt_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getCdt_dt_id() {
		if (AreDefinedWithinDataType != null) {
			return AreDefinedWithinDataType.getDt_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getCdt_dt_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_cdt_dt_id))
			return m_cdt_dt_id;
		else
			return getCdt_dt_id();
	}

	public void setCdt_dt_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_cdt_dt_id)) {
				return;
			}
		} else if (m_cdt_dt_id != null) {
			if (m_cdt_dt_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Cdt_dt_id", m_cdt_dt_id, newValue, true);
		m_cdt_dt_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type", //$NON-NLS-1$
				" Operation entered: User Data Type::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		UserDataType_c[] objs = UserDataType_c.UserDataTypeInstances(modelRoot,
				null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type", //$NON-NLS-1$
				" Operation entered: User Data Type::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class UserDataType_c_test56272_c implements ClassQueryInterface_c {
			UserDataType_c_test56272_c(java.util.UUID p56273) {
				m_p56273 = p56273;
			}
			private java.util.UUID m_p56273;
			public boolean evaluate(Object candidate) {
				UserDataType_c selected = (UserDataType_c) candidate;
				boolean retval = false;
				retval = (selected.getDt_id().equals(m_p56273));
				return retval;
			}
		}

		UserDataType_c[] objs56271 = UserDataType_c.UserDataTypeInstances(
				modelRoot, new UserDataType_c_test56272_c(getDt_id()));

		if (((objs56271.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"User Data Type", //$NON-NLS-1$
								"Consistency: Object: User Data Type: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs56271.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin.logError(
						"Consistency: Object: User Data Type: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
								+ "Actual Value: " //$NON-NLS-1$
								+ Integer.toString(objs56271.length), e);
			}
			retval = false;

		}

		if (((objs56271.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"User Data Type", //$NON-NLS-1$
								"Consistency: Object: User Data Type: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs56271.length)
										+ " DT_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: User Data Type: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56271.length)
										+ " DT_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// User Data Type is a subtype in association: rel.Numb = 17
		// The supertype class is: Data Type
		class DataType_c_test56277_c implements ClassQueryInterface_c {
			DataType_c_test56277_c(java.util.UUID p56278) {
				m_p56278 = p56278;
			}
			private java.util.UUID m_p56278;
			public boolean evaluate(Object candidate) {
				DataType_c selected = (DataType_c) candidate;
				boolean retval = false;
				retval = (selected.getDt_id().equals(m_p56278));
				return retval;
			}
		}

		DataType_c[] objs56276 = DataType_c.DataTypeInstances(modelRoot,
				new DataType_c_test56277_c(getDt_id()));

		if (((objs56276.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"User Data Type", //$NON-NLS-1$
								"Consistency: Object: User Data Type: Association: 17: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs56276.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: User Data Type: Association: 17: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56276.length), e);
			}
			retval = false;

		}

		// User Data Type is a referring class in association: rel.Numb = 18
		// The participating class is: Data Type
		class DataType_c_test56280_c implements ClassQueryInterface_c {
			DataType_c_test56280_c(java.util.UUID p56281) {
				m_p56281 = p56281;
			}
			private java.util.UUID m_p56281;
			public boolean evaluate(Object candidate) {
				DataType_c selected = (DataType_c) candidate;
				boolean retval = false;
				retval = (selected.getDt_id().equals(m_p56281));
				return retval;
			}
		}

		DataType_c[] objs56279 = DataType_c.DataTypeInstances(modelRoot,
				new DataType_c_test56280_c(getCdt_dt_id()));

		// The participant is unconditional
		// The multiplicity of the participant is one
		if (((objs56279.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"User Data Type", //$NON-NLS-1$
								"Consistency: Object: User Data Type: Association: 18: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs56279.length)
										+ " CDT_DT_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: User Data Type: Association: 18: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56279.length)
										+ " CDT_DT_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_cdt = DataType_c.getOneS_DTOnR18(this);

		this.unrelateAcrossR18From(v_cdt);

		DataType_c v_dt = DataType_c.getOneS_DTOnR17(this);

		this.unrelateAcrossR17From(v_dt);

		if (delete()) {
			Ooaofooa.getDefaultInstance().fireModelElementDeleted(
					new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE,
							this));
		}

	} // End dispose
	public void Rename(final String p_New_name) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Rename");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_dt = DataType_c.getOneS_DTOnR17(this);

		boolean v_dummy = v_dt.Rename(p_New_name);

	} // End rename
	public String Get_name() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Get_name");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_dt = DataType_c.getOneS_DTOnR17(this);

		if (((v_dt == null))) {

			return "";

		}

		else {

			return v_dt.getName();

		}

	} // End get_name
	public int Get_style() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Get_style");
		final ModelRoot modelRoot = getModelRoot();
		return Style_c.Box;

	} // End get_style
	public int Get_text_style(final int p_At, final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Get_text_style");
		final ModelRoot modelRoot = getModelRoot();
		return Style_c.None;

	} // End get_text_style
	public int Get_compartments() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Get_compartments");
		final ModelRoot modelRoot = getModelRoot();
		return 1;

	} // End get_compartments
	public int Get_entries(final int p_Comp_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Get_entries");
		final ModelRoot modelRoot = getModelRoot();
		return 1;

	} // End get_entries
	public String Get_compartment_text(final int p_At, final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Get_compartment_text");
		final ModelRoot modelRoot = getModelRoot();
		String v_result = "";

		if ((p_At == Justification_c.Center_in_X)) {

			v_result = "«dataType»";

		}

		else if ((p_At == Justification_c.Center)) {

			DataType_c v_coreDt = DataType_c.getOneS_DTOnR18(this);

			DataType_c v_selfDt = DataType_c.getOneS_DTOnR17(this);

			if (((v_coreDt != null) && (v_selfDt != null))) {

				v_result = v_selfDt.getName() + Gd_c.Newline() + "{ "
						+ v_coreDt.getName() + " }";

			}

			else {

				v_result = Ooaofooa.Getorphanedelementname(modelRoot);

			}

			if ((v_selfDt != null)) {

				PackageableElement_c v_pe = PackageableElement_c
						.getOnePE_PEOnR8001(v_selfDt);

				if ((v_pe != null)) {

					v_result = v_pe.Getvisibilityadornment() + v_result;

				}

			}

		}

		return v_result;

	} // End get_compartment_text
	public java.util.UUID Get_ooa_id() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Get_ooa_id");
		final ModelRoot modelRoot = getModelRoot();
		return getDt_id();

	} // End get_ooa_id
	public boolean Isallowedcoretype(final String p_Typename) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Isallowedcoretype");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_Typename.equals("inst_ref<Object>"))) {

			return false;

		}

		else if ((p_Typename.equals("inst_ref_set<Object>"))) {

			return false;

		}

		else if ((p_Typename.equals("same_as<Base_Attribute>"))) {

			return false;

		}

		else if ((p_Typename.equals("state<State_Model>"))) {

			return false;

		}

		else if ((p_Typename.equals("void"))) {

			return false;

		}

		else if ((p_Typename.equals("inst<Event>"))) {

			return false;

		}

		else if ((p_Typename.equals("date"))) {

			return false;

		}

		else if ((p_Typename.equals("timestamp"))) {

			return false;

		}

		else if ((p_Typename.equals("inst_ref<Timer>"))) {

			return false;

		}

		return true;

	} // End isAllowedCoreType
	public void Changecoretype(final String p_Typename) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Changecoretype");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_dt = DataType_c.getOneS_DTOnR18(this);

		class DataType_test55600_c implements ClassQueryInterface_c {
			public boolean evaluate(Object candidate) {
				DataType_c selected = (DataType_c) candidate;
				return selected.getName().equals(p_Typename);
			}
		}
		DataType_c v_new_dt = DataType_c
				.getOneS_DTOnR14(Domain_c.getManyS_DOMsOnR14(DataType_c
						.getManyS_DTsOnR17(this)), new DataType_test55600_c());

		PackageableElement_c v_packageableElem = PackageableElement_c
				.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(this));

		Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);

		Component_c v_component = Component_c
				.getOneC_COnR8003(v_packageableElem);

		boolean v_isInGenericPackage = (v_package != null)
				|| (v_component != null);

		if (v_isInGenericPackage) {

			java.util.UUID v_id = v_packageableElem
					.Resolvedatatyperelativetoself(p_Typename, p_Typename);

			class DataType_test55601_c implements ClassQueryInterface_c {
				DataType_test55601_c(java.util.UUID p55602) {
					m_p55602 = p55602;
				}
				private java.util.UUID m_p55602;
				public boolean evaluate(Object candidate) {
					DataType_c selected = (DataType_c) candidate;
					return selected.getDt_id().equals(m_p55602);
				}
			}
			v_new_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c
					.getManyPE_PEsOnR8002(ElementVisibility_c
							.getManyPE_VISsOnR8002(v_package)),
					new DataType_test55601_c(v_id));

			if (((v_new_dt == null))) {

				class DataType_test55603_c implements ClassQueryInterface_c {
					DataType_test55603_c(java.util.UUID p55604) {
						m_p55604 = p55604;
					}
					private java.util.UUID m_p55604;
					public boolean evaluate(Object candidate) {
						DataType_c selected = (DataType_c) candidate;
						return selected.getDt_id().equals(m_p55604);
					}
				}
				v_new_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8004(ComponentVisibility_c
								.getManyPE_CVSsOnR8004(v_component)),
						new DataType_test55603_c(v_id));

			}

		}

		else {

			if (((v_new_dt == null))) {

				SystemModel_c v_system = SystemModel_c
						.getOneS_SYSOnR4402(SystemDatatypeInPackage_c
								.getManySLD_SDINPsOnR4401(DataType_c
										.getManyS_DTsOnR17(this)));

				if (((v_system != null))) {

					java.util.UUID v_dt_id = v_system.Getcoretypeid(p_Typename);

					PackageableElement_c v_pe = (PackageableElement_c) modelRoot
							.getInstanceList(PackageableElement_c.class)
							.getGlobal(null, v_dt_id);

					v_new_dt = DataType_c.getOneS_DTOnR8001(v_pe);

				}

			}

		}

		if (((v_new_dt != null))) {

			this.unrelateAcrossR18From(v_dt);

			this.relateAcrossR18To(v_new_dt);

		}

	} // End changeCoreType
	public boolean Candelete() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Candelete");
		final ModelRoot modelRoot = getModelRoot();
		return (getGen_type() == 0);

	} // End canDelete
	public boolean Canrename() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Canrename");
		final ModelRoot modelRoot = getModelRoot();
		return (getGen_type() == 0);

	} // End canRename
	public void Resolvedatatype() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Resolvedatatype");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_proxyCoretype = DataType_c.getOneS_DTOnR18(this);

		if (((v_proxyCoretype != null) && !Util_c.Isproxy(Converttoinstance()))) {

			boolean v_isInGenericPackage = false;

			SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c
					.getOneEP_PKGOnR8000(PackageableElement_c
							.getOnePE_PEOnR8001(DataType_c
									.getOneS_DTOnR17(this))));

			if (((v_system != null))) {

				v_isInGenericPackage = true;

			}

			else {

				Component_c v_component = Component_c
						.getOneC_COnR8003(PackageableElement_c
								.getOnePE_PEOnR8001(DataType_c
										.getOneS_DTOnR17(this)));

				if (((v_component != null))) {

					java.util.UUID v_rootCompIdInPkg = v_component
							.Getrootcomponentid();

					Component_c v_rootComponent = (Component_c) modelRoot
							.getInstanceList(Component_c.class).getGlobal(null,
									v_rootCompIdInPkg);

					v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c
							.getOneEP_PKGOnR8000(PackageableElement_c
									.getOnePE_PEOnR8001(v_rootComponent)));

				}

				if (((v_system != null))) {

					v_isInGenericPackage = true;

				}

			}

			String v_name = v_proxyCoretype.getName();

			if (v_proxyCoretype != null) {
				v_proxyCoretype.unrelateAcrossR18From(this);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if ((v_isInGenericPackage)) {

				PackageableElement_c v_selfPe = PackageableElement_c
						.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(this));

				java.util.UUID v_dt_id = v_selfPe
						.Resolvedatatyperelativetoself("integer", v_name);

				PackageableElement_c v_pe = (PackageableElement_c) modelRoot
						.getInstanceList(PackageableElement_c.class).getGlobal(
								null, v_dt_id);

				DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);

				if (((v_resolvedDT != null))) {

					if (v_resolvedDT != null) {
						v_resolvedDT.relateAcrossR18To(this);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

				}

			}

			else {

				v_system = SystemModel_c
						.getOneS_SYSOnR4402(SystemDatatypeInPackage_c
								.getManySLD_SDINPsOnR4401(DataType_c
										.getManyS_DTsOnR17(this)));

				if ((v_system == null)) {

					v_system = SystemModel_c
							.getOneS_SYSOnR9100(GlobalElementInSystem_c
									.getManyG_EISsOnR9100(PackageableElement_c
											.getManyPE_PEsOnR8001(DataType_c
													.getManyS_DTsOnR17(this))));

				}

				if (((v_system != null))) {

					java.util.UUID v_dt_id = v_system.Getcoretypeid(v_name);

					PackageableElement_c v_pe = (PackageableElement_c) modelRoot
							.getInstanceList(PackageableElement_c.class)
							.getGlobal(null, v_dt_id);

					DataType_c v_resolvedDT = DataType_c
							.getOneS_DTOnR8001(v_pe);

					if (((v_resolvedDT == null))) {

						v_dt_id = v_system.Getcoretypeid("integer");

						v_pe = (PackageableElement_c) modelRoot
								.getInstanceList(PackageableElement_c.class)
								.getGlobal(null, v_dt_id);

						v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);

					}

					if (((v_resolvedDT != null))) {

						if (v_resolvedDT != null) {
							v_resolvedDT.relateAcrossR18To(this);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Relate attempted on null left hand instance.",
											t);
						}

					}

				}

				else {

					Domain_c v_domain = Domain_c.getOneS_DOMOnR14(DataType_c
							.getOneS_DTOnR17(this));

					java.util.UUID v_id = v_domain
							.Resolvedatatyperelativetoself("integer", v_name);

					class DataType_test55605_c implements ClassQueryInterface_c {
						DataType_test55605_c(java.util.UUID p55606) {
							m_p55606 = p55606;
						}
						private java.util.UUID m_p55606;
						public boolean evaluate(Object candidate) {
							DataType_c selected = (DataType_c) candidate;
							return (selected.getDt_id().equals(m_p55606));
						}
					}
					DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR14(
							v_domain, new DataType_test55605_c(v_id));

					if (((v_resolvedDT == null))) {

						SystemModel_c v_domSys = SystemModel_c
								.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c
										.getOneC_COnR4204(DomainAsComponent_c
												.getOneCN_DCOnR4204(v_domain))));

						class DataType_test55607_c
								implements
									ClassQueryInterface_c {
							DataType_test55607_c(java.util.UUID p55608) {
								m_p55608 = p55608;
							}
							private java.util.UUID m_p55608;
							public boolean evaluate(Object candidate) {
								DataType_c selected = (DataType_c) candidate;
								return (selected.getDt_id().equals(m_p55608));
							}
						}
						v_resolvedDT = DataType_c.getOneS_DTOnR4401(
								SystemDatatypeInPackage_c
										.getManySLD_SDINPsOnR4402(v_domSys),
								new DataType_test55607_c(v_id));

						if ((v_resolvedDT == null) && (v_domSys != null)
								&& v_domSys.getUseglobals()) {

							class DataType_test55609_c
									implements
										ClassQueryInterface_c {
								DataType_test55609_c(java.util.UUID p55610) {
									m_p55610 = p55610;
								}
								private java.util.UUID m_p55610;
								public boolean evaluate(Object candidate) {
									DataType_c selected = (DataType_c) candidate;
									return (selected.getDt_id()
											.equals(m_p55610));
								}
							}
							v_resolvedDT = DataType_c
									.getOneS_DTOnR8001(
											PackageableElement_c
													.getManyPE_PEsOnR9100(GlobalElementInSystem_c
															.getManyG_EISsOnR9100(v_domSys)),
											new DataType_test55609_c(v_id));

						}

					}

					if (((v_resolvedDT != null))) {

						if (v_resolvedDT != null) {
							v_resolvedDT.relateAcrossR18To(this);
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Relate attempted on null left hand instance.",
											t);
						}

					}

				}

			}

		}

	} // End resolveDatatype
	public boolean Canrefertodatatype() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Canrefertodatatype");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_dt = DataType_c.getOneS_DTOnR18(this);

		if (((v_dt != null))) {

			PackageableElement_c v_packageableElem = PackageableElement_c
					.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(this));

			Package_c v_package = Package_c
					.getOneEP_PKGOnR8000(v_packageableElem);

			Component_c v_component = Component_c
					.getOneC_COnR8003(v_packageableElem);

			boolean v_isInGenericPackage = (v_package != null)
					|| (v_component != null);

			if ((v_isInGenericPackage)) {

				return v_packageableElem.Canrefertodatatype(v_dt.getDt_id(),
						v_dt.getName());

			}

			DataTypePackage_c v_udtDTPkg = DataTypePackage_c
					.getOneS_DPKOnR39(DataTypeInPackage_c
							.getOneS_DIPOnR39(DataType_c.getOneS_DTOnR17(this)));

			DataTypePackage_c v_dtPkg = DataTypePackage_c
					.getOneS_DPKOnR39(DataTypeInPackage_c
							.getOneS_DIPOnR39(v_dt));

			if ((v_udtDTPkg.Isdomainlevel())) {

				java.util.UUID v_dom_id = v_udtDTPkg.Getdomainid();

				Domain_c v_domain = (Domain_c) modelRoot.getInstanceList(
						Domain_c.class).getGlobal(null, v_dom_id);

				if ((!v_dtPkg.Isdomainlevel())) {

					if ((v_domain.Participatesinsystem())) {

						return true;

					}

					else {

						return false;

					}

				}

				else {

					Domain_c v_dtDomain = Domain_c.getOneS_DOMOnR14(v_dt);

					if ((v_dtDomain == v_domain)) {

						return true;

					}

				}

			}

			else {

				if ((!v_dtPkg.Isdomainlevel())) {

					return true;

				}

			}

		}

		return false;

	} // End canReferToDataType
	public Object Converttoinstance() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Converttoinstance");
		return this;
	} // End convertToInstance
	public boolean Canusedatatype(final java.util.UUID p_Id) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Canusedatatype");
		final ModelRoot modelRoot = getModelRoot();
		PackageableElement_c v_packageableElem = PackageableElement_c
				.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(this));

		Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);

		Component_c v_component = Component_c
				.getOneC_COnR8003(v_packageableElem);

		DataType_c v_selfDt = DataType_c.getOneS_DTOnR17(this);

		boolean v_isInGenericPackage = (v_package != null)
				|| (v_component != null);

		if (v_isInGenericPackage) {

			class SearchResultSet_test55611_c implements ClassQueryInterface_c {
				public boolean evaluate(Object candidate) {
					SearchResultSet_c selected = (SearchResultSet_c) candidate;
					return selected.getName().equals("")
							&& selected.getType() == Elementtypeconstants_c.DATATYPE;
				}
			}
			SearchResultSet_c v_resultSet = SearchResultSet_c
					.getOnePE_SRSOnR8005(v_package,
							new SearchResultSet_test55611_c());

			class DataType_test55612_c implements ClassQueryInterface_c {
				public boolean evaluate(Object candidate) {
					DataType_c selected = (DataType_c) candidate;
					return selected.getDt_id().equals(p_Id);
				}
			}
			DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c
					.getManyPE_PEsOnR8002(ElementVisibility_c
							.getManyPE_VISsOnR8006(v_resultSet)),
					new DataType_test55612_c());

			if ((v_component != null)) {

				class ComponentResultSet_test55613_c
						implements
							ClassQueryInterface_c {
					public boolean evaluate(Object candidate) {
						ComponentResultSet_c selected = (ComponentResultSet_c) candidate;
						return selected.getName().equals("")
								&& selected.getType() == Elementtypeconstants_c.DATATYPE;
					}
				}
				ComponentResultSet_c v_compResultSet = ComponentResultSet_c
						.getOnePE_CRSOnR8007(v_component,
								new ComponentResultSet_test55613_c());

				class DataType_test55614_c implements ClassQueryInterface_c {
					public boolean evaluate(Object candidate) {
						DataType_c selected = (DataType_c) candidate;
						return selected.getDt_id().equals(p_Id);
					}
				}
				v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8004(ComponentVisibility_c
								.getManyPE_CVSsOnR8008(v_compResultSet)),
						new DataType_test55614_c());

			}

			if (((v_dt != null))) {

				if ((Isallowedcoretype(v_dt.getName()))) {

					DataType_c v_existingDT = DataType_c.getOneS_DTOnR18(this);

					if ((v_existingDT != v_dt && v_dt != v_selfDt)) {

						return true;

					}

				}

			}

			return false;

		}

		else {

			Domain_c v_domain = Domain_c.getOneS_DOMOnR14(DataType_c
					.getOneS_DTOnR17(this));

			if (((v_domain != null))) {

				if ((v_domain.Participatesinsystem())) {

					SystemModel_c v_system = SystemModel_c
							.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c
									.getOneC_COnR4204(DomainAsComponent_c
											.getOneCN_DCOnR4204(v_domain))));

					class DataType_test55615_c implements ClassQueryInterface_c {
						public boolean evaluate(Object candidate) {
							DataType_c selected = (DataType_c) candidate;
							return (selected.getDt_id().equals(p_Id));
						}
					}
					DataType_c v_dt = DataType_c.getOneS_DTOnR4401(
							SystemDatatypeInPackage_c
									.getManySLD_SDINPsOnR4402(v_system),
							new DataType_test55615_c());

					if ((v_dt == null) && (v_system != null)
							&& v_system.getUseglobals()) {

						class PackageableElement_test55616_c
								implements
									ClassQueryInterface_c {
							public boolean evaluate(Object candidate) {
								PackageableElement_c selected = (PackageableElement_c) candidate;
								return selected.getElement_id().equals(p_Id);
							}
						}
						PackageableElement_c v_pe = PackageableElement_c
								.getOnePE_PEOnR9100(GlobalElementInSystem_c
										.getManyG_EISsOnR9100(v_system),
										new PackageableElement_test55616_c());

						v_dt = DataType_c.getOneS_DTOnR8001(v_pe);

					}

					if (((v_dt == null))) {

						class DataType_test55617_c
								implements
									ClassQueryInterface_c {
							public boolean evaluate(Object candidate) {
								DataType_c selected = (DataType_c) candidate;
								return (selected.getDt_id().equals(p_Id));
							}
						}
						v_dt = DataType_c.getOneS_DTOnR14(v_domain,
								new DataType_test55617_c());

					}

					if (((v_dt != null))) {

						if ((Isallowedcoretype(v_dt.getName()))) {

							DataType_c v_existingDT = DataType_c
									.getOneS_DTOnR18(this);

							if ((v_existingDT != v_dt && v_dt != v_selfDt)) {

								return true;

							}

						}

					}

				}

				else {

					class DataType_test55618_c implements ClassQueryInterface_c {
						public boolean evaluate(Object candidate) {
							DataType_c selected = (DataType_c) candidate;
							return (selected.getDt_id().equals(p_Id));
						}
					}
					DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_domain,
							new DataType_test55618_c());

					if (((v_dt != null))) {

						if ((Isallowedcoretype(v_dt.getName()))) {

							DataType_c v_existingDT = DataType_c
									.getOneS_DTOnR18(this);

							if ((v_existingDT != v_dt && v_dt != v_selfDt)) {

								return true;

							}

						}

					}

				}

			}

			else {

				SystemModel_c v_system = SystemModel_c
						.getOneS_SYSOnR4402(SystemDatatypeInPackage_c
								.getManySLD_SDINPsOnR4401(DataType_c
										.getManyS_DTsOnR17(this)));

				if ((v_system == null)) {

					v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c
							.getOneEP_PKGOnR8000(PackageableElement_c
									.getOnePE_PEOnR8001(DataType_c
											.getOneS_DTOnR17(this))));

				}

				class DataType_test55619_c implements ClassQueryInterface_c {
					public boolean evaluate(Object candidate) {
						DataType_c selected = (DataType_c) candidate;
						return (selected.getDt_id().equals(p_Id));
					}
				}
				DataType_c v_dt = DataType_c.getOneS_DTOnR4401(
						SystemDatatypeInPackage_c
								.getManySLD_SDINPsOnR4402(v_system),
						new DataType_test55619_c());

				if ((v_dt == null) && (v_system != null)
						&& v_system.getUseglobals()) {

					class PackageableElement_test55620_c
							implements
								ClassQueryInterface_c {
						public boolean evaluate(Object candidate) {
							PackageableElement_c selected = (PackageableElement_c) candidate;
							return selected.getElement_id().equals(p_Id);
						}
					}
					PackageableElement_c v_pe = PackageableElement_c
							.getOnePE_PEOnR9100(GlobalElementInSystem_c
									.getManyG_EISsOnR9100(v_system),
									new PackageableElement_test55620_c());

					v_dt = DataType_c.getOneS_DTOnR8001(v_pe);

				}

				if (((v_dt != null))) {

					if ((Isallowedcoretype(v_dt.getName()))) {

						DataType_c v_existingDT = DataType_c
								.getOneS_DTOnR18(this);

						if ((v_existingDT != v_dt && v_dt != v_selfDt)) {

							return true;

						}

					}

				}

			}

			return false;

		}

	} // End canUseDataType
	public boolean Actionfilter(final String p_Name, final String p_Value) {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Actionfilter");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_Name.equals("can"))) {

			if ((p_Value.equals("SetType"))) {

				if ((getGen_type() == 0)) {

					return true;

				}

			}

			if (p_Value.equals("make public")) {

				PackageableElement_c v_pe = PackageableElement_c
						.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(this));

				Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(v_pe);

				if ((v_pkg != null)) {

					if ((v_pe != null)) {

						return v_pe.getVisibility() != Visibility_c.Public;

					}

				}

			}

			if (p_Value.equals("make protected")) {

				PackageableElement_c v_pe = PackageableElement_c
						.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(this));

				Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(v_pe);

				if ((v_pkg != null)) {

					if ((v_pe != null)) {

						return v_pe.getVisibility() != Visibility_c.Protected;

					}

				}

			}

			if (p_Value.equals("make private")) {

				PackageableElement_c v_pe = PackageableElement_c
						.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(this));

				Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(v_pe);

				if ((v_pkg != null)) {

					if ((v_pe != null)) {

						return v_pe.getVisibility() != Visibility_c.Private;

					}

				}

			}

		}

		return false;

	} // End actionFilter
	public Object Getconfigurationinheritanceelementid() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "User Data Type",
						" Operation entered: UserDataType::Getconfigurationinheritanceelementid");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_coreType = DataType_c.getOneS_DTOnR18(this);

		if (((v_coreType != null))) {

			return v_coreType.Converttoinstance();

		}

		return Converttoinstance();

	} // End getConfigurationInheritanceElementId
	public java.util.UUID Getcoretype() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Getcoretype");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_coreType = DataType_c.getOneS_DTOnR18(this);

		UserDataType_c v_udt = UserDataType_c.getOneS_UDTOnR17(v_coreType);

		if (((v_udt != null))) {

			return v_udt.Getcoretype();

		}

		return v_coreType.getDt_id();

	} // End getCoreType
	public boolean Isreferringtodefaultdatatype() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "User Data Type",
						" Operation entered: UserDataType::Isreferringtodefaultdatatype");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_dt = DataType_c.getOneS_DTOnR18(this);

		String v_elementType = Util_c.Getsimpleclassname(Converttoinstance());

		if ((v_dt.getName().equals(DataType_c.Getdefaultdatatypename(modelRoot,
				v_elementType)))) {

			return true;

		}

		return false;

	} // End isReferringToDefaultDataType
	public void Checkintegrity() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Checkintegrity");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_dt = DataType_c.getOneS_DTOnR17(this);

		Package_c v_package = Package_c
				.getOneEP_PKGOnR8000(PackageableElement_c
						.getOnePE_PEOnR8001(v_dt));

		Component_c v_component = Component_c
				.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(v_dt));

		if ((!(v_component == null))) {

			java.util.UUID v_pkgId = v_component.Getpackageid();

			v_package = (Package_c) modelRoot.getInstanceList(Package_c.class)
					.getGlobal(null, v_pkgId);

		}

		SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);

		java.util.UUID v_sys_id = Gd_c.Null_unique_id();

		if (((v_system != null))) {

			v_sys_id = v_system.getSys_id();

		}

		DataType_c[] v_dts = DataType_c
				.getManyS_DTsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000(Package_c
								.getManyEP_PKGsOnR8000(PackageableElement_c
										.getManyPE_PEsOnR8001(v_dt))));

		if (((v_dts.length == 0))) {

			v_dts = DataType_c.getManyS_DTsOnR8001(PackageableElement_c
					.getManyPE_PEsOnR8003(Component_c
							.getManyC_CsOnR8003(PackageableElement_c
									.getManyPE_PEsOnR8001(v_dt))));

		}

		DataType_c v_otherDt = null;
		for (int i54905 = 0; i54905 < v_dts.length; i54905++) {
			v_otherDt = v_dts[i54905];

			if ((v_otherDt != v_dt && v_otherDt.getName()
					.equals(v_dt.getName()))) {

				IntegrityManager_c.Createissue(modelRoot,
						"Found another data type under the same package with a "
								+ "matching name.", Converttoinstance(),
						v_dt.getDt_id(), v_dt.getName(),
						v_dt.Getpath(true, ""), Severity_c.Error, v_sys_id);

			}

		}

	} // End checkIntegrity
	public String Getdescription() {
		Ooaofooa.log.println(ILogger.OPERATION, "User Data Type",
				" Operation entered: UserDataType::Getdescription");
		final ModelRoot modelRoot = getModelRoot();
		DataType_c v_dt = DataType_c.getOneS_DTOnR17(this);

		return v_dt.getDescrip();

	} // End getDescription

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		if (adapter == IActionFilter.class) {
			return UserDataTypeActionFilter.getSingleton();
		}
		return null;
	}
} // end User Data Type
