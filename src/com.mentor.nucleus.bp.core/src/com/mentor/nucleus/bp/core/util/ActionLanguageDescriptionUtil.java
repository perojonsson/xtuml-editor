package com.mentor.nucleus.bp.core.util;
//========================================================================
//
// File: com.mentor.nucleus.bp.core/src/com/mentor/nucleus/bp/core/util/ActionLanguageDescriptionUtil.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/action_language_description_util.arc
// Version:      $Revision: 1.5 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//========================================================================
// Licensed under the Apache License, Version 2.0 (the "License"); you may not 
// use this file except in compliance with the License.  You may obtain a copy 
// of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the 
// License for the specific language governing permissions and limitations under
// the License.
//======================================================================== 
//
import java.util.ArrayList;
import java.util.List;

import com.mentor.nucleus.bp.core.*;

/**
 *  This class holds a utility method to determine
 *  if a given class has a descrip attribute or
 *  the necessary action language attribute
 */
public class ActionLanguageDescriptionUtil {
 	public static boolean hasDescriptionAttribute(Class<?> clazz) {
		if(clazz == UseCaseDiagram_c.class) {
			return true;
		}
		if(clazz == Include_c.class) {
			return true;
		}
		if(clazz == Generalization_c.class) {
			return true;
		}
		if(clazz == Extend_c.class) {
			return true;
		}
		if(clazz == BinaryAssociation_c.class) {
			return true;
		}
		if(clazz == OperationParameter_c.class) {
			return true;
		}
		if(clazz == Operation_c.class) {
			return true;
		}
		if(clazz == ModelClass_c.class) {
			return true;
		}
		if(clazz == AttributeReferenceInClass_c.class) {
			return true;
		}
		if(clazz == Attribute_c.class) {
			return true;
		}
		if(clazz == StateMachineEventDataItem_c.class) {
			return true;
		}
		if(clazz == StateMachineEvent_c.class) {
			return true;
		}
		if(clazz == StateMachine_c.class) {
			return true;
		}
		if(clazz == EventIgnored_c.class) {
			return true;
		}
		if(clazz == CantHappen_c.class) {
			return true;
		}
		if(clazz == Action_c.class) {
			return true;
		}
		if(clazz == Sequence_c.class) {
			return true;
		}
		if(clazz == SynchronousMessage_c.class) {
			return true;
		}
		if(clazz == ReturnMessage_c.class) {
			return true;
		}
		if(clazz == MessageArgument_c.class) {
			return true;
		}
		if(clazz == AsynchronousMessage_c.class) {
			return true;
		}
		if(clazz == InterfacePackage_c.class) {
			return true;
		}
		if(clazz == UseCaseParticipant_c.class) {
			return true;
		}
		if(clazz == TimingMark_c.class) {
			return true;
		}
		if(clazz == TimeSpan_c.class) {
			return true;
		}
		if(clazz == PackageParticipant_c.class) {
			return true;
		}
		if(clazz == Lifespan_c.class) {
			return true;
		}
		if(clazz == InstanceAttributeValue_c.class) {
			return true;
		}
		if(clazz == FunctionPackageParticipant_c.class) {
			return true;
		}
		if(clazz == ExternalEntityParticipant_c.class) {
			return true;
		}
		if(clazz == ComponentParticipant_c.class) {
			return true;
		}
		if(clazz == ClassParticipantAttribute_c.class) {
			return true;
		}
		if(clazz == ClassParticipant_c.class) {
			return true;
		}
		if(clazz == ClassInstanceParticipant_c.class) {
			return true;
		}
		if(clazz == ActorParticipant_c.class) {
			return true;
		}
		if(clazz == Package_c.class) {
			return true;
		}
		if(clazz == Subsystem_c.class) {
			return true;
		}
		if(clazz == StructureMember_c.class) {
			return true;
		}
		if(clazz == FunctionParameter_c.class) {
			return true;
		}
		if(clazz == Function_c.class) {
			return true;
		}
		if(clazz == ExternalEntityEventDataItem_c.class) {
			return true;
		}
		if(clazz == ExternalEntityEvent_c.class) {
			return true;
		}
		if(clazz == ExternalEntityDataItem_c.class) {
			return true;
		}
		if(clazz == ExternalEntity_c.class) {
			return true;
		}
		if(clazz == Enumerator_c.class) {
			return true;
		}
		if(clazz == Domain_c.class) {
			return true;
		}
		if(clazz == DataType_c.class) {
			return true;
		}
		if(clazz == BridgeParameter_c.class) {
			return true;
		}
		if(clazz == Bridge_c.class) {
			return true;
		}
		if(clazz == SymbolicConstant_c.class) {
			return true;
		}
		if(clazz == ConstantSpecification_c.class) {
			return true;
		}
		if(clazz == Satisfaction_c.class) {
			return true;
		}
		if(clazz == Requirement_c.class) {
			return true;
		}
		if(clazz == Provision_c.class) {
			return true;
		}
		if(clazz == PropertyParameter_c.class) {
			return true;
		}
		if(clazz == InterfaceSignal_c.class) {
			return true;
		}
		if(clazz == InterfaceOperation_c.class) {
			return true;
		}
		if(clazz == Interface_c.class) {
			return true;
		}
		if(clazz == ComponentPackage_c.class) {
			return true;
		}
		if(clazz == ImportedRequirement_c.class) {
			return true;
		}
		if(clazz == ImportedReference_c.class) {
			return true;
		}
		if(clazz == ImportedProvision_c.class) {
			return true;
		}
		if(clazz == ComponentReference_c.class) {
			return true;
		}
		if(clazz == Component_c.class) {
			return true;
		}
		if(clazz == CommunicationLink_c.class) {
			return true;
		}
		if(clazz == Communication_c.class) {
			return true;
		}
		if(clazz == Association_c.class) {
			return true;
		}
		if(clazz == SendSignal_c.class) {
			return true;
		}
		if(clazz == ObjectNode_c.class) {
			return true;
		}
		if(clazz == InitialNode_c.class) {
			return true;
		}
		if(clazz == ForkJoinNode_c.class) {
			return true;
		}
		if(clazz == FlowFinalNode_c.class) {
			return true;
		}
		if(clazz == DecisionMergeNode_c.class) {
			return true;
		}
		if(clazz == ActivityPartition_c.class) {
			return true;
		}
		if(clazz == ActivityFinalNode_c.class) {
			return true;
		}
		if(clazz == ActivityEdge_c.class) {
			return true;
		}
		if(clazz == ActivityDiagramAction_c.class) {
			return true;
		}
		if(clazz == Activity_c.class) {
			return true;
		}
		if(clazz == AcceptTimeEventAction_c.class) {
			return true;
		}
		if(clazz == AcceptEventAction_c.class) {
			return true;
		}
		return false;
	}

 	public static boolean hasActionLanguageAttribute(Class<?> clazz) {
		if(clazz == Operation_c.class) {
			return true;
		}
		if(clazz == DerivedBaseAttribute_c.class) {
			return true;
		}
		if(clazz == Action_c.class) {
			return true;
		}
		if(clazz == Function_c.class) {
			return true;
		}
		if(clazz == Bridge_c.class) {
			return true;
		}
		if(clazz == RequiredSignal_c.class) {
			return true;
		}
		if(clazz == RequiredOperation_c.class) {
			return true;
		}
		if(clazz == ProvidedSignal_c.class) {
			return true;
		}
		if(clazz == ProvidedOperation_c.class) {
			return true;
		}
		return false;
	}
	
	public static String getDescriptionAttributeValue(Object element) {
		if(element instanceof UseCaseDiagram_c) {
			return ((UseCaseDiagram_c) element).getDescrip();
		}
		if(element instanceof Include_c) {
			return ((Include_c) element).getDescrip();
		}
		if(element instanceof Generalization_c) {
			return ((Generalization_c) element).getDescrip();
		}
		if(element instanceof Extend_c) {
			return ((Extend_c) element).getDescrip();
		}
		if(element instanceof BinaryAssociation_c) {
			return ((BinaryAssociation_c) element).getDescrip();
		}
		if(element instanceof OperationParameter_c) {
			return ((OperationParameter_c) element).getDescrip();
		}
		if(element instanceof Operation_c) {
			return ((Operation_c) element).getDescrip();
		}
		if(element instanceof ModelClass_c) {
			return ((ModelClass_c) element).getDescrip();
		}
		if(element instanceof AttributeReferenceInClass_c) {
			return ((AttributeReferenceInClass_c) element).getDescrip();
		}
		if(element instanceof Attribute_c) {
			return ((Attribute_c) element).getDescrip();
		}
		if(element instanceof StateMachineEventDataItem_c) {
			return ((StateMachineEventDataItem_c) element).getDescrip();
		}
		if(element instanceof StateMachineEvent_c) {
			return ((StateMachineEvent_c) element).getDescrip();
		}
		if(element instanceof StateMachine_c) {
			return ((StateMachine_c) element).getDescrip();
		}
		if(element instanceof EventIgnored_c) {
			return ((EventIgnored_c) element).getDescrip();
		}
		if(element instanceof CantHappen_c) {
			return ((CantHappen_c) element).getDescrip();
		}
		if(element instanceof Action_c) {
			return ((Action_c) element).getDescrip();
		}
		if(element instanceof Sequence_c) {
			return ((Sequence_c) element).getDescrip();
		}
		if(element instanceof SynchronousMessage_c) {
			return ((SynchronousMessage_c) element).getDescrip();
		}
		if(element instanceof ReturnMessage_c) {
			return ((ReturnMessage_c) element).getDescrip();
		}
		if(element instanceof MessageArgument_c) {
			return ((MessageArgument_c) element).getDescrip();
		}
		if(element instanceof AsynchronousMessage_c) {
			return ((AsynchronousMessage_c) element).getDescrip();
		}
		if(element instanceof InterfacePackage_c) {
			return ((InterfacePackage_c) element).getDescrip();
		}
		if(element instanceof UseCaseParticipant_c) {
			return ((UseCaseParticipant_c) element).getDescrip();
		}
		if(element instanceof TimingMark_c) {
			return ((TimingMark_c) element).getDescrip();
		}
		if(element instanceof TimeSpan_c) {
			return ((TimeSpan_c) element).getDescrip();
		}
		if(element instanceof PackageParticipant_c) {
			return ((PackageParticipant_c) element).getDescrip();
		}
		if(element instanceof Lifespan_c) {
			return ((Lifespan_c) element).getDescrip();
		}
		if(element instanceof InstanceAttributeValue_c) {
			return ((InstanceAttributeValue_c) element).getDescrip();
		}
		if(element instanceof FunctionPackageParticipant_c) {
			return ((FunctionPackageParticipant_c) element).getDescrip();
		}
		if(element instanceof ExternalEntityParticipant_c) {
			return ((ExternalEntityParticipant_c) element).getDescrip();
		}
		if(element instanceof ComponentParticipant_c) {
			return ((ComponentParticipant_c) element).getDescrip();
		}
		if(element instanceof ClassParticipantAttribute_c) {
			return ((ClassParticipantAttribute_c) element).getDescrip();
		}
		if(element instanceof ClassParticipant_c) {
			return ((ClassParticipant_c) element).getDescrip();
		}
		if(element instanceof ClassInstanceParticipant_c) {
			return ((ClassInstanceParticipant_c) element).getDescrip();
		}
		if(element instanceof ActorParticipant_c) {
			return ((ActorParticipant_c) element).getDescrip();
		}
		if(element instanceof Package_c) {
			return ((Package_c) element).getDescrip();
		}
		if(element instanceof Subsystem_c) {
			return ((Subsystem_c) element).getDescrip();
		}
		if(element instanceof StructureMember_c) {
			return ((StructureMember_c) element).getDescrip();
		}
		if(element instanceof FunctionParameter_c) {
			return ((FunctionParameter_c) element).getDescrip();
		}
		if(element instanceof Function_c) {
			return ((Function_c) element).getDescrip();
		}
		if(element instanceof ExternalEntityEventDataItem_c) {
			return ((ExternalEntityEventDataItem_c) element).getDescrip();
		}
		if(element instanceof ExternalEntityEvent_c) {
			return ((ExternalEntityEvent_c) element).getDescrip();
		}
		if(element instanceof ExternalEntityDataItem_c) {
			return ((ExternalEntityDataItem_c) element).getDescrip();
		}
		if(element instanceof ExternalEntity_c) {
			return ((ExternalEntity_c) element).getDescrip();
		}
		if(element instanceof Enumerator_c) {
			return ((Enumerator_c) element).getDescrip();
		}
		if(element instanceof Domain_c) {
			return ((Domain_c) element).getDescrip();
		}
		if(element instanceof DataType_c) {
			return ((DataType_c) element).getDescrip();
		}
		if(element instanceof BridgeParameter_c) {
			return ((BridgeParameter_c) element).getDescrip();
		}
		if(element instanceof Bridge_c) {
			return ((Bridge_c) element).getDescrip();
		}
		if(element instanceof SymbolicConstant_c) {
			return ((SymbolicConstant_c) element).getDescrip();
		}
		if(element instanceof ConstantSpecification_c) {
			return ((ConstantSpecification_c) element).getDescrip();
		}
		if(element instanceof Satisfaction_c) {
			return ((Satisfaction_c) element).getDescrip();
		}
		if(element instanceof Requirement_c) {
			return ((Requirement_c) element).getDescrip();
		}
		if(element instanceof Provision_c) {
			return ((Provision_c) element).getDescrip();
		}
		if(element instanceof PropertyParameter_c) {
			return ((PropertyParameter_c) element).getDescrip();
		}
		if(element instanceof InterfaceSignal_c) {
			return ((InterfaceSignal_c) element).getDescrip();
		}
		if(element instanceof InterfaceOperation_c) {
			return ((InterfaceOperation_c) element).getDescrip();
		}
		if(element instanceof Interface_c) {
			return ((Interface_c) element).getDescrip();
		}
		if(element instanceof ComponentPackage_c) {
			return ((ComponentPackage_c) element).getDescrip();
		}
		if(element instanceof ImportedRequirement_c) {
			return ((ImportedRequirement_c) element).getDescrip();
		}
		if(element instanceof ImportedReference_c) {
			return ((ImportedReference_c) element).getDescrip();
		}
		if(element instanceof ImportedProvision_c) {
			return ((ImportedProvision_c) element).getDescrip();
		}
		if(element instanceof ComponentReference_c) {
			return ((ComponentReference_c) element).getDescrip();
		}
		if(element instanceof Component_c) {
			return ((Component_c) element).getDescrip();
		}
		if(element instanceof CommunicationLink_c) {
			return ((CommunicationLink_c) element).getDescrip();
		}
		if(element instanceof Communication_c) {
			return ((Communication_c) element).getDescrip();
		}
		if(element instanceof Association_c) {
			return ((Association_c) element).getDescrip();
		}
		if(element instanceof SendSignal_c) {
			return ((SendSignal_c) element).getDescrip();
		}
		if(element instanceof ObjectNode_c) {
			return ((ObjectNode_c) element).getDescrip();
		}
		if(element instanceof InitialNode_c) {
			return ((InitialNode_c) element).getDescrip();
		}
		if(element instanceof ForkJoinNode_c) {
			return ((ForkJoinNode_c) element).getDescrip();
		}
		if(element instanceof FlowFinalNode_c) {
			return ((FlowFinalNode_c) element).getDescrip();
		}
		if(element instanceof DecisionMergeNode_c) {
			return ((DecisionMergeNode_c) element).getDescrip();
		}
		if(element instanceof ActivityPartition_c) {
			return ((ActivityPartition_c) element).getDescrip();
		}
		if(element instanceof ActivityFinalNode_c) {
			return ((ActivityFinalNode_c) element).getDescrip();
		}
		if(element instanceof ActivityEdge_c) {
			return ((ActivityEdge_c) element).getDescrip();
		}
		if(element instanceof ActivityDiagramAction_c) {
			return ((ActivityDiagramAction_c) element).getDescrip();
		}
		if(element instanceof Activity_c) {
			return ((Activity_c) element).getDescrip();
		}
		if(element instanceof AcceptTimeEventAction_c) {
			return ((AcceptTimeEventAction_c) element).getDescrip();
		}
		if(element instanceof AcceptEventAction_c) {
			return ((AcceptEventAction_c) element).getDescrip();
		}
		return "";
	}
	
	public static String getActionLanguageAttributeValue(Object element) {
		if(element instanceof Operation_c) {
			return ((Operation_c) element).getAction_semantics();
		}
		if(element instanceof DerivedBaseAttribute_c) {
			return ((DerivedBaseAttribute_c) element).getAction_semantics();
		}
		if(element instanceof Action_c) {
			return ((Action_c) element).getAction_semantics();
		}
		if(element instanceof Function_c) {
			return ((Function_c) element).getAction_semantics();
		}
		if(element instanceof Bridge_c) {
			return ((Bridge_c) element).getAction_semantics();
		}
		if(element instanceof RequiredSignal_c) {
			return ((RequiredSignal_c) element).getAction_semantics();
		}
		if(element instanceof RequiredOperation_c) {
			return ((RequiredOperation_c) element).getAction_semantics();
		}
		if(element instanceof ProvidedSignal_c) {
			return ((ProvidedSignal_c) element).getAction_semantics();
		}
		if(element instanceof ProvidedOperation_c) {
			return ((ProvidedOperation_c) element).getAction_semantics();
		}
  		return "";
	}
	
	public static List<Class<?>> getClassesSupportingDescriptions() {
		List<Class<?>> classes = new ArrayList<Class<?>>();
		classes.add(UseCaseDiagram_c.class);
		classes.add(Include_c.class);
		classes.add(Generalization_c.class);
		classes.add(Extend_c.class);
		classes.add(BinaryAssociation_c.class);
		classes.add(OperationParameter_c.class);
		classes.add(Operation_c.class);
		classes.add(ModelClass_c.class);
		classes.add(AttributeReferenceInClass_c.class);
		classes.add(Attribute_c.class);
		classes.add(StateMachineEventDataItem_c.class);
		classes.add(StateMachineEvent_c.class);
		classes.add(StateMachine_c.class);
		classes.add(EventIgnored_c.class);
		classes.add(CantHappen_c.class);
		classes.add(Action_c.class);
		classes.add(Sequence_c.class);
		classes.add(SynchronousMessage_c.class);
		classes.add(ReturnMessage_c.class);
		classes.add(MessageArgument_c.class);
		classes.add(AsynchronousMessage_c.class);
		classes.add(InterfacePackage_c.class);
		classes.add(UseCaseParticipant_c.class);
		classes.add(TimingMark_c.class);
		classes.add(TimeSpan_c.class);
		classes.add(PackageParticipant_c.class);
		classes.add(Lifespan_c.class);
		classes.add(InstanceAttributeValue_c.class);
		classes.add(FunctionPackageParticipant_c.class);
		classes.add(ExternalEntityParticipant_c.class);
		classes.add(ComponentParticipant_c.class);
		classes.add(ClassParticipantAttribute_c.class);
		classes.add(ClassParticipant_c.class);
		classes.add(ClassInstanceParticipant_c.class);
		classes.add(ActorParticipant_c.class);
		classes.add(Package_c.class);
		classes.add(Subsystem_c.class);
		classes.add(StructureMember_c.class);
		classes.add(FunctionParameter_c.class);
		classes.add(Function_c.class);
		classes.add(ExternalEntityEventDataItem_c.class);
		classes.add(ExternalEntityEvent_c.class);
		classes.add(ExternalEntityDataItem_c.class);
		classes.add(ExternalEntity_c.class);
		classes.add(Enumerator_c.class);
		classes.add(Domain_c.class);
		classes.add(DataType_c.class);
		classes.add(BridgeParameter_c.class);
		classes.add(Bridge_c.class);
		classes.add(SymbolicConstant_c.class);
		classes.add(ConstantSpecification_c.class);
		classes.add(Satisfaction_c.class);
		classes.add(Requirement_c.class);
		classes.add(Provision_c.class);
		classes.add(PropertyParameter_c.class);
		classes.add(InterfaceSignal_c.class);
		classes.add(InterfaceOperation_c.class);
		classes.add(Interface_c.class);
		classes.add(ComponentPackage_c.class);
		classes.add(ImportedRequirement_c.class);
		classes.add(ImportedReference_c.class);
		classes.add(ImportedProvision_c.class);
		classes.add(ComponentReference_c.class);
		classes.add(Component_c.class);
		classes.add(CommunicationLink_c.class);
		classes.add(Communication_c.class);
		classes.add(Association_c.class);
		classes.add(SendSignal_c.class);
		classes.add(ObjectNode_c.class);
		classes.add(InitialNode_c.class);
		classes.add(ForkJoinNode_c.class);
		classes.add(FlowFinalNode_c.class);
		classes.add(DecisionMergeNode_c.class);
		classes.add(ActivityPartition_c.class);
		classes.add(ActivityFinalNode_c.class);
		classes.add(ActivityEdge_c.class);
		classes.add(ActivityDiagramAction_c.class);
		classes.add(Activity_c.class);
		classes.add(AcceptTimeEventAction_c.class);
		classes.add(AcceptEventAction_c.class);
		return classes;
	}

	public static List<Class<?>> getClassesSupportingActionLanguage() {
		List<Class<?>> classes = new ArrayList<Class<?>>();
		classes.add(Operation_c.class);
		classes.add(DerivedBaseAttribute_c.class);
		classes.add(Action_c.class);
		classes.add(Function_c.class);
		classes.add(Bridge_c.class);
		classes.add(RequiredSignal_c.class);
		classes.add(RequiredOperation_c.class);
		classes.add(ProvidedSignal_c.class);
		classes.add(ProvidedOperation_c.class);
		return classes;
	}
}
