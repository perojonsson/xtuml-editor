//========================================================================
//
// File: src/com/mentor/nucleus/bp/core/ui/cells/CellModifierProvider.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/generate_cell_modifiers.arc
// Version:      $Revision: 1.2 $
//
// Copyright 2005-2014 Mentor Graphics Corporation.  All rights reserved.
//
//========================================================================
// Licensed under the Apache License, Version 2.0 (the "License"); you may not 
// use this file except in compliance with the License.  You may obtain a copy 
// of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   See the 
// License for the specific language governing permissions and limitations under
// the License.
//======================================================================== 
//
//  Optional Comments about the generated java file
//
package com.mentor.nucleus.bp.core.ui.cells;

import java.util.HashMap;

import org.eclipse.jface.viewers.CellEditor;
import org.eclipse.swt.widgets.Composite;

import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.common.*;
import com.mentor.nucleus.bp.core.inspector.ObjectElement;
import com.mentor.nucleus.bp.core.ui.cells.providers.*;

public class CellModifierProvider {

	private static HashMap<Class<?>, ICellProvider> cellProviders = new HashMap<Class<?>, ICellProvider>();
	
	static {
      cellProviders.put(SystemModel_c.class, new SystemModelCellProvider());
      cellProviders.put(Domain_c.class, new DomainCellProvider());
      cellProviders.put(Subsystem_c.class, new SubsystemCellProvider());
      cellProviders.put(ModelClass_c.class, new ModelClassCellProvider());
      cellProviders.put(FunctionPackage_c.class, new FunctionPackageCellProvider());
      cellProviders.put(Function_c.class, new FunctionCellProvider());
      cellProviders.put(FunctionParameter_c.class, new FunctionParameterCellProvider());
      cellProviders.put(Operation_c.class, new OperationCellProvider());
      cellProviders.put(OperationParameter_c.class, new OperationParameterCellProvider());
      cellProviders.put(InstanceStateMachine_c.class, new InstanceStateMachineCellProvider());
      cellProviders.put(ClassStateMachine_c.class, new ClassStateMachineCellProvider());
      cellProviders.put(StateMachineState_c.class, new StateMachineStateCellProvider());
      cellProviders.put(StateMachineEvent_c.class, new StateMachineEventCellProvider());
      cellProviders.put(StateMachineEventDataItem_c.class, new StateMachineEventDataItemCellProvider());
      cellProviders.put(Attribute_c.class, new AttributeCellProvider());
      cellProviders.put(DataType_c.class, new DataTypeCellProvider());
      cellProviders.put(Enumerator_c.class, new EnumeratorCellProvider());
      cellProviders.put(ExternalEntity_c.class, new ExternalEntityCellProvider());
      cellProviders.put(Bridge_c.class, new BridgeCellProvider());
      cellProviders.put(BridgeParameter_c.class, new BridgeParameterCellProvider());
      cellProviders.put(Association_c.class, new AssociationCellProvider());
      cellProviders.put(ImportedClass_c.class, new ImportedClassCellProvider());
      cellProviders.put(ClassIdentifierAttribute_c.class, new ClassIdentifierAttributeCellProvider());
      cellProviders.put(DerivedBaseAttribute_c.class, new DerivedBaseAttributeCellProvider());
      cellProviders.put(AttributeReferenceInClass_c.class, new AttributeReferenceinClassCellProvider());
      cellProviders.put(ClassAsSimpleParticipant_c.class, new ClassAsSimpleParticipantCellProvider());
      cellProviders.put(ClassAsSimpleFormalizer_c.class, new ClassAsSimpleFormalizerCellProvider());
      cellProviders.put(ClassAsAssociatedOneSide_c.class, new ClassAsAssociatedOneSideCellProvider());
      cellProviders.put(ClassAsAssociatedOtherSide_c.class, new ClassAsAssociatedOtherSideCellProvider());
      cellProviders.put(ClassAsLink_c.class, new ClassAsLinkCellProvider());
      cellProviders.put(ClassAsSupertype_c.class, new ClassAsSupertypeCellProvider());
      cellProviders.put(ClassAsSubtype_c.class, new ClassAsSubtypeCellProvider());
      cellProviders.put(ClassAsDerivedOneSide_c.class, new ClassAsDerivedOneSideCellProvider());
      cellProviders.put(ClassAsDerivedOtherSide_c.class, new ClassAsDerivedOtherSideCellProvider());
      cellProviders.put(Action_c.class, new ActionCellProvider());
      cellProviders.put(EventIgnored_c.class, new EventIgnoredCellProvider());
      cellProviders.put(CantHappen_c.class, new CantHappenCellProvider());
      cellProviders.put(StateEventMatrixEntry_c.class, new StateEventMatrixEntryCellProvider());
      cellProviders.put(DataTypePackage_c.class, new DataTypePackageCellProvider());
      cellProviders.put(ExternalEntityPackage_c.class, new ExternalEntityPackageCellProvider());
      cellProviders.put(UserDataType_c.class, new UserDataTypeCellProvider());
      cellProviders.put(CoreDataType_c.class, new CoreDataTypeCellProvider());
      cellProviders.put(EnumerationDataType_c.class, new EnumerationDataTypeCellProvider());
      cellProviders.put(DerivedAssociation_c.class, new DerivedAssociationCellProvider());
      cellProviders.put(ReferentialAttribute_c.class, new ReferentialAttributeCellProvider());
      cellProviders.put(NonLocalEvent_c.class, new NonLocalEventCellProvider());
      cellProviders.put(ExternalEntityEventData_c.class, new ExternalEntityEventDataCellProvider());
      cellProviders.put(Sequence_c.class, new SequenceCellProvider());
      cellProviders.put(ClassInstanceParticipant_c.class, new ClassInstanceParticipantCellProvider());
      cellProviders.put(InstanceAttributeValue_c.class, new InstanceAttributeValueCellProvider());
      cellProviders.put(ExternalEntityParticipant_c.class, new ExternalEntityParticipantCellProvider());
      cellProviders.put(FunctionPackageParticipant_c.class, new FunctionPackageParticipantCellProvider());
      cellProviders.put(PackageParticipant_c.class, new PackageParticipantCellProvider());
      cellProviders.put(ClassParticipant_c.class, new ClassParticipantCellProvider());
      cellProviders.put(Lifespan_c.class, new LifespanCellProvider());
      cellProviders.put(ClassParticipantAttribute_c.class, new ClassParticipantAttributeCellProvider());
      cellProviders.put(TimingMark_c.class, new TimingMarkCellProvider());
      cellProviders.put(TimeSpan_c.class, new TimeSpanCellProvider());
      cellProviders.put(SynchronousMessage_c.class, new SynchronousMessageCellProvider());
      cellProviders.put(AsynchronousMessage_c.class, new AsynchronousMessageCellProvider());
      cellProviders.put(MessageArgument_c.class, new MessageArgumentCellProvider());
      cellProviders.put(MessageArgument_c.class, new MessageArgumentCellProvider());
      cellProviders.put(InstanceAttributeValue_c.class, new InstanceAttributeValueCellProvider());
      cellProviders.put(ActorParticipant_c.class, new ActorParticipantCellProvider());
      cellProviders.put(ReturnMessage_c.class, new ReturnMessageCellProvider());
      cellProviders.put(Communication_c.class, new CommunicationCellProvider());
      cellProviders.put(CommunicationLink_c.class, new CommunicationLinkCellProvider());
      cellProviders.put(UseCaseDiagram_c.class, new UseCaseDiagramCellProvider());
      cellProviders.put(UseCaseParticipant_c.class, new UseCaseParticipantCellProvider());
      cellProviders.put(BinaryAssociation_c.class, new BinaryAssociationCellProvider());
      cellProviders.put(Generalization_c.class, new GeneralizationCellProvider());
      cellProviders.put(Include_c.class, new IncludeCellProvider());
      cellProviders.put(Extend_c.class, new ExtendCellProvider());
      cellProviders.put(Activity_c.class, new ActivityCellProvider());
      cellProviders.put(ForkJoinNode_c.class, new ForkJoinNodeCellProvider());
      cellProviders.put(InitialNode_c.class, new InitialNodeCellProvider());
      cellProviders.put(ActivityEdge_c.class, new ActivityEdgeCellProvider());
      cellProviders.put(ActivityFinalNode_c.class, new ActivityFinalNodeCellProvider());
      cellProviders.put(FlowFinalNode_c.class, new FlowFinalNodeCellProvider());
      cellProviders.put(ActivityDiagramAction_c.class, new ActivityDiagramActionCellProvider());
      cellProviders.put(DecisionMergeNode_c.class, new DecisionMergeNodeCellProvider());
      cellProviders.put(ObjectNode_c.class, new ObjectNodeCellProvider());
      cellProviders.put(AcceptEventAction_c.class, new AcceptEventActionCellProvider());
      cellProviders.put(SendSignal_c.class, new SendSignalCellProvider());
      cellProviders.put(ActivityPartition_c.class, new ActivityPartitionCellProvider());
      cellProviders.put(AcceptTimeEventAction_c.class, new AcceptTimeEventActionCellProvider());
      cellProviders.put(ComponentPackage_c.class, new ComponentPackageCellProvider());
      cellProviders.put(Component_c.class, new ComponentCellProvider());
      cellProviders.put(ComponentReference_c.class, new ComponentReferenceCellProvider());
      cellProviders.put(Provision_c.class, new ProvisionCellProvider());
      cellProviders.put(Requirement_c.class, new RequirementCellProvider());
      cellProviders.put(InterfacePackage_c.class, new InterfacePackageCellProvider());
      cellProviders.put(Interface_c.class, new InterfaceCellProvider());
      cellProviders.put(InterfaceSignal_c.class, new InterfaceSignalCellProvider());
      cellProviders.put(InterfaceOperation_c.class, new InterfaceOperationCellProvider());
      cellProviders.put(PropertyParameter_c.class, new PropertyParameterCellProvider());
      cellProviders.put(RequiredOperation_c.class, new RequiredOperationCellProvider());
      cellProviders.put(RequiredSignal_c.class, new RequiredSignalCellProvider());
      cellProviders.put(ProvidedOperation_c.class, new ProvidedOperationCellProvider());
      cellProviders.put(ProvidedSignal_c.class, new ProvidedSignalCellProvider());
      cellProviders.put(Instance_c.class, new InstanceCellProvider());
      cellProviders.put(AttributeValue_c.class, new AttributeValueCellProvider());
      cellProviders.put(PendingEvent_c.class, new PendingEventCellProvider());
      cellProviders.put(StructuredDataType_c.class, new StructuredDataTypeCellProvider());
      cellProviders.put(StructureMember_c.class, new StructureMemberCellProvider());
      cellProviders.put(Port_c.class, new PortCellProvider());
      cellProviders.put(ImportedProvision_c.class, new ImportedProvisionCellProvider());
      cellProviders.put(ImportedRequirement_c.class, new ImportedRequirementCellProvider());
      cellProviders.put(Transition_c.class, new TransitionCellProvider());
      cellProviders.put(ComponentInstance_c.class, new ComponentInstanceCellProvider());
      cellProviders.put(ComponentParticipant_c.class, new ComponentParticipantCellProvider());
      cellProviders.put(Package_c.class, new PackageCellProvider());
      cellProviders.put(LinkParticipation_c.class, new LinkParticipationCellProvider());
      cellProviders.put(ConstantSpecification_c.class, new ConstantSpecificationCellProvider());
      cellProviders.put(LiteralSymbolicConstant_c.class, new LiteralSymbolicConstantCellProvider());
      cellProviders.put(SymbolicConstant_c.class, new SymbolicConstantCellProvider());
      cellProviders.put(Satisfaction_c.class, new SatisfactionCellProvider());
      cellProviders.put(NewBaseAttribute_c.class, new NewBaseAttributeCellProvider());
      cellProviders.put(PolymorphicEvent_c.class, new PolymorphicEventCellProvider());
      cellProviders.put(ReferredToIdentifierAttribute_c.class, new ReferredToIdentifierAttributeCellProvider());
      cellProviders.put(Delegation_c.class, new DelegationCellProvider());
      cellProviders.put(SemEvent_c.class, new SEMEventCellProvider());
      cellProviders.put(InformalSynchronousMessage_c.class, new InformalSynchronousMessageCellProvider());
      cellProviders.put(InformalAsynchronousMessage_c.class, new InformalAsynchronousMessageCellProvider());
      cellProviders.put(FunctionMessage_c.class, new FunctionMessageCellProvider());
      cellProviders.put(BridgeMessage_c.class, new BridgeMessageCellProvider());
      cellProviders.put(OperationMessage_c.class, new OperationMessageCellProvider());
      cellProviders.put(InterfaceOperationMessage_c.class, new InterfaceOperationMessageCellProvider());
      cellProviders.put(EventMessage_c.class, new EventMessageCellProvider());
      cellProviders.put(SignalMessage_c.class, new SignalMessageCellProvider());
      cellProviders.put(InformalArgument_c.class, new InformalArgumentCellProvider());
      cellProviders.put(CreationTransition_c.class, new CreationTransitionCellProvider());
	}
	
	public static CellEditor getCellEditor(NonRootModelElement element, Composite parent, ObjectElement data) {
		ICellProvider cellProvider = cellProviders .get(element.getClass());
		if(cellProvider != null) {
			return cellProvider.getCellEditor(element, parent, data);
		}
		return null;
	}

	public static boolean supportsEdit(NonRootModelElement element,
			ObjectElement data, Composite parent) {
		ICellProvider cellProvider = cellProviders.get(element.getClass());
		if(cellProvider != null) {
			return cellProvider.supportsEdit(element, data, parent);
		}
		return false;
	}
	
	public static String getValue(NonRootModelElement element, ObjectElement data) {
		ICellProvider cellProvider = cellProviders.get(element.getClass());
		if(cellProvider != null) {
			return cellProvider.getValue(element, data);
		}
		return null;
	}
	
	public static void setValue(NonRootModelElement element, ObjectElement data, Object value, NonRootModelElement attributeOwner) {
		ICellProvider cellProvider = cellProviders.get(element.getClass());
		if(cellProvider != null) {
		    if(attributeOwner != null) {
		    	element = attributeOwner;
		    }
			cellProvider.setValue(element, data, value);
		}
	}

}
