package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.CommunicationLink_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_COMMUNICATION_LINK extends genericEvent_c {
	public abstract int getEvtcode();
}

public class CommunicationLink_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public CommunicationLink_c(ModelRoot modelRoot, java.util.UUID p_m_link_id,
			java.util.UUID p_m_rel_id, String p_m_numb, String p_m_descrip,
			String p_m_starttext, String p_m_endtext, boolean p_m_isformal,
			int p_m_startvisibility, int p_m_endvisibility,
			java.util.UUID p_m_start_part_id,
			java.util.UUID p_m_destination_part_id) {
		super(modelRoot);
		m_numb = p_m_numb;
		m_starttext = p_m_starttext;
		m_endtext = p_m_endtext;
		m_isformal = p_m_isformal;
		m_startvisibility = p_m_startvisibility;
		m_endvisibility = p_m_endvisibility;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_link_id = IdAssigner.preprocessUUID(p_m_link_id);
		//extract 28 bit value only            
		m_link_idLongBased = 0xfffffff & p_m_link_id.getLeastSignificantBits();
		m_descrip = p_m_descrip;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_start_part_id = IdAssigner.preprocessUUID(p_m_start_part_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_destination_part_id = IdAssigner
				.preprocessUUID(p_m_destination_part_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);

		setUniqueId(m_link_id);
		Object[] key = {m_link_id};
		addInstanceToMap(key);
	}
	static public CommunicationLink_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_link_id, java.util.UUID p_m_rel_id,
			String p_m_numb, String p_m_descrip, String p_m_starttext,
			String p_m_endtext, boolean p_m_isformal, int p_m_startvisibility,
			int p_m_endvisibility, java.util.UUID p_m_start_part_id,
			java.util.UUID p_m_destination_part_id, String p_contentPath,
			IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(CommunicationLink_c.class);
		CommunicationLink_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_link_id};
			new_inst = (CommunicationLink_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				new_inst.m_numb = p_m_numb;
				new_inst.m_starttext = p_m_starttext;
				new_inst.m_endtext = p_m_endtext;
				new_inst.m_isformal = p_m_isformal;
				new_inst.m_startvisibility = p_m_startvisibility;
				new_inst.m_endvisibility = p_m_endvisibility;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_link_id = IdAssigner.preprocessUUID(p_m_link_id);
				//extract 28 bit value only            
				new_inst.m_link_idLongBased = 0xfffffff & p_m_link_id
						.getLeastSignificantBits();
				new_inst.m_descrip = p_m_descrip;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_start_part_id = IdAssigner
						.preprocessUUID(p_m_start_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_destination_part_id = IdAssigner
						.preprocessUUID(p_m_destination_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new CommunicationLink_c(modelRoot, p_m_link_id,
					p_m_rel_id, p_m_numb, p_m_descrip, p_m_starttext,
					p_m_endtext, p_m_isformal, p_m_startvisibility,
					p_m_endvisibility, p_m_start_part_id,
					p_m_destination_part_id);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public CommunicationLink_c resolveInstance(ModelRoot modelRoot,
			java.util.UUID p_m_link_id, java.util.UUID p_m_rel_id,
			String p_m_numb, String p_m_descrip, String p_m_starttext,
			String p_m_endtext, boolean p_m_isformal, int p_m_startvisibility,
			int p_m_endvisibility, java.util.UUID p_m_start_part_id,
			java.util.UUID p_m_destination_part_id) {
		InstanceList instances = modelRoot
				.getInstanceList(CommunicationLink_c.class);
		CommunicationLink_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_link_id};
			source = (CommunicationLink_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				source.m_numb = p_m_numb;
				source.m_starttext = p_m_starttext;
				source.m_endtext = p_m_endtext;
				source.m_isformal = p_m_isformal;
				source.m_startvisibility = p_m_startvisibility;
				source.m_endvisibility = p_m_endvisibility;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_link_id = IdAssigner.preprocessUUID(p_m_link_id);
				//extract 28 bit value only            
				source.m_link_idLongBased = 0xfffffff & p_m_link_id
						.getLeastSignificantBits();
				source.m_descrip = p_m_descrip;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_start_part_id = IdAssigner
						.preprocessUUID(p_m_start_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_destination_part_id = IdAssigner
						.preprocessUUID(p_m_destination_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);

				return source;
			}
		}
		// there is no instance matching the id
		CommunicationLink_c new_inst = new CommunicationLink_c(modelRoot,
				p_m_link_id, p_m_rel_id, p_m_numb, p_m_descrip, p_m_starttext,
				p_m_endtext, p_m_isformal, p_m_startvisibility,
				p_m_endvisibility, p_m_start_part_id, p_m_destination_part_id);
		return new_inst;
	}
	public CommunicationLink_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_numb = "";
		m_starttext = "";
		m_endtext = "";
		m_startvisibility = Visibility_c.OOA_UNINITIALIZED_ENUM;
		m_endvisibility = Visibility_c.OOA_UNINITIALIZED_ENUM;
		m_link_id = idAssigner.createUUID();
		m_descrip = "";
		m_start_part_id = IdAssigner.NULL_UUID;
		m_destination_part_id = IdAssigner.NULL_UUID;
		m_rel_id = IdAssigner.NULL_UUID;
		setUniqueId(m_link_id);
		Object[] key = {m_link_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_link_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p5
		if (m_link_id != p_newKey) {

			m_link_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof CommunicationLink_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof CommunicationLink_c)) {
			return false;
		}

		CommunicationLink_c me = (CommunicationLink_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getLink_id()) || IdAssigner.NULL_UUID
						.equals(((CommunicationLink_c) elem).getLink_id())) && this != elem)) {
			return false;
		}
		if (!getLink_id().equals(((CommunicationLink_c) elem).getLink_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof CommunicationLink_c)) {
			return false;
		}

		CommunicationLink_c me = (CommunicationLink_c) elem;
		if (!getLink_id().equals(((CommunicationLink_c) elem).getLink_id()))
			return false;
		return true;
	}

	// Attributes
	private String m_numb;
	private String m_starttext;
	private String m_endtext;
	private boolean m_isformal;
	private int m_startvisibility;
	private int m_endvisibility;
	private java.util.UUID m_link_id;
	private long m_link_idLongBased;
	private String m_descrip;
	private java.util.UUID m_start_part_id;
	private java.util.UUID m_destination_part_id;
	private java.util.UUID m_rel_id;

	// declare association references from this class

	// referring navigation

	Association_c MayBeFormalizedAgainstAssociation;
	public void relateAcrossR1128To(Association_c target) {
		relateAcrossR1128To(target, true);
	}
	public void relateAcrossR1128To(Association_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (target == MayBeFormalizedAgainstAssociation)
			return; // already related

		if (MayBeFormalizedAgainstAssociation != target) {

			Object oldKey = getInstanceKey();

			if (MayBeFormalizedAgainstAssociation != null) {
				UmlProblem.removeXtUMLProblem(this,
						MayBeFormalizedAgainstAssociation);

				MayBeFormalizedAgainstAssociation.clearBackPointerR1128To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"CommunicationLink_c.relateAcrossR1128To(Association_c target)",
									"Relate performed across R1128 from Communication Link to Association without unrelate of prior instance.");
				}
			}

			MayBeFormalizedAgainstAssociation = target;
			if (IdAssigner.NULL_UUID.equals(target.getRel_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_rel_id = target.getRel_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR1128To(this);
			target.addRef();
			UmlProblem.handleDanglingReference(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "1128", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR1128From(Association_c target) {
		unrelateAcrossR1128From(target, true);
	}
	public void unrelateAcrossR1128From(Association_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (MayBeFormalizedAgainstAssociation == null)
			return; // already unrelated

		if (target != MayBeFormalizedAgainstAssociation) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R1128",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR1128To(this);
		}

		if (MayBeFormalizedAgainstAssociation != null) {

			m_rel_id = MayBeFormalizedAgainstAssociation.getRel_id();
			if (IdAssigner.NULL_UUID.equals(m_rel_id)) {
				m_rel_id = MayBeFormalizedAgainstAssociation
						.getRel_idCachedValue();
			}
			MayBeFormalizedAgainstAssociation = null;
			target.removeRef();
			UmlProblem.removeXtUMLProblem(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "1128", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1128(
			Association_c[] targets) {
		return getOneCOMM_LNKOnR1128(targets, null);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1128(
			Association_c[] targets, ClassQueryInterface_c test) {
		CommunicationLink_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneCOMM_LNKOnR1128(targets[i], test);
			}
		}

		return ret_val;
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1128(Association_c target) {
		return getOneCOMM_LNKOnR1128(target, null);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1128(
			Association_c target, boolean loadComponent) {
		return getOneCOMM_LNKOnR1128(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1128(
			Association_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneCOMM_LNKOnR1128(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1128(
			ModelRoot modelRoot, Association_c target,
			ClassQueryInterface_c test) {
		return getOneCOMM_LNKOnR1128(modelRoot, target, test, true);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1128(
			ModelRoot modelRoot, Association_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		CommunicationLink_c result = null;

		result = find_getOneCOMM_LNKOnR1128(modelRoot, target, test);
		if (result == null && (loadComponent)) {
			// not a Containment Relation
			List comps = PersistenceManager.findAllComponents(modelRoot,
					CommunicationLink_c.class);
			for (int i = 0; i < comps.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) comps
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = find_getOneCOMM_LNKOnR1128(modelRoot, target,
								test);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}

		return result;
	}
	private static CommunicationLink_c find_getOneCOMM_LNKOnR1128(
			ModelRoot modelRoot, Association_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128) {
				for (int i = 0; i < target.backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128
						.size(); ++i) {
					CommunicationLink_c source = (CommunicationLink_c) target.backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1128(
			Association_c[] targets) {
		return getManyCOMM_LNKsOnR1128(targets, null);
	}
	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1128(
			Association_c[] targets, boolean loadComponent) {
		return getManyCOMM_LNKsOnR1128(targets, null, loadComponent);
	}
	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1128(
			Association_c[] targets, ClassQueryInterface_c test) {
		return getManyCOMM_LNKsOnR1128(targets, test, true);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1128(
			Association_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new CommunicationLink_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					CommunicationLink_c.class);

		}

		InstanceList instances = modelRoot
				.getInstanceList(CommunicationLink_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128) {
				for (int j = 0; j < targets[i].backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128
						.size(); ++j) {
					CommunicationLink_c source = (CommunicationLink_c) targets[i].backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			CommunicationLink_c[] ret_set = new CommunicationLink_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new CommunicationLink_c[0];
		}
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1128(
			Association_c target) {
		return getManyCOMM_LNKsOnR1128(target, null);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1128(
			Association_c target, boolean loadComponent) {
		return getManyCOMM_LNKsOnR1128(target, null, loadComponent);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1128(
			Association_c target, ClassQueryInterface_c test) {
		return getManyCOMM_LNKsOnR1128(target, test, true);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1128(
			Association_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new CommunicationLink_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					CommunicationLink_c.class);
		}
		Vector matches = new Vector();
		synchronized (target.backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128) {
			for (int i = 0; i < target.backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128
					.size(); ++i) {
				CommunicationLink_c source = (CommunicationLink_c) target.backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			CommunicationLink_c[] ret_set = new CommunicationLink_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new CommunicationLink_c[0];
		}
	}

	// referring navigation

	InteractionParticipant_c StartsAtInteractionParticipant;
	public void relateAcrossR1133To(InteractionParticipant_c target) {
		relateAcrossR1133To(target, true);
	}
	public void relateAcrossR1133To(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == StartsAtInteractionParticipant)
			return; // already related

		if (StartsAtInteractionParticipant != target) {

			Object oldKey = getInstanceKey();

			if (StartsAtInteractionParticipant != null) {

				StartsAtInteractionParticipant.clearBackPointerR1133To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"CommunicationLink_c.relateAcrossR1133To(InteractionParticipant_c target)",
									"Relate performed across R1133 from Communication Link to Interaction Participant without unrelate of prior instance.");
				}
			}

			StartsAtInteractionParticipant = target;
			if (IdAssigner.NULL_UUID.equals(target.getPart_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_start_part_id = target.getPart_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR1133To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "1133", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR1133From(InteractionParticipant_c target) {
		unrelateAcrossR1133From(target, true);
	}
	public void unrelateAcrossR1133From(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (StartsAtInteractionParticipant == null)
			return; // already unrelated

		if (target != StartsAtInteractionParticipant) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R1133",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR1133To(this);
		}

		if (StartsAtInteractionParticipant != null) {

			m_start_part_id = StartsAtInteractionParticipant.getPart_id();
			if (IdAssigner.NULL_UUID.equals(m_start_part_id)) {
				m_start_part_id = StartsAtInteractionParticipant
						.getPart_idCachedValue();
			}
			StartsAtInteractionParticipant = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "1133", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1133(
			InteractionParticipant_c[] targets) {
		return getOneCOMM_LNKOnR1133(targets, null);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1133(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		CommunicationLink_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneCOMM_LNKOnR1133(targets[i], test);
			}
		}

		return ret_val;
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1133(
			InteractionParticipant_c target) {
		return getOneCOMM_LNKOnR1133(target, null);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1133(
			InteractionParticipant_c target, boolean loadComponent) {
		return getOneCOMM_LNKOnR1133(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1133(
			InteractionParticipant_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneCOMM_LNKOnR1133(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1133(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		return getOneCOMM_LNKOnR1133(modelRoot, target, test, true);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1133(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneCOMM_LNKOnR1133(modelRoot, target, test);
	}
	private static CommunicationLink_c find_getOneCOMM_LNKOnR1133(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133) {
				for (int i = 0; i < target.backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133
						.size(); ++i) {
					CommunicationLink_c source = (CommunicationLink_c) target.backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1133(
			InteractionParticipant_c[] targets) {
		return getManyCOMM_LNKsOnR1133(targets, null);
	}
	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1133(
			InteractionParticipant_c[] targets, boolean loadComponent) {
		return getManyCOMM_LNKsOnR1133(targets, null, loadComponent);
	}
	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1133(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		return getManyCOMM_LNKsOnR1133(targets, test, true);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1133(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new CommunicationLink_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(CommunicationLink_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133) {
				for (int j = 0; j < targets[i].backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133
						.size(); ++j) {
					CommunicationLink_c source = (CommunicationLink_c) targets[i].backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			CommunicationLink_c[] ret_set = new CommunicationLink_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new CommunicationLink_c[0];
		}
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1133(
			InteractionParticipant_c target) {
		return getManyCOMM_LNKsOnR1133(target, null);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1133(
			InteractionParticipant_c target, boolean loadComponent) {
		return getManyCOMM_LNKsOnR1133(target, null, loadComponent);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1133(
			InteractionParticipant_c target, ClassQueryInterface_c test) {
		return getManyCOMM_LNKsOnR1133(target, test, true);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1133(
			InteractionParticipant_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new CommunicationLink_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		Vector matches = new Vector();
		synchronized (target.backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133) {
			for (int i = 0; i < target.backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133
					.size(); ++i) {
				CommunicationLink_c source = (CommunicationLink_c) target.backPointer_IsStartPointCommunicationLinkIsStartPoint_R1133
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			CommunicationLink_c[] ret_set = new CommunicationLink_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new CommunicationLink_c[0];
		}
	}

	// referring navigation

	InteractionParticipant_c IsDestinedForInteractionParticipant;
	public void relateAcrossR1134To(InteractionParticipant_c target) {
		relateAcrossR1134To(target, true);
	}
	public void relateAcrossR1134To(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsDestinedForInteractionParticipant)
			return; // already related

		if (IsDestinedForInteractionParticipant != target) {

			Object oldKey = getInstanceKey();

			if (IsDestinedForInteractionParticipant != null) {

				IsDestinedForInteractionParticipant
						.clearBackPointerR1134To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"CommunicationLink_c.relateAcrossR1134To(InteractionParticipant_c target)",
									"Relate performed across R1134 from Communication Link to Interaction Participant without unrelate of prior instance.");
				}
			}

			IsDestinedForInteractionParticipant = target;
			if (IdAssigner.NULL_UUID.equals(target.getPart_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_destination_part_id = target.getPart_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR1134To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "1134", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR1134From(InteractionParticipant_c target) {
		unrelateAcrossR1134From(target, true);
	}
	public void unrelateAcrossR1134From(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (IsDestinedForInteractionParticipant == null)
			return; // already unrelated

		if (target != IsDestinedForInteractionParticipant) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R1134",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR1134To(this);
		}

		if (IsDestinedForInteractionParticipant != null) {

			m_destination_part_id = IsDestinedForInteractionParticipant
					.getPart_id();
			if (IdAssigner.NULL_UUID.equals(m_destination_part_id)) {
				m_destination_part_id = IsDestinedForInteractionParticipant
						.getPart_idCachedValue();
			}
			IsDestinedForInteractionParticipant = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "1134", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1134(
			InteractionParticipant_c[] targets) {
		return getOneCOMM_LNKOnR1134(targets, null);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1134(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		CommunicationLink_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneCOMM_LNKOnR1134(targets[i], test);
			}
		}

		return ret_val;
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1134(
			InteractionParticipant_c target) {
		return getOneCOMM_LNKOnR1134(target, null);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1134(
			InteractionParticipant_c target, boolean loadComponent) {
		return getOneCOMM_LNKOnR1134(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1134(
			InteractionParticipant_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneCOMM_LNKOnR1134(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1134(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		return getOneCOMM_LNKOnR1134(modelRoot, target, test, true);
	}

	public static CommunicationLink_c getOneCOMM_LNKOnR1134(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneCOMM_LNKOnR1134(modelRoot, target, test);
	}
	private static CommunicationLink_c find_getOneCOMM_LNKOnR1134(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_IsDestinationCommunicationLinkIsDestination_R1134) {
				for (int i = 0; i < target.backPointer_IsDestinationCommunicationLinkIsDestination_R1134
						.size(); ++i) {
					CommunicationLink_c source = (CommunicationLink_c) target.backPointer_IsDestinationCommunicationLinkIsDestination_R1134
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1134(
			InteractionParticipant_c[] targets) {
		return getManyCOMM_LNKsOnR1134(targets, null);
	}
	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1134(
			InteractionParticipant_c[] targets, boolean loadComponent) {
		return getManyCOMM_LNKsOnR1134(targets, null, loadComponent);
	}
	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1134(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		return getManyCOMM_LNKsOnR1134(targets, test, true);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1134(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new CommunicationLink_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(CommunicationLink_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_IsDestinationCommunicationLinkIsDestination_R1134) {
				for (int j = 0; j < targets[i].backPointer_IsDestinationCommunicationLinkIsDestination_R1134
						.size(); ++j) {
					CommunicationLink_c source = (CommunicationLink_c) targets[i].backPointer_IsDestinationCommunicationLinkIsDestination_R1134
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			CommunicationLink_c[] ret_set = new CommunicationLink_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new CommunicationLink_c[0];
		}
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1134(
			InteractionParticipant_c target) {
		return getManyCOMM_LNKsOnR1134(target, null);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1134(
			InteractionParticipant_c target, boolean loadComponent) {
		return getManyCOMM_LNKsOnR1134(target, null, loadComponent);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1134(
			InteractionParticipant_c target, ClassQueryInterface_c test) {
		return getManyCOMM_LNKsOnR1134(target, test, true);
	}

	public static CommunicationLink_c[] getManyCOMM_LNKsOnR1134(
			InteractionParticipant_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new CommunicationLink_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		Vector matches = new Vector();
		synchronized (target.backPointer_IsDestinationCommunicationLinkIsDestination_R1134) {
			for (int i = 0; i < target.backPointer_IsDestinationCommunicationLinkIsDestination_R1134
					.size(); ++i) {
				CommunicationLink_c source = (CommunicationLink_c) target.backPointer_IsDestinationCommunicationLinkIsDestination_R1134
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			CommunicationLink_c[] ret_set = new CommunicationLink_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new CommunicationLink_c[0];
		}
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies,
			boolean notifyChanges, boolean searchAllRoots) {
		InstanceList instances = null;
		ModelRoot baseRoot = modelRoot;

		if (MayBeFormalizedAgainstAssociation == null) {
			// R1128
			Association_c relInst57561 = (Association_c) baseRoot
					.getInstanceList(Association_c.class).get(
							new Object[]{m_rel_id});
			// if there was no local element, check for any global elements
			// failing that proceed to check other model roots
			if (relInst57561 == null) {
				relInst57561 = (Association_c) Ooaofooa.getDefaultInstance()
						.getInstanceList(Association_c.class)
						.get(new Object[]{m_rel_id});
			}
			if (relInst57561 == null && searchAllRoots
					&& !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
					if (roots[i].isCompareRoot()) {
						// never use elements from any compare root
						continue;
					}
					relInst57561 = (Association_c) roots[i].getInstanceList(
							Association_c.class).get(new Object[]{m_rel_id});
					if (relInst57561 != null)
						break;
				}
			}
			//synchronized
			if (relInst57561 != null) {
				if (relateProxies || !isProxy()
						|| (inSameComponent(this, relInst57561) && !isProxy())) {
					relInst57561.relateAcrossR1128To(this, notifyChanges);
				}
			}
		}

		if (StartsAtInteractionParticipant == null) {
			// R1133
			InteractionParticipant_c relInst57562 = (InteractionParticipant_c) baseRoot
					.getInstanceList(InteractionParticipant_c.class).get(
							new Object[]{m_start_part_id});
			// if there was no local element, check for any global elements
			// failing that proceed to check other model roots
			if (relInst57562 == null) {
				relInst57562 = (InteractionParticipant_c) Ooaofooa
						.getDefaultInstance()
						.getInstanceList(InteractionParticipant_c.class)
						.get(new Object[]{m_start_part_id});
			}
			if (relInst57562 == null && searchAllRoots
					&& !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
					if (roots[i].isCompareRoot()) {
						// never use elements from any compare root
						continue;
					}
					relInst57562 = (InteractionParticipant_c) roots[i]
							.getInstanceList(InteractionParticipant_c.class)
							.get(new Object[]{m_start_part_id});
					if (relInst57562 != null)
						break;
				}
			}
			//synchronized
			if (relInst57562 != null) {
				if (relateProxies || !isProxy()
						|| (inSameComponent(this, relInst57562) && !isProxy())) {
					relInst57562.relateAcrossR1133To(this, notifyChanges);
				}
			}
		}

		if (IsDestinedForInteractionParticipant == null) {
			// R1134
			InteractionParticipant_c relInst57563 = (InteractionParticipant_c) baseRoot
					.getInstanceList(InteractionParticipant_c.class).get(
							new Object[]{m_destination_part_id});
			// if there was no local element, check for any global elements
			// failing that proceed to check other model roots
			if (relInst57563 == null) {
				relInst57563 = (InteractionParticipant_c) Ooaofooa
						.getDefaultInstance()
						.getInstanceList(InteractionParticipant_c.class)
						.get(new Object[]{m_destination_part_id});
			}
			if (relInst57563 == null && searchAllRoots
					&& !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
					if (roots[i].isCompareRoot()) {
						// never use elements from any compare root
						continue;
					}
					relInst57563 = (InteractionParticipant_c) roots[i]
							.getInstanceList(InteractionParticipant_c.class)
							.get(new Object[]{m_destination_part_id});
					if (relInst57563 != null)
						break;
				}
			}
			//synchronized
			if (relInst57563 != null) {
				if (relateProxies || !isProxy()
						|| (inSameComponent(this, relInst57563) && !isProxy())) {
					relInst57563.relateAcrossR1134To(this, notifyChanges);
				}
			}
		}

	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R1128
		// R_REL
		inst = MayBeFormalizedAgainstAssociation;
		unrelateAcrossR1128From(MayBeFormalizedAgainstAssociation,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R1133
		// SQ_P
		inst = StartsAtInteractionParticipant;
		unrelateAcrossR1133From(StartsAtInteractionParticipant, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R1134
		// SQ_P
		inst = IsDestinedForInteractionParticipant;
		unrelateAcrossR1134From(IsDestinedForInteractionParticipant,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(CommunicationLink_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final CommunicationLink_c inst = (CommunicationLink_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(CommunicationLink_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static CommunicationLink_c CommunicationLinkInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		CommunicationLink_c result = findCommunicationLinkInstance(modelRoot,
				test, loadComponent);
		if (result == null && loadComponent) {
			List pmcs = PersistenceManager.findAllComponents(modelRoot,
					CommunicationLink_c.class);
			for (int i = 0; i < pmcs.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) pmcs
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = findCommunicationLinkInstance(modelRoot, test,
								loadComponent);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}
		if (result != null && loadComponent) {
			result.loadProxy();
		}
		return result;
	}
	private static CommunicationLink_c findCommunicationLinkInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(CommunicationLink_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				CommunicationLink_c x = (CommunicationLink_c) instances.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						return x;
				}
			}
		}
		return null;
	}
	public static CommunicationLink_c CommunicationLinkInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return CommunicationLinkInstance(modelRoot, test, true);
	}

	public static CommunicationLink_c CommunicationLinkInstance(
			ModelRoot modelRoot) {
		return CommunicationLinkInstance(modelRoot, null, true);
	}

	public static CommunicationLink_c[] CommunicationLinkInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (loadComponent) {
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					CommunicationLink_c.class);
		}
		InstanceList instances = modelRoot
				.getInstanceList(CommunicationLink_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				CommunicationLink_c x = (CommunicationLink_c) instances.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						matches.add(x);
				}
			}
			if (matches.size() > 0) {
				CommunicationLink_c[] ret_set = new CommunicationLink_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new CommunicationLink_c[0];
			}
		}
	}
	public static CommunicationLink_c[] CommunicationLinkInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return CommunicationLinkInstances(modelRoot, test, true);
	}
	public static CommunicationLink_c[] CommunicationLinkInstances(
			ModelRoot modelRoot) {
		return CommunicationLinkInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Communication Link.dispose call: ";
		Association_c testR1128Inst = Association_c.getOneR_RELOnR1128(this,
				false);

		if (testR1128Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "1128 ";
		}
		InteractionParticipant_c testR1133Inst = InteractionParticipant_c
				.getOneSQ_POnR1133(this, false);

		if (testR1133Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "1133 ";
		}
		InteractionParticipant_c testR1134Inst = InteractionParticipant_c
				.getOneSQ_POnR1134(this, false);

		if (testR1134Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "1134 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log.println(ILogger.DELETE, "Communication Link",
						errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	/**
	 * Assigns IDs to instances of this class.
	 */
	private static IdAssigner idAssigner = new IdAssigner();

	/**
	 * See field.
	 */
	public IdAssigner getIdAssigner() {
		return idAssigner;
	}

	/**
	 * See field.
	 */
	public static IdAssigner getIdAssigner_() {
		return idAssigner;
	}
	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("link_id")) {
			return true;
		}
		if (attributeName.equals("start_part_id")) {
			return true;
		}
		if (attributeName.equals("destination_part_id")) {
			return true;
		}
		if (attributeName.equals("rel_id")) {
			return true;
		}
		return false;
	}
	public String getCompUniqueID() {
		UUID tempID = null;
		long longID = 0L;
		StringBuffer result = new StringBuffer();

		tempID = getLink_id();

		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		return result.toString();
	}
	// declare attribute accessors
	public String getNumb() {
		return m_numb;
	}

	public void setNumb(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_numb)) {
				return;
			}
		} else if (m_numb != null) {
			if (m_numb.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Numb",
				m_numb, newValue, true);
		m_numb = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getStarttext() {
		return m_starttext;
	}

	public void setStarttext(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_starttext)) {
				return;
			}
		} else if (m_starttext != null) {
			if (m_starttext.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Starttext", m_starttext, newValue, true);
		m_starttext = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getEndtext() {
		return m_endtext;
	}

	public void setEndtext(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_endtext)) {
				return;
			}
		} else if (m_endtext != null) {
			if (m_endtext.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Endtext", m_endtext, newValue, true);
		m_endtext = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public boolean getIsformal() {
		ModelRoot modelRoot = getModelRoot();
		Association_c v_assoc = Association_c.getOneR_RELOnR1128(this);

		if (((v_assoc != null))) {

			return true;

		}

		else {

			return false;

		}

	}

	public int getStartvisibility() {
		return m_startvisibility;
	}

	public void setStartvisibility(int newValue) {
		if (m_startvisibility == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Startvisibility", new Integer(m_startvisibility), new Integer(
						newValue), true);

		m_startvisibility = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public int getEndvisibility() {
		return m_endvisibility;
	}

	public void setEndvisibility(int newValue) {
		if (m_endvisibility == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Endvisibility", new Integer(m_endvisibility), new Integer(
						newValue), true);

		m_endvisibility = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getLink_idLongBased() {
		if (m_link_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_link_id)) {
			return 0xfffffff & m_link_id.getLeastSignificantBits();
		}
		return m_link_idLongBased;
	}
	public java.util.UUID getLink_id() {
		return m_link_id;
	}

	public void setLink_id(java.util.UUID newValue) {
		m_link_id = IdAssigner.preprocessUUID(newValue);
	}
	public String getDescrip() {
		return m_descrip;
	}

	public void setDescrip(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_descrip)) {
				return;
			}
		} else if (m_descrip != null) {
			if (m_descrip.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Descrip", m_descrip, newValue, true);
		m_descrip = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getStart_part_idLongBased() {
		if (StartsAtInteractionParticipant != null) {
			return StartsAtInteractionParticipant.getPart_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getStart_part_id() {
		if (StartsAtInteractionParticipant != null) {
			return StartsAtInteractionParticipant.getPart_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getStart_part_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_start_part_id))
			return m_start_part_id;
		else
			return getStart_part_id();
	}

	public void setStart_part_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_start_part_id)) {
				return;
			}
		} else if (m_start_part_id != null) {
			if (m_start_part_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Start_part_id", m_start_part_id, newValue, true);
		m_start_part_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getDestination_part_idLongBased() {
		if (IsDestinedForInteractionParticipant != null) {
			return IsDestinedForInteractionParticipant.getPart_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getDestination_part_id() {
		if (IsDestinedForInteractionParticipant != null) {
			return IsDestinedForInteractionParticipant.getPart_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getDestination_part_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_destination_part_id))
			return m_destination_part_id;
		else
			return getDestination_part_id();
	}

	public void setDestination_part_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_destination_part_id)) {
				return;
			}
		} else if (m_destination_part_id != null) {
			if (m_destination_part_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Destination_part_id", m_destination_part_id, newValue, true);
		m_destination_part_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getRel_idLongBased() {
		if (MayBeFormalizedAgainstAssociation != null) {
			return MayBeFormalizedAgainstAssociation.getRel_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getRel_id() {
		if (MayBeFormalizedAgainstAssociation != null) {
			return MayBeFormalizedAgainstAssociation.getRel_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getRel_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_rel_id))
			return m_rel_id;
		else
			return getRel_id();
	}

	public void setRel_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_rel_id)) {
				return;
			}
		} else if (m_rel_id != null) {
			if (m_rel_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Rel_id", m_rel_id, newValue, true);
		m_rel_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Communication Link", //$NON-NLS-1$
						" Operation entered: Communication Link::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		CommunicationLink_c[] objs = CommunicationLink_c
				.CommunicationLinkInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link", //$NON-NLS-1$
				" Operation entered: Communication Link::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class CommunicationLink_c_test57565_c implements ClassQueryInterface_c {
			CommunicationLink_c_test57565_c(java.util.UUID p57566) {
				m_p57566 = p57566;
			}
			private java.util.UUID m_p57566;
			public boolean evaluate(Object candidate) {
				CommunicationLink_c selected = (CommunicationLink_c) candidate;
				boolean retval = false;
				retval = (selected.getLink_id().equals(m_p57566));
				return retval;
			}
		}

		CommunicationLink_c[] objs57564 = CommunicationLink_c
				.CommunicationLinkInstances(modelRoot,
						new CommunicationLink_c_test57565_c(getLink_id()));

		if (((objs57564.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Communication Link", //$NON-NLS-1$
								"Consistency: Object: Communication Link: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs57564.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Communication Link: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs57564.length), e);
			}
			retval = false;

		}

		if (((objs57564.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Communication Link", //$NON-NLS-1$
								"Consistency: Object: Communication Link: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs57564.length)
										+ " Link_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Communication Link: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs57564.length)
										+ " Link_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Communication Link is a referring class in association: rel.Numb = 1133
		// The participating class is: Interaction Participant
		class InteractionParticipant_c_test57570_c
				implements
					ClassQueryInterface_c {
			InteractionParticipant_c_test57570_c(java.util.UUID p57571) {
				m_p57571 = p57571;
			}
			private java.util.UUID m_p57571;
			public boolean evaluate(Object candidate) {
				InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
				boolean retval = false;
				retval = (selected.getPart_id().equals(m_p57571));
				return retval;
			}
		}

		InteractionParticipant_c[] objs57569 = InteractionParticipant_c
				.InteractionParticipantInstances(modelRoot,
						new InteractionParticipant_c_test57570_c(
								getStart_part_id()));

		// The participant is unconditional
		// The multiplicity of the participant is one
		if (((objs57569.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Communication Link", //$NON-NLS-1$
								"Consistency: Object: Communication Link: Association: 1133: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs57569.length)
										+ " Start_Part_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Communication Link: Association: 1133: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs57569.length)
										+ " Start_Part_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Communication Link is a referring class in association: rel.Numb = 1134
		// The participating class is: Interaction Participant
		class InteractionParticipant_c_test57573_c
				implements
					ClassQueryInterface_c {
			InteractionParticipant_c_test57573_c(java.util.UUID p57574) {
				m_p57574 = p57574;
			}
			private java.util.UUID m_p57574;
			public boolean evaluate(Object candidate) {
				InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
				boolean retval = false;
				retval = (selected.getPart_id().equals(m_p57574));
				return retval;
			}
		}

		InteractionParticipant_c[] objs57572 = InteractionParticipant_c
				.InteractionParticipantInstances(modelRoot,
						new InteractionParticipant_c_test57573_c(
								getDestination_part_id()));

		// The participant is unconditional
		// The multiplicity of the participant is one
		if (((objs57572.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Communication Link", //$NON-NLS-1$
								"Consistency: Object: Communication Link: Association: 1134: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs57572.length)
										+ " Destination_Part_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Communication Link: Association: 1134: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs57572.length)
										+ " Destination_Part_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Communication Link is a referring class in association: rel.Numb = 1128
		// The participating class is: Association
		class Association_c_test57576_c implements ClassQueryInterface_c {
			Association_c_test57576_c(java.util.UUID p57577) {
				m_p57577 = p57577;
			}
			private java.util.UUID m_p57577;
			public boolean evaluate(Object candidate) {
				Association_c selected = (Association_c) candidate;
				boolean retval = false;
				retval = (selected.getRel_id().equals(m_p57577));
				return retval;
			}
		}

		Association_c[] objs57575 = Association_c.AssociationInstances(
				modelRoot, new Association_c_test57576_c(getRel_id()));

		if (((objs57575.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Communication Link", //$NON-NLS-1$
								"Consistency: Object: Communication Link: Association: 1128: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs57575.length)
										+ " Rel_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Communication Link: Association: 1128: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs57575.length)
										+ " Rel_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		InteractionParticipant_c v_toParticipant = InteractionParticipant_c
				.getOneSQ_POnR1134(this);

		InteractionParticipant_c v_fromParticipant = InteractionParticipant_c
				.getOneSQ_POnR1133(this);

		if (((v_toParticipant != null))) {

			this.unrelateAcrossR1134From(v_toParticipant);

		}

		if (((v_fromParticipant != null))) {

			this.unrelateAcrossR1133From(v_fromParticipant);

		}

		Association_c v_assoc = Association_c.getOneR_RELOnR1128(this);

		if (((v_assoc != null))) {

			this.unrelateAcrossR1128From(v_assoc);

		}

		if (delete()) {
			Ooaofooa.getDefaultInstance().fireModelElementDeleted(
					new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE,
							this));
		}

	} // End dispose
	public int Get_style(final int p_At) {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Get_style");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_At == End_c.End)) {

			if ((getEndvisibility() == Visibility_c.Public)) {

				return Style_c.OpenArrow;

			}

		}

		else if ((p_At == End_c.Start)) {

			if ((getStartvisibility() == Visibility_c.Public)) {

				return Style_c.OpenArrow;

			}

		}

		return Style_c.Solid;

	} // End get_style
	public String Get_connector_text(final java.util.UUID p_Obj_id,
			final boolean p_Obj_typeisimported, final int p_At,
			final java.util.UUID p_Parent_id) {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Get_connector_text");
		final ModelRoot modelRoot = getModelRoot();
		Association_c v_assoc = Association_c.getOneR_RELOnR1128(this);

		if (((v_assoc != null))) {

			if ((p_At == End_c.Middle)) {

				return "R" + Gd_c.Int_to_string(v_assoc.getNumb());

			}

			else if ((p_At == End_c.Start)) {

				return Getassociationtext(End_c.Start);

			}

			else if ((p_At == End_c.End)) {

				return Getassociationtext(End_c.End);

			}

		}

		else {

			if ((p_At == End_c.Middle)) {

				if ((!getNumb().equals(""))) {

					return "R" + getNumb();

				}

			}

			else if ((p_At == End_c.Start)) {

				return getStarttext();

			}

			else if ((p_At == End_c.End)) {

				return getEndtext();

			}

		}

		return "";

	} // End get_connector_text
	public java.util.UUID Get_ooa_id() {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Get_ooa_id");
		final ModelRoot modelRoot = getModelRoot();
		return getLink_id();

	} // End get_ooa_id
	public boolean Participateswithformalparticipants(
			final java.util.UUID p_Associd) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Communication Link",
						" Operation entered: CommunicationLink::Participateswithformalparticipants");
		final ModelRoot modelRoot = getModelRoot();
		ModelClass_c v_startClass = ModelClass_c
				.getOneO_OBJOnR934(ClassInstanceParticipant_c
						.getOneSQ_CIPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1133(this)));

		ModelClass_c v_destClass = ModelClass_c
				.getOneO_OBJOnR934(ClassInstanceParticipant_c
						.getOneSQ_CIPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1134(this)));

		if (((v_startClass != null) && (v_destClass != null))) {

			Association_c v_assoc = (Association_c) modelRoot.getInstanceList(
					Association_c.class).getGlobal(null, p_Associd);

			if (((v_assoc != null))) {

				boolean v_foundStart = false;

				boolean v_foundEnd = false;

				SimpleAssociation_c v_simple = SimpleAssociation_c
						.getOneR_SIMPOnR206(v_assoc);

				LinkedAssociation_c v_associative = LinkedAssociation_c
						.getOneR_ASSOCOnR206(v_assoc);

				SubtypeSupertypeAssociation_c v_superSub = SubtypeSupertypeAssociation_c
						.getOneR_SUBSUPOnR206(v_assoc);

				DerivedAssociation_c v_derived = DerivedAssociation_c
						.getOneR_COMPOnR206(v_assoc);

				if (((v_simple != null))) {

					ModelClass_c v_part_obj = ModelClass_c
							.getOneO_OBJOnR201(ClassInAssociation_c
									.getManyR_OIRsOnR203(ReferredToClassInAssoc_c
											.getManyR_RTOsOnR204(ClassAsSimpleParticipant_c
													.getManyR_PARTsOnR207(v_simple))));

					ModelClass_c[] v_part_objs = ModelClass_c
							.getManyO_OBJsOnR201(ClassInAssociation_c
									.getManyR_OIRsOnR203(ReferredToClassInAssoc_c
											.getManyR_RTOsOnR204(ClassAsSimpleParticipant_c
													.getManyR_PARTsOnR207(v_simple))));

					if (((v_part_objs.length) > 1)) {

						ModelClass_c v_obj = null;
						for (int i55399 = 0; i55399 < v_part_objs.length; i55399++) {
							v_obj = v_part_objs[i55399];

							if ((v_obj == v_startClass)) {

								v_foundStart = true;

							}

							else if ((v_obj == v_destClass)) {

								v_foundEnd = true;

							}

						}

					}

					else {

						ModelClass_c v_form_obj = ModelClass_c
								.getOneO_OBJOnR201(ClassInAssociation_c
										.getOneR_OIROnR203(ReferringClassInAssoc_c
												.getOneR_RGOOnR205(ClassAsSimpleFormalizer_c
														.getOneR_FORMOnR208(v_simple))));

						if ((v_form_obj == v_startClass)
								|| (v_part_obj == v_startClass)) {

							v_foundStart = true;

						}

						if ((v_form_obj == v_destClass)
								|| (v_part_obj == v_destClass)) {

							v_foundEnd = true;

						}

					}

				}

				else if (((v_associative != null))) {

					ModelClass_c v_aone_obj = ModelClass_c
							.getOneO_OBJOnR201(ClassInAssociation_c.getOneR_OIROnR203(ReferredToClassInAssoc_c
									.getOneR_RTOOnR204(ClassAsAssociatedOneSide_c
											.getOneR_AONEOnR209(v_associative))));

					ModelClass_c v_aoth_obj = ModelClass_c
							.getOneO_OBJOnR201(ClassInAssociation_c.getOneR_OIROnR203(ReferredToClassInAssoc_c
									.getOneR_RTOOnR204(ClassAsAssociatedOtherSide_c
											.getOneR_AOTHOnR210(v_associative))));

					ModelClass_c v_assr_obj = ModelClass_c
							.getOneO_OBJOnR201(ClassInAssociation_c.getOneR_OIROnR203(ReferringClassInAssoc_c
									.getOneR_RGOOnR205(ClassAsLink_c
											.getOneR_ASSROnR211(v_associative))));

					if ((v_startClass == v_aone_obj)
							|| (v_startClass == v_aoth_obj)
							|| (v_startClass == v_assr_obj)) {

						v_foundStart = true;

					}

					if ((v_destClass == v_aone_obj)
							|| (v_destClass == v_aoth_obj)
							|| (v_destClass == v_assr_obj)) {

						v_foundEnd = true;

					}

				}

				else if (((v_superSub != null))) {

					ModelClass_c v_super_obj = ModelClass_c
							.getOneO_OBJOnR201(ClassInAssociation_c.getOneR_OIROnR203(ReferredToClassInAssoc_c
									.getOneR_RTOOnR204(ClassAsSupertype_c
											.getOneR_SUPEROnR212(v_superSub))));

					ModelClass_c[] v_sub_objs = ModelClass_c
							.getManyO_OBJsOnR201(ClassInAssociation_c
									.getManyR_OIRsOnR203(ReferringClassInAssoc_c
											.getManyR_RGOsOnR205(ClassAsSubtype_c
													.getManyR_SUBsOnR213(v_superSub))));

					if ((v_super_obj == v_startClass)) {

						v_foundStart = true;

					}

					if ((v_super_obj == v_destClass)) {

						v_foundEnd = true;

					}

					ModelClass_c v_sub_obj = null;
					for (int i55400 = 0; i55400 < v_sub_objs.length; i55400++) {
						v_sub_obj = v_sub_objs[i55400];

						if ((v_sub_obj == v_startClass)) {

							v_foundStart = true;

						}

						if ((v_sub_obj == v_destClass)) {

							v_foundEnd = true;

						}

					}

				}

				else if (((v_derived != null))) {

					ModelClass_c v_cone_obj = ModelClass_c
							.getOneO_OBJOnR201(ClassInAssociation_c
									.getOneR_OIROnR203(ClassAsDerivedOneSide_c
											.getOneR_CONEOnR214(v_derived)));

					ModelClass_c v_coth_obj = ModelClass_c
							.getOneO_OBJOnR201(ClassInAssociation_c
									.getOneR_OIROnR203(ClassAsDerivedOtherSide_c
											.getOneR_COTHOnR215(v_derived)));

					if ((v_startClass == v_cone_obj)
							|| (v_startClass == v_coth_obj)) {

						v_foundStart = true;

					}

					if ((v_destClass == v_cone_obj)
							|| (v_destClass == v_coth_obj)) {

						v_foundEnd = true;

					}

				}

				if ((v_startClass == v_destClass && !v_assoc.Is_reflexive())) {

					return false;

				}

				else if ((v_startClass != v_destClass && v_assoc.Is_reflexive())) {

					ModelClass_c v_assr_obj = ModelClass_c
							.getOneO_OBJOnR201(ClassInAssociation_c.getOneR_OIROnR203(ReferringClassInAssoc_c
									.getOneR_RGOOnR205(ClassAsLink_c
											.getOneR_ASSROnR211(v_associative))));

					if ((v_assr_obj == v_startClass || v_assr_obj == v_destClass)) {

						if ((v_foundStart && v_foundEnd)) {

							return true;

						}

					}

					else {

						return false;

					}

				}

				if ((v_foundStart && v_foundEnd)) {

					return true;

				}

			}

		}

		return false;

	} // End participatesWithFormalParticipants
	public void Formalize(final java.util.UUID p_Associd) {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Formalize");
		final ModelRoot modelRoot = getModelRoot();
		Association_c v_assoc = (Association_c) modelRoot.getInstanceList(
				Association_c.class).getGlobal(null, p_Associd);

		if (((v_assoc != null))) {

			if ((getIsformal())) {

				Unformalize();

			}

			this.relateAcrossR1128To(v_assoc);

		}

	} // End formalize
	public boolean Actionfilter(final String p_Name, final String p_Value) {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Actionfilter");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_Name.equals("can"))) {

			if ((p_Value.equals("formalize"))) {

				Communication_c v_comm = Communication_c
						.getOneCOMM_COMMOnR1126(InteractionParticipant_c
								.getOneSQ_POnR1133(this));

				boolean v_isInGenericPkg = false;

				Package_c v_pkg = Package_c
						.getOneEP_PKGOnR8000(PackageableElement_c
								.getOnePE_PEOnR8001(InteractionParticipant_c
										.getOneSQ_POnR1133(this)));

				if (((v_pkg != null))) {

					v_isInGenericPkg = true;

				}

				if ((v_isInGenericPkg)) {

					Association_c[] v_assocs = Association_c
							.getManyR_RELsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(Package_c
									.getManyEP_PKGsOnR1405(SystemModel_c
											.getManyS_SYSsOnR1405(v_pkg))));

					Association_c v_assoc = null;
					for (int i55401 = 0; i55401 < v_assocs.length; i55401++) {
						v_assoc = v_assocs[i55401];

						if ((Participateswithformalparticipants(v_assoc
								.getRel_id()))) {

							return true;

						}

					}

				}

				else {

					String v_domName = v_comm.Getpath(true);

					class Domain_test55569_c implements ClassQueryInterface_c {
						Domain_test55569_c(String p55570) {
							m_p55570 = p55570;
						}
						private String m_p55570;
						public boolean evaluate(Object candidate) {
							Domain_c selected = (Domain_c) candidate;
							return (selected.getName().equals(m_p55570));
						}
					}
					Domain_c v_domain = Domain_c.DomainInstance(modelRoot,
							new Domain_test55569_c(v_domName));

					if (((v_domain != null))) {

						Association_c[] v_assocs = Association_c
								.getManyR_RELsOnR201(ClassInAssociation_c.getManyR_OIRsOnR201(ModelClass_c
										.getManyO_OBJsOnR2(Subsystem_c
												.getManyS_SSsOnR1(v_domain))));

						Association_c v_assoc = null;
						for (int i55402 = 0; i55402 < v_assocs.length; i55402++) {
							v_assoc = v_assocs[i55402];

							if ((Participateswithformalparticipants(v_assoc
									.getRel_id()))) {

								return true;

							}

						}

					}

				}

			}

			else if ((p_Value.equals("unformalize"))) {

				return getIsformal();

			}

		}

		return false;

	} // End actionFilter
	public void Unformalize() {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Unformalize");
		final ModelRoot modelRoot = getModelRoot();
		Association_c v_assoc = Association_c.getOneR_RELOnR1128(this);

		if (((v_assoc != null))) {

			this.unrelateAcrossR1128From(v_assoc);

		}

	} // End unformalize
	public void Initialize() {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Initialize");
		final ModelRoot modelRoot = getModelRoot();
		setStartvisibility(Visibility_c.Private);

		setEndvisibility(Visibility_c.Private);

	} // End initialize
	public String Getassociationtext(final int p_At) {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Getassociationtext");
		final ModelRoot modelRoot = getModelRoot();
		Association_c v_assoc = Association_c.getOneR_RELOnR1128(this);

		ModelClass_c v_mclass = ModelClass_c
				.getOneO_OBJOnR934(ClassInstanceParticipant_c
						.getOneSQ_CIPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1133(this)));

		if (((v_mclass == null))) {

			v_mclass = ModelClass_c.getOneO_OBJOnR939(ClassParticipant_c
					.getOneSQ_CPOnR930(InteractionParticipant_c
							.getOneSQ_POnR1133(this)));

		}

		if ((p_At == End_c.End)) {

			v_mclass = ModelClass_c
					.getOneO_OBJOnR934(ClassInstanceParticipant_c
							.getOneSQ_CIPOnR930(InteractionParticipant_c
									.getOneSQ_POnR1134(this)));

			if (((v_mclass == null))) {

				v_mclass = ModelClass_c.getOneO_OBJOnR939(ClassParticipant_c
						.getOneSQ_CPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1134(this)));

			}

		}

		if ((((v_mclass != null)) && ((v_assoc != null)))) {

			class ClassAsSimpleParticipant_test55954_c
					implements
						ClassQueryInterface_c {
				ClassAsSimpleParticipant_test55954_c(java.util.UUID p55955) {
					m_p55955 = p55955;
				}
				private java.util.UUID m_p55955;
				public boolean evaluate(Object candidate) {
					ClassAsSimpleParticipant_c selected = (ClassAsSimpleParticipant_c) candidate;
					return (selected.getObj_id().equals(m_p55955));
				}
			}
			ClassAsSimpleParticipant_c[] v_parts = ClassAsSimpleParticipant_c
					.getManyR_PARTsOnR207(
							SimpleAssociation_c.getManyR_SIMPsOnR206(v_assoc),
							new ClassAsSimpleParticipant_test55954_c(v_mclass
									.getObj_id()));

			class ClassAsSimpleParticipant_test55956_c
					implements
						ClassQueryInterface_c {
				ClassAsSimpleParticipant_test55956_c(java.util.UUID p55957) {
					m_p55957 = p55957;
				}
				private java.util.UUID m_p55957;
				public boolean evaluate(Object candidate) {
					ClassAsSimpleParticipant_c selected = (ClassAsSimpleParticipant_c) candidate;
					return (selected.getObj_id().equals(m_p55957));
				}
			}
			ClassAsSimpleParticipant_c v_part = ClassAsSimpleParticipant_c
					.getOneR_PARTOnR207(
							SimpleAssociation_c.getManyR_SIMPsOnR206(v_assoc),
							new ClassAsSimpleParticipant_test55956_c(v_mclass
									.getObj_id()));

			class ClassAsSimpleFormalizer_test55958_c
					implements
						ClassQueryInterface_c {
				ClassAsSimpleFormalizer_test55958_c(java.util.UUID p55959) {
					m_p55959 = p55959;
				}
				private java.util.UUID m_p55959;
				public boolean evaluate(Object candidate) {
					ClassAsSimpleFormalizer_c selected = (ClassAsSimpleFormalizer_c) candidate;
					return (selected.getObj_id().equals(m_p55959));
				}
			}
			ClassAsSimpleFormalizer_c v_form = ClassAsSimpleFormalizer_c
					.getOneR_FORMOnR208(
							SimpleAssociation_c.getOneR_SIMPOnR206(v_assoc),
							new ClassAsSimpleFormalizer_test55958_c(v_mclass
									.getObj_id()));

			class ClassAsAssociatedOneSide_test55960_c
					implements
						ClassQueryInterface_c {
				ClassAsAssociatedOneSide_test55960_c(java.util.UUID p55961) {
					m_p55961 = p55961;
				}
				private java.util.UUID m_p55961;
				public boolean evaluate(Object candidate) {
					ClassAsAssociatedOneSide_c selected = (ClassAsAssociatedOneSide_c) candidate;
					return (selected.getObj_id().equals(m_p55961));
				}
			}
			ClassAsAssociatedOneSide_c v_aone = ClassAsAssociatedOneSide_c
					.getOneR_AONEOnR209(
							LinkedAssociation_c.getOneR_ASSOCOnR206(v_assoc),
							new ClassAsAssociatedOneSide_test55960_c(v_mclass
									.getObj_id()));

			class ClassAsAssociatedOtherSide_test55962_c
					implements
						ClassQueryInterface_c {
				ClassAsAssociatedOtherSide_test55962_c(java.util.UUID p55963) {
					m_p55963 = p55963;
				}
				private java.util.UUID m_p55963;
				public boolean evaluate(Object candidate) {
					ClassAsAssociatedOtherSide_c selected = (ClassAsAssociatedOtherSide_c) candidate;
					return (selected.getObj_id().equals(m_p55963));
				}
			}
			ClassAsAssociatedOtherSide_c v_aoth = ClassAsAssociatedOtherSide_c
					.getOneR_AOTHOnR210(
							LinkedAssociation_c.getOneR_ASSOCOnR206(v_assoc),
							new ClassAsAssociatedOtherSide_test55962_c(v_mclass
									.getObj_id()));

			class ClassAsSupertype_test55964_c implements ClassQueryInterface_c {
				ClassAsSupertype_test55964_c(java.util.UUID p55965) {
					m_p55965 = p55965;
				}
				private java.util.UUID m_p55965;
				public boolean evaluate(Object candidate) {
					ClassAsSupertype_c selected = (ClassAsSupertype_c) candidate;
					return (selected.getObj_id().equals(m_p55965));
				}
			}
			ClassAsSupertype_c v_sup = ClassAsSupertype_c
					.getOneR_SUPEROnR212(
							SubtypeSupertypeAssociation_c
									.getOneR_SUBSUPOnR206(v_assoc),
							new ClassAsSupertype_test55964_c(v_mclass
									.getObj_id()));

			class ClassAsSubtype_test55966_c implements ClassQueryInterface_c {
				ClassAsSubtype_test55966_c(java.util.UUID p55967) {
					m_p55967 = p55967;
				}
				private java.util.UUID m_p55967;
				public boolean evaluate(Object candidate) {
					ClassAsSubtype_c selected = (ClassAsSubtype_c) candidate;
					return (selected.getObj_id().equals(m_p55967));
				}
			}
			ClassAsSubtype_c v_sub = ClassAsSubtype_c.getOneR_SUBOnR213(
					SubtypeSupertypeAssociation_c
							.getManyR_SUBSUPsOnR206(v_assoc),
					new ClassAsSubtype_test55966_c(v_mclass.getObj_id()));

			class ClassAsDerivedOneSide_test55968_c
					implements
						ClassQueryInterface_c {
				ClassAsDerivedOneSide_test55968_c(java.util.UUID p55969) {
					m_p55969 = p55969;
				}
				private java.util.UUID m_p55969;
				public boolean evaluate(Object candidate) {
					ClassAsDerivedOneSide_c selected = (ClassAsDerivedOneSide_c) candidate;
					return (selected.getObj_id().equals(m_p55969));
				}
			}
			ClassAsDerivedOneSide_c v_cone = ClassAsDerivedOneSide_c
					.getOneR_CONEOnR214(
							DerivedAssociation_c.getOneR_COMPOnR206(v_assoc),
							new ClassAsDerivedOneSide_test55968_c(v_mclass
									.getObj_id()));

			class ClassAsDerivedOtherSide_test55970_c
					implements
						ClassQueryInterface_c {
				ClassAsDerivedOtherSide_test55970_c(java.util.UUID p55971) {
					m_p55971 = p55971;
				}
				private java.util.UUID m_p55971;
				public boolean evaluate(Object candidate) {
					ClassAsDerivedOtherSide_c selected = (ClassAsDerivedOtherSide_c) candidate;
					return (selected.getObj_id().equals(m_p55971));
				}
			}
			ClassAsDerivedOtherSide_c v_coth = ClassAsDerivedOtherSide_c
					.getOneR_COTHOnR215(
							DerivedAssociation_c.getOneR_COMPOnR206(v_assoc),
							new ClassAsDerivedOtherSide_test55970_c(v_mclass
									.getObj_id()));

			if (((v_parts.length) == 1) && ((v_form != null))) {

				if ((p_At == End_c.Start)) {

					return v_form.getTxt_phrs();

				}

				else {

					return v_part.getTxt_phrs();

				}

			}

			else if (((v_parts.length) > 0)) {

				if (((v_parts.length) == 2)) {

					int v_part_num = 0;

					for (int i55403 = 0; i55403 < v_parts.length; i55403++) {
						v_part = v_parts[i55403];

						v_part_num = v_part_num + 1;

						if ((p_At == End_c.Start && v_part_num == 1)) {

							return v_part.getTxt_phrs();

						}

						else if ((p_At == End_c.End && v_part_num == 2)) {

							return v_part.getTxt_phrs();

						}

					}

				}

				else {

					return v_part.getTxt_phrs();

				}

			}

			else if (((v_form != null))) {

				return v_form.getTxt_phrs();

			}

			else if (((v_aone != null) && (v_aoth != null))) {

				if ((p_At == End_c.Start)) {

					return v_aone.getTxt_phrs();

				}

				else {

					return v_aoth.getTxt_phrs();

				}

			}

			else if (((v_aone != null))) {

				return v_aone.getTxt_phrs();

			}

			else if (((v_aoth != null))) {

				return v_aoth.getTxt_phrs();

			}

			else if (((v_sup != null))) {

				return "supertype";

			}

			else if (((v_sub != null))) {

				return "subtype";

			}

			else if (((v_cone != null))) {

				return v_cone.getTxt_phrs();

			}

			else if (((v_coth != null))) {

				return v_coth.getTxt_phrs();

			}

		}

		return "";

	} // End getAssociationText
	public String Get_name() {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Get_name");
		final ModelRoot modelRoot = getModelRoot();
		if ((getIsformal())) {

			Association_c v_assoc = Association_c.getOneR_RELOnR1128(this);

			if (((v_assoc != null))) {

				return v_assoc.Get_name();

			}

		}

		else {

			if ((!getNumb().equals(""))) {

				return "R" + getNumb();

			}

		}

		return "";

	} // End get_name
	public void Togglevisibility(final int p_End) {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Togglevisibility");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_End == End_c.Start)) {

			if ((getStartvisibility() == Visibility_c.Private)) {

				setStartvisibility(Visibility_c.Public);

			}

			else {

				setStartvisibility(Visibility_c.Private);

			}

		}

		else if ((p_End == End_c.End)) {

			if ((getEndvisibility() == Visibility_c.Private)) {

				setEndvisibility(Visibility_c.Public);

			}

			else {

				setEndvisibility(Visibility_c.Private);

			}

		}

	} // End toggleVisibility
	public Object Getconfigurationinheritanceelementid() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Communication Link",
						" Operation entered: CommunicationLink::Getconfigurationinheritanceelementid");
		final ModelRoot modelRoot = getModelRoot();
		Association_c v_assoc = Association_c.getOneR_RELOnR1128(this);

		if (((v_assoc != null))) {

			return v_assoc.Converttoinstance();

		}

		return Converttoinstance();

	} // End getConfigurationInheritanceElementId
	public Object Converttoinstance() {
		Ooaofooa.log.println(ILogger.OPERATION, "Communication Link",
				" Operation entered: CommunicationLink::Converttoinstance");
		// just return this instance as an Object
		return this;
	} // End convertToInstance

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		if (adapter == IActionFilter.class) {
			return CommunicationLinkActionFilter.getSingleton();
		}
		return null;
	}
} // end Communication Link
