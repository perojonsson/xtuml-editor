      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Association_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_ASSOCIATION extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Association_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Association_c(ModelRoot modelRoot,
       java.util.UUID         p_m_rel_id,
       int          p_m_numb,
       String       p_m_descrip,
       java.util.UUID         p_m_ss_id)
  {
    super(modelRoot);
       m_numb = p_m_numb;
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);
        
    setUniqueId(m_rel_id);
    Object [] key = {m_rel_id};
    addInstanceToMap(key);
  }
  static public Association_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_rel_id,
       int          p_m_numb,
       String       p_m_descrip,
       java.util.UUID         p_m_ss_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Association_c.class);
      Association_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_rel_id};
          new_inst = (Association_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_numb = p_m_numb;
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Association_c(modelRoot,
p_m_rel_id,
p_m_numb,
p_m_descrip,
p_m_ss_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public Association_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_rel_id,
       int          p_m_numb,
       String       p_m_descrip,
       java.util.UUID         p_m_ss_id){
    InstanceList instances = modelRoot.getInstanceList(Association_c.class);
    Association_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_rel_id
            };
        source = (Association_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_numb = p_m_numb;
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    Association_c new_inst = new Association_c(modelRoot,
p_m_rel_id,
p_m_numb,
p_m_descrip,
p_m_ss_id
);
    return new_inst;
  }
  public Association_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_descrip = "";   
     m_ss_id = IdAssigner.NULL_UUID;   
     m_rel_id = idAssigner.createUUID();
    setUniqueId(m_rel_id);
    Object [] key = {m_rel_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_rel_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_rel_id !=  p_newKey ){
	
		m_rel_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Association_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Association_c)) {
           return false;
       }
       
       Association_c me = (Association_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getRel_id()) || IdAssigner.NULL_UUID.equals(((Association_c)elem).getRel_id())) && this != elem)) {
      	return false;
      }
      if (!getRel_id().equals(((Association_c)elem).getRel_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Association_c)) {
           return false;
       }
       
       Association_c me = (Association_c)elem;
      if (!getRel_idCachedValue().equals(((Association_c)elem).getRel_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private int          m_numb ;
  private String       m_descrip ;
  private java.util.UUID         m_ss_id ;
  private java.util.UUID         m_rel_id ;
      
// declare association references from this class
  
  
    
// referring navigation

PackageableElement_c IsSupertypePackageableElement ;
public void relateAcrossR8001To(PackageableElement_c target)
{
	relateAcrossR8001To(target, true);
}
public void relateAcrossR8001To(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypePackageableElement) return;  // already related

    if ( IsSupertypePackageableElement != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypePackageableElement != null) {
    
        IsSupertypePackageableElement.clearBackPointerR8001To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Association_c.relateAcrossR8001To(PackageableElement_c target)", 
			"Relate performed across R8001 from Association to Packageable Element without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypePackageableElement = target ;
        m_rel_id = target.getElement_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8001To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8001From(PackageableElement_c target)
{
	unrelateAcrossR8001From(target, true);
}
public void unrelateAcrossR8001From(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypePackageableElement == null) return;  // already unrelated
	
	if (target != IsSupertypePackageableElement) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8001", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8001To(this);
    }
    

      if(IsSupertypePackageableElement != null) {
      
        m_rel_id = IsSupertypePackageableElement.getElement_id();
        IsSupertypePackageableElement = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Association_c getOneR_RELOnR8001(PackageableElement_c [] targets)
{
    return getOneR_RELOnR8001(targets, null);
}

public static Association_c getOneR_RELOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneR_RELOnR8001(targets[i], test);
        }
    }

    return ret_val;
}

public static Association_c getOneR_RELOnR8001(PackageableElement_c target)
{
  return getOneR_RELOnR8001(target, null);
}

public static Association_c getOneR_RELOnR8001(PackageableElement_c target, boolean loadComponent)
{
    return getOneR_RELOnR8001(target.getModelRoot(), target, null, loadComponent);
}

public static Association_c getOneR_RELOnR8001(PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneR_RELOnR8001(target.getModelRoot(), target, test);
  }
  return null;
}

public static Association_c getOneR_RELOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
	return getOneR_RELOnR8001(modelRoot, target, test, true);
}

public static Association_c getOneR_RELOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneR_RELOnR8001(modelRoot,target,test);
}
private static Association_c find_getOneR_RELOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Association_c source = (Association_c)target.backPointer_IsSubtypeAssociationIsSubtype_R8001;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Association_c [] getManyR_RELsOnR8001(PackageableElement_c [] targets)
{
  return getManyR_RELsOnR8001(targets, null);
}
public static Association_c [] getManyR_RELsOnR8001(PackageableElement_c [] targets, boolean loadComponent)
{
  return getManyR_RELsOnR8001(targets, null, loadComponent);
}
public static Association_c [] getManyR_RELsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
	return getManyR_RELsOnR8001(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Association_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Association_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Association_c source = (Association_c)targets[i].backPointer_IsSubtypeAssociationIsSubtype_R8001;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Association_c[] ret_set = new Association_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Association_c[0];
  }
  }

public static Association_c [] getManyR_RELsOnR8001(PackageableElement_c target)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR8001(targetArray);
  } else {
    Association_c [] result = new Association_c [0] ;
  return result ;
}
}

public static Association_c [] getManyR_RELsOnR8001(PackageableElement_c target, boolean loadComponent)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR8001(targetArray, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
  return result ;
}
}



  
    
// referring navigation

Subsystem_c AbstractsAssociationsBetweenClassesInSubsystem ;
public void relateAcrossR4To(Subsystem_c target)
{
	relateAcrossR4To(target, true);
}
public void relateAcrossR4To(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == AbstractsAssociationsBetweenClassesInSubsystem) return;  // already related

    if ( AbstractsAssociationsBetweenClassesInSubsystem != target ) {
    
    Object oldKey = getInstanceKey();

    if (AbstractsAssociationsBetweenClassesInSubsystem != null) {
    
        AbstractsAssociationsBetweenClassesInSubsystem.clearBackPointerR4To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Association_c.relateAcrossR4To(Subsystem_c target)", 
			"Relate performed across R4 from Association to Subsystem without unrelate of prior instance.");  
		}
    }
                
    	AbstractsAssociationsBetweenClassesInSubsystem = target ;
        m_ss_id = target.getSs_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4From(Subsystem_c target)
{
	unrelateAcrossR4From(target, true);
}
public void unrelateAcrossR4From(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (AbstractsAssociationsBetweenClassesInSubsystem == null) return;  // already unrelated
	
	if (target != AbstractsAssociationsBetweenClassesInSubsystem) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4To(this);
    }
    

      if(AbstractsAssociationsBetweenClassesInSubsystem != null) {
      
        m_ss_id = AbstractsAssociationsBetweenClassesInSubsystem.getSs_id();
        AbstractsAssociationsBetweenClassesInSubsystem = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Association_c getOneR_RELOnR4(Subsystem_c [] targets)
{
    return getOneR_RELOnR4(targets, null);
}

public static Association_c getOneR_RELOnR4(Subsystem_c [] targets, ClassQueryInterface_c test)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneR_RELOnR4(targets[i], test);
        }
    }

    return ret_val;
}

public static Association_c getOneR_RELOnR4(Subsystem_c target)
{
  return getOneR_RELOnR4(target, null);
}

public static Association_c getOneR_RELOnR4(Subsystem_c target, boolean loadComponent)
{
    return getOneR_RELOnR4(target.getModelRoot(), target, null, loadComponent);
}

public static Association_c getOneR_RELOnR4(Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneR_RELOnR4(target.getModelRoot(), target, test);
  }
  return null;
}

public static Association_c getOneR_RELOnR4(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
	return getOneR_RELOnR4(modelRoot, target, test, true);
}

public static Association_c getOneR_RELOnR4(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneR_RELOnR4(modelRoot,target,test);
}
private static Association_c find_getOneR_RELOnR4(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsAssociationContains_R4) {
	    for ( int i = 0; i < target.backPointer_ContainsAssociationContains_R4.size(); ++i ) {
	      Association_c source = (Association_c)target.backPointer_ContainsAssociationContains_R4.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Association_c [] getManyR_RELsOnR4(Subsystem_c [] targets)
{
  return getManyR_RELsOnR4(targets, null);
}
public static Association_c [] getManyR_RELsOnR4(Subsystem_c [] targets, boolean loadComponent)
{
  return getManyR_RELsOnR4(targets, null, loadComponent);
}
public static Association_c [] getManyR_RELsOnR4(Subsystem_c [] targets, ClassQueryInterface_c test)
{
	return getManyR_RELsOnR4(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR4(Subsystem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Association_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Association_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsAssociationContains_R4) {
	    for (int j = 0; j < targets[i].backPointer_ContainsAssociationContains_R4.size(); ++j) {
	      Association_c source = (Association_c)targets[i].backPointer_ContainsAssociationContains_R4.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Association_c[] ret_set = new Association_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Association_c[0];
  }
  }

public static Association_c [] getManyR_RELsOnR4(Subsystem_c target)
{
  return getManyR_RELsOnR4(target, null);
}

public static Association_c [] getManyR_RELsOnR4(Subsystem_c target, boolean loadComponent)
{
  return getManyR_RELsOnR4(target, null, loadComponent);
}

public static Association_c [] getManyR_RELsOnR4(Subsystem_c target, ClassQueryInterface_c test)
{
	return getManyR_RELsOnR4(target, test, true);
}

public static Association_c [] getManyR_RELsOnR4(Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Association_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsAssociationContains_R4) {
    for (int i = 0; i < target.backPointer_ContainsAssociationContains_R4.size(); ++i) {
      Association_c source = (Association_c)target.backPointer_ContainsAssociationContains_R4.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Association_c[] ret_set = new Association_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Association_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<CommunicationLink_c> backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128 = new ArrayList<CommunicationLink_c>();

public void setCommunicationLinkOrderInChildListR1128(CommunicationLink_c target, int index) {
	unrelateAcrossR1128From(target);
	CommunicationLink_c[] elements = CommunicationLink_c.getManyCOMM_LNKsOnR1128(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1128From((CommunicationLink_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1128To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1128To((CommunicationLink_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1128To(CommunicationLink_c target)
{
  if (target != null) {
    target.relateAcrossR1128To(this, true) ;
  }
}

public void relateAcrossR1128To(CommunicationLink_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1128To(this, notifyChanges) ;
  }
}

public void setBackPointerR1128To(CommunicationLink_c target)
{
  	synchronized (backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128) {
		backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128.add(target);
	}
}

public void unrelateAcrossR1128From(CommunicationLink_c target)
{
  if (target != null) {
    target.unrelateAcrossR1128From(this, true) ;
  }
}

public void unrelateAcrossR1128From(CommunicationLink_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1128From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1128To(CommunicationLink_c target)
{
  synchronized (backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128) {
	    backPointer_RepresentsFormalInstanceCommunicationLinkRepresentsFormalInstance_R1128.remove(target);
	}
}

public static Association_c getOneR_RELOnR1128(CommunicationLink_c [] targets)
{
    return getOneR_RELOnR1128(targets, null);
}

public static Association_c getOneR_RELOnR1128(CommunicationLink_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR1128(targets, test, true);
}

public static Association_c getOneR_RELOnR1128(CommunicationLink_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR1128(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR1128(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR1128(CommunicationLink_c target)
{
	return getOneR_RELOnR1128(target, true);
}
public static Association_c getOneR_RELOnR1128(CommunicationLink_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.MayBeFormalizedAgainstAssociation != null){
		target.MayBeFormalizedAgainstAssociation.loadProxy();
	}
	}
    return target.MayBeFormalizedAgainstAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR1128(CommunicationLink_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR1128(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR1128(CommunicationLink_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].MayBeFormalizedAgainstAssociation == null)
	  targets[i].loadProxy();
    Association_c associate = targets[i].MayBeFormalizedAgainstAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR1128(CommunicationLink_c [] targets)
{
  return getManyR_RELsOnR1128(targets, null);
}

public static Association_c [] getManyR_RELsOnR1128(CommunicationLink_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    CommunicationLink_c [] targetArray = new CommunicationLink_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR1128(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR1128(CommunicationLink_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR1128(target, null, true);
}

public static Association_c [] getManyR_RELsOnR1128(CommunicationLink_c target)
{
    return getManyR_RELsOnR1128(target, null, true);
}

public static Association_c [] getManyR_RELsOnR1128(CommunicationLink_c target, boolean loadComponent)
{
    return getManyR_RELsOnR1128(target, null, loadComponent);
}


    
  
  
// referred to navigation

SubtypeSupertypeAssociation_c backPointer_IsSubtypeSubtypeSupertypeAssociationIsSubtype_R206;

public void setSubtypeSupertypeAssociationOrderInChildListR206(SubtypeSupertypeAssociation_c target, int index) {
	unrelateAcrossR206From(target);
	SubtypeSupertypeAssociation_c[] elements = SubtypeSupertypeAssociation_c.getManyR_SUBSUPsOnR206(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR206From((SubtypeSupertypeAssociation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR206To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR206To((SubtypeSupertypeAssociation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR206To(SubtypeSupertypeAssociation_c target)
{
  if (target != null) {
    target.relateAcrossR206To(this, true) ;
  }
}

public void relateAcrossR206To(SubtypeSupertypeAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR206To(this, notifyChanges) ;
  }
}

public void setBackPointerR206To(SubtypeSupertypeAssociation_c target)
{
    backPointer_IsSubtypeSubtypeSupertypeAssociationIsSubtype_R206 = target;
}

public void unrelateAcrossR206From(SubtypeSupertypeAssociation_c target)
{
  if (target != null) {
    target.unrelateAcrossR206From(this, true) ;
  }
}

public void unrelateAcrossR206From(SubtypeSupertypeAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR206From(this, notifyChanges) ;
  }
}

public void clearBackPointerR206To(SubtypeSupertypeAssociation_c target)
{
	if (target == backPointer_IsSubtypeSubtypeSupertypeAssociationIsSubtype_R206) {
		backPointer_IsSubtypeSubtypeSupertypeAssociationIsSubtype_R206 = null;
	}
}

public static Association_c getOneR_RELOnR206(SubtypeSupertypeAssociation_c [] targets)
{
    return getOneR_RELOnR206(targets, null);
}

public static Association_c getOneR_RELOnR206(SubtypeSupertypeAssociation_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR206(targets, test, true);
}

public static Association_c getOneR_RELOnR206(SubtypeSupertypeAssociation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR206(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR206(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR206(SubtypeSupertypeAssociation_c target)
{
	return getOneR_RELOnR206(target, true);
}
public static Association_c getOneR_RELOnR206(SubtypeSupertypeAssociation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR206(SubtypeSupertypeAssociation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR206(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR206(SubtypeSupertypeAssociation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeAssociation == null)
	  targets[i].loadProxy();
    Association_c associate = targets[i].IsSupertypeAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR206(SubtypeSupertypeAssociation_c [] targets)
{
  return getManyR_RELsOnR206(targets, null);
}

public static Association_c [] getManyR_RELsOnR206(SubtypeSupertypeAssociation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SubtypeSupertypeAssociation_c [] targetArray = new SubtypeSupertypeAssociation_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR206(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR206(SubtypeSupertypeAssociation_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR206(target, null, true);
}

public static Association_c [] getManyR_RELsOnR206(SubtypeSupertypeAssociation_c target)
{
    return getManyR_RELsOnR206(target, null, true);
}

public static Association_c [] getManyR_RELsOnR206(SubtypeSupertypeAssociation_c target, boolean loadComponent)
{
    return getManyR_RELsOnR206(target, null, loadComponent);
}

  
  
  
// referred to navigation

SimpleAssociation_c backPointer_IsSubtypeSimpleAssociationIsSubtype_R206;

public void setSimpleAssociationOrderInChildListR206(SimpleAssociation_c target, int index) {
	unrelateAcrossR206From(target);
	SimpleAssociation_c[] elements = SimpleAssociation_c.getManyR_SIMPsOnR206(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR206From((SimpleAssociation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR206To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR206To((SimpleAssociation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR206To(SimpleAssociation_c target)
{
  if (target != null) {
    target.relateAcrossR206To(this, true) ;
  }
}

public void relateAcrossR206To(SimpleAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR206To(this, notifyChanges) ;
  }
}

public void setBackPointerR206To(SimpleAssociation_c target)
{
    backPointer_IsSubtypeSimpleAssociationIsSubtype_R206 = target;
}

public void unrelateAcrossR206From(SimpleAssociation_c target)
{
  if (target != null) {
    target.unrelateAcrossR206From(this, true) ;
  }
}

public void unrelateAcrossR206From(SimpleAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR206From(this, notifyChanges) ;
  }
}

public void clearBackPointerR206To(SimpleAssociation_c target)
{
	if (target == backPointer_IsSubtypeSimpleAssociationIsSubtype_R206) {
		backPointer_IsSubtypeSimpleAssociationIsSubtype_R206 = null;
	}
}

public static Association_c getOneR_RELOnR206(SimpleAssociation_c [] targets)
{
    return getOneR_RELOnR206(targets, null);
}

public static Association_c getOneR_RELOnR206(SimpleAssociation_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR206(targets, test, true);
}

public static Association_c getOneR_RELOnR206(SimpleAssociation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR206(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR206(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR206(SimpleAssociation_c target)
{
	return getOneR_RELOnR206(target, true);
}
public static Association_c getOneR_RELOnR206(SimpleAssociation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR206(SimpleAssociation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR206(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR206(SimpleAssociation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeAssociation == null)
	  targets[i].loadProxy();
    Association_c associate = targets[i].IsSupertypeAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR206(SimpleAssociation_c [] targets)
{
  return getManyR_RELsOnR206(targets, null);
}

public static Association_c [] getManyR_RELsOnR206(SimpleAssociation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SimpleAssociation_c [] targetArray = new SimpleAssociation_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR206(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR206(SimpleAssociation_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR206(target, null, true);
}

public static Association_c [] getManyR_RELsOnR206(SimpleAssociation_c target)
{
    return getManyR_RELsOnR206(target, null, true);
}

public static Association_c [] getManyR_RELsOnR206(SimpleAssociation_c target, boolean loadComponent)
{
    return getManyR_RELsOnR206(target, null, loadComponent);
}

  
  
  
// referred to navigation

DerivedAssociation_c backPointer_IsSubtypeDerivedAssociationIsSubtype_R206;

public void setDerivedAssociationOrderInChildListR206(DerivedAssociation_c target, int index) {
	unrelateAcrossR206From(target);
	DerivedAssociation_c[] elements = DerivedAssociation_c.getManyR_COMPsOnR206(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR206From((DerivedAssociation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR206To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR206To((DerivedAssociation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR206To(DerivedAssociation_c target)
{
  if (target != null) {
    target.relateAcrossR206To(this, true) ;
  }
}

public void relateAcrossR206To(DerivedAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR206To(this, notifyChanges) ;
  }
}

public void setBackPointerR206To(DerivedAssociation_c target)
{
    backPointer_IsSubtypeDerivedAssociationIsSubtype_R206 = target;
}

public void unrelateAcrossR206From(DerivedAssociation_c target)
{
  if (target != null) {
    target.unrelateAcrossR206From(this, true) ;
  }
}

public void unrelateAcrossR206From(DerivedAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR206From(this, notifyChanges) ;
  }
}

public void clearBackPointerR206To(DerivedAssociation_c target)
{
	if (target == backPointer_IsSubtypeDerivedAssociationIsSubtype_R206) {
		backPointer_IsSubtypeDerivedAssociationIsSubtype_R206 = null;
	}
}

public static Association_c getOneR_RELOnR206(DerivedAssociation_c [] targets)
{
    return getOneR_RELOnR206(targets, null);
}

public static Association_c getOneR_RELOnR206(DerivedAssociation_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR206(targets, test, true);
}

public static Association_c getOneR_RELOnR206(DerivedAssociation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR206(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR206(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR206(DerivedAssociation_c target)
{
	return getOneR_RELOnR206(target, true);
}
public static Association_c getOneR_RELOnR206(DerivedAssociation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR206(DerivedAssociation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR206(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR206(DerivedAssociation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeAssociation == null)
	  targets[i].loadProxy();
    Association_c associate = targets[i].IsSupertypeAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR206(DerivedAssociation_c [] targets)
{
  return getManyR_RELsOnR206(targets, null);
}

public static Association_c [] getManyR_RELsOnR206(DerivedAssociation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    DerivedAssociation_c [] targetArray = new DerivedAssociation_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR206(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR206(DerivedAssociation_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR206(target, null, true);
}

public static Association_c [] getManyR_RELsOnR206(DerivedAssociation_c target)
{
    return getManyR_RELsOnR206(target, null, true);
}

public static Association_c [] getManyR_RELsOnR206(DerivedAssociation_c target, boolean loadComponent)
{
    return getManyR_RELsOnR206(target, null, loadComponent);
}

  
  
  
// referred to navigation

LinkedAssociation_c backPointer_IsSubtypeLinkedAssociationIsSubtype_R206;

public void setLinkedAssociationOrderInChildListR206(LinkedAssociation_c target, int index) {
	unrelateAcrossR206From(target);
	LinkedAssociation_c[] elements = LinkedAssociation_c.getManyR_ASSOCsOnR206(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR206From((LinkedAssociation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR206To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR206To((LinkedAssociation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR206To(LinkedAssociation_c target)
{
  if (target != null) {
    target.relateAcrossR206To(this, true) ;
  }
}

public void relateAcrossR206To(LinkedAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR206To(this, notifyChanges) ;
  }
}

public void setBackPointerR206To(LinkedAssociation_c target)
{
    backPointer_IsSubtypeLinkedAssociationIsSubtype_R206 = target;
}

public void unrelateAcrossR206From(LinkedAssociation_c target)
{
  if (target != null) {
    target.unrelateAcrossR206From(this, true) ;
  }
}

public void unrelateAcrossR206From(LinkedAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR206From(this, notifyChanges) ;
  }
}

public void clearBackPointerR206To(LinkedAssociation_c target)
{
	if (target == backPointer_IsSubtypeLinkedAssociationIsSubtype_R206) {
		backPointer_IsSubtypeLinkedAssociationIsSubtype_R206 = null;
	}
}

public static Association_c getOneR_RELOnR206(LinkedAssociation_c [] targets)
{
    return getOneR_RELOnR206(targets, null);
}

public static Association_c getOneR_RELOnR206(LinkedAssociation_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR206(targets, test, true);
}

public static Association_c getOneR_RELOnR206(LinkedAssociation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR206(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR206(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR206(LinkedAssociation_c target)
{
	return getOneR_RELOnR206(target, true);
}
public static Association_c getOneR_RELOnR206(LinkedAssociation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR206(LinkedAssociation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR206(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR206(LinkedAssociation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeAssociation == null)
	  targets[i].loadProxy();
    Association_c associate = targets[i].IsSupertypeAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR206(LinkedAssociation_c [] targets)
{
  return getManyR_RELsOnR206(targets, null);
}

public static Association_c [] getManyR_RELsOnR206(LinkedAssociation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    LinkedAssociation_c [] targetArray = new LinkedAssociation_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR206(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR206(LinkedAssociation_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR206(target, null, true);
}

public static Association_c [] getManyR_RELsOnR206(LinkedAssociation_c target)
{
    return getManyR_RELsOnR206(target, null, true);
}

public static Association_c [] getManyR_RELsOnR206(LinkedAssociation_c target, boolean loadComponent)
{
    return getManyR_RELsOnR206(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ClassInAssociation_c> backPointer_AbstractsAssociationBetweenInstancesOfClassInAssociationAbstractsAssociationBetweenInstancesOf_R201 = new ArrayList<ClassInAssociation_c>();

public void setClassInAssociationOrderInChildListR201(ClassInAssociation_c target, int index) {
	unrelateAcrossR201From(target);
	ClassInAssociation_c[] elements = ClassInAssociation_c.getManyR_OIRsOnR201(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR201From((ClassInAssociation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR201To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR201To((ClassInAssociation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR201To(ClassInAssociation_c target)
{
  if (target != null) {
    target.relateAcrossR201To(this, true) ;
  }
}

public void relateAcrossR201To(ClassInAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR201To(this, notifyChanges) ;
  }
}

public void setBackPointerR201To(ClassInAssociation_c target)
{
  	synchronized (backPointer_AbstractsAssociationBetweenInstancesOfClassInAssociationAbstractsAssociationBetweenInstancesOf_R201) {
		backPointer_AbstractsAssociationBetweenInstancesOfClassInAssociationAbstractsAssociationBetweenInstancesOf_R201.add(target);
	}
}

public void unrelateAcrossR201From(ClassInAssociation_c target)
{
  if (target != null) {
    target.unrelateAcrossR201From(this, true) ;
  }
}

public void unrelateAcrossR201From(ClassInAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR201From(this, notifyChanges) ;
  }
}

public void clearBackPointerR201To(ClassInAssociation_c target)
{
  synchronized (backPointer_AbstractsAssociationBetweenInstancesOfClassInAssociationAbstractsAssociationBetweenInstancesOf_R201) {
	    backPointer_AbstractsAssociationBetweenInstancesOfClassInAssociationAbstractsAssociationBetweenInstancesOf_R201.remove(target);
	}
}

public static Association_c getOneR_RELOnR201(ClassInAssociation_c [] targets)
{
    return getOneR_RELOnR201(targets, null);
}

public static Association_c getOneR_RELOnR201(ClassInAssociation_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR201(targets, test, true);
}

public static Association_c getOneR_RELOnR201(ClassInAssociation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR201(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR201(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR201(ClassInAssociation_c target)
{
	return getOneR_RELOnR201(target, true);
}
public static Association_c getOneR_RELOnR201(ClassInAssociation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.HasInstanceAssociationsAbstractedAssociation != null){
		target.HasInstanceAssociationsAbstractedAssociation.loadProxy();
	}
	}
    return target.HasInstanceAssociationsAbstractedAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR201(ClassInAssociation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR201(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR201(ClassInAssociation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].HasInstanceAssociationsAbstractedAssociation == null)
	  targets[i].loadProxy();
    Association_c associate = targets[i].HasInstanceAssociationsAbstractedAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR201(ClassInAssociation_c [] targets)
{
  return getManyR_RELsOnR201(targets, null);
}

public static Association_c [] getManyR_RELsOnR201(ClassInAssociation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ClassInAssociation_c [] targetArray = new ClassInAssociation_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR201(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR201(ClassInAssociation_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR201(target, null, true);
}

public static Association_c [] getManyR_RELsOnR201(ClassInAssociation_c target)
{
    return getManyR_RELsOnR201(target, null, true);
}

public static Association_c [] getManyR_RELsOnR201(ClassInAssociation_c target, boolean loadComponent)
{
    return getManyR_RELsOnR201(target, null, loadComponent);
}

public static Association_c getOneR_RELOnR201(ModelClass_c target)
{
  return Association_c.getOneR_RELOnR201(ClassInAssociation_c.getOneR_OIROnR201(target)) ;
}

public static Association_c getOneR_RELOnR201(ModelClass_c target,
    ClassQueryInterface_c test)
{
  return Association_c.getOneR_RELOnR201(ClassInAssociation_c.getManyR_OIRsOnR201(target), test) ;
}

public static Association_c [] getManyR_RELsOnR201(ModelClass_c target,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR201(target, test, true);
}
public static Association_c [] getManyR_RELsOnR201(ModelClass_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  ClassInAssociation_c [] associators = ClassInAssociation_c.getManyR_OIRsOnR201(target, loadComponent) ;
    return Association_c.getManyR_RELsOnR201(associators, test, loadComponent) ;
}
public static Association_c [] getManyR_RELsOnR201(ModelClass_c target)
{
    return getManyR_RELsOnR201(target, null, true);
}
public static Association_c [] getManyR_RELsOnR201(ModelClass_c target, boolean loadComponent)
{
    return getManyR_RELsOnR201(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ChainLink_c> backPointer_ChainLink_R681 = new ArrayList<ChainLink_c>();

public void setChainLinkOrderInChildListR681(ChainLink_c target, int index) {
	unrelateAcrossR681From(target);
	ChainLink_c[] elements = ChainLink_c.getManyACT_LNKsOnR681(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR681From((ChainLink_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR681To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR681To((ChainLink_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR681To(ChainLink_c target)
{
  if (target != null) {
    target.relateAcrossR681To(this, true) ;
  }
}

public void relateAcrossR681To(ChainLink_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR681To(this, notifyChanges) ;
  }
}

public void setBackPointerR681To(ChainLink_c target)
{
  	synchronized (backPointer_ChainLink_R681) {
		backPointer_ChainLink_R681.add(target);
	}
}

public void unrelateAcrossR681From(ChainLink_c target)
{
  if (target != null) {
    target.unrelateAcrossR681From(this, true) ;
  }
}

public void unrelateAcrossR681From(ChainLink_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR681From(this, notifyChanges) ;
  }
}

public void clearBackPointerR681To(ChainLink_c target)
{
  synchronized (backPointer_ChainLink_R681) {
	    backPointer_ChainLink_R681.remove(target);
	}
}

public static Association_c getOneR_RELOnR681(ChainLink_c [] targets)
{
    return getOneR_RELOnR681(targets, null);
}

public static Association_c getOneR_RELOnR681(ChainLink_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR681(targets, test, true);
}

public static Association_c getOneR_RELOnR681(ChainLink_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR681(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR681(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR681(ChainLink_c target)
{
	return getOneR_RELOnR681(target, true);
}
public static Association_c getOneR_RELOnR681(ChainLink_c target, boolean loadComponent)
{
  if (target != null) {
    return target.SpecifiesTraversalOfAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR681(ChainLink_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR681(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR681(ChainLink_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
    Association_c associate = targets[i].SpecifiesTraversalOfAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR681(ChainLink_c [] targets)
{
  return getManyR_RELsOnR681(targets, null);
}

public static Association_c [] getManyR_RELsOnR681(ChainLink_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ChainLink_c [] targetArray = new ChainLink_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR681(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR681(ChainLink_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR681(target, null, true);
}

public static Association_c [] getManyR_RELsOnR681(ChainLink_c target)
{
    return getManyR_RELsOnR681(target, null, true);
}

public static Association_c [] getManyR_RELsOnR681(ChainLink_c target, boolean loadComponent)
{
    return getManyR_RELsOnR681(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Relate_c> backPointer_Relate_R653 = new ArrayList<Relate_c>();

public void setRelateOrderInChildListR653(Relate_c target, int index) {
	unrelateAcrossR653From(target);
	Relate_c[] elements = Relate_c.getManyACT_RELsOnR653(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR653From((Relate_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR653To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR653To((Relate_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR653To(Relate_c target)
{
  if (target != null) {
    target.relateAcrossR653To(this, true) ;
  }
}

public void relateAcrossR653To(Relate_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR653To(this, notifyChanges) ;
  }
}

public void setBackPointerR653To(Relate_c target)
{
  	synchronized (backPointer_Relate_R653) {
		backPointer_Relate_R653.add(target);
	}
}

public void unrelateAcrossR653From(Relate_c target)
{
  if (target != null) {
    target.unrelateAcrossR653From(this, true) ;
  }
}

public void unrelateAcrossR653From(Relate_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR653From(this, notifyChanges) ;
  }
}

public void clearBackPointerR653To(Relate_c target)
{
  synchronized (backPointer_Relate_R653) {
	    backPointer_Relate_R653.remove(target);
	}
}

public static Association_c getOneR_RELOnR653(Relate_c [] targets)
{
    return getOneR_RELOnR653(targets, null);
}

public static Association_c getOneR_RELOnR653(Relate_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR653(targets, test, true);
}

public static Association_c getOneR_RELOnR653(Relate_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR653(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR653(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR653(Relate_c target)
{
	return getOneR_RELOnR653(target, true);
}
public static Association_c getOneR_RELOnR653(Relate_c target, boolean loadComponent)
{
  if (target != null) {
    return target.CreatesAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR653(Relate_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR653(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR653(Relate_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
    Association_c associate = targets[i].CreatesAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR653(Relate_c [] targets)
{
  return getManyR_RELsOnR653(targets, null);
}

public static Association_c [] getManyR_RELsOnR653(Relate_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Relate_c [] targetArray = new Relate_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR653(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR653(Relate_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR653(target, null, true);
}

public static Association_c [] getManyR_RELsOnR653(Relate_c target)
{
    return getManyR_RELsOnR653(target, null, true);
}

public static Association_c [] getManyR_RELsOnR653(Relate_c target, boolean loadComponent)
{
    return getManyR_RELsOnR653(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<RelateUsing_c> backPointer_RelateUsing_R654 = new ArrayList<RelateUsing_c>();

public void setRelateUsingOrderInChildListR654(RelateUsing_c target, int index) {
	unrelateAcrossR654From(target);
	RelateUsing_c[] elements = RelateUsing_c.getManyACT_RUsOnR654(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR654From((RelateUsing_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR654To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR654To((RelateUsing_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR654To(RelateUsing_c target)
{
  if (target != null) {
    target.relateAcrossR654To(this, true) ;
  }
}

public void relateAcrossR654To(RelateUsing_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR654To(this, notifyChanges) ;
  }
}

public void setBackPointerR654To(RelateUsing_c target)
{
  	synchronized (backPointer_RelateUsing_R654) {
		backPointer_RelateUsing_R654.add(target);
	}
}

public void unrelateAcrossR654From(RelateUsing_c target)
{
  if (target != null) {
    target.unrelateAcrossR654From(this, true) ;
  }
}

public void unrelateAcrossR654From(RelateUsing_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR654From(this, notifyChanges) ;
  }
}

public void clearBackPointerR654To(RelateUsing_c target)
{
  synchronized (backPointer_RelateUsing_R654) {
	    backPointer_RelateUsing_R654.remove(target);
	}
}

public static Association_c getOneR_RELOnR654(RelateUsing_c [] targets)
{
    return getOneR_RELOnR654(targets, null);
}

public static Association_c getOneR_RELOnR654(RelateUsing_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR654(targets, test, true);
}

public static Association_c getOneR_RELOnR654(RelateUsing_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR654(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR654(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR654(RelateUsing_c target)
{
	return getOneR_RELOnR654(target, true);
}
public static Association_c getOneR_RELOnR654(RelateUsing_c target, boolean loadComponent)
{
  if (target != null) {
    return target.CreatesAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR654(RelateUsing_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR654(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR654(RelateUsing_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
    Association_c associate = targets[i].CreatesAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR654(RelateUsing_c [] targets)
{
  return getManyR_RELsOnR654(targets, null);
}

public static Association_c [] getManyR_RELsOnR654(RelateUsing_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    RelateUsing_c [] targetArray = new RelateUsing_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR654(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR654(RelateUsing_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR654(target, null, true);
}

public static Association_c [] getManyR_RELsOnR654(RelateUsing_c target)
{
    return getManyR_RELsOnR654(target, null, true);
}

public static Association_c [] getManyR_RELsOnR654(RelateUsing_c target, boolean loadComponent)
{
    return getManyR_RELsOnR654(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Unrelate_c> backPointer_Unrelate_R655 = new ArrayList<Unrelate_c>();

public void setUnrelateOrderInChildListR655(Unrelate_c target, int index) {
	unrelateAcrossR655From(target);
	Unrelate_c[] elements = Unrelate_c.getManyACT_UNRsOnR655(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR655From((Unrelate_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR655To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR655To((Unrelate_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR655To(Unrelate_c target)
{
  if (target != null) {
    target.relateAcrossR655To(this, true) ;
  }
}

public void relateAcrossR655To(Unrelate_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR655To(this, notifyChanges) ;
  }
}

public void setBackPointerR655To(Unrelate_c target)
{
  	synchronized (backPointer_Unrelate_R655) {
		backPointer_Unrelate_R655.add(target);
	}
}

public void unrelateAcrossR655From(Unrelate_c target)
{
  if (target != null) {
    target.unrelateAcrossR655From(this, true) ;
  }
}

public void unrelateAcrossR655From(Unrelate_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR655From(this, notifyChanges) ;
  }
}

public void clearBackPointerR655To(Unrelate_c target)
{
  synchronized (backPointer_Unrelate_R655) {
	    backPointer_Unrelate_R655.remove(target);
	}
}

public static Association_c getOneR_RELOnR655(Unrelate_c [] targets)
{
    return getOneR_RELOnR655(targets, null);
}

public static Association_c getOneR_RELOnR655(Unrelate_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR655(targets, test, true);
}

public static Association_c getOneR_RELOnR655(Unrelate_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR655(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR655(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR655(Unrelate_c target)
{
	return getOneR_RELOnR655(target, true);
}
public static Association_c getOneR_RELOnR655(Unrelate_c target, boolean loadComponent)
{
  if (target != null) {
    return target.DestroysAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR655(Unrelate_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR655(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR655(Unrelate_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
    Association_c associate = targets[i].DestroysAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR655(Unrelate_c [] targets)
{
  return getManyR_RELsOnR655(targets, null);
}

public static Association_c [] getManyR_RELsOnR655(Unrelate_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Unrelate_c [] targetArray = new Unrelate_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR655(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR655(Unrelate_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR655(target, null, true);
}

public static Association_c [] getManyR_RELsOnR655(Unrelate_c target)
{
    return getManyR_RELsOnR655(target, null, true);
}

public static Association_c [] getManyR_RELsOnR655(Unrelate_c target, boolean loadComponent)
{
    return getManyR_RELsOnR655(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<UnrelateUsing_c> backPointer_UnrelateUsing_R656 = new ArrayList<UnrelateUsing_c>();

public void setUnrelateUsingOrderInChildListR656(UnrelateUsing_c target, int index) {
	unrelateAcrossR656From(target);
	UnrelateUsing_c[] elements = UnrelateUsing_c.getManyACT_URUsOnR656(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR656From((UnrelateUsing_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR656To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR656To((UnrelateUsing_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR656To(UnrelateUsing_c target)
{
  if (target != null) {
    target.relateAcrossR656To(this, true) ;
  }
}

public void relateAcrossR656To(UnrelateUsing_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR656To(this, notifyChanges) ;
  }
}

public void setBackPointerR656To(UnrelateUsing_c target)
{
  	synchronized (backPointer_UnrelateUsing_R656) {
		backPointer_UnrelateUsing_R656.add(target);
	}
}

public void unrelateAcrossR656From(UnrelateUsing_c target)
{
  if (target != null) {
    target.unrelateAcrossR656From(this, true) ;
  }
}

public void unrelateAcrossR656From(UnrelateUsing_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR656From(this, notifyChanges) ;
  }
}

public void clearBackPointerR656To(UnrelateUsing_c target)
{
  synchronized (backPointer_UnrelateUsing_R656) {
	    backPointer_UnrelateUsing_R656.remove(target);
	}
}

public static Association_c getOneR_RELOnR656(UnrelateUsing_c [] targets)
{
    return getOneR_RELOnR656(targets, null);
}

public static Association_c getOneR_RELOnR656(UnrelateUsing_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR656(targets, test, true);
}

public static Association_c getOneR_RELOnR656(UnrelateUsing_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR656(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR656(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR656(UnrelateUsing_c target)
{
	return getOneR_RELOnR656(target, true);
}
public static Association_c getOneR_RELOnR656(UnrelateUsing_c target, boolean loadComponent)
{
  if (target != null) {
    return target.DestroysAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR656(UnrelateUsing_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR656(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR656(UnrelateUsing_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
    Association_c associate = targets[i].DestroysAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR656(UnrelateUsing_c [] targets)
{
  return getManyR_RELsOnR656(targets, null);
}

public static Association_c [] getManyR_RELsOnR656(UnrelateUsing_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    UnrelateUsing_c [] targetArray = new UnrelateUsing_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR656(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR656(UnrelateUsing_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR656(target, null, true);
}

public static Association_c [] getManyR_RELsOnR656(UnrelateUsing_c target)
{
    return getManyR_RELsOnR656(target, null, true);
}

public static Association_c [] getManyR_RELsOnR656(UnrelateUsing_c target, boolean loadComponent)
{
    return getManyR_RELsOnR656(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Link_c> backPointer_HasInstancesLinkHasInstances_R2904 = new ArrayList<Link_c>();

public void setLinkOrderInChildListR2904(Link_c target, int index) {
	unrelateAcrossR2904From(target);
	Link_c[] elements = Link_c.getManyI_LNKsOnR2904(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2904From((Link_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2904To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2904To((Link_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2904To(Link_c target)
{
  if (target != null) {
    target.relateAcrossR2904To(this, true) ;
  }
}

public void relateAcrossR2904To(Link_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2904To(this, notifyChanges) ;
  }
}

public void setBackPointerR2904To(Link_c target)
{
  	synchronized (backPointer_HasInstancesLinkHasInstances_R2904) {
		backPointer_HasInstancesLinkHasInstances_R2904.add(target);
	}
}

public void unrelateAcrossR2904From(Link_c target)
{
  if (target != null) {
    target.unrelateAcrossR2904From(this, true) ;
  }
}

public void unrelateAcrossR2904From(Link_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2904From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2904To(Link_c target)
{
  synchronized (backPointer_HasInstancesLinkHasInstances_R2904) {
	    backPointer_HasInstancesLinkHasInstances_R2904.remove(target);
	}
}

public static Association_c getOneR_RELOnR2904(Link_c [] targets)
{
    return getOneR_RELOnR2904(targets, null);
}

public static Association_c getOneR_RELOnR2904(Link_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR2904(targets, test, true);
}

public static Association_c getOneR_RELOnR2904(Link_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR2904(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR2904(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR2904(Link_c target)
{
	return getOneR_RELOnR2904(target, true);
}
public static Association_c getOneR_RELOnR2904(Link_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsInstanceOfAssociation ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR2904(Link_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR2904(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR2904(Link_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
    Association_c associate = targets[i].IsInstanceOfAssociation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR2904(Link_c [] targets)
{
  return getManyR_RELsOnR2904(targets, null);
}

public static Association_c [] getManyR_RELsOnR2904(Link_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Link_c [] targetArray = new Link_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR2904(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR2904(Link_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR2904(target, null, true);
}

public static Association_c [] getManyR_RELsOnR2904(Link_c target)
{
    return getManyR_RELsOnR2904(target, null, true);
}

public static Association_c [] getManyR_RELsOnR2904(Link_c target, boolean loadComponent)
{
    return getManyR_RELsOnR2904(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<LinkParticipation_c> backPointer_LinkParticipation_R2959 = new ArrayList<LinkParticipation_c>();

public void setLinkParticipationOrderInChildListR2959(LinkParticipation_c target, int index) {
	unrelateAcrossR2959From(target);
	LinkParticipation_c[] elements = LinkParticipation_c.getManyI_LIPsOnR2959(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2959From((LinkParticipation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2959To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2959To((LinkParticipation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2959To(LinkParticipation_c target)
{
  if (target != null) {
    target.relateAcrossR2959To(this, true) ;
  }
}

public void relateAcrossR2959To(LinkParticipation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2959To(this, notifyChanges) ;
  }
}

public void setBackPointerR2959To(LinkParticipation_c target)
{
  	synchronized (backPointer_LinkParticipation_R2959) {
		backPointer_LinkParticipation_R2959.add(target);
	}
}

public void unrelateAcrossR2959From(LinkParticipation_c target)
{
  if (target != null) {
    target.unrelateAcrossR2959From(this, true) ;
  }
}

public void unrelateAcrossR2959From(LinkParticipation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2959From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2959To(LinkParticipation_c target)
{
  synchronized (backPointer_LinkParticipation_R2959) {
	    backPointer_LinkParticipation_R2959.remove(target);
	}
}

public static Association_c getOneR_RELOnR2959(LinkParticipation_c [] targets)
{
    return getOneR_RELOnR2959(targets, null);
}

public static Association_c getOneR_RELOnR2959(LinkParticipation_c [] targets, ClassQueryInterface_c test)
{
    return getOneR_RELOnR2959(targets, test, true);
}

public static Association_c getOneR_RELOnR2959(LinkParticipation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Association_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Association_c candidate_val = getOneR_RELOnR2959(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneR_RELOnR2959(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Association_c getOneR_RELOnR2959(LinkParticipation_c target)
{
	return getOneR_RELOnR2959(target, true);
}
public static Association_c getOneR_RELOnR2959(LinkParticipation_c target, boolean loadComponent)
{
  if (target != null) {
    return target.Association ;
  } else {
    return null;
  }
}

public static Association_c [] getManyR_RELsOnR2959(LinkParticipation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyR_RELsOnR2959(targets, test, true);
}

public static Association_c [] getManyR_RELsOnR2959(LinkParticipation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Association_c[0];
  
  
  LinkedHashSet<Association_c> elementsSet = new LinkedHashSet<Association_c>();
  for (int i = 0; i < targets.length; i++) {
    Association_c associate = targets[i].Association;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Association_c[] result = new Association_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Association_c [] getManyR_RELsOnR2959(LinkParticipation_c [] targets)
{
  return getManyR_RELsOnR2959(targets, null);
}

public static Association_c [] getManyR_RELsOnR2959(LinkParticipation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    LinkParticipation_c [] targetArray = new LinkParticipation_c[1];
    targetArray[0] = target;
    return getManyR_RELsOnR2959(targetArray, test, loadComponent);
  } else {
    Association_c [] result = new Association_c [0] ;
    return result ;
  }
  
}

public static Association_c [] getManyR_RELsOnR2959(LinkParticipation_c target,
    ClassQueryInterface_c test)
{
    return getManyR_RELsOnR2959(target, null, true);
}

public static Association_c [] getManyR_RELsOnR2959(LinkParticipation_c target)
{
    return getManyR_RELsOnR2959(target, null, true);
}

public static Association_c [] getManyR_RELsOnR2959(LinkParticipation_c target, boolean loadComponent)
{
    return getManyR_RELsOnR2959(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R8001
      PackageableElement_c relInst58430 = (PackageableElement_c) baseRoot.getInstanceList(PackageableElement_c.class).get(new Object[] {m_rel_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58430 == null) {
      			relInst58430 = (PackageableElement_c) Ooaofooa.getDefaultInstance().getInstanceList(PackageableElement_c.class).get(new Object[] {m_rel_id});
      		}
			if (relInst58430 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58430 = (PackageableElement_c) roots[i].getInstanceList(PackageableElement_c.class).get(new Object[] {m_rel_id});
					if (relInst58430 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58430 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58430) && !isProxy())) {
	      relInst58430.relateAcrossR8001To(this, notifyChanges);
	  }
	  }
	          

	if (AbstractsAssociationsBetweenClassesInSubsystem == null) {          
      // R4
      Subsystem_c relInst58431 = (Subsystem_c) baseRoot.getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58431 == null) {
      			relInst58431 = (Subsystem_c) Ooaofooa.getDefaultInstance().getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
      		}
			if (relInst58431 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58431 = (Subsystem_c) roots[i].getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
					if (relInst58431 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58431 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58431) && !isProxy())) {
	      relInst58431.relateAcrossR4To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R8001
      // PE_PE
		  inst=IsSupertypePackageableElement;
			unrelateAcrossR8001From(IsSupertypePackageableElement, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4
      // S_SS
		  inst=AbstractsAssociationsBetweenClassesInSubsystem;
			unrelateAcrossR4From(AbstractsAssociationsBetweenClassesInSubsystem, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Association_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Association_c inst = (Association_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Association_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Association_c AssociationInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Association_c result=findAssociationInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Association_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findAssociationInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Association_c findAssociationInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Association_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Association_c x = (Association_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Association_c AssociationInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return AssociationInstance(modelRoot,test,true);
  }
  
  public static Association_c AssociationInstance(ModelRoot modelRoot)
  {
	 return AssociationInstance(modelRoot,null,true);
  }

  public static Association_c [] AssociationInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Association_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Association_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Association_c x = (Association_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Association_c[] ret_set = new Association_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Association_c[0];
			}		
		} 
  }
  public static Association_c [] AssociationInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  AssociationInstances(modelRoot,test,true);
  }
  public static Association_c [] AssociationInstances(ModelRoot modelRoot)
  {
	return AssociationInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Association.dispose call: ";
	PackageableElement_c testR8001Inst15 = PackageableElement_c.getOnePE_PEOnR8001(this, false);

	if ( testR8001Inst15 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "8001 ";
	}
	Subsystem_c testR4Inst = Subsystem_c.getOneS_SSOnR4(this, false);

	if ( testR4Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4 ";
	}
	CommunicationLink_c testR1128Inst = CommunicationLink_c.getOneCOMM_LNKOnR1128(this, false);

	if ( testR1128Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1128 ";	
	}
	SubtypeSupertypeAssociation_c testR206Inst1 = SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR206(this, false);

	if ( testR206Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "206 ";
	}
	SimpleAssociation_c testR206Inst2 = SimpleAssociation_c.getOneR_SIMPOnR206(this, false);

	if ( testR206Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "206 ";
	}
	DerivedAssociation_c testR206Inst3 = DerivedAssociation_c.getOneR_COMPOnR206(this, false);

	if ( testR206Inst3 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "206 ";
	}
	LinkedAssociation_c testR206Inst4 = LinkedAssociation_c.getOneR_ASSOCOnR206(this, false);

	if ( testR206Inst4 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "206 ";
	}
	ClassInAssociation_c testR201Inst = ClassInAssociation_c.getOneR_OIROnR201(this, false);

	if ( testR201Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "201 ";
	}
	ChainLink_c testR681Inst = ChainLink_c.getOneACT_LNKOnR681(this, false);

	if ( testR681Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "681 ";	
	}
	Relate_c testR653Inst = Relate_c.getOneACT_RELOnR653(this, false);

	if ( testR653Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "653 ";	
	}
	RelateUsing_c testR654Inst = RelateUsing_c.getOneACT_RUOnR654(this, false);

	if ( testR654Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "654 ";	
	}
	Unrelate_c testR655Inst = Unrelate_c.getOneACT_UNROnR655(this, false);

	if ( testR655Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "655 ";	
	}
	UnrelateUsing_c testR656Inst = UnrelateUsing_c.getOneACT_URUOnR656(this, false);

	if ( testR656Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "656 ";	
	}
	Link_c testR2904Inst = Link_c.getOneI_LNKOnR2904(this, false);

	if ( testR2904Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2904 ";	
	}
	LinkParticipation_c testR2959Inst = LinkParticipation_c.getOneI_LIPOnR2959(this, false);

	if ( testR2959Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2959 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Association", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("ss_id")){
         return true;
      }
      if(attributeName.equals("rel_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getRel_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getRel_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public int getNumb()
  {
    return m_numb ;
  }


  public void setNumb(int newValue)
  {
    if(m_numb == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Numb", new Integer(m_numb), new Integer(newValue),true);

   m_numb = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSs_idLongBased()
  {
    if ( AbstractsAssociationsBetweenClassesInSubsystem != null )
    {
      return AbstractsAssociationsBetweenClassesInSubsystem.getSs_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSs_id()
  {
    if ( AbstractsAssociationsBetweenClassesInSubsystem != null )
    {
      return AbstractsAssociationsBetweenClassesInSubsystem.getSs_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSs_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ss_id) )
      return m_ss_id;
    else
      return getSs_id();
  }
  
  public void setSs_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ss_id)){
	        return;
	    }
	}else if(m_ss_id != null){
	    if(m_ss_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ss_id", m_ss_id, newValue,true); 
   m_ss_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getRel_idLongBased()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getRel_id()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_id();
    }
    return m_rel_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypePackageableElement != null );
 
 }                  

  public java.util.UUID getRel_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_rel_id) )
      return m_rel_id;
    else
      return getRel_id();
  }
  
  public void setRel_id(java.util.UUID newValue)
  {
   m_rel_id = IdAssigner.preprocessUUID(newValue);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Association", //$NON-NLS-1$
	  " Operation entered: Association::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Association_c [] objs = Association_c.AssociationInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Association", //$NON-NLS-1$
	  " Operation entered: Association::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Association_c_test58433_c implements ClassQueryInterface_c
    {
	  Association_c_test58433_c( java.util.UUID            p58434 ) {
	  m_p58434 = p58434;
	  }
	  private java.util.UUID             m_p58434; 
	  public boolean evaluate (Object candidate)
	  {
	      Association_c selected = (Association_c) candidate;
	      boolean retval = false;
	      retval = (selected.getRel_id().equals(m_p58434));
	      return retval;
	  }
    }

    Association_c [] objs58432 = 
    Association_c.AssociationInstances(modelRoot, new Association_c_test58433_c(getRel_id())) ;

    if ( (  (objs58432.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Association", //$NON-NLS-1$
           "Consistency: Object: Association: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs58432.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Association: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58432.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs58432.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Association", //$NON-NLS-1$
           "Consistency: Object: Association: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58432.length )  + " Rel_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Association: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58432.length )  + " Rel_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Association is a referring class in association: rel.Numb = 4
          // The participating class is: Subsystem
    class Subsystem_c_test58438_c implements ClassQueryInterface_c
    {
	  Subsystem_c_test58438_c( java.util.UUID            p58439 ) {
	  m_p58439 = p58439;
	  }
	  private java.util.UUID             m_p58439; 
	  public boolean evaluate (Object candidate)
	  {
	      Subsystem_c selected = (Subsystem_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSs_id().equals(m_p58439));
	      return retval;
	  }
    }

    Subsystem_c [] objs58437 = 
    Subsystem_c.SubsystemInstances(modelRoot, new Subsystem_c_test58438_c(getSs_id())) ;

    if ( (  (objs58437.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Association", //$NON-NLS-1$
           "Consistency: Object: Association: Association: 4: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58437.length )  + " SS_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Association: Association: 4: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58437.length )  + " SS_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Association is a subtype in association: rel.Numb = 8001
          // The supertype class is: Packageable Element
         //    Note: The consistency test for this supertype has been removed 
         //          until generic package _migration_ is complete.
          // Association is a participating class in association: rel.Numb = 1128
             // Object: Communication Link
          // Supertype: rel.Numb = 206
    int objs58443 = 0;
            // Subtype Object: Subtype Supertype Association
    class SubtypeSupertypeAssociation_c_test58444_c implements ClassQueryInterface_c
    {
	  SubtypeSupertypeAssociation_c_test58444_c( java.util.UUID            p58445 ) {
	  m_p58445 = p58445;
	  }
	  private java.util.UUID             m_p58445; 
	  public boolean evaluate (Object candidate)
	  {
	      SubtypeSupertypeAssociation_c selected = (SubtypeSupertypeAssociation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getRel_id().equals(m_p58445));
	      return retval;
	  }
    }

    SubtypeSupertypeAssociation_c [] objs58446 = 
    SubtypeSupertypeAssociation_c.SubtypeSupertypeAssociationInstances(modelRoot, new SubtypeSupertypeAssociation_c_test58444_c(getRel_id())) ;
 
    objs58443 = objs58443 + objs58446.length;
            // Subtype Object: Simple Association
    class SimpleAssociation_c_test58447_c implements ClassQueryInterface_c
    {
	  SimpleAssociation_c_test58447_c( java.util.UUID            p58448 ) {
	  m_p58448 = p58448;
	  }
	  private java.util.UUID             m_p58448; 
	  public boolean evaluate (Object candidate)
	  {
	      SimpleAssociation_c selected = (SimpleAssociation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getRel_id().equals(m_p58448));
	      return retval;
	  }
    }

    SimpleAssociation_c [] objs58449 = 
    SimpleAssociation_c.SimpleAssociationInstances(modelRoot, new SimpleAssociation_c_test58447_c(getRel_id())) ;
 
    objs58443 = objs58443 + objs58449.length;
            // Subtype Object: Derived Association
    class DerivedAssociation_c_test58450_c implements ClassQueryInterface_c
    {
	  DerivedAssociation_c_test58450_c( java.util.UUID            p58451 ) {
	  m_p58451 = p58451;
	  }
	  private java.util.UUID             m_p58451; 
	  public boolean evaluate (Object candidate)
	  {
	      DerivedAssociation_c selected = (DerivedAssociation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getRel_id().equals(m_p58451));
	      return retval;
	  }
    }

    DerivedAssociation_c [] objs58452 = 
    DerivedAssociation_c.DerivedAssociationInstances(modelRoot, new DerivedAssociation_c_test58450_c(getRel_id())) ;
 
    objs58443 = objs58443 + objs58452.length;
            // Subtype Object: Linked Association
    class LinkedAssociation_c_test58453_c implements ClassQueryInterface_c
    {
	  LinkedAssociation_c_test58453_c( java.util.UUID            p58454 ) {
	  m_p58454 = p58454;
	  }
	  private java.util.UUID             m_p58454; 
	  public boolean evaluate (Object candidate)
	  {
	      LinkedAssociation_c selected = (LinkedAssociation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getRel_id().equals(m_p58454));
	      return retval;
	  }
    }

    LinkedAssociation_c [] objs58455 = 
    LinkedAssociation_c.LinkedAssociationInstances(modelRoot, new LinkedAssociation_c_test58453_c(getRel_id())) ;
 
    objs58443 = objs58443 + objs58455.length;
    if ( objs58443 != 1 )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Association", //$NON-NLS-1$
           "Consistency: Object: Association: Association: 206: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs58443 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Association: Association: 206: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58443 )  , e); 
      }
      retval = false;

    }

          // Associated One Side: rel.Numb = 201
            // Link Object: Class In Association
            // Other Side Class: Model Class
    class ClassInAssociation_c_test58458_c implements ClassQueryInterface_c
    {
	  ClassInAssociation_c_test58458_c( java.util.UUID            p58459 ) {
	  m_p58459 = p58459;
	  }
	  private java.util.UUID             m_p58459; 
	  public boolean evaluate (Object candidate)
	  {
	      ClassInAssociation_c selected = (ClassInAssociation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getRel_id().equals(m_p58459));
	      return retval;
	  }
    }

    ClassInAssociation_c [] objs58460 = 
    ClassInAssociation_c.ClassInAssociationInstances(modelRoot, new ClassInAssociation_c_test58458_c(getRel_id())) ;

    if ( (  (objs58460.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Association", //$NON-NLS-1$
           "Consistency: Object: Association: Association: 201: Cardinality of a link is equal to zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs58460.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Association: Association: 201: Cardinality of a link is equal to zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58460.length )  , e); 
      }
      retval = false;

    }


          // Association is a participating class in association: rel.Numb = 681
             // Object: Chain Link
          // Association is a participating class in association: rel.Numb = 653
             // Object: Relate
          // Association is a participating class in association: rel.Numb = 654
             // Object: Relate Using
          // Association is a participating class in association: rel.Numb = 655
             // Object: Unrelate
          // Association is a participating class in association: rel.Numb = 656
             // Object: Unrelate Using
          // Association is a participating class in association: rel.Numb = 2904
             // Object: Link
          // Association is a participating class in association: rel.Numb = 2959
             // Object: Link Participation
    return retval;
  }


  // declare transform functions
  public  boolean      Is_reflexive()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Is_reflexive") ; 
               final ModelRoot modelRoot = getModelRoot();
SimpleAssociation_c v_srel = SimpleAssociation_c.getOneR_SIMPOnR206(this);


if ( (  (v_srel != null)) )
{

ClassAsSimpleParticipant_c [] v_part_set = ClassAsSimpleParticipant_c.getManyR_PARTsOnR207(v_srel);


if ( (  (v_part_set.length) > 1) )
{

ClassAsSimpleParticipant_c v_part1 = ClassAsSimpleParticipant_c.getOneR_PARTOnR207(v_srel);


  class ClassAsSimpleParticipant_test55996_c implements ClassQueryInterface_c
  {
	ClassAsSimpleParticipant_test55996_c( java.util.UUID         p55997 ) {
		m_p55997 = p55997;
	}
	private java.util.UUID         m_p55997;
	public boolean evaluate (Object candidate)
	{
		ClassAsSimpleParticipant_c selected = (ClassAsSimpleParticipant_c)candidate;
		return ! selected.getOir_id().equals(m_p55997) ;
	}
  }
ClassAsSimpleParticipant_c v_part2 = ClassAsSimpleParticipant_c.getOneR_PARTOnR207(v_srel, new ClassAsSimpleParticipant_test55996_c(v_part1.getOir_id()));


if ( (v_part1.getObj_id().equals(v_part2.getObj_id())) )
{

return true;



}


}

else
{

ClassAsSimpleParticipant_c v_part = ClassAsSimpleParticipant_c.getOneR_PARTOnR207(v_srel);


ClassAsSimpleFormalizer_c v_form = ClassAsSimpleFormalizer_c.getOneR_FORMOnR208(v_srel);


if ( (  (v_form != null)) )
{

if ( (v_part.getObj_id().equals(v_form.getObj_id())) )
{

return true;



}


}


}


}

else
{

LinkedAssociation_c v_arel = LinkedAssociation_c.getOneR_ASSOCOnR206(this);


if ( (  (v_arel != null)) )
{

ClassAsAssociatedOneSide_c v_aone = ClassAsAssociatedOneSide_c.getOneR_AONEOnR209(v_arel);


ClassAsAssociatedOtherSide_c v_aoth = ClassAsAssociatedOtherSide_c.getOneR_AOTHOnR210(v_arel);


if ( (v_aone.getObj_id().equals(v_aoth.getObj_id())) )
{

return true;



}


}


}

return false;



   } // End is_reflexive
  public  String       Get_connector_text(final java.util.UUID         p_Ooa_id,final boolean      p_Ooa_typeisimportedclass,final int  p_At,final java.util.UUID         p_Parent_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Get_connector_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


java.util.UUID         v_Obj_ID = p_Ooa_id ;


if ( (p_Ooa_typeisimportedclass) )
{

ImportedClass_c v_impClass = (ImportedClass_c) modelRoot.getInstanceList(ImportedClass_c.class).getGlobal(null, v_Obj_ID);


if ( (  (v_impClass != null)) )
{

ModelClass_c v_modelClass = ModelClass_c.getOneO_OBJOnR101(v_impClass);


v_Obj_ID = v_modelClass.getObj_id() ;



}


}

ClassAsSupertype_c v_superType = ClassAsSupertype_c.getOneR_SUPEROnR212(SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR206(this));


if ( (p_At == End_c.Middle &&   (v_superType == null)) )
{

v_result = "R" + Gd_c.Int_to_string(			    
getNumb()) ;



}

else
{

SimpleAssociation_c v_simp = SimpleAssociation_c.getOneR_SIMPOnR206(this);


if ( (  (v_simp != null)) )
{

v_result = v_simp.Get_connector_text(			    
v_Obj_ID			    
,p_At) ;



}

LinkedAssociation_c v_assoc = LinkedAssociation_c.getOneR_ASSOCOnR206(this);


if ( (  (v_assoc != null)) )
{

v_result = v_assoc.Get_connector_text(			    
v_Obj_ID			    
,p_At) ;



}

if ( (  (v_superType != null)) )
{

v_result = v_superType.Get_connector_text(			    
p_At) ;



}

DerivedAssociation_c v_comp = DerivedAssociation_c.getOneR_COMPOnR206(this);


if ( (  (v_comp != null)) )
{

v_result = v_comp.Get_connector_text(			    
v_Obj_ID			    
,p_At) ;



}


}

return v_result;



   } // End get_connector_text
  public static String       Get_cardinality_text(ModelRoot modelRoot,final int          p_Cond,final int          p_Mult)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Get_cardinality_text") ; 
if ( (p_Cond == 0) )
{

if ( (p_Mult == 0) )
{

return "1";



}

else
{

return "1..*";



}


}

else
{

if ( (p_Mult == 0) )
{

return "0..1";



}

else
{

return "*";



}


}


   } // End get_cardinality_text
  public  int  Get_style(final int  p_At)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_At == End_c.Start) )
{

SubtypeSupertypeAssociation_c v_subsup = SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR206(this);


if ( (  (v_subsup != null)) )
{

return Style_c.Triangle;



}

else
{

return Style_c.None;



}


}

return Style_c.None;



   } // End get_style
  public  String       Get_name()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
return "R" + Gd_c.Int_to_string(			    
getNumb());



   } // End get_name
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( Isformalized() )
{

Unformalize() ;



}

ClassInAssociation_c [] v_rgo_oirs = ClassInAssociation_c.getManyR_OIRsOnR203(ReferringClassInAssoc_c.getManyR_RGOsOnR203(ClassInAssociation_c.getManyR_OIRsOnR201(this)));


ClassInAssociation_c [] v_rto_oirs = ClassInAssociation_c.getManyR_OIRsOnR203(ReferredToClassInAssoc_c.getManyR_RTOsOnR203(ClassInAssociation_c.getManyR_OIRsOnR201(this)));


ClassInAssociation_c  v_rgo_oir = null;
for ( int i55434 = 0; i55434 < v_rgo_oirs.length; i55434++)
{
  v_rgo_oir = v_rgo_oirs[i55434] ;

if (v_rgo_oir != null) {
v_rgo_oir.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ClassInAssociation_c  v_rto_oir = null;
for ( int i55435 = 0; i55435 < v_rto_oirs.length; i55435++)
{
  v_rto_oir = v_rto_oirs[i55435] ;

if (v_rto_oir != null) {
v_rto_oir.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

SimpleAssociation_c v_simp = SimpleAssociation_c.getOneR_SIMPOnR206(this);


LinkedAssociation_c v_assoc = LinkedAssociation_c.getOneR_ASSOCOnR206(this);


SubtypeSupertypeAssociation_c v_subsup = SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR206(this);


DerivedAssociation_c v_comp = DerivedAssociation_c.getOneR_COMPOnR206(this);


if ( (  (v_simp != null)) )
{

if (v_simp != null) {
v_simp.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else if ( (  (v_assoc != null)) )
{

if (v_assoc != null) {
v_assoc.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else if ( (  (v_subsup != null)) )
{

if (v_subsup != null) {
v_subsup.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else if ( (  (v_comp != null)) )
{

if (v_comp != null) {
v_comp.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Relate_c [] v_rels = Relate_c.getManyACT_RELsOnR653(this);


Relate_c  v_rel = null;
for ( int i55436 = 0; i55436 < v_rels.length; i55436++)
{
  v_rel = v_rels[i55436] ;

this.unrelateAcrossR653From(v_rel);



}

RelateUsing_c [] v_rus = RelateUsing_c.getManyACT_RUsOnR654(this);


RelateUsing_c  v_ru = null;
for ( int i55437 = 0; i55437 < v_rus.length; i55437++)
{
  v_ru = v_rus[i55437] ;

this.unrelateAcrossR654From(v_ru);



}

Unrelate_c [] v_unrs = Unrelate_c.getManyACT_UNRsOnR655(this);


Unrelate_c  v_unr = null;
for ( int i55438 = 0; i55438 < v_unrs.length; i55438++)
{
  v_unr = v_unrs[i55438] ;

this.unrelateAcrossR655From(v_unr);



}

UnrelateUsing_c [] v_urus = UnrelateUsing_c.getManyACT_URUsOnR656(this);


UnrelateUsing_c  v_uru = null;
for ( int i55439 = 0; i55439 < v_urus.length; i55439++)
{
  v_uru = v_urus[i55439] ;

this.unrelateAcrossR656From(v_uru);



}

ChainLink_c [] v_lnks = ChainLink_c.getManyACT_LNKsOnR681(this);


ChainLink_c  v_lnk = null;
for ( int i55440 = 0; i55440 < v_lnks.length; i55440++)
{
  v_lnk = v_lnks[i55440] ;

this.unrelateAcrossR681From(v_lnk);



}

Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR4(this);


if ( (  (v_ss != null)) )
{

this.unrelateAcrossR4From(v_ss);



}

LinkParticipation_c [] v_iils = LinkParticipation_c.getManyI_LIPsOnR2959(this);


LinkParticipation_c  v_iil = null;
for ( int i55441 = 0; i55441 < v_iils.length; i55441++)
{
  v_iil = v_iils[i55441] ;

this.unrelateAcrossR2959From(v_iil);


if (v_iil != null) {
v_iil.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Link_c [] v_ilinks = Link_c.getManyI_LNKsOnR2904(this);


Link_c  v_ilink = null;
for ( int i55442 = 0; i55442 < v_ilinks.length; i55442++)
{
  v_ilink = v_ilinks[i55442] ;

this.unrelateAcrossR2904From(v_ilink);


if (v_ilink != null) {
v_ilink.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

CommunicationLink_c [] v_links = CommunicationLink_c.getManyCOMM_LNKsOnR1128(this);


CommunicationLink_c  v_link = null;
for ( int i55443 = 0; i55443 < v_links.length; i55443++)
{
  v_link = v_links[i55443] ;

if (v_link != null) {
v_link.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


if ( (  (v_pe != null)) )
{

this.unrelateAcrossR8001From(v_pe);


if (v_pe != null) {
v_pe.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

if ( (  (v_package == null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent));



}

if ( (v_package.getNum_rng() == 0) )
{

setNumb( 1) ;



}

else
{

setNumb( v_package.getNum_rng()) ;



}

Association_c [] v_assocs = Association_c.getManyR_RELsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(v_package));


Association_c  v_assoc = null;
for ( int i55444 = 0; i55444 < v_assocs.length; i55444++)
{
  v_assoc = v_assocs[i55444] ;

if ( (v_assoc.getRel_id().equals(getRel_id())) )
{

continue;



}

if ( (v_assoc.getNumb() >= getNumb()) )
{

setNumb( v_assoc.getNumb() + 1) ;



}


}


}

else
{

Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR4(this);


if ( (v_ss.getNum_rng() == 0) )
{

setNumb( 1) ;



}

else
{

setNumb( v_ss.getNum_rng()) ;



}

Association_c [] v_assocs = Association_c.getManyR_RELsOnR4(v_ss);


Association_c  v_assoc = null;
for ( int i55445 = 0; i55445 < v_assocs.length; i55445++)
{
  v_assoc = v_assocs[i55445] ;

if ( (v_assoc.getRel_id().equals(getRel_id())) )
{

continue;



}

if ( (v_assoc.getNumb() >= getNumb()) )
{

setNumb( v_assoc.getNumb() + 1) ;



}


}


}


   } // End initialize
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getRel_id();



   } // End get_ooa_id
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("type")) )
{

if ( (p_Value.equals("unform simp")) )
{

if ( (  !Isformalized()) )
{

SimpleAssociation_c v_simp = SimpleAssociation_c.getOneR_SIMPOnR206(this);


if ( (  (v_simp != null)) )
{

ClassAsSimpleParticipant_c [] v_part_set = ClassAsSimpleParticipant_c.getManyR_PARTsOnR207(v_simp);


int          v_num_many_mult = 0 ;


boolean      v_one_mult_has_id = false ;


ClassAsSimpleParticipant_c  v_part = null;
for ( int i55446 = 0; i55446 < v_part_set.length; i55446++)
{
  v_part = v_part_set[i55446] ;

if ( (v_part.getMult() == 1) )
{

v_num_many_mult = v_num_many_mult + 1 ;



}

else
{

ClassIdentifierAttribute_c v_oida = ClassIdentifierAttribute_c.getOneO_OIDAOnR105(ClassIdentifier_c.getManyO_IDsOnR104(ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferredToClassInAssoc_c.getManyR_RTOsOnR204(v_part)))));


if ( (  (v_oida != null)) )
{

v_one_mult_has_id = true ;



}


}


}

return v_one_mult_has_id && v_num_many_mult < 2;



}


}


}

else if ( (p_Value.equals("unform assoc")) )
{

if ( (  !Isformalized()) )
{

LinkedAssociation_c v_assoc = LinkedAssociation_c.getOneR_ASSOCOnR206(this);


if (   (v_assoc != null) )
{

ClassAsAssociatedOneSide_c v_aone = ClassAsAssociatedOneSide_c.getOneR_AONEOnR209(v_assoc);


ClassAsAssociatedOtherSide_c v_aoth = ClassAsAssociatedOtherSide_c.getOneR_AOTHOnR210(v_assoc);


ClassIdentifierAttribute_c v_aone_oida = ClassIdentifierAttribute_c.getOneO_OIDAOnR105(ClassIdentifier_c.getManyO_IDsOnR104(ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferredToClassInAssoc_c.getManyR_RTOsOnR204(v_aone)))));


ClassIdentifierAttribute_c v_aoth_oida = ClassIdentifierAttribute_c.getOneO_OIDAOnR105(ClassIdentifier_c.getManyO_IDsOnR104(ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferredToClassInAssoc_c.getManyR_RTOsOnR204(v_aoth)))));


return   (v_aone_oida != null) &&   (v_aoth_oida != null);



}


}


}

else if ( (p_Value.equals("unform subsup")) )
{

if ( (  !Isformalized()) )
{

SubtypeSupertypeAssociation_c v_subsup = SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR206(this);


if (   (v_subsup != null) )
{

ClassAsSupertype_c v_sup = ClassAsSupertype_c.getOneR_SUPEROnR212(v_subsup);


ClassIdentifierAttribute_c v_sup_oida = ClassIdentifierAttribute_c.getOneO_OIDAOnR105(ClassIdentifier_c.getManyO_IDsOnR104(ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferredToClassInAssoc_c.getManyR_RTOsOnR204(v_sup)))));


return   (v_sup_oida != null);



}


}


}


}

else if ( (p_Name.equals("formalized")) )
{

if ( (p_Value.equals("true")) )
{

return Isformalized();



}


}

return false;



   } // End actionFilter
  public  boolean      Isformalized()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Isformalized") ; 
               final ModelRoot modelRoot = getModelRoot();
SimpleAssociation_c v_simp = SimpleAssociation_c.getOneR_SIMPOnR206(this);


if ( (  (v_simp != null)) )
{

return v_simp.Isformalized();



}

else
{

LinkedAssociation_c v_assoc = LinkedAssociation_c.getOneR_ASSOCOnR206(this);


if ( (  (v_assoc != null)) )
{

return v_assoc.Isformalized();



}

else
{

SubtypeSupertypeAssociation_c v_subsup = SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR206(this);


if ( (  (v_subsup != null)) )
{

return v_subsup.Isformalized();



}


}


}

return false;



   } // End isFormalized
  public  void Unformalize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Unformalize") ; 
               final ModelRoot modelRoot = getModelRoot();
SimpleAssociation_c v_simp = SimpleAssociation_c.getOneR_SIMPOnR206(this);


if ( (  (v_simp != null)) )
{

if (v_simp != null) {
v_simp.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

LinkedAssociation_c v_assoc = LinkedAssociation_c.getOneR_ASSOCOnR206(this);


if ( (  (v_assoc != null)) )
{

if (v_assoc != null) {
v_assoc.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

SubtypeSupertypeAssociation_c v_subsup = SubtypeSupertypeAssociation_c.getOneR_SUBSUPOnR206(this);


if ( (  (v_subsup != null)) )
{

if (v_subsup != null) {
v_subsup.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


   } // End unformalize
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
Association_c [] v_associations = Association_c.getManyR_RELsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(Package_c.getManyEP_PKGsOnR8000(PackageableElement_c.getManyPE_PEsOnR8001(this))));


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this)));


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

Association_c  v_association = null;
for ( int i55447 = 0; i55447 < v_associations.length; i55447++)
{
  v_association = v_associations[i55447] ;

if ( (v_association != this && v_association.getNumb() == getNumb()) )
{

IntegrityManager_c.Createissue(modelRoot			    
,"Found another association in the same package with a " + "matching number."			    
,Converttoinstance()			    
,getRel_id()			    
,Get_name()			    
,Getpath()			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity
  public  String       Getpath()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Association", " Operation entered: Association::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


return v_package.Getpath(			    
"") + "::" + Get_name();



   } // End getPath

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return AssociationActionFilter.getSingleton();
    }
	  return null;
  }
} // end Association
