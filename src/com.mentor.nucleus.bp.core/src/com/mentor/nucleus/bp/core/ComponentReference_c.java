      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ComponentReference_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_COMPONENT_REFERENCE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ComponentReference_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ComponentReference_c(ModelRoot modelRoot,
       java.util.UUID         p_m_id,
       java.util.UUID         p_m_assignedcomp_id,
       java.util.UUID         p_m_parentcomp_id,
       java.util.UUID         p_m_component_package_id,
       int          p_m_mult,
       String       p_m_classifiername,
       String       p_m_name,
       String       p_m_descrip)
  {
    super(modelRoot);
       m_mult = p_m_mult;
       m_classifiername = p_m_classifiername;
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_assignedcomp_id = IdAssigner.preprocessUUID(p_m_assignedcomp_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_parentcomp_id = IdAssigner.preprocessUUID(p_m_parentcomp_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_id = IdAssigner.preprocessUUID(p_m_id);
        
    setUniqueId(m_id);
    Object [] key = {m_id};
    addInstanceToMap(key);
  }
  static public ComponentReference_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_id,
       java.util.UUID         p_m_assignedcomp_id,
       java.util.UUID         p_m_parentcomp_id,
       java.util.UUID         p_m_component_package_id,
       int          p_m_mult,
       String       p_m_classifiername,
       String       p_m_name,
       String       p_m_descrip, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);
      ComponentReference_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_id};
          new_inst = (ComponentReference_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_mult = p_m_mult;
       new_inst.m_classifiername = p_m_classifiername;
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_assignedcomp_id = IdAssigner.preprocessUUID(p_m_assignedcomp_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_parentcomp_id = IdAssigner.preprocessUUID(p_m_parentcomp_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_id = IdAssigner.preprocessUUID(p_m_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ComponentReference_c(modelRoot,
p_m_id,
p_m_assignedcomp_id,
p_m_parentcomp_id,
p_m_component_package_id,
p_m_mult,
p_m_classifiername,
p_m_name,
p_m_descrip
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ComponentReference_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_id,
       java.util.UUID         p_m_assignedcomp_id,
       java.util.UUID         p_m_parentcomp_id,
       java.util.UUID         p_m_component_package_id,
       int          p_m_mult,
       String       p_m_classifiername,
       String       p_m_name,
       String       p_m_descrip){
    InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);
    ComponentReference_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_id
            };
        source = (ComponentReference_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_mult = p_m_mult;
       source.m_classifiername = p_m_classifiername;
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_assignedcomp_id = IdAssigner.preprocessUUID(p_m_assignedcomp_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_parentcomp_id = IdAssigner.preprocessUUID(p_m_parentcomp_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_id = IdAssigner.preprocessUUID(p_m_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    ComponentReference_c new_inst = new ComponentReference_c(modelRoot,
p_m_id,
p_m_assignedcomp_id,
p_m_parentcomp_id,
p_m_component_package_id,
p_m_mult,
p_m_classifiername,
p_m_name,
p_m_descrip
);
    return new_inst;
  }
  public ComponentReference_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_classifiername = "";   
     m_name = "";   
     m_descrip = "";   
     m_component_package_id = IdAssigner.NULL_UUID;   
     m_assignedcomp_id = IdAssigner.NULL_UUID;   
     m_parentcomp_id = IdAssigner.NULL_UUID;   
     m_id = idAssigner.createUUID();
    setUniqueId(m_id);
    Object [] key = {m_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_id !=  p_newKey ){
	
		m_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof ComponentReference_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ComponentReference_c)) {
           return false;
       }
       
       ComponentReference_c me = (ComponentReference_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getId()) || IdAssigner.NULL_UUID.equals(((ComponentReference_c)elem).getId())) && this != elem)) {
      	return false;
      }
      if (!getId().equals(((ComponentReference_c)elem).getId())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ComponentReference_c)) {
           return false;
       }
       
       ComponentReference_c me = (ComponentReference_c)elem;
      if (!getIdCachedValue().equals(((ComponentReference_c)elem).getIdCachedValue())) return false;
      return true;
    }


  // Attributes
  private int          m_mult ;
  private String       m_classifiername ;
  private String       m_name ;
  private String       m_descrip ;
  private java.util.UUID         m_component_package_id ;
  private java.util.UUID         m_assignedcomp_id ;
  private java.util.UUID         m_parentcomp_id ;
  private java.util.UUID         m_id ;
      
// declare association references from this class
  
  
    
// referring navigation

PackageableElement_c IsSupertypePackageableElement ;
public void relateAcrossR8001To(PackageableElement_c target)
{
	relateAcrossR8001To(target, true);
}
public void relateAcrossR8001To(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypePackageableElement) return;  // already related

    if ( IsSupertypePackageableElement != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypePackageableElement != null) {
    
        IsSupertypePackageableElement.clearBackPointerR8001To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentReference_c.relateAcrossR8001To(PackageableElement_c target)", 
			"Relate performed across R8001 from Component Reference to Packageable Element without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypePackageableElement = target ;
        m_id = target.getElement_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8001To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8001From(PackageableElement_c target)
{
	unrelateAcrossR8001From(target, true);
}
public void unrelateAcrossR8001From(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypePackageableElement == null) return;  // already unrelated
	
	if (target != IsSupertypePackageableElement) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8001", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8001To(this);
    }
    

      if(IsSupertypePackageableElement != null) {
      
        m_id = IsSupertypePackageableElement.getElement_id();
        IsSupertypePackageableElement = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentReference_c getOneCL_ICOnR8001(PackageableElement_c [] targets)
{
    return getOneCL_ICOnR8001(targets, null);
}

public static ComponentReference_c getOneCL_ICOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
    ComponentReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneCL_ICOnR8001(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentReference_c getOneCL_ICOnR8001(PackageableElement_c target)
{
  return getOneCL_ICOnR8001(target, null);
}

public static ComponentReference_c getOneCL_ICOnR8001(PackageableElement_c target, boolean loadComponent)
{
    return getOneCL_ICOnR8001(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentReference_c getOneCL_ICOnR8001(PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneCL_ICOnR8001(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentReference_c getOneCL_ICOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
	return getOneCL_ICOnR8001(modelRoot, target, test, true);
}

public static ComponentReference_c getOneCL_ICOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneCL_ICOnR8001(modelRoot,target,test);
}
private static ComponentReference_c find_getOneCL_ICOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    ComponentReference_c source = (ComponentReference_c)target.backPointer_IsSubtypeComponentReferenceIsSubtype_R8001;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static ComponentReference_c [] getManyCL_ICsOnR8001(PackageableElement_c [] targets)
{
  return getManyCL_ICsOnR8001(targets, null);
}
public static ComponentReference_c [] getManyCL_ICsOnR8001(PackageableElement_c [] targets, boolean loadComponent)
{
  return getManyCL_ICsOnR8001(targets, null, loadComponent);
}
public static ComponentReference_c [] getManyCL_ICsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR8001(targets, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentReference_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      ComponentReference_c source = (ComponentReference_c)targets[i].backPointer_IsSubtypeComponentReferenceIsSubtype_R8001;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	ComponentReference_c[] ret_set = new ComponentReference_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentReference_c[0];
  }
  }

public static ComponentReference_c [] getManyCL_ICsOnR8001(PackageableElement_c target)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyCL_ICsOnR8001(targetArray);
  } else {
    ComponentReference_c [] result = new ComponentReference_c [0] ;
  return result ;
}
}

public static ComponentReference_c [] getManyCL_ICsOnR8001(PackageableElement_c target, boolean loadComponent)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyCL_ICsOnR8001(targetArray, loadComponent);
  } else {
    ComponentReference_c [] result = new ComponentReference_c [0] ;
  return result ;
}
}



  
    
// referring navigation

Component_c RepresentsComponent ;
public void relateAcrossR4201To(Component_c target)
{
	relateAcrossR4201To(target, true);
}
public void relateAcrossR4201To(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == RepresentsComponent) return;  // already related

    if ( RepresentsComponent != target ) {
    
    Object oldKey = getInstanceKey();

    if (RepresentsComponent != null) {
        UmlProblem.removeXtUMLProblem(this, RepresentsComponent);
    
        RepresentsComponent.clearBackPointerR4201To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentReference_c.relateAcrossR4201To(Component_c target)", 
			"Relate performed across R4201 from Component Reference to Component without unrelate of prior instance.");  
		}
    }
                
    	RepresentsComponent = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_assignedcomp_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4201To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4201", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4201From(Component_c target)
{
	unrelateAcrossR4201From(target, true);
}
public void unrelateAcrossR4201From(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (RepresentsComponent == null) return;  // already unrelated
	
	if (target != RepresentsComponent) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4201", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4201To(this);
    }
    

      if(RepresentsComponent != null) {
      
        m_assignedcomp_id = RepresentsComponent.getId();
        if(IdAssigner.NULL_UUID.equals(m_assignedcomp_id))
        {
          m_assignedcomp_id = RepresentsComponent.getIdCachedValue();
        }       
        RepresentsComponent = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4201", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentReference_c getOneCL_ICOnR4201(Component_c [] targets)
{
    return getOneCL_ICOnR4201(targets, null);
}

public static ComponentReference_c getOneCL_ICOnR4201(Component_c [] targets, ClassQueryInterface_c test)
{
    ComponentReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneCL_ICOnR4201(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentReference_c getOneCL_ICOnR4201(Component_c target)
{
  return getOneCL_ICOnR4201(target, null);
}

public static ComponentReference_c getOneCL_ICOnR4201(Component_c target, boolean loadComponent)
{
    return getOneCL_ICOnR4201(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentReference_c getOneCL_ICOnR4201(Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneCL_ICOnR4201(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentReference_c getOneCL_ICOnR4201(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
	return getOneCL_ICOnR4201(modelRoot, target, test, true);
}

public static ComponentReference_c getOneCL_ICOnR4201(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  ComponentReference_c result = null;
  
  result=find_getOneCL_ICOnR4201(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,ComponentReference_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneCL_ICOnR4201(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static ComponentReference_c find_getOneCL_ICOnR4201(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201) {
	    for ( int i = 0; i < target.backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201.size(); ++i ) {
	      ComponentReference_c source = (ComponentReference_c)target.backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ComponentReference_c [] getManyCL_ICsOnR4201(Component_c [] targets)
{
  return getManyCL_ICsOnR4201(targets, null);
}
public static ComponentReference_c [] getManyCL_ICsOnR4201(Component_c [] targets, boolean loadComponent)
{
  return getManyCL_ICsOnR4201(targets, null, loadComponent);
}
public static ComponentReference_c [] getManyCL_ICsOnR4201(Component_c [] targets, ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR4201(targets, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4201(Component_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentReference_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ComponentReference_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201) {
	    for (int j = 0; j < targets[i].backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201.size(); ++j) {
	      ComponentReference_c source = (ComponentReference_c)targets[i].backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ComponentReference_c[] ret_set = new ComponentReference_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentReference_c[0];
  }
  }

public static ComponentReference_c [] getManyCL_ICsOnR4201(Component_c target)
{
  return getManyCL_ICsOnR4201(target, null);
}

public static ComponentReference_c [] getManyCL_ICsOnR4201(Component_c target, boolean loadComponent)
{
  return getManyCL_ICsOnR4201(target, null, loadComponent);
}

public static ComponentReference_c [] getManyCL_ICsOnR4201(Component_c target, ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR4201(target, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4201(Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ComponentReference_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ComponentReference_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201) {
    for (int i = 0; i < target.backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201.size(); ++i) {
      ComponentReference_c source = (ComponentReference_c)target.backPointer_IsRepresentedByComponentReferenceIsRepresentedBy_R4201.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ComponentReference_c[] ret_set = new ComponentReference_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ComponentReference_c[0];
	}
  }


  
    
// referring navigation

Component_c NestedInComponent ;
public void relateAcrossR4205To(Component_c target)
{
	relateAcrossR4205To(target, true);
}
public void relateAcrossR4205To(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == NestedInComponent) return;  // already related

    if ( NestedInComponent != target ) {
    
    Object oldKey = getInstanceKey();

    if (NestedInComponent != null) {
    
        NestedInComponent.clearBackPointerR4205To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentReference_c.relateAcrossR4205To(Component_c target)", 
			"Relate performed across R4205 from Component Reference to Component without unrelate of prior instance.");  
		}
    }
                
    	NestedInComponent = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_parentcomp_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4205To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4205", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4205From(Component_c target)
{
	unrelateAcrossR4205From(target, true);
}
public void unrelateAcrossR4205From(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (NestedInComponent == null) return;  // already unrelated
	
	if (target != NestedInComponent) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4205", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4205To(this);
    }
    

      if(NestedInComponent != null) {
      
        m_parentcomp_id = NestedInComponent.getId();
        if(IdAssigner.NULL_UUID.equals(m_parentcomp_id))
        {
          m_parentcomp_id = NestedInComponent.getIdCachedValue();
        }       
        NestedInComponent = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4205", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentReference_c getOneCL_ICOnR4205(Component_c [] targets)
{
    return getOneCL_ICOnR4205(targets, null);
}

public static ComponentReference_c getOneCL_ICOnR4205(Component_c [] targets, ClassQueryInterface_c test)
{
    ComponentReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneCL_ICOnR4205(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentReference_c getOneCL_ICOnR4205(Component_c target)
{
  return getOneCL_ICOnR4205(target, null);
}

public static ComponentReference_c getOneCL_ICOnR4205(Component_c target, boolean loadComponent)
{
    return getOneCL_ICOnR4205(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentReference_c getOneCL_ICOnR4205(Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneCL_ICOnR4205(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentReference_c getOneCL_ICOnR4205(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
	return getOneCL_ICOnR4205(modelRoot, target, test, true);
}

public static ComponentReference_c getOneCL_ICOnR4205(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneCL_ICOnR4205(modelRoot,target,test);
}
private static ComponentReference_c find_getOneCL_ICOnR4205(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_NestsComponentReferenceNests_R4205) {
	    for ( int i = 0; i < target.backPointer_NestsComponentReferenceNests_R4205.size(); ++i ) {
	      ComponentReference_c source = (ComponentReference_c)target.backPointer_NestsComponentReferenceNests_R4205.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ComponentReference_c [] getManyCL_ICsOnR4205(Component_c [] targets)
{
  return getManyCL_ICsOnR4205(targets, null);
}
public static ComponentReference_c [] getManyCL_ICsOnR4205(Component_c [] targets, boolean loadComponent)
{
  return getManyCL_ICsOnR4205(targets, null, loadComponent);
}
public static ComponentReference_c [] getManyCL_ICsOnR4205(Component_c [] targets, ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR4205(targets, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4205(Component_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentReference_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_NestsComponentReferenceNests_R4205) {
	    for (int j = 0; j < targets[i].backPointer_NestsComponentReferenceNests_R4205.size(); ++j) {
	      ComponentReference_c source = (ComponentReference_c)targets[i].backPointer_NestsComponentReferenceNests_R4205.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ComponentReference_c[] ret_set = new ComponentReference_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentReference_c[0];
  }
  }

public static ComponentReference_c [] getManyCL_ICsOnR4205(Component_c target)
{
  return getManyCL_ICsOnR4205(target, null);
}

public static ComponentReference_c [] getManyCL_ICsOnR4205(Component_c target, boolean loadComponent)
{
  return getManyCL_ICsOnR4205(target, null, loadComponent);
}

public static ComponentReference_c [] getManyCL_ICsOnR4205(Component_c target, ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR4205(target, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4205(Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ComponentReference_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_NestsComponentReferenceNests_R4205) {
    for (int i = 0; i < target.backPointer_NestsComponentReferenceNests_R4205.size(); ++i) {
      ComponentReference_c source = (ComponentReference_c)target.backPointer_NestsComponentReferenceNests_R4205.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ComponentReference_c[] ret_set = new ComponentReference_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ComponentReference_c[0];
	}
  }


  
    
// referring navigation

ComponentPackage_c ExistsInComponentPackage ;
public void relateAcrossR4605To(ComponentPackage_c target)
{
	relateAcrossR4605To(target, true);
}
public void relateAcrossR4605To(ComponentPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ExistsInComponentPackage) return;  // already related

    if ( ExistsInComponentPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (ExistsInComponentPackage != null) {
    
        ExistsInComponentPackage.clearBackPointerR4605To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentReference_c.relateAcrossR4605To(ComponentPackage_c target)", 
			"Relate performed across R4605 from Component Reference to Component Package without unrelate of prior instance.");  
		}
    }
                
    	ExistsInComponentPackage = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4605To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4605", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4605From(ComponentPackage_c target)
{
	unrelateAcrossR4605From(target, true);
}
public void unrelateAcrossR4605From(ComponentPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ExistsInComponentPackage == null) return;  // already unrelated
	
	if (target != ExistsInComponentPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4605", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4605To(this);
    }
    

      if(ExistsInComponentPackage != null) {
      
        m_component_package_id = ExistsInComponentPackage.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_component_package_id))
        {
          m_component_package_id = ExistsInComponentPackage.getPackage_idCachedValue();
        }       
        ExistsInComponentPackage = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4605", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentReference_c getOneCL_ICOnR4605(ComponentPackage_c [] targets)
{
    return getOneCL_ICOnR4605(targets, null);
}

public static ComponentReference_c getOneCL_ICOnR4605(ComponentPackage_c [] targets, ClassQueryInterface_c test)
{
    ComponentReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneCL_ICOnR4605(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentReference_c getOneCL_ICOnR4605(ComponentPackage_c target)
{
  return getOneCL_ICOnR4605(target, null);
}

public static ComponentReference_c getOneCL_ICOnR4605(ComponentPackage_c target, boolean loadComponent)
{
    return getOneCL_ICOnR4605(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentReference_c getOneCL_ICOnR4605(ComponentPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneCL_ICOnR4605(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentReference_c getOneCL_ICOnR4605(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test)
{
	return getOneCL_ICOnR4605(modelRoot, target, test, true);
}

public static ComponentReference_c getOneCL_ICOnR4605(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneCL_ICOnR4605(modelRoot,target,test);
}
private static ComponentReference_c find_getOneCL_ICOnR4605(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsComponentReferenceContains_R4605) {
	    for ( int i = 0; i < target.backPointer_ContainsComponentReferenceContains_R4605.size(); ++i ) {
	      ComponentReference_c source = (ComponentReference_c)target.backPointer_ContainsComponentReferenceContains_R4605.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ComponentReference_c [] getManyCL_ICsOnR4605(ComponentPackage_c [] targets)
{
  return getManyCL_ICsOnR4605(targets, null);
}
public static ComponentReference_c [] getManyCL_ICsOnR4605(ComponentPackage_c [] targets, boolean loadComponent)
{
  return getManyCL_ICsOnR4605(targets, null, loadComponent);
}
public static ComponentReference_c [] getManyCL_ICsOnR4605(ComponentPackage_c [] targets, ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR4605(targets, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4605(ComponentPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentReference_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsComponentReferenceContains_R4605) {
	    for (int j = 0; j < targets[i].backPointer_ContainsComponentReferenceContains_R4605.size(); ++j) {
	      ComponentReference_c source = (ComponentReference_c)targets[i].backPointer_ContainsComponentReferenceContains_R4605.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ComponentReference_c[] ret_set = new ComponentReference_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentReference_c[0];
  }
  }

public static ComponentReference_c [] getManyCL_ICsOnR4605(ComponentPackage_c target)
{
  return getManyCL_ICsOnR4605(target, null);
}

public static ComponentReference_c [] getManyCL_ICsOnR4605(ComponentPackage_c target, boolean loadComponent)
{
  return getManyCL_ICsOnR4605(target, null, loadComponent);
}

public static ComponentReference_c [] getManyCL_ICsOnR4605(ComponentPackage_c target, ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR4605(target, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4605(ComponentPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ComponentReference_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsComponentReferenceContains_R4605) {
    for (int i = 0; i < target.backPointer_ContainsComponentReferenceContains_R4605.size(); ++i) {
      ComponentReference_c source = (ComponentReference_c)target.backPointer_ContainsComponentReferenceContains_R4605.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ComponentReference_c[] ret_set = new ComponentReference_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ComponentReference_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<ImportedReference_c> backPointer_CommunicatesThroughImportedReferenceCommunicatesThrough_R4700 = new ArrayList<ImportedReference_c>();

public void setImportedReferenceOrderInChildListR4700(ImportedReference_c target, int index) {
	unrelateAcrossR4700From(target);
	ImportedReference_c[] elements = ImportedReference_c.getManyCL_IIRsOnR4700(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR4700From((ImportedReference_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR4700To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR4700To((ImportedReference_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR4700To(ImportedReference_c target)
{
  if (target != null) {
    target.relateAcrossR4700To(this, true) ;
  }
}

public void relateAcrossR4700To(ImportedReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR4700To(this, notifyChanges) ;
  }
}

public void setBackPointerR4700To(ImportedReference_c target)
{
  	synchronized (backPointer_CommunicatesThroughImportedReferenceCommunicatesThrough_R4700) {
		backPointer_CommunicatesThroughImportedReferenceCommunicatesThrough_R4700.add(target);
	}
}

public void unrelateAcrossR4700From(ImportedReference_c target)
{
  if (target != null) {
    target.unrelateAcrossR4700From(this, true) ;
  }
}

public void unrelateAcrossR4700From(ImportedReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR4700From(this, notifyChanges) ;
  }
}

public void clearBackPointerR4700To(ImportedReference_c target)
{
  synchronized (backPointer_CommunicatesThroughImportedReferenceCommunicatesThrough_R4700) {
	    backPointer_CommunicatesThroughImportedReferenceCommunicatesThrough_R4700.remove(target);
	}
}

public static ComponentReference_c getOneCL_ICOnR4700(ImportedReference_c [] targets)
{
    return getOneCL_ICOnR4700(targets, null);
}

public static ComponentReference_c getOneCL_ICOnR4700(ImportedReference_c [] targets, ClassQueryInterface_c test)
{
    return getOneCL_ICOnR4700(targets, test, true);
}

public static ComponentReference_c getOneCL_ICOnR4700(ImportedReference_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ComponentReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ComponentReference_c candidate_val = getOneCL_ICOnR4700(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneCL_ICOnR4700(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ComponentReference_c getOneCL_ICOnR4700(ImportedReference_c target)
{
	return getOneCL_ICOnR4700(target, true);
}
public static ComponentReference_c getOneCL_ICOnR4700(ImportedReference_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.OriginatesFromComponentReference ;
  } else {
    return null;
  }
}

public static ComponentReference_c [] getManyCL_ICsOnR4700(ImportedReference_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR4700(targets, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4700(ImportedReference_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ComponentReference_c[0];
  
  
  LinkedHashSet<ComponentReference_c> elementsSet = new LinkedHashSet<ComponentReference_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].OriginatesFromComponentReference == null)
	  targets[i].loadProxy();
    ComponentReference_c associate = targets[i].OriginatesFromComponentReference;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ComponentReference_c[] result = new ComponentReference_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ComponentReference_c [] getManyCL_ICsOnR4700(ImportedReference_c [] targets)
{
  return getManyCL_ICsOnR4700(targets, null);
}

public static ComponentReference_c [] getManyCL_ICsOnR4700(ImportedReference_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ImportedReference_c [] targetArray = new ImportedReference_c[1];
    targetArray[0] = target;
    return getManyCL_ICsOnR4700(targetArray, test, loadComponent);
  } else {
    ComponentReference_c [] result = new ComponentReference_c [0] ;
    return result ;
  }
  
}

public static ComponentReference_c [] getManyCL_ICsOnR4700(ImportedReference_c target,
    ClassQueryInterface_c test)
{
    return getManyCL_ICsOnR4700(target, null, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4700(ImportedReference_c target)
{
    return getManyCL_ICsOnR4700(target, null, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR4700(ImportedReference_c target, boolean loadComponent)
{
    return getManyCL_ICsOnR4700(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ComponentInstance_c> backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963 = new ArrayList<ComponentInstance_c>();

public void setComponentInstanceOrderInChildListR2963(ComponentInstance_c target, int index) {
	unrelateAcrossR2963From(target);
	ComponentInstance_c[] elements = ComponentInstance_c.getManyI_EXEsOnR2963(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2963From((ComponentInstance_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2963To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2963To((ComponentInstance_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2963To(ComponentInstance_c target)
{
  if (target != null) {
    target.relateAcrossR2963To(this, true) ;
  }
}

public void relateAcrossR2963To(ComponentInstance_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2963To(this, notifyChanges) ;
  }
}

public void setBackPointerR2963To(ComponentInstance_c target)
{
  	synchronized (backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963) {
		backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963.add(target);
	}
}

public void unrelateAcrossR2963From(ComponentInstance_c target)
{
  if (target != null) {
    target.unrelateAcrossR2963From(this, true) ;
  }
}

public void unrelateAcrossR2963From(ComponentInstance_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2963From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2963To(ComponentInstance_c target)
{
  synchronized (backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963) {
	    backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963.remove(target);
	}
}

public static ComponentReference_c getOneCL_ICOnR2963(ComponentInstance_c [] targets)
{
    return getOneCL_ICOnR2963(targets, null);
}

public static ComponentReference_c getOneCL_ICOnR2963(ComponentInstance_c [] targets, ClassQueryInterface_c test)
{
    return getOneCL_ICOnR2963(targets, test, true);
}

public static ComponentReference_c getOneCL_ICOnR2963(ComponentInstance_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ComponentReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ComponentReference_c candidate_val = getOneCL_ICOnR2963(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneCL_ICOnR2963(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ComponentReference_c getOneCL_ICOnR2963(ComponentInstance_c target)
{
	return getOneCL_ICOnR2963(target, true);
}
public static ComponentReference_c getOneCL_ICOnR2963(ComponentInstance_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsVerifyingInstanceOfComponentReference ;
  } else {
    return null;
  }
}

public static ComponentReference_c [] getManyCL_ICsOnR2963(ComponentInstance_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyCL_ICsOnR2963(targets, test, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR2963(ComponentInstance_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ComponentReference_c[0];
  
  
  LinkedHashSet<ComponentReference_c> elementsSet = new LinkedHashSet<ComponentReference_c>();
  for (int i = 0; i < targets.length; i++) {
    ComponentReference_c associate = targets[i].IsVerifyingInstanceOfComponentReference;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ComponentReference_c[] result = new ComponentReference_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ComponentReference_c [] getManyCL_ICsOnR2963(ComponentInstance_c [] targets)
{
  return getManyCL_ICsOnR2963(targets, null);
}

public static ComponentReference_c [] getManyCL_ICsOnR2963(ComponentInstance_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ComponentInstance_c [] targetArray = new ComponentInstance_c[1];
    targetArray[0] = target;
    return getManyCL_ICsOnR2963(targetArray, test, loadComponent);
  } else {
    ComponentReference_c [] result = new ComponentReference_c [0] ;
    return result ;
  }
  
}

public static ComponentReference_c [] getManyCL_ICsOnR2963(ComponentInstance_c target,
    ClassQueryInterface_c test)
{
    return getManyCL_ICsOnR2963(target, null, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR2963(ComponentInstance_c target)
{
    return getManyCL_ICsOnR2963(target, null, true);
}

public static ComponentReference_c [] getManyCL_ICsOnR2963(ComponentInstance_c target, boolean loadComponent)
{
    return getManyCL_ICsOnR2963(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R8001
      PackageableElement_c relInst57293 = (PackageableElement_c) baseRoot.getInstanceList(PackageableElement_c.class).get(new Object[] {m_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst57293 == null) {
      			relInst57293 = (PackageableElement_c) Ooaofooa.getDefaultInstance().getInstanceList(PackageableElement_c.class).get(new Object[] {m_id});
      		}
			if (relInst57293 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst57293 = (PackageableElement_c) roots[i].getInstanceList(PackageableElement_c.class).get(new Object[] {m_id});
					if (relInst57293 != null)
						break;
				}
			}
			//synchronized
      if ( relInst57293 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst57293) && !isProxy())) {
	      relInst57293.relateAcrossR8001To(this, notifyChanges);
	  }
	  }
	          

	if (RepresentsComponent == null) {          
      // R4201
      Component_c relInst57294 = (Component_c) baseRoot.getInstanceList(Component_c.class).get(new Object[] {m_assignedcomp_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst57294 == null) {
      			relInst57294 = (Component_c) Ooaofooa.getDefaultInstance().getInstanceList(Component_c.class).get(new Object[] {m_assignedcomp_id});
      		}
			if (relInst57294 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst57294 = (Component_c) roots[i].getInstanceList(Component_c.class).get(new Object[] {m_assignedcomp_id});
					if (relInst57294 != null)
						break;
				}
			}
			//synchronized
      if ( relInst57294 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst57294) && !isProxy())) {
	      relInst57294.relateAcrossR4201To(this, notifyChanges);
	  }
	  }
	}
	          

	if (NestedInComponent == null) {          
      // R4205
      Component_c relInst57295 = (Component_c) baseRoot.getInstanceList(Component_c.class).get(new Object[] {m_parentcomp_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst57295 == null) {
      			relInst57295 = (Component_c) Ooaofooa.getDefaultInstance().getInstanceList(Component_c.class).get(new Object[] {m_parentcomp_id});
      		}
			if (relInst57295 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst57295 = (Component_c) roots[i].getInstanceList(Component_c.class).get(new Object[] {m_parentcomp_id});
					if (relInst57295 != null)
						break;
				}
			}
			//synchronized
      if ( relInst57295 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst57295) && !isProxy())) {
	      relInst57295.relateAcrossR4205To(this, notifyChanges);
	  }
	  }
	}
	          

	if (ExistsInComponentPackage == null) {          
      // R4605
      ComponentPackage_c relInst57296 = (ComponentPackage_c) baseRoot.getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst57296 == null) {
      			relInst57296 = (ComponentPackage_c) Ooaofooa.getDefaultInstance().getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
      		}
			if (relInst57296 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst57296 = (ComponentPackage_c) roots[i].getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
					if (relInst57296 != null)
						break;
				}
			}
			//synchronized
      if ( relInst57296 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst57296) && !isProxy())) {
	      relInst57296.relateAcrossR4605To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R8001
      // PE_PE
		  inst=IsSupertypePackageableElement;
			unrelateAcrossR8001From(IsSupertypePackageableElement, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4201
      // C_C
		  inst=RepresentsComponent;
			unrelateAcrossR4201From(RepresentsComponent, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4205
      // C_C
		  inst=NestedInComponent;
			unrelateAcrossR4205From(NestedInComponent, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4605
      // CP_CP
		  inst=ExistsInComponentPackage;
			unrelateAcrossR4605From(ExistsInComponentPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ComponentReference_c inst = (ComponentReference_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ComponentReference_c ComponentReferenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ComponentReference_c result=findComponentReferenceInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,ComponentReference_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findComponentReferenceInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static ComponentReference_c findComponentReferenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ComponentReference_c x = (ComponentReference_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static ComponentReference_c ComponentReferenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ComponentReferenceInstance(modelRoot,test,true);
  }
  
  public static ComponentReference_c ComponentReferenceInstance(ModelRoot modelRoot)
  {
	 return ComponentReferenceInstance(modelRoot,null,true);
  }

  public static ComponentReference_c [] ComponentReferenceInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, ComponentReference_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(ComponentReference_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ComponentReference_c x = (ComponentReference_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ComponentReference_c[] ret_set = new ComponentReference_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ComponentReference_c[0];
			}		
		} 
  }
  public static ComponentReference_c [] ComponentReferenceInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ComponentReferenceInstances(modelRoot,test,true);
  }
  public static ComponentReference_c [] ComponentReferenceInstances(ModelRoot modelRoot)
  {
	return ComponentReferenceInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Component Reference.dispose call: ";
	PackageableElement_c testR8001Inst8 = PackageableElement_c.getOnePE_PEOnR8001(this, false);

	if ( testR8001Inst8 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "8001 ";
	}
	Component_c testR4201Inst = Component_c.getOneC_COnR4201(this, false);

	if ( testR4201Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4201 ";
	}
	Component_c testR4205Inst = Component_c.getOneC_COnR4205(this, false);

	if ( testR4205Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4205 ";
	}
	ComponentPackage_c testR4605Inst = ComponentPackage_c.getOneCP_CPOnR4605(this, false);

	if ( testR4605Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4605 ";
	}
	ImportedReference_c testR4700Inst = ImportedReference_c.getOneCL_IIROnR4700(this, false);

	if ( testR4700Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "4700 ";	
	}
	ComponentInstance_c testR2963Inst = ComponentInstance_c.getOneI_EXEOnR2963(this, false);

	if ( testR2963Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2963 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Component Reference", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("component_package_id")){
         return true;
      }
      if(attributeName.equals("assignedcomp_id")){
         return true;
      }
      if(attributeName.equals("parentcomp_id")){
         return true;
      }
      if(attributeName.equals("id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getId();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getIdCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public int getMult()
  {
    return m_mult ;
  }


  public void setMult(int newValue)
  {
    if(m_mult == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Mult", new Integer(m_mult), new Integer(newValue),true);

   m_mult = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getClassifiername()
  {
    return m_classifiername ;
  }


  public void setClassifiername(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_classifiername)){
	        return;
	    }
	}else if(m_classifiername != null){
	    if(m_classifiername.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Classifiername", m_classifiername, newValue,true); 
   m_classifiername = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getName()
  {
ModelRoot modelRoot = getModelRoot();
String       v_result = Getcachedname() ;


if ( (Isassigned()) )
{

Component_c v_comp = Component_c.getOneC_COnR4201(this);


if ( (  !Util_c.Isproxy(			    
v_comp.Converttoinstance())) )
{

v_result = v_comp.Getpath(			    
true			    
,"") ;


if ( (! getClassifiername().equals("")) )
{

v_result = v_result + ":" + getClassifiername() ;



}


}


}

else
{

v_result = "Unassigned Imported Component" ;



}

Setcachedname(			    
v_result ) ;


return v_result;



  }


  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getComponent_package_idLongBased()
  {
    if ( ExistsInComponentPackage != null )
    {
      return ExistsInComponentPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_package_id()
  {
    if ( ExistsInComponentPackage != null )
    {
      return ExistsInComponentPackage.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_package_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_package_id) )
      return m_component_package_id;
    else
      return getComponent_package_id();
  }
  
  public void setComponent_package_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_package_id)){
	        return;
	    }
	}else if(m_component_package_id != null){
	    if(m_component_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_package_id", m_component_package_id, newValue,true); 
   m_component_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getAssignedcomp_idLongBased()
  {
    if ( RepresentsComponent != null )
    {
      return RepresentsComponent.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getAssignedcomp_id()
  {
    if ( RepresentsComponent != null )
    {
      return RepresentsComponent.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getAssignedcomp_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_assignedcomp_id) )
      return m_assignedcomp_id;
    else
      return getAssignedcomp_id();
  }
  
  public void setAssignedcomp_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_assignedcomp_id)){
	        return;
	    }
	}else if(m_assignedcomp_id != null){
	    if(m_assignedcomp_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Assignedcomp_id", m_assignedcomp_id, newValue,true); 
   m_assignedcomp_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getParentcomp_idLongBased()
  {
    if ( NestedInComponent != null )
    {
      return NestedInComponent.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getParentcomp_id()
  {
    if ( NestedInComponent != null )
    {
      return NestedInComponent.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getParentcomp_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_parentcomp_id) )
      return m_parentcomp_id;
    else
      return getParentcomp_id();
  }
  
  public void setParentcomp_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_parentcomp_id)){
	        return;
	    }
	}else if(m_parentcomp_id != null){
	    if(m_parentcomp_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Parentcomp_id", m_parentcomp_id, newValue,true); 
   m_parentcomp_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getIdLongBased()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getId()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_id();
    }
    return m_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypePackageableElement != null );
 
 }                  

  public java.util.UUID getIdCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_id) )
      return m_id;
    else
      return getId();
  }
  
  public void setId(java.util.UUID newValue)
  {
   m_id = IdAssigner.preprocessUUID(newValue);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Component Reference", //$NON-NLS-1$
	  " Operation entered: Component Reference::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ComponentReference_c [] objs = ComponentReference_c.ComponentReferenceInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Component Reference", //$NON-NLS-1$
	  " Operation entered: Component Reference::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ComponentReference_c_test57298_c implements ClassQueryInterface_c
    {
	  ComponentReference_c_test57298_c( java.util.UUID            p57299 ) {
	  m_p57299 = p57299;
	  }
	  private java.util.UUID             m_p57299; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentReference_c selected = (ComponentReference_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p57299));
	      return retval;
	  }
    }

    ComponentReference_c [] objs57297 = 
    ComponentReference_c.ComponentReferenceInstances(modelRoot, new ComponentReference_c_test57298_c(getId())) ;

    if ( (  (objs57297.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Reference", //$NON-NLS-1$
           "Consistency: Object: Component Reference: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs57297.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Reference: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs57297.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs57297.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Reference", //$NON-NLS-1$
           "Consistency: Object: Component Reference: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs57297.length )  + " Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Reference: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs57297.length )  + " Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Component Reference is a referring class in association: rel.Numb = 4605
          // The participating class is: Component Package
    class ComponentPackage_c_test57303_c implements ClassQueryInterface_c
    {
	  ComponentPackage_c_test57303_c( java.util.UUID            p57304 ) {
	  m_p57304 = p57304;
	  }
	  private java.util.UUID             m_p57304; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentPackage_c selected = (ComponentPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p57304));
	      return retval;
	  }
    }

    ComponentPackage_c [] objs57302 = 
    ComponentPackage_c.ComponentPackageInstances(modelRoot, new ComponentPackage_c_test57303_c(getComponent_package_id())) ;

    if ( (  (objs57302.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Reference", //$NON-NLS-1$
           "Consistency: Object: Component Reference: Association: 4605: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs57302.length )  + " Component_Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Reference: Association: 4605: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs57302.length )  + " Component_Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Component Reference is a referring class in association: rel.Numb = 4201
          // The participating class is: Component
    class Component_c_test57306_c implements ClassQueryInterface_c
    {
	  Component_c_test57306_c( java.util.UUID            p57307 ) {
	  m_p57307 = p57307;
	  }
	  private java.util.UUID             m_p57307; 
	  public boolean evaluate (Object candidate)
	  {
	      Component_c selected = (Component_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p57307));
	      return retval;
	  }
    }

    Component_c [] objs57305 = 
    Component_c.ComponentInstances(modelRoot, new Component_c_test57306_c(getAssignedcomp_id())) ;

    if ( (  (objs57305.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Reference", //$NON-NLS-1$
           "Consistency: Object: Component Reference: Association: 4201: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs57305.length )  + " AssignedComp_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Reference: Association: 4201: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs57305.length )  + " AssignedComp_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Component Reference is a referring class in association: rel.Numb = 4205
          // The participating class is: Component
    class Component_c_test57309_c implements ClassQueryInterface_c
    {
	  Component_c_test57309_c( java.util.UUID            p57310 ) {
	  m_p57310 = p57310;
	  }
	  private java.util.UUID             m_p57310; 
	  public boolean evaluate (Object candidate)
	  {
	      Component_c selected = (Component_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p57310));
	      return retval;
	  }
    }

    Component_c [] objs57308 = 
    Component_c.ComponentInstances(modelRoot, new Component_c_test57309_c(getParentcomp_id())) ;

    if ( (  (objs57308.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Reference", //$NON-NLS-1$
           "Consistency: Object: Component Reference: Association: 4205: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs57308.length )  + " ParentComp_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Reference: Association: 4205: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs57308.length )  + " ParentComp_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Component Reference is a subtype in association: rel.Numb = 8001
          // The supertype class is: Packageable Element
         //    Note: The consistency test for this supertype has been removed 
         //          until generic package _migration_ is complete.
          // Component Reference is a participating class in association: rel.Numb = 4700
             // Object: Imported Reference
          // Component Reference is a participating class in association: rel.Numb = 2963
             // Object: Component Instance
    return retval;
  }


  // declare transform functions
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("can")) )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(this));


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( ((p_Value.equals("assign spec pkg"))) )
{

if ( (v_isInGenericPackage) )
{

return false;



}

if ( (Isassigned()) )
{

return false;



}

boolean      v_nestedInComponent = false ;


Component_c v_container = Component_c.getOneC_COnR4205(this);


ComponentPackage_c v_thisPackage = ComponentPackage_c.getOneCP_CPOnR4605(this);


if ( (  (v_thisPackage == null)) )
{

if ( (  (v_container != null)) )
{

v_nestedInComponent = true ;


ComponentPackage_c v_compPackage = ComponentPackage_c.getOneCP_CPOnR4604(v_container);


while ( (  (v_thisPackage == null)) )
{

v_thisPackage = ComponentPackage_c.getOneCP_CPOnR4604(v_container);


if ( (  (v_thisPackage == null)) )
{

v_container = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_container));



}


}


}


}

if ( (  (v_thisPackage != null)) )
{

java.util.UUID         v_comp_id = Gd_c.Null_unique_id() ;


if ( (  (v_container != null)) )
{

v_comp_id = v_container.getId() ;



}

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(v_thisPackage);


if ( (  (v_system != null)) )
{

ComponentPackage_c [] v_packages = ComponentPackage_c.getManyCP_CPsOnR4606(v_system);


if ( (  !v_nestedInComponent) )
{

  class ComponentPackage_test55920_c implements ClassQueryInterface_c
  {
	ComponentPackage_test55920_c( java.util.UUID         p55921 ) {
		m_p55921 = p55921;
	}
	private java.util.UUID         m_p55921;
	public boolean evaluate (Object candidate)
	{
		ComponentPackage_c selected = (ComponentPackage_c)candidate;
		return ! selected.getPackage_id().equals(m_p55921) ;
	}
  }
v_packages = ComponentPackage_c.getManyCP_CPsOnR4606(v_system, new ComponentPackage_test55920_c(v_thisPackage.getPackage_id()));



}

  class Component_test55922_c implements ClassQueryInterface_c
  {
	Component_test55922_c( java.util.UUID         p55923 ) {
		m_p55923 = p55923;
	}
	private java.util.UUID         m_p55923;
	public boolean evaluate (Object candidate)
	{
		Component_c selected = (Component_c)candidate;
		return (! selected.getId().equals(m_p55923)) ;
	}
  }
Component_c [] v_comps = Component_c.getManyC_CsOnR4604(v_packages, new Component_test55922_c(v_comp_id));


boolean      v_foundNoComp = false ;


if ( (Isassigned()) )
{

Component_c v_currentComp = Component_c.getOneC_COnR4201(this);


Component_c  v_comp = null;
for ( int i55365 = 0; i55365 < v_comps.length; i55365++)
{
  v_comp = v_comps[i55365] ;

if ( (Componenthasmatchinginterfaces(			    
v_comp.getId()) && (  !(v_comp.getId().equals(v_currentComp.getId())))) )
{

return true;



}


}


}

else
{

Component_c  v_comp = null;
for ( int i55366 = 0; i55366 < v_comps.length; i55366++)
{
  v_comp = v_comps[i55366] ;

if ( (Componenthasmatchinginterfaces(			    
v_comp.getId())) )
{

return true;



}


}


}


}


}


}

else if ( (p_Value.equals("assign generic pkg")) )
{

if ( (  !v_isInGenericPackage) )
{

return false;



}

if ( (Isassigned()) )
{

return false;



}

if ( (  (v_package == null)) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,""			    
,v_component.getId()			    
,Elementtypeconstants_c.COMPONENT ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,""			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.COMPONENT ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

  class SearchResultSet_test55924_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.COMPONENT ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test55924_c());


PackageableElement_c [] v_results = PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet));


if (   (v_package == null) )
{

  class ComponentResultSet_test55925_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.COMPONENT ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test55925_c());


v_results = PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet));



}

Component_c [] v_comps = Component_c.getManyC_CsOnR8001(v_results);


if ( (Isassigned()) )
{

Component_c v_currentComp = Component_c.getOneC_COnR4201(this);


Component_c  v_comp = null;
for ( int i55367 = 0; i55367 < v_comps.length; i55367++)
{
  v_comp = v_comps[i55367] ;

if ( (Componenthasmatchinginterfaces(			    
v_comp.getId()) &&   !v_comp.Iscontainedby(			    
v_comp.getId()) &&   !(v_comp.getId().equals(v_currentComp.getId()))) )
{

return true;



}


}


}

else
{

Component_c  v_comp = null;
for ( int i55368 = 0; i55368 < v_comps.length; i55368++)
{
  v_comp = v_comps[i55368] ;

java.util.UUID         v_candidatePkg = v_comp.Getpackageid() ;


if ( (Componenthasmatchinginterfaces(			    
v_comp.getId()) &&   !v_comp.Iscontainedby(			    
v_comp.getId())) )
{

return true;



}


}


}

return false;



}

else if ( (p_Value.equals("unassign")) )
{

return Isassigned();



}

else if ( (p_Value.equals("launchVerifier")) )
{

v_component = Component_c.getOneC_COnR4201(this);


ComponentInstance_c v_engine = ComponentInstance_c.getOneI_EXEOnR2963(this);


if ( ((  (v_component != null)) && (  (v_engine == null))) )
{

return true;



}

else
{

return false;



}


}


}

return false;



   } // End actionFilter
  public  boolean      Isassigned()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Isassigned") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4201(this);


return   (v_component != null);



   } // End isAssigned
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_comp = Component_c.getOneC_COnR4201(this);


if ( (  (v_comp != null)) )
{

this.unrelateAcrossR4201From(v_comp);



}

v_comp = Component_c.getOneC_COnR4205(this);


if ( (  (v_comp != null)) )
{

this.unrelateAcrossR4205From(v_comp);



}

ImportedReference_c [] v_importedRefs = ImportedReference_c.getManyCL_IIRsOnR4700(this);


ImportedReference_c  v_importedRef = null;
for ( int i55369 = 0; i55369 < v_importedRefs.length; i55369++)
{
  v_importedRef = v_importedRefs[i55369] ;

if (v_importedRef != null) {
v_importedRef.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ComponentPackage_c v_package = ComponentPackage_c.getOneCP_CPOnR4605(this);


if ( (  (v_package != null)) )
{

this.unrelateAcrossR4605From(v_package);



}

ComponentInstance_c [] v_executionEngines = ComponentInstance_c.getManyI_EXEsOnR2963(this);


ComponentInstance_c  v_engine = null;
for ( int i55370 = 0; i55370 < v_executionEngines.length; i55370++)
{
  v_engine = v_executionEngines[i55370] ;

if (v_engine != null) {
v_engine.unrelateAcrossR2963From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_engine != null) {
v_engine.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


if ( (  (v_pe != null)) )
{

this.unrelateAcrossR8001From(v_pe);


if (v_pe != null) {
v_pe.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Assigntocomp(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Assigntocomp") ; 
               final ModelRoot modelRoot = getModelRoot();
ComponentPackage_c v_componentPackage = (ComponentPackage_c) modelRoot.getInstanceList(ComponentPackage_c.class).getGlobal(null, Gd_c.Null_unique_id());


Component_c v_comp = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, Gd_c.Null_unique_id());


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_contPackage = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_contComponent = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage = (  (v_contPackage != null) ||   (v_contComponent != null)) ;


if ( v_isInGenericPackage )
{

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Id);


v_comp = Component_c.getOneC_COnR8001(v_pe);



}

else
{

v_componentPackage = ComponentPackage_c.getOneCP_CPOnR4605(this);


if ( (  (v_componentPackage == null)) )
{

Component_c v_component = Component_c.getOneC_COnR4205(this);


if ( (  (v_component != null)) )
{

while ( (  (v_componentPackage == null)) )
{

v_componentPackage = ComponentPackage_c.getOneCP_CPOnR4604(v_component);


v_component = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_component));



}


}


}

if ( (  (v_componentPackage != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(v_componentPackage);


  class Component_test55926_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Component_c selected = (Component_c)candidate;
		return selected.getId().equals(p_Id) ;
	}
  }
v_comp = Component_c.getOneC_COnR4604(ComponentPackage_c.getManyCP_CPsOnR4606(v_system), new Component_test55926_c());



}


}

if ( (  (v_comp != null)) )
{

if ( (Isassigned()) )
{

Component_c v_existingComp = Component_c.getOneC_COnR4201(this);


this.unrelateAcrossR4201From(v_existingComp);


InterfaceReference_c [] v_formalInterfaces = InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_comp));


InterfaceReference_c  v_formalInterface = null;
for ( int i55371 = 0; i55371 < v_formalInterfaces.length; i55371++)
{
  v_formalInterface = v_formalInterfaces[i55371] ;

ImportedReference_c [] v_existingImportRefs = ImportedReference_c.getManyCL_IIRsOnR4700(this);


ImportedReference_c  v_existingImportRef = null;
for ( int i55372 = 0; i55372 < v_existingImportRefs.length; i55372++)
{
  v_existingImportRef = v_existingImportRefs[i55372] ;

InterfaceReference_c v_existingRef = InterfaceReference_c.getOneC_IROnR4701(v_existingImportRef);


Interface_c v_existingIface = Interface_c.getOneC_IOnR4012(v_existingRef);


boolean      v_skipDispose = false ;


if ( (  (v_existingIface != null) &&   !Util_c.Isproxy(			    
v_existingIface.Converttoinstance())) )
{

v_skipDispose = true ;



}

if ( (Util_c.Isproxy(			    
v_existingRef.Converttoinstance()) &&   !v_skipDispose) )
{

if (v_existingImportRef != null) {
v_existingImportRef.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


continue;



}

if ( (v_existingRef.getFormal_interface_id().equals(v_formalInterface.getFormal_interface_id())) )
{

Component_c v_testComp = Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(v_existingRef));


if ( (v_testComp != v_comp) )
{

  class ImportedReference_test55927_c implements ClassQueryInterface_c
  {
	ImportedReference_test55927_c( java.util.UUID         p55928 ) {
		m_p55928 = p55928;
	}
	private java.util.UUID         m_p55928;
	public boolean evaluate (Object candidate)
	{
		ImportedReference_c selected = (ImportedReference_c)candidate;
		return (selected.getRef_id().equals(m_p55928)) ;
	}
  }
ImportedReference_c v_importedRef = ImportedReference_c.getOneCL_IIROnR4700(this, new ImportedReference_test55927_c(v_existingRef.getId()));


if (v_importedRef != null) {
v_importedRef.unrelateAcrossR4701From(v_existingRef);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_importedRef != null) {
  v_importedRef.relateAcrossR4701To(v_formalInterface);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Provision_c v_currentProvision = Provision_c.getOneC_POnR4009(v_existingRef);


if ( (  (v_currentProvision != null)) )
{

ImportedProvision_c v_importedPro = ImportedProvision_c.getOneCL_IPOnR4703(v_importedRef);


Satisfaction_c [] v_satisfactions = Satisfaction_c.getManyC_SFsOnR4705(ImportedProvisionInSatisfaction_c.getManyCL_IPINSsOnR4705(v_importedPro));


Satisfaction_c  v_satisfaction = null;
for ( int i55373 = 0; i55373 < v_satisfactions.length; i55373++)
{
  v_satisfaction = v_satisfactions[i55373] ;

ImportedProvisionInSatisfaction_c v_ipins = ImportedProvisionInSatisfaction_c.getOneCL_IPINSOnR4705(v_satisfaction);


Provision_c v_provision = Provision_c.getOneC_POnR4009(v_formalInterface);


Requirement_c v_otherReq = Requirement_c.getOneC_ROnR4002(v_satisfaction);


if (v_satisfaction != null) {
v_satisfaction.unrelateAcrossR4002From( v_currentProvision ) ; v_satisfaction.unrelateAcrossR4002From( v_otherReq ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_satisfaction != null) {
  v_satisfaction.relateAcrossR4002To( v_provision ) ;   v_satisfaction.relateAcrossR4002To( v_otherReq ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}


}

else
{

Requirement_c v_currentRequirement = Requirement_c.getOneC_ROnR4009(v_existingRef);


ImportedRequirement_c v_importedReq = ImportedRequirement_c.getOneCL_IROnR4703(v_importedRef);


Satisfaction_c v_satisfaction = Satisfaction_c.getOneC_SFOnR4706(v_importedReq);


if ( (  (v_satisfaction != null)) )
{

Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(v_formalInterface);


Provision_c v_otherPro = Provision_c.getOneC_POnR4002(v_satisfaction);


if (v_satisfaction != null) {
v_satisfaction.unrelateAcrossR4002From( v_currentRequirement ) ; v_satisfaction.unrelateAcrossR4002From( v_otherPro ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_satisfaction != null) {
  v_satisfaction.relateAcrossR4002To( v_requirement ) ;   v_satisfaction.relateAcrossR4002To( v_otherPro ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}


}

break;



}


}


}


}


}

  this.relateAcrossR4201To(v_comp);


InterfaceReference_c [] v_formalInterfaces = InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_comp));


InterfaceReference_c  v_formalInterface = null;
for ( int i55374 = 0; i55374 < v_formalInterfaces.length; i55374++)
{
  v_formalInterface = v_formalInterfaces[i55374] ;

if ( (v_formalInterface.Isformal()) )
{

  class InterfaceReference_test55929_c implements ClassQueryInterface_c
  {
	InterfaceReference_test55929_c( java.util.UUID         p55930 ) {
		m_p55930 = p55930;
	}
	private java.util.UUID         m_p55930;
	public boolean evaluate (Object candidate)
	{
		InterfaceReference_c selected = (InterfaceReference_c)candidate;
		return (selected.getId().equals(m_p55930)) ;
	}
  }
InterfaceReference_c v_existingImportRef = InterfaceReference_c.getOneC_IROnR4701(ImportedReference_c.getManyCL_IIRsOnR4700(this), new InterfaceReference_test55929_c(v_formalInterface.getId()));


if ( (  (v_existingImportRef == null)) )
{

Provision_c v_provision = Provision_c.getOneC_POnR4009(v_formalInterface);


ImportedReference_c v_newImportedRef = new ImportedReference_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_newImportedRef));


if ( (  (v_provision != null)) )
{

ImportedProvision_c v_importedPro = new ImportedProvision_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_importedPro));


if (v_importedPro != null) {
  v_importedPro.relateAcrossR4703To(v_newImportedRef);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

ImportedRequirement_c v_importedReq = new ImportedRequirement_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_importedReq));


if (v_importedReq != null) {
  v_importedReq.relateAcrossR4703To(v_newImportedRef);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_newImportedRef != null) {
  v_newImportedRef.relateAcrossR4700To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_newImportedRef != null) {
  v_newImportedRef.relateAcrossR4701To(v_formalInterface);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


}


   } // End assignToComp
  public  void Unassign()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Unassign") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_comp = Component_c.getOneC_COnR4201(this);


if ( (  (v_comp != null)) )
{

this.unrelateAcrossR4201From(v_comp);


ImportedReference_c [] v_importedRefs = ImportedReference_c.getManyCL_IIRsOnR4700(this);


ImportedReference_c  v_importedRef = null;
for ( int i55375 = 0; i55375 < v_importedRefs.length; i55375++)
{
  v_importedRef = v_importedRefs[i55375] ;

if (v_importedRef != null) {
v_importedRef.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End unAssign
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Converttoinstance") ; 
return this;
   } // End convertToInstance
  public  String       Get_compartment_text(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Get_compartment_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


if ( (p_At == Justification_c.Center) )
{

if ( (Isassigned()) )
{

v_result = Getcachedname() ;


Component_c v_comp = Component_c.getOneC_COnR4201(this);


if ( (  !Util_c.Isproxy(			    
v_comp.Converttoinstance())) )
{

v_result = v_comp.Getpath(			    
true			    
,"") ;


if ( (! getClassifiername().equals("")) )
{

v_result = v_result + ":" + getClassifiername() ;



}

if ( (getMult() == 1) )
{

v_result = v_result + "[*]" ;



}


}

Setcachedname(			    
v_result ) ;



}

else
{

v_result = "Unassigned Component Reference" ;



}


}

return v_result;



   } // End get_compartment_text
  public  boolean      Getelidecompartmenttextatend(final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getelidecompartmenttextatend") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4201(this);


boolean      v_elideAtFront = false ;


v_elideAtFront = p_Comp_num == 1 && p_Ent_num == 0 &&   (v_component != null) ;


return v_elideAtFront;



   } // End getElideCompartmentTextAtEnd
  public  int          Get_compartments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Get_compartments") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_compartments
  public  int          Get_entries(final int          p_Comp_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Get_entries") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_entries
  public  int  Get_style()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.Component;



   } // End get_style
  public  int  Get_text_style(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Get_text_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.None;



   } // End get_text_style
  public  boolean      Manymultallowed()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Manymultallowed") ; 
               final ModelRoot modelRoot = getModelRoot();
return true;



   } // End manyMultAllowed
  public  boolean      Canassigntocompinpackage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Canassigntocompinpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


if ( (  (v_pkg != null)) )
{

return false;



}

ComponentPackage_c v_compPackage = ComponentPackage_c.getOneCP_CPOnR4605(this);


boolean      v_nestedInComponent = false ;


if ( (  (v_compPackage == null)) )
{

Component_c v_container = Component_c.getOneC_COnR4205(this);


if ( (  (v_container != null)) )
{

v_nestedInComponent = true ;


while ( (  (v_compPackage == null)) )
{

v_compPackage = ComponentPackage_c.getOneCP_CPOnR4604(v_container);


v_container = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_container));



}


}


}

if ( (v_nestedInComponent) )
{

if ( (v_compPackage.getPackage_id().equals(p_Id)) )
{

Component_c [] v_components = Component_c.getManyC_CsOnR4604(v_compPackage);


if ( (  (v_components.length) == 1) )
{

return false;



}

Component_c  v_component = null;
for ( int i55376 = 0; i55376 < v_components.length; i55376++)
{
  v_component = v_components[i55376] ;

if ( (Componenthasmatchinginterfaces(			    
v_component.getId())) )
{

return true;



}


}


}


}

else
{

if ( ((  (v_compPackage != null)) && (v_compPackage.getPackage_id().equals(p_Id))) )
{

return false;



}


}

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(v_compPackage);


  class ComponentPackage_test55931_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentPackage_c selected = (ComponentPackage_c)candidate;
		return (selected.getPackage_id().equals(p_Id)) ;
	}
  }
ComponentPackage_c v_package = ComponentPackage_c.getOneCP_CPOnR4606(v_system, new ComponentPackage_test55931_c());


Component_c [] v_comps = Component_c.getManyC_CsOnR4604(v_package);


if ( (  (v_comps.length) == 0) )
{

return false;



}

else
{

java.util.UUID         v_existingCompId = Gd_c.Null_unique_id() ;


if ( (Isassigned()) )
{

Component_c v_existingComp = Component_c.getOneC_COnR4201(this);


v_existingCompId = v_existingComp.getId() ;



}

Component_c  v_comp = null;
for ( int i55377 = 0; i55377 < v_comps.length; i55377++)
{
  v_comp = v_comps[i55377] ;

if ( (Componenthasmatchinginterfaces(			    
v_comp.getId()) && ! v_comp.getId().equals(v_existingCompId)) )
{

return true;



}


}


}

return false;



   } // End canAssignToCompInPackage
  public  boolean      Canassigntocomp(final java.util.UUID         p_Id,final boolean      p_Checkexistingtype)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Canassigntocomp") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

Package_c v_parentPackage = v_package ;


Component_c v_parentComp = v_component ;


while ( (  (v_parentPackage != null) ||   (v_parentComp != null)) )
{

if (   (v_parentComp != null) && v_parentComp.getId().equals(p_Id) )
{

return false;



}

PackageableElement_c v_parentPE = PackageableElement_c.getOnePE_PEOnR8001(v_parentPackage);


if (   (v_parentPE == null) )
{

v_parentPE = PackageableElement_c.getOnePE_PEOnR8001(v_parentComp);



}

v_parentPackage = Package_c.getOneEP_PKGOnR8000(v_parentPE);


v_parentComp = Component_c.getOneC_COnR8003(v_parentPE);



}

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


if ( (  (v_system == null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent)));



}

  class Component_test55932_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Component_c selected = (Component_c)candidate;
		return (selected.getId().equals(p_Id)) ;
	}
  }
v_component = Component_c.getOneC_COnR8001(PackageableElement_c.getManyPE_PEsOnR8000(Package_c.getManyEP_PKGsOnR1405(v_system)), new Component_test55932_c());


if ( (  (v_component != null)) )
{

java.util.UUID         v_existingCompId = Gd_c.Null_unique_id() ;


if ( (Isassigned()) )
{

Component_c v_existingComp = Component_c.getOneC_COnR4201(this);


v_existingCompId = v_existingComp.getId() ;



}

if ( (Componenthasmatchinginterfaces(			    
v_component.getId())) )
{

if ( (p_Checkexistingtype) )
{

if ( (v_component.getId().equals(v_existingCompId)) )
{

return false;



}


}

return true;



}

else
{

return false;



}


}

return true;



}

ComponentPackage_c v_compPackage = ComponentPackage_c.getOneCP_CPOnR4605(this);


if ( (  (v_compPackage == null)) )
{

Component_c v_container = Component_c.getOneC_COnR4205(this);


if ( (  (v_container != null)) )
{

while ( (  (v_compPackage == null)) )
{

v_compPackage = ComponentPackage_c.getOneCP_CPOnR4604(v_container);


if ( (  (v_compPackage != null)) )
{

if ( (v_container.getId().equals(p_Id)) )
{

return false;



}


}

v_container = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_container));



}


}


}

if ( (  (v_compPackage != null)) )
{

  class Component_test55933_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Component_c selected = (Component_c)candidate;
		return (selected.getId().equals(p_Id)) ;
	}
  }
v_component = Component_c.getOneC_COnR4604(ComponentPackage_c.getManyCP_CPsOnR4606(SystemModel_c.getManyS_SYSsOnR4606(v_compPackage)), new Component_test55933_c());


if ( (  (v_component != null)) )
{

java.util.UUID         v_existingCompId = Gd_c.Null_unique_id() ;


if ( (Isassigned()) )
{

Component_c v_existingComp = Component_c.getOneC_COnR4201(this);


v_existingCompId = v_existingComp.getId() ;



}

if ( (Componenthasmatchinginterfaces(			    
v_component.getId())) )
{

if ( (p_Checkexistingtype) )
{

if ( (v_component.getId().equals(v_existingCompId)) )
{

return false;



}


}

return true;



}

else
{

return false;



}


}


}

else
{

return false;



}

return true;



   } // End canAssignToComp
  public  int          Getimportedprovisioncount(final boolean      p_Includedelegations)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getimportedprovisioncount") ; 
               final ModelRoot modelRoot = getModelRoot();
ImportedProvision_c [] v_importedReferences = ImportedProvision_c.getManyCL_IPsOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this));


return   (v_importedReferences.length);



   } // End getImportedProvisionCount
  public  int          Getimportedrequirementcount(final boolean      p_Includedelegations)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getimportedrequirementcount") ; 
               final ModelRoot modelRoot = getModelRoot();
ImportedRequirement_c [] v_importedReferences = ImportedRequirement_c.getManyCL_IRsOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this));


return   (v_importedReferences.length);



   } // End getImportedRequirementCount
  public  java.util.UUID         Getimportedprovisionid(final boolean      p_Filterdelegations,final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getimportedprovisionid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ImportedProvision_c [] v_importedRefs = ImportedProvision_c.getManyCL_IPsOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this));


int          v_count = -1 ;


ImportedProvision_c  v_importedRef = null;
for ( int i55378 = 0; i55378 < v_importedRefs.length; i55378++)
{
  v_importedRef = v_importedRefs[i55378] ;

v_count = v_count + 1 ;


if ( (v_count == p_Index) )
{

return v_importedRef.getId();



}


}

return v_id;



   } // End getImportedProvisionID
  public  java.util.UUID         Getimportedrequirementid(final boolean      p_Filterdelegations,final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getimportedrequirementid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ImportedRequirement_c [] v_importedRefs = ImportedRequirement_c.getManyCL_IRsOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this));


int          v_count = -1 ;


ImportedRequirement_c  v_importedRef = null;
for ( int i55379 = 0; i55379 < v_importedRefs.length; i55379++)
{
  v_importedRef = v_importedRefs[i55379] ;

v_count = v_count + 1 ;


if ( (v_count == p_Index) )
{

return v_importedRef.getId();



}


}

return v_id;



   } // End getImportedRequirementID
  public  boolean      Hasimportedrequirement(final boolean      p_Considerdelegations,final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Hasimportedrequirement") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ImportedRequirement_test55934_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ImportedRequirement_c selected = (ImportedRequirement_c)candidate;
		return (selected.getId().equals(p_Id)) ;
	}
  }
ImportedRequirement_c v_importedReq = ImportedRequirement_c.getOneCL_IROnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this), new ImportedRequirement_test55934_c());


if ( (  (v_importedReq != null)) )
{

if ( (p_Considerdelegations) )
{

Delegation_c v_delegation = Delegation_c.getOneC_DGOnR4704(ImportedReference_c.getOneCL_IIROnR4703(v_importedReq));


if ( (  (v_delegation != null)) )
{

return false;



}


}

return true;



}

return false;



   } // End hasImportedRequirement
  public  boolean      Hasimportedprovision(final boolean      p_Considerdelegations,final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Hasimportedprovision") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ImportedProvision_test55935_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ImportedProvision_c selected = (ImportedProvision_c)candidate;
		return (selected.getId().equals(p_Id)) ;
	}
  }
ImportedProvision_c v_importedPro = ImportedProvision_c.getOneCL_IPOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this), new ImportedProvision_test55935_c());


if ( (  (v_importedPro != null)) )
{

if ( (p_Considerdelegations) )
{

Delegation_c v_delegation = Delegation_c.getOneC_DGOnR4704(ImportedReference_c.getOneCL_IIROnR4703(v_importedPro));


if ( (  (v_delegation != null)) )
{

return false;



}


}

return true;



}

return false;



   } // End hasImportedProvision
  public  java.util.UUID         Getimportedprovisionprovisionid(final boolean      p_Filterdelegations,final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getimportedprovisionprovisionid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ImportedProvision_c [] v_importedRefs = ImportedProvision_c.getManyCL_IPsOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this));


int          v_count = -1 ;


ImportedProvision_c  v_importedRef = null;
for ( int i55380 = 0; i55380 < v_importedRefs.length; i55380++)
{
  v_importedRef = v_importedRefs[i55380] ;

v_count = v_count + 1 ;


if ( (v_count == p_Index) )
{

Provision_c v_provision = Provision_c.getOneC_POnR4009(InterfaceReference_c.getOneC_IROnR4701(ImportedReference_c.getOneCL_IIROnR4703(v_importedRef)));


Delegation_c v_delegation = Delegation_c.getOneC_DGOnR4704(ImportedReference_c.getOneCL_IIROnR4703(v_importedRef));


if ( (  (v_delegation != null)) )
{

return v_delegation.getId();



}

if ( (  (v_provision != null)) )
{

return v_provision.getProvision_id();



}


}


}

return v_id;



   } // End getImportedProvisionProvisionID
  public  java.util.UUID         Getimportedrequirementrequirementid(final boolean      p_Filterdelegations,final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getimportedrequirementrequirementid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ImportedRequirement_c [] v_importedRefs = ImportedRequirement_c.getManyCL_IRsOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this));


int          v_count = -1 ;


ImportedRequirement_c  v_importedRef = null;
for ( int i55381 = 0; i55381 < v_importedRefs.length; i55381++)
{
  v_importedRef = v_importedRefs[i55381] ;

v_count = v_count + 1 ;


if ( (v_count == p_Index) )
{

Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(InterfaceReference_c.getOneC_IROnR4701(ImportedReference_c.getOneCL_IIROnR4703(v_importedRef)));


Delegation_c v_delegation = Delegation_c.getOneC_DGOnR4704(ImportedReference_c.getOneCL_IIROnR4703(v_importedRef));


if ( (  (v_delegation != null)) )
{

return v_delegation.getId();



}

if ( (  (v_requirement != null)) )
{

return v_requirement.getRequirement_id();



}


}


}

return v_id;



   } // End getImportedRequirementRequirementID
  public  boolean      Componenthasmatchinginterfaces(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Componenthasmatchinginterfaces") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (  !Isassigned()) )
{

return true;



}

else
{

ImportedReference_c v_importedRef = ImportedReference_c.getOneCL_IIROnR4700(this);


if ( (  (v_importedRef == null)) )
{

return true;



}


}

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_comp = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_comp != null) ;


ComponentPackage_c v_compPackage = ComponentPackage_c.getOneCP_CPOnR4605(this);


if ( (  (v_compPackage == null) &&   !v_isInGenericPackage) )
{

Component_c v_container = Component_c.getOneC_COnR4205(this);


if ( (  (v_container != null)) )
{

while ( (  (v_compPackage == null)) )
{

v_compPackage = ComponentPackage_c.getOneCP_CPOnR4604(v_container);


v_container = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_container));



}


}


}

if ( (  (v_compPackage != null) || v_isInGenericPackage) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(v_compPackage);


  class Component_test55936_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Component_c selected = (Component_c)candidate;
		return (selected.getId().equals(p_Id)) ;
	}
  }
Component_c v_component = Component_c.getOneC_COnR4604(ComponentPackage_c.getManyCP_CPsOnR4606(SystemModel_c.getManyS_SYSsOnR4606(v_compPackage)), new Component_test55936_c());


if ( (v_isInGenericPackage) )
{

PackageableElement_c v_compPe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Id);


v_component = Component_c.getOneC_COnR8001(v_compPe);



}

if ( (  (v_component != null) &&   (v_system != null)) )
{

InterfaceReference_c [] v_importedRefs = InterfaceReference_c.getManyC_IRsOnR4701(ImportedReference_c.getManyCL_IIRsOnR4700(this));


InterfaceReference_c  v_importedRef = null;
for ( int i55382 = 0; i55382 < v_importedRefs.length; i55382++)
{
  v_importedRef = v_importedRefs[i55382] ;

Interface_c v_importedInterface = Interface_c.getOneC_IOnR4012(v_importedRef);


Interface_c [] v_compInterfaces = Interface_c.getManyC_IsOnR4012(InterfaceReference_c.getManyC_IRsOnR4009(Provision_c.getManyC_PsOnR4009(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component)))));


Provision_c v_provision = Provision_c.getOneC_POnR4009(v_importedRef);


if ( (  (v_provision == null)) )
{

v_compInterfaces = Interface_c.getManyC_IsOnR4012(InterfaceReference_c.getManyC_IRsOnR4009(Requirement_c.getManyC_RsOnR4009(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component)))));



}

if ( (  (v_compInterfaces.length) == 0) )
{

return false;



}

boolean      v_foundMatch = false ;


Interface_c  v_compInterface = null;
for ( int i55383 = 0; i55383 < v_compInterfaces.length; i55383++)
{
  v_compInterface = v_compInterfaces[i55383] ;

java.util.UUID         v_id = v_importedRef.Findmatchinginterface(			    
p_Id			    
,v_system.getSys_id()) ;


if ( (v_id.equals(v_compInterface.getId())) )
{

v_foundMatch = true ;



}


}

if ( (  !v_foundMatch) )
{

return false;



}


}


}


}

return true;



   } // End componentHasMatchingInterfaces
  public  boolean      Componenthasunusableinterfaces(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Componenthasunusableinterfaces") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_comp = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_comp != null) ;


if ( v_isInGenericPackage )
{

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Id);


Component_c v_candidateComponent = Component_c.getOneC_COnR8001(v_pe);


if ( (  (v_candidateComponent != null)) )
{

InterfaceReference_c [] v_irs = InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_candidateComponent));


InterfaceReference_c  v_ir = null;
for ( int i55384 = 0; i55384 < v_irs.length; i55384++)
{
  v_ir = v_irs[i55384] ;

Interface_c v_interface = Interface_c.getOneC_IOnR4012(v_ir);


if (   (v_interface != null) )
{

if (   (v_comp != null) )
{

if (v_comp != null) {
v_comp.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,v_interface.getName()			    
,v_comp.getId()			    
,Elementtypeconstants_c.INTERFACE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,v_interface.getName()			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.INTERFACE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

  class ComponentResultSet_test55937_c implements ClassQueryInterface_c
  {
	ComponentResultSet_test55937_c( String       p55938 ) {
		m_p55938 = p55938;
	}
	private String       m_p55938;
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals(m_p55938) && selected.getType() == Elementtypeconstants_c.INTERFACE ;
	}
  }
ComponentResultSet_c v_resultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_comp, new ComponentResultSet_test55937_c(v_interface.getName()));


PackageableElement_c [] v_results = PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_resultSet));


if (   (v_package != null) )
{

  class SearchResultSet_test55939_c implements ClassQueryInterface_c
  {
	SearchResultSet_test55939_c( String       p55940 ) {
		m_p55940 = p55940;
	}
	private String       m_p55940;
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals(m_p55940) && selected.getType() == Elementtypeconstants_c.INTERFACE ;
	}
  }
SearchResultSet_c v_pkgResultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test55939_c(v_interface.getName()));


v_results = PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_pkgResultSet));



}

if (   (v_results.length == 0) )
{

return true;



}


}


}

return false;



}


}

else
{

boolean      v_nested = false ;


ComponentPackage_c v_compPackage = ComponentPackage_c.getOneCP_CPOnR4605(this);


if ( (  (v_compPackage == null)) )
{

Component_c v_container = Component_c.getOneC_COnR4205(this);


if ( (  (v_container != null)) )
{

v_nested = true ;


while ( (  (v_compPackage == null)) )
{

v_compPackage = ComponentPackage_c.getOneCP_CPOnR4604(v_container);


v_container = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_container));



}


}


}

if ( (  (v_compPackage != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(v_compPackage);


  class Component_test55941_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Component_c selected = (Component_c)candidate;
		return (selected.getId().equals(p_Id)) ;
	}
  }
Component_c v_component = Component_c.getOneC_COnR4604(ComponentPackage_c.getManyCP_CPsOnR4606(v_system), new Component_test55941_c());


if ( (  (v_component != null)) )
{

InterfaceReference_c [] v_irs = InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component));


InterfaceReference_c  v_ir = null;
for ( int i55385 = 0; i55385 < v_irs.length; i55385++)
{
  v_ir = v_irs[i55385] ;

Interface_c v_interface = Interface_c.getOneC_IOnR4012(v_ir);


if ( (  (v_interface != null)) )
{

InterfacePackage_c v_interfacePkg = InterfacePackage_c.getOneIP_IPOnR4303(v_interface);


if ( (v_nested) )
{

Component_c v_container = Component_c.getOneC_COnR4205(this);


if ( (  !v_container.Interfacepackageisalongparentpath(			    
v_interfacePkg.getPackage_id())) )
{

return true;



}


}

else
{

if ( (  !v_compPackage.Interfacepackageisalongparentpath(			    
v_interfacePkg.getPackage_id())) )
{

return true;



}


}


}


}

return false;



}


}


}

return true;



   } // End componentHasUnusableInterfaces
  public  void Resolvecomponent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Resolvecomponent") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_componentProxy = Component_c.getOneC_COnR4201(this);


if ( (  (v_componentProxy != null)) && (Util_c.Isproxy(			    
v_componentProxy.Converttoinstance())) && (  !Util_c.Isproxy(			    
Converttoinstance())) )
{

String       v_name = v_componentProxy.getName() ;


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4605(this));


Component_c v_resolvedComp = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, Gd_c.Null_unique_id());


  class Component_test55942_c implements ClassQueryInterface_c
  {
	Component_test55942_c( String       p55943 ) {
		m_p55943 = p55943;
	}
	private String       m_p55943;
	public boolean evaluate (Object candidate)
	{
		Component_c selected = (Component_c)candidate;
		return (selected.getName().equals(m_p55943)) ;
	}
  }
Component_c [] v_resolvedComps = Component_c.getManyC_CsOnR4604(ComponentPackage_c.getManyCP_CPsOnR4606(v_system), new Component_test55942_c(v_name));


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

if ( (  (v_package != null)) )
{

v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);



}

else
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent));


v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);



}

PackageableElement_c v_packageableElement = PackageableElement_c.getOnePE_PEOnR8001(this);


if (v_packageableElement != null) {
v_packageableElement.Resolvecomponentrelativetoself(			    
v_name ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_resolvedComps = Component_c.getManyC_CsOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_package)));


if ( (  (v_resolvedComps.length == 0)) )
{

v_resolvedComps = Component_c.getManyC_CsOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_component)));



}


}

else
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4605(this));


if ( (  (v_system == null)) )
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4205(this)));



}

  class Component_test55944_c implements ClassQueryInterface_c
  {
	Component_test55944_c( String       p55945 ) {
		m_p55945 = p55945;
	}
	private String       m_p55945;
	public boolean evaluate (Object candidate)
	{
		Component_c selected = (Component_c)candidate;
		return (selected.getName().equals(m_p55945)) ;
	}
  }
v_resolvedComps = Component_c.getManyC_CsOnR4604(ComponentPackage_c.getManyCP_CPsOnR4606(v_system), new Component_test55944_c(v_name));


if ( (  (v_resolvedComps.length) == 0 && v_system.getUseglobals()) )
{

v_resolvedComps = Component_c.getManyC_CsOnR8001(PackageableElement_c.getManyPE_PEsOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system)));



}


}

Component_c  v_comp = null;
for ( int i55386 = 0; i55386 < v_resolvedComps.length; i55386++)
{
  v_comp = v_resolvedComps[i55386] ;

if ( (Canassigntocomp(			    
v_comp.getId()			    
,true)) )
{

v_resolvedComp = v_comp ;


break;



}


}

if ( (  (v_resolvedComp == null)) )
{

Unassign() ;



}

else
{

Updateimportedreferences(			    
v_resolvedComp.getId() ) ;


Assigntocomp(			    
v_resolvedComp.getId() ) ;



}


}


   } // End resolveComponent
  public  void Updateimportedreferences(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Updateimportedreferences") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_resolvedCompPe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Id);


Component_c v_resolvedComp = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, Gd_c.Null_unique_id());


boolean      v_isInGenericPackage = false ;


if ( (  (v_resolvedCompPe == null)) )
{

v_resolvedComp = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, p_Id);



}

else
{

v_isInGenericPackage = true ;


v_resolvedComp = Component_c.getOneC_COnR8001(v_resolvedCompPe);



}

if ( (  (v_resolvedComp != null)) )
{

ImportedReference_c [] v_importedReferences = ImportedReference_c.getManyCL_IIRsOnR4700(this);


ImportedReference_c  v_importedReference = null;
for ( int i55387 = 0; i55387 < v_importedReferences.length; i55387++)
{
  v_importedReference = v_importedReferences[i55387] ;

InterfaceReference_c v_reference = InterfaceReference_c.getOneC_IROnR4701(v_importedReference);


Interface_c v_proxyInterface = Interface_c.getOneC_IOnR4012(v_reference);


if ( (  (v_proxyInterface != null) && Util_c.Isproxy(			    
v_proxyInterface.Converttoinstance())) )
{

if ( (v_isInGenericPackage) )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_resolvedCompPe);


Component_c v_component = Component_c.getOneC_COnR8003(v_resolvedCompPe);


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


if ( (  (v_system == null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent));


v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent)));



}

java.util.UUID         v_id = v_reference.Findmatchinginterface(			    
v_resolvedCompPe.getElement_id()			    
,v_system.getSys_id()) ;


if ( (! v_id.equals(Gd_c.Null_unique_id())) )
{

PackageableElement_c v_ifacePe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_id);


Interface_c v_interface = Interface_c.getOneC_IOnR8001(v_ifacePe);


if ( (  (v_interface != null)) )
{

if (v_reference != null) {
v_reference.unrelateAcrossR4012From(v_proxyInterface);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_reference != null) {
  v_reference.relateAcrossR4012To(v_interface);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

else
{

ComponentPackage_c v_compPkg = ComponentPackage_c.getOneCP_CPOnR4608(v_resolvedComp);


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(v_compPkg);


java.util.UUID         v_id = v_reference.Findmatchinginterface(			    
Gd_c.Null_unique_id()			    
,v_system.getSys_id()) ;


if ( (! v_id.equals(Gd_c.Null_unique_id())) )
{

  class Interface_test55946_c implements ClassQueryInterface_c
  {
	Interface_test55946_c( java.util.UUID         p55947 ) {
		m_p55947 = p55947;
	}
	private java.util.UUID         m_p55947;
	public boolean evaluate (Object candidate)
	{
		Interface_c selected = (Interface_c)candidate;
		return (selected.getId().equals(m_p55947)) ;
	}
  }
Interface_c v_interface = Interface_c.getOneC_IOnR4303(InterfacePackage_c.getManyIP_IPsOnR4304(v_system), new Interface_test55946_c(v_id));


if ( (  (v_interface != null)) )
{

if (v_reference != null) {
v_reference.unrelateAcrossR4012From(v_proxyInterface);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_reference != null) {
  v_reference.relateAcrossR4012To(v_interface);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


}


}


}


   } // End updateImportedReferences
  public  boolean      Isparentexecuting()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Isparentexecuting") ; 
               final ModelRoot modelRoot = getModelRoot();
ComponentInstanceContainer_c v_container = ComponentInstanceContainer_c.getOneI_CINOnR2975(ComponentInstance_c.getManyI_EXEsOnR2963(this));


return   (v_container != null);



   } // End isParentExecuting
  public  int          Getimportedcomponentnumber()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getimportedcomponentnumber") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4201(this);


if ( (  (v_component != null)) )
{

int          v_count = 0 ;


ComponentReference_c [] v_icomps = ComponentReference_c.getManyCL_ICsOnR4201(v_component);


ComponentReference_c  v_icomp = null;
for ( int i55388 = 0; i55388 < v_icomps.length; i55388++)
{
  v_icomp = v_icomps[i55388] ;

v_count = v_count + 1 ;


if ( (v_icomp == this) )
{

return v_count;



}


}


}

return 1;



   } // End getImportedComponentNumber
  public  boolean      Isexecuting()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Isexecuting") ; 
               final ModelRoot modelRoot = getModelRoot();
ComponentInstance_c v_instance = ComponentInstance_c.getOneI_EXEOnR2963(this);


return   (v_instance != null);



   } // End isExecuting
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getId();



   } // End get_ooa_id
  public  Object Getconfigurationinheritanceelementid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getconfigurationinheritanceelementid") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4201(this);


if ( (  (v_component != null)) )
{

return v_component.Converttoinstance();



}

return Converttoinstance();



   } // End getConfigurationInheritanceElementId
  public  boolean      Issynchronized()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Issynchronized") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4201(this);


if ( (  (v_component == null)) )
{

return true;



}

if ( (Util_c.Isproxy(			    
v_component.Converttoinstance())) )
{

return false;



}

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(v_component);


ComponentPackage_c v_cp = ComponentPackage_c.getOneCP_CPOnR4604(v_component);


ComponentInComponent_c v_compParent = ComponentInComponent_c.getOneCN_CICOnR4203(v_component);


if ( (  (v_pe == null) &&   (v_cp == null) &&   (v_compParent == null)) )
{

return false;



}

InterfaceReference_c [] v_interfaceRefs = InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component));


InterfaceReference_c  v_interfaceRef = null;
for ( int i55389 = 0; i55389 < v_interfaceRefs.length; i55389++)
{
  v_interfaceRef = v_interfaceRefs[i55389] ;

if ( (v_interfaceRef.Isformal()) )
{

  class InterfaceReference_test55948_c implements ClassQueryInterface_c
  {
	InterfaceReference_test55948_c( java.util.UUID         p55949 ) {
		m_p55949 = p55949;
	}
	private java.util.UUID         m_p55949;
	public boolean evaluate (Object candidate)
	{
		InterfaceReference_c selected = (InterfaceReference_c)candidate;
		return (selected.getId().equals(m_p55949)) ;
	}
  }
InterfaceReference_c v_localRef = InterfaceReference_c.getOneC_IROnR4701(ImportedReference_c.getManyCL_IIRsOnR4700(this), new InterfaceReference_test55948_c(v_interfaceRef.getId()));


if ( (  (v_localRef == null)) )
{

return false;



}


}


}

return true;



   } // End isSynchronized
  public  void Synchronize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Synchronize") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4201(this);


PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(v_component);


ComponentPackage_c v_cp = ComponentPackage_c.getOneCP_CPOnR4604(v_component);


ComponentInComponent_c v_compParent = ComponentInComponent_c.getOneCN_CICOnR4203(v_component);


if ( (Util_c.Isproxy(			    
v_component.Converttoinstance()) || (  (v_pe == null) &&   (v_cp == null) &&   (v_compParent == null))) )
{

Unassign() ;



}

else
{

InterfaceReference_c [] v_interfaceRefs = InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component));


InterfaceReference_c  v_interfaceRef = null;
for ( int i55390 = 0; i55390 < v_interfaceRefs.length; i55390++)
{
  v_interfaceRef = v_interfaceRefs[i55390] ;

  class InterfaceReference_test55950_c implements ClassQueryInterface_c
  {
	InterfaceReference_test55950_c( java.util.UUID         p55951 ) {
		m_p55951 = p55951;
	}
	private java.util.UUID         m_p55951;
	public boolean evaluate (Object candidate)
	{
		InterfaceReference_c selected = (InterfaceReference_c)candidate;
		return (selected.getId().equals(m_p55951)) ;
	}
  }
InterfaceReference_c v_localRef = InterfaceReference_c.getOneC_IROnR4701(ImportedReference_c.getManyCL_IIRsOnR4700(this), new InterfaceReference_test55950_c(v_interfaceRef.getId()));


if ( (  (v_localRef == null) && v_interfaceRef.Isformal()) )
{

Provision_c v_provision = Provision_c.getOneC_POnR4009(v_interfaceRef);


ImportedReference_c v_importedRef = new ImportedReference_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_importedRef));


if ( (  (v_provision != null)) )
{

ImportedProvision_c v_importedPro = new ImportedProvision_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_importedPro));


if (v_importedPro != null) {
  v_importedPro.relateAcrossR4703To(v_importedRef);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

ImportedRequirement_c v_importedReq = new ImportedRequirement_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_importedReq));


if (v_importedReq != null) {
  v_importedReq.relateAcrossR4703To(v_importedRef);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_importedRef != null) {
  v_importedRef.relateAcrossR4700To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_importedRef != null) {
  v_importedRef.relateAcrossR4701To(v_interfaceRef);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End synchronize
  public  void Collectchanges(final Object p_Changelist)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Collectchanges") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (  !Issynchronized()) )
{

Component_c v_comp = Component_c.getOneC_COnR4201(this);


PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(v_comp);


ComponentPackage_c v_cp = ComponentPackage_c.getOneCP_CPOnR4604(v_comp);


ComponentInComponent_c v_compParent = ComponentInComponent_c.getOneCN_CICOnR4203(v_comp);


if ( (Util_c.Isproxy(			    
v_comp.Converttoinstance()) || (  (v_pe == null) &&   (v_cp == null) &&   (v_compParent == null))) )
{

Util_c.Createelementchange(			    
"Unassigned"			    
,p_Changelist			    
,Converttoinstance()			    
,true ) ;



}

else
{

InterfaceReference_c [] v_interfaceRefs = InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_comp));


InterfaceReference_c  v_interfaceRef = null;
for ( int i55391 = 0; i55391 < v_interfaceRefs.length; i55391++)
{
  v_interfaceRef = v_interfaceRefs[i55391] ;

if ( (v_interfaceRef.Isformal()) )
{

  class InterfaceReference_test55952_c implements ClassQueryInterface_c
  {
	InterfaceReference_test55952_c( java.util.UUID         p55953 ) {
		m_p55953 = p55953;
	}
	private java.util.UUID         m_p55953;
	public boolean evaluate (Object candidate)
	{
		InterfaceReference_c selected = (InterfaceReference_c)candidate;
		return (selected.getId().equals(m_p55953)) ;
	}
  }
InterfaceReference_c v_localRef = InterfaceReference_c.getOneC_IROnR4701(ImportedReference_c.getManyCL_IIRsOnR4700(this), new InterfaceReference_test55952_c(v_interfaceRef.getId()));


if ( (  (v_localRef == null)) )
{

Util_c.Createelementchange(			    
v_interfaceRef.Interfacename() + " added"			    
,p_Changelist			    
,Converttoinstance()			    
,false ) ;



}


}


}


}


}


   } // End collectChanges
  public  void Collectreferencesforsynchronization(final Object p_Referencelist,final int  p_Synctype)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Collectreferencesforsynchronization") ; 
               final ModelRoot modelRoot = getModelRoot();
ImportedProvision_c [] v_importedProvisions = ImportedProvision_c.getManyCL_IPsOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this));


ImportedProvision_c  v_importedPro = null;
for ( int i55392 = 0; i55392 < v_importedProvisions.length; i55392++)
{
  v_importedPro = v_importedProvisions[i55392] ;

Util_c.Addelementtolist(			    
v_importedPro.Converttoinstance()			    
,p_Referencelist ) ;



}

ImportedRequirement_c [] v_importedRequirements = ImportedRequirement_c.getManyCL_IRsOnR4703(ImportedReference_c.getManyCL_IIRsOnR4700(this));


ImportedRequirement_c  v_importedReq = null;
for ( int i55393 = 0; i55393 < v_importedRequirements.length; i55393++)
{
  v_importedReq = v_importedRequirements[i55393] ;

Util_c.Addelementtolist(			    
v_importedReq.Converttoinstance()			    
,p_Referencelist ) ;



}


   } // End collectReferencesForSynchronization
  public  String       Getcachedname()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Getcachedname") ; 
	return m_name;
   } // End getCachedName
  public  void Setcachedname(final String       p_Name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Setcachedname") ; 
	m_name = p_Name;
   } // End setCachedName
  public  boolean      Isreferringtodefaultcomponent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Isreferringtodefaultcomponent") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4201(this);


if ( (  (v_component != null)) )
{

return Util_c.Isproxy(			    
v_component.Converttoinstance());



}

return true;



   } // End isReferringToDefaultComponent
  public  boolean      Canrefertocomponent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Reference", " Operation entered: ComponentReference::Canrefertocomponent") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_comp = Component_c.getOneC_COnR4201(this);


PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


boolean      v_isAccessible = true ;


if ( (  (v_pe != null)) )
{

v_isAccessible = v_pe.Iselementvisibletoself(			    
v_comp.getId()			    
,Elementtypeconstants_c.COMPONENT) ;



}

return v_isAccessible && Canassigntocomp(			    
v_comp.getId()			    
,false);



   } // End canReferToComponent

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return ComponentReferenceActionFilter.getSingleton();
    }
	  return null;
  }
} // end Component Reference
