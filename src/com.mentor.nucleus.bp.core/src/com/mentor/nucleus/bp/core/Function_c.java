      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Function_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_FUNCTION extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Function_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Function_c(ModelRoot modelRoot,
       java.util.UUID         p_m_sync_id,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       String       p_m_descrip,
       String       p_m_action_semantics_internal,
       java.util.UUID         p_m_dt_id,
       int  p_m_suc_pars,
       String       p_m_return_dimensions)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       // default value for m_action_semantics
       m_suc_pars = p_m_suc_pars;
       m_action_semantics_internal = p_m_action_semantics_internal;
       m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sync_id = IdAssigner.preprocessUUID(p_m_sync_id);
        
    setUniqueId(m_sync_id);
    Object [] key = {m_sync_id};
    addInstanceToMap(key);
  }
  static public Function_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_sync_id,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       String       p_m_descrip,
       String       p_m_action_semantics_internal,
       java.util.UUID         p_m_dt_id,
       int  p_m_suc_pars,
       String       p_m_return_dimensions, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Function_c.class);
      Function_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_sync_id};
          new_inst = (Function_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       // default value for m_action_semantics
       new_inst.m_suc_pars = p_m_suc_pars;
       new_inst.m_action_semantics_internal = p_m_action_semantics_internal;
       new_inst.m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sync_id = IdAssigner.preprocessUUID(p_m_sync_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Function_c(modelRoot,
p_m_sync_id,
p_m_dom_id,
p_m_name,
p_m_descrip,
p_m_action_semantics_internal,
p_m_dt_id,
p_m_suc_pars,
p_m_return_dimensions
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public Function_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_sync_id,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       String       p_m_descrip,
       String       p_m_action_semantics_internal,
       java.util.UUID         p_m_dt_id,
       int  p_m_suc_pars,
       String       p_m_return_dimensions){
    InstanceList instances = modelRoot.getInstanceList(Function_c.class);
    Function_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_sync_id
            };
        source = (Function_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       // default value for m_action_semantics
       source.m_suc_pars = p_m_suc_pars;
       source.m_action_semantics_internal = p_m_action_semantics_internal;
       source.m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sync_id = IdAssigner.preprocessUUID(p_m_sync_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    Function_c new_inst = new Function_c(modelRoot,
p_m_sync_id,
p_m_dom_id,
p_m_name,
p_m_descrip,
p_m_action_semantics_internal,
p_m_dt_id,
p_m_suc_pars,
p_m_return_dimensions
);
    return new_inst;
  }
  public Function_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_dom_id = IdAssigner.NULL_UUID;   
     m_name = "";   
     m_descrip = "";   
     m_action_semantics = "";   
     m_suc_pars = Parsestatus_c.OOA_UNINITIALIZED_ENUM;
     m_action_semantics_internal = "";   
     m_return_dimensions = "";   
     m_dt_id = IdAssigner.NULL_UUID;   
     m_sync_id = idAssigner.createUUID();
    setUniqueId(m_sync_id);
    Object [] key = {m_sync_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_sync_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_sync_id !=  p_newKey ){
	
		m_sync_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Function_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Function_c)) {
           return false;
       }
       
       Function_c me = (Function_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getSync_id()) || IdAssigner.NULL_UUID.equals(((Function_c)elem).getSync_id())) && this != elem)) {
      	return false;
      }
      if (!getSync_id().equals(((Function_c)elem).getSync_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Function_c)) {
           return false;
       }
       
       Function_c me = (Function_c)elem;
      if (!getSync_idCachedValue().equals(((Function_c)elem).getSync_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_dom_id ;
  private String       m_name ;
  private String       m_descrip ;
  private String       m_action_semantics ;
  private int  m_suc_pars ;
  private String       m_action_semantics_internal ;
  private String       m_return_dimensions ;
  private java.util.UUID         m_dt_id ;
  private java.util.UUID         m_sync_id ;
      
// declare association references from this class
  
  
    
// referring navigation

PackageableElement_c IsSupertypePackageableElement ;
public void relateAcrossR8001To(PackageableElement_c target)
{
	relateAcrossR8001To(target, true);
}
public void relateAcrossR8001To(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypePackageableElement) return;  // already related

    if ( IsSupertypePackageableElement != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypePackageableElement != null) {
    
        IsSupertypePackageableElement.clearBackPointerR8001To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Function_c.relateAcrossR8001To(PackageableElement_c target)", 
			"Relate performed across R8001 from Function to Packageable Element without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypePackageableElement = target ;
        m_sync_id = target.getElement_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8001To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8001From(PackageableElement_c target)
{
	unrelateAcrossR8001From(target, true);
}
public void unrelateAcrossR8001From(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypePackageableElement == null) return;  // already unrelated
	
	if (target != IsSupertypePackageableElement) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8001", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8001To(this);
    }
    

      if(IsSupertypePackageableElement != null) {
      
        m_sync_id = IsSupertypePackageableElement.getElement_id();
        IsSupertypePackageableElement = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Function_c getOneS_SYNCOnR8001(PackageableElement_c [] targets)
{
    return getOneS_SYNCOnR8001(targets, null);
}

public static Function_c getOneS_SYNCOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_SYNCOnR8001(targets[i], test);
        }
    }

    return ret_val;
}

public static Function_c getOneS_SYNCOnR8001(PackageableElement_c target)
{
  return getOneS_SYNCOnR8001(target, null);
}

public static Function_c getOneS_SYNCOnR8001(PackageableElement_c target, boolean loadComponent)
{
    return getOneS_SYNCOnR8001(target.getModelRoot(), target, null, loadComponent);
}

public static Function_c getOneS_SYNCOnR8001(PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_SYNCOnR8001(target.getModelRoot(), target, test);
  }
  return null;
}

public static Function_c getOneS_SYNCOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
	return getOneS_SYNCOnR8001(modelRoot, target, test, true);
}

public static Function_c getOneS_SYNCOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_SYNCOnR8001(modelRoot,target,test);
}
private static Function_c find_getOneS_SYNCOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Function_c source = (Function_c)target.backPointer_IsSubtypeFunctionIsSubtype_R8001;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Function_c [] getManyS_SYNCsOnR8001(PackageableElement_c [] targets)
{
  return getManyS_SYNCsOnR8001(targets, null);
}
public static Function_c [] getManyS_SYNCsOnR8001(PackageableElement_c [] targets, boolean loadComponent)
{
  return getManyS_SYNCsOnR8001(targets, null, loadComponent);
}
public static Function_c [] getManyS_SYNCsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR8001(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Function_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Function_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Function_c source = (Function_c)targets[i].backPointer_IsSubtypeFunctionIsSubtype_R8001;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Function_c[] ret_set = new Function_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Function_c[0];
  }
  }

public static Function_c [] getManyS_SYNCsOnR8001(PackageableElement_c target)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR8001(targetArray);
  } else {
    Function_c [] result = new Function_c [0] ;
  return result ;
}
}

public static Function_c [] getManyS_SYNCsOnR8001(PackageableElement_c target, boolean loadComponent)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR8001(targetArray, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
  return result ;
}
}



  
    
// referring navigation

Domain_c IsDefinedInDomain ;
public void relateAcrossR23To(Domain_c target)
{
	relateAcrossR23To(target, true);
}
public void relateAcrossR23To(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsDefinedInDomain) return;  // already related

    if ( IsDefinedInDomain != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsDefinedInDomain != null) {
        UmlProblem.removeXtUMLProblem(this, IsDefinedInDomain);
    
        IsDefinedInDomain.clearBackPointerR23To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Function_c.relateAcrossR23To(Domain_c target)", 
			"Relate performed across R23 from Function to Domain without unrelate of prior instance.");  
		}
    }
                
    	IsDefinedInDomain = target ;
        m_dom_id = target.getDom_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR23To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "23", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR23From(Domain_c target)
{
	unrelateAcrossR23From(target, true);
}
public void unrelateAcrossR23From(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsDefinedInDomain == null) return;  // already unrelated
	
	if (target != IsDefinedInDomain) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R23", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR23To(this);
    }
    

      if(IsDefinedInDomain != null) {
      
        m_dom_id = IsDefinedInDomain.getDom_id();
        IsDefinedInDomain = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "23", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Function_c getOneS_SYNCOnR23(Domain_c [] targets)
{
    return getOneS_SYNCOnR23(targets, null);
}

public static Function_c getOneS_SYNCOnR23(Domain_c [] targets, ClassQueryInterface_c test)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_SYNCOnR23(targets[i], test);
        }
    }

    return ret_val;
}

public static Function_c getOneS_SYNCOnR23(Domain_c target)
{
  return getOneS_SYNCOnR23(target, null);
}

public static Function_c getOneS_SYNCOnR23(Domain_c target, boolean loadComponent)
{
    return getOneS_SYNCOnR23(target.getModelRoot(), target, null, loadComponent);
}

public static Function_c getOneS_SYNCOnR23(Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_SYNCOnR23(target.getModelRoot(), target, test);
  }
  return null;
}

public static Function_c getOneS_SYNCOnR23(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
	return getOneS_SYNCOnR23(modelRoot, target, test, true);
}

public static Function_c getOneS_SYNCOnR23(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Function_c result = null;
  
  result=find_getOneS_SYNCOnR23(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,Function_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_SYNCOnR23(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Function_c find_getOneS_SYNCOnR23(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DefinesFunctionDefines_R23) {
	    for ( int i = 0; i < target.backPointer_DefinesFunctionDefines_R23.size(); ++i ) {
	      Function_c source = (Function_c)target.backPointer_DefinesFunctionDefines_R23.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Function_c [] getManyS_SYNCsOnR23(Domain_c [] targets)
{
  return getManyS_SYNCsOnR23(targets, null);
}
public static Function_c [] getManyS_SYNCsOnR23(Domain_c [] targets, boolean loadComponent)
{
  return getManyS_SYNCsOnR23(targets, null, loadComponent);
}
public static Function_c [] getManyS_SYNCsOnR23(Domain_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR23(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR23(Domain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Function_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, Function_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Function_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DefinesFunctionDefines_R23) {
	    for (int j = 0; j < targets[i].backPointer_DefinesFunctionDefines_R23.size(); ++j) {
	      Function_c source = (Function_c)targets[i].backPointer_DefinesFunctionDefines_R23.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Function_c[] ret_set = new Function_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Function_c[0];
  }
  }

public static Function_c [] getManyS_SYNCsOnR23(Domain_c target)
{
  return getManyS_SYNCsOnR23(target, null);
}

public static Function_c [] getManyS_SYNCsOnR23(Domain_c target, boolean loadComponent)
{
  return getManyS_SYNCsOnR23(target, null, loadComponent);
}

public static Function_c [] getManyS_SYNCsOnR23(Domain_c target, ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR23(target, test, true);
}

public static Function_c [] getManyS_SYNCsOnR23(Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Function_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, Function_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_DefinesFunctionDefines_R23) {
    for (int i = 0; i < target.backPointer_DefinesFunctionDefines_R23.size(); ++i) {
      Function_c source = (Function_c)target.backPointer_DefinesFunctionDefines_R23.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Function_c[] ret_set = new Function_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Function_c[0];
	}
  }


  
    
// referring navigation

DataType_c HasReturnTypeOfDataType ;
public void relateAcrossR25To(DataType_c target)
{
	relateAcrossR25To(target, true);
}
public void relateAcrossR25To(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == HasReturnTypeOfDataType) return;  // already related

    if ( HasReturnTypeOfDataType != target ) {
    
    Object oldKey = getInstanceKey();

    if (HasReturnTypeOfDataType != null) {
        UmlProblem.removeXtUMLProblem(this, HasReturnTypeOfDataType);
    
        HasReturnTypeOfDataType.clearBackPointerR25To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Function_c.relateAcrossR25To(DataType_c target)", 
			"Relate performed across R25 from Function to Data Type without unrelate of prior instance.");  
		}
    }
                
    	HasReturnTypeOfDataType = target ;
        if(IdAssigner.NULL_UUID.equals(target.getDt_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_dt_id = target.getDt_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR25To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "25", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR25From(DataType_c target)
{
	unrelateAcrossR25From(target, true);
}
public void unrelateAcrossR25From(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (HasReturnTypeOfDataType == null) return;  // already unrelated
	
	if (target != HasReturnTypeOfDataType) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R25", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR25To(this);
    }
    

      if(HasReturnTypeOfDataType != null) {
      
        m_dt_id = HasReturnTypeOfDataType.getDt_id();
        if(IdAssigner.NULL_UUID.equals(m_dt_id))
        {
          m_dt_id = HasReturnTypeOfDataType.getDt_idCachedValue();
        }       
        HasReturnTypeOfDataType = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "25", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Function_c getOneS_SYNCOnR25(DataType_c [] targets)
{
    return getOneS_SYNCOnR25(targets, null);
}

public static Function_c getOneS_SYNCOnR25(DataType_c [] targets, ClassQueryInterface_c test)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_SYNCOnR25(targets[i], test);
        }
    }

    return ret_val;
}

public static Function_c getOneS_SYNCOnR25(DataType_c target)
{
  return getOneS_SYNCOnR25(target, null);
}

public static Function_c getOneS_SYNCOnR25(DataType_c target, boolean loadComponent)
{
    return getOneS_SYNCOnR25(target.getModelRoot(), target, null, loadComponent);
}

public static Function_c getOneS_SYNCOnR25(DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_SYNCOnR25(target.getModelRoot(), target, test);
  }
  return null;
}

public static Function_c getOneS_SYNCOnR25(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
	return getOneS_SYNCOnR25(modelRoot, target, test, true);
}

public static Function_c getOneS_SYNCOnR25(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Function_c result = null;
  
  result=find_getOneS_SYNCOnR25(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,Function_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_SYNCOnR25(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Function_c find_getOneS_SYNCOnR25(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25) {
	    for ( int i = 0; i < target.backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25.size(); ++i ) {
	      Function_c source = (Function_c)target.backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Function_c [] getManyS_SYNCsOnR25(DataType_c [] targets)
{
  return getManyS_SYNCsOnR25(targets, null);
}
public static Function_c [] getManyS_SYNCsOnR25(DataType_c [] targets, boolean loadComponent)
{
  return getManyS_SYNCsOnR25(targets, null, loadComponent);
}
public static Function_c [] getManyS_SYNCsOnR25(DataType_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR25(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR25(DataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Function_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, Function_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Function_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25) {
	    for (int j = 0; j < targets[i].backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25.size(); ++j) {
	      Function_c source = (Function_c)targets[i].backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Function_c[] ret_set = new Function_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Function_c[0];
  }
  }

public static Function_c [] getManyS_SYNCsOnR25(DataType_c target)
{
  return getManyS_SYNCsOnR25(target, null);
}

public static Function_c [] getManyS_SYNCsOnR25(DataType_c target, boolean loadComponent)
{
  return getManyS_SYNCsOnR25(target, null, loadComponent);
}

public static Function_c [] getManyS_SYNCsOnR25(DataType_c target, ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR25(target, test, true);
}

public static Function_c [] getManyS_SYNCsOnR25(DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Function_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, Function_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25) {
    for (int i = 0; i < target.backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25.size(); ++i) {
      Function_c source = (Function_c)target.backPointer_DefinesReturnTypeFunctionDefinesReturnType_R25.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Function_c[] ret_set = new Function_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Function_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<FunctionParameter_c> backPointer_DefinesFunctionParameterDefines_R24 = new ArrayList<FunctionParameter_c>();

public void setFunctionParameterOrderInChildListR24(FunctionParameter_c target, int index) {
	unrelateAcrossR24From(target);
	FunctionParameter_c[] elements = FunctionParameter_c.getManyS_SPARMsOnR24(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR24From((FunctionParameter_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR24To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR24To((FunctionParameter_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR24To(FunctionParameter_c target)
{
  if (target != null) {
    target.relateAcrossR24To(this, true) ;
  }
}

public void relateAcrossR24To(FunctionParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR24To(this, notifyChanges) ;
  }
}

public void setBackPointerR24To(FunctionParameter_c target)
{
  	synchronized (backPointer_DefinesFunctionParameterDefines_R24) {
		backPointer_DefinesFunctionParameterDefines_R24.add(target);
	}
}

public void unrelateAcrossR24From(FunctionParameter_c target)
{
  if (target != null) {
    target.unrelateAcrossR24From(this, true) ;
  }
}

public void unrelateAcrossR24From(FunctionParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR24From(this, notifyChanges) ;
  }
}

public void clearBackPointerR24To(FunctionParameter_c target)
{
  synchronized (backPointer_DefinesFunctionParameterDefines_R24) {
	    backPointer_DefinesFunctionParameterDefines_R24.remove(target);
	}
}

public static Function_c getOneS_SYNCOnR24(FunctionParameter_c [] targets)
{
    return getOneS_SYNCOnR24(targets, null);
}

public static Function_c getOneS_SYNCOnR24(FunctionParameter_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SYNCOnR24(targets, test, true);
}

public static Function_c getOneS_SYNCOnR24(FunctionParameter_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Function_c candidate_val = getOneS_SYNCOnR24(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SYNCOnR24(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Function_c getOneS_SYNCOnR24(FunctionParameter_c target)
{
	return getOneS_SYNCOnR24(target, true);
}
public static Function_c getOneS_SYNCOnR24(FunctionParameter_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsDefinedForFunction ;
  } else {
    return null;
  }
}

public static Function_c [] getManyS_SYNCsOnR24(FunctionParameter_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR24(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR24(FunctionParameter_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Function_c[0];
  
  
  LinkedHashSet<Function_c> elementsSet = new LinkedHashSet<Function_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsDefinedForFunction == null)
	  targets[i].loadProxy();
    Function_c associate = targets[i].IsDefinedForFunction;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Function_c[] result = new Function_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Function_c [] getManyS_SYNCsOnR24(FunctionParameter_c [] targets)
{
  return getManyS_SYNCsOnR24(targets, null);
}

public static Function_c [] getManyS_SYNCsOnR24(FunctionParameter_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionParameter_c [] targetArray = new FunctionParameter_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR24(targetArray, test, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
    return result ;
  }
  
}

public static Function_c [] getManyS_SYNCsOnR24(FunctionParameter_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SYNCsOnR24(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR24(FunctionParameter_c target)
{
    return getManyS_SYNCsOnR24(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR24(FunctionParameter_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR24(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionInPackage_c> backPointer_IsContainedInFunctionInPackageIsContainedIn_R31 = new ArrayList<FunctionInPackage_c>();

public void setFunctionInPackageOrderInChildListR31(FunctionInPackage_c target, int index) {
	unrelateAcrossR31From(target);
	FunctionInPackage_c[] elements = FunctionInPackage_c.getManyS_FIPsOnR31(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR31From((FunctionInPackage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR31To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR31To((FunctionInPackage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR31To(FunctionInPackage_c target)
{
  if (target != null) {
    target.relateAcrossR31To(this, true) ;
  }
}

public void relateAcrossR31To(FunctionInPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR31To(this, notifyChanges) ;
  }
}

public void setBackPointerR31To(FunctionInPackage_c target)
{
  	synchronized (backPointer_IsContainedInFunctionInPackageIsContainedIn_R31) {
		backPointer_IsContainedInFunctionInPackageIsContainedIn_R31.add(target);
	}
}

public void unrelateAcrossR31From(FunctionInPackage_c target)
{
  if (target != null) {
    target.unrelateAcrossR31From(this, true) ;
  }
}

public void unrelateAcrossR31From(FunctionInPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR31From(this, notifyChanges) ;
  }
}

public void clearBackPointerR31To(FunctionInPackage_c target)
{
  synchronized (backPointer_IsContainedInFunctionInPackageIsContainedIn_R31) {
	    backPointer_IsContainedInFunctionInPackageIsContainedIn_R31.remove(target);
	}
}

public static Function_c getOneS_SYNCOnR31(FunctionInPackage_c [] targets)
{
    return getOneS_SYNCOnR31(targets, null);
}

public static Function_c getOneS_SYNCOnR31(FunctionInPackage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SYNCOnR31(targets, test, true);
}

public static Function_c getOneS_SYNCOnR31(FunctionInPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Function_c candidate_val = getOneS_SYNCOnR31(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SYNCOnR31(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Function_c getOneS_SYNCOnR31(FunctionInPackage_c target)
{
	return getOneS_SYNCOnR31(target, true);
}
public static Function_c getOneS_SYNCOnR31(FunctionInPackage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ContainsFunction ;
  } else {
    return null;
  }
}

public static Function_c [] getManyS_SYNCsOnR31(FunctionInPackage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR31(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR31(FunctionInPackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Function_c[0];
  
  
  LinkedHashSet<Function_c> elementsSet = new LinkedHashSet<Function_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ContainsFunction == null)
	  targets[i].loadProxy();
    Function_c associate = targets[i].ContainsFunction;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Function_c[] result = new Function_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Function_c [] getManyS_SYNCsOnR31(FunctionInPackage_c [] targets)
{
  return getManyS_SYNCsOnR31(targets, null);
}

public static Function_c [] getManyS_SYNCsOnR31(FunctionInPackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionInPackage_c [] targetArray = new FunctionInPackage_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR31(targetArray, test, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
    return result ;
  }
  
}

public static Function_c [] getManyS_SYNCsOnR31(FunctionInPackage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SYNCsOnR31(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR31(FunctionInPackage_c target)
{
    return getManyS_SYNCsOnR31(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR31(FunctionInPackage_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR31(target, null, loadComponent);
}

public static Function_c getOneS_SYNCOnR31(FunctionPackage_c target)
{
  return Function_c.getOneS_SYNCOnR31(FunctionInPackage_c.getOneS_FIPOnR31(target)) ;
}

public static Function_c getOneS_SYNCOnR31(FunctionPackage_c target,
    ClassQueryInterface_c test)
{
  return Function_c.getOneS_SYNCOnR31(FunctionInPackage_c.getManyS_FIPsOnR31(target), test) ;
}

public static Function_c [] getManyS_SYNCsOnR31(FunctionPackage_c target,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR31(target, test, true);
}
public static Function_c [] getManyS_SYNCsOnR31(FunctionPackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  FunctionInPackage_c [] associators = FunctionInPackage_c.getManyS_FIPsOnR31(target, loadComponent) ;
    return Function_c.getManyS_SYNCsOnR31(associators, test, loadComponent) ;
}
public static Function_c [] getManyS_SYNCsOnR31(FunctionPackage_c target)
{
    return getManyS_SYNCsOnR31(target, null, true);
}
public static Function_c [] getManyS_SYNCsOnR31(FunctionPackage_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR31(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<AutomaticWiring_c> backPointer_ProvidesExecutionForAutomaticWiringProvidesExecutionFor_R3201 = new ArrayList<AutomaticWiring_c>();

public void setAutomaticWiringOrderInChildListR3201(AutomaticWiring_c target, int index) {
	unrelateAcrossR3201From(target);
	AutomaticWiring_c[] elements = AutomaticWiring_c.getManyS_AWsOnR3201(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR3201From((AutomaticWiring_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR3201To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR3201To((AutomaticWiring_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR3201To(AutomaticWiring_c target)
{
  if (target != null) {
    target.relateAcrossR3201To(this, true) ;
  }
}

public void relateAcrossR3201To(AutomaticWiring_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR3201To(this, notifyChanges) ;
  }
}

public void setBackPointerR3201To(AutomaticWiring_c target)
{
  	synchronized (backPointer_ProvidesExecutionForAutomaticWiringProvidesExecutionFor_R3201) {
		backPointer_ProvidesExecutionForAutomaticWiringProvidesExecutionFor_R3201.add(target);
	}
}

public void unrelateAcrossR3201From(AutomaticWiring_c target)
{
  if (target != null) {
    target.unrelateAcrossR3201From(this, true) ;
  }
}

public void unrelateAcrossR3201From(AutomaticWiring_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR3201From(this, notifyChanges) ;
  }
}

public void clearBackPointerR3201To(AutomaticWiring_c target)
{
  synchronized (backPointer_ProvidesExecutionForAutomaticWiringProvidesExecutionFor_R3201) {
	    backPointer_ProvidesExecutionForAutomaticWiringProvidesExecutionFor_R3201.remove(target);
	}
}

public static Function_c getOneS_SYNCOnR3201(AutomaticWiring_c [] targets)
{
    return getOneS_SYNCOnR3201(targets, null);
}

public static Function_c getOneS_SYNCOnR3201(AutomaticWiring_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SYNCOnR3201(targets, test, true);
}

public static Function_c getOneS_SYNCOnR3201(AutomaticWiring_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Function_c candidate_val = getOneS_SYNCOnR3201(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SYNCOnR3201(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Function_c getOneS_SYNCOnR3201(AutomaticWiring_c target)
{
	return getOneS_SYNCOnR3201(target, true);
}
public static Function_c getOneS_SYNCOnR3201(AutomaticWiring_c target, boolean loadComponent)
{
  if (target != null) {
    return target.ConnectsBridgeExecutionToFunction ;
  } else {
    return null;
  }
}

public static Function_c [] getManyS_SYNCsOnR3201(AutomaticWiring_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR3201(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR3201(AutomaticWiring_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Function_c[0];
  
  
  LinkedHashSet<Function_c> elementsSet = new LinkedHashSet<Function_c>();
  for (int i = 0; i < targets.length; i++) {
    Function_c associate = targets[i].ConnectsBridgeExecutionToFunction;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Function_c[] result = new Function_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Function_c [] getManyS_SYNCsOnR3201(AutomaticWiring_c [] targets)
{
  return getManyS_SYNCsOnR3201(targets, null);
}

public static Function_c [] getManyS_SYNCsOnR3201(AutomaticWiring_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    AutomaticWiring_c [] targetArray = new AutomaticWiring_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR3201(targetArray, test, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
    return result ;
  }
  
}

public static Function_c [] getManyS_SYNCsOnR3201(AutomaticWiring_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SYNCsOnR3201(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR3201(AutomaticWiring_c target)
{
    return getManyS_SYNCsOnR3201(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR3201(AutomaticWiring_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR3201(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionValue_c> backPointer_FunctionValue_R827 = new ArrayList<FunctionValue_c>();

public void setFunctionValueOrderInChildListR827(FunctionValue_c target, int index) {
	unrelateAcrossR827From(target);
	FunctionValue_c[] elements = FunctionValue_c.getManyV_FNVsOnR827(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR827From((FunctionValue_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR827To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR827To((FunctionValue_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR827To(FunctionValue_c target)
{
  if (target != null) {
    target.relateAcrossR827To(this, true) ;
  }
}

public void relateAcrossR827To(FunctionValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR827To(this, notifyChanges) ;
  }
}

public void setBackPointerR827To(FunctionValue_c target)
{
  	synchronized (backPointer_FunctionValue_R827) {
		backPointer_FunctionValue_R827.add(target);
	}
}

public void unrelateAcrossR827From(FunctionValue_c target)
{
  if (target != null) {
    target.unrelateAcrossR827From(this, true) ;
  }
}

public void unrelateAcrossR827From(FunctionValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR827From(this, notifyChanges) ;
  }
}

public void clearBackPointerR827To(FunctionValue_c target)
{
  synchronized (backPointer_FunctionValue_R827) {
	    backPointer_FunctionValue_R827.remove(target);
	}
}

public static Function_c getOneS_SYNCOnR827(FunctionValue_c [] targets)
{
    return getOneS_SYNCOnR827(targets, null);
}

public static Function_c getOneS_SYNCOnR827(FunctionValue_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SYNCOnR827(targets, test, true);
}

public static Function_c getOneS_SYNCOnR827(FunctionValue_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Function_c candidate_val = getOneS_SYNCOnR827(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SYNCOnR827(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Function_c getOneS_SYNCOnR827(FunctionValue_c target)
{
	return getOneS_SYNCOnR827(target, true);
}
public static Function_c getOneS_SYNCOnR827(FunctionValue_c target, boolean loadComponent)
{
  if (target != null) {
    return target.Function ;
  } else {
    return null;
  }
}

public static Function_c [] getManyS_SYNCsOnR827(FunctionValue_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR827(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR827(FunctionValue_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Function_c[0];
  
  
  LinkedHashSet<Function_c> elementsSet = new LinkedHashSet<Function_c>();
  for (int i = 0; i < targets.length; i++) {
    Function_c associate = targets[i].Function;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Function_c[] result = new Function_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Function_c [] getManyS_SYNCsOnR827(FunctionValue_c [] targets)
{
  return getManyS_SYNCsOnR827(targets, null);
}

public static Function_c [] getManyS_SYNCsOnR827(FunctionValue_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionValue_c [] targetArray = new FunctionValue_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR827(targetArray, test, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
    return result ;
  }
  
}

public static Function_c [] getManyS_SYNCsOnR827(FunctionValue_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SYNCsOnR827(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR827(FunctionValue_c target)
{
    return getManyS_SYNCsOnR827(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR827(FunctionValue_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR827(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionMessage_c> backPointer_IsInvokedByFunctionMessageIsInvokedBy_R1010 = new ArrayList<FunctionMessage_c>();

public void setFunctionMessageOrderInChildListR1010(FunctionMessage_c target, int index) {
	unrelateAcrossR1010From(target);
	FunctionMessage_c[] elements = FunctionMessage_c.getManyMSG_FsOnR1010(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1010From((FunctionMessage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1010To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1010To((FunctionMessage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1010To(FunctionMessage_c target)
{
  if (target != null) {
    target.relateAcrossR1010To(this, true) ;
  }
}

public void relateAcrossR1010To(FunctionMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1010To(this, notifyChanges) ;
  }
}

public void setBackPointerR1010To(FunctionMessage_c target)
{
  	synchronized (backPointer_IsInvokedByFunctionMessageIsInvokedBy_R1010) {
		backPointer_IsInvokedByFunctionMessageIsInvokedBy_R1010.add(target);
	}
}

public void unrelateAcrossR1010From(FunctionMessage_c target)
{
  if (target != null) {
    target.unrelateAcrossR1010From(this, true) ;
  }
}

public void unrelateAcrossR1010From(FunctionMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1010From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1010To(FunctionMessage_c target)
{
  synchronized (backPointer_IsInvokedByFunctionMessageIsInvokedBy_R1010) {
	    backPointer_IsInvokedByFunctionMessageIsInvokedBy_R1010.remove(target);
	}
}

public static Function_c getOneS_SYNCOnR1010(FunctionMessage_c [] targets)
{
    return getOneS_SYNCOnR1010(targets, null);
}

public static Function_c getOneS_SYNCOnR1010(FunctionMessage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SYNCOnR1010(targets, test, true);
}

public static Function_c getOneS_SYNCOnR1010(FunctionMessage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Function_c candidate_val = getOneS_SYNCOnR1010(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SYNCOnR1010(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Function_c getOneS_SYNCOnR1010(FunctionMessage_c target)
{
	return getOneS_SYNCOnR1010(target, true);
}
public static Function_c getOneS_SYNCOnR1010(FunctionMessage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsInvocationOfFunction != null){
		target.IsInvocationOfFunction.loadProxy();
	}
	}
    return target.IsInvocationOfFunction ;
  } else {
    return null;
  }
}

public static Function_c [] getManyS_SYNCsOnR1010(FunctionMessage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR1010(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR1010(FunctionMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Function_c[0];
  
  
  LinkedHashSet<Function_c> elementsSet = new LinkedHashSet<Function_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsInvocationOfFunction == null)
	  targets[i].loadProxy();
    Function_c associate = targets[i].IsInvocationOfFunction;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Function_c[] result = new Function_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Function_c [] getManyS_SYNCsOnR1010(FunctionMessage_c [] targets)
{
  return getManyS_SYNCsOnR1010(targets, null);
}

public static Function_c [] getManyS_SYNCsOnR1010(FunctionMessage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionMessage_c [] targetArray = new FunctionMessage_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR1010(targetArray, test, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
    return result ;
  }
  
}

public static Function_c [] getManyS_SYNCsOnR1010(FunctionMessage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SYNCsOnR1010(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR1010(FunctionMessage_c target)
{
    return getManyS_SYNCsOnR1010(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR1010(FunctionMessage_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR1010(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionInvocation_c> backPointer_FunctionInvocation_R675 = new ArrayList<FunctionInvocation_c>();

public void setFunctionInvocationOrderInChildListR675(FunctionInvocation_c target, int index) {
	unrelateAcrossR675From(target);
	FunctionInvocation_c[] elements = FunctionInvocation_c.getManyACT_FNCsOnR675(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR675From((FunctionInvocation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR675To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR675To((FunctionInvocation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR675To(FunctionInvocation_c target)
{
  if (target != null) {
    target.relateAcrossR675To(this, true) ;
  }
}

public void relateAcrossR675To(FunctionInvocation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR675To(this, notifyChanges) ;
  }
}

public void setBackPointerR675To(FunctionInvocation_c target)
{
  	synchronized (backPointer_FunctionInvocation_R675) {
		backPointer_FunctionInvocation_R675.add(target);
	}
}

public void unrelateAcrossR675From(FunctionInvocation_c target)
{
  if (target != null) {
    target.unrelateAcrossR675From(this, true) ;
  }
}

public void unrelateAcrossR675From(FunctionInvocation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR675From(this, notifyChanges) ;
  }
}

public void clearBackPointerR675To(FunctionInvocation_c target)
{
  synchronized (backPointer_FunctionInvocation_R675) {
	    backPointer_FunctionInvocation_R675.remove(target);
	}
}

public static Function_c getOneS_SYNCOnR675(FunctionInvocation_c [] targets)
{
    return getOneS_SYNCOnR675(targets, null);
}

public static Function_c getOneS_SYNCOnR675(FunctionInvocation_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SYNCOnR675(targets, test, true);
}

public static Function_c getOneS_SYNCOnR675(FunctionInvocation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Function_c candidate_val = getOneS_SYNCOnR675(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SYNCOnR675(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Function_c getOneS_SYNCOnR675(FunctionInvocation_c target)
{
	return getOneS_SYNCOnR675(target, true);
}
public static Function_c getOneS_SYNCOnR675(FunctionInvocation_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsAnInvocationOfFunction ;
  } else {
    return null;
  }
}

public static Function_c [] getManyS_SYNCsOnR675(FunctionInvocation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR675(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR675(FunctionInvocation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Function_c[0];
  
  
  LinkedHashSet<Function_c> elementsSet = new LinkedHashSet<Function_c>();
  for (int i = 0; i < targets.length; i++) {
    Function_c associate = targets[i].IsAnInvocationOfFunction;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Function_c[] result = new Function_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Function_c [] getManyS_SYNCsOnR675(FunctionInvocation_c [] targets)
{
  return getManyS_SYNCsOnR675(targets, null);
}

public static Function_c [] getManyS_SYNCsOnR675(FunctionInvocation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionInvocation_c [] targetArray = new FunctionInvocation_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR675(targetArray, test, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
    return result ;
  }
  
}

public static Function_c [] getManyS_SYNCsOnR675(FunctionInvocation_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SYNCsOnR675(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR675(FunctionInvocation_c target)
{
    return getManyS_SYNCsOnR675(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR675(FunctionInvocation_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR675(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Dimensions_c> backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R51 = new ArrayList<Dimensions_c>();

public void setDimensionsOrderInChildListR51(Dimensions_c target, int index) {
	unrelateAcrossR51From(target);
	Dimensions_c[] elements = Dimensions_c.getManyS_DIMsOnR51(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR51From((Dimensions_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR51To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR51To((Dimensions_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR51To(Dimensions_c target)
{
  if (target != null) {
    target.relateAcrossR51To(this, true) ;
  }
}

public void relateAcrossR51To(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR51To(this, notifyChanges) ;
  }
}

public void setBackPointerR51To(Dimensions_c target)
{
  	synchronized (backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R51) {
		backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R51.add(target);
	}
}

public void unrelateAcrossR51From(Dimensions_c target)
{
  if (target != null) {
    target.unrelateAcrossR51From(this, true) ;
  }
}

public void unrelateAcrossR51From(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR51From(this, notifyChanges) ;
  }
}

public void clearBackPointerR51To(Dimensions_c target)
{
  synchronized (backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R51) {
	    backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R51.remove(target);
	}
}

public static Function_c getOneS_SYNCOnR51(Dimensions_c [] targets)
{
    return getOneS_SYNCOnR51(targets, null);
}

public static Function_c getOneS_SYNCOnR51(Dimensions_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SYNCOnR51(targets, test, true);
}

public static Function_c getOneS_SYNCOnR51(Dimensions_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Function_c candidate_val = getOneS_SYNCOnR51(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SYNCOnR51(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Function_c getOneS_SYNCOnR51(Dimensions_c target)
{
	return getOneS_SYNCOnR51(target, true);
}
public static Function_c getOneS_SYNCOnR51(Dimensions_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.DefinesReturnValueDimensionsForFunction ;
  } else {
    return null;
  }
}

public static Function_c [] getManyS_SYNCsOnR51(Dimensions_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR51(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR51(Dimensions_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Function_c[0];
  
  
  LinkedHashSet<Function_c> elementsSet = new LinkedHashSet<Function_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].DefinesReturnValueDimensionsForFunction == null)
	  targets[i].loadProxy();
    Function_c associate = targets[i].DefinesReturnValueDimensionsForFunction;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Function_c[] result = new Function_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Function_c [] getManyS_SYNCsOnR51(Dimensions_c [] targets)
{
  return getManyS_SYNCsOnR51(targets, null);
}

public static Function_c [] getManyS_SYNCsOnR51(Dimensions_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Dimensions_c [] targetArray = new Dimensions_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR51(targetArray, test, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
    return result ;
  }
  
}

public static Function_c [] getManyS_SYNCsOnR51(Dimensions_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SYNCsOnR51(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR51(Dimensions_c target)
{
    return getManyS_SYNCsOnR51(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR51(Dimensions_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR51(target, null, loadComponent);
}


    
  
  
// referred to navigation

FunctionBody_c backPointer_FunctionBody_R695;

public void setFunctionBodyOrderInChildListR695(FunctionBody_c target, int index) {
	unrelateAcrossR695From(target);
	FunctionBody_c[] elements = FunctionBody_c.getManyACT_FNBsOnR695(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR695From((FunctionBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR695To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR695To((FunctionBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR695To(FunctionBody_c target)
{
  if (target != null) {
    target.relateAcrossR695To(this, true) ;
  }
}

public void relateAcrossR695To(FunctionBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR695To(this, notifyChanges) ;
  }
}

public void setBackPointerR695To(FunctionBody_c target)
{
    backPointer_FunctionBody_R695 = target;
}

public void unrelateAcrossR695From(FunctionBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR695From(this, true) ;
  }
}

public void unrelateAcrossR695From(FunctionBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR695From(this, notifyChanges) ;
  }
}

public void clearBackPointerR695To(FunctionBody_c target)
{
	if (target == backPointer_FunctionBody_R695) {
		backPointer_FunctionBody_R695 = null;
	}
}

public static Function_c getOneS_SYNCOnR695(FunctionBody_c [] targets)
{
    return getOneS_SYNCOnR695(targets, null);
}

public static Function_c getOneS_SYNCOnR695(FunctionBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SYNCOnR695(targets, test, true);
}

public static Function_c getOneS_SYNCOnR695(FunctionBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Function_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Function_c candidate_val = getOneS_SYNCOnR695(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SYNCOnR695(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Function_c getOneS_SYNCOnR695(FunctionBody_c target)
{
	return getOneS_SYNCOnR695(target, true);
}
public static Function_c getOneS_SYNCOnR695(FunctionBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.SpecifiesProcessingForFunction ;
  } else {
    return null;
  }
}

public static Function_c [] getManyS_SYNCsOnR695(FunctionBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SYNCsOnR695(targets, test, true);
}

public static Function_c [] getManyS_SYNCsOnR695(FunctionBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Function_c[0];
  
  
  LinkedHashSet<Function_c> elementsSet = new LinkedHashSet<Function_c>();
  for (int i = 0; i < targets.length; i++) {
    Function_c associate = targets[i].SpecifiesProcessingForFunction;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Function_c[] result = new Function_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Function_c [] getManyS_SYNCsOnR695(FunctionBody_c [] targets)
{
  return getManyS_SYNCsOnR695(targets, null);
}

public static Function_c [] getManyS_SYNCsOnR695(FunctionBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionBody_c [] targetArray = new FunctionBody_c[1];
    targetArray[0] = target;
    return getManyS_SYNCsOnR695(targetArray, test, loadComponent);
  } else {
    Function_c [] result = new Function_c [0] ;
    return result ;
  }
  
}

public static Function_c [] getManyS_SYNCsOnR695(FunctionBody_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SYNCsOnR695(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR695(FunctionBody_c target)
{
    return getManyS_SYNCsOnR695(target, null, true);
}

public static Function_c [] getManyS_SYNCsOnR695(FunctionBody_c target, boolean loadComponent)
{
    return getManyS_SYNCsOnR695(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R8001
      PackageableElement_c relInst56433 = (PackageableElement_c) baseRoot.getInstanceList(PackageableElement_c.class).get(new Object[] {m_sync_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56433 == null) {
      			relInst56433 = (PackageableElement_c) Ooaofooa.getDefaultInstance().getInstanceList(PackageableElement_c.class).get(new Object[] {m_sync_id});
      		}
			if (relInst56433 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56433 = (PackageableElement_c) roots[i].getInstanceList(PackageableElement_c.class).get(new Object[] {m_sync_id});
					if (relInst56433 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56433 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56433) && !isProxy())) {
	      relInst56433.relateAcrossR8001To(this, notifyChanges);
	  }
	  }
	          

	if (IsDefinedInDomain == null) {          
      // R23
      Domain_c relInst56434 = (Domain_c) baseRoot.getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56434 == null) {
      			relInst56434 = (Domain_c) Ooaofooa.getDefaultInstance().getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
      		}
			if (relInst56434 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56434 = (Domain_c) roots[i].getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
					if (relInst56434 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56434 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56434) && !isProxy())) {
	      relInst56434.relateAcrossR23To(this, notifyChanges);
	  }
	  }
	}
	          

	if (HasReturnTypeOfDataType == null) {          
      // R25
      DataType_c relInst56435 = (DataType_c) baseRoot.getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56435 == null) {
      			relInst56435 = (DataType_c) Ooaofooa.getDefaultInstance().getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
      		}
			if (relInst56435 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56435 = (DataType_c) roots[i].getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
					if (relInst56435 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56435 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56435) && !isProxy())) {
	      relInst56435.relateAcrossR25To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R8001
      // PE_PE
		  inst=IsSupertypePackageableElement;
			unrelateAcrossR8001From(IsSupertypePackageableElement, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R23
      // S_DOM
		  inst=IsDefinedInDomain;
			unrelateAcrossR23From(IsDefinedInDomain, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R25
      // S_DT
		  inst=HasReturnTypeOfDataType;
			unrelateAcrossR25From(HasReturnTypeOfDataType, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Function_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Function_c inst = (Function_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Function_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Function_c FunctionInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Function_c result=findFunctionInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Function_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findFunctionInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Function_c findFunctionInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Function_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Function_c x = (Function_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Function_c FunctionInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return FunctionInstance(modelRoot,test,true);
  }
  
  public static Function_c FunctionInstance(ModelRoot modelRoot)
  {
	 return FunctionInstance(modelRoot,null,true);
  }

  public static Function_c [] FunctionInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Function_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Function_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Function_c x = (Function_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Function_c[] ret_set = new Function_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Function_c[0];
			}		
		} 
  }
  public static Function_c [] FunctionInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  FunctionInstances(modelRoot,test,true);
  }
  public static Function_c [] FunctionInstances(ModelRoot modelRoot)
  {
	return FunctionInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Function.dispose call: ";
	PackageableElement_c testR8001Inst17 = PackageableElement_c.getOnePE_PEOnR8001(this, false);

	if ( testR8001Inst17 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "8001 ";
	}
	FunctionParameter_c testR24Inst = FunctionParameter_c.getOneS_SPARMOnR24(this, false);

	if ( testR24Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "24 ";	
	}
 	FunctionInPackage_c testR31Inst = FunctionInPackage_c.getOneS_FIPOnR31(this, false);

 	if ( testR31Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "31 ";
 	}
	AutomaticWiring_c testR3201Inst = AutomaticWiring_c.getOneS_AWOnR3201(this, false);

	if ( testR3201Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "3201 ";	
	}
	FunctionValue_c testR827Inst = FunctionValue_c.getOneV_FNVOnR827(this, false);

	if ( testR827Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "827 ";	
	}
	FunctionMessage_c testR1010Inst = FunctionMessage_c.getOneMSG_FOnR1010(this, false);

	if ( testR1010Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1010 ";	
	}
	FunctionInvocation_c testR675Inst = FunctionInvocation_c.getOneACT_FNCOnR675(this, false);

	if ( testR675Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "675 ";	
	}
	Domain_c testR23Inst = Domain_c.getOneS_DOMOnR23(this, false);

	if ( testR23Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "23 ";
	}
	DataType_c testR25Inst = DataType_c.getOneS_DTOnR25(this, false);

	if ( testR25Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "25 ";
	}
	Dimensions_c testR51Inst = Dimensions_c.getOneS_DIMOnR51(this, false);

	if ( testR51Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "51 ";	
	}
	FunctionBody_c testR695Inst = FunctionBody_c.getOneACT_FNBOnR695(this, false);

	if ( testR695Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "695 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Function", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("dom_id")){
         return true;
      }
      if(attributeName.equals("dt_id")){
         return true;
      }
      if(attributeName.equals("sync_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getSync_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getSync_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getDom_idLongBased()
  {
    if ( IsDefinedInDomain != null )
    {
      return IsDefinedInDomain.getDom_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDom_id()
  {
    if ( IsDefinedInDomain != null )
    {
      return IsDefinedInDomain.getDom_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDom_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dom_id) )
      return m_dom_id;
    else
      return getDom_id();
  }
  
  public void setDom_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dom_id)){
	        return;
	    }
	}else if(m_dom_id != null){
	    if(m_dom_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dom_id", m_dom_id, newValue,true); 
   m_dom_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getAction_semantics()
  {
ModelRoot modelRoot = getModelRoot();
return Ooaofooa.Convertrelocatabletags(modelRoot			    
,getAction_semantics_internal());



  }


  public int getSuc_pars()
  {
    return m_suc_pars ;
  }


  public void setSuc_pars(int newValue)
  {
    if(m_suc_pars == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Suc_pars", new Integer(m_suc_pars), new Integer(newValue),true);

   m_suc_pars = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getAction_semantics_internal()
  {
    return m_action_semantics_internal ;
  }


  public void setAction_semantics_internal(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_action_semantics_internal)){
	        return;
	    }
	}else if(m_action_semantics_internal != null){
	    if(m_action_semantics_internal.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Action_semantics_internal", m_action_semantics_internal, newValue,true); 
   m_action_semantics_internal = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getReturn_dimensions()
  {
    return m_return_dimensions ;
  }


  public void setReturn_dimensions(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_return_dimensions)){
	        return;
	    }
	}else if(m_return_dimensions != null){
	    if(m_return_dimensions.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Return_dimensions", m_return_dimensions, newValue,true); 
   m_return_dimensions = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDt_idLongBased()
  {
    if ( HasReturnTypeOfDataType != null )
    {
      return HasReturnTypeOfDataType.getDt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDt_id()
  {
    if ( HasReturnTypeOfDataType != null )
    {
      return HasReturnTypeOfDataType.getDt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dt_id) )
      return m_dt_id;
    else
      return getDt_id();
  }
  
  public void setDt_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dt_id)){
	        return;
	    }
	}else if(m_dt_id != null){
	    if(m_dt_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dt_id", m_dt_id, newValue,true); 
   m_dt_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSync_idLongBased()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSync_id()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_id();
    }
    return m_sync_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypePackageableElement != null );
 
 }                  

  public java.util.UUID getSync_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sync_id) )
      return m_sync_id;
    else
      return getSync_id();
  }
  
  public void setSync_id(java.util.UUID newValue)
  {
   m_sync_id = IdAssigner.preprocessUUID(newValue);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Function", //$NON-NLS-1$
	  " Operation entered: Function::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Function_c [] objs = Function_c.FunctionInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Function", //$NON-NLS-1$
	  " Operation entered: Function::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Function_c_test56437_c implements ClassQueryInterface_c
    {
	  Function_c_test56437_c( java.util.UUID            p56438 ) {
	  m_p56438 = p56438;
	  }
	  private java.util.UUID             m_p56438; 
	  public boolean evaluate (Object candidate)
	  {
	      Function_c selected = (Function_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSync_id().equals(m_p56438));
	      return retval;
	  }
    }

    Function_c [] objs56436 = 
    Function_c.FunctionInstances(modelRoot, new Function_c_test56437_c(getSync_id())) ;

    if ( (  (objs56436.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function", //$NON-NLS-1$
           "Consistency: Object: Function: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56436.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56436.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56436.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function", //$NON-NLS-1$
           "Consistency: Object: Function: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56436.length )  + " Sync_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56436.length )  + " Sync_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Function is a referring class in association: rel.Numb = 23
          // The participating class is: Domain
    class Domain_c_test56442_c implements ClassQueryInterface_c
    {
	  Domain_c_test56442_c( java.util.UUID            p56443 ) {
	  m_p56443 = p56443;
	  }
	  private java.util.UUID             m_p56443; 
	  public boolean evaluate (Object candidate)
	  {
	      Domain_c selected = (Domain_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDom_id().equals(m_p56443));
	      return retval;
	  }
    }

    Domain_c [] objs56441 = 
    Domain_c.DomainInstances(modelRoot, new Domain_c_test56442_c(getDom_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56441.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function", //$NON-NLS-1$
           "Consistency: Object: Function: Association: 23: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56441.length )  + " Dom_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function: Association: 23: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56441.length )  + " Dom_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Function is a referring class in association: rel.Numb = 25
          // The participating class is: Data Type
    class DataType_c_test56445_c implements ClassQueryInterface_c
    {
	  DataType_c_test56445_c( java.util.UUID            p56446 ) {
	  m_p56446 = p56446;
	  }
	  private java.util.UUID             m_p56446; 
	  public boolean evaluate (Object candidate)
	  {
	      DataType_c selected = (DataType_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p56446));
	      return retval;
	  }
    }

    DataType_c [] objs56444 = 
    DataType_c.DataTypeInstances(modelRoot, new DataType_c_test56445_c(getDt_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56444.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function", //$NON-NLS-1$
           "Consistency: Object: Function: Association: 25: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56444.length )  + " DT_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function: Association: 25: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56444.length )  + " DT_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Function is a subtype in association: rel.Numb = 8001
          // The supertype class is: Packageable Element
         //    Note: The consistency test for this supertype has been removed 
         //          until generic package _migration_ is complete.
          // Function is a participating class in association: rel.Numb = 24
             // Object: Function Parameter
          // Associated Other Side: rel.Numb = 31
            // Link Object: Function in Package
    class FunctionInPackage_c_test56450_c implements ClassQueryInterface_c
    {
	  FunctionInPackage_c_test56450_c( java.util.UUID            p56451 ) {
	  m_p56451 = p56451;
	  }
	  private java.util.UUID             m_p56451; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionInPackage_c selected = (FunctionInPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSync_id().equals(m_p56451));
	      return retval;
	  }
    }

    FunctionInPackage_c [] objs56452 = 
    FunctionInPackage_c.FunctionInPackageInstances(modelRoot, new FunctionInPackage_c_test56450_c(getSync_id())) ;

    if ( (  (objs56452.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function", //$NON-NLS-1$
           "Consistency: Object: Function: Association: 31: Cardinality of a link is equal to zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56452.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function: Association: 31: Cardinality of a link is equal to zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56452.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56452.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function", //$NON-NLS-1$
           "Consistency: Object: Function: Association: 31: Cardinality of a link is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56452.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function: Association: 31: Cardinality of a link is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56452.length )  , e); 
      }
      retval = false;

    }

          // Function is a participating class in association: rel.Numb = 3201
             // Object: Automatic Wiring
          // Function is a participating class in association: rel.Numb = 827
             // Object: Function Value
          // Function is a participating class in association: rel.Numb = 1010
             // Object: Function Message
          // Function is a participating class in association: rel.Numb = 675
             // Object: Function Invocation
          // Function is a participating class in association: rel.Numb = 51
             // Object: Dimensions
          // Function is a participating class in association: rel.Numb = 695
             // Object: Function Body
    class FunctionBody_c_test56454_c implements ClassQueryInterface_c
    {
	  FunctionBody_c_test56454_c( java.util.UUID            p56455 ) {
	  m_p56455 = p56455;
	  }
	  private java.util.UUID             m_p56455; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionBody_c selected = (FunctionBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSync_id().equals(m_p56455));
	      return retval;
	  }
    }

    FunctionBody_c [] objs56453 = 
    FunctionBody_c.FunctionBodyInstances(modelRoot, new FunctionBody_c_test56454_c(getSync_id())) ;

    if ( (  (objs56453.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function", //$NON-NLS-1$
           "Consistency: Object: Function: Association: 695: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56453.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function: Association: 695: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56453.length )  , e); 
      }
      retval = false;

    }

    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


if ( (  (v_pe != null)) )
{

if (v_pe != null) {
v_pe.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


return ;



}

FunctionParameter_c [] v_fparms = FunctionParameter_c.getManyS_SPARMsOnR24(this);


FunctionParameter_c  v_fparm = null;
for ( int i54988 = 0; i54988 < v_fparms.length; i54988++)
{
  v_fparm = v_fparms[i54988] ;

if (v_fparm != null) {
v_fparm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

DataType_c v_dt = DataType_c.getOneS_DTOnR25(this);


this.unrelateAcrossR25From(v_dt);


FunctionInPackage_c v_fip = FunctionInPackage_c.getOneS_FIPOnR31(this);


if ( (  (v_fip != null)) )
{

FunctionPackage_c v_fPkg = FunctionPackage_c.getOneS_FPKOnR31(v_fip);


if (v_fip != null) {
v_fip.unrelateAcrossR31From( this ) ; v_fip.unrelateAcrossR31From( v_fPkg ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_fip != null) {
// get the location of this element in the instance list
// before deleting
if ( v_fip.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_fip));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

Domain_c v_dom = Domain_c.getOneS_DOMOnR23(this);


if ( (  (v_dom != null)) )
{

this.unrelateAcrossR23From(v_dom);



}

Body_c v_body = Body_c.getOneACT_ACTOnR698(FunctionBody_c.getOneACT_FNBOnR695(this));


if ( (  (v_body != null)) )
{

if (v_body != null) {
v_body.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

FunctionInvocation_c [] v_invs = FunctionInvocation_c.getManyACT_FNCsOnR675(this);


FunctionInvocation_c  v_inv = null;
for ( int i54989 = 0; i54989 < v_invs.length; i54989++)
{
  v_inv = v_invs[i54989] ;

this.unrelateAcrossR675From(v_inv);



}

FunctionValue_c [] v_fvs = FunctionValue_c.getManyV_FNVsOnR827(this);


FunctionValue_c  v_fv = null;
for ( int i54990 = 0; i54990 < v_fvs.length; i54990++)
{
  v_fv = v_fvs[i54990] ;

this.unrelateAcrossR827From(v_fv);



}

AutomaticWiring_c [] v_aws = AutomaticWiring_c.getManyS_AWsOnR3201(this);


AutomaticWiring_c  v_aw = null;
for ( int i54991 = 0; i54991 < v_aws.length; i54991++)
{
  v_aw = v_aws[i54991] ;

this.unrelateAcrossR3201From(v_aw);



}

FunctionMessage_c [] v_fms = FunctionMessage_c.getManyMSG_FsOnR1010(this);


FunctionMessage_c  v_fm = null;
for ( int i54992 = 0; i54992 < v_fms.length; i54992++)
{
  v_fm = v_fms[i54992] ;

SynchronousMessage_c v_message = SynchronousMessage_c.getOneMSG_SMOnR1020(v_fm);


if (v_message != null) {
v_message.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR51(this);


Dimensions_c  v_dim = null;
for ( int i54993 = 0; i54993 < v_dims.length; i54993++)
{
  v_dim = v_dims[i54993] ;

this.unrelateAcrossR51From(v_dim);


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

if ( (  (v_package != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_def_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_def_dt_id = v_system.Getcoretypeid(			    
"void") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_def_dt_id);


DataType_c v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR25To(v_def_dt);



}


}

else
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent)));


java.util.UUID         v_def_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_def_dt_id = v_system.Getcoretypeid(			    
"void") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_def_dt_id);


DataType_c v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR25To(v_def_dt);



}


}


}

else
{

Domain_c v_dom = Domain_c.DomainInstance(modelRoot) ;


v_component = Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_dom));


if ( (  (v_component != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(v_component));


java.util.UUID         v_def_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_def_dt_id = v_system.Getcoretypeid(			    
"void") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_def_dt_id);


DataType_c v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR25To(v_def_dt);



}


}

else
{

  class DataType_test55696_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals("void") ;
	}
  }
DataType_c v_def_dt = DataType_c.getOneS_DTOnR14(v_dom, new DataType_test55696_c());


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR25To(v_def_dt);



}


}


}

String       v_name = Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Function"			    
,Converttoinstance()) ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setName( v_success) ;



}

else
{

Dispose() ;



}

setSuc_pars( Parsestatus_c.parseInitial) ;



   } // End initialize
  public  void Newparameter()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Newparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionParameter_c v_parm = new FunctionParameter_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_parm));


  this.relateAcrossR24To(v_parm);


if (v_parm != null) {
v_parm.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Createmessageargumentsforparameter(			    
v_parm.getSparm_id() ) ;



   } // End newParameter
  public  boolean      Isallowedreturntype(final String       p_Typename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Isallowedreturntype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

if ( Getreturndimensionscnt() != 0 && p_Typename.equals("void") )
{

return false;



}

else
{

return v_packageableElem.Isallowedtype(			    
true			    
,p_Typename);



}


}

else
{

if ( Getreturndimensionscnt() != 0 && p_Typename.equals("void") )
{

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR23(this);


if ( (  (v_domain != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(v_domain);


if ( (  (v_system != null)) )
{

return DataType_c.Isallowedreturntype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename);



}

else
{

boolean      v_result = DataType_c.Isallowedreturntype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename) ;


if ( (  !v_result) )
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


return Util_c.Isallowedreturntype(			    
v_system.Converttoinstance()			    
,p_Typename);



}

else
{

return v_result;



}


}


}


}

return false;



}


   } // End isAllowedReturnType
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getSync_id();



   } // End get_ooa_id
  public  void Resolvedatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Resolvedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dtProxy = DataType_c.getOneS_DTOnR25(this);


if ( (  (v_dtProxy != null) &&   !Util_c.Isproxy(			    
Converttoinstance())) )
{

String       v_name = v_dtProxy.getName() ;


if (v_dtProxy != null) {
v_dtProxy.unrelateAcrossR25From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

java.util.UUID         v_id = v_packageableElem.Resolvedatatyperelativetoself(			    
"void"			    
,v_name) ;


  class DataType_test55697_c implements ClassQueryInterface_c
  {
	DataType_test55697_c( java.util.UUID         p55698 ) {
		m_p55698 = p55698;
	}
	private java.util.UUID         m_p55698;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p55698) ;
	}
  }
DataType_c v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_package)), new DataType_test55697_c(v_id));


if ( (  (v_resolvedDt == null)) )
{

  class DataType_test55699_c implements ClassQueryInterface_c
  {
	DataType_test55699_c( java.util.UUID         p55700 ) {
		m_p55700 = p55700;
	}
	private java.util.UUID         m_p55700;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p55700) ;
	}
  }
v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_component)), new DataType_test55699_c(v_id));



}

if (   (v_resolvedDt != null) )
{

if (v_resolvedDt != null) {
  v_resolvedDt.relateAcrossR25To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR301(FunctionPackageInDomain_c.getOnePL_FPIDOnR301(FunctionPackage_c.getOneS_FPKOnR31(FunctionInPackage_c.getOneS_FIPOnR31(this))));


java.util.UUID         v_id = v_domain.Resolvedatatyperelativetoself(			    
"void"			    
,v_name) ;


  class DataType_test55701_c implements ClassQueryInterface_c
  {
	DataType_test55701_c( java.util.UUID         p55702 ) {
		m_p55702 = p55702;
	}
	private java.util.UUID         m_p55702;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55702)) ;
	}
  }
DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55701_c(v_id));


if ( (  (v_resolvedDT == null)) )
{

SystemModel_c v_domSys = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test55703_c implements ClassQueryInterface_c
  {
	DataType_test55703_c( java.util.UUID         p55704 ) {
		m_p55704 = p55704;
	}
	private java.util.UUID         m_p55704;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55704)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_domSys), new DataType_test55703_c(v_id));


if (   (v_resolvedDT == null) &&   (v_domSys != null) && v_domSys.getUseglobals() )
{

  class PackageableElement_test55705_c implements ClassQueryInterface_c
  {
	PackageableElement_test55705_c( java.util.UUID         p55706 ) {
		m_p55706 = p55706;
	}
	private java.util.UUID         m_p55706;
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(m_p55706) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_domSys), new PackageableElement_test55705_c(v_id));


v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);



}


}

if ( (  (v_resolvedDT != null)) )
{

if (v_resolvedDT != null) {
  v_resolvedDT.relateAcrossR25To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End resolveDatatype
  public  boolean      Isvoid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Isvoid") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR25(this);


return v_dt.getName().equals("void");



   } // End isVoid
  public  int          Getreturndimensionscnt()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Getreturndimensionscnt") ; 
               final ModelRoot modelRoot = getModelRoot();
Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR51(this);


int          v_dimensions =   (v_dims.length) ;


return v_dimensions;



   } // End getReturnDimensionsCnt
  public  void Resizereturn_dimensions(final int          p_Dimension,final int          p_Elementcount,final int          p_Numdimensions)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Resizereturn_dimensions") ; 
               final ModelRoot modelRoot = getModelRoot();
while ( (p_Numdimensions > Getreturndimensionscnt()) )
{

Dimensions_c v_dim = new Dimensions_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dim));


if (v_dim != null) {
  v_dim.setDimensioncount( Getreturndimensionscnt()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dim != null) {
  v_dim.relateAcrossR51To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

while ( (p_Numdimensions < Getreturndimensionscnt()) )
{

  class Dimensions_test55707_c implements ClassQueryInterface_c
  {
	Dimensions_test55707_c( int          p55708 ) {
		m_p55708 = p55708;
	}
	private int          m_p55708;
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == (m_p55708 - 1)) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR51(this, new Dimensions_test55707_c(Getreturndimensionscnt()));


if (v_dim != null) {
v_dim.unrelateAcrossR51From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( (p_Numdimensions > 0) )
{

  class Dimensions_test55709_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == p_Dimension) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR51(this, new Dimensions_test55709_c());


if ( (v_dim.getElementcount() != p_Elementcount) )
{

if (v_dim != null) {
  v_dim.setElementcount( p_Elementcount) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


   } // End resizeReturn_Dimensions
  public  void Initializeorder()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Initializeorder") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionParameter_c [] v_peers = FunctionParameter_c.getManyS_SPARMsOnR24(this);


if ( (  (v_peers.length) > 1) )
{

boolean      v_initialOrderingCheckPerformed = false ;


  class FunctionParameter_test55710_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		FunctionParameter_c selected = (FunctionParameter_c)candidate;
		return (selected.getSync_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
FunctionParameter_c v_head = FunctionParameter_c.getOneS_SPARMOnR24(this, new FunctionParameter_test55710_c());


FunctionParameter_c v_endOfList = v_head ;


int          v_loopCnt = 0 ;


FunctionParameter_c  v_peer = null;
for ( int i54994 = 0; i54994 < v_peers.length; i54994++)
{
  v_peer = v_peers[i54994] ;

if ( (  !v_initialOrderingCheckPerformed) )
{

FunctionParameter_c v_predecessor = FunctionParameter_c.getOneS_SPARMOnR54Precedes(v_peer);


FunctionParameter_c v_successor = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(v_peer);


v_initialOrderingCheckPerformed = true ;


if ( (  (v_predecessor != null) ||   (v_successor != null)) )
{

break;



}

v_head = v_peer ;


v_endOfList = v_peer ;



}

if ( (v_loopCnt == 1) )
{

if ( (v_peer.getName().compareTo(v_head.getName()) < 0) )
{

if (v_peer != null) {
  v_peer.relateAcrossR54ToPrecedes(v_head);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if (v_head != null) {
  v_head.relateAcrossR54ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}


}

else if ( (v_loopCnt > 1) )
{

FunctionParameter_c v_insertPoint = v_head ;


FunctionParameter_c v_next = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(v_head);


while ( (  (v_next != null)) )
{

if ( (v_next.getName().compareTo(v_peer.getName()) < 0) )
{

break;



}

else
{

v_insertPoint = v_next ;


v_next = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(v_next);



}


}

if ( (  (v_next == null)) )
{

if (v_peer != null) {
  v_peer.relateAcrossR54ToPrecedes(v_endOfList);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if ( ((v_insertPoint == v_head) && (v_peer.getName().compareTo(v_head.getName()) > 0)) )
{

if (v_head != null) {
  v_head.relateAcrossR54ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}

else
{

if (v_next != null) {
v_next.unrelateAcrossR54FromPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_peer != null) {
  v_peer.relateAcrossR54ToPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_next != null) {
  v_next.relateAcrossR54ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

v_loopCnt = v_loopCnt + 1 ;



}


}


   } // End initializeOrder
  public  boolean      Canrefertodatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Canrefertodatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR25(this);


if ( (  (v_dt != null)) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

return v_packageableElem.Canrefertodatatype(			    
v_dt.getDt_id()			    
,v_dt.getName());



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR23(this);


DataTypePackage_c v_dtPkg = DataTypePackage_c.getOneS_DPKOnR39(DataTypeInPackage_c.getOneS_DIPOnR39(v_dt));


if ( (  !v_dtPkg.Isdomainlevel()) )
{

if ( (v_domain.Participatesinsystem()) )
{

return true;



}

else
{

return false;



}


}

else
{

Domain_c v_dtDomain = Domain_c.getOneS_DOMOnR14(v_dt);


if ( (v_dtDomain == v_domain) )
{

return true;



}


}


}


}

return false;



   } // End canReferToDataType
  public  boolean      Isreferringtodefaultdatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Isreferringtodefaultdatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR25(this);


String       v_elementType = Util_c.Getsimpleclassname(			    
Converttoinstance()) ;


if ( (v_dt.getName().equals(DataType_c.Getdefaultdatatypename(modelRoot			    
,v_elementType))) )
{

return true;



}

return false;



   } // End isReferringToDefaultDataType
  public  java.util.UUID         Getcontainingcomponentid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Getcontainingcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_domain = Domain_c.getOneS_DOMOnR23(this);


boolean      v_isInGenericPackage =   (v_domain == null) ;


if ( v_isInGenericPackage )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(this));


if (   (v_package != null) )
{

return v_package.Getcontainingcomponentid();



}

if (   (v_component != null) )
{

return v_component.getId();



}

User_c.Logerror(			    
"Function has no parent in Function.getContainingComponentId()"			    
,Getpath() ) ;


return Gd_c.Null_unique_id();



}

return v_domain.Getcontainingcomponentid();



   } // End getContainingComponentId
  public  boolean      Canusedatatype(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Canusedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

  class SearchResultSet_test55711_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test55711_c());


  class DataType_test55712_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet)), new DataType_test55712_c());


if (   (v_component != null) )
{

  class ComponentResultSet_test55713_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test55713_c());


  class DataType_test55714_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet)), new DataType_test55714_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR23(this);


if ( (v_domain.Participatesinsystem()) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test55715_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test55715_c());


if (   (v_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class PackageableElement_test55716_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(p_Id) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system), new PackageableElement_test55716_c());


v_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_dt == null)) )
{

  class DataType_test55717_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55717_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}


}

else
{

  class DataType_test55718_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55718_c());


if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}


}

return false;



}


   } // End canUseDataType
  public  java.util.UUID         Getcontainerid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Getcontainerid") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(this));


if (   (v_component != null) )
{

return v_component.getId();



}

else
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


if (   (v_package != null) )
{

return v_package.getPackage_id();



}


}

return Gd_c.Null_unique_id();



   } // End getContainerId
  public  void Pastefunctionparameter(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Pastefunctionparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionParameter_c v_parm = (FunctionParameter_c) modelRoot.getInstanceList(FunctionParameter_c.class).getGlobal(null, p_Id);


if ( (  (v_parm != null)) )
{

Function_c v_existing = Function_c.getOneS_SYNCOnR24(v_parm);


if ( (  (v_existing != null)) )
{

if (v_existing != null) {
v_existing.unrelateAcrossR24From(v_parm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_parm != null) {
  v_parm.relateAcrossR24To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_parm != null) {
  v_parm.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_parm.Converttoinstance()			    
,v_parm.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Addparametertoorder(			    
v_parm.getSparm_id() ) ;


Createmessageargumentsforparameter(			    
v_parm.getSparm_id() ) ;



}


   } // End pasteFunctionParameter
  public  void Addparametertoorder(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Addparametertoorder") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionParameter_c v_parameter = (FunctionParameter_c) modelRoot.getInstanceList(FunctionParameter_c.class).getGlobal(null, p_Id);


if ( (  (v_parameter != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


FunctionParameter_c [] v_peers = FunctionParameter_c.getManyS_SPARMsOnR24(this);


FunctionParameter_c  v_peer = null;
for ( int i54995 = 0; i54995 < v_peers.length; i54995++)
{
  v_peer = v_peers[i54995] ;

if ( (v_peer != v_parameter) )
{

FunctionParameter_c v_predecessor = FunctionParameter_c.getOneS_SPARMOnR54Precedes(v_peer);


if ( (  (v_predecessor == null)) )
{

if (v_parameter != null) {
  v_parameter.relateAcrossR54ToSucceeds(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}


   } // End addParameterToOrder
  public  void Createmessageargumentsforparameter(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Createmessageargumentsforparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionParameter_c v_parameter = (FunctionParameter_c) modelRoot.getInstanceList(FunctionParameter_c.class).getGlobal(null, p_Id);


if ( (  (v_parameter != null)) )
{

Message_c [] v_messages = Message_c.getManyMSG_MsOnR1018(SynchronousMessage_c.getManyMSG_SMsOnR1020(FunctionMessage_c.getManyMSG_FsOnR1010(this)));


Message_c  v_message = null;
for ( int i54996 = 0; i54996 < v_messages.length; i54996++)
{
  v_message = v_messages[i54996] ;

MessageArgument_c v_arg = new MessageArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_arg));


FunctionArgument_c v_fa = new FunctionArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fa));


if (v_fa != null) {
  v_fa.relateAcrossR1016To(v_parameter);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_fa != null) {
  v_fa.relateAcrossR1013To(v_arg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_message != null) {
  v_message.relateAcrossR1001To(v_arg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


   } // End createMessageArgumentsForParameter
  public  String       Getpath()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


String       v_result = "" ;


if ( (v_isInGenericPackage) )
{

if ( (  (v_package != null)) )
{

v_result = v_package.Getpath(			    
getName()) ;



}

else
{

v_result = v_component.Getpath(			    
true			    
,getName()) ;



}


}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR29(FunctionPackage_c.getOneS_FPKOnR31(this));


FunctionPackage_c v_fnpkg = FunctionPackage_c.getOneS_FPKOnR31(this);


v_result = v_fnpkg.getName() ;


FunctionPackage_c v_fpip = FunctionPackage_c.getOneS_FPKOnR30(FunctionPackageInPackage_c.getOneS_FPIPOnR32(v_fnpkg));


while ( (  (v_fpip != null)) )
{

v_result = v_fpip.getName() + "::" + v_result ;


FunctionPackage_c v_epip = FunctionPackage_c.getOneS_FPKOnR30(FunctionPackageInPackage_c.getOneS_FPIPOnR32(v_fpip));



}

v_result = v_domain.getName() + "::" + v_result + "::" + getName() ;



}

return v_result;



   } // End getPath
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

Function_c [] v_functions = Function_c.getManyS_SYNCsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(v_package));


Function_c  v_function = null;
for ( int i54997 = 0; i54997 < v_functions.length; i54997++)
{
  v_function = v_functions[i54997] ;

if ( (v_function != this && v_function.Getsignature().equals(Getsignature())) )
{

IntegrityManager_c.Createissue(modelRoot			    
,"Found another function under the same package with a " + "matching signature." + Gd_c.Newline() + Gd_c.Newline() + "Signature: " + Getsignature()			    
,Converttoinstance()			    
,getSync_id()			    
,getName()			    
,Getpath()			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity
  public  String       Getsignature()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function", " Operation entered: Function::Getsignature") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_signature = getName() ;


int          v_count = 0 ;


FunctionParameter_c [] v_parameters = FunctionParameter_c.getManyS_SPARMsOnR24(this);


int          v_paramLength =   (v_parameters.length) ;


if ( (v_paramLength > 0) )
{

v_signature = v_signature + "(" ;



}

FunctionParameter_c  v_parameter = null;
for ( int i54998 = 0; i54998 < v_parameters.length; i54998++)
{
  v_parameter = v_parameters[i54998] ;

DataType_c v_type = DataType_c.getOneS_DTOnR26(v_parameter);


if ( (v_count > 0 && v_count != v_paramLength - 1) )
{

v_signature = v_signature + ", " ;



}

v_signature = v_signature + v_type.getName() ;


v_count = v_count + 1 ;



}

if ( (v_paramLength > 0) )
{

v_signature = v_signature + ")" ;



}

return v_signature;



   } // End getSignature

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Function
