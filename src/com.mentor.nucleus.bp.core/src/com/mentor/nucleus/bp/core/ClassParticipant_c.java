      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ClassParticipant_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_CLASS_PARTICIPANT extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ClassParticipant_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ClassParticipant_c(ModelRoot modelRoot,
       java.util.UUID         p_m_part_id,
       java.util.UUID         p_m_obj_id,
       String       p_m_label,
       String       p_m_informalname,
       String       p_m_descrip,
       boolean      p_m_isformal)
  {
    super(modelRoot);
       m_label = p_m_label;
       m_informalname = p_m_informalname;
       m_descrip = p_m_descrip;
       m_isformal = p_m_isformal;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
    Object [] key = {m_part_id};
    addInstanceToMap(key);
  }
  static public ClassParticipant_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_part_id,
       java.util.UUID         p_m_obj_id,
       String       p_m_label,
       String       p_m_informalname,
       String       p_m_descrip,
       boolean      p_m_isformal, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ClassParticipant_c.class);
      ClassParticipant_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_part_id};
          new_inst = (ClassParticipant_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_label = p_m_label;
       new_inst.m_informalname = p_m_informalname;
       new_inst.m_descrip = p_m_descrip;
       new_inst.m_isformal = p_m_isformal;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ClassParticipant_c(modelRoot,
p_m_part_id,
p_m_obj_id,
p_m_label,
p_m_informalname,
p_m_descrip,
p_m_isformal
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ClassParticipant_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_part_id,
       java.util.UUID         p_m_obj_id,
       String       p_m_label,
       String       p_m_informalname,
       String       p_m_descrip,
       boolean      p_m_isformal){
    InstanceList instances = modelRoot.getInstanceList(ClassParticipant_c.class);
    ClassParticipant_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_part_id
            };
        source = (ClassParticipant_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_label = p_m_label;
       source.m_informalname = p_m_informalname;
       source.m_descrip = p_m_descrip;
       source.m_isformal = p_m_isformal;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    ClassParticipant_c new_inst = new ClassParticipant_c(modelRoot,
p_m_part_id,
p_m_obj_id,
p_m_label,
p_m_informalname,
p_m_descrip,
p_m_isformal
);
    return new_inst;
  }
  public ClassParticipant_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_label = "";   
     m_informalname = "";   
     m_descrip = "";   
     m_part_id = IdAssigner.NULL_UUID;   
     m_obj_id = IdAssigner.NULL_UUID;   
    Object [] key = {m_part_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_part_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_part_id !=  p_newKey ){
	
		m_part_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof ClassParticipant_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ClassParticipant_c)) {
           return false;
       }
       
       ClassParticipant_c me = (ClassParticipant_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getPart_id()) || IdAssigner.NULL_UUID.equals(((ClassParticipant_c)elem).getPart_id())) && this != elem)) {
      	return false;
      }
      if (!getPart_id().equals(((ClassParticipant_c)elem).getPart_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ClassParticipant_c)) {
           return false;
       }
       
       ClassParticipant_c me = (ClassParticipant_c)elem;
      if (!getPart_idCachedValue().equals(((ClassParticipant_c)elem).getPart_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private String       m_label ;
  private String       m_informalname ;
  private String       m_descrip ;
  private boolean      m_isformal ;
  private java.util.UUID         m_part_id ;
  private java.util.UUID         m_obj_id ;
      
// declare association references from this class
  
  
    
// referring navigation

ModelClass_c RepresentsModelClass ;
public void relateAcrossR939To(ModelClass_c target)
{
	relateAcrossR939To(target, true);
}
public void relateAcrossR939To(ModelClass_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == RepresentsModelClass) return;  // already related

    if ( RepresentsModelClass != target ) {
    
    Object oldKey = getInstanceKey();

    if (RepresentsModelClass != null) {
        UmlProblem.removeXtUMLProblem(this, RepresentsModelClass);
    
        RepresentsModelClass.clearBackPointerR939To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ClassParticipant_c.relateAcrossR939To(ModelClass_c target)", 
			"Relate performed across R939 from Class Participant to Model Class without unrelate of prior instance.");  
		}
    }
                
    	RepresentsModelClass = target ;
        if(IdAssigner.NULL_UUID.equals(target.getObj_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_obj_id = target.getObj_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR939To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "939", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR939From(ModelClass_c target)
{
	unrelateAcrossR939From(target, true);
}
public void unrelateAcrossR939From(ModelClass_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (RepresentsModelClass == null) return;  // already unrelated
	
	if (target != RepresentsModelClass) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R939", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR939To(this);
    }
    

      if(RepresentsModelClass != null) {
      
        m_obj_id = RepresentsModelClass.getObj_id();
        if(IdAssigner.NULL_UUID.equals(m_obj_id))
        {
          m_obj_id = RepresentsModelClass.getObj_idCachedValue();
        }       
        RepresentsModelClass = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "939", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ClassParticipant_c getOneSQ_CPOnR939(ModelClass_c [] targets)
{
    return getOneSQ_CPOnR939(targets, null);
}

public static ClassParticipant_c getOneSQ_CPOnR939(ModelClass_c [] targets, ClassQueryInterface_c test)
{
    ClassParticipant_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_CPOnR939(targets[i], test);
        }
    }

    return ret_val;
}

public static ClassParticipant_c getOneSQ_CPOnR939(ModelClass_c target)
{
  return getOneSQ_CPOnR939(target, null);
}

public static ClassParticipant_c getOneSQ_CPOnR939(ModelClass_c target, boolean loadComponent)
{
    return getOneSQ_CPOnR939(target.getModelRoot(), target, null, loadComponent);
}

public static ClassParticipant_c getOneSQ_CPOnR939(ModelClass_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_CPOnR939(target.getModelRoot(), target, test);
  }
  return null;
}

public static ClassParticipant_c getOneSQ_CPOnR939(ModelRoot modelRoot, ModelClass_c target, ClassQueryInterface_c test)
{
	return getOneSQ_CPOnR939(modelRoot, target, test, true);
}

public static ClassParticipant_c getOneSQ_CPOnR939(ModelRoot modelRoot, ModelClass_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  ClassParticipant_c result = null;
  
  result=find_getOneSQ_CPOnR939(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,ClassParticipant_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneSQ_CPOnR939(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static ClassParticipant_c find_getOneSQ_CPOnR939(ModelRoot modelRoot, ModelClass_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939) {
	    for ( int i = 0; i < target.backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939.size(); ++i ) {
	      ClassParticipant_c source = (ClassParticipant_c)target.backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ClassParticipant_c [] getManySQ_CPsOnR939(ModelClass_c [] targets)
{
  return getManySQ_CPsOnR939(targets, null);
}
public static ClassParticipant_c [] getManySQ_CPsOnR939(ModelClass_c [] targets, boolean loadComponent)
{
  return getManySQ_CPsOnR939(targets, null, loadComponent);
}
public static ClassParticipant_c [] getManySQ_CPsOnR939(ModelClass_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_CPsOnR939(targets, test, true);
}

public static ClassParticipant_c [] getManySQ_CPsOnR939(ModelClass_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ClassParticipant_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ClassParticipant_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(ClassParticipant_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939) {
	    for (int j = 0; j < targets[i].backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939.size(); ++j) {
	      ClassParticipant_c source = (ClassParticipant_c)targets[i].backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ClassParticipant_c[] ret_set = new ClassParticipant_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ClassParticipant_c[0];
  }
  }

public static ClassParticipant_c [] getManySQ_CPsOnR939(ModelClass_c target)
{
  return getManySQ_CPsOnR939(target, null);
}

public static ClassParticipant_c [] getManySQ_CPsOnR939(ModelClass_c target, boolean loadComponent)
{
  return getManySQ_CPsOnR939(target, null, loadComponent);
}

public static ClassParticipant_c [] getManySQ_CPsOnR939(ModelClass_c target, ClassQueryInterface_c test)
{
	return getManySQ_CPsOnR939(target, test, true);
}

public static ClassParticipant_c [] getManySQ_CPsOnR939(ModelClass_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ClassParticipant_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ClassParticipant_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939) {
    for (int i = 0; i < target.backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939.size(); ++i) {
      ClassParticipant_c source = (ClassParticipant_c)target.backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ClassParticipant_c[] ret_set = new ClassParticipant_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ClassParticipant_c[0];
	}
  }


  
    
// referring navigation

InteractionParticipant_c IsSupertypeInteractionParticipant ;
public void relateAcrossR930To(InteractionParticipant_c target)
{
	relateAcrossR930To(target, true);
}
public void relateAcrossR930To(InteractionParticipant_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypeInteractionParticipant) return;  // already related

    if ( IsSupertypeInteractionParticipant != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypeInteractionParticipant != null) {
    
        IsSupertypeInteractionParticipant.clearBackPointerR930To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ClassParticipant_c.relateAcrossR930To(InteractionParticipant_c target)", 
			"Relate performed across R930 from Class Participant to Interaction Participant without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypeInteractionParticipant = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPart_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_part_id = target.getPart_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR930To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "930", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR930From(InteractionParticipant_c target)
{
	unrelateAcrossR930From(target, true);
}
public void unrelateAcrossR930From(InteractionParticipant_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypeInteractionParticipant == null) return;  // already unrelated
	
	if (target != IsSupertypeInteractionParticipant) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R930", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR930To(this);
    }
    

      if(IsSupertypeInteractionParticipant != null) {
      
        m_part_id = IsSupertypeInteractionParticipant.getPart_id();
        if(IdAssigner.NULL_UUID.equals(m_part_id))
        {
          m_part_id = IsSupertypeInteractionParticipant.getPart_idCachedValue();
        }       
        IsSupertypeInteractionParticipant = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "930", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ClassParticipant_c getOneSQ_CPOnR930(InteractionParticipant_c [] targets)
{
    return getOneSQ_CPOnR930(targets, null);
}

public static ClassParticipant_c getOneSQ_CPOnR930(InteractionParticipant_c [] targets, ClassQueryInterface_c test)
{
    ClassParticipant_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_CPOnR930(targets[i], test);
        }
    }

    return ret_val;
}

public static ClassParticipant_c getOneSQ_CPOnR930(InteractionParticipant_c target)
{
  return getOneSQ_CPOnR930(target, null);
}

public static ClassParticipant_c getOneSQ_CPOnR930(InteractionParticipant_c target, boolean loadComponent)
{
    return getOneSQ_CPOnR930(target.getModelRoot(), target, null, loadComponent);
}

public static ClassParticipant_c getOneSQ_CPOnR930(InteractionParticipant_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_CPOnR930(target.getModelRoot(), target, test);
  }
  return null;
}

public static ClassParticipant_c getOneSQ_CPOnR930(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test)
{
	return getOneSQ_CPOnR930(modelRoot, target, test, true);
}

public static ClassParticipant_c getOneSQ_CPOnR930(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSQ_CPOnR930(modelRoot,target,test);
}
private static ClassParticipant_c find_getOneSQ_CPOnR930(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    ClassParticipant_c source = (ClassParticipant_c)target.backPointer_IsSubtypeClassParticipantIsSubtype_R930;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static ClassParticipant_c [] getManySQ_CPsOnR930(InteractionParticipant_c [] targets)
{
  return getManySQ_CPsOnR930(targets, null);
}
public static ClassParticipant_c [] getManySQ_CPsOnR930(InteractionParticipant_c [] targets, boolean loadComponent)
{
  return getManySQ_CPsOnR930(targets, null, loadComponent);
}
public static ClassParticipant_c [] getManySQ_CPsOnR930(InteractionParticipant_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_CPsOnR930(targets, test, true);
}

public static ClassParticipant_c [] getManySQ_CPsOnR930(InteractionParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ClassParticipant_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ClassParticipant_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      ClassParticipant_c source = (ClassParticipant_c)targets[i].backPointer_IsSubtypeClassParticipantIsSubtype_R930;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	ClassParticipant_c[] ret_set = new ClassParticipant_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ClassParticipant_c[0];
  }
  }

public static ClassParticipant_c [] getManySQ_CPsOnR930(InteractionParticipant_c target)
{
  if (target != null) {
    InteractionParticipant_c [] targetArray = new InteractionParticipant_c[1];
    targetArray[0] = target;
    return getManySQ_CPsOnR930(targetArray);
  } else {
    ClassParticipant_c [] result = new ClassParticipant_c [0] ;
  return result ;
}
}

public static ClassParticipant_c [] getManySQ_CPsOnR930(InteractionParticipant_c target, boolean loadComponent)
{
  if (target != null) {
    InteractionParticipant_c [] targetArray = new InteractionParticipant_c[1];
    targetArray[0] = target;
    return getManySQ_CPsOnR930(targetArray, loadComponent);
  } else {
    ClassParticipant_c [] result = new ClassParticipant_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<ClassParticipantAttribute_c> backPointer_MayHaveClassParticipantAttributeMayHave_R935 = new ArrayList<ClassParticipantAttribute_c>();

public void setClassParticipantAttributeOrderInChildListR935(ClassParticipantAttribute_c target, int index) {
	unrelateAcrossR935From(target);
	ClassParticipantAttribute_c[] elements = ClassParticipantAttribute_c.getManySQ_CPAsOnR935(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR935From((ClassParticipantAttribute_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR935To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR935To((ClassParticipantAttribute_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR935To(ClassParticipantAttribute_c target)
{
  if (target != null) {
    target.relateAcrossR935To(this, true) ;
  }
}

public void relateAcrossR935To(ClassParticipantAttribute_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR935To(this, notifyChanges) ;
  }
}

public void setBackPointerR935To(ClassParticipantAttribute_c target)
{
  	synchronized (backPointer_MayHaveClassParticipantAttributeMayHave_R935) {
		backPointer_MayHaveClassParticipantAttributeMayHave_R935.add(target);
	}
}

public void unrelateAcrossR935From(ClassParticipantAttribute_c target)
{
  if (target != null) {
    target.unrelateAcrossR935From(this, true) ;
  }
}

public void unrelateAcrossR935From(ClassParticipantAttribute_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR935From(this, notifyChanges) ;
  }
}

public void clearBackPointerR935To(ClassParticipantAttribute_c target)
{
  synchronized (backPointer_MayHaveClassParticipantAttributeMayHave_R935) {
	    backPointer_MayHaveClassParticipantAttributeMayHave_R935.remove(target);
	}
}

public static ClassParticipant_c getOneSQ_CPOnR935(ClassParticipantAttribute_c [] targets)
{
    return getOneSQ_CPOnR935(targets, null);
}

public static ClassParticipant_c getOneSQ_CPOnR935(ClassParticipantAttribute_c [] targets, ClassQueryInterface_c test)
{
    return getOneSQ_CPOnR935(targets, test, true);
}

public static ClassParticipant_c getOneSQ_CPOnR935(ClassParticipantAttribute_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ClassParticipant_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ClassParticipant_c candidate_val = getOneSQ_CPOnR935(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSQ_CPOnR935(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ClassParticipant_c getOneSQ_CPOnR935(ClassParticipantAttribute_c target)
{
	return getOneSQ_CPOnR935(target, true);
}
public static ClassParticipant_c getOneSQ_CPOnR935(ClassParticipantAttribute_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.BelongsToClassParticipant ;
  } else {
    return null;
  }
}

public static ClassParticipant_c [] getManySQ_CPsOnR935(ClassParticipantAttribute_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySQ_CPsOnR935(targets, test, true);
}

public static ClassParticipant_c [] getManySQ_CPsOnR935(ClassParticipantAttribute_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ClassParticipant_c[0];
  
  
  LinkedHashSet<ClassParticipant_c> elementsSet = new LinkedHashSet<ClassParticipant_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].BelongsToClassParticipant == null)
	  targets[i].loadProxy();
    ClassParticipant_c associate = targets[i].BelongsToClassParticipant;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ClassParticipant_c[] result = new ClassParticipant_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ClassParticipant_c [] getManySQ_CPsOnR935(ClassParticipantAttribute_c [] targets)
{
  return getManySQ_CPsOnR935(targets, null);
}

public static ClassParticipant_c [] getManySQ_CPsOnR935(ClassParticipantAttribute_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ClassParticipantAttribute_c [] targetArray = new ClassParticipantAttribute_c[1];
    targetArray[0] = target;
    return getManySQ_CPsOnR935(targetArray, test, loadComponent);
  } else {
    ClassParticipant_c [] result = new ClassParticipant_c [0] ;
    return result ;
  }
  
}

public static ClassParticipant_c [] getManySQ_CPsOnR935(ClassParticipantAttribute_c target,
    ClassQueryInterface_c test)
{
    return getManySQ_CPsOnR935(target, null, true);
}

public static ClassParticipant_c [] getManySQ_CPsOnR935(ClassParticipantAttribute_c target)
{
    return getManySQ_CPsOnR935(target, null, true);
}

public static ClassParticipant_c [] getManySQ_CPsOnR935(ClassParticipantAttribute_c target, boolean loadComponent)
{
    return getManySQ_CPsOnR935(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (RepresentsModelClass == null) {          
      // R939
      ModelClass_c relInst40646 = (ModelClass_c) baseRoot.getInstanceList(ModelClass_c.class).get(new Object[] {m_obj_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40646 == null) {
      			relInst40646 = (ModelClass_c) Ooaofooa.getDefaultInstance().getInstanceList(ModelClass_c.class).get(new Object[] {m_obj_id});
      		}
			if (relInst40646 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40646 = (ModelClass_c) roots[i].getInstanceList(ModelClass_c.class).get(new Object[] {m_obj_id});
					if (relInst40646 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40646 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40646) && !isProxy())) {
	      relInst40646.relateAcrossR939To(this, notifyChanges);
	  }
	  }
	}
	          

      // R930
      InteractionParticipant_c relInst40647 = (InteractionParticipant_c) baseRoot.getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_part_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40647 == null) {
      			relInst40647 = (InteractionParticipant_c) Ooaofooa.getDefaultInstance().getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_part_id});
      		}
			if (relInst40647 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40647 = (InteractionParticipant_c) roots[i].getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_part_id});
					if (relInst40647 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40647 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40647) && !isProxy())) {
	      relInst40647.relateAcrossR930To(this, notifyChanges);
	  }
	  }
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R939
      // O_OBJ
		  inst=RepresentsModelClass;
			unrelateAcrossR939From(RepresentsModelClass, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R930
      // SQ_P
		  inst=IsSupertypeInteractionParticipant;
			unrelateAcrossR930From(IsSupertypeInteractionParticipant, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ClassParticipant_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ClassParticipant_c inst = (ClassParticipant_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ClassParticipant_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ClassParticipant_c ClassParticipantInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ClassParticipant_c result=findClassParticipantInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,ClassParticipant_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findClassParticipantInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static ClassParticipant_c findClassParticipantInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ClassParticipant_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ClassParticipant_c x = (ClassParticipant_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static ClassParticipant_c ClassParticipantInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ClassParticipantInstance(modelRoot,test,true);
  }
  
  public static ClassParticipant_c ClassParticipantInstance(ModelRoot modelRoot)
  {
	 return ClassParticipantInstance(modelRoot,null,true);
  }

  public static ClassParticipant_c [] ClassParticipantInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, ClassParticipant_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(ClassParticipant_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ClassParticipant_c x = (ClassParticipant_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ClassParticipant_c[] ret_set = new ClassParticipant_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ClassParticipant_c[0];
			}		
		} 
  }
  public static ClassParticipant_c [] ClassParticipantInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ClassParticipantInstances(modelRoot,test,true);
  }
  public static ClassParticipant_c [] ClassParticipantInstances(ModelRoot modelRoot)
  {
	return ClassParticipantInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Class Participant.dispose call: ";
	ModelClass_c testR939Inst = ModelClass_c.getOneO_OBJOnR939(this, false);

	if ( testR939Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "939 ";
	}
	InteractionParticipant_c testR930Inst5 = InteractionParticipant_c.getOneSQ_POnR930(this, false);

	if ( testR930Inst5 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "930 ";
	}
	ClassParticipantAttribute_c testR935Inst = ClassParticipantAttribute_c.getOneSQ_CPAOnR935(this, false);

	if ( testR935Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "935 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Class Participant", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("part_id")){
         return true;
      }
      if(attributeName.equals("obj_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getPart_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getPart_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public String getLabel()
  {
ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

return v_mclass.getName();



}

else
{

return getInformalname();



}


  }


  public String getInformalname()
  {
    return m_informalname ;
  }


  public void setInformalname(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_informalname)){
	        return;
	    }
	}else if(m_informalname != null){
	    if(m_informalname.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Informalname", m_informalname, newValue,true); 
   m_informalname = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getIsformal()
  {
ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

return true;



}

else
{

return false;



}


  }


  public long getPart_idLongBased()
  {
    if ( IsSupertypeInteractionParticipant != null )
    {
      return IsSupertypeInteractionParticipant.getPart_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPart_id()
  {
    if ( IsSupertypeInteractionParticipant != null )
    {
      return IsSupertypeInteractionParticipant.getPart_id();
    }
    return IdAssigner.NULL_UUID;
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypeInteractionParticipant != null );
 
 }                  

  public java.util.UUID getPart_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_part_id) )
      return m_part_id;
    else
      return getPart_id();
  }
  
  public void setPart_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_part_id)){
	        return;
	    }
	}else if(m_part_id != null){
	    if(m_part_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Part_id", m_part_id, newValue,true); 
   m_part_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getObj_idLongBased()
  {
    if ( RepresentsModelClass != null )
    {
      return RepresentsModelClass.getObj_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getObj_id()
  {
    if ( RepresentsModelClass != null )
    {
      return RepresentsModelClass.getObj_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getObj_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_obj_id) )
      return m_obj_id;
    else
      return getObj_id();
  }
  
  public void setObj_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_obj_id)){
	        return;
	    }
	}else if(m_obj_id != null){
	    if(m_obj_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Obj_id", m_obj_id, newValue,true); 
   m_obj_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Class Participant", //$NON-NLS-1$
	  " Operation entered: Class Participant::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ClassParticipant_c [] objs = ClassParticipant_c.ClassParticipantInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Class Participant", //$NON-NLS-1$
	  " Operation entered: Class Participant::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ClassParticipant_c_test40649_c implements ClassQueryInterface_c
    {
	  ClassParticipant_c_test40649_c( java.util.UUID            p40650 ) {
	  m_p40650 = p40650;
	  }
	  private java.util.UUID             m_p40650; 
	  public boolean evaluate (Object candidate)
	  {
	      ClassParticipant_c selected = (ClassParticipant_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPart_id().equals(m_p40650));
	      return retval;
	  }
    }

    ClassParticipant_c [] objs40648 = 
    ClassParticipant_c.ClassParticipantInstances(modelRoot, new ClassParticipant_c_test40649_c(getPart_id())) ;

    if ( (  (objs40648.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Class Participant", //$NON-NLS-1$
           "Consistency: Object: Class Participant: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40648.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Class Participant: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40648.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs40648.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Class Participant", //$NON-NLS-1$
           "Consistency: Object: Class Participant: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40648.length )  + " Part_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Class Participant: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40648.length )  + " Part_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Class Participant is a subtype in association: rel.Numb = 930
          // The supertype class is: Interaction Participant
    class InteractionParticipant_c_test40654_c implements ClassQueryInterface_c
    {
	  InteractionParticipant_c_test40654_c( java.util.UUID            p40655 ) {
	  m_p40655 = p40655;
	  }
	  private java.util.UUID             m_p40655; 
	  public boolean evaluate (Object candidate)
	  {
	      InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPart_id().equals(m_p40655));
	      return retval;
	  }
    }

    InteractionParticipant_c [] objs40653 = 
    InteractionParticipant_c.InteractionParticipantInstances(modelRoot, new InteractionParticipant_c_test40654_c(getPart_id())) ;

    if ( (  (objs40653.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Class Participant", //$NON-NLS-1$
           "Consistency: Object: Class Participant: Association: 930: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40653.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Class Participant: Association: 930: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40653.length )  , e); 
      }
      retval = false;

    }

          // Class Participant is a referring class in association: rel.Numb = 939
          // The participating class is: Model Class
    class ModelClass_c_test40657_c implements ClassQueryInterface_c
    {
	  ModelClass_c_test40657_c( java.util.UUID            p40658 ) {
	  m_p40658 = p40658;
	  }
	  private java.util.UUID             m_p40658; 
	  public boolean evaluate (Object candidate)
	  {
	      ModelClass_c selected = (ModelClass_c) candidate;
	      boolean retval = false;
	      retval = (selected.getObj_id().equals(m_p40658));
	      return retval;
	  }
    }

    ModelClass_c [] objs40656 = 
    ModelClass_c.ModelClassInstances(modelRoot, new ModelClass_c_test40657_c(getObj_id())) ;

    if ( (  (objs40656.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Class Participant", //$NON-NLS-1$
           "Consistency: Object: Class Participant: Association: 939: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40656.length )  + " Obj_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Class Participant: Association: 939: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40656.length )  + " Obj_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Class Participant is a participating class in association: rel.Numb = 935
             // Object: Class Participant Attribute
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_participant = InteractionParticipant_c.getOneSQ_POnR930(this);


if ( (  (v_participant != null)) )
{

if (v_participant != null) {
v_participant.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

if (v_mclass != null) {
v_mclass.unrelateAcrossR939From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

ClassParticipantAttribute_c [] v_attrs = ClassParticipantAttribute_c.getManySQ_CPAsOnR935(this);


ClassParticipantAttribute_c  v_attr = null;
for ( int i37307 = 0; i37307 < v_attrs.length; i37307++)
{
  v_attr = v_attrs[i37307] ;

this.unrelateAcrossR935From(v_attr);


if (v_attr != null) {
v_attr.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



}


   } // End dispose
  public  int  Get_style()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.Box;



   } // End get_style
  public  int          Get_entries(final int          p_Comp_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Get_entries") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

return v_mclass.Get_entries(			    
p_Comp_num);



}

if ( (p_Comp_num == 1) )
{

return 1;



}

if ( (p_Comp_num == 2) )
{

ClassParticipantAttribute_c [] v_attrs = ClassParticipantAttribute_c.getManySQ_CPAsOnR935(this);


return   (v_attrs.length);



}

if ( (p_Comp_num == 3) )
{

InteractionParticipant_c v_participant = InteractionParticipant_c.getOneSQ_POnR930(this);


String       v_compartmentText = v_participant.Getmessagecompartmenttext() ;


int          v_lineCount = Gd_c.Numberoflines(			    
v_compartmentText) ;


return v_lineCount;



}

return 0;



   } // End get_entries
  public  int          Get_compartments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Get_compartments") ; 
               final ModelRoot modelRoot = getModelRoot();
return 3;



   } // End get_compartments
  public  int  Get_text_style(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Get_text_style") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

return v_mclass.Get_text_style(			    
p_At			    
,p_Comp_num			    
,p_Ent_num);



}

return Style_c.None;



   } // End get_text_style
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getPart_id();



   } // End get_ooa_id
  public  String       Get_compartment_text(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Get_compartment_text") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_participant = InteractionParticipant_c.getOneSQ_POnR930(this);


ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

String       v_result = "" ;


if ( ((p_Comp_num == 1) && (p_Ent_num == 1)) )
{

if ( (p_At == Justification_c.Center_in_X) )
{

v_result = Gd_c.Newline() + v_result ;


v_result = v_mclass.Getpath(			    
true			    
,"") + v_result ;


return v_result;



}


}

return v_mclass.Get_compartment_text(			    
p_At			    
,p_Comp_num			    
,p_Ent_num);



}

if ( ((p_Comp_num == 1) && (p_Ent_num == 1)) )
{

if ( (p_At == Justification_c.Center_in_X) )
{

return getInformalname();



}


}

else if ( (p_Comp_num == 2) )
{

if ( (p_At == Justification_c.Left) )
{

int          v_cursor = 1 ;


String       v_result = "" ;


ClassParticipantAttribute_c [] v_attrs = ClassParticipantAttribute_c.getManySQ_CPAsOnR935(this);


ClassParticipantAttribute_c  v_attr = null;
for ( int i37308 = 0; i37308 < v_attrs.length; i37308++)
{
  v_attr = v_attrs[i37308] ;

if ( (v_cursor == p_Ent_num) )
{

v_result = v_result + v_attr.getName() ;


if ( (! v_attr.getType().equals("")) )
{

v_result = v_result + ":" + v_attr.getType() ;



}

if ( (  (v_attrs.length) != v_cursor) )
{

v_result = v_result + Gd_c.Newline() ;



}

return v_result;



}

v_cursor = v_cursor + 1 ;



}


}


}

else if ( (p_Comp_num == 3) )
{

if ( (p_At == Justification_c.Left) )
{

String       v_result = "" ;


if ( (p_Ent_num == 1) )
{

Message_c [] v_msgs = Message_c.getManyMSG_MsOnR1007(InteractionParticipant_c.getManySQ_PsOnR930(this));


if ( (  (v_msgs.length != 0)) )
{

return v_participant.Getmessagecompartmenttext();



}


}


}


}

return "";



   } // End get_compartment_text
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_name = "Informal Class" ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,false) ;


if ( (! v_success.equals("")) )
{

setInformalname( v_success) ;



}

else
{

Dispose() ;



}


   } // End initialize
  public  void Newattribute()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Newattribute") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassParticipantAttribute_c v_attr = new ClassParticipantAttribute_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_attr));


if (v_attr != null) {
  v_attr.relateAcrossR935To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


InformalAttribute_c v_ia = new InformalAttribute_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ia));


if (v_ia != null) {
  v_ia.relateAcrossR947To(v_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_attr != null) {
v_attr.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newAttribute
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("can")) )
{

if ( (p_Value.equals("formCommClassOp")) )
{

if ( (Definedatsystemlevel()) )
{

return false;



}

if ( (Sel_c.Getcurrentselectioncount() != 2) )
{

return false;



}

return Formalclasshascboperations();



}

if ( (p_Value.equals("formCommClassEvent")) )
{

if ( (Definedatsystemlevel()) )
{

return false;



}

if ( (Sel_c.Getcurrentselectioncount() != 2) )
{

return false;



}

return Formalclasshascbevents();



}

if ( (p_Value.equals("unform")) )
{

return getIsformal();



}

if ( (p_Value.equals("addAttr")) )
{

return   !getIsformal();



}

if ( (p_Value.equals("formClass spec pkg")) || (p_Value.equals("formClass generic pkg")) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(InteractionParticipant_c.getOneSQ_POnR930(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( ((p_Value.equals("formClass spec pkg")) && (v_isInGenericPackage)) )
{

return false;



}

if ( ((p_Value.equals("formClass generic pkg")) && (  !v_isInGenericPackage)) )
{

return false;



}

if ( (Definedatsystemlevel()) )
{

return false;



}

ModelClass_c [] v_objs = ModelClass_c.ModelClassInstances(modelRoot) ;


int          v_count =   (v_objs.length) ;


if ( (p_Value.equals("formClass generic pkg")) )
{

v_count = Util_c.Getelementcountinsystem(			    
Converttoinstance()			    
,Elementtypeconstants_c.CLASS) ;



}

if ( (v_count == 1 && getIsformal()) )
{

return false;



}

return v_count != 0;



}


}

return false;



   } // End actionFilter
  public  void Unformalize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Unformalize") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

this.unrelateAcrossR939From(v_mclass);



}

InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(this);


Message_c [] v_messages = Message_c.getManyMSG_MsOnR1007(v_part);


Message_c  v_message = null;
for ( int i37309 = 0; i37309 < v_messages.length; i37309++)
{
  v_message = v_messages[i37309] ;

if (v_message != null) {
v_message.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

CommunicationLink_c [] v_links = CommunicationLink_c.getManyCOMM_LNKsOnR1133(v_part);


CommunicationLink_c  v_link = null;
for ( int i37310 = 0; i37310 < v_links.length; i37310++)
{
  v_link = v_links[i37310] ;

if (v_link != null) {
v_link.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ClassParticipantAttribute_c [] v_cpas = ClassParticipantAttribute_c.getManySQ_CPAsOnR935(this);


ClassParticipantAttribute_c  v_cpa = null;
for ( int i37311 = 0; i37311 < v_cpas.length; i37311++)
{
  v_cpa = v_cpas[i37311] ;

FormalAttribute_c v_fa = FormalAttribute_c.getOneSQ_FAOnR947(v_cpa);


if ( (  (v_fa != null)) )
{

if (v_cpa != null) {
v_cpa.unrelateAcrossR947From(v_fa);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_fa != null) {
// get the location of this element in the instance list
// before deleting
if ( v_fa.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_fa));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

InformalAttribute_c v_ia = new InformalAttribute_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ia));


if (v_cpa != null) {
  v_cpa.relateAcrossR947To(v_ia);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End unformalize
  public  String       Get_name()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
return getLabel();



   } // End get_name
  public  boolean      Canrename()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Canrename") ; 
               final ModelRoot modelRoot = getModelRoot();
return   !getIsformal();



   } // End canRename
  public  void Formalize(final java.util.UUID         p_Classid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Formalize") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, Gd_c.Null_unique_id());


Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(InteractionParticipant_c.getOneSQ_POnR930(this)));


boolean      v_isInGenericPackage =   (v_package != null) ;


if ( (  !v_isInGenericPackage) )
{

v_mclass = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, p_Classid);



}

else
{

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Classid);


v_mclass = ModelClass_c.getOneO_OBJOnR8001(v_pe);



}

if ( (getIsformal()) )
{

Unformalize() ;



}

if ( (  (v_mclass != null)) )
{

if (v_mclass != null) {
  v_mclass.relateAcrossR939To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ClassParticipantAttribute_c [] v_cpas = ClassParticipantAttribute_c.getManySQ_CPAsOnR935(this);


ClassParticipantAttribute_c  v_cpa = null;
for ( int i37312 = 0; i37312 < v_cpas.length; i37312++)
{
  v_cpa = v_cpas[i37312] ;

InformalAttribute_c v_ia = InformalAttribute_c.getOneSQ_IAOnR947(v_cpa);


if ( (  (v_ia != null)) )
{

if (v_cpa != null) {
v_cpa.unrelateAcrossR947From(v_ia);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_ia != null) {
// get the location of this element in the instance list
// before deleting
if ( v_ia.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_ia));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

FormalAttribute_c v_fa = new FormalAttribute_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fa));


if (v_cpa != null) {
  v_cpa.relateAcrossR947To(v_fa);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End formalize
  public  boolean      Formalclasshascboperations()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Formalclasshascboperations") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

  class Operation_test37739_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Operation_c selected = (Operation_c)candidate;
		return (selected.getInstance_based() == Scope_c.Class) ;
	}
  }
Operation_c [] v_ops = Operation_c.getManyO_TFRsOnR115(v_mclass, new Operation_test37739_c());


return   (v_ops.length != 0);



}

return false;



   } // End formalClassHasCBOperations
  public  boolean      Formalclasshascbevents()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Formalclasshascbevents") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

ClassStateMachine_c v_asm = ClassStateMachine_c.getOneSM_ASMOnR519(v_mclass);


if ( (  (v_asm != null)) )
{

StateMachineEvent_c [] v_evts = StateMachineEvent_c.getManySM_EVTsOnR502(StateMachine_c.getManySM_SMsOnR517(v_asm));


if ( (  (v_evts.length) < 1) )
{

CreationTransition_c [] v_creationTransitions = CreationTransition_c.getManySM_CRTXNsOnR507(Transition_c.getManySM_TXNsOnR505(StateMachine_c.getManySM_SMsOnR517(InstanceStateMachine_c.getManySM_ISMsOnR518(v_mclass))));


boolean      v_foundCreationEvent = false ;


CreationTransition_c  v_transition = null;
for ( int i37313 = 0; i37313 < v_creationTransitions.length; i37313++)
{
  v_transition = v_creationTransitions[i37313] ;

StateMachineEvent_c v_event = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR526(LocalEvent_c.getOneSM_LEVTOnR509(v_transition)));


if ( (  (v_event != null)) )
{

v_foundCreationEvent = true ;


break;



}


}

if ( (v_foundCreationEvent) )
{

return true;



}

else
{

return false;



}


}

else
{

return true;



}


}


}

return false;



   } // End formalClassHasCBEvents
  public  boolean      Definedatsystemlevel()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Definedatsystemlevel") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(this);


return v_part.Definedatsystemlevel();



   } // End definedAtSystemLevel
  public  int          Getclassoperationcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Getclassoperationcount") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (getIsformal()) )
{

  class Operation_test37740_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Operation_c selected = (Operation_c)candidate;
		return (selected.getInstance_based() == Scope_c.Class) ;
	}
  }
Operation_c [] v_operations = Operation_c.getManyO_TFRsOnR115(ModelClass_c.getManyO_OBJsOnR939(this), new Operation_test37740_c());


return   (v_operations.length);



}

return 0;



   } // End getClassOperationCount
  public  int          Getclasseventcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Getclasseventcount") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_mclass != null)) )
{

ClassStateMachine_c v_asm = ClassStateMachine_c.getOneSM_ASMOnR519(v_mclass);


if ( (  (v_asm != null)) )
{

StateMachineEvent_c [] v_evts = StateMachineEvent_c.getManySM_EVTsOnR502(StateMachine_c.getManySM_SMsOnR517(v_asm));


CreationTransition_c [] v_creationTransitions = CreationTransition_c.getManySM_CRTXNsOnR507(Transition_c.getManySM_TXNsOnR505(StateMachine_c.getManySM_SMsOnR517(InstanceStateMachine_c.getManySM_ISMsOnR518(v_mclass))));


int          v_count = 0 ;


CreationTransition_c  v_transition = null;
for ( int i37314 = 0; i37314 < v_creationTransitions.length; i37314++)
{
  v_transition = v_creationTransitions[i37314] ;

StateMachineEvent_c v_event = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR526(LocalEvent_c.getOneSM_LEVTOnR509(v_transition)));


if ( (  (v_event != null)) )
{

v_count = v_count + 1 ;



}


}

return   (v_evts.length) + v_count;



}


}

return 0;



   } // End getClassEventCount
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Converttoinstance") ; 
return this;
   } // End convertToInstance
  public  void Pasteclassparticipantattribute(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Pasteclassparticipantattribute") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassParticipantAttribute_c v_attribute = (ClassParticipantAttribute_c) modelRoot.getInstanceList(ClassParticipantAttribute_c.class).getGlobal(null, p_Id);


if ( (  (v_attribute != null)) )
{

ClassParticipant_c v_existingCp = ClassParticipant_c.getOneSQ_CPOnR935(v_attribute);


if ( (  (v_existingCp != null)) )
{

if (v_attribute != null) {
v_attribute.unrelateAcrossR935From(v_existingCp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_attribute != null) {
  v_attribute.relateAcrossR935To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteClassParticipantAttribute
  public  boolean      Cancopyclassparticipantattribute(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Cancopyclassparticipantattribute") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassParticipantAttribute_c v_attribute = (ClassParticipantAttribute_c) modelRoot.getInstanceList(ClassParticipantAttribute_c.class).getGlobal(null, p_Id);


if ( (  (v_attribute != null)) )
{

InformalAttribute_c v_informal = InformalAttribute_c.getOneSQ_IAOnR947(v_attribute);


if ( (  (v_informal == null)) )
{

return false;



}


}

else
{

return false;



}

return true;



   } // End canCopyClassParticipantAttribute
  public  boolean      Canpasteclassparticipantattribute()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Canpasteclassparticipantattribute") ; 
               final ModelRoot modelRoot = getModelRoot();
return   !getIsformal();



   } // End canPasteClassParticipantAttribute
  public  void Resolvemodelclass()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Resolvemodelclass") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_proxyClass = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_proxyClass != null) &&   !Util_c.Isproxy(			    
Converttoinstance())) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(InteractionParticipant_c.getOneSQ_POnR930(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

if ( (  (v_package == null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent));



}

if (v_packageableElem != null) {
v_packageableElem.Resolveclassrelativetoself(			    
"" ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  class ComponentResultSet_test37741_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getType() == Elementtypeconstants_c.CLASS ;
	}
  }
ComponentResultSet_c v_resultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37741_c());


PackageableElement_c [] v_results = PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_resultSet));


if (   (v_package != null) )
{

  class SearchResultSet_test37742_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getType() == Elementtypeconstants_c.CLASS ;
	}
  }
SearchResultSet_c v_pkgResultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37742_c());


v_results = PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_pkgResultSet));



}

ModelClass_c [] v_classes = ModelClass_c.getManyO_OBJsOnR8001(v_results);


ModelClass_c v_resolvedClass = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, Gd_c.Null_unique_id());


ModelClass_c  v_class = null;
for ( int i37315 = 0; i37315 < v_classes.length; i37315++)
{
  v_class = v_classes[i37315] ;

if ( (v_class.getKey_lett().equals(v_proxyClass.getKey_lett()) && v_class.getName().equals(v_proxyClass.getName())) )
{

v_resolvedClass = v_class ;


break;



}

else
{

if ( (v_class.getKey_lett().equals(v_proxyClass.getKey_lett())) )
{

v_resolvedClass = v_class ;


break;



}

else
{

if ( (v_class.getName().equals(v_proxyClass.getName())) )
{

v_resolvedClass = v_class ;


break;



}


}


}


}

if ( (  (v_resolvedClass != null)) )
{

  this.relateAcrossR939To(v_resolvedClass);


Resolvemessageformalizations() ;



}

else
{

Unformalize() ;



}

return ;



}

Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR2(v_proxyClass);


if ( (  (v_ss == null) || Util_c.Isproxy(			    
v_ss.Converttoinstance())) )
{

String       v_name = v_proxyClass.getName() ;


String       v_key_letters = v_proxyClass.getKey_lett() ;


this.unrelateAcrossR939From(v_proxyClass);


Domain_c v_domain = Domain_c.DomainInstance(modelRoot) ;


  class ModelClass_test37743_c implements ClassQueryInterface_c
  {
	ModelClass_test37743_c( String       p37744, String       p37745 ) {
		m_p37744 = p37744;
				m_p37745 = p37745;
	}
	private String       m_p37744;
		private String       m_p37745;
	public boolean evaluate (Object candidate)
	{
		ModelClass_c selected = (ModelClass_c)candidate;
		return (selected.getKey_lett().equals(m_p37744) && selected.getName().equals(m_p37745)) ;
	}
  }
ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR2(Subsystem_c.getManyS_SSsOnR1(v_domain), new ModelClass_test37743_c(v_key_letters, v_name));


if ( (  (v_clazz == null)) )
{

  class ModelClass_test37746_c implements ClassQueryInterface_c
  {
	ModelClass_test37746_c( String       p37747 ) {
		m_p37747 = p37747;
	}
	private String       m_p37747;
	public boolean evaluate (Object candidate)
	{
		ModelClass_c selected = (ModelClass_c)candidate;
		return (selected.getKey_lett().equals(m_p37747)) ;
	}
  }
v_clazz = ModelClass_c.getOneO_OBJOnR2(Subsystem_c.getManyS_SSsOnR1(v_domain), new ModelClass_test37746_c(v_key_letters));


if ( (  (v_clazz == null)) )
{

  class ModelClass_test37748_c implements ClassQueryInterface_c
  {
	ModelClass_test37748_c( String       p37749 ) {
		m_p37749 = p37749;
	}
	private String       m_p37749;
	public boolean evaluate (Object candidate)
	{
		ModelClass_c selected = (ModelClass_c)candidate;
		return (selected.getName().equals(m_p37749)) ;
	}
  }
v_clazz = ModelClass_c.getOneO_OBJOnR2(Subsystem_c.getManyS_SSsOnR1(v_domain), new ModelClass_test37748_c(v_name));



}


}

boolean      v_classResolved =   (v_clazz != null) ;


if ( (v_classResolved) )
{

  this.relateAcrossR939To(v_clazz);


Resolvemessageformalizations() ;



}

else
{

Unformalize() ;



}


}


}


   } // End resolveModelClass
  public  void Resolvemessageformalizations()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Resolvemessageformalizations") ; 
               final ModelRoot modelRoot = getModelRoot();
Message_c [] v_messages = Message_c.getManyMSG_MsOnR1007(InteractionParticipant_c.getManySQ_PsOnR930(this));


Message_c  v_message = null;
for ( int i37316 = 0; i37316 < v_messages.length; i37316++)
{
  v_message = v_messages[i37316] ;

SynchronousMessage_c v_syncMessage = SynchronousMessage_c.getOneMSG_SMOnR1018(v_message);


AsynchronousMessage_c v_asyncMessage = AsynchronousMessage_c.getOneMSG_AMOnR1018(v_message);


if ( (  (v_syncMessage != null)) )
{

if ( (  !v_syncMessage.getIsformal()) )
{

continue;



}

OperationMessage_c v_operationMessage = OperationMessage_c.getOneMSG_OOnR1020(v_syncMessage);


Operation_c v_opProxy = Operation_c.getOneO_TFROnR1011(v_operationMessage);


  class Operation_test37750_c implements ClassQueryInterface_c
  {
	Operation_test37750_c( String       p37751 ) {
		m_p37751 = p37751;
	}
	private String       m_p37751;
	public boolean evaluate (Object candidate)
	{
		Operation_c selected = (Operation_c)candidate;
		return (selected.getName().equals(m_p37751) && selected.getInstance_based() == Scope_c.Class) ;
	}
  }
Operation_c v_operation = Operation_c.getOneO_TFROnR115(ModelClass_c.getManyO_OBJsOnR939(this), new Operation_test37750_c(v_opProxy.getName()));


if ( (  (v_operation != null)) )
{

if (v_syncMessage != null) {
v_syncMessage.Formalizewithclassoperation(			    
v_operation.getTfr_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_syncMessage != null) {
v_syncMessage.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

else if ( (  (v_asyncMessage != null)) )
{

if ( (  !v_asyncMessage.getIsformal()) )
{

continue;



}

EventMessage_c v_eventMessage = EventMessage_c.getOneMSG_EOnR1019(v_asyncMessage);


StateMachineEvent_c v_evtProxy = StateMachineEvent_c.getOneSM_EVTOnR1009(v_eventMessage);


  class StateMachineEvent_test37752_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37752_c( String       p37753 ) {
		m_p37753 = p37753;
	}
	private String       m_p37753;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return (selected.getMning().equals(m_p37753)) ;
	}
  }
StateMachineEvent_c v_event = StateMachineEvent_c.getOneSM_EVTOnR502(StateMachine_c.getManySM_SMsOnR517(ClassStateMachine_c.getManySM_ASMsOnR519(ModelClass_c.getManyO_OBJsOnR939(this))), new StateMachineEvent_test37752_c(v_evtProxy.getMning()));


if ( (  (v_event == null)) )
{

  class StateMachineEvent_test37754_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37754_c( String       p37755 ) {
		m_p37755 = p37755;
	}
	private String       m_p37755;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return (selected.getMning().equals(m_p37755)) ;
	}
  }
v_event = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getManySM_SEVTsOnR526(LocalEvent_c.getManySM_LEVTsOnR509(CreationTransition_c.getManySM_CRTXNsOnR507(Transition_c.getManySM_TXNsOnR505(StateMachine_c.getManySM_SMsOnR517(InstanceStateMachine_c.getManySM_ISMsOnR518(ModelClass_c.getManyO_OBJsOnR939(this))))))), new StateMachineEvent_test37754_c(v_evtProxy.getMning()));



}

if ( (  (v_event != null)) )
{

if (v_asyncMessage != null) {
v_asyncMessage.Formalizewithevent(			    
v_event.getSmevt_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_asyncMessage != null) {
v_asyncMessage.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

Lifespan_c v_ls = Lifespan_c.getOneSQ_LSOnR940(InteractionParticipant_c.getOneSQ_POnR930(this));


if ( (  (v_ls != null)) )
{

v_messages = Message_c.getManyMSG_MsOnR1007(InteractionParticipant_c.getManySQ_PsOnR930(v_ls));


for ( int i37317 = 0; i37317 < v_messages.length; i37317++)
{
  v_message = v_messages[i37317] ;

SynchronousMessage_c v_syncMessage = SynchronousMessage_c.getOneMSG_SMOnR1018(v_message);


AsynchronousMessage_c v_asyncMessage = AsynchronousMessage_c.getOneMSG_AMOnR1018(v_message);


if ( (  (v_syncMessage != null)) )
{

if ( (  !v_syncMessage.getIsformal()) )
{

continue;



}

OperationMessage_c v_operationMessage = OperationMessage_c.getOneMSG_OOnR1020(v_syncMessage);


Operation_c v_opProxy = Operation_c.getOneO_TFROnR1011(v_operationMessage);


  class Operation_test37756_c implements ClassQueryInterface_c
  {
	Operation_test37756_c( String       p37757 ) {
		m_p37757 = p37757;
	}
	private String       m_p37757;
	public boolean evaluate (Object candidate)
	{
		Operation_c selected = (Operation_c)candidate;
		return (selected.getName().equals(m_p37757) && selected.getInstance_based() == Scope_c.Class) ;
	}
  }
Operation_c v_operation = Operation_c.getOneO_TFROnR115(ModelClass_c.getManyO_OBJsOnR939(this), new Operation_test37756_c(v_opProxy.getName()));


if ( (  (v_operation != null)) )
{

if (v_syncMessage != null) {
v_syncMessage.Formalizewithclassoperation(			    
v_operation.getTfr_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_syncMessage != null) {
v_syncMessage.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

else if ( (  (v_asyncMessage != null)) )
{

if ( (  !v_asyncMessage.getIsformal()) )
{

continue;



}

EventMessage_c v_eventMessage = EventMessage_c.getOneMSG_EOnR1019(v_asyncMessage);


StateMachineEvent_c v_evtProxy = StateMachineEvent_c.getOneSM_EVTOnR1009(v_eventMessage);


  class StateMachineEvent_test37758_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37758_c( String       p37759 ) {
		m_p37759 = p37759;
	}
	private String       m_p37759;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return (selected.getMning().equals(m_p37759)) ;
	}
  }
StateMachineEvent_c v_event = StateMachineEvent_c.getOneSM_EVTOnR502(StateMachine_c.getManySM_SMsOnR517(ClassStateMachine_c.getManySM_ASMsOnR519(ModelClass_c.getManyO_OBJsOnR939(this))), new StateMachineEvent_test37758_c(v_evtProxy.getMning()));


if ( (  (v_event == null)) )
{

  class StateMachineEvent_test37760_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37760_c( String       p37761 ) {
		m_p37761 = p37761;
	}
	private String       m_p37761;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return (selected.getMning().equals(m_p37761)) ;
	}
  }
v_event = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getManySM_SEVTsOnR526(LocalEvent_c.getManySM_LEVTsOnR509(CreationTransition_c.getManySM_CRTXNsOnR507(Transition_c.getManySM_TXNsOnR505(StateMachine_c.getManySM_SMsOnR517(InstanceStateMachine_c.getManySM_ISMsOnR518(ModelClass_c.getManyO_OBJsOnR939(this))))))), new StateMachineEvent_test37760_c(v_evtProxy.getMning()));



}

if ( (  (v_event != null)) )
{

if (v_asyncMessage != null) {
v_asyncMessage.Formalizewithevent(			    
v_event.getSmevt_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_asyncMessage != null) {
v_asyncMessage.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


}


   } // End resolveMessageFormalizations
  public  Object Getconfigurationinheritanceelementid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Class Participant", " Operation entered: ClassParticipant::Getconfigurationinheritanceelementid") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_obj = ModelClass_c.getOneO_OBJOnR939(this);


if ( (  (v_obj != null)) )
{

return v_obj.Converttoinstance();



}

return Converttoinstance();



   } // End getConfigurationInheritanceElementId

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return ClassParticipantActionFilter.getSingleton();
    }
	  return null;
  }
} // end Class Participant
