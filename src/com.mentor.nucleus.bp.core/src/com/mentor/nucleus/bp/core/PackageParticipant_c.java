package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.PackageParticipant_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_PACKAGE_PARTICIPANT extends genericEvent_c {
	public abstract int getEvtcode();
}

public class PackageParticipant_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public PackageParticipant_c(ModelRoot modelRoot,
			java.util.UUID p_m_part_id, java.util.UUID p_m_package_id,
			String p_m_label, String p_m_informalname, String p_m_descrip,
			boolean p_m_isformal) {
		super(modelRoot);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
		m_label = p_m_label;
		m_informalname = p_m_informalname;
		m_descrip = p_m_descrip;
		m_isformal = p_m_isformal;

		Object[] key = {m_part_id};
		addInstanceToMap(key);
	}
	static public PackageParticipant_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_part_id, java.util.UUID p_m_package_id,
			String p_m_label, String p_m_informalname, String p_m_descrip,
			boolean p_m_isformal, String p_contentPath, IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(PackageParticipant_c.class);
		PackageParticipant_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_part_id};
			new_inst = (PackageParticipant_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_package_id = IdAssigner
						.preprocessUUID(p_m_package_id);
				new_inst.m_label = p_m_label;
				new_inst.m_informalname = p_m_informalname;
				new_inst.m_descrip = p_m_descrip;
				new_inst.m_isformal = p_m_isformal;

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new PackageParticipant_c(modelRoot, p_m_part_id,
					p_m_package_id, p_m_label, p_m_informalname, p_m_descrip,
					p_m_isformal);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public PackageParticipant_c resolveInstance(ModelRoot modelRoot,
			java.util.UUID p_m_part_id, java.util.UUID p_m_package_id,
			String p_m_label, String p_m_informalname, String p_m_descrip,
			boolean p_m_isformal) {
		InstanceList instances = modelRoot
				.getInstanceList(PackageParticipant_c.class);
		PackageParticipant_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_part_id};
			source = (PackageParticipant_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
				source.m_label = p_m_label;
				source.m_informalname = p_m_informalname;
				source.m_descrip = p_m_descrip;
				source.m_isformal = p_m_isformal;

				return source;
			}
		}
		// there is no instance matching the id
		PackageParticipant_c new_inst = new PackageParticipant_c(modelRoot,
				p_m_part_id, p_m_package_id, p_m_label, p_m_informalname,
				p_m_descrip, p_m_isformal);
		return new_inst;
	}
	public PackageParticipant_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_part_id = IdAssigner.NULL_UUID;
		m_package_id = IdAssigner.NULL_UUID;
		m_label = "";
		m_informalname = "";
		m_descrip = "";
		Object[] key = {m_part_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_part_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p4
		// round p5
		if (m_part_id != p_newKey) {

			m_part_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof PackageParticipant_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof PackageParticipant_c)) {
			return false;
		}

		PackageParticipant_c me = (PackageParticipant_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getPart_id()) || IdAssigner.NULL_UUID
						.equals(((PackageParticipant_c) elem).getPart_id())) && this != elem)) {
			return false;
		}
		if (!getPart_id().equals(((PackageParticipant_c) elem).getPart_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof PackageParticipant_c)) {
			return false;
		}

		PackageParticipant_c me = (PackageParticipant_c) elem;
		if (!getPart_idCachedValue().equals(
				((PackageParticipant_c) elem).getPart_idCachedValue()))
			return false;
		return true;
	}

	// Attributes
	private java.util.UUID m_part_id;
	private java.util.UUID m_package_id;
	private String m_label;
	private String m_informalname;
	private String m_descrip;
	private boolean m_isformal;

	// declare association references from this class

	// referring navigation

	InteractionParticipant_c IsSupertypeInteractionParticipant;
	public void relateAcrossR930To(InteractionParticipant_c target) {
		relateAcrossR930To(target, true);
	}
	public void relateAcrossR930To(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsSupertypeInteractionParticipant)
			return; // already related

		if (IsSupertypeInteractionParticipant != target) {

			Object oldKey = getInstanceKey();

			if (IsSupertypeInteractionParticipant != null) {

				IsSupertypeInteractionParticipant.clearBackPointerR930To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"PackageParticipant_c.relateAcrossR930To(InteractionParticipant_c target)",
									"Relate performed across R930 from Package Participant to Interaction Participant without unrelate of prior instance.");
				}
			}

			IsSupertypeInteractionParticipant = target;
			if (IdAssigner.NULL_UUID.equals(target.getPart_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_part_id = target.getPart_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR930To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "930", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR930From(InteractionParticipant_c target) {
		unrelateAcrossR930From(target, true);
	}
	public void unrelateAcrossR930From(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (IsSupertypeInteractionParticipant == null)
			return; // already unrelated

		if (target != IsSupertypeInteractionParticipant) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R930",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR930To(this);
		}

		if (IsSupertypeInteractionParticipant != null) {

			m_part_id = IsSupertypeInteractionParticipant.getPart_id();
			if (IdAssigner.NULL_UUID.equals(m_part_id)) {
				m_part_id = IsSupertypeInteractionParticipant
						.getPart_idCachedValue();
			}
			IsSupertypeInteractionParticipant = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "930", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static PackageParticipant_c getOneSQ_PPOnR930(
			InteractionParticipant_c[] targets) {
		return getOneSQ_PPOnR930(targets, null);
	}

	public static PackageParticipant_c getOneSQ_PPOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		PackageParticipant_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneSQ_PPOnR930(targets[i], test);
			}
		}

		return ret_val;
	}

	public static PackageParticipant_c getOneSQ_PPOnR930(
			InteractionParticipant_c target) {
		return getOneSQ_PPOnR930(target, null);
	}

	public static PackageParticipant_c getOneSQ_PPOnR930(
			InteractionParticipant_c target, boolean loadComponent) {
		return getOneSQ_PPOnR930(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static PackageParticipant_c getOneSQ_PPOnR930(
			InteractionParticipant_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneSQ_PPOnR930(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static PackageParticipant_c getOneSQ_PPOnR930(ModelRoot modelRoot,
			InteractionParticipant_c target, ClassQueryInterface_c test) {
		return getOneSQ_PPOnR930(modelRoot, target, test, true);
	}

	public static PackageParticipant_c getOneSQ_PPOnR930(ModelRoot modelRoot,
			InteractionParticipant_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		return find_getOneSQ_PPOnR930(modelRoot, target, test);
	}
	private static PackageParticipant_c find_getOneSQ_PPOnR930(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			PackageParticipant_c source = (PackageParticipant_c) target.backPointer_IsSubtypePackageParticipantIsSubtype_R930;
			if (source != null && (test == null || test.evaluate(source))) {
				return source;
			}
		}
		// not found
		return null;
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR930(
			InteractionParticipant_c[] targets) {
		return getManySQ_PPsOnR930(targets, null);
	}
	public static PackageParticipant_c[] getManySQ_PPsOnR930(
			InteractionParticipant_c[] targets, boolean loadComponent) {
		return getManySQ_PPsOnR930(targets, null, loadComponent);
	}
	public static PackageParticipant_c[] getManySQ_PPsOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		return getManySQ_PPsOnR930(targets, test, true);
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new PackageParticipant_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(PackageParticipant_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			PackageParticipant_c source = (PackageParticipant_c) targets[i].backPointer_IsSubtypePackageParticipantIsSubtype_R930;
			if (source != null && (test == null || test.evaluate(source))) {
				matches.add(source);
			}
		}
		if (matches.size() > 0) {
			PackageParticipant_c[] ret_set = new PackageParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new PackageParticipant_c[0];
		}
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR930(
			InteractionParticipant_c target) {
		if (target != null) {
			InteractionParticipant_c[] targetArray = new InteractionParticipant_c[1];
			targetArray[0] = target;
			return getManySQ_PPsOnR930(targetArray);
		} else {
			PackageParticipant_c[] result = new PackageParticipant_c[0];
			return result;
		}
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR930(
			InteractionParticipant_c target, boolean loadComponent) {
		if (target != null) {
			InteractionParticipant_c[] targetArray = new InteractionParticipant_c[1];
			targetArray[0] = target;
			return getManySQ_PPsOnR930(targetArray, loadComponent);
		} else {
			PackageParticipant_c[] result = new PackageParticipant_c[0];
			return result;
		}
	}

	// referring navigation

	Package_c RepresentsPackage;
	public void relateAcrossR956To(Package_c target) {
		relateAcrossR956To(target, true);
	}
	public void relateAcrossR956To(Package_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (target == RepresentsPackage)
			return; // already related

		if (RepresentsPackage != target) {

			Object oldKey = getInstanceKey();

			if (RepresentsPackage != null) {

				RepresentsPackage.clearBackPointerR956To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"PackageParticipant_c.relateAcrossR956To(Package_c target)",
									"Relate performed across R956 from Package Participant to Package without unrelate of prior instance.");
				}
			}

			RepresentsPackage = target;
			if (IdAssigner.NULL_UUID.equals(target.getPackage_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_package_id = target.getPackage_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR956To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "956", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR956From(Package_c target) {
		unrelateAcrossR956From(target, true);
	}
	public void unrelateAcrossR956From(Package_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (RepresentsPackage == null)
			return; // already unrelated

		if (target != RepresentsPackage) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R956",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR956To(this);
		}

		if (RepresentsPackage != null) {

			m_package_id = RepresentsPackage.getPackage_id();
			if (IdAssigner.NULL_UUID.equals(m_package_id)) {
				m_package_id = RepresentsPackage.getPackage_idCachedValue();
			}
			RepresentsPackage = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "956", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static PackageParticipant_c getOneSQ_PPOnR956(Package_c[] targets) {
		return getOneSQ_PPOnR956(targets, null);
	}

	public static PackageParticipant_c getOneSQ_PPOnR956(Package_c[] targets,
			ClassQueryInterface_c test) {
		PackageParticipant_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneSQ_PPOnR956(targets[i], test);
			}
		}

		return ret_val;
	}

	public static PackageParticipant_c getOneSQ_PPOnR956(Package_c target) {
		return getOneSQ_PPOnR956(target, null);
	}

	public static PackageParticipant_c getOneSQ_PPOnR956(Package_c target,
			boolean loadComponent) {
		return getOneSQ_PPOnR956(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static PackageParticipant_c getOneSQ_PPOnR956(Package_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			return getOneSQ_PPOnR956(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static PackageParticipant_c getOneSQ_PPOnR956(ModelRoot modelRoot,
			Package_c target, ClassQueryInterface_c test) {
		return getOneSQ_PPOnR956(modelRoot, target, test, true);
	}

	public static PackageParticipant_c getOneSQ_PPOnR956(ModelRoot modelRoot,
			Package_c target, ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneSQ_PPOnR956(modelRoot, target, test);
	}
	private static PackageParticipant_c find_getOneSQ_PPOnR956(
			ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956) {
				for (int i = 0; i < target.backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956
						.size(); ++i) {
					PackageParticipant_c source = (PackageParticipant_c) target.backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR956(Package_c[] targets) {
		return getManySQ_PPsOnR956(targets, null);
	}
	public static PackageParticipant_c[] getManySQ_PPsOnR956(
			Package_c[] targets, boolean loadComponent) {
		return getManySQ_PPsOnR956(targets, null, loadComponent);
	}
	public static PackageParticipant_c[] getManySQ_PPsOnR956(
			Package_c[] targets, ClassQueryInterface_c test) {
		return getManySQ_PPsOnR956(targets, test, true);
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR956(
			Package_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new PackageParticipant_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(PackageParticipant_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956) {
				for (int j = 0; j < targets[i].backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956
						.size(); ++j) {
					PackageParticipant_c source = (PackageParticipant_c) targets[i].backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			PackageParticipant_c[] ret_set = new PackageParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new PackageParticipant_c[0];
		}
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR956(Package_c target) {
		return getManySQ_PPsOnR956(target, null);
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR956(Package_c target,
			boolean loadComponent) {
		return getManySQ_PPsOnR956(target, null, loadComponent);
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR956(Package_c target,
			ClassQueryInterface_c test) {
		return getManySQ_PPsOnR956(target, test, true);
	}

	public static PackageParticipant_c[] getManySQ_PPsOnR956(Package_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		if (target == null)
			return new PackageParticipant_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		Vector matches = new Vector();
		synchronized (target.backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956) {
			for (int i = 0; i < target.backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956
					.size(); ++i) {
				PackageParticipant_c source = (PackageParticipant_c) target.backPointer_RepresentsParticipantOfPackageParticipantRepresentsParticipantOf_R956
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			PackageParticipant_c[] ret_set = new PackageParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new PackageParticipant_c[0];
		}
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies,
			boolean notifyChanges, boolean searchAllRoots) {
		InstanceList instances = null;
		ModelRoot baseRoot = modelRoot;

		// R930
		InteractionParticipant_c relInst40457 = (InteractionParticipant_c) baseRoot
				.getInstanceList(InteractionParticipant_c.class).get(
						new Object[]{m_part_id});
		// if there was no local element, check for any global elements
		// failing that proceed to check other model roots
		if (relInst40457 == null) {
			relInst40457 = (InteractionParticipant_c) Ooaofooa
					.getDefaultInstance()
					.getInstanceList(InteractionParticipant_c.class)
					.get(new Object[]{m_part_id});
		}
		if (relInst40457 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
			Ooaofooa[] roots = Ooaofooa.getInstances();
			for (int i = 0; i < roots.length; i++) {
				if (roots[i].isCompareRoot()) {
					// never use elements from any compare root
					continue;
				}
				relInst40457 = (InteractionParticipant_c) roots[i]
						.getInstanceList(InteractionParticipant_c.class).get(
								new Object[]{m_part_id});
				if (relInst40457 != null)
					break;
			}
		}
		//synchronized
		if (relInst40457 != null) {
			if (relateProxies || !isProxy()
					|| (inSameComponent(this, relInst40457) && !isProxy())) {
				relInst40457.relateAcrossR930To(this, notifyChanges);
			}
		}

		if (RepresentsPackage == null) {
			// R956
			Package_c relInst40458 = (Package_c) baseRoot.getInstanceList(
					Package_c.class).get(new Object[]{m_package_id});
			// if there was no local element, check for any global elements
			// failing that proceed to check other model roots
			if (relInst40458 == null) {
				relInst40458 = (Package_c) Ooaofooa.getDefaultInstance()
						.getInstanceList(Package_c.class)
						.get(new Object[]{m_package_id});
			}
			if (relInst40458 == null && searchAllRoots
					&& !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
					if (roots[i].isCompareRoot()) {
						// never use elements from any compare root
						continue;
					}
					relInst40458 = (Package_c) roots[i].getInstanceList(
							Package_c.class).get(new Object[]{m_package_id});
					if (relInst40458 != null)
						break;
				}
			}
			//synchronized
			if (relInst40458 != null) {
				if (relateProxies || !isProxy()
						|| (inSameComponent(this, relInst40458) && !isProxy())) {
					relInst40458.relateAcrossR956To(this, notifyChanges);
				}
			}
		}

	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R930
		// SQ_P
		inst = IsSupertypeInteractionParticipant;
		unrelateAcrossR930From(IsSupertypeInteractionParticipant, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R956
		// EP_PKG
		inst = RepresentsPackage;
		unrelateAcrossR956From(RepresentsPackage, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(PackageParticipant_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final PackageParticipant_c inst = (PackageParticipant_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(PackageParticipant_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static PackageParticipant_c PackageParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		PackageParticipant_c result = findPackageParticipantInstance(modelRoot,
				test, loadComponent);
		if (result == null && loadComponent) {
			List pmcs = PersistenceManager.findAllComponents(modelRoot,
					PackageParticipant_c.class);
			for (int i = 0; i < pmcs.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) pmcs
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = findPackageParticipantInstance(modelRoot,
								test, loadComponent);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}
		if (result != null && loadComponent) {
			result.loadProxy();
		}
		return result;
	}
	private static PackageParticipant_c findPackageParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(PackageParticipant_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				PackageParticipant_c x = (PackageParticipant_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						return x;
				}
			}
		}
		return null;
	}
	public static PackageParticipant_c PackageParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return PackageParticipantInstance(modelRoot, test, true);
	}

	public static PackageParticipant_c PackageParticipantInstance(
			ModelRoot modelRoot) {
		return PackageParticipantInstance(modelRoot, null, true);
	}

	public static PackageParticipant_c[] PackageParticipantInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (loadComponent) {
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					PackageParticipant_c.class);
		}
		InstanceList instances = modelRoot
				.getInstanceList(PackageParticipant_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				PackageParticipant_c x = (PackageParticipant_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						matches.add(x);
				}
			}
			if (matches.size() > 0) {
				PackageParticipant_c[] ret_set = new PackageParticipant_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new PackageParticipant_c[0];
			}
		}
	}
	public static PackageParticipant_c[] PackageParticipantInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return PackageParticipantInstances(modelRoot, test, true);
	}
	public static PackageParticipant_c[] PackageParticipantInstances(
			ModelRoot modelRoot) {
		return PackageParticipantInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Package Participant.dispose call: ";
		InteractionParticipant_c testR930Inst9 = InteractionParticipant_c
				.getOneSQ_POnR930(this, false);

		if (testR930Inst9 != null) {
			delete_error = true;
			errorMsg = errorMsg + "930 ";
		}
		Package_c testR956Inst = Package_c.getOneEP_PKGOnR956(this, false);

		if (testR956Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "956 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log.println(ILogger.DELETE, "Package Participant",
						errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("part_id")) {
			return true;
		}
		if (attributeName.equals("package_id")) {
			return true;
		}
		return false;
	}
	public String getCompUniqueID() {
		UUID tempID = null;
		long longID = 0L;
		StringBuffer result = new StringBuffer();

		tempID = getPart_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getPart_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		return result.toString();
	}
	// declare attribute accessors
	public long getPart_idLongBased() {
		if (IsSupertypeInteractionParticipant != null) {
			return IsSupertypeInteractionParticipant.getPart_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getPart_id() {
		if (IsSupertypeInteractionParticipant != null) {
			return IsSupertypeInteractionParticipant.getPart_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public boolean hasSuperType() {
		return (IsSupertypeInteractionParticipant != null);

	}

	public java.util.UUID getPart_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_part_id))
			return m_part_id;
		else
			return getPart_id();
	}

	public void setPart_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_part_id)) {
				return;
			}
		} else if (m_part_id != null) {
			if (m_part_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Part_id", m_part_id, newValue, true);
		m_part_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getPackage_idLongBased() {
		if (RepresentsPackage != null) {
			return RepresentsPackage.getPackage_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getPackage_id() {
		if (RepresentsPackage != null) {
			return RepresentsPackage.getPackage_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getPackage_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_package_id))
			return m_package_id;
		else
			return getPackage_id();
	}

	public void setPackage_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_package_id)) {
				return;
			}
		} else if (m_package_id != null) {
			if (m_package_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Package_id", m_package_id, newValue, true);
		m_package_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getLabel() {
		ModelRoot modelRoot = getModelRoot();
		PackageableElement_c v_packageableElem = PackageableElement_c
				.getOnePE_PEOnR8001(InteractionParticipant_c
						.getOneSQ_POnR930(this));

		Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);

		Component_c v_component = Component_c
				.getOneC_COnR8003(v_packageableElem);

		boolean v_isInGenericPackage = (v_package != null)
				|| (v_component != null);

		if ((v_isInGenericPackage)) {

			Package_c v_pkg = Package_c.getOneEP_PKGOnR956(this);

			if (((v_pkg != null))) {

				return v_pkg.getName();

			}

			else {

				return getInformalname();

			}

		}

		else {

			return "";

		}

	}

	public String getInformalname() {
		return m_informalname;
	}

	public void setInformalname(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_informalname)) {
				return;
			}
		} else if (m_informalname != null) {
			if (m_informalname.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Informalname", m_informalname, newValue, true);
		m_informalname = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getDescrip() {
		return m_descrip;
	}

	public void setDescrip(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_descrip)) {
				return;
			}
		} else if (m_descrip != null) {
			if (m_descrip.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Descrip", m_descrip, newValue, true);
		m_descrip = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public boolean getIsformal() {
		ModelRoot modelRoot = getModelRoot();
		PackageableElement_c v_packageableElem = PackageableElement_c
				.getOnePE_PEOnR8001(InteractionParticipant_c
						.getOneSQ_POnR930(this));

		Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);

		Component_c v_component = Component_c
				.getOneC_COnR8003(v_packageableElem);

		boolean v_isInGenericPackage = (v_package != null)
				|| (v_component != null);

		if ((v_isInGenericPackage)) {

			Package_c v_pkg = Package_c.getOneEP_PKGOnR956(this);

			return !(v_pkg == null);

		}

		else {

			return false;

		}

	}

	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Package Participant", //$NON-NLS-1$
						" Operation entered: Package Participant::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		PackageParticipant_c[] objs = PackageParticipant_c
				.PackageParticipantInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant", //$NON-NLS-1$
				" Operation entered: Package Participant::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class PackageParticipant_c_test40460_c implements ClassQueryInterface_c {
			PackageParticipant_c_test40460_c(java.util.UUID p40461) {
				m_p40461 = p40461;
			}
			private java.util.UUID m_p40461;
			public boolean evaluate(Object candidate) {
				PackageParticipant_c selected = (PackageParticipant_c) candidate;
				boolean retval = false;
				retval = (selected.getPart_id().equals(m_p40461));
				return retval;
			}
		}

		PackageParticipant_c[] objs40459 = PackageParticipant_c
				.PackageParticipantInstances(modelRoot,
						new PackageParticipant_c_test40460_c(getPart_id()));

		if (((objs40459.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Package Participant", //$NON-NLS-1$
								"Consistency: Object: Package Participant: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40459.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Package Participant: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40459.length), e);
			}
			retval = false;

		}

		if (((objs40459.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Package Participant", //$NON-NLS-1$
								"Consistency: Object: Package Participant: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs40459.length)
										+ " Part_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Package Participant: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40459.length)
										+ " Part_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Package Participant is a subtype in association: rel.Numb = 930
		// The supertype class is: Interaction Participant
		class InteractionParticipant_c_test40465_c
				implements
					ClassQueryInterface_c {
			InteractionParticipant_c_test40465_c(java.util.UUID p40466) {
				m_p40466 = p40466;
			}
			private java.util.UUID m_p40466;
			public boolean evaluate(Object candidate) {
				InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
				boolean retval = false;
				retval = (selected.getPart_id().equals(m_p40466));
				return retval;
			}
		}

		InteractionParticipant_c[] objs40464 = InteractionParticipant_c
				.InteractionParticipantInstances(modelRoot,
						new InteractionParticipant_c_test40465_c(getPart_id()));

		if (((objs40464.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Package Participant", //$NON-NLS-1$
								"Consistency: Object: Package Participant: Association: 930: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40464.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Package Participant: Association: 930: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40464.length), e);
			}
			retval = false;

		}

		// Package Participant is a referring class in association: rel.Numb = 956
		// The participating class is: Package
		class Package_c_test40468_c implements ClassQueryInterface_c {
			Package_c_test40468_c(java.util.UUID p40469) {
				m_p40469 = p40469;
			}
			private java.util.UUID m_p40469;
			public boolean evaluate(Object candidate) {
				Package_c selected = (Package_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p40469));
				return retval;
			}
		}

		Package_c[] objs40467 = Package_c.PackageInstances(modelRoot,
				new Package_c_test40468_c(getPackage_id()));

		if (((objs40467.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Package Participant", //$NON-NLS-1$
								"Consistency: Object: Package Participant: Association: 956: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs40467.length)
										+ " Package_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Package Participant: Association: 956: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40467.length)
										+ " Package_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public boolean Actionfilter(final String p_Name, final String p_Value) {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Actionfilter");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_Name.equals("can"))) {

			if ((p_Value.equals("formCommPackageFunc"))) {

				if ((Definedatsystemlevel())) {

					return false;

				}

				if ((Sel_c.Getcurrentselectioncount() != 2)) {

					return false;

				}

				return Formalpkghasfunctions();

			}

			if ((p_Value.equals("formPkg"))) {

				int v_count = Util_c.Getelementcountinsystem(
						Converttoinstance(), Elementtypeconstants_c.PACKAGE);

				if ((v_count == 1 && getIsformal())) {

					return false;

				}

				return v_count != 0;

			}

			if ((p_Value.equals("unform"))) {

				return getIsformal();

			}

		}

		return false;

	} // End actionFilter
	public boolean Canrename() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Canrename");
		final ModelRoot modelRoot = getModelRoot();
		return !getIsformal();

	} // End canRename
	public boolean Definedatsystemlevel() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Definedatsystemlevel");
		final ModelRoot modelRoot = getModelRoot();
		InteractionParticipant_c v_part = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		return v_part.Definedatsystemlevel();

	} // End definedAtSystemLevel
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		InteractionParticipant_c v_participant = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		if (((v_participant != null))) {

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else {

			Package_c v_fp = Package_c.getOneEP_PKGOnR956(this);

			if (((v_fp != null))) {

				if (v_fp != null) {
					v_fp.unrelateAcrossR956From(this);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Unrelate attempted on null left hand instance.",
									t);
				}

			}

			if (delete()) {
				Ooaofooa.getDefaultInstance().fireModelElementDeleted(
						new BaseModelDelta(
								Modeleventnotification_c.DELTA_DELETE, this));
			}

		}

	} // End dispose
	public boolean Formalpkghasfunctions() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Package Participant",
						" Operation entered: PackageParticipant::Formalpkghasfunctions");
		final ModelRoot modelRoot = getModelRoot();
		PackageableElement_c v_packageableElem = PackageableElement_c
				.getOnePE_PEOnR8001(InteractionParticipant_c
						.getOneSQ_POnR930(this));

		Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);

		Component_c v_component = Component_c
				.getOneC_COnR8003(v_packageableElem);

		boolean v_isInGenericPackage = (v_package != null)
				|| (v_component != null);

		if ((v_isInGenericPackage)) {

			Package_c v_pkg = Package_c.getOneEP_PKGOnR956(this);

			if (((v_pkg != null))) {

				Function_c[] v_funcs = Function_c
						.getManyS_SYNCsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8000(v_pkg));

				return (v_funcs.length != 0);

			}

			return false;

		}

		else {

			return false;

		}

	} // End formalPKGHasFunctions
	public void Formalize(final java.util.UUID p_Fpid) {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Formalize");
		final ModelRoot modelRoot = getModelRoot();
		PackageableElement_c v_pe = (PackageableElement_c) modelRoot
				.getInstanceList(PackageableElement_c.class).getGlobal(null,
						p_Fpid);

		Package_c v_pkg = Package_c.getOneEP_PKGOnR8001(v_pe);

		if ((getIsformal())) {

			Unformalize();

		}

		if (((v_pkg != null))) {

			this.relateAcrossR956To(v_pkg);

		}

	} // End formalize
	public String Get_compartment_text(final int p_At, final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Get_compartment_text");
		final ModelRoot modelRoot = getModelRoot();
		String v_result = "";

		PackageableElement_c v_packageableElem = PackageableElement_c
				.getOnePE_PEOnR8001(InteractionParticipant_c
						.getOneSQ_POnR930(this));

		Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);

		Component_c v_component = Component_c
				.getOneC_COnR8003(v_packageableElem);

		boolean v_isInGenericPackage = (v_package != null)
				|| (v_component != null);

		if ((v_isInGenericPackage)) {

			Package_c v_pkg = Package_c.getOneEP_PKGOnR956(this);

			v_result = "";

			if ((p_At == Justification_c.Center_in_X)) {

				v_result = "«function»";

			}

			if (((v_pkg != null))) {

				if ((p_At == Justification_c.Center)) {

					v_result = v_pkg.Getpath("");

				}

			}

			else {

				if ((p_At == Justification_c.Center)) {

					v_result = getInformalname();

				}

			}

		}

		else {

			v_result = "";

		}

		return v_result;

	} // End get_compartment_text
	public int Get_compartments() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Get_compartments");
		final ModelRoot modelRoot = getModelRoot();
		return 1;

	} // End get_compartments
	public int Get_entries(final int p_Comp_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Get_entries");
		final ModelRoot modelRoot = getModelRoot();
		return 1;

	} // End get_entries
	public String Get_name() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Get_name");
		final ModelRoot modelRoot = getModelRoot();
		return getLabel();

	} // End get_name
	public java.util.UUID Get_ooa_id() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Get_ooa_id");
		final ModelRoot modelRoot = getModelRoot();
		return getPart_id();

	} // End get_ooa_id
	public int Get_style() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Get_style");
		final ModelRoot modelRoot = getModelRoot();
		return Style_c.Folder;

	} // End get_style
	public int Get_text_style(final int p_At, final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Get_text_style");
		final ModelRoot modelRoot = getModelRoot();
		return Style_c.None;

	} // End get_text_style
	public void Unformalize() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Unformalize");
		final ModelRoot modelRoot = getModelRoot();
		InteractionParticipant_c v_part = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		PackageableElement_c v_packageableElem = PackageableElement_c
				.getOnePE_PEOnR8001(InteractionParticipant_c
						.getOneSQ_POnR930(this));

		Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);

		Component_c v_component = Component_c
				.getOneC_COnR8003(v_packageableElem);

		boolean v_isInGenericPackage = (v_package != null)
				|| (v_component != null);

		if ((v_isInGenericPackage)) {

			Package_c v_pkg = Package_c.getOneEP_PKGOnR956(this);

			if (((v_pkg != null))) {

				this.unrelateAcrossR956From(v_pkg);

			}

		}

		Message_c[] v_messages = Message_c.getManyMSG_MsOnR1007(v_part);

		Message_c v_message = null;
		for (int i37279 = 0; i37279 < v_messages.length; i37279++) {
			v_message = v_messages[i37279];

			if (v_message != null) {
				v_message.Unformalize();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		CommunicationLink_c[] v_links = CommunicationLink_c
				.getManyCOMM_LNKsOnR1133(v_part);

		CommunicationLink_c v_link = null;
		for (int i37280 = 0; i37280 < v_links.length; i37280++) {
			v_link = v_links[i37280];

			if (v_link != null) {
				v_link.Unformalize();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

	} // End unformalize
	public void Initialize() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Initialize");
		final ModelRoot modelRoot = getModelRoot();
		String v_name = "Informal Package";

		String v_success = Ooaofooa.Getnewelementname(modelRoot,
				Converttoinstance(), v_name, false);

		if ((!v_success.equals(""))) {

			setInformalname(v_success);

		}

		else {

			Dispose();

		}

	} // End initialize
	public int Getfunctioncount() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Getfunctioncount");
		final ModelRoot modelRoot = getModelRoot();
		Function_c[] v_funcs = Function_c
				.getManyS_SYNCsOnR8001(PackageableElement_c
						.getManyPE_PEsOnR8000(Package_c
								.getManyEP_PKGsOnR956(this)));

		return (v_funcs.length);

	} // End getFunctionCount
	public void Resolvepackage() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Resolvepackage");
		final ModelRoot modelRoot = getModelRoot();
		Package_c v_proxyPkg = Package_c.getOneEP_PKGOnR956(this);

		if (((v_proxyPkg != null) && !Util_c.Isproxy(Converttoinstance()))) {

			PackageableElement_c v_packageableElem = PackageableElement_c
					.getOnePE_PEOnR8001(InteractionParticipant_c
							.getOneSQ_POnR930(this));

			Package_c v_package = Package_c
					.getOneEP_PKGOnR8000(v_packageableElem);

			Component_c v_component = Component_c
					.getOneC_COnR8003(v_packageableElem);

			if (((v_package == null))) {

				v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c
						.getOnePE_PEOnR8001(v_component));

			}

			java.util.UUID v_id = v_packageableElem
					.Resolvepackagerelativetoself(v_proxyPkg.getName());

			PackageableElement_c v_resolvedPe = (PackageableElement_c) modelRoot
					.getInstanceList(PackageableElement_c.class).getGlobal(
							null, v_id);

			if (((v_resolvedPe != null))) {

				Package_c v_pkg = Package_c.getOneEP_PKGOnR8001(v_resolvedPe);

				this.relateAcrossR956To(v_pkg);

				Resolvemessageformalizations();

			}

			else {

				Unformalize();

			}

		}

	} // End resolvePackage
	public Object Converttoinstance() {
		Ooaofooa.log.println(ILogger.OPERATION, "Package Participant",
				" Operation entered: PackageParticipant::Converttoinstance");
		return this;
	} // End convertToInstance
	public void Resolvemessageformalizations() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Package Participant",
						" Operation entered: PackageParticipant::Resolvemessageformalizations");
		final ModelRoot modelRoot = getModelRoot();
		Message_c[] v_messages = Message_c
				.getManyMSG_MsOnR1007(InteractionParticipant_c
						.getManySQ_PsOnR930(this));

		Message_c v_message = null;
		for (int i37281 = 0; i37281 < v_messages.length; i37281++) {
			v_message = v_messages[i37281];

			SynchronousMessage_c v_syncMessage = SynchronousMessage_c
					.getOneMSG_SMOnR1018(v_message);

			if (((v_syncMessage != null))) {

				if ((!v_syncMessage.getIsformal())) {

					continue;

				}

				FunctionMessage_c v_funcMsg = FunctionMessage_c
						.getOneMSG_FOnR1020(v_syncMessage);

				Function_c v_funcProxy = Function_c
						.getOneS_SYNCOnR1010(v_funcMsg);

				class Function_test37703_c implements ClassQueryInterface_c {
					Function_test37703_c(String p37704) {
						m_p37704 = p37704;
					}
					private String m_p37704;
					public boolean evaluate(Object candidate) {
						Function_c selected = (Function_c) candidate;
						return (selected.getName().equals(m_p37704));
					}
				}
				Function_c v_function = Function_c.getOneS_SYNCOnR8001(
						PackageableElement_c.getManyPE_PEsOnR8000(Package_c
								.getManyEP_PKGsOnR956(this)),
						new Function_test37703_c(v_funcProxy.getName()));

				if (((v_function != null))) {

					if (v_syncMessage != null) {
						v_syncMessage.Formalizewithfunction(v_function
								.getSync_id());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

				else {

					if (v_syncMessage != null) {
						v_syncMessage.Unformalize();
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

			}

		}

		Lifespan_c v_ls = Lifespan_c.getOneSQ_LSOnR940(InteractionParticipant_c
				.getOneSQ_POnR930(this));

		if (((v_ls != null))) {

			v_messages = Message_c
					.getManyMSG_MsOnR1007(InteractionParticipant_c
							.getManySQ_PsOnR930(v_ls));

			for (int i37282 = 0; i37282 < v_messages.length; i37282++) {
				v_message = v_messages[i37282];

				SynchronousMessage_c v_syncMessage = SynchronousMessage_c
						.getOneMSG_SMOnR1018(v_message);

				if (((v_syncMessage != null))) {

					if ((!v_syncMessage.getIsformal())) {

						continue;

					}

					FunctionMessage_c v_funcMsg = FunctionMessage_c
							.getOneMSG_FOnR1020(v_syncMessage);

					Function_c v_funcProxy = Function_c
							.getOneS_SYNCOnR1010(v_funcMsg);

					class Function_test37705_c implements ClassQueryInterface_c {
						Function_test37705_c(String p37706) {
							m_p37706 = p37706;
						}
						private String m_p37706;
						public boolean evaluate(Object candidate) {
							Function_c selected = (Function_c) candidate;
							return (selected.getName().equals(m_p37706));
						}
					}
					Function_c v_function = Function_c.getOneS_SYNCOnR8001(
							PackageableElement_c.getManyPE_PEsOnR8000(Package_c
									.getManyEP_PKGsOnR956(this)),
							new Function_test37705_c(v_funcProxy.getName()));

					if (((v_function != null))) {

						if (v_syncMessage != null) {
							v_syncMessage.Formalizewithfunction(v_function
									.getSync_id());
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

					else {

						if (v_syncMessage != null) {
							v_syncMessage.Unformalize();
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

				}

			}

		}

	} // End resolveMessageFormalizations
	public Object Getconfigurationinheritanceelementid() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Package Participant",
						" Operation entered: PackageParticipant::Getconfigurationinheritanceelementid");
		final ModelRoot modelRoot = getModelRoot();
		Package_c v_pkg = Package_c.getOneEP_PKGOnR956(this);

		if (((v_pkg != null))) {

			return v_pkg.Converttoinstance();

		}

		return Converttoinstance();

	} // End getConfigurationInheritanceElementId

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		if (adapter == IActionFilter.class) {
			return PackageParticipantActionFilter.getSingleton();
		}
		return null;
	}
} // end Package Participant
