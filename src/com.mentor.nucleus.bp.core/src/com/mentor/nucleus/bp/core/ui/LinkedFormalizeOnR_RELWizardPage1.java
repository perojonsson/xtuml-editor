package com.mentor.nucleus.bp.core.ui;
//====================================================================
//
// File:    LinkedFormalizeOnR_RELWizardPage1.java
//
// WARNING: Do not edit this generated file
// Generated by arc/page.inc
//
// (c) Copyright 2003-2014 Mentor Graphics Corporation  All rights reserved.
//
//====================================================================
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.jface.wizard.IWizardPage;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.ModifyEvent;
import org.eclipse.swt.events.ModifyListener;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Text;
import org.eclipse.ui.IWorkbench;

import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.common.ClassQueryInterface_c;

import java.util.ArrayList;
import java.util.List;

public class LinkedFormalizeOnR_RELWizardPage1 extends PtWizardPage
		implements
			Listener {
	public static final String copyright = "(c) Copyright 2003-2014 Mentor Graphics Corporation  All rights reserved.";

	IWorkbench workbench;
	IStructuredSelection selection;

	// widgets on this page (public for unit tests)
	public Combo One_idCombo;
	public Label One_idLabel;
	public String One_idTextPhrase = "";
	public Text One_idPrefix;
	public Label One_idPrefixLabel;
	public Label One_idPhrase;
	public Combo Oth_idCombo;
	public Label Oth_idLabel;
	public String Oth_idTextPhrase = "";
	public Text Oth_idPrefix;
	public Label Oth_idPrefixLabel;
	public Label Oth_idPhrase;

	// cache for user choices
	ClassIdentifier_c One_id = null;
	ClassIdentifier_c[] One_idInstances;
	ClassIdentifier_c Oth_id = null;
	ClassIdentifier_c[] Oth_idInstances;

	/**
	 * Constructors for LinkedFormalizeOnR_RELWizardPage1.
	 */
	public LinkedFormalizeOnR_RELWizardPage1() {
		super("");
		init();
	}

	public LinkedFormalizeOnR_RELWizardPage1(String name) {
		super(name);
		init();
	}

	private void init() {
		setTitle("Formalize");
		setDescription("Select the identifier to use from each class");
	}

	public void onPageEntry() {
		Ooaofooa modelRoot = Selection
				.getModelRoot((StructuredSelection) ((LinkedFormalizeOnR_RELWizard) getWizard())
						.getSelection());

		// cache for context
		Association_c v_rel = ((LinkedFormalizeOnR_RELWizard) getWizard()).v_rel;

		LinkedAssociation_c v_a_rel = LinkedAssociation_c
				.getOneR_ASSOCOnR206(v_rel);

		ModelClass_c v_one_obj = ModelClass_c
				.getOneO_OBJOnR201(ClassInAssociation_c
						.getOneR_OIROnR203(ReferredToClassInAssoc_c
								.getOneR_RTOOnR204(ClassAsAssociatedOneSide_c
										.getOneR_AONEOnR209(v_a_rel))));

		ModelClass_c v_oth_obj = ModelClass_c
				.getOneO_OBJOnR201(ClassInAssociation_c
						.getOneR_OIROnR203(ReferredToClassInAssoc_c
								.getOneR_RTOOnR204(ClassAsAssociatedOtherSide_c
										.getOneR_AOTHOnR210(v_a_rel))));

		// select related by where USER::selectOne
		ClassIdentifier_c[] v_one_idInstances = ClassIdentifier_c
				.getManyO_IDsOnR104(v_one_obj);
		ClassIdentifier_c v_one_id = null;
		int one_idInstCount;
		int one_idResultCount = 0;
		for (one_idInstCount = 0; one_idInstCount < v_one_idInstances.length; one_idInstCount++) {
			ClassIdentifier_c selected = v_one_idInstances[one_idInstCount];
			if (User_c.Selectone(selected.getObj_id())
					&& ClassIdentifier_c.Hasattributes(modelRoot,
							selected.getObj_id(), selected.getOid_id())) {
				one_idResultCount++;
			}
		}
		this.One_idInstances = new ClassIdentifier_c[one_idResultCount];
		one_idResultCount = 0;
		for (one_idInstCount = 0; one_idInstCount < v_one_idInstances.length; one_idInstCount++) {
			ClassIdentifier_c selected = v_one_idInstances[one_idInstCount];
			if (User_c.Selectone(selected.getObj_id())
					&& ClassIdentifier_c.Hasattributes(modelRoot,
							selected.getObj_id(), selected.getOid_id())) {
				this.One_idInstances[one_idResultCount] = selected;
				one_idResultCount++;
			}
		}
		One_idCombo.removeAll();
		for (one_idInstCount = 0; one_idInstCount < one_idResultCount; one_idInstCount++)
			One_idCombo
					.add(((ClassIdentifier_c) this.One_idInstances[one_idInstCount])
							.Get_name());
		if (one_idResultCount > 0) {
			One_idCombo.select(0);
			updateSelectedOne_id();
		}

		// select related by where USER::selectOne
		ClassIdentifier_c[] v_oth_idInstances = ClassIdentifier_c
				.getManyO_IDsOnR104(v_oth_obj);
		ClassIdentifier_c v_oth_id = null;
		int oth_idInstCount;
		int oth_idResultCount = 0;
		for (oth_idInstCount = 0; oth_idInstCount < v_oth_idInstances.length; oth_idInstCount++) {
			ClassIdentifier_c selected = v_oth_idInstances[oth_idInstCount];
			if (User_c.Selectone(selected.getObj_id())
					&& ClassIdentifier_c.Hasattributes(modelRoot,
							selected.getObj_id(), selected.getOid_id())) {
				oth_idResultCount++;
			}
		}
		this.Oth_idInstances = new ClassIdentifier_c[oth_idResultCount];
		oth_idResultCount = 0;
		for (oth_idInstCount = 0; oth_idInstCount < v_oth_idInstances.length; oth_idInstCount++) {
			ClassIdentifier_c selected = v_oth_idInstances[oth_idInstCount];
			if (User_c.Selectone(selected.getObj_id())
					&& ClassIdentifier_c.Hasattributes(modelRoot,
							selected.getObj_id(), selected.getOid_id())) {
				this.Oth_idInstances[oth_idResultCount] = selected;
				oth_idResultCount++;
			}
		}
		Oth_idCombo.removeAll();
		for (oth_idInstCount = 0; oth_idInstCount < oth_idResultCount; oth_idInstCount++)
			Oth_idCombo
					.add(((ClassIdentifier_c) this.Oth_idInstances[oth_idInstCount])
							.Get_name());
		if (oth_idResultCount > 0) {
			Oth_idCombo.select(0);
			updateSelectedOth_id();
		}

		if (((v_one_id != null) && (v_oth_id != null))) {

		}

		ClassAsAssociatedOneSide_c v_one_side = ClassAsAssociatedOneSide_c
				.getOneR_AONEOnR209(v_a_rel);
		ClassAsAssociatedOtherSide_c v_oth_side = ClassAsAssociatedOtherSide_c
				.getOneR_AOTHOnR210(v_a_rel);
		if (!v_one_side.getTxt_phrs().equals(""))
			One_idTextPhrase = " for the '" + v_one_side.getTxt_phrs()
					+ "' side";
		if (!v_oth_side.getTxt_phrs().equals(""))
			Oth_idTextPhrase = " for the '" + v_oth_side.getTxt_phrs()
					+ "' side";
	}

	public void createControl(Composite parent) {
		// create the composite to hold the widgets   
		GridData gd = null;
		Composite composite = new Composite(parent, SWT.NULL);

		// create the desired layout for this wizard page
		GridLayout gl = new GridLayout();
		int ncol = 5;
		gl.numColumns = ncol;
		composite.setLayout(gl);

		One_idPrefixLabel = new Label(composite, SWT.NONE);
		One_idPrefixLabel.setText("Prefix");
		One_idPrefix = new Text(composite, SWT.BORDER);
		One_idPrefix.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false,
				false, 1, 1));
		One_idPrefix.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent arg0) {
				((LinkedFormalizeOnR_RELWizard) getWizard()).v_one_idPrefix = LinkedFormalizeOnR_RELWizardPage1.this.One_idPrefix
						.getText();
			}
		});
		One_idLabel = new Label(composite, SWT.NONE);
		One_idLabel.setText("goes with identifier");
		One_idCombo = new Combo(composite, SWT.BORDER | SWT.READ_ONLY);
		One_idCombo.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		One_idPhrase = new Label(composite, SWT.NONE);
		One_idPhrase.setText("");
		Oth_idPrefixLabel = new Label(composite, SWT.NONE);
		Oth_idPrefixLabel.setText("Prefix");
		Oth_idPrefix = new Text(composite, SWT.BORDER);
		Oth_idPrefix.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false,
				false, 1, 1));
		Oth_idPrefix.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent arg0) {
				((LinkedFormalizeOnR_RELWizard) getWizard()).v_oth_idPrefix = LinkedFormalizeOnR_RELWizardPage1.this.Oth_idPrefix
						.getText();
			}
		});
		Oth_idLabel = new Label(composite, SWT.NONE);
		Oth_idLabel.setText("goes with identifier");
		Oth_idCombo = new Combo(composite, SWT.BORDER | SWT.READ_ONLY);
		Oth_idCombo.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		Oth_idPhrase = new Label(composite, SWT.NONE);
		Oth_idPhrase.setText("");

		// set the composite as the control for this page
		setControl(composite);
		onPageEntry(); // Initialize the ui widget contents
		One_idPhrase.setText("of class \""
				+ ModelClass_c.getOneO_OBJOnR104(One_idInstances[0]).getName()
				+ "\"" + One_idTextPhrase);
		Oth_idPhrase.setText("of class \""
				+ ModelClass_c.getOneO_OBJOnR104(Oth_idInstances[0]).getName()
				+ "\"" + Oth_idTextPhrase);
		addListeners();
	}

	private void addListeners() {
		One_idCombo.addListener(SWT.Selection, this);
		Oth_idCombo.addListener(SWT.Selection, this);
	}

	// public for unit tests
	public void updateSelectedOne_id() {
		this.One_id = One_idInstances[One_idCombo.getSelectionIndex()];
		((LinkedFormalizeOnR_RELWizard) getWizard()).v_one_id = this.One_id;
	}
	// public for unit tests
	public void updateSelectedOth_id() {
		this.Oth_id = Oth_idInstances[Oth_idCombo.getSelectionIndex()];
		((LinkedFormalizeOnR_RELWizard) getWizard()).v_oth_id = this.Oth_id;
	}

	/**
	 * @see Listener#handleEvent(Event)
	 */
	public void handleEvent(Event event) {
		if (event.widget == One_idCombo) {
			updateSelectedOne_id();
		}
		if (event.widget == Oth_idCombo) {
			updateSelectedOth_id();
		}
		getWizard().getContainer().updateButtons();
	}

	public boolean isPageComplete() {
		boolean isPageComplete = true;
		if (One_id == null)
			isPageComplete = false;
		if (Oth_id == null)
			isPageComplete = false;
		return isPageComplete;
	}

	public IWizardPage getNextPage() {
		((LinkedFormalizeOnR_RELWizard) getWizard()).v_one_id = One_id;
		((LinkedFormalizeOnR_RELWizard) getWizard()).v_oth_id = Oth_id;
		PtWizardPage page = (PtWizardPage) getWizard().getNextPage(this);
		page.onPageEntry();
		return page;
	}

	/**
	 * @see IWizardPage#canFlipToNextPage()
	 */
	public boolean canFlipToNextPage() {
		if ((PtWizardPage) getWizard().getNextPage(this) == null)
			return false;
		if (One_id == null)
			return false;
		if (Oth_id == null)
			return false;
		return true;
	}

}
