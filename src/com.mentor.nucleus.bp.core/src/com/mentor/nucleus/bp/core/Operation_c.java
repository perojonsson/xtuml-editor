      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Operation_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_OPERATION extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Operation_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Operation_c(ModelRoot modelRoot,
       java.util.UUID         p_m_tfr_id,
       java.util.UUID         p_m_obj_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dt_id,
       int  p_m_instance_based,
       String       p_m_action_semantics_internal,
       int  p_m_suc_pars,
       String       p_m_return_dimensions,
       java.util.UUID         p_m_previous_tfr_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_tfr_id = IdAssigner.preprocessUUID(p_m_tfr_id);
       //extract 28 bit value only            
       m_tfr_idLongBased = 0xfffffff & p_m_tfr_id.getLeastSignificantBits();
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       m_instance_based = p_m_instance_based;
       // default value for m_action_semantics
       m_suc_pars = p_m_suc_pars;
       m_action_semantics_internal = p_m_action_semantics_internal;
       m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_previous_tfr_id = IdAssigner.preprocessUUID(p_m_previous_tfr_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
    setUniqueId(m_tfr_id);
    Object [] key = {m_tfr_id};
    addInstanceToMap(key);
  }
  static public Operation_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_tfr_id,
       java.util.UUID         p_m_obj_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dt_id,
       int  p_m_instance_based,
       String       p_m_action_semantics_internal,
       int  p_m_suc_pars,
       String       p_m_return_dimensions,
       java.util.UUID         p_m_previous_tfr_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Operation_c.class);
      Operation_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_tfr_id};
          new_inst = (Operation_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_tfr_id = IdAssigner.preprocessUUID(p_m_tfr_id);
       //extract 28 bit value only            
       new_inst.m_tfr_idLongBased = 0xfffffff & p_m_tfr_id.getLeastSignificantBits();
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       new_inst.m_instance_based = p_m_instance_based;
       // default value for m_action_semantics
       new_inst.m_suc_pars = p_m_suc_pars;
       new_inst.m_action_semantics_internal = p_m_action_semantics_internal;
       new_inst.m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_previous_tfr_id = IdAssigner.preprocessUUID(p_m_previous_tfr_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Operation_c(modelRoot,
p_m_tfr_id,
p_m_obj_id,
p_m_name,
p_m_descrip,
p_m_dt_id,
p_m_instance_based,
p_m_action_semantics_internal,
p_m_suc_pars,
p_m_return_dimensions,
p_m_previous_tfr_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public Operation_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_tfr_id,
       java.util.UUID         p_m_obj_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dt_id,
       int  p_m_instance_based,
       String       p_m_action_semantics_internal,
       int  p_m_suc_pars,
       String       p_m_return_dimensions,
       java.util.UUID         p_m_previous_tfr_id){
    InstanceList instances = modelRoot.getInstanceList(Operation_c.class);
    Operation_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_tfr_id
            };
        source = (Operation_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_tfr_id = IdAssigner.preprocessUUID(p_m_tfr_id);
       //extract 28 bit value only            
       source.m_tfr_idLongBased = 0xfffffff & p_m_tfr_id.getLeastSignificantBits();
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       source.m_instance_based = p_m_instance_based;
       // default value for m_action_semantics
       source.m_suc_pars = p_m_suc_pars;
       source.m_action_semantics_internal = p_m_action_semantics_internal;
       source.m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_previous_tfr_id = IdAssigner.preprocessUUID(p_m_previous_tfr_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    Operation_c new_inst = new Operation_c(modelRoot,
p_m_tfr_id,
p_m_obj_id,
p_m_name,
p_m_descrip,
p_m_dt_id,
p_m_instance_based,
p_m_action_semantics_internal,
p_m_suc_pars,
p_m_return_dimensions,
p_m_previous_tfr_id
);
    return new_inst;
  }
  public Operation_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_tfr_id = idAssigner.createUUID();
     m_name = "";   
     m_descrip = "";   
     m_instance_based = Scope_c.OOA_UNINITIALIZED_ENUM;
     m_action_semantics = "";   
     m_suc_pars = Parsestatus_c.OOA_UNINITIALIZED_ENUM;
     m_action_semantics_internal = "";   
     m_return_dimensions = "";   
     m_previous_tfr_id = IdAssigner.NULL_UUID;   
     m_dt_id = IdAssigner.NULL_UUID;   
     m_obj_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_tfr_id);
    Object [] key = {m_tfr_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_tfr_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_tfr_id !=  p_newKey ){
	
		m_tfr_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Operation_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Operation_c)) {
           return false;
       }
       
       Operation_c me = (Operation_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getTfr_id()) || IdAssigner.NULL_UUID.equals(((Operation_c)elem).getTfr_id())) && this != elem)) {
      	return false;
      }
      if (!getTfr_id().equals(((Operation_c)elem).getTfr_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Operation_c)) {
           return false;
       }
       
       Operation_c me = (Operation_c)elem;
      if (!getTfr_id().equals(((Operation_c)elem).getTfr_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_tfr_id ;
  private long m_tfr_idLongBased ;
  private String       m_name ;
  private String       m_descrip ;
  private int  m_instance_based ;
  private String       m_action_semantics ;
  private int  m_suc_pars ;
  private String       m_action_semantics_internal ;
  private String       m_return_dimensions ;
  private java.util.UUID         m_previous_tfr_id ;
  private java.util.UUID         m_dt_id ;
  private java.util.UUID         m_obj_id ;
      
// declare association references from this class
  
  
    
// referring navigation

DataType_c ReturnCodeIsDefinedByDataType ;
public void relateAcrossR116To(DataType_c target)
{
	relateAcrossR116To(target, true);
}
public void relateAcrossR116To(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ReturnCodeIsDefinedByDataType) return;  // already related

    if ( ReturnCodeIsDefinedByDataType != target ) {
    
    Object oldKey = getInstanceKey();

    if (ReturnCodeIsDefinedByDataType != null) {
        UmlProblem.removeXtUMLProblem(this, ReturnCodeIsDefinedByDataType);
    
        ReturnCodeIsDefinedByDataType.clearBackPointerR116To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Operation_c.relateAcrossR116To(DataType_c target)", 
			"Relate performed across R116 from Operation to Data Type without unrelate of prior instance.");  
		}
    }
                
    	ReturnCodeIsDefinedByDataType = target ;
        if(IdAssigner.NULL_UUID.equals(target.getDt_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_dt_id = target.getDt_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR116To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "116", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR116From(DataType_c target)
{
	unrelateAcrossR116From(target, true);
}
public void unrelateAcrossR116From(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ReturnCodeIsDefinedByDataType == null) return;  // already unrelated
	
	if (target != ReturnCodeIsDefinedByDataType) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R116", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR116To(this);
    }
    

      if(ReturnCodeIsDefinedByDataType != null) {
      
        m_dt_id = ReturnCodeIsDefinedByDataType.getDt_id();
        if(IdAssigner.NULL_UUID.equals(m_dt_id))
        {
          m_dt_id = ReturnCodeIsDefinedByDataType.getDt_idCachedValue();
        }       
        ReturnCodeIsDefinedByDataType = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "116", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Operation_c getOneO_TFROnR116(DataType_c [] targets)
{
    return getOneO_TFROnR116(targets, null);
}

public static Operation_c getOneO_TFROnR116(DataType_c [] targets, ClassQueryInterface_c test)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneO_TFROnR116(targets[i], test);
        }
    }

    return ret_val;
}

public static Operation_c getOneO_TFROnR116(DataType_c target)
{
  return getOneO_TFROnR116(target, null);
}

public static Operation_c getOneO_TFROnR116(DataType_c target, boolean loadComponent)
{
    return getOneO_TFROnR116(target.getModelRoot(), target, null, loadComponent);
}

public static Operation_c getOneO_TFROnR116(DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneO_TFROnR116(target.getModelRoot(), target, test);
  }
  return null;
}

public static Operation_c getOneO_TFROnR116(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
	return getOneO_TFROnR116(modelRoot, target, test, true);
}

public static Operation_c getOneO_TFROnR116(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Operation_c result = null;
  
  result=find_getOneO_TFROnR116(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,Operation_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneO_TFROnR116(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Operation_c find_getOneO_TFROnR116(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116) {
	    for ( int i = 0; i < target.backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116.size(); ++i ) {
	      Operation_c source = (Operation_c)target.backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Operation_c [] getManyO_TFRsOnR116(DataType_c [] targets)
{
  return getManyO_TFRsOnR116(targets, null);
}
public static Operation_c [] getManyO_TFRsOnR116(DataType_c [] targets, boolean loadComponent)
{
  return getManyO_TFRsOnR116(targets, null, loadComponent);
}
public static Operation_c [] getManyO_TFRsOnR116(DataType_c [] targets, ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR116(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR116(DataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Operation_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, Operation_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Operation_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116) {
	    for (int j = 0; j < targets[i].backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116.size(); ++j) {
	      Operation_c source = (Operation_c)targets[i].backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Operation_c[] ret_set = new Operation_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Operation_c[0];
  }
  }

public static Operation_c [] getManyO_TFRsOnR116(DataType_c target)
{
  return getManyO_TFRsOnR116(target, null);
}

public static Operation_c [] getManyO_TFRsOnR116(DataType_c target, boolean loadComponent)
{
  return getManyO_TFRsOnR116(target, null, loadComponent);
}

public static Operation_c [] getManyO_TFRsOnR116(DataType_c target, ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR116(target, test, true);
}

public static Operation_c [] getManyO_TFRsOnR116(DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Operation_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, Operation_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116) {
    for (int i = 0; i < target.backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116.size(); ++i) {
      Operation_c source = (Operation_c)target.backPointer_DefinesTheTypeOfReturnCodeOperationDefinesTheTypeOfReturnCode_R116.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Operation_c[] ret_set = new Operation_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Operation_c[0];
	}
  }


  
    
// referring navigation

ModelClass_c IsAssociatedWithModelClass ;
public void relateAcrossR115To(ModelClass_c target)
{
	relateAcrossR115To(target, true);
}
public void relateAcrossR115To(ModelClass_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsAssociatedWithModelClass) return;  // already related

    if ( IsAssociatedWithModelClass != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsAssociatedWithModelClass != null) {
    
        IsAssociatedWithModelClass.clearBackPointerR115To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Operation_c.relateAcrossR115To(ModelClass_c target)", 
			"Relate performed across R115 from Operation to Model Class without unrelate of prior instance.");  
		}
    }
                
    	IsAssociatedWithModelClass = target ;
        if(IdAssigner.NULL_UUID.equals(target.getObj_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_obj_id = target.getObj_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR115To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "115", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR115From(ModelClass_c target)
{
	unrelateAcrossR115From(target, true);
}
public void unrelateAcrossR115From(ModelClass_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsAssociatedWithModelClass == null) return;  // already unrelated
	
	if (target != IsAssociatedWithModelClass) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R115", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR115To(this);
    }
    

      if(IsAssociatedWithModelClass != null) {
      
        m_obj_id = IsAssociatedWithModelClass.getObj_id();
        if(IdAssigner.NULL_UUID.equals(m_obj_id))
        {
          m_obj_id = IsAssociatedWithModelClass.getObj_idCachedValue();
        }       
        IsAssociatedWithModelClass = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "115", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Operation_c getOneO_TFROnR115(ModelClass_c [] targets)
{
    return getOneO_TFROnR115(targets, null);
}

public static Operation_c getOneO_TFROnR115(ModelClass_c [] targets, ClassQueryInterface_c test)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneO_TFROnR115(targets[i], test);
        }
    }

    return ret_val;
}

public static Operation_c getOneO_TFROnR115(ModelClass_c target)
{
  return getOneO_TFROnR115(target, null);
}

public static Operation_c getOneO_TFROnR115(ModelClass_c target, boolean loadComponent)
{
    return getOneO_TFROnR115(target.getModelRoot(), target, null, loadComponent);
}

public static Operation_c getOneO_TFROnR115(ModelClass_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneO_TFROnR115(target.getModelRoot(), target, test);
  }
  return null;
}

public static Operation_c getOneO_TFROnR115(ModelRoot modelRoot, ModelClass_c target, ClassQueryInterface_c test)
{
	return getOneO_TFROnR115(modelRoot, target, test, true);
}

public static Operation_c getOneO_TFROnR115(ModelRoot modelRoot, ModelClass_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneO_TFROnR115(modelRoot,target,test);
}
private static Operation_c find_getOneO_TFROnR115(ModelRoot modelRoot, ModelClass_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_MayContainOperationMayContain_R115) {
	    for ( int i = 0; i < target.backPointer_MayContainOperationMayContain_R115.size(); ++i ) {
	      Operation_c source = (Operation_c)target.backPointer_MayContainOperationMayContain_R115.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Operation_c [] getManyO_TFRsOnR115(ModelClass_c [] targets)
{
  return getManyO_TFRsOnR115(targets, null);
}
public static Operation_c [] getManyO_TFRsOnR115(ModelClass_c [] targets, boolean loadComponent)
{
  return getManyO_TFRsOnR115(targets, null, loadComponent);
}
public static Operation_c [] getManyO_TFRsOnR115(ModelClass_c [] targets, ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR115(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR115(ModelClass_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Operation_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Operation_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_MayContainOperationMayContain_R115) {
	    for (int j = 0; j < targets[i].backPointer_MayContainOperationMayContain_R115.size(); ++j) {
	      Operation_c source = (Operation_c)targets[i].backPointer_MayContainOperationMayContain_R115.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Operation_c[] ret_set = new Operation_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Operation_c[0];
  }
  }

public static Operation_c [] getManyO_TFRsOnR115(ModelClass_c target)
{
  return getManyO_TFRsOnR115(target, null);
}

public static Operation_c [] getManyO_TFRsOnR115(ModelClass_c target, boolean loadComponent)
{
  return getManyO_TFRsOnR115(target, null, loadComponent);
}

public static Operation_c [] getManyO_TFRsOnR115(ModelClass_c target, ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR115(target, test, true);
}

public static Operation_c [] getManyO_TFRsOnR115(ModelClass_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Operation_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_MayContainOperationMayContain_R115) {
    for (int i = 0; i < target.backPointer_MayContainOperationMayContain_R115.size(); ++i) {
      Operation_c source = (Operation_c)target.backPointer_MayContainOperationMayContain_R115.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Operation_c[] ret_set = new Operation_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Operation_c[0];
	}
  }


  
    
// referring navigation

Operation_c SucceedsOperation ;
public void relateAcrossR125ToSucceeds(Operation_c target)
{
	relateAcrossR125ToSucceeds(target, true);
}
public void relateAcrossR125ToSucceeds(Operation_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == SucceedsOperation) return;  // already related

    if ( SucceedsOperation != target ) {
    
    Object oldKey = getInstanceKey();

    if (SucceedsOperation != null) {
    
        SucceedsOperation.clearBackPointerR125ToPrecedes(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Operation_c.relateAcrossR125ToSucceeds(Operation_c target)", 
			"Relate performed across R125 from Operation to Operation without unrelate of prior instance.");  
		}
    }
                
    	SucceedsOperation = target ;
        m_previous_tfr_id = target.getTfr_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR125ToPrecedes(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "125", "Succeeds");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR125FromSucceeds(Operation_c target)
{
	unrelateAcrossR125FromSucceeds(target, true);
}
public void unrelateAcrossR125FromSucceeds(Operation_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (SucceedsOperation == null) return;  // already unrelated
	
	if (target != SucceedsOperation) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R125", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR125ToPrecedes(this);
    }
    

      if(SucceedsOperation != null) {
      
        m_previous_tfr_id = SucceedsOperation.getTfr_id();
        SucceedsOperation = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "125", "Succeeds");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Operation_c getOneO_TFROnR125Precedes(Operation_c [] targets)
{
    return getOneO_TFROnR125Precedes(targets, null);
}

public static Operation_c getOneO_TFROnR125Precedes(Operation_c [] targets, ClassQueryInterface_c test)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneO_TFROnR125Precedes(targets[i], test);
        }
    }

    return ret_val;
}

public static Operation_c getOneO_TFROnR125Precedes(Operation_c target)
{
  return getOneO_TFROnR125Precedes(target, null);
}

public static Operation_c getOneO_TFROnR125Precedes(Operation_c target, boolean loadComponent)
{
    return getOneO_TFROnR125Precedes(target.getModelRoot(), target, null, loadComponent);
}

public static Operation_c getOneO_TFROnR125Precedes(Operation_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneO_TFROnR125Precedes(target.getModelRoot(), target, test);
  }
  return null;
}

public static Operation_c getOneO_TFROnR125Precedes(ModelRoot modelRoot, Operation_c target, ClassQueryInterface_c test)
{
	return getOneO_TFROnR125Precedes(modelRoot, target, test, true);
}

public static Operation_c getOneO_TFROnR125Precedes(ModelRoot modelRoot, Operation_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneO_TFROnR125Precedes(modelRoot,target,test);
}
private static Operation_c find_getOneO_TFROnR125Precedes(ModelRoot modelRoot, Operation_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Operation_c source = (Operation_c)target.backPointer_PrecedesOperationPrecedes_R125;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Operation_c [] getManyO_TFRsOnR125Precedes(Operation_c [] targets)
{
  return getManyO_TFRsOnR125Precedes(targets, null);
}
public static Operation_c [] getManyO_TFRsOnR125Precedes(Operation_c [] targets, boolean loadComponent)
{
  return getManyO_TFRsOnR125Precedes(targets, null, loadComponent);
}
public static Operation_c [] getManyO_TFRsOnR125Precedes(Operation_c [] targets, ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR125Precedes(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR125Precedes(Operation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Operation_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Operation_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Operation_c source = (Operation_c)targets[i].backPointer_PrecedesOperationPrecedes_R125;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Operation_c[] ret_set = new Operation_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Operation_c[0];
  }
  }

public static Operation_c [] getManyO_TFRsOnR125Precedes(Operation_c target)
{
  if (target != null) {
    Operation_c [] targetArray = new Operation_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR125Precedes(targetArray);
  } else {
    Operation_c [] result = new Operation_c [0] ;
  return result ;
}
}

public static Operation_c [] getManyO_TFRsOnR125Precedes(Operation_c target, boolean loadComponent)
{
  if (target != null) {
    Operation_c [] targetArray = new Operation_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR125Precedes(targetArray, loadComponent);
  } else {
    Operation_c [] result = new Operation_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<OperationValue_c> backPointer_OperationValue_R829 = new ArrayList<OperationValue_c>();

public void setOperationValueOrderInChildListR829(OperationValue_c target, int index) {
	unrelateAcrossR829From(target);
	OperationValue_c[] elements = OperationValue_c.getManyV_TRVsOnR829(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR829From((OperationValue_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR829To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR829To((OperationValue_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR829To(OperationValue_c target)
{
  if (target != null) {
    target.relateAcrossR829To(this, true) ;
  }
}

public void relateAcrossR829To(OperationValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR829To(this, notifyChanges) ;
  }
}

public void setBackPointerR829To(OperationValue_c target)
{
  	synchronized (backPointer_OperationValue_R829) {
		backPointer_OperationValue_R829.add(target);
	}
}

public void unrelateAcrossR829From(OperationValue_c target)
{
  if (target != null) {
    target.unrelateAcrossR829From(this, true) ;
  }
}

public void unrelateAcrossR829From(OperationValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR829From(this, notifyChanges) ;
  }
}

public void clearBackPointerR829To(OperationValue_c target)
{
  synchronized (backPointer_OperationValue_R829) {
	    backPointer_OperationValue_R829.remove(target);
	}
}

public static Operation_c getOneO_TFROnR829(OperationValue_c [] targets)
{
    return getOneO_TFROnR829(targets, null);
}

public static Operation_c getOneO_TFROnR829(OperationValue_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_TFROnR829(targets, test, true);
}

public static Operation_c getOneO_TFROnR829(OperationValue_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Operation_c candidate_val = getOneO_TFROnR829(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_TFROnR829(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Operation_c getOneO_TFROnR829(OperationValue_c target)
{
	return getOneO_TFROnR829(target, true);
}
public static Operation_c getOneO_TFROnR829(OperationValue_c target, boolean loadComponent)
{
  if (target != null) {
    return target.Operation ;
  } else {
    return null;
  }
}

public static Operation_c [] getManyO_TFRsOnR829(OperationValue_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR829(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR829(OperationValue_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Operation_c[0];
  
  
  LinkedHashSet<Operation_c> elementsSet = new LinkedHashSet<Operation_c>();
  for (int i = 0; i < targets.length; i++) {
    Operation_c associate = targets[i].Operation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Operation_c[] result = new Operation_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Operation_c [] getManyO_TFRsOnR829(OperationValue_c [] targets)
{
  return getManyO_TFRsOnR829(targets, null);
}

public static Operation_c [] getManyO_TFRsOnR829(OperationValue_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    OperationValue_c [] targetArray = new OperationValue_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR829(targetArray, test, loadComponent);
  } else {
    Operation_c [] result = new Operation_c [0] ;
    return result ;
  }
  
}

public static Operation_c [] getManyO_TFRsOnR829(OperationValue_c target,
    ClassQueryInterface_c test)
{
    return getManyO_TFRsOnR829(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR829(OperationValue_c target)
{
    return getManyO_TFRsOnR829(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR829(OperationValue_c target, boolean loadComponent)
{
    return getManyO_TFRsOnR829(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<OperationParameter_c> backPointer_ContainsOperationParameterContains_R117 = new ArrayList<OperationParameter_c>();

public void setOperationParameterOrderInChildListR117(OperationParameter_c target, int index) {
	unrelateAcrossR117From(target);
	OperationParameter_c[] elements = OperationParameter_c.getManyO_TPARMsOnR117(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR117From((OperationParameter_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR117To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR117To((OperationParameter_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR117To(OperationParameter_c target)
{
  if (target != null) {
    target.relateAcrossR117To(this, true) ;
  }
}

public void relateAcrossR117To(OperationParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR117To(this, notifyChanges) ;
  }
}

public void setBackPointerR117To(OperationParameter_c target)
{
  	synchronized (backPointer_ContainsOperationParameterContains_R117) {
		backPointer_ContainsOperationParameterContains_R117.add(target);
	}
}

public void unrelateAcrossR117From(OperationParameter_c target)
{
  if (target != null) {
    target.unrelateAcrossR117From(this, true) ;
  }
}

public void unrelateAcrossR117From(OperationParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR117From(this, notifyChanges) ;
  }
}

public void clearBackPointerR117To(OperationParameter_c target)
{
  synchronized (backPointer_ContainsOperationParameterContains_R117) {
	    backPointer_ContainsOperationParameterContains_R117.remove(target);
	}
}

public static Operation_c getOneO_TFROnR117(OperationParameter_c [] targets)
{
    return getOneO_TFROnR117(targets, null);
}

public static Operation_c getOneO_TFROnR117(OperationParameter_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_TFROnR117(targets, test, true);
}

public static Operation_c getOneO_TFROnR117(OperationParameter_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Operation_c candidate_val = getOneO_TFROnR117(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_TFROnR117(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Operation_c getOneO_TFROnR117(OperationParameter_c target)
{
	return getOneO_TFROnR117(target, true);
}
public static Operation_c getOneO_TFROnR117(OperationParameter_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsPartOfOperation ;
  } else {
    return null;
  }
}

public static Operation_c [] getManyO_TFRsOnR117(OperationParameter_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR117(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR117(OperationParameter_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Operation_c[0];
  
  
  LinkedHashSet<Operation_c> elementsSet = new LinkedHashSet<Operation_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsPartOfOperation == null)
	  targets[i].loadProxy();
    Operation_c associate = targets[i].IsPartOfOperation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Operation_c[] result = new Operation_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Operation_c [] getManyO_TFRsOnR117(OperationParameter_c [] targets)
{
  return getManyO_TFRsOnR117(targets, null);
}

public static Operation_c [] getManyO_TFRsOnR117(OperationParameter_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    OperationParameter_c [] targetArray = new OperationParameter_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR117(targetArray, test, loadComponent);
  } else {
    Operation_c [] result = new Operation_c [0] ;
    return result ;
  }
  
}

public static Operation_c [] getManyO_TFRsOnR117(OperationParameter_c target,
    ClassQueryInterface_c test)
{
    return getManyO_TFRsOnR117(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR117(OperationParameter_c target)
{
    return getManyO_TFRsOnR117(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR117(OperationParameter_c target, boolean loadComponent)
{
    return getManyO_TFRsOnR117(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Dimensions_c> backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R122 = new ArrayList<Dimensions_c>();

public void setDimensionsOrderInChildListR122(Dimensions_c target, int index) {
	unrelateAcrossR122From(target);
	Dimensions_c[] elements = Dimensions_c.getManyS_DIMsOnR122(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR122From((Dimensions_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR122To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR122To((Dimensions_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR122To(Dimensions_c target)
{
  if (target != null) {
    target.relateAcrossR122To(this, true) ;
  }
}

public void relateAcrossR122To(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR122To(this, notifyChanges) ;
  }
}

public void setBackPointerR122To(Dimensions_c target)
{
  	synchronized (backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R122) {
		backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R122.add(target);
	}
}

public void unrelateAcrossR122From(Dimensions_c target)
{
  if (target != null) {
    target.unrelateAcrossR122From(this, true) ;
  }
}

public void unrelateAcrossR122From(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR122From(this, notifyChanges) ;
  }
}

public void clearBackPointerR122To(Dimensions_c target)
{
  synchronized (backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R122) {
	    backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R122.remove(target);
	}
}

public static Operation_c getOneO_TFROnR122(Dimensions_c [] targets)
{
    return getOneO_TFROnR122(targets, null);
}

public static Operation_c getOneO_TFROnR122(Dimensions_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_TFROnR122(targets, test, true);
}

public static Operation_c getOneO_TFROnR122(Dimensions_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Operation_c candidate_val = getOneO_TFROnR122(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_TFROnR122(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Operation_c getOneO_TFROnR122(Dimensions_c target)
{
	return getOneO_TFROnR122(target, true);
}
public static Operation_c getOneO_TFROnR122(Dimensions_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.DefinesReturnValueDimensionsForOperation ;
  } else {
    return null;
  }
}

public static Operation_c [] getManyO_TFRsOnR122(Dimensions_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR122(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR122(Dimensions_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Operation_c[0];
  
  
  LinkedHashSet<Operation_c> elementsSet = new LinkedHashSet<Operation_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].DefinesReturnValueDimensionsForOperation == null)
	  targets[i].loadProxy();
    Operation_c associate = targets[i].DefinesReturnValueDimensionsForOperation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Operation_c[] result = new Operation_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Operation_c [] getManyO_TFRsOnR122(Dimensions_c [] targets)
{
  return getManyO_TFRsOnR122(targets, null);
}

public static Operation_c [] getManyO_TFRsOnR122(Dimensions_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Dimensions_c [] targetArray = new Dimensions_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR122(targetArray, test, loadComponent);
  } else {
    Operation_c [] result = new Operation_c [0] ;
    return result ;
  }
  
}

public static Operation_c [] getManyO_TFRsOnR122(Dimensions_c target,
    ClassQueryInterface_c test)
{
    return getManyO_TFRsOnR122(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR122(Dimensions_c target)
{
    return getManyO_TFRsOnR122(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR122(Dimensions_c target, boolean loadComponent)
{
    return getManyO_TFRsOnR122(target, null, loadComponent);
}


    
  
  
// referred to navigation

Operation_c backPointer_PrecedesOperationPrecedes_R125;

public void setOperationOrderInChildListR125(Operation_c target, int index) {
	unrelateAcrossR125FromPrecedes(target);
	Operation_c[] elements = Operation_c.getManyO_TFRsOnR125Precedes(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR125FromPrecedes((Operation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR125ToPrecedes(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR125ToPrecedes((Operation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR125ToPrecedes(Operation_c target)
{
  if (target != null) {
    target.relateAcrossR125ToSucceeds(this, true) ;
  }
}

public void relateAcrossR125ToPrecedes(Operation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR125ToSucceeds(this, notifyChanges) ;
  }
}

public void setBackPointerR125ToPrecedes(Operation_c target)
{
    backPointer_PrecedesOperationPrecedes_R125 = target;
}

public void unrelateAcrossR125FromPrecedes(Operation_c target)
{
  if (target != null) {
    target.unrelateAcrossR125FromSucceeds(this, true) ;
  }
}

public void unrelateAcrossR125FromPrecedes(Operation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR125FromSucceeds(this, notifyChanges) ;
  }
}

public void clearBackPointerR125ToPrecedes(Operation_c target)
{
	if (target == backPointer_PrecedesOperationPrecedes_R125) {
		backPointer_PrecedesOperationPrecedes_R125 = null;
	}
}

public static Operation_c getOneO_TFROnR125Succeeds(Operation_c [] targets)
{
    return getOneO_TFROnR125Succeeds(targets, null);
}

public static Operation_c getOneO_TFROnR125Succeeds(Operation_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_TFROnR125Succeeds(targets, test, true);
}

public static Operation_c getOneO_TFROnR125Succeeds(Operation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Operation_c candidate_val = getOneO_TFROnR125Succeeds(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_TFROnR125Succeeds(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Operation_c getOneO_TFROnR125Succeeds(Operation_c target)
{
	return getOneO_TFROnR125Succeeds(target, true);
}
public static Operation_c getOneO_TFROnR125Succeeds(Operation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.SucceedsOperation ;
  } else {
    return null;
  }
}

public static Operation_c [] getManyO_TFRsOnR125Succeeds(Operation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR125Succeeds(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR125Succeeds(Operation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Operation_c[0];
  
  
  LinkedHashSet<Operation_c> elementsSet = new LinkedHashSet<Operation_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].SucceedsOperation == null)
	  targets[i].loadProxy();
    Operation_c associate = targets[i].SucceedsOperation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Operation_c[] result = new Operation_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Operation_c [] getManyO_TFRsOnR125Succeeds(Operation_c [] targets)
{
  return getManyO_TFRsOnR125Succeeds(targets, null);
}

public static Operation_c [] getManyO_TFRsOnR125Succeeds(Operation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Operation_c [] targetArray = new Operation_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR125Succeeds(targetArray, test, loadComponent);
  } else {
    Operation_c [] result = new Operation_c [0] ;
    return result ;
  }
  
}

public static Operation_c [] getManyO_TFRsOnR125Succeeds(Operation_c target,
    ClassQueryInterface_c test)
{
    return getManyO_TFRsOnR125Succeeds(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR125Succeeds(Operation_c target)
{
    return getManyO_TFRsOnR125Succeeds(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR125Succeeds(Operation_c target, boolean loadComponent)
{
    return getManyO_TFRsOnR125Succeeds(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<OperationMessage_c> backPointer_IsInvokedByOperationMessageIsInvokedBy_R1011 = new ArrayList<OperationMessage_c>();

public void setOperationMessageOrderInChildListR1011(OperationMessage_c target, int index) {
	unrelateAcrossR1011From(target);
	OperationMessage_c[] elements = OperationMessage_c.getManyMSG_OsOnR1011(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1011From((OperationMessage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1011To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1011To((OperationMessage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1011To(OperationMessage_c target)
{
  if (target != null) {
    target.relateAcrossR1011To(this, true) ;
  }
}

public void relateAcrossR1011To(OperationMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1011To(this, notifyChanges) ;
  }
}

public void setBackPointerR1011To(OperationMessage_c target)
{
  	synchronized (backPointer_IsInvokedByOperationMessageIsInvokedBy_R1011) {
		backPointer_IsInvokedByOperationMessageIsInvokedBy_R1011.add(target);
	}
}

public void unrelateAcrossR1011From(OperationMessage_c target)
{
  if (target != null) {
    target.unrelateAcrossR1011From(this, true) ;
  }
}

public void unrelateAcrossR1011From(OperationMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1011From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1011To(OperationMessage_c target)
{
  synchronized (backPointer_IsInvokedByOperationMessageIsInvokedBy_R1011) {
	    backPointer_IsInvokedByOperationMessageIsInvokedBy_R1011.remove(target);
	}
}

public static Operation_c getOneO_TFROnR1011(OperationMessage_c [] targets)
{
    return getOneO_TFROnR1011(targets, null);
}

public static Operation_c getOneO_TFROnR1011(OperationMessage_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_TFROnR1011(targets, test, true);
}

public static Operation_c getOneO_TFROnR1011(OperationMessage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Operation_c candidate_val = getOneO_TFROnR1011(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_TFROnR1011(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Operation_c getOneO_TFROnR1011(OperationMessage_c target)
{
	return getOneO_TFROnR1011(target, true);
}
public static Operation_c getOneO_TFROnR1011(OperationMessage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsInvocationOfOperation != null){
		target.IsInvocationOfOperation.loadProxy();
	}
	}
    return target.IsInvocationOfOperation ;
  } else {
    return null;
  }
}

public static Operation_c [] getManyO_TFRsOnR1011(OperationMessage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR1011(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR1011(OperationMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Operation_c[0];
  
  
  LinkedHashSet<Operation_c> elementsSet = new LinkedHashSet<Operation_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsInvocationOfOperation == null)
	  targets[i].loadProxy();
    Operation_c associate = targets[i].IsInvocationOfOperation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Operation_c[] result = new Operation_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Operation_c [] getManyO_TFRsOnR1011(OperationMessage_c [] targets)
{
  return getManyO_TFRsOnR1011(targets, null);
}

public static Operation_c [] getManyO_TFRsOnR1011(OperationMessage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    OperationMessage_c [] targetArray = new OperationMessage_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR1011(targetArray, test, loadComponent);
  } else {
    Operation_c [] result = new Operation_c [0] ;
    return result ;
  }
  
}

public static Operation_c [] getManyO_TFRsOnR1011(OperationMessage_c target,
    ClassQueryInterface_c test)
{
    return getManyO_TFRsOnR1011(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR1011(OperationMessage_c target)
{
    return getManyO_TFRsOnR1011(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR1011(OperationMessage_c target, boolean loadComponent)
{
    return getManyO_TFRsOnR1011(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<OperationInvocation_c> backPointer_OperationInvocation_R673 = new ArrayList<OperationInvocation_c>();

public void setOperationInvocationOrderInChildListR673(OperationInvocation_c target, int index) {
	unrelateAcrossR673From(target);
	OperationInvocation_c[] elements = OperationInvocation_c.getManyACT_TFMsOnR673(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR673From((OperationInvocation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR673To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR673To((OperationInvocation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR673To(OperationInvocation_c target)
{
  if (target != null) {
    target.relateAcrossR673To(this, true) ;
  }
}

public void relateAcrossR673To(OperationInvocation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR673To(this, notifyChanges) ;
  }
}

public void setBackPointerR673To(OperationInvocation_c target)
{
  	synchronized (backPointer_OperationInvocation_R673) {
		backPointer_OperationInvocation_R673.add(target);
	}
}

public void unrelateAcrossR673From(OperationInvocation_c target)
{
  if (target != null) {
    target.unrelateAcrossR673From(this, true) ;
  }
}

public void unrelateAcrossR673From(OperationInvocation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR673From(this, notifyChanges) ;
  }
}

public void clearBackPointerR673To(OperationInvocation_c target)
{
  synchronized (backPointer_OperationInvocation_R673) {
	    backPointer_OperationInvocation_R673.remove(target);
	}
}

public static Operation_c getOneO_TFROnR673(OperationInvocation_c [] targets)
{
    return getOneO_TFROnR673(targets, null);
}

public static Operation_c getOneO_TFROnR673(OperationInvocation_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_TFROnR673(targets, test, true);
}

public static Operation_c getOneO_TFROnR673(OperationInvocation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Operation_c candidate_val = getOneO_TFROnR673(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_TFROnR673(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Operation_c getOneO_TFROnR673(OperationInvocation_c target)
{
	return getOneO_TFROnR673(target, true);
}
public static Operation_c getOneO_TFROnR673(OperationInvocation_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsAnInvocationOfOperation ;
  } else {
    return null;
  }
}

public static Operation_c [] getManyO_TFRsOnR673(OperationInvocation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR673(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR673(OperationInvocation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Operation_c[0];
  
  
  LinkedHashSet<Operation_c> elementsSet = new LinkedHashSet<Operation_c>();
  for (int i = 0; i < targets.length; i++) {
    Operation_c associate = targets[i].IsAnInvocationOfOperation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Operation_c[] result = new Operation_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Operation_c [] getManyO_TFRsOnR673(OperationInvocation_c [] targets)
{
  return getManyO_TFRsOnR673(targets, null);
}

public static Operation_c [] getManyO_TFRsOnR673(OperationInvocation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    OperationInvocation_c [] targetArray = new OperationInvocation_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR673(targetArray, test, loadComponent);
  } else {
    Operation_c [] result = new Operation_c [0] ;
    return result ;
  }
  
}

public static Operation_c [] getManyO_TFRsOnR673(OperationInvocation_c target,
    ClassQueryInterface_c test)
{
    return getManyO_TFRsOnR673(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR673(OperationInvocation_c target)
{
    return getManyO_TFRsOnR673(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR673(OperationInvocation_c target, boolean loadComponent)
{
    return getManyO_TFRsOnR673(target, null, loadComponent);
}


    
  
  
// referred to navigation

OperationBody_c backPointer_OperationBody_R696;

public void setOperationBodyOrderInChildListR696(OperationBody_c target, int index) {
	unrelateAcrossR696From(target);
	OperationBody_c[] elements = OperationBody_c.getManyACT_OPBsOnR696(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR696From((OperationBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR696To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR696To((OperationBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR696To(OperationBody_c target)
{
  if (target != null) {
    target.relateAcrossR696To(this, true) ;
  }
}

public void relateAcrossR696To(OperationBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR696To(this, notifyChanges) ;
  }
}

public void setBackPointerR696To(OperationBody_c target)
{
    backPointer_OperationBody_R696 = target;
}

public void unrelateAcrossR696From(OperationBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR696From(this, true) ;
  }
}

public void unrelateAcrossR696From(OperationBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR696From(this, notifyChanges) ;
  }
}

public void clearBackPointerR696To(OperationBody_c target)
{
	if (target == backPointer_OperationBody_R696) {
		backPointer_OperationBody_R696 = null;
	}
}

public static Operation_c getOneO_TFROnR696(OperationBody_c [] targets)
{
    return getOneO_TFROnR696(targets, null);
}

public static Operation_c getOneO_TFROnR696(OperationBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_TFROnR696(targets, test, true);
}

public static Operation_c getOneO_TFROnR696(OperationBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Operation_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Operation_c candidate_val = getOneO_TFROnR696(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_TFROnR696(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Operation_c getOneO_TFROnR696(OperationBody_c target)
{
	return getOneO_TFROnR696(target, true);
}
public static Operation_c getOneO_TFROnR696(OperationBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.SpecifiesProcessingForOperation ;
  } else {
    return null;
  }
}

public static Operation_c [] getManyO_TFRsOnR696(OperationBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_TFRsOnR696(targets, test, true);
}

public static Operation_c [] getManyO_TFRsOnR696(OperationBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Operation_c[0];
  
  
  LinkedHashSet<Operation_c> elementsSet = new LinkedHashSet<Operation_c>();
  for (int i = 0; i < targets.length; i++) {
    Operation_c associate = targets[i].SpecifiesProcessingForOperation;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Operation_c[] result = new Operation_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Operation_c [] getManyO_TFRsOnR696(OperationBody_c [] targets)
{
  return getManyO_TFRsOnR696(targets, null);
}

public static Operation_c [] getManyO_TFRsOnR696(OperationBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    OperationBody_c [] targetArray = new OperationBody_c[1];
    targetArray[0] = target;
    return getManyO_TFRsOnR696(targetArray, test, loadComponent);
  } else {
    Operation_c [] result = new Operation_c [0] ;
    return result ;
  }
  
}

public static Operation_c [] getManyO_TFRsOnR696(OperationBody_c target,
    ClassQueryInterface_c test)
{
    return getManyO_TFRsOnR696(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR696(OperationBody_c target)
{
    return getManyO_TFRsOnR696(target, null, true);
}

public static Operation_c [] getManyO_TFRsOnR696(OperationBody_c target, boolean loadComponent)
{
    return getManyO_TFRsOnR696(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (ReturnCodeIsDefinedByDataType == null) {          
      // R116
      DataType_c relInst38641 = (DataType_c) baseRoot.getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38641 == null) {
      			relInst38641 = (DataType_c) Ooaofooa.getDefaultInstance().getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
      		}
			if (relInst38641 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38641 = (DataType_c) roots[i].getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
					if (relInst38641 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38641 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38641) && !isProxy())) {
	      relInst38641.relateAcrossR116To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsAssociatedWithModelClass == null) {          
      // R115
      ModelClass_c relInst38642 = (ModelClass_c) baseRoot.getInstanceList(ModelClass_c.class).get(new Object[] {m_obj_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38642 == null) {
      			relInst38642 = (ModelClass_c) Ooaofooa.getDefaultInstance().getInstanceList(ModelClass_c.class).get(new Object[] {m_obj_id});
      		}
			if (relInst38642 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38642 = (ModelClass_c) roots[i].getInstanceList(ModelClass_c.class).get(new Object[] {m_obj_id});
					if (relInst38642 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38642 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38642) && !isProxy())) {
	      relInst38642.relateAcrossR115To(this, notifyChanges);
	  }
	  }
	}
	          

	if (SucceedsOperation == null) {          
      // R125
      Operation_c relInst38643 = (Operation_c) baseRoot.getInstanceList(Operation_c.class).get(new Object[] {m_previous_tfr_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38643 == null) {
      			relInst38643 = (Operation_c) Ooaofooa.getDefaultInstance().getInstanceList(Operation_c.class).get(new Object[] {m_previous_tfr_id});
      		}
			if (relInst38643 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38643 = (Operation_c) roots[i].getInstanceList(Operation_c.class).get(new Object[] {m_previous_tfr_id});
					if (relInst38643 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38643 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38643) && !isProxy())) {
	      relInst38643.relateAcrossR125ToPrecedes(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R116
      // S_DT
		  inst=ReturnCodeIsDefinedByDataType;
			unrelateAcrossR116From(ReturnCodeIsDefinedByDataType, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R115
      // O_OBJ
		  inst=IsAssociatedWithModelClass;
			unrelateAcrossR115From(IsAssociatedWithModelClass, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R125
      // O_TFR
		  inst=SucceedsOperation;
			unrelateAcrossR125FromSucceeds(SucceedsOperation, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Operation_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Operation_c inst = (Operation_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Operation_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Operation_c OperationInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Operation_c result=findOperationInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Operation_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findOperationInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Operation_c findOperationInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Operation_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Operation_c x = (Operation_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Operation_c OperationInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return OperationInstance(modelRoot,test,true);
  }
  
  public static Operation_c OperationInstance(ModelRoot modelRoot)
  {
	 return OperationInstance(modelRoot,null,true);
  }

  public static Operation_c [] OperationInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Operation_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Operation_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Operation_c x = (Operation_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Operation_c[] ret_set = new Operation_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Operation_c[0];
			}		
		} 
  }
  public static Operation_c [] OperationInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  OperationInstances(modelRoot,test,true);
  }
  public static Operation_c [] OperationInstances(ModelRoot modelRoot)
  {
	return OperationInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Operation.dispose call: ";
	OperationValue_c testR829Inst = OperationValue_c.getOneV_TRVOnR829(this, false);

	if ( testR829Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "829 ";	
	}
	OperationParameter_c testR117Inst = OperationParameter_c.getOneO_TPARMOnR117(this, false);

	if ( testR117Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "117 ";	
	}
	DataType_c testR116Inst = DataType_c.getOneS_DTOnR116(this, false);

	if ( testR116Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "116 ";
	}
	ModelClass_c testR115Inst = ModelClass_c.getOneO_OBJOnR115(this, false);

	if ( testR115Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "115 ";
	}
	Dimensions_c testR122Inst = Dimensions_c.getOneS_DIMOnR122(this, false);

	if ( testR122Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "122 ";	
	}
	Operation_c testR125Inst = Operation_c.getOneO_TFROnR125Precedes(this, false);

	if ( testR125Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "125 ";	
	}
	 testR125Inst = Operation_c.getOneO_TFROnR125Succeeds(this, false);

	if ( testR125Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "125 ";
	}
	OperationMessage_c testR1011Inst = OperationMessage_c.getOneMSG_OOnR1011(this, false);

	if ( testR1011Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1011 ";	
	}
	OperationInvocation_c testR673Inst = OperationInvocation_c.getOneACT_TFMOnR673(this, false);

	if ( testR673Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "673 ";	
	}
	OperationBody_c testR696Inst = OperationBody_c.getOneACT_OPBOnR696(this, false);

	if ( testR696Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "696 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Operation", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("tfr_id")){
         return true;
      }
      if(attributeName.equals("previous_tfr_id")){
         return true;
      }
      if(attributeName.equals("dt_id")){
         return true;
      }
      if(attributeName.equals("obj_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getTfr_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getTfr_idLongBased()
  {
    if(m_tfr_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_tfr_id)){
    	return 0xfffffff & m_tfr_id.getLeastSignificantBits();
    }
    return m_tfr_idLongBased ;
  }
  public java.util.UUID getTfr_id()
  {
    return m_tfr_id ;
  }


  public void setTfr_id(java.util.UUID newValue)
  {
   m_tfr_id = IdAssigner.preprocessUUID(newValue);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getInstance_based()
  {
    return m_instance_based ;
  }


  public void setInstance_based(int newValue)
  {
    if(m_instance_based == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Instance_based", new Integer(m_instance_based), new Integer(newValue),true);

   m_instance_based = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getAction_semantics()
  {
ModelRoot modelRoot = getModelRoot();
return Ooaofooa.Convertrelocatabletags(modelRoot			    
,getAction_semantics_internal());



  }


  public int getSuc_pars()
  {
    return m_suc_pars ;
  }


  public void setSuc_pars(int newValue)
  {
    if(m_suc_pars == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Suc_pars", new Integer(m_suc_pars), new Integer(newValue),true);

   m_suc_pars = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getAction_semantics_internal()
  {
    return m_action_semantics_internal ;
  }


  public void setAction_semantics_internal(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_action_semantics_internal)){
	        return;
	    }
	}else if(m_action_semantics_internal != null){
	    if(m_action_semantics_internal.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Action_semantics_internal", m_action_semantics_internal, newValue,true); 
   m_action_semantics_internal = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getReturn_dimensions()
  {
    return m_return_dimensions ;
  }


  public void setReturn_dimensions(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_return_dimensions)){
	        return;
	    }
	}else if(m_return_dimensions != null){
	    if(m_return_dimensions.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Return_dimensions", m_return_dimensions, newValue,true); 
   m_return_dimensions = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPrevious_tfr_idLongBased()
  {
    if ( SucceedsOperation != null )
    {
      return SucceedsOperation.getTfr_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPrevious_tfr_id()
  {
    if ( SucceedsOperation != null )
    {
      return SucceedsOperation.getTfr_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getPrevious_tfr_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_previous_tfr_id) )
      return m_previous_tfr_id;
    else
      return getPrevious_tfr_id();
  }
  
  public void setPrevious_tfr_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_previous_tfr_id)){
	        return;
	    }
	}else if(m_previous_tfr_id != null){
	    if(m_previous_tfr_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Previous_tfr_id", m_previous_tfr_id, newValue,true); 
   m_previous_tfr_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDt_idLongBased()
  {
    if ( ReturnCodeIsDefinedByDataType != null )
    {
      return ReturnCodeIsDefinedByDataType.getDt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDt_id()
  {
    if ( ReturnCodeIsDefinedByDataType != null )
    {
      return ReturnCodeIsDefinedByDataType.getDt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dt_id) )
      return m_dt_id;
    else
      return getDt_id();
  }
  
  public void setDt_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dt_id)){
	        return;
	    }
	}else if(m_dt_id != null){
	    if(m_dt_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dt_id", m_dt_id, newValue,true); 
   m_dt_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getObj_idLongBased()
  {
    if ( IsAssociatedWithModelClass != null )
    {
      return IsAssociatedWithModelClass.getObj_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getObj_id()
  {
    if ( IsAssociatedWithModelClass != null )
    {
      return IsAssociatedWithModelClass.getObj_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getObj_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_obj_id) )
      return m_obj_id;
    else
      return getObj_id();
  }
  
  public void setObj_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_obj_id)){
	        return;
	    }
	}else if(m_obj_id != null){
	    if(m_obj_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Obj_id", m_obj_id, newValue,true); 
   m_obj_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Operation", //$NON-NLS-1$
	  " Operation entered: Operation::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Operation_c [] objs = Operation_c.OperationInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Operation", //$NON-NLS-1$
	  " Operation entered: Operation::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Operation_c_test38645_c implements ClassQueryInterface_c
    {
	  Operation_c_test38645_c( java.util.UUID            p38646 ) {
	  m_p38646 = p38646;
	  }
	  private java.util.UUID             m_p38646; 
	  public boolean evaluate (Object candidate)
	  {
	      Operation_c selected = (Operation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTfr_id().equals(m_p38646));
	      return retval;
	  }
    }

    Operation_c [] objs38644 = 
    Operation_c.OperationInstances(modelRoot, new Operation_c_test38645_c(getTfr_id())) ;

    if ( (  (objs38644.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Operation", //$NON-NLS-1$
           "Consistency: Object: Operation: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38644.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Operation: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38644.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs38644.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Operation", //$NON-NLS-1$
           "Consistency: Object: Operation: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38644.length )  + " Tfr_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Operation: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38644.length )  + " Tfr_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Operation is a referring class in association: rel.Numb = 125
          // The participating class is: Operation
    class Operation_c_test38650_c implements ClassQueryInterface_c
    {
	  Operation_c_test38650_c( java.util.UUID            p38651 ) {
	  m_p38651 = p38651;
	  }
	  private java.util.UUID             m_p38651; 
	  public boolean evaluate (Object candidate)
	  {
	      Operation_c selected = (Operation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTfr_id().equals(m_p38651));
	      return retval;
	  }
    }

    Operation_c [] objs38649 = 
    Operation_c.OperationInstances(modelRoot, new Operation_c_test38650_c(getPrevious_tfr_id())) ;

    if ( (  (objs38649.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Operation", //$NON-NLS-1$
           "Consistency: Object: Operation: Association: 125: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38649.length )  + " Previous_Tfr_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Operation: Association: 125: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38649.length )  + " Previous_Tfr_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Operation is a referring class in association: rel.Numb = 116
          // The participating class is: Data Type
    class DataType_c_test38653_c implements ClassQueryInterface_c
    {
	  DataType_c_test38653_c( java.util.UUID            p38654 ) {
	  m_p38654 = p38654;
	  }
	  private java.util.UUID             m_p38654; 
	  public boolean evaluate (Object candidate)
	  {
	      DataType_c selected = (DataType_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p38654));
	      return retval;
	  }
    }

    DataType_c [] objs38652 = 
    DataType_c.DataTypeInstances(modelRoot, new DataType_c_test38653_c(getDt_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs38652.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Operation", //$NON-NLS-1$
           "Consistency: Object: Operation: Association: 116: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38652.length )  + " DT_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Operation: Association: 116: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38652.length )  + " DT_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Operation is a referring class in association: rel.Numb = 115
          // The participating class is: Model Class
    class ModelClass_c_test38656_c implements ClassQueryInterface_c
    {
	  ModelClass_c_test38656_c( java.util.UUID            p38657 ) {
	  m_p38657 = p38657;
	  }
	  private java.util.UUID             m_p38657; 
	  public boolean evaluate (Object candidate)
	  {
	      ModelClass_c selected = (ModelClass_c) candidate;
	      boolean retval = false;
	      retval = (selected.getObj_id().equals(m_p38657));
	      return retval;
	  }
    }

    ModelClass_c [] objs38655 = 
    ModelClass_c.ModelClassInstances(modelRoot, new ModelClass_c_test38656_c(getObj_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs38655.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Operation", //$NON-NLS-1$
           "Consistency: Object: Operation: Association: 115: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38655.length )  + " Obj_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Operation: Association: 115: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38655.length )  + " Obj_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Operation is a participating class in association: rel.Numb = 829
             // Object: Operation Value
          // Operation is a participating class in association: rel.Numb = 117
             // Object: Operation Parameter
          // Operation is a participating class in association: rel.Numb = 125
             // Object: Operation
    class Operation_c_test38659_c implements ClassQueryInterface_c
    {
	  Operation_c_test38659_c( java.util.UUID            p38660 ) {
	  m_p38660 = p38660;
	  }
	  private java.util.UUID             m_p38660; 
	  public boolean evaluate (Object candidate)
	  {
	      Operation_c selected = (Operation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPrevious_tfr_id().equals(m_p38660));
	      return retval;
	  }
    }

    Operation_c [] objs38658 = 
    Operation_c.OperationInstances(modelRoot, new Operation_c_test38659_c(getTfr_id())) ;

    if ( (  (objs38658.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Operation", //$NON-NLS-1$
           "Consistency: Object: Operation: Association: 125: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38658.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Operation: Association: 125: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38658.length )  , e); 
      }
      retval = false;

    }

          // Operation is a participating class in association: rel.Numb = 122
             // Object: Dimensions
          // Operation is a participating class in association: rel.Numb = 1011
             // Object: Operation Message
          // Operation is a participating class in association: rel.Numb = 673
             // Object: Operation Invocation
          // Operation is a participating class in association: rel.Numb = 696
             // Object: Operation Body
    class OperationBody_c_test38662_c implements ClassQueryInterface_c
    {
	  OperationBody_c_test38662_c( java.util.UUID            p38663 ) {
	  m_p38663 = p38663;
	  }
	  private java.util.UUID             m_p38663; 
	  public boolean evaluate (Object candidate)
	  {
	      OperationBody_c selected = (OperationBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTfr_id().equals(m_p38663));
	      return retval;
	  }
    }

    OperationBody_c [] objs38661 = 
    OperationBody_c.OperationBodyInstances(modelRoot, new OperationBody_c_test38662_c(getTfr_id())) ;

    if ( (  (objs38661.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Operation", //$NON-NLS-1$
           "Consistency: Object: Operation: Association: 696: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38661.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Operation: Association: 696: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38661.length )  , e); 
      }
      retval = false;

    }

    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_myClass = ModelClass_c.getOneO_OBJOnR115(this);


this.unrelateAcrossR115From(v_myClass);


Operation_c v_successor = Operation_c.getOneO_TFROnR125Precedes(this);


Operation_c v_predecessor = Operation_c.getOneO_TFROnR125Succeeds(this);


if ( (  !  (v_successor == null)) )
{

this.unrelateAcrossR125FromPrecedes(v_successor);



}

if ( (  !  (v_predecessor == null)) )
{

this.unrelateAcrossR125FromSucceeds(v_predecessor);



}

if ( (  (v_successor != null) &&   (v_predecessor != null)) )
{

if (v_successor != null) {
  v_successor.relateAcrossR125ToSucceeds(v_predecessor);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

DataType_c v_dt = DataType_c.getOneS_DTOnR116(this);


this.unrelateAcrossR116From(v_dt);


OperationParameter_c [] v_oparms = OperationParameter_c.getManyO_TPARMsOnR117(this);


OperationParameter_c  v_oparm = null;
for ( int i37069 = 0; i37069 < v_oparms.length; i37069++)
{
  v_oparm = v_oparms[i37069] ;

if (v_oparm != null) {
v_oparm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Body_c v_body = Body_c.getOneACT_ACTOnR698(OperationBody_c.getOneACT_OPBOnR696(this));


if ( (  (v_body != null)) )
{

if (v_body != null) {
v_body.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

OperationInvocation_c [] v_invs = OperationInvocation_c.getManyACT_TFMsOnR673(this);


OperationInvocation_c  v_inv = null;
for ( int i37070 = 0; i37070 < v_invs.length; i37070++)
{
  v_inv = v_invs[i37070] ;

this.unrelateAcrossR673From(v_inv);



}

OperationValue_c [] v_oprVals = OperationValue_c.getManyV_TRVsOnR829(this);


OperationValue_c  v_oprVal = null;
for ( int i37071 = 0; i37071 < v_oprVals.length; i37071++)
{
  v_oprVal = v_oprVals[i37071] ;

this.unrelateAcrossR829From(v_oprVal);



}

OperationMessage_c [] v_oms = OperationMessage_c.getManyMSG_OsOnR1011(this);


OperationMessage_c  v_om = null;
for ( int i37072 = 0; i37072 < v_oms.length; i37072++)
{
  v_om = v_oms[i37072] ;

SynchronousMessage_c v_message = SynchronousMessage_c.getOneMSG_SMOnR1020(v_om);


if (v_message != null) {
v_message.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR122(this);


Dimensions_c  v_dim = null;
for ( int i37073 = 0; i37073 < v_dims.length; i37073++)
{
  v_dim = v_dims[i37073] ;

this.unrelateAcrossR122From(v_dim);


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR115(this);


if (v_clazz != null) {
v_clazz.Addoperationtoordering(			    
getTfr_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Domain_c v_dom = Domain_c.DomainInstance(modelRoot) ;


  class DataType_test37469_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals("void") ;
	}
  }
DataType_c v_def_dt = DataType_c.getOneS_DTOnR14(v_dom, new DataType_test37469_c());


if (   (v_dom != null) )
{

if ( (  (v_def_dt == null)) )
{

if ( (v_dom.Participatesinsystem()) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_dom))));


java.util.UUID         v_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_dt_id = v_system.Getcoretypeid(			    
"void") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_dt_id);


v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

else
{

User_c.Logerror(			    
"Unable to locate expected data type: void"			    
,"" ) ;



}


}


}

else
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR115(this))));


if (   (v_system != null) )
{

java.util.UUID         v_dt_id = v_system.Getcoretypeid(			    
"void") ;


PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_dt_id);


v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

else
{

User_c.Logerror(			    
"Unable to locate system root for data type: void"			    
,"" ) ;



}


}

  this.relateAcrossR116To(v_def_dt);


String       v_name = Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Operation"			    
,Converttoinstance()) ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setName( v_success) ;



}

else
{

Dispose() ;



}

setInstance_based( Scope_c.Instance) ;


setSuc_pars( Parsestatus_c.parseInitial) ;



   } // End initialize
  public  void Newparameter()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Newparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
OperationParameter_c v_parm = new OperationParameter_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_parm));


  this.relateAcrossR117To(v_parm);


if (v_parm != null) {
v_parm.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Createparameterininteractions(			    
v_parm.getTparm_id() ) ;



   } // End newParameter
  public  boolean      Isallowedreturntype(final String       p_Typename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Isallowedreturntype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR115(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

if ( Getreturndimensionscnt() != 0 && p_Typename.equals("void") )
{

return false;



}

else
{

return v_packageableElem.Isallowedtype(			    
true			    
,p_Typename);



}


}

else
{

if ( Getreturndimensionscnt() != 0 && p_Typename.equals("void") )
{

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(ModelClass_c.getOneO_OBJOnR115(this)));


if ( (  (v_domain != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(v_domain);


if ( (  (v_system != null)) )
{

return DataType_c.Isallowedreturntype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename);



}

else
{

boolean      v_result = DataType_c.Isallowedreturntype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename) ;


if ( (  !v_result) )
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


return Util_c.Isallowedreturntype(			    
v_system.Converttoinstance()			    
,p_Typename);



}

else
{

return v_result;



}


}


}

else
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR115(this))));


if (   (v_system != null) )
{

return Util_c.Isallowedreturntype(			    
v_system.Converttoinstance()			    
,p_Typename);



}

else
{

User_c.Logerror(			    
"Unable to locate system root for data type check."			    
,"" ) ;


return false;



}


}


}


}


   } // End isAllowedReturnType
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getTfr_id();



   } // End get_ooa_id
  public  void Resolvedatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Resolvedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dtProxy = DataType_c.getOneS_DTOnR116(this);


if ( (  (v_dtProxy != null) &&   !Util_c.Isproxy(			    
Converttoinstance())) )
{

String       v_name = v_dtProxy.getName() ;


if (v_dtProxy != null) {
v_dtProxy.unrelateAcrossR116From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR115(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPkg =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPkg) )
{

java.util.UUID         v_id = v_packageableElem.Resolvedatatyperelativetoself(			    
"void"			    
,v_name) ;


  class DataType_test37470_c implements ClassQueryInterface_c
  {
	DataType_test37470_c( java.util.UUID         p37471 ) {
		m_p37471 = p37471;
	}
	private java.util.UUID         m_p37471;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p37471) ;
	}
  }
DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_package)), new DataType_test37470_c(v_id));


if ( (  (v_resolvedDT == null)) )
{

  class DataType_test37472_c implements ClassQueryInterface_c
  {
	DataType_test37472_c( java.util.UUID         p37473 ) {
		m_p37473 = p37473;
	}
	private java.util.UUID         m_p37473;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p37473) ;
	}
  }
DataType_c v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_component)), new DataType_test37472_c(v_id));



}

if ( (  (v_resolvedDT != null)) )
{

if (v_resolvedDT != null) {
  v_resolvedDT.relateAcrossR116To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(ModelClass_c.getOneO_OBJOnR115(this)));


java.util.UUID         v_id = v_domain.Resolvedatatyperelativetoself(			    
"void"			    
,v_name) ;


  class DataType_test37474_c implements ClassQueryInterface_c
  {
	DataType_test37474_c( java.util.UUID         p37475 ) {
		m_p37475 = p37475;
	}
	private java.util.UUID         m_p37475;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p37475)) ;
	}
  }
DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test37474_c(v_id));


if ( (  (v_resolvedDT == null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test37476_c implements ClassQueryInterface_c
  {
	DataType_test37476_c( java.util.UUID         p37477 ) {
		m_p37477 = p37477;
	}
	private java.util.UUID         m_p37477;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p37477)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test37476_c(v_id));


if (   (v_resolvedDT == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class DataType_test37478_c implements ClassQueryInterface_c
  {
	DataType_test37478_c( java.util.UUID         p37479 ) {
		m_p37479 = p37479;
	}
	private java.util.UUID         m_p37479;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p37479)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system)), new DataType_test37478_c(v_id));



}


}

if ( (  (v_resolvedDT != null)) )
{

if (v_resolvedDT != null) {
  v_resolvedDT.relateAcrossR116To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End resolveDatatype
  public  boolean      Isvoid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Isvoid") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR116(this);


return v_dt.getName().equals("void");



   } // End isVoid
  public  int          Getreturndimensionscnt()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Getreturndimensionscnt") ; 
               final ModelRoot modelRoot = getModelRoot();
Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR122(this);


int          v_dimensions =   (v_dims.length) ;


return v_dimensions;



   } // End getReturnDimensionsCnt
  public  void Resizereturn_dimensions(final int          p_Dimension,final int          p_Elementcount,final int          p_Numdimensions)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Resizereturn_dimensions") ; 
               final ModelRoot modelRoot = getModelRoot();
while ( (p_Numdimensions > Getreturndimensionscnt()) )
{

Dimensions_c v_dim = new Dimensions_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dim));


if (v_dim != null) {
  v_dim.setDimensioncount( Getreturndimensionscnt()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dim != null) {
  v_dim.relateAcrossR122To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

while ( (p_Numdimensions < Getreturndimensionscnt()) )
{

  class Dimensions_test37480_c implements ClassQueryInterface_c
  {
	Dimensions_test37480_c( int          p37481 ) {
		m_p37481 = p37481;
	}
	private int          m_p37481;
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == (m_p37481 - 1)) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR122(this, new Dimensions_test37480_c(Getreturndimensionscnt()));


if (v_dim != null) {
v_dim.unrelateAcrossR122From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( (p_Numdimensions > 0) )
{

  class Dimensions_test37482_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == p_Dimension) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR122(this, new Dimensions_test37482_c());


if ( (v_dim.getElementcount() != p_Elementcount) )
{

if (v_dim != null) {
  v_dim.setElementcount( p_Elementcount) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


   } // End resizeReturn_Dimensions
  public  void Moveup()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Moveup") ; 
               final ModelRoot modelRoot = getModelRoot();
Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


Operation_c v_prev_attr = Operation_c.getOneO_TFROnR125Succeeds(this);


Operation_c v_prev_prev_attr = Operation_c.getOneO_TFROnR125Succeeds(v_prev_attr);


Operation_c v_next_attr = Operation_c.getOneO_TFROnR125Precedes(this);


if ( (  (v_prev_prev_attr != null)) )
{

if (v_prev_attr != null) {
v_prev_attr.unrelateAcrossR125FromSucceeds(v_prev_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (  (v_next_attr != null)) )
{

if (v_next_attr != null) {
v_next_attr.unrelateAcrossR125FromSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

this.unrelateAcrossR125FromSucceeds(v_prev_attr);


if ( (  (v_prev_prev_attr != null)) )
{

  this.relateAcrossR125ToSucceeds(v_prev_prev_attr);



}

if ( (  (v_next_attr == null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}

if (v_prev_attr != null) {
  v_prev_attr.relateAcrossR125ToSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (  (v_next_attr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;


if (v_next_attr != null) {
  v_next_attr.relateAcrossR125ToSucceeds(v_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End moveUp
  public  void Movedown()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Movedown") ; 
               final ModelRoot modelRoot = getModelRoot();
Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


Operation_c v_next_attr = Operation_c.getOneO_TFROnR125Precedes(this);


Operation_c v_prev_attr = Operation_c.getOneO_TFROnR125Succeeds(this);


Operation_c v_next_next_attr = Operation_c.getOneO_TFROnR125Precedes(v_next_attr);


if ( (  (v_next_next_attr != null)) )
{

if (v_next_next_attr != null) {
v_next_next_attr.unrelateAcrossR125FromSucceeds(v_next_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (  (v_prev_attr != null)) )
{

this.unrelateAcrossR125FromSucceeds(v_prev_attr);



}

if (v_next_attr != null) {
v_next_attr.unrelateAcrossR125FromSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if ( (  (v_prev_attr != null)) )
{

if (v_next_attr != null) {
  v_next_attr.relateAcrossR125ToSucceeds(v_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if ( (  (v_next_next_attr == null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}

  this.relateAcrossR125ToSucceeds(v_next_attr);


if ( (  (v_next_next_attr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;


if (v_next_next_attr != null) {
  v_next_next_attr.relateAcrossR125ToSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End moveDown
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("can")) )
{

if ( (p_Value.equals("move up")) )
{

Operation_c v_prev_attr = Operation_c.getOneO_TFROnR125Succeeds(this);


return   (v_prev_attr != null);



}

else if ( (p_Value.equals("move down")) )
{

Operation_c v_next_attr = Operation_c.getOneO_TFROnR125Precedes(this);


return   (v_next_attr != null);



}


}

return false;



   } // End actionFilter
  public  void Initializeorder()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Initializeorder") ; 
               final ModelRoot modelRoot = getModelRoot();
OperationParameter_c [] v_peers = OperationParameter_c.getManyO_TPARMsOnR117(this);


if ( (  (v_peers.length) > 1) )
{

boolean      v_initialOrderingCheckPerformed = false ;


  class OperationParameter_test37483_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		OperationParameter_c selected = (OperationParameter_c)candidate;
		return (selected.getTfr_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
OperationParameter_c v_head = OperationParameter_c.getOneO_TPARMOnR117(this, new OperationParameter_test37483_c());


OperationParameter_c v_endOfList = v_head ;


int          v_loopCnt = 0 ;


OperationParameter_c  v_peer = null;
for ( int i37074 = 0; i37074 < v_peers.length; i37074++)
{
  v_peer = v_peers[i37074] ;

if ( (  !v_initialOrderingCheckPerformed) )
{

OperationParameter_c v_predecessor = OperationParameter_c.getOneO_TPARMOnR124Precedes(v_peer);


OperationParameter_c v_successor = OperationParameter_c.getOneO_TPARMOnR124Succeeds(v_peer);


v_initialOrderingCheckPerformed = true ;


if ( (  (v_predecessor != null) ||   (v_successor != null)) )
{

break;



}

v_head = v_peer ;


v_endOfList = v_peer ;



}

if ( (v_loopCnt == 1) )
{

if ( (v_peer.getName().compareTo(v_head.getName()) < 0) )
{

if (v_peer != null) {
  v_peer.relateAcrossR124ToPrecedes(v_head);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if (v_head != null) {
  v_head.relateAcrossR124ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}


}

else if ( (v_loopCnt > 1) )
{

OperationParameter_c v_insertPoint = v_head ;


OperationParameter_c v_next = OperationParameter_c.getOneO_TPARMOnR124Succeeds(v_head);


while ( (  (v_next != null)) )
{

if ( (v_next.getName().compareTo(v_peer.getName()) < 0) )
{

break;



}

else
{

v_insertPoint = v_next ;


v_next = OperationParameter_c.getOneO_TPARMOnR124Succeeds(v_next);



}


}

if ( (  (v_next == null)) )
{

if (v_peer != null) {
  v_peer.relateAcrossR124ToPrecedes(v_endOfList);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if ( ((v_insertPoint == v_head) && (v_peer.getName().compareTo(v_head.getName()) > 0)) )
{

if (v_head != null) {
  v_head.relateAcrossR124ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}

else
{

if (v_next != null) {
v_next.unrelateAcrossR124FromPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_peer != null) {
  v_peer.relateAcrossR124ToPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_next != null) {
  v_next.relateAcrossR124ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

v_loopCnt = v_loopCnt + 1 ;



}


}


   } // End initializeOrder
  public  boolean      Canrefertodatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Canrefertodatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR116(this);


if ( (  (v_dt != null)) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR115(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

return v_packageableElem.Canrefertodatatype(			    
v_dt.getDt_id()			    
,v_dt.getName());



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(ModelClass_c.getOneO_OBJOnR115(this)));


DataTypePackage_c v_dtPkg = DataTypePackage_c.getOneS_DPKOnR39(DataTypeInPackage_c.getOneS_DIPOnR39(v_dt));


if ( (  !v_dtPkg.Isdomainlevel()) )
{

if ( (v_domain.Participatesinsystem()) )
{

return true;



}

else
{

return false;



}


}

else
{

Domain_c v_dtDomain = Domain_c.getOneS_DOMOnR14(v_dt);


if ( (v_dtDomain == v_domain) )
{

return true;



}


}


}


}

return false;



   } // End canReferToDataType
  public  boolean      Isreferringtodefaultdatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Isreferringtodefaultdatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR116(this);


String       v_elementType = Util_c.Getsimpleclassname(			    
Converttoinstance()) ;


if ( (v_dt.getName().equals(DataType_c.Getdefaultdatatypename(modelRoot			    
,v_elementType))) )
{

return true;



}

return false;



   } // End isReferringToDefaultDataType
  public  java.util.UUID         Getcontainingcomponentid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Getcontainingcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR115(this);


return v_clazz.Getcontainingcomponentid();



   } // End getContainingComponentId
  public  boolean      Canusedatatype(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Canusedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR115(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

  class SearchResultSet_test37484_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37484_c());


  class DataType_test37485_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet)), new DataType_test37485_c());


if (   (v_component != null) )
{

  class ComponentResultSet_test37486_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37486_c());


  class DataType_test37487_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet)), new DataType_test37487_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(ModelClass_c.getOneO_OBJOnR115(this)));


if (   (v_domain != null) )
{

if ( (v_domain.Participatesinsystem()) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test37488_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test37488_c());


if (   (v_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class DataType_test37489_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system)), new DataType_test37489_c());



}

if ( (  (v_dt == null)) )
{

  class DataType_test37490_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test37490_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}


}

else
{

  class DataType_test37491_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test37491_c());


if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}


}


}

else
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR115(this))));


  class DataType_test37492_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test37492_c());


if (   (v_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class DataType_test37493_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system)), new DataType_test37493_c());



}

if (   (v_dt != null) )
{

if ( Isallowedreturntype(			    
v_dt.getName()) )
{

return true;



}


}


}

return false;



}


   } // End canUseDataType
  public  java.util.UUID         Getcontainerid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Getcontainerid") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR115(this);


return v_clazz.Getcontainerid();



   } // End getContainerId
  public  void Pasteoperationparameter(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Pasteoperationparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
OperationParameter_c v_opParm = (OperationParameter_c) modelRoot.getInstanceList(OperationParameter_c.class).getGlobal(null, p_Id);


if ( (  (v_opParm != null)) )
{

Operation_c v_existingOperation = Operation_c.getOneO_TFROnR117(v_opParm);


if ( (  (v_existingOperation != null)) )
{

if (v_existingOperation != null) {
v_existingOperation.unrelateAcrossR117From(v_opParm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_opParm != null) {
  v_opParm.relateAcrossR117To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Addparametertoordering(			    
v_opParm.getTparm_id() ) ;


if (v_opParm != null) {
  v_opParm.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_opParm.Converttoinstance()			    
,v_opParm.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Createparameterininteractions(			    
v_opParm.getTparm_id() ) ;



}


   } // End pasteOperationParameter
  public  void Createparameterininteractions(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Createparameterininteractions") ; 
               final ModelRoot modelRoot = getModelRoot();
OperationParameter_c v_parm = (OperationParameter_c) modelRoot.getInstanceList(OperationParameter_c.class).getGlobal(null, p_Id);


Message_c [] v_messages = Message_c.getManyMSG_MsOnR1018(SynchronousMessage_c.getManyMSG_SMsOnR1020(OperationMessage_c.getManyMSG_OsOnR1011(this)));


Message_c  v_message = null;
for ( int i37075 = 0; i37075 < v_messages.length; i37075++)
{
  v_message = v_messages[i37075] ;

MessageArgument_c v_arg = new MessageArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_arg));


OperationArgument_c v_oa = new OperationArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_oa));


if (v_oa != null) {
  v_oa.relateAcrossR1015To(v_parm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_oa != null) {
  v_oa.relateAcrossR1013To(v_arg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_message != null) {
  v_message.relateAcrossR1001To(v_arg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End createParameterInInteractions
  public  void Addparametertoordering(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Addparametertoordering") ; 
               final ModelRoot modelRoot = getModelRoot();
OperationParameter_c v_parameter = (OperationParameter_c) modelRoot.getInstanceList(OperationParameter_c.class).getGlobal(null, p_Id);


if ( (  (v_parameter != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


OperationParameter_c [] v_peers = OperationParameter_c.getManyO_TPARMsOnR117(this);


OperationParameter_c  v_peer = null;
for ( int i37076 = 0; i37076 < v_peers.length; i37076++)
{
  v_peer = v_peers[i37076] ;

if ( (v_peer != v_parameter) )
{

OperationParameter_c v_predecessor = OperationParameter_c.getOneO_TPARMOnR124Precedes(v_peer);


if ( (  (v_predecessor == null)) )
{

if (v_parameter != null) {
  v_parameter.relateAcrossR124ToSucceeds(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}


   } // End addParameterToOrdering
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR115(this)));


Operation_c [] v_operations = Operation_c.getManyO_TFRsOnR115(ModelClass_c.getManyO_OBJsOnR115(this));


Operation_c  v_operation = null;
for ( int i37077 = 0; i37077 < v_operations.length; i37077++)
{
  v_operation = v_operations[i37077] ;

if ( (v_operation != this && v_operation.Getsignature().equals(Getsignature())) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

ModelClass_c v_class = ModelClass_c.getOneO_OBJOnR115(this);


IntegrityManager_c.Createissue(modelRoot			    
,"Found another operation under the same class " + "with a matching signature." + Gd_c.Newline() + Gd_c.Newline() + "Signature: " + Getsignature()			    
,Converttoinstance()			    
,getTfr_id()			    
,getName()			    
,v_class.Getpath(			    
true			    
,getName())			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity
  public  String       Getsignature()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Operation", " Operation entered: Operation::Getsignature") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_signature = getName() ;


int          v_count = 0 ;


OperationParameter_c [] v_parameters = OperationParameter_c.getManyO_TPARMsOnR117(this);


int          v_paramLength =   (v_parameters.length) ;


if ( (v_paramLength > 0) )
{

v_signature = v_signature + "(" ;



}

OperationParameter_c  v_parameter = null;
for ( int i37078 = 0; i37078 < v_parameters.length; i37078++)
{
  v_parameter = v_parameters[i37078] ;

DataType_c v_type = DataType_c.getOneS_DTOnR118(v_parameter);


if ( (v_count > 0 && v_count != v_paramLength - 1) )
{

v_signature = v_signature + ", " ;



}

v_signature = v_signature + v_type.getName() ;


v_count = v_count + 1 ;



}

if ( (v_paramLength > 0) )
{

v_signature = v_signature + ")" ;



}

return v_signature;



   } // End getSignature

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return OperationActionFilter.getSingleton();
    }
	  return null;
  }
} // end Operation
