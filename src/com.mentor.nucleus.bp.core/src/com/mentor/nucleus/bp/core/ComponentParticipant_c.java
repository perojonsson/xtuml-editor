package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ComponentParticipant_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_COMPONENT_PARTICIPANT extends genericEvent_c {
	public abstract int getEvtcode();
}

public class ComponentParticipant_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public ComponentParticipant_c(ModelRoot modelRoot,
			java.util.UUID p_m_part_id, java.util.UUID p_m_component_id,
			String p_m_label, String p_m_informalcomponentname,
			String p_m_descrip, boolean p_m_isformal) {
		super(modelRoot);
		m_informalcomponentname = p_m_informalcomponentname;
		m_label = p_m_label;
		m_descrip = p_m_descrip;
		m_isformal = p_m_isformal;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_component_id = IdAssigner.preprocessUUID(p_m_component_id);

		Object[] key = {m_part_id};
		addInstanceToMap(key);
	}
	static public ComponentParticipant_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_part_id, java.util.UUID p_m_component_id,
			String p_m_label, String p_m_informalcomponentname,
			String p_m_descrip, boolean p_m_isformal, String p_contentPath,
			IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(ComponentParticipant_c.class);
		ComponentParticipant_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_part_id};
			new_inst = (ComponentParticipant_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				new_inst.m_informalcomponentname = p_m_informalcomponentname;
				new_inst.m_label = p_m_label;
				new_inst.m_descrip = p_m_descrip;
				new_inst.m_isformal = p_m_isformal;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_component_id = IdAssigner
						.preprocessUUID(p_m_component_id);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new ComponentParticipant_c(modelRoot, p_m_part_id,
					p_m_component_id, p_m_label, p_m_informalcomponentname,
					p_m_descrip, p_m_isformal);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public ComponentParticipant_c resolveInstance(ModelRoot modelRoot,
			java.util.UUID p_m_part_id, java.util.UUID p_m_component_id,
			String p_m_label, String p_m_informalcomponentname,
			String p_m_descrip, boolean p_m_isformal) {
		InstanceList instances = modelRoot
				.getInstanceList(ComponentParticipant_c.class);
		ComponentParticipant_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_part_id};
			source = (ComponentParticipant_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				source.m_informalcomponentname = p_m_informalcomponentname;
				source.m_label = p_m_label;
				source.m_descrip = p_m_descrip;
				source.m_isformal = p_m_isformal;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_component_id = IdAssigner
						.preprocessUUID(p_m_component_id);

				return source;
			}
		}
		// there is no instance matching the id
		ComponentParticipant_c new_inst = new ComponentParticipant_c(modelRoot,
				p_m_part_id, p_m_component_id, p_m_label,
				p_m_informalcomponentname, p_m_descrip, p_m_isformal);
		return new_inst;
	}
	public ComponentParticipant_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_informalcomponentname = "";
		m_label = "";
		m_descrip = "";
		m_part_id = IdAssigner.NULL_UUID;
		m_component_id = IdAssigner.NULL_UUID;
		Object[] key = {m_part_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_part_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p4
		// round p5
		if (m_part_id != p_newKey) {

			m_part_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof ComponentParticipant_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof ComponentParticipant_c)) {
			return false;
		}

		ComponentParticipant_c me = (ComponentParticipant_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getPart_id()) || IdAssigner.NULL_UUID
						.equals(((ComponentParticipant_c) elem).getPart_id())) && this != elem)) {
			return false;
		}
		if (!getPart_id().equals(((ComponentParticipant_c) elem).getPart_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof ComponentParticipant_c)) {
			return false;
		}

		ComponentParticipant_c me = (ComponentParticipant_c) elem;
		if (!getPart_idCachedValue().equals(
				((ComponentParticipant_c) elem).getPart_idCachedValue()))
			return false;
		return true;
	}

	// Attributes
	private String m_informalcomponentname;
	private String m_label;
	private String m_descrip;
	private boolean m_isformal;
	private java.util.UUID m_part_id;
	private java.util.UUID m_component_id;

	// declare association references from this class

	// referring navigation

	InteractionParticipant_c IsSupertypeInteractionParticipant;
	public void relateAcrossR930To(InteractionParticipant_c target) {
		relateAcrossR930To(target, true);
	}
	public void relateAcrossR930To(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsSupertypeInteractionParticipant)
			return; // already related

		if (IsSupertypeInteractionParticipant != target) {

			Object oldKey = getInstanceKey();

			if (IsSupertypeInteractionParticipant != null) {

				IsSupertypeInteractionParticipant.clearBackPointerR930To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"ComponentParticipant_c.relateAcrossR930To(InteractionParticipant_c target)",
									"Relate performed across R930 from Component Participant to Interaction Participant without unrelate of prior instance.");
				}
			}

			IsSupertypeInteractionParticipant = target;
			if (IdAssigner.NULL_UUID.equals(target.getPart_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_part_id = target.getPart_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR930To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "930", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR930From(InteractionParticipant_c target) {
		unrelateAcrossR930From(target, true);
	}
	public void unrelateAcrossR930From(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (IsSupertypeInteractionParticipant == null)
			return; // already unrelated

		if (target != IsSupertypeInteractionParticipant) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R930",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR930To(this);
		}

		if (IsSupertypeInteractionParticipant != null) {

			m_part_id = IsSupertypeInteractionParticipant.getPart_id();
			if (IdAssigner.NULL_UUID.equals(m_part_id)) {
				m_part_id = IsSupertypeInteractionParticipant
						.getPart_idCachedValue();
			}
			IsSupertypeInteractionParticipant = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "930", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static ComponentParticipant_c getOneSQ_COPOnR930(
			InteractionParticipant_c[] targets) {
		return getOneSQ_COPOnR930(targets, null);
	}

	public static ComponentParticipant_c getOneSQ_COPOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		ComponentParticipant_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneSQ_COPOnR930(targets[i], test);
			}
		}

		return ret_val;
	}

	public static ComponentParticipant_c getOneSQ_COPOnR930(
			InteractionParticipant_c target) {
		return getOneSQ_COPOnR930(target, null);
	}

	public static ComponentParticipant_c getOneSQ_COPOnR930(
			InteractionParticipant_c target, boolean loadComponent) {
		return getOneSQ_COPOnR930(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static ComponentParticipant_c getOneSQ_COPOnR930(
			InteractionParticipant_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneSQ_COPOnR930(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static ComponentParticipant_c getOneSQ_COPOnR930(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		return getOneSQ_COPOnR930(modelRoot, target, test, true);
	}

	public static ComponentParticipant_c getOneSQ_COPOnR930(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneSQ_COPOnR930(modelRoot, target, test);
	}
	private static ComponentParticipant_c find_getOneSQ_COPOnR930(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			ComponentParticipant_c source = (ComponentParticipant_c) target.backPointer_IsSubtypeComponentParticipantIsSubtype_R930;
			if (source != null && (test == null || test.evaluate(source))) {
				return source;
			}
		}
		// not found
		return null;
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR930(
			InteractionParticipant_c[] targets) {
		return getManySQ_COPsOnR930(targets, null);
	}
	public static ComponentParticipant_c[] getManySQ_COPsOnR930(
			InteractionParticipant_c[] targets, boolean loadComponent) {
		return getManySQ_COPsOnR930(targets, null, loadComponent);
	}
	public static ComponentParticipant_c[] getManySQ_COPsOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		return getManySQ_COPsOnR930(targets, test, true);
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new ComponentParticipant_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(ComponentParticipant_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			ComponentParticipant_c source = (ComponentParticipant_c) targets[i].backPointer_IsSubtypeComponentParticipantIsSubtype_R930;
			if (source != null && (test == null || test.evaluate(source))) {
				matches.add(source);
			}
		}
		if (matches.size() > 0) {
			ComponentParticipant_c[] ret_set = new ComponentParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new ComponentParticipant_c[0];
		}
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR930(
			InteractionParticipant_c target) {
		if (target != null) {
			InteractionParticipant_c[] targetArray = new InteractionParticipant_c[1];
			targetArray[0] = target;
			return getManySQ_COPsOnR930(targetArray);
		} else {
			ComponentParticipant_c[] result = new ComponentParticipant_c[0];
			return result;
		}
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR930(
			InteractionParticipant_c target, boolean loadComponent) {
		if (target != null) {
			InteractionParticipant_c[] targetArray = new InteractionParticipant_c[1];
			targetArray[0] = target;
			return getManySQ_COPsOnR930(targetArray, loadComponent);
		} else {
			ComponentParticipant_c[] result = new ComponentParticipant_c[0];
			return result;
		}
	}

	// referring navigation

	Component_c RepresentsComponent;
	public void relateAcrossR955To(Component_c target) {
		relateAcrossR955To(target, true);
	}
	public void relateAcrossR955To(Component_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (target == RepresentsComponent)
			return; // already related

		if (RepresentsComponent != target) {

			Object oldKey = getInstanceKey();

			if (RepresentsComponent != null) {
				UmlProblem.removeXtUMLProblem(this, RepresentsComponent);

				RepresentsComponent.clearBackPointerR955To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"ComponentParticipant_c.relateAcrossR955To(Component_c target)",
									"Relate performed across R955 from Component Participant to Component without unrelate of prior instance.");
				}
			}

			RepresentsComponent = target;
			if (IdAssigner.NULL_UUID.equals(target.getId())) {
				// do not update cached value
			} else {
				// update cached value
				m_component_id = target.getIdCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR955To(this);
			target.addRef();
			UmlProblem.handleDanglingReference(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "955", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR955From(Component_c target) {
		unrelateAcrossR955From(target, true);
	}
	public void unrelateAcrossR955From(Component_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (RepresentsComponent == null)
			return; // already unrelated

		if (target != RepresentsComponent) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R955",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR955To(this);
		}

		if (RepresentsComponent != null) {

			m_component_id = RepresentsComponent.getId();
			if (IdAssigner.NULL_UUID.equals(m_component_id)) {
				m_component_id = RepresentsComponent.getIdCachedValue();
			}
			RepresentsComponent = null;
			target.removeRef();
			UmlProblem.removeXtUMLProblem(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "955", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static ComponentParticipant_c getOneSQ_COPOnR955(
			Component_c[] targets) {
		return getOneSQ_COPOnR955(targets, null);
	}

	public static ComponentParticipant_c getOneSQ_COPOnR955(
			Component_c[] targets, ClassQueryInterface_c test) {
		ComponentParticipant_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneSQ_COPOnR955(targets[i], test);
			}
		}

		return ret_val;
	}

	public static ComponentParticipant_c getOneSQ_COPOnR955(Component_c target) {
		return getOneSQ_COPOnR955(target, null);
	}

	public static ComponentParticipant_c getOneSQ_COPOnR955(Component_c target,
			boolean loadComponent) {
		return getOneSQ_COPOnR955(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static ComponentParticipant_c getOneSQ_COPOnR955(Component_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			return getOneSQ_COPOnR955(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static ComponentParticipant_c getOneSQ_COPOnR955(
			ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test) {
		return getOneSQ_COPOnR955(modelRoot, target, test, true);
	}

	public static ComponentParticipant_c getOneSQ_COPOnR955(
			ModelRoot modelRoot, Component_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		ComponentParticipant_c result = null;

		result = find_getOneSQ_COPOnR955(modelRoot, target, test);
		if (result == null && (loadComponent)) {
			// not a Containment Relation
			List comps = PersistenceManager.findAllComponents(modelRoot,
					ComponentParticipant_c.class);
			for (int i = 0; i < comps.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) comps
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = find_getOneSQ_COPOnR955(modelRoot, target,
								test);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}

		return result;
	}
	private static ComponentParticipant_c find_getOneSQ_COPOnR955(
			ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_ComponentParticipant_R955) {
				for (int i = 0; i < target.backPointer_ComponentParticipant_R955
						.size(); ++i) {
					ComponentParticipant_c source = (ComponentParticipant_c) target.backPointer_ComponentParticipant_R955
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR955(
			Component_c[] targets) {
		return getManySQ_COPsOnR955(targets, null);
	}
	public static ComponentParticipant_c[] getManySQ_COPsOnR955(
			Component_c[] targets, boolean loadComponent) {
		return getManySQ_COPsOnR955(targets, null, loadComponent);
	}
	public static ComponentParticipant_c[] getManySQ_COPsOnR955(
			Component_c[] targets, ClassQueryInterface_c test) {
		return getManySQ_COPsOnR955(targets, test, true);
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR955(
			Component_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new ComponentParticipant_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					ComponentParticipant_c.class);

		}

		InstanceList instances = modelRoot
				.getInstanceList(ComponentParticipant_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_ComponentParticipant_R955) {
				for (int j = 0; j < targets[i].backPointer_ComponentParticipant_R955
						.size(); ++j) {
					ComponentParticipant_c source = (ComponentParticipant_c) targets[i].backPointer_ComponentParticipant_R955
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			ComponentParticipant_c[] ret_set = new ComponentParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new ComponentParticipant_c[0];
		}
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR955(
			Component_c target) {
		return getManySQ_COPsOnR955(target, null);
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR955(
			Component_c target, boolean loadComponent) {
		return getManySQ_COPsOnR955(target, null, loadComponent);
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR955(
			Component_c target, ClassQueryInterface_c test) {
		return getManySQ_COPsOnR955(target, test, true);
	}

	public static ComponentParticipant_c[] getManySQ_COPsOnR955(
			Component_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new ComponentParticipant_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					ComponentParticipant_c.class);
		}
		Vector matches = new Vector();
		synchronized (target.backPointer_ComponentParticipant_R955) {
			for (int i = 0; i < target.backPointer_ComponentParticipant_R955
					.size(); ++i) {
				ComponentParticipant_c source = (ComponentParticipant_c) target.backPointer_ComponentParticipant_R955
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			ComponentParticipant_c[] ret_set = new ComponentParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new ComponentParticipant_c[0];
		}
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies,
			boolean notifyChanges, boolean searchAllRoots) {
		InstanceList instances = null;
		ModelRoot baseRoot = modelRoot;

		// R930
		InteractionParticipant_c relInst40617 = (InteractionParticipant_c) baseRoot
				.getInstanceList(InteractionParticipant_c.class).get(
						new Object[]{m_part_id});
		// if there was no local element, check for any global elements
		// failing that proceed to check other model roots
		if (relInst40617 == null) {
			relInst40617 = (InteractionParticipant_c) Ooaofooa
					.getDefaultInstance()
					.getInstanceList(InteractionParticipant_c.class)
					.get(new Object[]{m_part_id});
		}
		if (relInst40617 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
			Ooaofooa[] roots = Ooaofooa.getInstances();
			for (int i = 0; i < roots.length; i++) {
				if (roots[i].isCompareRoot()) {
					// never use elements from any compare root
					continue;
				}
				relInst40617 = (InteractionParticipant_c) roots[i]
						.getInstanceList(InteractionParticipant_c.class).get(
								new Object[]{m_part_id});
				if (relInst40617 != null)
					break;
			}
		}
		//synchronized
		if (relInst40617 != null) {
			if (relateProxies || !isProxy()
					|| (inSameComponent(this, relInst40617) && !isProxy())) {
				relInst40617.relateAcrossR930To(this, notifyChanges);
			}
		}

		if (RepresentsComponent == null) {
			// R955
			Component_c relInst40618 = (Component_c) baseRoot.getInstanceList(
					Component_c.class).get(new Object[]{m_component_id});
			// if there was no local element, check for any global elements
			// failing that proceed to check other model roots
			if (relInst40618 == null) {
				relInst40618 = (Component_c) Ooaofooa.getDefaultInstance()
						.getInstanceList(Component_c.class)
						.get(new Object[]{m_component_id});
			}
			if (relInst40618 == null && searchAllRoots
					&& !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
					if (roots[i].isCompareRoot()) {
						// never use elements from any compare root
						continue;
					}
					relInst40618 = (Component_c) roots[i].getInstanceList(
							Component_c.class)
							.get(new Object[]{m_component_id});
					if (relInst40618 != null)
						break;
				}
			}
			//synchronized
			if (relInst40618 != null) {
				if (relateProxies || !isProxy()
						|| (inSameComponent(this, relInst40618) && !isProxy())) {
					relInst40618.relateAcrossR955To(this, notifyChanges);
				}
			}
		}

	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R930
		// SQ_P
		inst = IsSupertypeInteractionParticipant;
		unrelateAcrossR930From(IsSupertypeInteractionParticipant, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R955
		// C_C
		inst = RepresentsComponent;
		unrelateAcrossR955From(RepresentsComponent, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ComponentParticipant_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ComponentParticipant_c inst = (ComponentParticipant_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(ComponentParticipant_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static ComponentParticipant_c ComponentParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		ComponentParticipant_c result = findComponentParticipantInstance(
				modelRoot, test, loadComponent);
		if (result == null && loadComponent) {
			List pmcs = PersistenceManager.findAllComponents(modelRoot,
					ComponentParticipant_c.class);
			for (int i = 0; i < pmcs.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) pmcs
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = findComponentParticipantInstance(modelRoot,
								test, loadComponent);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}
		if (result != null && loadComponent) {
			result.loadProxy();
		}
		return result;
	}
	private static ComponentParticipant_c findComponentParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(ComponentParticipant_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				ComponentParticipant_c x = (ComponentParticipant_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						return x;
				}
			}
		}
		return null;
	}
	public static ComponentParticipant_c ComponentParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return ComponentParticipantInstance(modelRoot, test, true);
	}

	public static ComponentParticipant_c ComponentParticipantInstance(
			ModelRoot modelRoot) {
		return ComponentParticipantInstance(modelRoot, null, true);
	}

	public static ComponentParticipant_c[] ComponentParticipantInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (loadComponent) {
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					ComponentParticipant_c.class);
		}
		InstanceList instances = modelRoot
				.getInstanceList(ComponentParticipant_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				ComponentParticipant_c x = (ComponentParticipant_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						matches.add(x);
				}
			}
			if (matches.size() > 0) {
				ComponentParticipant_c[] ret_set = new ComponentParticipant_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ComponentParticipant_c[0];
			}
		}
	}
	public static ComponentParticipant_c[] ComponentParticipantInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return ComponentParticipantInstances(modelRoot, test, true);
	}
	public static ComponentParticipant_c[] ComponentParticipantInstances(
			ModelRoot modelRoot) {
		return ComponentParticipantInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Component Participant.dispose call: ";
		InteractionParticipant_c testR930Inst8 = InteractionParticipant_c
				.getOneSQ_POnR930(this, false);

		if (testR930Inst8 != null) {
			delete_error = true;
			errorMsg = errorMsg + "930 ";
		}
		Component_c testR955Inst = Component_c.getOneC_COnR955(this, false);

		if (testR955Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "955 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log.println(ILogger.DELETE, "Component Participant",
						errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("part_id")) {
			return true;
		}
		if (attributeName.equals("component_id")) {
			return true;
		}
		return false;
	}
	public String getCompUniqueID() {
		UUID tempID = null;
		long longID = 0L;
		StringBuffer result = new StringBuffer();

		tempID = getPart_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getPart_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		return result.toString();
	}
	// declare attribute accessors
	public String getInformalcomponentname() {
		return m_informalcomponentname;
	}

	public void setInformalcomponentname(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_informalcomponentname)) {
				return;
			}
		} else if (m_informalcomponentname != null) {
			if (m_informalcomponentname.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Informalcomponentname", m_informalcomponentname, newValue,
				true);
		m_informalcomponentname = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getLabel() {
		ModelRoot modelRoot = getModelRoot();
		Component_c v_component = Component_c.getOneC_COnR955(this);

		if (((v_component != null))) {

			if ((Util_c.Isproxy(v_component.Converttoinstance()))) {

				return Getcachedlabel();

			}

			else {

				String v_label = v_component.Getpath(true, "");

				Setcachedlabel(v_label);

				return v_label;

			}

		}

		else {

			return getInformalcomponentname();

		}

	}

	public String getDescrip() {
		return m_descrip;
	}

	public void setDescrip(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_descrip)) {
				return;
			}
		} else if (m_descrip != null) {
			if (m_descrip.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Descrip", m_descrip, newValue, true);
		m_descrip = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public boolean getIsformal() {
		ModelRoot modelRoot = getModelRoot();
		Component_c v_component = Component_c.getOneC_COnR955(this);

		if (((v_component != null))) {

			return true;

		}

		else {

			return false;

		}

	}

	public long getPart_idLongBased() {
		if (IsSupertypeInteractionParticipant != null) {
			return IsSupertypeInteractionParticipant.getPart_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getPart_id() {
		if (IsSupertypeInteractionParticipant != null) {
			return IsSupertypeInteractionParticipant.getPart_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public boolean hasSuperType() {
		return (IsSupertypeInteractionParticipant != null);

	}

	public java.util.UUID getPart_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_part_id))
			return m_part_id;
		else
			return getPart_id();
	}

	public void setPart_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_part_id)) {
				return;
			}
		} else if (m_part_id != null) {
			if (m_part_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Part_id", m_part_id, newValue, true);
		m_part_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getComponent_idLongBased() {
		if (RepresentsComponent != null) {
			return RepresentsComponent.getIdLongBased();
		}
		return 0;
	}
	public java.util.UUID getComponent_id() {
		if (RepresentsComponent != null) {
			return RepresentsComponent.getId();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getComponent_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_component_id))
			return m_component_id;
		else
			return getComponent_id();
	}

	public void setComponent_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_component_id)) {
				return;
			}
		} else if (m_component_id != null) {
			if (m_component_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Component_id", m_component_id, newValue, true);
		m_component_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant", //$NON-NLS-1$
						" Operation entered: Component Participant::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		ComponentParticipant_c[] objs = ComponentParticipant_c
				.ComponentParticipantInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant", //$NON-NLS-1$
				" Operation entered: Component Participant::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class ComponentParticipant_c_test40620_c
				implements
					ClassQueryInterface_c {
			ComponentParticipant_c_test40620_c(java.util.UUID p40621) {
				m_p40621 = p40621;
			}
			private java.util.UUID m_p40621;
			public boolean evaluate(Object candidate) {
				ComponentParticipant_c selected = (ComponentParticipant_c) candidate;
				boolean retval = false;
				retval = (selected.getPart_id().equals(m_p40621));
				return retval;
			}
		}

		ComponentParticipant_c[] objs40619 = ComponentParticipant_c
				.ComponentParticipantInstances(modelRoot,
						new ComponentParticipant_c_test40620_c(getPart_id()));

		if (((objs40619.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Component Participant", //$NON-NLS-1$
								"Consistency: Object: Component Participant: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40619.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Component Participant: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40619.length), e);
			}
			retval = false;

		}

		if (((objs40619.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Component Participant", //$NON-NLS-1$
								"Consistency: Object: Component Participant: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs40619.length)
										+ " Part_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Component Participant: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40619.length)
										+ " Part_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Component Participant is a subtype in association: rel.Numb = 930
		// The supertype class is: Interaction Participant
		class InteractionParticipant_c_test40625_c
				implements
					ClassQueryInterface_c {
			InteractionParticipant_c_test40625_c(java.util.UUID p40626) {
				m_p40626 = p40626;
			}
			private java.util.UUID m_p40626;
			public boolean evaluate(Object candidate) {
				InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
				boolean retval = false;
				retval = (selected.getPart_id().equals(m_p40626));
				return retval;
			}
		}

		InteractionParticipant_c[] objs40624 = InteractionParticipant_c
				.InteractionParticipantInstances(modelRoot,
						new InteractionParticipant_c_test40625_c(getPart_id()));

		if (((objs40624.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Component Participant", //$NON-NLS-1$
								"Consistency: Object: Component Participant: Association: 930: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40624.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Component Participant: Association: 930: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40624.length), e);
			}
			retval = false;

		}

		// Component Participant is a referring class in association: rel.Numb = 955
		// The participating class is: Component
		class Component_c_test40628_c implements ClassQueryInterface_c {
			Component_c_test40628_c(java.util.UUID p40629) {
				m_p40629 = p40629;
			}
			private java.util.UUID m_p40629;
			public boolean evaluate(Object candidate) {
				Component_c selected = (Component_c) candidate;
				boolean retval = false;
				retval = (selected.getId().equals(m_p40629));
				return retval;
			}
		}

		Component_c[] objs40627 = Component_c.ComponentInstances(modelRoot,
				new Component_c_test40628_c(getComponent_id()));

		if (((objs40627.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Component Participant", //$NON-NLS-1$
								"Consistency: Object: Component Participant: Association: 955: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs40627.length)
										+ " Component_Id: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Component Participant: Association: 955: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40627.length)
										+ " Component_Id: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public void Initialize() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Initialize");
		final ModelRoot modelRoot = getModelRoot();
		String v_name = "Informal Component";

		String v_success = Ooaofooa.Getnewelementname(modelRoot,
				Converttoinstance(), v_name, false);

		if ((!v_success.equals(""))) {

			setInformalcomponentname(v_success);

		}

		else {

			Dispose();

		}

	} // End initialize
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		InteractionParticipant_c v_participant = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		if (((v_participant != null))) {

			this.unrelateAcrossR930From(v_participant);

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		Component_c v_component = Component_c.getOneC_COnR955(this);

		if (((v_component != null))) {

			this.unrelateAcrossR955From(v_component);

		}

		if (delete()) {
			Ooaofooa.getDefaultInstance().fireModelElementDeleted(
					new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE,
							this));
		}

	} // End dispose
	public String Get_compartment_text(final int p_At, final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Get_compartment_text");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_At == Justification_c.Center)) {

			return getLabel();

		}

		return "";

	} // End get_compartment_text
	public int Get_compartments() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Get_compartments");
		final ModelRoot modelRoot = getModelRoot();
		return 1;

	} // End get_compartments
	public int Get_entries(final int p_Comp_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Get_entries");
		final ModelRoot modelRoot = getModelRoot();
		return 1;

	} // End get_entries
	public int Get_style() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Get_style");
		final ModelRoot modelRoot = getModelRoot();
		return Style_c.Component;

	} // End get_style
	public int Get_text_style(final int p_At, final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Get_text_style");
		final ModelRoot modelRoot = getModelRoot();
		return Style_c.None;

	} // End get_text_style
	public java.util.UUID Get_ooa_id() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Get_ooa_id");
		final ModelRoot modelRoot = getModelRoot();
		return getPart_id();

	} // End get_ooa_id
	public String Get_name() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Get_name");
		final ModelRoot modelRoot = getModelRoot();
		return getLabel();

	} // End get_name
	public boolean Canrename() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Canrename");
		final ModelRoot modelRoot = getModelRoot();
		return !getIsformal();

	} // End canRename
	public boolean Actionfilter(final String p_Name, final String p_Value) {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Actionfilter");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_Name.equals("can"))) {

			PackageableElement_c v_packageableElem = PackageableElement_c
					.getOnePE_PEOnR8001(InteractionParticipant_c
							.getOneSQ_POnR930(this));

			Package_c v_package = Package_c
					.getOneEP_PKGOnR8000(v_packageableElem);

			Component_c v_component = Component_c
					.getOneC_COnR8003(v_packageableElem);

			boolean v_isInGenericPackage = (v_package != null)
					|| (v_component != null);

			if ((p_Value.equals("unform"))) {

				return getIsformal();

			}

			if ((p_Value.equals("formComp spec pkg"))) {

				if (((p_Value.equals("formComp spec pkg")) && (v_isInGenericPackage))) {

					return false;

				}

				InteractionParticipant_c v_participant = InteractionParticipant_c
						.getOneSQ_POnR930(this);

				if ((v_participant != null)) {

					java.util.UUID v_id = v_participant.Getsystemid();

					SystemModel_c v_system = (SystemModel_c) Ooaofooa
							.getDefaultInstance()
							.getInstanceList(SystemModel_c.class).get(v_id);

					if ((v_system != null)) {

						Component_c[] v_components = Component_c
								.getManyC_CsOnR4608(ComponentPackage_c
										.getManyCP_CPsOnR4606(v_system));

						if (((v_components.length) == 1 && getIsformal())) {

							return false;

						}

						return (v_components.length != 0);

					}

				}

			}

			else if ((p_Value.equals("formComp generic pkg"))) {

				if ((!v_isInGenericPackage)) {

					return false;

				}

				int v_count = Util_c.Getelementcountinsystem(
						Converttoinstance(), Elementtypeconstants_c.COMPONENT);

				if ((getIsformal() && v_count == 1)) {

					return false;

				}

				return v_count != 0;

			}

			if ((p_Value.equals("formCommMsgIOp") || p_Value
					.equals("formCommMsgSig"))) {

				if ((Sel_c.Getcurrentselectioncount() != 2)) {

					return false;

				}

				if ((p_Value.equals("formCommMsgIOp") && Isformalandhasifoperations())) {

					return true;

				}

				if ((p_Value.equals("formCommMsgSig") && Isformalandhassignals())) {

					return true;

				}

			}

		}

		return false;

	} // End actionFilter
	public void Formalize(final java.util.UUID p_Compid) {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Formalize");
		final ModelRoot modelRoot = getModelRoot();
		Component_c v_mcomp = (Component_c) modelRoot.getInstanceList(
				Component_c.class).getGlobal(null, p_Compid);

		if ((v_mcomp == null)) {

			InteractionParticipant_c v_participant = InteractionParticipant_c
					.getOneSQ_POnR930(this);

			if ((v_participant != null)) {

				java.util.UUID v_id = v_participant.Getsystemid();

				SystemModel_c v_system = (SystemModel_c) Ooaofooa
						.getDefaultInstance()
						.getInstanceList(SystemModel_c.class).get(v_id);

				if ((v_system != null)) {

					class Component_test37726_c
							implements
								ClassQueryInterface_c {
						public boolean evaluate(Object candidate) {
							Component_c selected = (Component_c) candidate;
							return (selected.getId().equals(p_Compid));
						}
					}
					v_mcomp = Component_c.getOneC_COnR4608(
							ComponentPackage_c.getManyCP_CPsOnR4606(v_system),
							new Component_test37726_c());

				}

			}

		}

		if ((getIsformal())) {

			Unformalize();

		}

		if (((v_mcomp != null))) {

			if (v_mcomp != null) {
				v_mcomp.relateAcrossR955To(this);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

		}

	} // End formalize
	public void Unformalize() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Unformalize");
		final ModelRoot modelRoot = getModelRoot();
		Component_c v_mcomp = Component_c.getOneC_COnR955(this);

		if (((v_mcomp != null))) {

			this.unrelateAcrossR955From(v_mcomp);

		}

		InteractionParticipant_c v_part = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		Message_c[] v_messages = Message_c.getManyMSG_MsOnR1007(v_part);

		Message_c v_message = null;
		for (int i37301 = 0; i37301 < v_messages.length; i37301++) {
			v_message = v_messages[i37301];

			if (v_message != null) {
				v_message.Unformalize();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		Lifespan_c v_ls = Lifespan_c.getOneSQ_LSOnR940(InteractionParticipant_c
				.getOneSQ_POnR930(this));

		if (((v_ls != null))) {

			v_messages = Message_c
					.getManyMSG_MsOnR1007(InteractionParticipant_c
							.getManySQ_PsOnR930(v_ls));

			for (int i37302 = 0; i37302 < v_messages.length; i37302++) {
				v_message = v_messages[i37302];

				if (v_message != null) {
					v_message.Unformalize();
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

			}

		}

		CommunicationLink_c[] v_links = CommunicationLink_c
				.getManyCOMM_LNKsOnR1133(v_part);

		CommunicationLink_c v_link = null;
		for (int i37303 = 0; i37303 < v_links.length; i37303++) {
			v_link = v_links[i37303];

			if (v_link != null) {
				v_link.Unformalize();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

	} // End unformalize
	public boolean Isformalandhasifoperations() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Isformalandhasifoperations");
		final ModelRoot modelRoot = getModelRoot();
		if (getIsformal()) {

			Component_c v_component = Component_c.getOneC_COnR955(this);

			InterfaceOperation_c[] v_interfaceOps = InterfaceOperation_c
					.getManyC_IOsOnR4004(ExecutableProperty_c.getManyC_EPsOnR4003(Interface_c
							.getManyC_IsOnR4012(InterfaceReference_c
									.getManyC_IRsOnR4016(Port_c
											.getManyC_POsOnR4010(v_component)))));

			return (v_interfaceOps.length != 0);

		}

		else {

			return false;

		}

	} // End isFormalAndHasIFOperations
	public boolean Isformalandhassignals() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Isformalandhassignals");
		final ModelRoot modelRoot = getModelRoot();
		if (getIsformal()) {

			Component_c v_component = Component_c.getOneC_COnR955(this);

			InterfaceSignal_c[] v_signals = InterfaceSignal_c
					.getManyC_ASsOnR4004(ExecutableProperty_c.getManyC_EPsOnR4003(Interface_c
							.getManyC_IsOnR4012(InterfaceReference_c
									.getManyC_IRsOnR4016(Port_c
											.getManyC_POsOnR4010(v_component)))));

			return (v_signals.length != 0);

		}

		else {

			return false;

		}

	} // End isFormalAndHasSignals
	public boolean Canformalizetocomponent(final java.util.UUID p_Id) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Canformalizetocomponent");
		final ModelRoot modelRoot = getModelRoot();
		Component_c v_component = Component_c.getOneC_COnR955(this);

		if (((v_component != null))) {

			if ((v_component.getId().equals(p_Id))) {

				return false;

			}

		}

		return true;

	} // End canFormalizeToComponent
	public int Getinterfacesignalcount() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Getinterfacesignalcount");
		final ModelRoot modelRoot = getModelRoot();
		if ((getIsformal())) {

			InterfaceSignal_c[] v_interfaceSignals = InterfaceSignal_c
					.getManyC_ASsOnR4004(ExecutableProperty_c.getManyC_EPsOnR4003(Interface_c
							.getManyC_IsOnR4012(InterfaceReference_c
									.getManyC_IRsOnR4016(Port_c
											.getManyC_POsOnR4010(Component_c
													.getManyC_CsOnR955(this))))));

			return (v_interfaceSignals.length);

		}

		return 0;

	} // End getInterfaceSignalCount
	public int Getinterfaceoperationcount() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Getinterfaceoperationcount");
		final ModelRoot modelRoot = getModelRoot();
		if ((getIsformal())) {

			InterfaceOperation_c[] v_interfaceOperations = InterfaceOperation_c
					.getManyC_IOsOnR4004(ExecutableProperty_c.getManyC_EPsOnR4003(Interface_c
							.getManyC_IsOnR4012(InterfaceReference_c
									.getManyC_IRsOnR4016(Port_c
											.getManyC_POsOnR4010(Component_c
													.getManyC_CsOnR955(this))))));

			return (v_interfaceOperations.length);

		}

		return 0;

	} // End getInterfaceOperationCount
	public boolean Getelidecompartmenttextatend(final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Getelidecompartmenttextatend");
		final ModelRoot modelRoot = getModelRoot();
		Component_c v_component = Component_c.getOneC_COnR955(this);

		boolean v_elideAtFront = false;

		v_elideAtFront = p_Comp_num == 1 && p_Ent_num == 0
				&& (v_component != null);

		return v_elideAtFront;

	} // End getElideCompartmentTextAtEnd
	public Object Converttoinstance() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Converttoinstance");
		return this;
	} // End convertToInstance
	public void Resolvecomponent() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Resolvecomponent");
		final ModelRoot modelRoot = getModelRoot();
		Component_c v_componentProxy = Component_c.getOneC_COnR955(this);

		if (((v_componentProxy != null))
				&& (Util_c.Isproxy(v_componentProxy.Converttoinstance()))
				&& (!Util_c.Isproxy(Converttoinstance()))) {

			String v_name = v_componentProxy.getName();

			InteractionParticipant_c v_part = InteractionParticipant_c
					.getOneSQ_POnR930(this);

			java.util.UUID v_sysId = v_part.Getsystemid();

			SystemModel_c v_system = (SystemModel_c) Ooaofooa
					.getDefaultInstance().getInstanceList(SystemModel_c.class)
					.get(v_sysId);

			Component_c v_resolvedComp = (Component_c) modelRoot
					.getInstanceList(Component_c.class).getGlobal(null,
							Gd_c.Null_unique_id());

			class Component_test37727_c implements ClassQueryInterface_c {
				Component_test37727_c(String p37728) {
					m_p37728 = p37728;
				}
				private String m_p37728;
				public boolean evaluate(Object candidate) {
					Component_c selected = (Component_c) candidate;
					return (selected.getName().equals(m_p37728));
				}
			}
			Component_c[] v_resolvedComps = Component_c.getManyC_CsOnR4604(
					ComponentPackage_c.getManyCP_CPsOnR4606(v_system),
					new Component_test37727_c(v_name));

			PackageableElement_c v_packageableElem = PackageableElement_c
					.getOnePE_PEOnR8001(v_part);

			Package_c v_package = Package_c
					.getOneEP_PKGOnR8000(v_packageableElem);

			Component_c v_component = Component_c
					.getOneC_COnR8003(v_packageableElem);

			boolean v_isInGenericPackage = (v_package != null)
					|| (v_component != null);

			if ((v_isInGenericPackage)) {

				PackageableElement_c v_packageableElement = PackageableElement_c
						.getOnePE_PEOnR8001(InteractionParticipant_c
								.getOneSQ_POnR930(this));

				if (v_packageableElement != null) {
					v_packageableElement.Resolvecomponentrelativetoself(v_name);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

				v_resolvedComps = Component_c
						.getManyC_CsOnR8001(PackageableElement_c
								.getManyPE_PEsOnR8002(ElementVisibility_c
										.getManyPE_VISsOnR8002(v_package)));

				if (((v_resolvedComps.length == 0))) {

					v_resolvedComps = Component_c
							.getManyC_CsOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c
									.getManyPE_CVSsOnR8004(v_component)));

				}

			}

			else {

				class Component_test37729_c implements ClassQueryInterface_c {
					Component_test37729_c(String p37730) {
						m_p37730 = p37730;
					}
					private String m_p37730;
					public boolean evaluate(Object candidate) {
						Component_c selected = (Component_c) candidate;
						return (selected.getName().equals(m_p37730));
					}
				}
				v_resolvedComps = Component_c.getManyC_CsOnR4604(
						ComponentPackage_c.getManyCP_CPsOnR4606(v_system),
						new Component_test37729_c(v_name));

			}

			Component_c v_comp = null;
			for (int i37304 = 0; i37304 < v_resolvedComps.length; i37304++) {
				v_comp = v_resolvedComps[i37304];

				v_resolvedComp = v_comp;

				break;

			}

			if (((v_resolvedComp == null))) {

				Unformalize();

			}

			else {

				this.relateAcrossR955To(v_resolvedComp);

				Resolvemessageformalizations();

			}

		}

	} // End resolveComponent
	public void Resolvemessageformalizations() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Resolvemessageformalizations");
		final ModelRoot modelRoot = getModelRoot();
		Message_c[] v_messages = Message_c
				.getManyMSG_MsOnR1007(InteractionParticipant_c
						.getManySQ_PsOnR930(this));

		Message_c v_message = null;
		for (int i37305 = 0; i37305 < v_messages.length; i37305++) {
			v_message = v_messages[i37305];

			SynchronousMessage_c v_syncMessage = SynchronousMessage_c
					.getOneMSG_SMOnR1018(v_message);

			AsynchronousMessage_c v_asyncMessage = AsynchronousMessage_c
					.getOneMSG_AMOnR1018(v_message);

			if (((v_syncMessage != null))) {

				if ((!v_syncMessage.getIsformal())) {

					continue;

				}

				InterfaceOperationMessage_c v_iopMsg = InterfaceOperationMessage_c
						.getOneMSG_IOPOnR1020(v_syncMessage);

				InterfaceOperation_c v_opProxy = InterfaceOperation_c
						.getOneC_IOOnR1022(v_iopMsg);

				class InterfaceOperation_test37731_c
						implements
							ClassQueryInterface_c {
					InterfaceOperation_test37731_c(String p37732) {
						m_p37732 = p37732;
					}
					private String m_p37732;
					public boolean evaluate(Object candidate) {
						InterfaceOperation_c selected = (InterfaceOperation_c) candidate;
						return (selected.getName().equals(m_p37732));
					}
				}
				InterfaceOperation_c v_operation = InterfaceOperation_c
						.getOneC_IOOnR4004(
								ExecutableProperty_c
										.getManyC_EPsOnR4003(Interface_c
												.getManyC_IsOnR4012(InterfaceReference_c
														.getManyC_IRsOnR4016(Port_c
																.getManyC_POsOnR4010(Component_c
																		.getManyC_CsOnR955(this))))),
								new InterfaceOperation_test37731_c(v_opProxy
										.getName()));

				if (((v_operation != null))) {

					if (v_syncMessage != null) {
						v_syncMessage
								.Formalizewithinterfaceoperation(v_operation
										.getId());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

				else {

					if (v_syncMessage != null) {
						v_syncMessage.Unformalize();
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

			}

			else if (((v_asyncMessage != null))) {

				if ((!v_asyncMessage.getIsformal())) {

					continue;

				}

				SignalMessage_c v_sigMessage = SignalMessage_c
						.getOneMSG_SIGOnR1019(v_asyncMessage);

				InterfaceSignal_c v_sigProxy = InterfaceSignal_c
						.getOneC_ASOnR1021(v_sigMessage);

				class InterfaceSignal_test37733_c
						implements
							ClassQueryInterface_c {
					InterfaceSignal_test37733_c(String p37734) {
						m_p37734 = p37734;
					}
					private String m_p37734;
					public boolean evaluate(Object candidate) {
						InterfaceSignal_c selected = (InterfaceSignal_c) candidate;
						return (selected.getName().equals(m_p37734));
					}
				}
				InterfaceSignal_c v_signal = InterfaceSignal_c
						.getOneC_ASOnR4004(
								ExecutableProperty_c
										.getManyC_EPsOnR4003(Interface_c
												.getManyC_IsOnR4012(InterfaceReference_c
														.getManyC_IRsOnR4016(Port_c
																.getManyC_POsOnR4010(Component_c
																		.getManyC_CsOnR955(this))))),
								new InterfaceSignal_test37733_c(v_sigProxy
										.getName()));

				if (((v_signal != null))) {

					if (v_asyncMessage != null) {
						v_asyncMessage.Formalizewithsignal(v_signal.getId());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

				else {

					if (v_asyncMessage != null) {
						v_asyncMessage.Unformalize();
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

			}

		}

		Lifespan_c v_ls = Lifespan_c.getOneSQ_LSOnR940(InteractionParticipant_c
				.getOneSQ_POnR930(this));

		if (((v_ls != null))) {

			v_messages = Message_c
					.getManyMSG_MsOnR1007(InteractionParticipant_c
							.getManySQ_PsOnR930(v_ls));

			for (int i37306 = 0; i37306 < v_messages.length; i37306++) {
				v_message = v_messages[i37306];

				SynchronousMessage_c v_syncMessage = SynchronousMessage_c
						.getOneMSG_SMOnR1018(v_message);

				AsynchronousMessage_c v_asyncMessage = AsynchronousMessage_c
						.getOneMSG_AMOnR1018(v_message);

				if (((v_syncMessage != null))) {

					if ((!v_syncMessage.getIsformal())) {

						continue;

					}

					InterfaceOperationMessage_c v_iopMsg = InterfaceOperationMessage_c
							.getOneMSG_IOPOnR1020(v_syncMessage);

					InterfaceOperation_c v_opProxy = InterfaceOperation_c
							.getOneC_IOOnR1022(v_iopMsg);

					class InterfaceOperation_test37735_c
							implements
								ClassQueryInterface_c {
						InterfaceOperation_test37735_c(String p37736) {
							m_p37736 = p37736;
						}
						private String m_p37736;
						public boolean evaluate(Object candidate) {
							InterfaceOperation_c selected = (InterfaceOperation_c) candidate;
							return (selected.getName().equals(m_p37736));
						}
					}
					InterfaceOperation_c v_operation = InterfaceOperation_c
							.getOneC_IOOnR4004(
									ExecutableProperty_c
											.getManyC_EPsOnR4003(Interface_c
													.getManyC_IsOnR4012(InterfaceReference_c
															.getManyC_IRsOnR4016(Port_c
																	.getManyC_POsOnR4010(Component_c
																			.getManyC_CsOnR955(this))))),
									new InterfaceOperation_test37735_c(
											v_opProxy.getName()));

					if (((v_operation != null))) {

						if (v_syncMessage != null) {
							v_syncMessage
									.Formalizewithinterfaceoperation(v_operation
											.getId());
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

					else {

						if (v_syncMessage != null) {
							v_syncMessage.Unformalize();
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

				}

				else if (((v_asyncMessage != null))) {

					if ((!v_asyncMessage.getIsformal())) {

						continue;

					}

					SignalMessage_c v_sigMessage = SignalMessage_c
							.getOneMSG_SIGOnR1019(v_asyncMessage);

					InterfaceSignal_c v_sigProxy = InterfaceSignal_c
							.getOneC_ASOnR1021(v_sigMessage);

					class InterfaceSignal_test37737_c
							implements
								ClassQueryInterface_c {
						InterfaceSignal_test37737_c(String p37738) {
							m_p37738 = p37738;
						}
						private String m_p37738;
						public boolean evaluate(Object candidate) {
							InterfaceSignal_c selected = (InterfaceSignal_c) candidate;
							return (selected.getName().equals(m_p37738));
						}
					}
					InterfaceSignal_c v_signal = InterfaceSignal_c
							.getOneC_ASOnR4004(
									ExecutableProperty_c
											.getManyC_EPsOnR4003(Interface_c
													.getManyC_IsOnR4012(InterfaceReference_c
															.getManyC_IRsOnR4016(Port_c
																	.getManyC_POsOnR4010(Component_c
																			.getManyC_CsOnR955(this))))),
									new InterfaceSignal_test37737_c(v_sigProxy
											.getName()));

					if (((v_signal != null))) {

						if (v_asyncMessage != null) {
							v_asyncMessage
									.Formalizewithsignal(v_signal.getId());
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

					else {

						if (v_asyncMessage != null) {
							v_asyncMessage.Unformalize();
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

				}

			}

		}

	} // End resolveMessageFormalizations
	public Object Getconfigurationinheritanceelementid() {
		Ooaofooa.log
				.println(
						ILogger.OPERATION,
						"Component Participant",
						" Operation entered: ComponentParticipant::Getconfigurationinheritanceelementid");
		final ModelRoot modelRoot = getModelRoot();
		Component_c v_comp = Component_c.getOneC_COnR955(this);

		if (((v_comp != null))) {

			return v_comp.Converttoinstance();

		}

		return Converttoinstance();

	} // End getConfigurationInheritanceElementId
	public String Getcachedlabel() {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Getcachedlabel");
		return m_label;
	} // End getCachedLabel
	public void Setcachedlabel(final String p_Value) {
		Ooaofooa.log.println(ILogger.OPERATION, "Component Participant",
				" Operation entered: ComponentParticipant::Setcachedlabel");
		m_label = p_Value;
	} // End setCachedLabel
	public boolean Canrefertocomponent() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Canrefertocomponent");
		final ModelRoot modelRoot = getModelRoot();
		return true;

	} // End canReferToComponent
	public boolean Isreferringtodefaultcomponent() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Component Participant",
						" Operation entered: ComponentParticipant::Isreferringtodefaultcomponent");
		final ModelRoot modelRoot = getModelRoot();
		return !getIsformal();

	} // End isReferringToDefaultComponent

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		if (adapter == IActionFilter.class) {
			return ComponentParticipantActionFilter.getSingleton();
		}
		return null;
	}
} // end Component Participant
