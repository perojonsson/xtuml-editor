package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ExternalEntityParticipant_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_EXTERNAL_ENTITY_PARTICIPANT extends genericEvent_c {
	public abstract int getEvtcode();
}

public class ExternalEntityParticipant_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public ExternalEntityParticipant_c(ModelRoot modelRoot,
			java.util.UUID p_m_part_id, java.util.UUID p_m_ee_id,
			String p_m_label, String p_m_informalname, String p_m_descrip,
			boolean p_m_isformal) {
		super(modelRoot);
		m_label = p_m_label;
		m_informalname = p_m_informalname;
		m_descrip = p_m_descrip;
		m_isformal = p_m_isformal;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);

		Object[] key = {m_part_id};
		addInstanceToMap(key);
	}
	static public ExternalEntityParticipant_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_part_id, java.util.UUID p_m_ee_id,
			String p_m_label, String p_m_informalname, String p_m_descrip,
			boolean p_m_isformal, String p_contentPath, IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(ExternalEntityParticipant_c.class);
		ExternalEntityParticipant_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_part_id};
			new_inst = (ExternalEntityParticipant_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				new_inst.m_label = p_m_label;
				new_inst.m_informalname = p_m_informalname;
				new_inst.m_descrip = p_m_descrip;
				new_inst.m_isformal = p_m_isformal;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new ExternalEntityParticipant_c(modelRoot, p_m_part_id,
					p_m_ee_id, p_m_label, p_m_informalname, p_m_descrip,
					p_m_isformal);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public ExternalEntityParticipant_c resolveInstance(
			ModelRoot modelRoot, java.util.UUID p_m_part_id,
			java.util.UUID p_m_ee_id, String p_m_label,
			String p_m_informalname, String p_m_descrip, boolean p_m_isformal) {
		InstanceList instances = modelRoot
				.getInstanceList(ExternalEntityParticipant_c.class);
		ExternalEntityParticipant_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_part_id};
			source = (ExternalEntityParticipant_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				source.m_label = p_m_label;
				source.m_informalname = p_m_informalname;
				source.m_descrip = p_m_descrip;
				source.m_isformal = p_m_isformal;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_part_id = IdAssigner.preprocessUUID(p_m_part_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);

				return source;
			}
		}
		// there is no instance matching the id
		ExternalEntityParticipant_c new_inst = new ExternalEntityParticipant_c(
				modelRoot, p_m_part_id, p_m_ee_id, p_m_label, p_m_informalname,
				p_m_descrip, p_m_isformal);
		return new_inst;
	}
	public ExternalEntityParticipant_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_label = "";
		m_informalname = "";
		m_descrip = "";
		m_part_id = IdAssigner.NULL_UUID;
		m_ee_id = IdAssigner.NULL_UUID;
		Object[] key = {m_part_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_part_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p4
		// round p5
		if (m_part_id != p_newKey) {

			m_part_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof ExternalEntityParticipant_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof ExternalEntityParticipant_c)) {
			return false;
		}

		ExternalEntityParticipant_c me = (ExternalEntityParticipant_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getPart_id()) || IdAssigner.NULL_UUID
						.equals(((ExternalEntityParticipant_c) elem)
								.getPart_id())) && this != elem)) {
			return false;
		}
		if (!getPart_id().equals(
				((ExternalEntityParticipant_c) elem).getPart_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof ExternalEntityParticipant_c)) {
			return false;
		}

		ExternalEntityParticipant_c me = (ExternalEntityParticipant_c) elem;
		if (!getPart_idCachedValue().equals(
				((ExternalEntityParticipant_c) elem).getPart_idCachedValue()))
			return false;
		return true;
	}

	// Attributes
	private String m_label;
	private String m_informalname;
	private String m_descrip;
	private boolean m_isformal;
	private java.util.UUID m_part_id;
	private java.util.UUID m_ee_id;

	// declare association references from this class

	// referring navigation

	InteractionParticipant_c IsSupertypeInteractionParticipant;
	public void relateAcrossR930To(InteractionParticipant_c target) {
		relateAcrossR930To(target, true);
	}
	public void relateAcrossR930To(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsSupertypeInteractionParticipant)
			return; // already related

		if (IsSupertypeInteractionParticipant != target) {

			Object oldKey = getInstanceKey();

			if (IsSupertypeInteractionParticipant != null) {

				IsSupertypeInteractionParticipant.clearBackPointerR930To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"ExternalEntityParticipant_c.relateAcrossR930To(InteractionParticipant_c target)",
									"Relate performed across R930 from External Entity Participant to Interaction Participant without unrelate of prior instance.");
				}
			}

			IsSupertypeInteractionParticipant = target;
			if (IdAssigner.NULL_UUID.equals(target.getPart_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_part_id = target.getPart_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR930To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "930", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR930From(InteractionParticipant_c target) {
		unrelateAcrossR930From(target, true);
	}
	public void unrelateAcrossR930From(InteractionParticipant_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (IsSupertypeInteractionParticipant == null)
			return; // already unrelated

		if (target != IsSupertypeInteractionParticipant) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R930",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR930To(this);
		}

		if (IsSupertypeInteractionParticipant != null) {

			m_part_id = IsSupertypeInteractionParticipant.getPart_id();
			if (IdAssigner.NULL_UUID.equals(m_part_id)) {
				m_part_id = IsSupertypeInteractionParticipant
						.getPart_idCachedValue();
			}
			IsSupertypeInteractionParticipant = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "930", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR930(
			InteractionParticipant_c[] targets) {
		return getOneSQ_EEPOnR930(targets, null);
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		ExternalEntityParticipant_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneSQ_EEPOnR930(targets[i], test);
			}
		}

		return ret_val;
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR930(
			InteractionParticipant_c target) {
		return getOneSQ_EEPOnR930(target, null);
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR930(
			InteractionParticipant_c target, boolean loadComponent) {
		return getOneSQ_EEPOnR930(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR930(
			InteractionParticipant_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneSQ_EEPOnR930(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR930(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		return getOneSQ_EEPOnR930(modelRoot, target, test, true);
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR930(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneSQ_EEPOnR930(modelRoot, target, test);
	}
	private static ExternalEntityParticipant_c find_getOneSQ_EEPOnR930(
			ModelRoot modelRoot, InteractionParticipant_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			ExternalEntityParticipant_c source = (ExternalEntityParticipant_c) target.backPointer_IsSubtypeExternalEntityParticipantIsSubtype_R930;
			if (source != null && (test == null || test.evaluate(source))) {
				return source;
			}
		}
		// not found
		return null;
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR930(
			InteractionParticipant_c[] targets) {
		return getManySQ_EEPsOnR930(targets, null);
	}
	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR930(
			InteractionParticipant_c[] targets, boolean loadComponent) {
		return getManySQ_EEPsOnR930(targets, null, loadComponent);
	}
	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test) {
		return getManySQ_EEPsOnR930(targets, test, true);
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR930(
			InteractionParticipant_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new ExternalEntityParticipant_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(ExternalEntityParticipant_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			ExternalEntityParticipant_c source = (ExternalEntityParticipant_c) targets[i].backPointer_IsSubtypeExternalEntityParticipantIsSubtype_R930;
			if (source != null && (test == null || test.evaluate(source))) {
				matches.add(source);
			}
		}
		if (matches.size() > 0) {
			ExternalEntityParticipant_c[] ret_set = new ExternalEntityParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new ExternalEntityParticipant_c[0];
		}
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR930(
			InteractionParticipant_c target) {
		if (target != null) {
			InteractionParticipant_c[] targetArray = new InteractionParticipant_c[1];
			targetArray[0] = target;
			return getManySQ_EEPsOnR930(targetArray);
		} else {
			ExternalEntityParticipant_c[] result = new ExternalEntityParticipant_c[0];
			return result;
		}
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR930(
			InteractionParticipant_c target, boolean loadComponent) {
		if (target != null) {
			InteractionParticipant_c[] targetArray = new InteractionParticipant_c[1];
			targetArray[0] = target;
			return getManySQ_EEPsOnR930(targetArray, loadComponent);
		} else {
			ExternalEntityParticipant_c[] result = new ExternalEntityParticipant_c[0];
			return result;
		}
	}

	// referring navigation

	ExternalEntity_c RepresentsExternalEntity;
	public void relateAcrossR933To(ExternalEntity_c target) {
		relateAcrossR933To(target, true);
	}
	public void relateAcrossR933To(ExternalEntity_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == RepresentsExternalEntity)
			return; // already related

		if (RepresentsExternalEntity != target) {

			Object oldKey = getInstanceKey();

			if (RepresentsExternalEntity != null) {
				UmlProblem.removeXtUMLProblem(this, RepresentsExternalEntity);

				RepresentsExternalEntity.clearBackPointerR933To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"ExternalEntityParticipant_c.relateAcrossR933To(ExternalEntity_c target)",
									"Relate performed across R933 from External Entity Participant to External Entity without unrelate of prior instance.");
				}
			}

			RepresentsExternalEntity = target;
			if (IdAssigner.NULL_UUID.equals(target.getEe_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_ee_id = target.getEe_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR933To(this);
			target.addRef();
			UmlProblem.handleDanglingReference(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "933", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR933From(ExternalEntity_c target) {
		unrelateAcrossR933From(target, true);
	}
	public void unrelateAcrossR933From(ExternalEntity_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (RepresentsExternalEntity == null)
			return; // already unrelated

		if (target != RepresentsExternalEntity) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R933",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR933To(this);
		}

		if (RepresentsExternalEntity != null) {

			m_ee_id = RepresentsExternalEntity.getEe_id();
			if (IdAssigner.NULL_UUID.equals(m_ee_id)) {
				m_ee_id = RepresentsExternalEntity.getEe_idCachedValue();
			}
			RepresentsExternalEntity = null;
			target.removeRef();
			UmlProblem.removeXtUMLProblem(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "933", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR933(
			ExternalEntity_c[] targets) {
		return getOneSQ_EEPOnR933(targets, null);
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR933(
			ExternalEntity_c[] targets, ClassQueryInterface_c test) {
		ExternalEntityParticipant_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneSQ_EEPOnR933(targets[i], test);
			}
		}

		return ret_val;
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR933(
			ExternalEntity_c target) {
		return getOneSQ_EEPOnR933(target, null);
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR933(
			ExternalEntity_c target, boolean loadComponent) {
		return getOneSQ_EEPOnR933(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR933(
			ExternalEntity_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneSQ_EEPOnR933(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR933(
			ModelRoot modelRoot, ExternalEntity_c target,
			ClassQueryInterface_c test) {
		return getOneSQ_EEPOnR933(modelRoot, target, test, true);
	}

	public static ExternalEntityParticipant_c getOneSQ_EEPOnR933(
			ModelRoot modelRoot, ExternalEntity_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		ExternalEntityParticipant_c result = null;

		result = find_getOneSQ_EEPOnR933(modelRoot, target, test);
		if (result == null && (loadComponent)) {
			// not a Containment Relation
			List comps = PersistenceManager.findAllComponents(modelRoot,
					ExternalEntityParticipant_c.class);
			for (int i = 0; i < comps.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) comps
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = find_getOneSQ_EEPOnR933(modelRoot, target,
								test);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}

		return result;
	}
	private static ExternalEntityParticipant_c find_getOneSQ_EEPOnR933(
			ModelRoot modelRoot, ExternalEntity_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933) {
				for (int i = 0; i < target.backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933
						.size(); ++i) {
					ExternalEntityParticipant_c source = (ExternalEntityParticipant_c) target.backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR933(
			ExternalEntity_c[] targets) {
		return getManySQ_EEPsOnR933(targets, null);
	}
	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR933(
			ExternalEntity_c[] targets, boolean loadComponent) {
		return getManySQ_EEPsOnR933(targets, null, loadComponent);
	}
	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR933(
			ExternalEntity_c[] targets, ClassQueryInterface_c test) {
		return getManySQ_EEPsOnR933(targets, test, true);
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR933(
			ExternalEntity_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new ExternalEntityParticipant_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					ExternalEntityParticipant_c.class);

		}

		InstanceList instances = modelRoot
				.getInstanceList(ExternalEntityParticipant_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933) {
				for (int j = 0; j < targets[i].backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933
						.size(); ++j) {
					ExternalEntityParticipant_c source = (ExternalEntityParticipant_c) targets[i].backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			ExternalEntityParticipant_c[] ret_set = new ExternalEntityParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new ExternalEntityParticipant_c[0];
		}
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR933(
			ExternalEntity_c target) {
		return getManySQ_EEPsOnR933(target, null);
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR933(
			ExternalEntity_c target, boolean loadComponent) {
		return getManySQ_EEPsOnR933(target, null, loadComponent);
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR933(
			ExternalEntity_c target, ClassQueryInterface_c test) {
		return getManySQ_EEPsOnR933(target, test, true);
	}

	public static ExternalEntityParticipant_c[] getManySQ_EEPsOnR933(
			ExternalEntity_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new ExternalEntityParticipant_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					ExternalEntityParticipant_c.class);
		}
		Vector matches = new Vector();
		synchronized (target.backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933) {
			for (int i = 0; i < target.backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933
					.size(); ++i) {
				ExternalEntityParticipant_c source = (ExternalEntityParticipant_c) target.backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			ExternalEntityParticipant_c[] ret_set = new ExternalEntityParticipant_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new ExternalEntityParticipant_c[0];
		}
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies,
			boolean notifyChanges, boolean searchAllRoots) {
		InstanceList instances = null;
		ModelRoot baseRoot = modelRoot;

		// R930
		InteractionParticipant_c relInst40604 = (InteractionParticipant_c) baseRoot
				.getInstanceList(InteractionParticipant_c.class).get(
						new Object[]{m_part_id});
		// if there was no local element, check for any global elements
		// failing that proceed to check other model roots
		if (relInst40604 == null) {
			relInst40604 = (InteractionParticipant_c) Ooaofooa
					.getDefaultInstance()
					.getInstanceList(InteractionParticipant_c.class)
					.get(new Object[]{m_part_id});
		}
		if (relInst40604 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
			Ooaofooa[] roots = Ooaofooa.getInstances();
			for (int i = 0; i < roots.length; i++) {
				if (roots[i].isCompareRoot()) {
					// never use elements from any compare root
					continue;
				}
				relInst40604 = (InteractionParticipant_c) roots[i]
						.getInstanceList(InteractionParticipant_c.class).get(
								new Object[]{m_part_id});
				if (relInst40604 != null)
					break;
			}
		}
		//synchronized
		if (relInst40604 != null) {
			if (relateProxies || !isProxy()
					|| (inSameComponent(this, relInst40604) && !isProxy())) {
				relInst40604.relateAcrossR930To(this, notifyChanges);
			}
		}

		if (RepresentsExternalEntity == null) {
			// R933
			ExternalEntity_c relInst40605 = (ExternalEntity_c) baseRoot
					.getInstanceList(ExternalEntity_c.class).get(
							new Object[]{m_ee_id});
			// if there was no local element, check for any global elements
			// failing that proceed to check other model roots
			if (relInst40605 == null) {
				relInst40605 = (ExternalEntity_c) Ooaofooa.getDefaultInstance()
						.getInstanceList(ExternalEntity_c.class)
						.get(new Object[]{m_ee_id});
			}
			if (relInst40605 == null && searchAllRoots
					&& !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
					if (roots[i].isCompareRoot()) {
						// never use elements from any compare root
						continue;
					}
					relInst40605 = (ExternalEntity_c) roots[i].getInstanceList(
							ExternalEntity_c.class).get(new Object[]{m_ee_id});
					if (relInst40605 != null)
						break;
				}
			}
			//synchronized
			if (relInst40605 != null) {
				if (relateProxies || !isProxy()
						|| (inSameComponent(this, relInst40605) && !isProxy())) {
					relInst40605.relateAcrossR933To(this, notifyChanges);
				}
			}
		}

	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R930
		// SQ_P
		inst = IsSupertypeInteractionParticipant;
		unrelateAcrossR930From(IsSupertypeInteractionParticipant, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R933
		// S_EE
		inst = RepresentsExternalEntity;
		unrelateAcrossR933From(RepresentsExternalEntity, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ExternalEntityParticipant_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ExternalEntityParticipant_c inst = (ExternalEntityParticipant_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(ExternalEntityParticipant_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static ExternalEntityParticipant_c ExternalEntityParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		ExternalEntityParticipant_c result = findExternalEntityParticipantInstance(
				modelRoot, test, loadComponent);
		if (result == null && loadComponent) {
			List pmcs = PersistenceManager.findAllComponents(modelRoot,
					ExternalEntityParticipant_c.class);
			for (int i = 0; i < pmcs.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) pmcs
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = findExternalEntityParticipantInstance(
								modelRoot, test, loadComponent);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}
		if (result != null && loadComponent) {
			result.loadProxy();
		}
		return result;
	}
	private static ExternalEntityParticipant_c findExternalEntityParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(ExternalEntityParticipant_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				ExternalEntityParticipant_c x = (ExternalEntityParticipant_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						return x;
				}
			}
		}
		return null;
	}
	public static ExternalEntityParticipant_c ExternalEntityParticipantInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return ExternalEntityParticipantInstance(modelRoot, test, true);
	}

	public static ExternalEntityParticipant_c ExternalEntityParticipantInstance(
			ModelRoot modelRoot) {
		return ExternalEntityParticipantInstance(modelRoot, null, true);
	}

	public static ExternalEntityParticipant_c[] ExternalEntityParticipantInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (loadComponent) {
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					ExternalEntityParticipant_c.class);
		}
		InstanceList instances = modelRoot
				.getInstanceList(ExternalEntityParticipant_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				ExternalEntityParticipant_c x = (ExternalEntityParticipant_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						matches.add(x);
				}
			}
			if (matches.size() > 0) {
				ExternalEntityParticipant_c[] ret_set = new ExternalEntityParticipant_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ExternalEntityParticipant_c[0];
			}
		}
	}
	public static ExternalEntityParticipant_c[] ExternalEntityParticipantInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return ExternalEntityParticipantInstances(modelRoot, test, true);
	}
	public static ExternalEntityParticipant_c[] ExternalEntityParticipantInstances(
			ModelRoot modelRoot) {
		return ExternalEntityParticipantInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the External Entity Participant.dispose call: ";
		InteractionParticipant_c testR930Inst3 = InteractionParticipant_c
				.getOneSQ_POnR930(this, false);

		if (testR930Inst3 != null) {
			delete_error = true;
			errorMsg = errorMsg + "930 ";
		}
		ExternalEntity_c testR933Inst = ExternalEntity_c.getOneS_EEOnR933(this,
				false);

		if (testR933Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "933 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log.println(ILogger.DELETE,
						"External Entity Participant", errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("part_id")) {
			return true;
		}
		if (attributeName.equals("ee_id")) {
			return true;
		}
		return false;
	}
	public String getCompUniqueID() {
		UUID tempID = null;
		long longID = 0L;
		StringBuffer result = new StringBuffer();

		tempID = getPart_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getPart_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		return result.toString();
	}
	// declare attribute accessors
	public String getLabel() {
		ModelRoot modelRoot = getModelRoot();
		ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR933(this);

		if (((v_ee != null))) {

			return v_ee.getName();

		}

		else {

			return getInformalname();

		}

	}

	public String getInformalname() {
		return m_informalname;
	}

	public void setInformalname(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_informalname)) {
				return;
			}
		} else if (m_informalname != null) {
			if (m_informalname.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Informalname", m_informalname, newValue, true);
		m_informalname = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getDescrip() {
		return m_descrip;
	}

	public void setDescrip(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_descrip)) {
				return;
			}
		} else if (m_descrip != null) {
			if (m_descrip.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Descrip", m_descrip, newValue, true);
		m_descrip = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public boolean getIsformal() {
		ModelRoot modelRoot = getModelRoot();
		ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR933(this);

		return !(v_ee == null);

	}

	public long getPart_idLongBased() {
		if (IsSupertypeInteractionParticipant != null) {
			return IsSupertypeInteractionParticipant.getPart_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getPart_id() {
		if (IsSupertypeInteractionParticipant != null) {
			return IsSupertypeInteractionParticipant.getPart_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public boolean hasSuperType() {
		return (IsSupertypeInteractionParticipant != null);

	}

	public java.util.UUID getPart_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_part_id))
			return m_part_id;
		else
			return getPart_id();
	}

	public void setPart_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_part_id)) {
				return;
			}
		} else if (m_part_id != null) {
			if (m_part_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Part_id", m_part_id, newValue, true);
		m_part_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getEe_idLongBased() {
		if (RepresentsExternalEntity != null) {
			return RepresentsExternalEntity.getEe_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getEe_id() {
		if (RepresentsExternalEntity != null) {
			return RepresentsExternalEntity.getEe_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getEe_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_ee_id))
			return m_ee_id;
		else
			return getEe_id();
	}

	public void setEe_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_ee_id)) {
				return;
			}
		} else if (m_ee_id != null) {
			if (m_ee_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ee_id",
				m_ee_id, newValue, true);
		m_ee_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant", //$NON-NLS-1$
						" Operation entered: External Entity Participant::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		ExternalEntityParticipant_c[] objs = ExternalEntityParticipant_c
				.ExternalEntityParticipantInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant", //$NON-NLS-1$
						" Operation entered: External Entity Participant::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class ExternalEntityParticipant_c_test40607_c
				implements
					ClassQueryInterface_c {
			ExternalEntityParticipant_c_test40607_c(java.util.UUID p40608) {
				m_p40608 = p40608;
			}
			private java.util.UUID m_p40608;
			public boolean evaluate(Object candidate) {
				ExternalEntityParticipant_c selected = (ExternalEntityParticipant_c) candidate;
				boolean retval = false;
				retval = (selected.getPart_id().equals(m_p40608));
				return retval;
			}
		}

		ExternalEntityParticipant_c[] objs40606 = ExternalEntityParticipant_c
				.ExternalEntityParticipantInstances(modelRoot,
						new ExternalEntityParticipant_c_test40607_c(
								getPart_id()));

		if (((objs40606.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"External Entity Participant", //$NON-NLS-1$
								"Consistency: Object: External Entity Participant: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40606.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: External Entity Participant: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40606.length), e);
			}
			retval = false;

		}

		if (((objs40606.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"External Entity Participant", //$NON-NLS-1$
								"Consistency: Object: External Entity Participant: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs40606.length)
										+ " Part_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: External Entity Participant: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40606.length)
										+ " Part_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// External Entity Participant is a subtype in association: rel.Numb = 930
		// The supertype class is: Interaction Participant
		class InteractionParticipant_c_test40612_c
				implements
					ClassQueryInterface_c {
			InteractionParticipant_c_test40612_c(java.util.UUID p40613) {
				m_p40613 = p40613;
			}
			private java.util.UUID m_p40613;
			public boolean evaluate(Object candidate) {
				InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
				boolean retval = false;
				retval = (selected.getPart_id().equals(m_p40613));
				return retval;
			}
		}

		InteractionParticipant_c[] objs40611 = InteractionParticipant_c
				.InteractionParticipantInstances(modelRoot,
						new InteractionParticipant_c_test40612_c(getPart_id()));

		if (((objs40611.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"External Entity Participant", //$NON-NLS-1$
								"Consistency: Object: External Entity Participant: Association: 930: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40611.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: External Entity Participant: Association: 930: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40611.length), e);
			}
			retval = false;

		}

		// External Entity Participant is a referring class in association: rel.Numb = 933
		// The participating class is: External Entity
		class ExternalEntity_c_test40615_c implements ClassQueryInterface_c {
			ExternalEntity_c_test40615_c(java.util.UUID p40616) {
				m_p40616 = p40616;
			}
			private java.util.UUID m_p40616;
			public boolean evaluate(Object candidate) {
				ExternalEntity_c selected = (ExternalEntity_c) candidate;
				boolean retval = false;
				retval = (selected.getEe_id().equals(m_p40616));
				return retval;
			}
		}

		ExternalEntity_c[] objs40614 = ExternalEntity_c
				.ExternalEntityInstances(modelRoot,
						new ExternalEntity_c_test40615_c(getEe_id()));

		if (((objs40614.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"External Entity Participant", //$NON-NLS-1$
								"Consistency: Object: External Entity Participant: Association: 933: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs40614.length)
										+ " EE_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: External Entity Participant: Association: 933: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40614.length)
										+ " EE_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		InteractionParticipant_c v_participant = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		if (((v_participant != null))) {

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else {

			ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR933(this);

			if (((v_ee != null))) {

				if (v_ee != null) {
					v_ee.unrelateAcrossR933From(this);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Unrelate attempted on null left hand instance.",
									t);
				}

			}

			if (delete()) {
				Ooaofooa.getDefaultInstance().fireModelElementDeleted(
						new BaseModelDelta(
								Modeleventnotification_c.DELTA_DELETE, this));
			}

		}

	} // End dispose
	public void Initialize() {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Initialize");
		final ModelRoot modelRoot = getModelRoot();
		String v_name = "Informal External Entity";

		String v_success = Ooaofooa.Getnewelementname(modelRoot,
				Converttoinstance(), v_name, false);

		if ((!v_success.equals(""))) {

			setInformalname(v_success);

		}

		else {

			Dispose();

		}

	} // End initialize
	public int Get_style() {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Get_style");
		final ModelRoot modelRoot = getModelRoot();
		return Style_c.Box;

	} // End get_style
	public int Get_entries(final int p_Comp_num) {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Get_entries");
		final ModelRoot modelRoot = getModelRoot();
		ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR933(this);

		if (((v_ee != null))) {

			return v_ee.Get_entries(p_Comp_num);

		}

		if ((p_Comp_num == 1)) {

			return 1;

		}

		else if ((p_Comp_num == 2)) {

			return 0;

		}

		else if ((p_Comp_num == 3)) {

			InteractionParticipant_c v_participant = InteractionParticipant_c
					.getOneSQ_POnR930(this);

			String v_compartmentText = v_participant
					.Getmessagecompartmenttext();

			int v_lineCount = Gd_c.Numberoflines(v_compartmentText);

			return v_lineCount;

		}

		else {

			return 0;

		}

	} // End get_entries
	public int Get_compartments() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Get_compartments");
		final ModelRoot modelRoot = getModelRoot();
		return 3;

	} // End get_compartments
	public int Get_text_style(final int p_At, final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Get_text_style");
		final ModelRoot modelRoot = getModelRoot();
		return Style_c.None;

	} // End get_text_style
	public String Get_compartment_text(final int p_At, final int p_Comp_num,
			final int p_Ent_num) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Get_compartment_text");
		final ModelRoot modelRoot = getModelRoot();
		InteractionParticipant_c v_participant = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR933(this);

		if (((v_ee != null))) {

			if (((p_Comp_num == 1) && (p_Ent_num == 1))) {

				if ((p_At == Justification_c.Center_in_X)) {

					String v_result = "«external entity»";

					v_result = v_result + Gd_c.Newline();

					v_result = v_result + v_ee.Getpath();

					return v_result;

				}

				else {

					return v_ee.Get_compartment_text(p_At, p_Comp_num,
							p_Ent_num);

				}

			}

			else {

				return v_ee.Get_compartment_text(p_At, p_Comp_num, p_Ent_num);

			}

		}

		else {

			String v_result = "";

			if ((p_Comp_num == 1)) {

				if ((p_Ent_num == 1)) {

					if ((p_At == Justification_c.Center_in_X)) {

						v_result = getInformalname();

					}

				}

			}

			else if ((p_Comp_num == 3)) {

				if ((p_At == Justification_c.Left)) {

					int v_cursor = 1;

					Message_c[] v_msgs = Message_c
							.getManyMSG_MsOnR1007(InteractionParticipant_c
									.getManySQ_PsOnR930(this));

					if (((v_msgs.length != 0) && p_Ent_num == 1)) {

						v_result = "«operation»";

						v_result = v_result + Gd_c.Newline();

						if ((p_Ent_num == 1)) {

							return v_result
									+ Util_c.Removeduplicatestrings(
											v_participant
													.Getmessagecompartmenttext(),
											Gd_c.Newline());

						}

					}

				}

			}

			return v_result;

		}

	} // End get_compartment_text
	public java.util.UUID Get_ooa_id() {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Get_ooa_id");
		final ModelRoot modelRoot = getModelRoot();
		return getPart_id();

	} // End get_ooa_id
	public boolean Actionfilter(final String p_Name, final String p_Value) {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Actionfilter");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_Name.equals("can"))) {

			if ((p_Value.equals("formCommBrg"))) {

				if ((Definedatsystemlevel())) {

					return false;

				}

				if ((Sel_c.Getcurrentselectioncount() != 2)) {

					return false;

				}

				return Formaleehasbridgeoperations();

			}

			if ((p_Value.equals("formEE spec pkg"))
					|| (p_Value.equals("formEE generic pkg"))) {

				PackageableElement_c v_packageableElem = PackageableElement_c
						.getOnePE_PEOnR8001(InteractionParticipant_c
								.getOneSQ_POnR930(this));

				Package_c v_package = Package_c
						.getOneEP_PKGOnR8000(v_packageableElem);

				Component_c v_component = Component_c
						.getOneC_COnR8003(v_packageableElem);

				boolean v_isInGenericPackage = (v_package != null)
						|| (v_component != null);

				if (((p_Value.equals("formEE spec pkg")) && (v_isInGenericPackage))) {

					return false;

				}

				if (((p_Value.equals("formEE generic pkg")) && (!v_isInGenericPackage))) {

					return false;

				}

				if ((Definedatsystemlevel())) {

					return false;

				}

				ExternalEntity_c[] v_ees = ExternalEntity_c
						.ExternalEntityInstances(modelRoot);

				int v_count = (v_ees.length);

				if ((p_Value.equals("formEE generic pkg"))) {

					v_count = Util_c.Getelementcountinsystem(
							Converttoinstance(), Elementtypeconstants_c.EE);

				}

				if ((v_count == 1 && getIsformal())) {

					return false;

				}

				return v_count != 0;

			}

			if ((p_Value.equals("unform"))) {

				return getIsformal();

			}

		}

		return false;

	} // End actionFilter
	public void Unformalize() {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Unformalize");
		final ModelRoot modelRoot = getModelRoot();
		ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR933(this);

		if (((v_ee != null))) {

			this.unrelateAcrossR933From(v_ee);

		}

		InteractionParticipant_c v_part = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		Message_c[] v_messages = Message_c.getManyMSG_MsOnR1007(v_part);

		Message_c v_message = null;
		for (int i37296 = 0; i37296 < v_messages.length; i37296++) {
			v_message = v_messages[i37296];

			if (v_message != null) {
				v_message.Unformalize();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		CommunicationLink_c[] v_links = CommunicationLink_c
				.getManyCOMM_LNKsOnR1133(v_part);

		CommunicationLink_c v_link = null;
		for (int i37297 = 0; i37297 < v_links.length; i37297++) {
			v_link = v_links[i37297];

			if (v_link != null) {
				v_link.Unformalize();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

	} // End unformalize
	public String Get_name() {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Get_name");
		final ModelRoot modelRoot = getModelRoot();
		return getLabel();

	} // End get_name
	public boolean Canrename() {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Canrename");
		final ModelRoot modelRoot = getModelRoot();
		return !getIsformal();

	} // End canRename
	public void Formalize(final java.util.UUID p_Eeid) {
		Ooaofooa.log.println(ILogger.OPERATION, "External Entity Participant",
				" Operation entered: ExternalEntityParticipant::Formalize");
		final ModelRoot modelRoot = getModelRoot();
		ExternalEntity_c v_ee = (ExternalEntity_c) modelRoot.getInstanceList(
				ExternalEntity_c.class).getGlobal(null, Gd_c.Null_unique_id());

		Package_c v_package = Package_c
				.getOneEP_PKGOnR8000(PackageableElement_c
						.getOnePE_PEOnR8001(InteractionParticipant_c
								.getOneSQ_POnR930(this)));

		boolean v_isInGenericPackage = (v_package != null);

		if ((!v_isInGenericPackage)) {

			v_ee = (ExternalEntity_c) modelRoot.getInstanceList(
					ExternalEntity_c.class).getGlobal(null, p_Eeid);

		}

		else {

			PackageableElement_c v_pe = (PackageableElement_c) modelRoot
					.getInstanceList(PackageableElement_c.class).getGlobal(
							null, p_Eeid);

			v_ee = ExternalEntity_c.getOneS_EEOnR8001(v_pe);

		}

		if ((getIsformal())) {

			Unformalize();

		}

		if (((v_ee != null))) {

			this.relateAcrossR933To(v_ee);

		}

	} // End formalize
	public boolean Formaleehasbridgeoperations() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Formaleehasbridgeoperations");
		final ModelRoot modelRoot = getModelRoot();
		ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR933(this);

		if (((v_ee != null))) {

			Bridge_c[] v_brgs = Bridge_c.getManyS_BRGsOnR19(v_ee);

			return (v_brgs.length != 0);

		}

		return false;

	} // End formalEEHasBridgeOperations
	public boolean Definedatsystemlevel() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Definedatsystemlevel");
		final ModelRoot modelRoot = getModelRoot();
		InteractionParticipant_c v_part = InteractionParticipant_c
				.getOneSQ_POnR930(this);

		return v_part.Definedatsystemlevel();

	} // End definedAtSystemLevel
	public int Getbridgeoperationcount() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Getbridgeoperationcount");
		final ModelRoot modelRoot = getModelRoot();
		if ((getIsformal())) {

			Bridge_c[] v_bridgeOps = Bridge_c
					.getManyS_BRGsOnR19(ExternalEntity_c
							.getManyS_EEsOnR933(this));

			return (v_bridgeOps.length);

		}

		return 0;

	} // End getBridgeOperationCount
	public Object Converttoinstance() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Converttoinstance");
		return this;
	} // End convertToInstance
	public void Resolveexternalentity() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Resolveexternalentity");
		final ModelRoot modelRoot = getModelRoot();
		ExternalEntity_c v_proxyEE = ExternalEntity_c.getOneS_EEOnR933(this);

		if (((v_proxyEE != null) && !Util_c.Isproxy(Converttoinstance()))) {

			PackageableElement_c v_packageableElem = PackageableElement_c
					.getOnePE_PEOnR8001(InteractionParticipant_c
							.getOneSQ_POnR930(this));

			Package_c v_package = Package_c
					.getOneEP_PKGOnR8000(v_packageableElem);

			Component_c v_component = Component_c
					.getOneC_COnR8003(v_packageableElem);

			boolean v_isInGenericPackage = (v_package != null)
					|| (v_component != null);

			if ((v_isInGenericPackage)) {

				if (((v_package == null))) {

					java.util.UUID v_rootCompIdInPkg = v_component
							.Getrootcomponentid();

					Component_c v_rootComponent = (Component_c) modelRoot
							.getInstanceList(Component_c.class).getGlobal(null,
									v_rootCompIdInPkg);

					v_package = Package_c
							.getOneEP_PKGOnR8000(PackageableElement_c
									.getOnePE_PEOnR8001(v_rootComponent));

				}

				if (v_packageableElem != null) {
					v_packageableElem.Resolveeerelativetoself("");
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

				class ComponentResultSet_test37713_c
						implements
							ClassQueryInterface_c {
					public boolean evaluate(Object candidate) {
						ComponentResultSet_c selected = (ComponentResultSet_c) candidate;
						return selected.getType() == Elementtypeconstants_c.EE;
					}
				}
				ComponentResultSet_c v_resultSet = ComponentResultSet_c
						.getOnePE_CRSOnR8007(v_component,
								new ComponentResultSet_test37713_c());

				PackageableElement_c[] v_results = PackageableElement_c
						.getManyPE_PEsOnR8004(ComponentVisibility_c
								.getManyPE_CVSsOnR8008(v_resultSet));

				if ((v_package != null)) {

					class SearchResultSet_test37714_c
							implements
								ClassQueryInterface_c {
						public boolean evaluate(Object candidate) {
							SearchResultSet_c selected = (SearchResultSet_c) candidate;
							return selected.getType() == Elementtypeconstants_c.EE;
						}
					}
					SearchResultSet_c v_pkgResultSet = SearchResultSet_c
							.getOnePE_SRSOnR8005(v_package,
									new SearchResultSet_test37714_c());

					v_results = PackageableElement_c
							.getManyPE_PEsOnR8002(ElementVisibility_c
									.getManyPE_VISsOnR8006(v_pkgResultSet));

				}

				ExternalEntity_c[] v_ees = ExternalEntity_c
						.getManyS_EEsOnR8001(v_results);

				ExternalEntity_c v_resolvedEE = (ExternalEntity_c) modelRoot
						.getInstanceList(ExternalEntity_c.class).getGlobal(
								null, Gd_c.Null_unique_id());

				ExternalEntity_c v_ee = null;
				for (int i37298 = 0; i37298 < v_ees.length; i37298++) {
					v_ee = v_ees[i37298];

					if ((v_ee.getKey_lett().equals(v_proxyEE.getKey_lett()) && v_ee
							.getName().equals(v_proxyEE.getName()))) {

						v_resolvedEE = v_ee;

						break;

					}

					else {

						if ((v_ee.getKey_lett().equals(v_proxyEE.getKey_lett()))) {

							v_resolvedEE = v_ee;

							break;

						}

						else {

							if ((v_ee.getName().equals(v_proxyEE.getName()))) {

								v_resolvedEE = v_ee;

								break;

							}

						}

					}

				}

				if (((v_resolvedEE != null))) {

					this.relateAcrossR933To(v_resolvedEE);

					Resolvemessageformalizations();

				}

				else {

					Unformalize();

				}

				return;

			}

			Domain_c v_dom = Domain_c.getOneS_DOMOnR8(v_proxyEE);

			if (((v_dom == null) || Util_c.Isproxy(v_dom.Converttoinstance()))) {

				String v_name = v_proxyEE.getName();

				String v_key_letters = v_proxyEE.getKey_lett();

				this.unrelateAcrossR933From(v_proxyEE);

				Domain_c v_domain = Domain_c.DomainInstance(modelRoot);

				class ExternalEntity_test37715_c
						implements
							ClassQueryInterface_c {
					ExternalEntity_test37715_c(String p37716, String p37717) {
						m_p37716 = p37716;
						m_p37717 = p37717;
					}
					private String m_p37716;
					private String m_p37717;
					public boolean evaluate(Object candidate) {
						ExternalEntity_c selected = (ExternalEntity_c) candidate;
						return (selected.getKey_lett().equals(m_p37716) && selected
								.getName().equals(m_p37717));
					}
				}
				ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR8(
						v_domain, new ExternalEntity_test37715_c(v_key_letters,
								v_name));

				if (((v_ee == null))) {

					class ExternalEntity_test37718_c
							implements
								ClassQueryInterface_c {
						ExternalEntity_test37718_c(String p37719) {
							m_p37719 = p37719;
						}
						private String m_p37719;
						public boolean evaluate(Object candidate) {
							ExternalEntity_c selected = (ExternalEntity_c) candidate;
							return (selected.getKey_lett().equals(m_p37719));
						}
					}
					v_ee = ExternalEntity_c.getOneS_EEOnR8(v_domain,
							new ExternalEntity_test37718_c(v_key_letters));

					if (((v_ee == null))) {

						class ExternalEntity_test37720_c
								implements
									ClassQueryInterface_c {
							ExternalEntity_test37720_c(String p37721) {
								m_p37721 = p37721;
							}
							private String m_p37721;
							public boolean evaluate(Object candidate) {
								ExternalEntity_c selected = (ExternalEntity_c) candidate;
								return (selected.getName().equals(m_p37721));
							}
						}
						v_ee = ExternalEntity_c.getOneS_EEOnR8(v_domain,
								new ExternalEntity_test37720_c(v_name));

					}

				}

				boolean v_eeResolved = (v_ee != null);

				if ((v_eeResolved)) {

					this.relateAcrossR933To(v_ee);

					Resolvemessageformalizations();

				}

				else {

					Unformalize();

				}

			}

		}

	} // End resolveExternalEntity
	public void Resolvemessageformalizations() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Resolvemessageformalizations");
		final ModelRoot modelRoot = getModelRoot();
		Message_c[] v_messages = Message_c
				.getManyMSG_MsOnR1007(InteractionParticipant_c
						.getManySQ_PsOnR930(this));

		Message_c v_message = null;
		for (int i37299 = 0; i37299 < v_messages.length; i37299++) {
			v_message = v_messages[i37299];

			SynchronousMessage_c v_syncMessage = SynchronousMessage_c
					.getOneMSG_SMOnR1018(v_message);

			AsynchronousMessage_c v_asyncMessage = AsynchronousMessage_c
					.getOneMSG_AMOnR1018(v_message);

			if (((v_syncMessage != null))) {

				if ((!v_syncMessage.getIsformal())) {

					continue;

				}

				BridgeMessage_c v_bridgeMsg = BridgeMessage_c
						.getOneMSG_BOnR1020(v_syncMessage);

				Bridge_c v_opProxy = Bridge_c.getOneS_BRGOnR1012(v_bridgeMsg);

				class Bridge_test37722_c implements ClassQueryInterface_c {
					Bridge_test37722_c(String p37723) {
						m_p37723 = p37723;
					}
					private String m_p37723;
					public boolean evaluate(Object candidate) {
						Bridge_c selected = (Bridge_c) candidate;
						return (selected.getName().equals(m_p37723));
					}
				}
				Bridge_c v_operation = Bridge_c.getOneS_BRGOnR19(
						ExternalEntity_c.getManyS_EEsOnR933(this),
						new Bridge_test37722_c(v_opProxy.getName()));

				if (((v_operation != null))) {

					if (v_syncMessage != null) {
						v_syncMessage.Formalizewithbridgeoperation(v_operation
								.getBrg_id());
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

				else {

					if (v_syncMessage != null) {
						v_syncMessage.Unformalize();
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

			}

		}

		Lifespan_c v_ls = Lifespan_c.getOneSQ_LSOnR940(InteractionParticipant_c
				.getOneSQ_POnR930(this));

		if (((v_ls != null))) {

			v_messages = Message_c
					.getManyMSG_MsOnR1007(InteractionParticipant_c
							.getManySQ_PsOnR930(v_ls));

			for (int i37300 = 0; i37300 < v_messages.length; i37300++) {
				v_message = v_messages[i37300];

				SynchronousMessage_c v_syncMessage = SynchronousMessage_c
						.getOneMSG_SMOnR1018(v_message);

				AsynchronousMessage_c v_asyncMessage = AsynchronousMessage_c
						.getOneMSG_AMOnR1018(v_message);

				if (((v_syncMessage != null))) {

					if ((!v_syncMessage.getIsformal())) {

						continue;

					}

					BridgeMessage_c v_bridgeMsg = BridgeMessage_c
							.getOneMSG_BOnR1020(v_syncMessage);

					Bridge_c v_opProxy = Bridge_c
							.getOneS_BRGOnR1012(v_bridgeMsg);

					class Bridge_test37724_c implements ClassQueryInterface_c {
						Bridge_test37724_c(String p37725) {
							m_p37725 = p37725;
						}
						private String m_p37725;
						public boolean evaluate(Object candidate) {
							Bridge_c selected = (Bridge_c) candidate;
							return (selected.getName().equals(m_p37725));
						}
					}
					Bridge_c v_operation = Bridge_c.getOneS_BRGOnR19(
							ExternalEntity_c.getManyS_EEsOnR933(this),
							new Bridge_test37724_c(v_opProxy.getName()));

					if (((v_operation != null))) {

						if (v_syncMessage != null) {
							v_syncMessage
									.Formalizewithbridgeoperation(v_operation
											.getBrg_id());
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

					else {

						if (v_syncMessage != null) {
							v_syncMessage.Unformalize();
						} else {
							Throwable t = new Throwable();
							t.fillInStackTrace();
							CorePlugin
									.logError(
											"Attempted to call an operation on a null instance.",
											t);
						}

					}

				}

			}

		}

	} // End resolveMessageFormalizations
	public Object Getconfigurationinheritanceelementid() {
		Ooaofooa.log
				.println(
						ILogger.OPERATION,
						"External Entity Participant",
						" Operation entered: ExternalEntityParticipant::Getconfigurationinheritanceelementid");
		final ModelRoot modelRoot = getModelRoot();
		ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR933(this);

		if (((v_ee != null))) {

			return v_ee.Converttoinstance();

		}

		return Converttoinstance();

	} // End getConfigurationInheritanceElementId

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		if (adapter == IActionFilter.class) {
			return ExternalEntityParticipantActionFilter.getSingleton();
		}
		return null;
	}
} // end External Entity Participant
