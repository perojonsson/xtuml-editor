      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Bridge_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_BRIDGE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Bridge_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Bridge_c(ModelRoot modelRoot,
       java.util.UUID         p_m_brg_id,
       java.util.UUID         p_m_ee_id,
       String       p_m_name,
       String       p_m_descrip,
       int          p_m_brg_typ,
       java.util.UUID         p_m_dt_id,
       String       p_m_action_semantics_internal,
       int  p_m_suc_pars,
       String       p_m_return_dimensions)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_brg_id = IdAssigner.preprocessUUID(p_m_brg_id);
       //extract 28 bit value only            
       m_brg_idLongBased = 0xfffffff & p_m_brg_id.getLeastSignificantBits();
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       m_brg_typ = p_m_brg_typ;
       // default value for m_action_semantics
       m_suc_pars = p_m_suc_pars;
       m_action_semantics_internal = p_m_action_semantics_internal;
       m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
    setUniqueId(m_brg_id);
    Object [] key = {m_brg_id};
    addInstanceToMap(key);
  }
  static public Bridge_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_brg_id,
       java.util.UUID         p_m_ee_id,
       String       p_m_name,
       String       p_m_descrip,
       int          p_m_brg_typ,
       java.util.UUID         p_m_dt_id,
       String       p_m_action_semantics_internal,
       int  p_m_suc_pars,
       String       p_m_return_dimensions, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Bridge_c.class);
      Bridge_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_brg_id};
          new_inst = (Bridge_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_brg_id = IdAssigner.preprocessUUID(p_m_brg_id);
       //extract 28 bit value only            
       new_inst.m_brg_idLongBased = 0xfffffff & p_m_brg_id.getLeastSignificantBits();
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       new_inst.m_brg_typ = p_m_brg_typ;
       // default value for m_action_semantics
       new_inst.m_suc_pars = p_m_suc_pars;
       new_inst.m_action_semantics_internal = p_m_action_semantics_internal;
       new_inst.m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Bridge_c(modelRoot,
p_m_brg_id,
p_m_ee_id,
p_m_name,
p_m_descrip,
p_m_brg_typ,
p_m_dt_id,
p_m_action_semantics_internal,
p_m_suc_pars,
p_m_return_dimensions
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public Bridge_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_brg_id,
       java.util.UUID         p_m_ee_id,
       String       p_m_name,
       String       p_m_descrip,
       int          p_m_brg_typ,
       java.util.UUID         p_m_dt_id,
       String       p_m_action_semantics_internal,
       int  p_m_suc_pars,
       String       p_m_return_dimensions){
    InstanceList instances = modelRoot.getInstanceList(Bridge_c.class);
    Bridge_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_brg_id
            };
        source = (Bridge_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_brg_id = IdAssigner.preprocessUUID(p_m_brg_id);
       //extract 28 bit value only            
       source.m_brg_idLongBased = 0xfffffff & p_m_brg_id.getLeastSignificantBits();
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       source.m_brg_typ = p_m_brg_typ;
       // default value for m_action_semantics
       source.m_suc_pars = p_m_suc_pars;
       source.m_action_semantics_internal = p_m_action_semantics_internal;
       source.m_return_dimensions = p_m_return_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    Bridge_c new_inst = new Bridge_c(modelRoot,
p_m_brg_id,
p_m_ee_id,
p_m_name,
p_m_descrip,
p_m_brg_typ,
p_m_dt_id,
p_m_action_semantics_internal,
p_m_suc_pars,
p_m_return_dimensions
);
    return new_inst;
  }
  public Bridge_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_brg_id = idAssigner.createUUID();
     m_name = "";   
     m_descrip = "";   
     m_action_semantics = "";   
     m_suc_pars = Parsestatus_c.OOA_UNINITIALIZED_ENUM;
     m_action_semantics_internal = "";   
     m_return_dimensions = "";   
     m_dt_id = IdAssigner.NULL_UUID;   
     m_ee_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_brg_id);
    Object [] key = {m_brg_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_brg_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_brg_id !=  p_newKey ){
	
		m_brg_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Bridge_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Bridge_c)) {
           return false;
       }
       
       Bridge_c me = (Bridge_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getBrg_id()) || IdAssigner.NULL_UUID.equals(((Bridge_c)elem).getBrg_id())) && this != elem)) {
      	return false;
      }
      if (!getBrg_id().equals(((Bridge_c)elem).getBrg_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Bridge_c)) {
           return false;
       }
       
       Bridge_c me = (Bridge_c)elem;
      if (!getBrg_id().equals(((Bridge_c)elem).getBrg_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_brg_id ;
  private long m_brg_idLongBased ;
  private String       m_name ;
  private String       m_descrip ;
  private int          m_brg_typ ;
  private String       m_action_semantics ;
  private int  m_suc_pars ;
  private String       m_action_semantics_internal ;
  private String       m_return_dimensions ;
  private java.util.UUID         m_dt_id ;
  private java.util.UUID         m_ee_id ;
      
// declare association references from this class
  
  
    
// referring navigation

ExternalEntity_c ProvidesAccessToExternalEntity ;
public void relateAcrossR19To(ExternalEntity_c target)
{
	relateAcrossR19To(target, true);
}
public void relateAcrossR19To(ExternalEntity_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ProvidesAccessToExternalEntity) return;  // already related

    if ( ProvidesAccessToExternalEntity != target ) {
    
    Object oldKey = getInstanceKey();

    if (ProvidesAccessToExternalEntity != null) {
    
        ProvidesAccessToExternalEntity.clearBackPointerR19To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Bridge_c.relateAcrossR19To(ExternalEntity_c target)", 
			"Relate performed across R19 from Bridge to External Entity without unrelate of prior instance.");  
		}
    }
                
    	ProvidesAccessToExternalEntity = target ;
        if(IdAssigner.NULL_UUID.equals(target.getEe_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_ee_id = target.getEe_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR19To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "19", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR19From(ExternalEntity_c target)
{
	unrelateAcrossR19From(target, true);
}
public void unrelateAcrossR19From(ExternalEntity_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ProvidesAccessToExternalEntity == null) return;  // already unrelated
	
	if (target != ProvidesAccessToExternalEntity) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R19", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR19To(this);
    }
    

      if(ProvidesAccessToExternalEntity != null) {
      
        m_ee_id = ProvidesAccessToExternalEntity.getEe_id();
        if(IdAssigner.NULL_UUID.equals(m_ee_id))
        {
          m_ee_id = ProvidesAccessToExternalEntity.getEe_idCachedValue();
        }       
        ProvidesAccessToExternalEntity = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "19", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Bridge_c getOneS_BRGOnR19(ExternalEntity_c [] targets)
{
    return getOneS_BRGOnR19(targets, null);
}

public static Bridge_c getOneS_BRGOnR19(ExternalEntity_c [] targets, ClassQueryInterface_c test)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_BRGOnR19(targets[i], test);
        }
    }

    return ret_val;
}

public static Bridge_c getOneS_BRGOnR19(ExternalEntity_c target)
{
  return getOneS_BRGOnR19(target, null);
}

public static Bridge_c getOneS_BRGOnR19(ExternalEntity_c target, boolean loadComponent)
{
    return getOneS_BRGOnR19(target.getModelRoot(), target, null, loadComponent);
}

public static Bridge_c getOneS_BRGOnR19(ExternalEntity_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_BRGOnR19(target.getModelRoot(), target, test);
  }
  return null;
}

public static Bridge_c getOneS_BRGOnR19(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test)
{
	return getOneS_BRGOnR19(modelRoot, target, test, true);
}

public static Bridge_c getOneS_BRGOnR19(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_BRGOnR19(modelRoot,target,test);
}
private static Bridge_c find_getOneS_BRGOnR19(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_UsesBridgeUses_R19) {
	    for ( int i = 0; i < target.backPointer_UsesBridgeUses_R19.size(); ++i ) {
	      Bridge_c source = (Bridge_c)target.backPointer_UsesBridgeUses_R19.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Bridge_c [] getManyS_BRGsOnR19(ExternalEntity_c [] targets)
{
  return getManyS_BRGsOnR19(targets, null);
}
public static Bridge_c [] getManyS_BRGsOnR19(ExternalEntity_c [] targets, boolean loadComponent)
{
  return getManyS_BRGsOnR19(targets, null, loadComponent);
}
public static Bridge_c [] getManyS_BRGsOnR19(ExternalEntity_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR19(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR19(ExternalEntity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Bridge_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Bridge_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_UsesBridgeUses_R19) {
	    for (int j = 0; j < targets[i].backPointer_UsesBridgeUses_R19.size(); ++j) {
	      Bridge_c source = (Bridge_c)targets[i].backPointer_UsesBridgeUses_R19.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Bridge_c[] ret_set = new Bridge_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Bridge_c[0];
  }
  }

public static Bridge_c [] getManyS_BRGsOnR19(ExternalEntity_c target)
{
  return getManyS_BRGsOnR19(target, null);
}

public static Bridge_c [] getManyS_BRGsOnR19(ExternalEntity_c target, boolean loadComponent)
{
  return getManyS_BRGsOnR19(target, null, loadComponent);
}

public static Bridge_c [] getManyS_BRGsOnR19(ExternalEntity_c target, ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR19(target, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR19(ExternalEntity_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Bridge_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_UsesBridgeUses_R19) {
    for (int i = 0; i < target.backPointer_UsesBridgeUses_R19.size(); ++i) {
      Bridge_c source = (Bridge_c)target.backPointer_UsesBridgeUses_R19.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Bridge_c[] ret_set = new Bridge_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Bridge_c[0];
	}
  }


  
    
// referring navigation

DataType_c ReturnValueDefinedByDataType ;
public void relateAcrossR20To(DataType_c target)
{
	relateAcrossR20To(target, true);
}
public void relateAcrossR20To(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ReturnValueDefinedByDataType) return;  // already related

    if ( ReturnValueDefinedByDataType != target ) {
    
    Object oldKey = getInstanceKey();

    if (ReturnValueDefinedByDataType != null) {
        UmlProblem.removeXtUMLProblem(this, ReturnValueDefinedByDataType);
    
        ReturnValueDefinedByDataType.clearBackPointerR20To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Bridge_c.relateAcrossR20To(DataType_c target)", 
			"Relate performed across R20 from Bridge to Data Type without unrelate of prior instance.");  
		}
    }
                
    	ReturnValueDefinedByDataType = target ;
        if(IdAssigner.NULL_UUID.equals(target.getDt_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_dt_id = target.getDt_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR20To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "20", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR20From(DataType_c target)
{
	unrelateAcrossR20From(target, true);
}
public void unrelateAcrossR20From(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ReturnValueDefinedByDataType == null) return;  // already unrelated
	
	if (target != ReturnValueDefinedByDataType) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R20", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR20To(this);
    }
    

      if(ReturnValueDefinedByDataType != null) {
      
        m_dt_id = ReturnValueDefinedByDataType.getDt_id();
        if(IdAssigner.NULL_UUID.equals(m_dt_id))
        {
          m_dt_id = ReturnValueDefinedByDataType.getDt_idCachedValue();
        }       
        ReturnValueDefinedByDataType = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "20", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Bridge_c getOneS_BRGOnR20(DataType_c [] targets)
{
    return getOneS_BRGOnR20(targets, null);
}

public static Bridge_c getOneS_BRGOnR20(DataType_c [] targets, ClassQueryInterface_c test)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_BRGOnR20(targets[i], test);
        }
    }

    return ret_val;
}

public static Bridge_c getOneS_BRGOnR20(DataType_c target)
{
  return getOneS_BRGOnR20(target, null);
}

public static Bridge_c getOneS_BRGOnR20(DataType_c target, boolean loadComponent)
{
    return getOneS_BRGOnR20(target.getModelRoot(), target, null, loadComponent);
}

public static Bridge_c getOneS_BRGOnR20(DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_BRGOnR20(target.getModelRoot(), target, test);
  }
  return null;
}

public static Bridge_c getOneS_BRGOnR20(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
	return getOneS_BRGOnR20(modelRoot, target, test, true);
}

public static Bridge_c getOneS_BRGOnR20(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Bridge_c result = null;
  
  result=find_getOneS_BRGOnR20(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,Bridge_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_BRGOnR20(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Bridge_c find_getOneS_BRGOnR20(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20) {
	    for ( int i = 0; i < target.backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20.size(); ++i ) {
	      Bridge_c source = (Bridge_c)target.backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Bridge_c [] getManyS_BRGsOnR20(DataType_c [] targets)
{
  return getManyS_BRGsOnR20(targets, null);
}
public static Bridge_c [] getManyS_BRGsOnR20(DataType_c [] targets, boolean loadComponent)
{
  return getManyS_BRGsOnR20(targets, null, loadComponent);
}
public static Bridge_c [] getManyS_BRGsOnR20(DataType_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR20(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR20(DataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Bridge_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, Bridge_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Bridge_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20) {
	    for (int j = 0; j < targets[i].backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20.size(); ++j) {
	      Bridge_c source = (Bridge_c)targets[i].backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Bridge_c[] ret_set = new Bridge_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Bridge_c[0];
  }
  }

public static Bridge_c [] getManyS_BRGsOnR20(DataType_c target)
{
  return getManyS_BRGsOnR20(target, null);
}

public static Bridge_c [] getManyS_BRGsOnR20(DataType_c target, boolean loadComponent)
{
  return getManyS_BRGsOnR20(target, null, loadComponent);
}

public static Bridge_c [] getManyS_BRGsOnR20(DataType_c target, ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR20(target, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR20(DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Bridge_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, Bridge_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20) {
    for (int i = 0; i < target.backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20.size(); ++i) {
      Bridge_c source = (Bridge_c)target.backPointer_DefinesTheReturnValueBridgeDefinesTheReturnValue_R20.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Bridge_c[] ret_set = new Bridge_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Bridge_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<Dimensions_c> backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R50 = new ArrayList<Dimensions_c>();

public void setDimensionsOrderInChildListR50(Dimensions_c target, int index) {
	unrelateAcrossR50From(target);
	Dimensions_c[] elements = Dimensions_c.getManyS_DIMsOnR50(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR50From((Dimensions_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR50To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR50To((Dimensions_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR50To(Dimensions_c target)
{
  if (target != null) {
    target.relateAcrossR50To(this, true) ;
  }
}

public void relateAcrossR50To(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR50To(this, notifyChanges) ;
  }
}

public void setBackPointerR50To(Dimensions_c target)
{
  	synchronized (backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R50) {
		backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R50.add(target);
	}
}

public void unrelateAcrossR50From(Dimensions_c target)
{
  if (target != null) {
    target.unrelateAcrossR50From(this, true) ;
  }
}

public void unrelateAcrossR50From(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR50From(this, notifyChanges) ;
  }
}

public void clearBackPointerR50To(Dimensions_c target)
{
  synchronized (backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R50) {
	    backPointer_ReturnValueMayHaveDimensionsReturnValueMayHave_R50.remove(target);
	}
}

public static Bridge_c getOneS_BRGOnR50(Dimensions_c [] targets)
{
    return getOneS_BRGOnR50(targets, null);
}

public static Bridge_c getOneS_BRGOnR50(Dimensions_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_BRGOnR50(targets, test, true);
}

public static Bridge_c getOneS_BRGOnR50(Dimensions_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Bridge_c candidate_val = getOneS_BRGOnR50(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_BRGOnR50(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Bridge_c getOneS_BRGOnR50(Dimensions_c target)
{
	return getOneS_BRGOnR50(target, true);
}
public static Bridge_c getOneS_BRGOnR50(Dimensions_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.DefinesReturnValueDimensionsForBridge ;
  } else {
    return null;
  }
}

public static Bridge_c [] getManyS_BRGsOnR50(Dimensions_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR50(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR50(Dimensions_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Bridge_c[0];
  
  
  LinkedHashSet<Bridge_c> elementsSet = new LinkedHashSet<Bridge_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].DefinesReturnValueDimensionsForBridge == null)
	  targets[i].loadProxy();
    Bridge_c associate = targets[i].DefinesReturnValueDimensionsForBridge;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Bridge_c[] result = new Bridge_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Bridge_c [] getManyS_BRGsOnR50(Dimensions_c [] targets)
{
  return getManyS_BRGsOnR50(targets, null);
}

public static Bridge_c [] getManyS_BRGsOnR50(Dimensions_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Dimensions_c [] targetArray = new Dimensions_c[1];
    targetArray[0] = target;
    return getManyS_BRGsOnR50(targetArray, test, loadComponent);
  } else {
    Bridge_c [] result = new Bridge_c [0] ;
    return result ;
  }
  
}

public static Bridge_c [] getManyS_BRGsOnR50(Dimensions_c target,
    ClassQueryInterface_c test)
{
    return getManyS_BRGsOnR50(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR50(Dimensions_c target)
{
    return getManyS_BRGsOnR50(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR50(Dimensions_c target, boolean loadComponent)
{
    return getManyS_BRGsOnR50(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<BridgeParameter_c> backPointer_IsPartOfBridgeParameterIsPartOf_R21 = new ArrayList<BridgeParameter_c>();

public void setBridgeParameterOrderInChildListR21(BridgeParameter_c target, int index) {
	unrelateAcrossR21From(target);
	BridgeParameter_c[] elements = BridgeParameter_c.getManyS_BPARMsOnR21(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR21From((BridgeParameter_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR21To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR21To((BridgeParameter_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR21To(BridgeParameter_c target)
{
  if (target != null) {
    target.relateAcrossR21To(this, true) ;
  }
}

public void relateAcrossR21To(BridgeParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR21To(this, notifyChanges) ;
  }
}

public void setBackPointerR21To(BridgeParameter_c target)
{
  	synchronized (backPointer_IsPartOfBridgeParameterIsPartOf_R21) {
		backPointer_IsPartOfBridgeParameterIsPartOf_R21.add(target);
	}
}

public void unrelateAcrossR21From(BridgeParameter_c target)
{
  if (target != null) {
    target.unrelateAcrossR21From(this, true) ;
  }
}

public void unrelateAcrossR21From(BridgeParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR21From(this, notifyChanges) ;
  }
}

public void clearBackPointerR21To(BridgeParameter_c target)
{
  synchronized (backPointer_IsPartOfBridgeParameterIsPartOf_R21) {
	    backPointer_IsPartOfBridgeParameterIsPartOf_R21.remove(target);
	}
}

public static Bridge_c getOneS_BRGOnR21(BridgeParameter_c [] targets)
{
    return getOneS_BRGOnR21(targets, null);
}

public static Bridge_c getOneS_BRGOnR21(BridgeParameter_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_BRGOnR21(targets, test, true);
}

public static Bridge_c getOneS_BRGOnR21(BridgeParameter_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Bridge_c candidate_val = getOneS_BRGOnR21(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_BRGOnR21(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Bridge_c getOneS_BRGOnR21(BridgeParameter_c target)
{
	return getOneS_BRGOnR21(target, true);
}
public static Bridge_c getOneS_BRGOnR21(BridgeParameter_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ContainsBridge ;
  } else {
    return null;
  }
}

public static Bridge_c [] getManyS_BRGsOnR21(BridgeParameter_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR21(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR21(BridgeParameter_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Bridge_c[0];
  
  
  LinkedHashSet<Bridge_c> elementsSet = new LinkedHashSet<Bridge_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ContainsBridge == null)
	  targets[i].loadProxy();
    Bridge_c associate = targets[i].ContainsBridge;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Bridge_c[] result = new Bridge_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Bridge_c [] getManyS_BRGsOnR21(BridgeParameter_c [] targets)
{
  return getManyS_BRGsOnR21(targets, null);
}

public static Bridge_c [] getManyS_BRGsOnR21(BridgeParameter_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BridgeParameter_c [] targetArray = new BridgeParameter_c[1];
    targetArray[0] = target;
    return getManyS_BRGsOnR21(targetArray, test, loadComponent);
  } else {
    Bridge_c [] result = new Bridge_c [0] ;
    return result ;
  }
  
}

public static Bridge_c [] getManyS_BRGsOnR21(BridgeParameter_c target,
    ClassQueryInterface_c test)
{
    return getManyS_BRGsOnR21(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR21(BridgeParameter_c target)
{
    return getManyS_BRGsOnR21(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR21(BridgeParameter_c target, boolean loadComponent)
{
    return getManyS_BRGsOnR21(target, null, loadComponent);
}


    
  
  
// referred to navigation

AutomaticWiring_c backPointer_IsExecutedThroughAutomaticWiringIsExecutedThrough_R3200;

public void setAutomaticWiringOrderInChildListR3200(AutomaticWiring_c target, int index) {
	unrelateAcrossR3200From(target);
	AutomaticWiring_c[] elements = AutomaticWiring_c.getManyS_AWsOnR3200(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR3200From((AutomaticWiring_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR3200To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR3200To((AutomaticWiring_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR3200To(AutomaticWiring_c target)
{
  if (target != null) {
    target.relateAcrossR3200To(this, true) ;
  }
}

public void relateAcrossR3200To(AutomaticWiring_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR3200To(this, notifyChanges) ;
  }
}

public void setBackPointerR3200To(AutomaticWiring_c target)
{
    backPointer_IsExecutedThroughAutomaticWiringIsExecutedThrough_R3200 = target;
}

public void unrelateAcrossR3200From(AutomaticWiring_c target)
{
  if (target != null) {
    target.unrelateAcrossR3200From(this, true) ;
  }
}

public void unrelateAcrossR3200From(AutomaticWiring_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR3200From(this, notifyChanges) ;
  }
}

public void clearBackPointerR3200To(AutomaticWiring_c target)
{
	if (target == backPointer_IsExecutedThroughAutomaticWiringIsExecutedThrough_R3200) {
		backPointer_IsExecutedThroughAutomaticWiringIsExecutedThrough_R3200 = null;
	}
}

public static Bridge_c getOneS_BRGOnR3200(AutomaticWiring_c [] targets)
{
    return getOneS_BRGOnR3200(targets, null);
}

public static Bridge_c getOneS_BRGOnR3200(AutomaticWiring_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_BRGOnR3200(targets, test, true);
}

public static Bridge_c getOneS_BRGOnR3200(AutomaticWiring_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Bridge_c candidate_val = getOneS_BRGOnR3200(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_BRGOnR3200(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Bridge_c getOneS_BRGOnR3200(AutomaticWiring_c target)
{
	return getOneS_BRGOnR3200(target, true);
}
public static Bridge_c getOneS_BRGOnR3200(AutomaticWiring_c target, boolean loadComponent)
{
  if (target != null) {
    return target.ForBridgeExecutionBridge ;
  } else {
    return null;
  }
}

public static Bridge_c [] getManyS_BRGsOnR3200(AutomaticWiring_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR3200(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR3200(AutomaticWiring_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Bridge_c[0];
  
  
  LinkedHashSet<Bridge_c> elementsSet = new LinkedHashSet<Bridge_c>();
  for (int i = 0; i < targets.length; i++) {
    Bridge_c associate = targets[i].ForBridgeExecutionBridge;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Bridge_c[] result = new Bridge_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Bridge_c [] getManyS_BRGsOnR3200(AutomaticWiring_c [] targets)
{
  return getManyS_BRGsOnR3200(targets, null);
}

public static Bridge_c [] getManyS_BRGsOnR3200(AutomaticWiring_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    AutomaticWiring_c [] targetArray = new AutomaticWiring_c[1];
    targetArray[0] = target;
    return getManyS_BRGsOnR3200(targetArray, test, loadComponent);
  } else {
    Bridge_c [] result = new Bridge_c [0] ;
    return result ;
  }
  
}

public static Bridge_c [] getManyS_BRGsOnR3200(AutomaticWiring_c target,
    ClassQueryInterface_c test)
{
    return getManyS_BRGsOnR3200(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR3200(AutomaticWiring_c target)
{
    return getManyS_BRGsOnR3200(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR3200(AutomaticWiring_c target, boolean loadComponent)
{
    return getManyS_BRGsOnR3200(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<BridgeValue_c> backPointer_BridgeValue_R828 = new ArrayList<BridgeValue_c>();

public void setBridgeValueOrderInChildListR828(BridgeValue_c target, int index) {
	unrelateAcrossR828From(target);
	BridgeValue_c[] elements = BridgeValue_c.getManyV_BRVsOnR828(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR828From((BridgeValue_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR828To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR828To((BridgeValue_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR828To(BridgeValue_c target)
{
  if (target != null) {
    target.relateAcrossR828To(this, true) ;
  }
}

public void relateAcrossR828To(BridgeValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR828To(this, notifyChanges) ;
  }
}

public void setBackPointerR828To(BridgeValue_c target)
{
  	synchronized (backPointer_BridgeValue_R828) {
		backPointer_BridgeValue_R828.add(target);
	}
}

public void unrelateAcrossR828From(BridgeValue_c target)
{
  if (target != null) {
    target.unrelateAcrossR828From(this, true) ;
  }
}

public void unrelateAcrossR828From(BridgeValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR828From(this, notifyChanges) ;
  }
}

public void clearBackPointerR828To(BridgeValue_c target)
{
  synchronized (backPointer_BridgeValue_R828) {
	    backPointer_BridgeValue_R828.remove(target);
	}
}

public static Bridge_c getOneS_BRGOnR828(BridgeValue_c [] targets)
{
    return getOneS_BRGOnR828(targets, null);
}

public static Bridge_c getOneS_BRGOnR828(BridgeValue_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_BRGOnR828(targets, test, true);
}

public static Bridge_c getOneS_BRGOnR828(BridgeValue_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Bridge_c candidate_val = getOneS_BRGOnR828(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_BRGOnR828(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Bridge_c getOneS_BRGOnR828(BridgeValue_c target)
{
	return getOneS_BRGOnR828(target, true);
}
public static Bridge_c getOneS_BRGOnR828(BridgeValue_c target, boolean loadComponent)
{
  if (target != null) {
    return target.Bridge ;
  } else {
    return null;
  }
}

public static Bridge_c [] getManyS_BRGsOnR828(BridgeValue_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR828(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR828(BridgeValue_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Bridge_c[0];
  
  
  LinkedHashSet<Bridge_c> elementsSet = new LinkedHashSet<Bridge_c>();
  for (int i = 0; i < targets.length; i++) {
    Bridge_c associate = targets[i].Bridge;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Bridge_c[] result = new Bridge_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Bridge_c [] getManyS_BRGsOnR828(BridgeValue_c [] targets)
{
  return getManyS_BRGsOnR828(targets, null);
}

public static Bridge_c [] getManyS_BRGsOnR828(BridgeValue_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BridgeValue_c [] targetArray = new BridgeValue_c[1];
    targetArray[0] = target;
    return getManyS_BRGsOnR828(targetArray, test, loadComponent);
  } else {
    Bridge_c [] result = new Bridge_c [0] ;
    return result ;
  }
  
}

public static Bridge_c [] getManyS_BRGsOnR828(BridgeValue_c target,
    ClassQueryInterface_c test)
{
    return getManyS_BRGsOnR828(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR828(BridgeValue_c target)
{
    return getManyS_BRGsOnR828(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR828(BridgeValue_c target, boolean loadComponent)
{
    return getManyS_BRGsOnR828(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<BridgeMessage_c> backPointer_IsInvokedByBridgeMessageIsInvokedBy_R1012 = new ArrayList<BridgeMessage_c>();

public void setBridgeMessageOrderInChildListR1012(BridgeMessage_c target, int index) {
	unrelateAcrossR1012From(target);
	BridgeMessage_c[] elements = BridgeMessage_c.getManyMSG_BsOnR1012(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1012From((BridgeMessage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1012To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1012To((BridgeMessage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1012To(BridgeMessage_c target)
{
  if (target != null) {
    target.relateAcrossR1012To(this, true) ;
  }
}

public void relateAcrossR1012To(BridgeMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1012To(this, notifyChanges) ;
  }
}

public void setBackPointerR1012To(BridgeMessage_c target)
{
  	synchronized (backPointer_IsInvokedByBridgeMessageIsInvokedBy_R1012) {
		backPointer_IsInvokedByBridgeMessageIsInvokedBy_R1012.add(target);
	}
}

public void unrelateAcrossR1012From(BridgeMessage_c target)
{
  if (target != null) {
    target.unrelateAcrossR1012From(this, true) ;
  }
}

public void unrelateAcrossR1012From(BridgeMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1012From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1012To(BridgeMessage_c target)
{
  synchronized (backPointer_IsInvokedByBridgeMessageIsInvokedBy_R1012) {
	    backPointer_IsInvokedByBridgeMessageIsInvokedBy_R1012.remove(target);
	}
}

public static Bridge_c getOneS_BRGOnR1012(BridgeMessage_c [] targets)
{
    return getOneS_BRGOnR1012(targets, null);
}

public static Bridge_c getOneS_BRGOnR1012(BridgeMessage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_BRGOnR1012(targets, test, true);
}

public static Bridge_c getOneS_BRGOnR1012(BridgeMessage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Bridge_c candidate_val = getOneS_BRGOnR1012(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_BRGOnR1012(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Bridge_c getOneS_BRGOnR1012(BridgeMessage_c target)
{
	return getOneS_BRGOnR1012(target, true);
}
public static Bridge_c getOneS_BRGOnR1012(BridgeMessage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsInvocationOfBridge != null){
		target.IsInvocationOfBridge.loadProxy();
	}
	}
    return target.IsInvocationOfBridge ;
  } else {
    return null;
  }
}

public static Bridge_c [] getManyS_BRGsOnR1012(BridgeMessage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR1012(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR1012(BridgeMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Bridge_c[0];
  
  
  LinkedHashSet<Bridge_c> elementsSet = new LinkedHashSet<Bridge_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsInvocationOfBridge == null)
	  targets[i].loadProxy();
    Bridge_c associate = targets[i].IsInvocationOfBridge;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Bridge_c[] result = new Bridge_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Bridge_c [] getManyS_BRGsOnR1012(BridgeMessage_c [] targets)
{
  return getManyS_BRGsOnR1012(targets, null);
}

public static Bridge_c [] getManyS_BRGsOnR1012(BridgeMessage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BridgeMessage_c [] targetArray = new BridgeMessage_c[1];
    targetArray[0] = target;
    return getManyS_BRGsOnR1012(targetArray, test, loadComponent);
  } else {
    Bridge_c [] result = new Bridge_c [0] ;
    return result ;
  }
  
}

public static Bridge_c [] getManyS_BRGsOnR1012(BridgeMessage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_BRGsOnR1012(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR1012(BridgeMessage_c target)
{
    return getManyS_BRGsOnR1012(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR1012(BridgeMessage_c target, boolean loadComponent)
{
    return getManyS_BRGsOnR1012(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<BridgeInvocation_c> backPointer_BridgeInvocation_R674 = new ArrayList<BridgeInvocation_c>();

public void setBridgeInvocationOrderInChildListR674(BridgeInvocation_c target, int index) {
	unrelateAcrossR674From(target);
	BridgeInvocation_c[] elements = BridgeInvocation_c.getManyACT_BRGsOnR674(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR674From((BridgeInvocation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR674To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR674To((BridgeInvocation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR674To(BridgeInvocation_c target)
{
  if (target != null) {
    target.relateAcrossR674To(this, true) ;
  }
}

public void relateAcrossR674To(BridgeInvocation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR674To(this, notifyChanges) ;
  }
}

public void setBackPointerR674To(BridgeInvocation_c target)
{
  	synchronized (backPointer_BridgeInvocation_R674) {
		backPointer_BridgeInvocation_R674.add(target);
	}
}

public void unrelateAcrossR674From(BridgeInvocation_c target)
{
  if (target != null) {
    target.unrelateAcrossR674From(this, true) ;
  }
}

public void unrelateAcrossR674From(BridgeInvocation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR674From(this, notifyChanges) ;
  }
}

public void clearBackPointerR674To(BridgeInvocation_c target)
{
  synchronized (backPointer_BridgeInvocation_R674) {
	    backPointer_BridgeInvocation_R674.remove(target);
	}
}

public static Bridge_c getOneS_BRGOnR674(BridgeInvocation_c [] targets)
{
    return getOneS_BRGOnR674(targets, null);
}

public static Bridge_c getOneS_BRGOnR674(BridgeInvocation_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_BRGOnR674(targets, test, true);
}

public static Bridge_c getOneS_BRGOnR674(BridgeInvocation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Bridge_c candidate_val = getOneS_BRGOnR674(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_BRGOnR674(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Bridge_c getOneS_BRGOnR674(BridgeInvocation_c target)
{
	return getOneS_BRGOnR674(target, true);
}
public static Bridge_c getOneS_BRGOnR674(BridgeInvocation_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsAnInvocationOfBridge ;
  } else {
    return null;
  }
}

public static Bridge_c [] getManyS_BRGsOnR674(BridgeInvocation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR674(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR674(BridgeInvocation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Bridge_c[0];
  
  
  LinkedHashSet<Bridge_c> elementsSet = new LinkedHashSet<Bridge_c>();
  for (int i = 0; i < targets.length; i++) {
    Bridge_c associate = targets[i].IsAnInvocationOfBridge;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Bridge_c[] result = new Bridge_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Bridge_c [] getManyS_BRGsOnR674(BridgeInvocation_c [] targets)
{
  return getManyS_BRGsOnR674(targets, null);
}

public static Bridge_c [] getManyS_BRGsOnR674(BridgeInvocation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BridgeInvocation_c [] targetArray = new BridgeInvocation_c[1];
    targetArray[0] = target;
    return getManyS_BRGsOnR674(targetArray, test, loadComponent);
  } else {
    Bridge_c [] result = new Bridge_c [0] ;
    return result ;
  }
  
}

public static Bridge_c [] getManyS_BRGsOnR674(BridgeInvocation_c target,
    ClassQueryInterface_c test)
{
    return getManyS_BRGsOnR674(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR674(BridgeInvocation_c target)
{
    return getManyS_BRGsOnR674(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR674(BridgeInvocation_c target, boolean loadComponent)
{
    return getManyS_BRGsOnR674(target, null, loadComponent);
}


    
  
  
// referred to navigation

BridgeBody_c backPointer_BridgeBody_R697;

public void setBridgeBodyOrderInChildListR697(BridgeBody_c target, int index) {
	unrelateAcrossR697From(target);
	BridgeBody_c[] elements = BridgeBody_c.getManyACT_BRBsOnR697(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR697From((BridgeBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR697To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR697To((BridgeBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR697To(BridgeBody_c target)
{
  if (target != null) {
    target.relateAcrossR697To(this, true) ;
  }
}

public void relateAcrossR697To(BridgeBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR697To(this, notifyChanges) ;
  }
}

public void setBackPointerR697To(BridgeBody_c target)
{
    backPointer_BridgeBody_R697 = target;
}

public void unrelateAcrossR697From(BridgeBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR697From(this, true) ;
  }
}

public void unrelateAcrossR697From(BridgeBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR697From(this, notifyChanges) ;
  }
}

public void clearBackPointerR697To(BridgeBody_c target)
{
	if (target == backPointer_BridgeBody_R697) {
		backPointer_BridgeBody_R697 = null;
	}
}

public static Bridge_c getOneS_BRGOnR697(BridgeBody_c [] targets)
{
    return getOneS_BRGOnR697(targets, null);
}

public static Bridge_c getOneS_BRGOnR697(BridgeBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_BRGOnR697(targets, test, true);
}

public static Bridge_c getOneS_BRGOnR697(BridgeBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Bridge_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Bridge_c candidate_val = getOneS_BRGOnR697(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_BRGOnR697(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Bridge_c getOneS_BRGOnR697(BridgeBody_c target)
{
	return getOneS_BRGOnR697(target, true);
}
public static Bridge_c getOneS_BRGOnR697(BridgeBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.SpecifiesProcessingForBridge ;
  } else {
    return null;
  }
}

public static Bridge_c [] getManyS_BRGsOnR697(BridgeBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_BRGsOnR697(targets, test, true);
}

public static Bridge_c [] getManyS_BRGsOnR697(BridgeBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Bridge_c[0];
  
  
  LinkedHashSet<Bridge_c> elementsSet = new LinkedHashSet<Bridge_c>();
  for (int i = 0; i < targets.length; i++) {
    Bridge_c associate = targets[i].SpecifiesProcessingForBridge;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Bridge_c[] result = new Bridge_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Bridge_c [] getManyS_BRGsOnR697(BridgeBody_c [] targets)
{
  return getManyS_BRGsOnR697(targets, null);
}

public static Bridge_c [] getManyS_BRGsOnR697(BridgeBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BridgeBody_c [] targetArray = new BridgeBody_c[1];
    targetArray[0] = target;
    return getManyS_BRGsOnR697(targetArray, test, loadComponent);
  } else {
    Bridge_c [] result = new Bridge_c [0] ;
    return result ;
  }
  
}

public static Bridge_c [] getManyS_BRGsOnR697(BridgeBody_c target,
    ClassQueryInterface_c test)
{
    return getManyS_BRGsOnR697(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR697(BridgeBody_c target)
{
    return getManyS_BRGsOnR697(target, null, true);
}

public static Bridge_c [] getManyS_BRGsOnR697(BridgeBody_c target, boolean loadComponent)
{
    return getManyS_BRGsOnR697(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (ProvidesAccessToExternalEntity == null) {          
      // R19
      ExternalEntity_c relInst56777 = (ExternalEntity_c) baseRoot.getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56777 == null) {
      			relInst56777 = (ExternalEntity_c) Ooaofooa.getDefaultInstance().getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
      		}
			if (relInst56777 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56777 = (ExternalEntity_c) roots[i].getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
					if (relInst56777 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56777 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56777) && !isProxy())) {
	      relInst56777.relateAcrossR19To(this, notifyChanges);
	  }
	  }
	}
	          

	if (ReturnValueDefinedByDataType == null) {          
      // R20
      DataType_c relInst56778 = (DataType_c) baseRoot.getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56778 == null) {
      			relInst56778 = (DataType_c) Ooaofooa.getDefaultInstance().getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
      		}
			if (relInst56778 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56778 = (DataType_c) roots[i].getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
					if (relInst56778 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56778 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56778) && !isProxy())) {
	      relInst56778.relateAcrossR20To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R19
      // S_EE
		  inst=ProvidesAccessToExternalEntity;
			unrelateAcrossR19From(ProvidesAccessToExternalEntity, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R20
      // S_DT
		  inst=ReturnValueDefinedByDataType;
			unrelateAcrossR20From(ReturnValueDefinedByDataType, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Bridge_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Bridge_c inst = (Bridge_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Bridge_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Bridge_c BridgeInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Bridge_c result=findBridgeInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Bridge_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findBridgeInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Bridge_c findBridgeInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Bridge_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Bridge_c x = (Bridge_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Bridge_c BridgeInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return BridgeInstance(modelRoot,test,true);
  }
  
  public static Bridge_c BridgeInstance(ModelRoot modelRoot)
  {
	 return BridgeInstance(modelRoot,null,true);
  }

  public static Bridge_c [] BridgeInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Bridge_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Bridge_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Bridge_c x = (Bridge_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Bridge_c[] ret_set = new Bridge_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Bridge_c[0];
			}		
		} 
  }
  public static Bridge_c [] BridgeInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  BridgeInstances(modelRoot,test,true);
  }
  public static Bridge_c [] BridgeInstances(ModelRoot modelRoot)
  {
	return BridgeInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Bridge.dispose call: ";
	ExternalEntity_c testR19Inst = ExternalEntity_c.getOneS_EEOnR19(this, false);

	if ( testR19Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "19 ";
	}
	Dimensions_c testR50Inst = Dimensions_c.getOneS_DIMOnR50(this, false);

	if ( testR50Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "50 ";	
	}
	DataType_c testR20Inst = DataType_c.getOneS_DTOnR20(this, false);

	if ( testR20Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "20 ";
	}
	BridgeParameter_c testR21Inst = BridgeParameter_c.getOneS_BPARMOnR21(this, false);

	if ( testR21Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "21 ";	
	}
	AutomaticWiring_c testR3200Inst = AutomaticWiring_c.getOneS_AWOnR3200(this, false);

	if ( testR3200Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "3200 ";	
	}
	BridgeValue_c testR828Inst = BridgeValue_c.getOneV_BRVOnR828(this, false);

	if ( testR828Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "828 ";	
	}
	BridgeMessage_c testR1012Inst = BridgeMessage_c.getOneMSG_BOnR1012(this, false);

	if ( testR1012Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1012 ";	
	}
	BridgeInvocation_c testR674Inst = BridgeInvocation_c.getOneACT_BRGOnR674(this, false);

	if ( testR674Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "674 ";	
	}
	BridgeBody_c testR697Inst = BridgeBody_c.getOneACT_BRBOnR697(this, false);

	if ( testR697Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "697 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Bridge", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("brg_id")){
         return true;
      }
      if(attributeName.equals("dt_id")){
         return true;
      }
      if(attributeName.equals("ee_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getBrg_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getBrg_idLongBased()
  {
    if(m_brg_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_brg_id)){
    	return 0xfffffff & m_brg_id.getLeastSignificantBits();
    }
    return m_brg_idLongBased ;
  }
  public java.util.UUID getBrg_id()
  {
    return m_brg_id ;
  }


  public void setBrg_id(java.util.UUID newValue)
  {
   m_brg_id = IdAssigner.preprocessUUID(newValue);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getBrg_typ()
  {
    return m_brg_typ ;
  }


  public void setBrg_typ(int newValue)
  {
    if(m_brg_typ == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Brg_typ", new Integer(m_brg_typ), new Integer(newValue),true);

   m_brg_typ = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getAction_semantics()
  {
ModelRoot modelRoot = getModelRoot();
return Ooaofooa.Convertrelocatabletags(modelRoot			    
,getAction_semantics_internal());



  }


  public int getSuc_pars()
  {
    return m_suc_pars ;
  }


  public void setSuc_pars(int newValue)
  {
    if(m_suc_pars == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Suc_pars", new Integer(m_suc_pars), new Integer(newValue),true);

   m_suc_pars = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getAction_semantics_internal()
  {
    return m_action_semantics_internal ;
  }


  public void setAction_semantics_internal(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_action_semantics_internal)){
	        return;
	    }
	}else if(m_action_semantics_internal != null){
	    if(m_action_semantics_internal.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Action_semantics_internal", m_action_semantics_internal, newValue,true); 
   m_action_semantics_internal = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getReturn_dimensions()
  {
    return m_return_dimensions ;
  }


  public void setReturn_dimensions(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_return_dimensions)){
	        return;
	    }
	}else if(m_return_dimensions != null){
	    if(m_return_dimensions.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Return_dimensions", m_return_dimensions, newValue,true); 
   m_return_dimensions = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDt_idLongBased()
  {
    if ( ReturnValueDefinedByDataType != null )
    {
      return ReturnValueDefinedByDataType.getDt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDt_id()
  {
    if ( ReturnValueDefinedByDataType != null )
    {
      return ReturnValueDefinedByDataType.getDt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dt_id) )
      return m_dt_id;
    else
      return getDt_id();
  }
  
  public void setDt_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dt_id)){
	        return;
	    }
	}else if(m_dt_id != null){
	    if(m_dt_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dt_id", m_dt_id, newValue,true); 
   m_dt_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getEe_idLongBased()
  {
    if ( ProvidesAccessToExternalEntity != null )
    {
      return ProvidesAccessToExternalEntity.getEe_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getEe_id()
  {
    if ( ProvidesAccessToExternalEntity != null )
    {
      return ProvidesAccessToExternalEntity.getEe_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getEe_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ee_id) )
      return m_ee_id;
    else
      return getEe_id();
  }
  
  public void setEe_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ee_id)){
	        return;
	    }
	}else if(m_ee_id != null){
	    if(m_ee_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ee_id", m_ee_id, newValue,true); 
   m_ee_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Bridge", //$NON-NLS-1$
	  " Operation entered: Bridge::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Bridge_c [] objs = Bridge_c.BridgeInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Bridge", //$NON-NLS-1$
	  " Operation entered: Bridge::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Bridge_c_test56780_c implements ClassQueryInterface_c
    {
	  Bridge_c_test56780_c( java.util.UUID            p56781 ) {
	  m_p56781 = p56781;
	  }
	  private java.util.UUID             m_p56781; 
	  public boolean evaluate (Object candidate)
	  {
	      Bridge_c selected = (Bridge_c) candidate;
	      boolean retval = false;
	      retval = (selected.getBrg_id().equals(m_p56781));
	      return retval;
	  }
    }

    Bridge_c [] objs56779 = 
    Bridge_c.BridgeInstances(modelRoot, new Bridge_c_test56780_c(getBrg_id())) ;

    if ( (  (objs56779.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Bridge", //$NON-NLS-1$
           "Consistency: Object: Bridge: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56779.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Bridge: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56779.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56779.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Bridge", //$NON-NLS-1$
           "Consistency: Object: Bridge: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56779.length )  + " Brg_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Bridge: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56779.length )  + " Brg_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Bridge is a referring class in association: rel.Numb = 20
          // The participating class is: Data Type
    class DataType_c_test56785_c implements ClassQueryInterface_c
    {
	  DataType_c_test56785_c( java.util.UUID            p56786 ) {
	  m_p56786 = p56786;
	  }
	  private java.util.UUID             m_p56786; 
	  public boolean evaluate (Object candidate)
	  {
	      DataType_c selected = (DataType_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p56786));
	      return retval;
	  }
    }

    DataType_c [] objs56784 = 
    DataType_c.DataTypeInstances(modelRoot, new DataType_c_test56785_c(getDt_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56784.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Bridge", //$NON-NLS-1$
           "Consistency: Object: Bridge: Association: 20: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56784.length )  + " DT_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Bridge: Association: 20: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56784.length )  + " DT_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Bridge is a referring class in association: rel.Numb = 19
          // The participating class is: External Entity
    class ExternalEntity_c_test56788_c implements ClassQueryInterface_c
    {
	  ExternalEntity_c_test56788_c( java.util.UUID            p56789 ) {
	  m_p56789 = p56789;
	  }
	  private java.util.UUID             m_p56789; 
	  public boolean evaluate (Object candidate)
	  {
	      ExternalEntity_c selected = (ExternalEntity_c) candidate;
	      boolean retval = false;
	      retval = (selected.getEe_id().equals(m_p56789));
	      return retval;
	  }
    }

    ExternalEntity_c [] objs56787 = 
    ExternalEntity_c.ExternalEntityInstances(modelRoot, new ExternalEntity_c_test56788_c(getEe_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56787.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Bridge", //$NON-NLS-1$
           "Consistency: Object: Bridge: Association: 19: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56787.length )  + " EE_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Bridge: Association: 19: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56787.length )  + " EE_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Bridge is a participating class in association: rel.Numb = 50
             // Object: Dimensions
          // Bridge is a participating class in association: rel.Numb = 21
             // Object: Bridge Parameter
          // Bridge is a participating class in association: rel.Numb = 3200
             // Object: Automatic Wiring
    class AutomaticWiring_c_test56791_c implements ClassQueryInterface_c
    {
	  AutomaticWiring_c_test56791_c( java.util.UUID            p56792 ) {
	  m_p56792 = p56792;
	  }
	  private java.util.UUID             m_p56792; 
	  public boolean evaluate (Object candidate)
	  {
	      AutomaticWiring_c selected = (AutomaticWiring_c) candidate;
	      boolean retval = false;
	      retval = (selected.getBrg_id().equals(m_p56792));
	      return retval;
	  }
    }

    AutomaticWiring_c [] objs56790 = 
    AutomaticWiring_c.AutomaticWiringInstances(modelRoot, new AutomaticWiring_c_test56791_c(getBrg_id())) ;

    if ( (  (objs56790.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Bridge", //$NON-NLS-1$
           "Consistency: Object: Bridge: Association: 3200: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56790.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Bridge: Association: 3200: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56790.length )  , e); 
      }
      retval = false;

    }

          // Bridge is a participating class in association: rel.Numb = 828
             // Object: Bridge Value
          // Bridge is a participating class in association: rel.Numb = 1012
             // Object: Bridge Message
          // Bridge is a participating class in association: rel.Numb = 674
             // Object: Bridge Invocation
          // Bridge is a participating class in association: rel.Numb = 697
             // Object: Bridge Body
    class BridgeBody_c_test56794_c implements ClassQueryInterface_c
    {
	  BridgeBody_c_test56794_c( java.util.UUID            p56795 ) {
	  m_p56795 = p56795;
	  }
	  private java.util.UUID             m_p56795; 
	  public boolean evaluate (Object candidate)
	  {
	      BridgeBody_c selected = (BridgeBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getBrg_id().equals(m_p56795));
	      return retval;
	  }
    }

    BridgeBody_c [] objs56793 = 
    BridgeBody_c.BridgeBodyInstances(modelRoot, new BridgeBody_c_test56794_c(getBrg_id())) ;

    if ( (  (objs56793.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Bridge", //$NON-NLS-1$
           "Consistency: Object: Bridge: Association: 697: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56793.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Bridge: Association: 697: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56793.length )  , e); 
      }
      retval = false;

    }

    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR19(this);


this.unrelateAcrossR19From(v_ee);


BridgeParameter_c [] v_bparms = BridgeParameter_c.getManyS_BPARMsOnR21(this);


BridgeParameter_c  v_bparm = null;
for ( int i55145 = 0; i55145 < v_bparms.length; i55145++)
{
  v_bparm = v_bparms[i55145] ;

if (v_bparm != null) {
v_bparm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

DataType_c v_dt = DataType_c.getOneS_DTOnR20(this);


this.unrelateAcrossR20From(v_dt);


Body_c v_body = Body_c.getOneACT_ACTOnR698(BridgeBody_c.getOneACT_BRBOnR697(this));


if ( (  (v_body != null)) )
{

if (v_body != null) {
v_body.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

BridgeInvocation_c [] v_invs = BridgeInvocation_c.getManyACT_BRGsOnR674(this);


BridgeInvocation_c  v_inv = null;
for ( int i55146 = 0; i55146 < v_invs.length; i55146++)
{
  v_inv = v_invs[i55146] ;

this.unrelateAcrossR674From(v_inv);



}

BridgeValue_c [] v_brgVals = BridgeValue_c.getManyV_BRVsOnR828(this);


BridgeValue_c  v_brgVal = null;
for ( int i55147 = 0; i55147 < v_brgVals.length; i55147++)
{
  v_brgVal = v_brgVals[i55147] ;

this.unrelateAcrossR828From(v_brgVal);



}

BridgeMessage_c [] v_bms = BridgeMessage_c.getManyMSG_BsOnR1012(this);


BridgeMessage_c  v_bm = null;
for ( int i55148 = 0; i55148 < v_bms.length; i55148++)
{
  v_bm = v_bms[i55148] ;

Message_c v_message = Message_c.getOneMSG_MOnR1018(SynchronousMessage_c.getOneMSG_SMOnR1020(v_bm));


if (v_message != null) {
v_message.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

AutomaticWiring_c v_wiring = AutomaticWiring_c.getOneS_AWOnR3200(this);


if ( (  (v_wiring != null)) )
{

if (v_wiring != null) {
v_wiring.unrelateAcrossR3200From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_wiring != null) {
v_wiring.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR50(this);


Dimensions_c  v_dim = null;
for ( int i55149 = 0; i55149 < v_dims.length; i55149++)
{
  v_dim = v_dims[i55149] ;

this.unrelateAcrossR50From(v_dim);


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ExternalEntity_c.getOneS_EEOnR19(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

if ( (  (v_package != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_def_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_def_dt_id = v_system.Getcoretypeid(			    
"void") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_def_dt_id);


DataType_c v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR20To(v_def_dt);



}


}

else
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent)));


java.util.UUID         v_def_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_def_dt_id = v_system.Getcoretypeid(			    
"void") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_def_dt_id);


DataType_c v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR20To(v_def_dt);



}


}


}

else
{

Domain_c v_dom = Domain_c.DomainInstance(modelRoot) ;


v_component = Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_dom));


if ( (  (v_component != null)) )
{

SystemModel_c v_compSys = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(v_component));


java.util.UUID         v_def_dt_id = Gd_c.Null_unique_id() ;


if (   (v_compSys != null) )
{

v_def_dt_id = v_compSys.Getcoretypeid(			    
"void") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_def_dt_id);


DataType_c v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR20To(v_def_dt);



}


}

else
{

  class DataType_test55774_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals("void") ;
	}
  }
DataType_c v_def_dt = DataType_c.getOneS_DTOnR14(v_dom, new DataType_test55774_c());


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR20To(v_def_dt);



}


}


}

String       v_name = Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Bridge Operation"			    
,Converttoinstance()) ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setName( v_success) ;



}

else
{

Dispose() ;



}

setSuc_pars( Parsestatus_c.parseInitial) ;



   } // End initialize
  public  void Newparameter()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Newparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
BridgeParameter_c v_bparm = new BridgeParameter_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_bparm));


  this.relateAcrossR21To(v_bparm);


if (v_bparm != null) {
v_bparm.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Createmessageargumentsforparameter(			    
v_bparm.getBparm_id() ) ;



   } // End newParameter
  public  boolean      Isallowedreturntype(final String       p_Typename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Isallowedreturntype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ExternalEntity_c.getOneS_EEOnR19(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

if ( Getreturndimensionscnt() != 0 && p_Typename.equals("void") )
{

return false;



}

else
{

return v_packageableElem.Isallowedtype(			    
true			    
,p_Typename);



}


}

else
{

if ( Getreturndimensionscnt() != 0 && p_Typename.equals("void") )
{

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR8(ExternalEntity_c.getOneS_EEOnR19(this));


if ( (  (v_domain != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(v_domain);


if ( (  (v_system != null)) )
{

return DataType_c.Isallowedreturntype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename);



}

else
{

boolean      v_result = DataType_c.Isallowedreturntype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename) ;


if ( (  !v_result) )
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


return Util_c.Isallowedreturntype(			    
v_system.Converttoinstance()			    
,p_Typename);



}

else
{

return v_result;



}


}


}


}

return false;



}


   } // End isAllowedReturnType
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getBrg_id();



   } // End get_ooa_id
  public  void Resolvedatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Resolvedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dtProxy = DataType_c.getOneS_DTOnR20(this);


if ( (  (v_dtProxy != null) &&   !Util_c.Isproxy(			    
Converttoinstance())) )
{

String       v_name = v_dtProxy.getName() ;


if (v_dtProxy != null) {
v_dtProxy.unrelateAcrossR20From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ExternalEntity_c.getOneS_EEOnR19(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

java.util.UUID         v_id = v_packageableElem.Resolvedatatyperelativetoself(			    
"void"			    
,v_name) ;


  class DataType_test55775_c implements ClassQueryInterface_c
  {
	DataType_test55775_c( java.util.UUID         p55776 ) {
		m_p55776 = p55776;
	}
	private java.util.UUID         m_p55776;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p55776) ;
	}
  }
DataType_c v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_package)), new DataType_test55775_c(v_id));


if ( (  (v_resolvedDt == null)) )
{

  class DataType_test55777_c implements ClassQueryInterface_c
  {
	DataType_test55777_c( java.util.UUID         p55778 ) {
		m_p55778 = p55778;
	}
	private java.util.UUID         m_p55778;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p55778) ;
	}
  }
v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_component)), new DataType_test55777_c(v_id));



}

if (   (v_resolvedDt != null) )
{

if (v_resolvedDt != null) {
  v_resolvedDt.relateAcrossR20To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR300(ExternalEntityPackageInDomain_c.getOnePL_EEPIDOnR300(ExternalEntityPackage_c.getOneS_EEPKOnR33(ExternalEntityInPackage_c.getOneS_EEIPOnR33(ExternalEntity_c.getOneS_EEOnR19(this)))));


java.util.UUID         v_id = v_domain.Resolvedatatyperelativetoself(			    
"void"			    
,v_name) ;


  class DataType_test55779_c implements ClassQueryInterface_c
  {
	DataType_test55779_c( java.util.UUID         p55780 ) {
		m_p55780 = p55780;
	}
	private java.util.UUID         m_p55780;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55780)) ;
	}
  }
DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55779_c(v_id));


if ( (  (v_resolvedDT == null)) )
{

SystemModel_c v_domSys = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test55781_c implements ClassQueryInterface_c
  {
	DataType_test55781_c( java.util.UUID         p55782 ) {
		m_p55782 = p55782;
	}
	private java.util.UUID         m_p55782;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55782)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_domSys), new DataType_test55781_c(v_id));


if (   (v_resolvedDT == null) &&   (v_domSys != null) && v_domSys.getUseglobals() )
{

  class PackageableElement_test55783_c implements ClassQueryInterface_c
  {
	PackageableElement_test55783_c( java.util.UUID         p55784 ) {
		m_p55784 = p55784;
	}
	private java.util.UUID         m_p55784;
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(m_p55784) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_domSys), new PackageableElement_test55783_c(v_id));


v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);



}


}

if ( (  (v_resolvedDT != null)) )
{

if (v_resolvedDT != null) {
  v_resolvedDT.relateAcrossR20To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End resolveDatatype
  public  boolean      Isvoid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Isvoid") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR20(this);


return v_dt.getName().equals("void");



   } // End isVoid
  public  int          Getreturndimensionscnt()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Getreturndimensionscnt") ; 
               final ModelRoot modelRoot = getModelRoot();
Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR50(this);


int          v_dimensions =   (v_dims.length) ;


return v_dimensions;



   } // End getReturnDimensionsCnt
  public  void Resizereturn_dimensions(final int          p_Dimension,final int          p_Elementcount,final int          p_Numdimensions)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Resizereturn_dimensions") ; 
               final ModelRoot modelRoot = getModelRoot();
while ( (p_Numdimensions > Getreturndimensionscnt()) )
{

Dimensions_c v_dim = new Dimensions_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dim));


if (v_dim != null) {
  v_dim.setDimensioncount( Getreturndimensionscnt()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dim != null) {
  v_dim.relateAcrossR50To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

while ( (p_Numdimensions < Getreturndimensionscnt()) )
{

  class Dimensions_test55785_c implements ClassQueryInterface_c
  {
	Dimensions_test55785_c( int          p55786 ) {
		m_p55786 = p55786;
	}
	private int          m_p55786;
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == (m_p55786 - 1)) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR50(this, new Dimensions_test55785_c(Getreturndimensionscnt()));


if (v_dim != null) {
v_dim.unrelateAcrossR50From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( (p_Numdimensions > 0) )
{

  class Dimensions_test55787_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == p_Dimension) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR50(this, new Dimensions_test55787_c());


if ( (v_dim.getElementcount() != p_Elementcount) )
{

if (v_dim != null) {
  v_dim.setElementcount( p_Elementcount) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


   } // End resizeReturn_Dimensions
  public  void Initializeorder()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Initializeorder") ; 
               final ModelRoot modelRoot = getModelRoot();
BridgeParameter_c [] v_peers = BridgeParameter_c.getManyS_BPARMsOnR21(this);


if ( (  (v_peers.length) > 1) )
{

boolean      v_initialOrderingCheckPerformed = false ;


  class BridgeParameter_test55788_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		BridgeParameter_c selected = (BridgeParameter_c)candidate;
		return (selected.getBrg_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
BridgeParameter_c v_head = BridgeParameter_c.getOneS_BPARMOnR21(this, new BridgeParameter_test55788_c());


BridgeParameter_c v_endOfList = v_head ;


int          v_loopCnt = 0 ;


BridgeParameter_c  v_peer = null;
for ( int i55150 = 0; i55150 < v_peers.length; i55150++)
{
  v_peer = v_peers[i55150] ;

if ( (  !v_initialOrderingCheckPerformed) )
{

BridgeParameter_c v_predecessor = BridgeParameter_c.getOneS_BPARMOnR55Precedes(v_peer);


BridgeParameter_c v_successor = BridgeParameter_c.getOneS_BPARMOnR55Succeeds(v_peer);


v_initialOrderingCheckPerformed = true ;


if ( (  (v_predecessor != null) ||   (v_successor != null)) )
{

break;



}

v_head = v_peer ;


v_endOfList = v_peer ;



}

if ( (v_loopCnt == 1) )
{

if ( (v_peer.getName().compareTo(v_head.getName()) < 0) )
{

if (v_peer != null) {
  v_peer.relateAcrossR55ToPrecedes(v_head);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if (v_head != null) {
  v_head.relateAcrossR55ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}


}

else if ( (v_loopCnt > 1) )
{

BridgeParameter_c v_insertPoint = v_head ;


BridgeParameter_c v_next = BridgeParameter_c.getOneS_BPARMOnR55Succeeds(v_head);


while ( (  (v_next != null)) )
{

if ( (v_next.getName().compareTo(v_peer.getName()) < 0) )
{

break;



}

else
{

v_insertPoint = v_next ;


v_next = BridgeParameter_c.getOneS_BPARMOnR55Succeeds(v_next);



}


}

if ( (  (v_next == null)) )
{

if (v_peer != null) {
  v_peer.relateAcrossR55ToPrecedes(v_endOfList);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if ( ((v_insertPoint == v_head) && (v_peer.getName().compareTo(v_head.getName()) > 0)) )
{

if (v_head != null) {
  v_head.relateAcrossR55ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}

else
{

if (v_next != null) {
v_next.unrelateAcrossR55FromPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_peer != null) {
  v_peer.relateAcrossR55ToPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_next != null) {
  v_next.relateAcrossR55ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

v_loopCnt = v_loopCnt + 1 ;



}


}


   } // End initializeOrder
  public  boolean      Canrefertodatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Canrefertodatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR20(this);


if ( (  (v_dt != null)) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ExternalEntity_c.getOneS_EEOnR19(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

return v_packageableElem.Canrefertodatatype(			    
v_dt.getDt_id()			    
,v_dt.getName());



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR8(ExternalEntity_c.getOneS_EEOnR19(this));


DataTypePackage_c v_dtPkg = DataTypePackage_c.getOneS_DPKOnR39(DataTypeInPackage_c.getOneS_DIPOnR39(v_dt));


if ( (  !v_dtPkg.Isdomainlevel()) )
{

if ( (v_domain.Participatesinsystem()) )
{

return true;



}

else
{

return false;



}


}

else
{

Domain_c v_dtDomain = Domain_c.getOneS_DOMOnR14(v_dt);


if ( (v_dtDomain == v_domain) )
{

return true;



}


}


}


}

return false;



   } // End canReferToDataType
  public  boolean      Isreferringtodefaultdatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Isreferringtodefaultdatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR20(this);


String       v_elementType = Util_c.Getsimpleclassname(			    
Converttoinstance()) ;


if ( (v_dt.getName().equals(DataType_c.Getdefaultdatatypename(modelRoot			    
,v_elementType))) )
{

return true;



}

return false;



   } // End isReferringToDefaultDataType
  public  java.util.UUID         Getcontainingcomponentid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Getcontainingcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR19(this);


return v_ee.Getcontainingcomponentid();



   } // End getContainingComponentId
  public  boolean      Canusedatatype(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Canusedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ExternalEntity_c.getOneS_EEOnR19(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

  class SearchResultSet_test55789_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test55789_c());


  class DataType_test55790_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet)), new DataType_test55790_c());


if (   (v_component != null) )
{

  class ComponentResultSet_test55791_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test55791_c());


  class DataType_test55792_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet)), new DataType_test55792_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR8(ExternalEntity_c.getOneS_EEOnR19(this));


if ( (v_domain.Participatesinsystem()) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test55793_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test55793_c());


if (   (v_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class PackageableElement_test55794_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(p_Id) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system), new PackageableElement_test55794_c());


v_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_dt == null)) )
{

  class DataType_test55795_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55795_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}


}

else
{

  class DataType_test55796_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55796_c());


if ( (  (v_dt != null)) )
{

if ( (Isallowedreturntype(			    
v_dt.getName())) )
{

return true;



}


}


}

return false;



}


   } // End canUseDataType
  public  java.util.UUID         Getcontainerid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Getcontainerid") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR19(this);


return v_ee.Getcontainerid();



   } // End getContainerId
  public  void Pastebridgeparameter(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Pastebridgeparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
BridgeParameter_c v_parameter = (BridgeParameter_c) modelRoot.getInstanceList(BridgeParameter_c.class).getGlobal(null, p_Id);


if ( (  (v_parameter != null)) )
{

Bridge_c v_existingBrg = Bridge_c.getOneS_BRGOnR21(v_parameter);


if ( (  (v_existingBrg != null)) )
{

if (v_parameter != null) {
v_parameter.unrelateAcrossR21From(v_existingBrg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_parameter != null) {
  v_parameter.relateAcrossR21To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_parameter != null) {
  v_parameter.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_parameter.Converttoinstance()			    
,v_parameter.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Createmessageargumentsforparameter(			    
v_parameter.getBparm_id() ) ;


Addbridgeparametertoorder(			    
v_parameter.getBparm_id() ) ;



}


   } // End pasteBridgeParameter
  public  void Createmessageargumentsforparameter(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Createmessageargumentsforparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
BridgeParameter_c v_parameter = (BridgeParameter_c) modelRoot.getInstanceList(BridgeParameter_c.class).getGlobal(null, p_Id);


if ( (  (v_parameter != null)) )
{

Message_c [] v_messages = Message_c.getManyMSG_MsOnR1018(SynchronousMessage_c.getManyMSG_SMsOnR1020(BridgeMessage_c.getManyMSG_BsOnR1012(this)));


Message_c  v_message = null;
for ( int i55151 = 0; i55151 < v_messages.length; i55151++)
{
  v_message = v_messages[i55151] ;

MessageArgument_c v_arg = new MessageArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_arg));


BridgeArgument_c v_ba = new BridgeArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ba));


if (v_ba != null) {
  v_ba.relateAcrossR1014To(v_parameter);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ba != null) {
  v_ba.relateAcrossR1013To(v_arg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_message != null) {
  v_message.relateAcrossR1001To(v_arg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


   } // End createMessageArgumentsForParameter
  public  void Addbridgeparametertoorder(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Addbridgeparametertoorder") ; 
               final ModelRoot modelRoot = getModelRoot();
BridgeParameter_c v_parameter = (BridgeParameter_c) modelRoot.getInstanceList(BridgeParameter_c.class).getGlobal(null, p_Id);


if ( (  (v_parameter != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


BridgeParameter_c [] v_peers = BridgeParameter_c.getManyS_BPARMsOnR21(this);


BridgeParameter_c  v_peer = null;
for ( int i55152 = 0; i55152 < v_peers.length; i55152++)
{
  v_peer = v_peers[i55152] ;

if ( (v_peer != v_parameter) )
{

BridgeParameter_c v_predecessor = BridgeParameter_c.getOneS_BPARMOnR55Precedes(v_peer);


if ( (  (v_predecessor == null)) )
{

if (v_parameter != null) {
  v_parameter.relateAcrossR55ToSucceeds(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}


   } // End addBridgeParameterToOrder
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR19(this);


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_ee)));


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

Bridge_c [] v_bridges = Bridge_c.getManyS_BRGsOnR19(v_ee);


Bridge_c  v_brg = null;
for ( int i55153 = 0; i55153 < v_bridges.length; i55153++)
{
  v_brg = v_bridges[i55153] ;

if ( (v_brg != this && v_brg.Getsignature().equals(Getsignature())) )
{

IntegrityManager_c.Createissue(modelRoot			    
,"Found another bridge under the same external entity with a " + "matching signature." + Gd_c.Newline() + Gd_c.Newline() + "Signature: " + Getsignature()			    
,Converttoinstance()			    
,getBrg_id()			    
,getName()			    
,v_ee.Getpath() + "::" + getName()			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity
  public  String       Getsignature()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Bridge", " Operation entered: Bridge::Getsignature") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_signature = getName() ;


int          v_count = 0 ;


BridgeParameter_c [] v_parameters = BridgeParameter_c.getManyS_BPARMsOnR21(this);


int          v_paramLength =   (v_parameters.length) ;


if ( (v_paramLength > 0) )
{

v_signature = v_signature + "(" ;



}

BridgeParameter_c  v_parameter = null;
for ( int i55154 = 0; i55154 < v_parameters.length; i55154++)
{
  v_parameter = v_parameters[i55154] ;

DataType_c v_type = DataType_c.getOneS_DTOnR22(v_parameter);


if ( (v_count > 0 && v_count != v_paramLength - 1) )
{

v_signature = v_signature + ", " ;



}

v_signature = v_signature + v_type.getName() ;


v_count = v_count + 1 ;



}

if ( (v_paramLength > 0) )
{

v_signature = v_signature + ")" ;



}

return v_signature;



   } // End getSignature

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Bridge
