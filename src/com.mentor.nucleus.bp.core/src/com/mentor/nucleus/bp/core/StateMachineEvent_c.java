      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.StateMachineEvent_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_STATE_MACHINE_EVENT extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class StateMachineEvent_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public StateMachineEvent_c(ModelRoot modelRoot,
       java.util.UUID         p_m_smevt_id,
       java.util.UUID         p_m_sm_id,
       java.util.UUID         p_m_smspd_id,
       int          p_m_numb,
       String       p_m_mning,
       int          p_m_is_lbl_u,
       String       p_m_unq_lbl,
       String       p_m_drv_lbl,
       String       p_m_descrip)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_smevt_id = IdAssigner.preprocessUUID(p_m_smevt_id);
       //extract 28 bit value only            
       m_smevt_idLongBased = 0xfffffff & p_m_smevt_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
       m_numb = p_m_numb;
       m_mning = p_m_mning;
       m_is_lbl_u = p_m_is_lbl_u;
       m_unq_lbl = p_m_unq_lbl;
       m_drv_lbl = p_m_drv_lbl;
       m_descrip = p_m_descrip;
        
    setUniqueId(m_smevt_id);
    Object [] key = {m_smevt_id};
    addInstanceToMap(key);
  }
  static public StateMachineEvent_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_smevt_id,
       java.util.UUID         p_m_sm_id,
       java.util.UUID         p_m_smspd_id,
       int          p_m_numb,
       String       p_m_mning,
       int          p_m_is_lbl_u,
       String       p_m_unq_lbl,
       String       p_m_drv_lbl,
       String       p_m_descrip, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(StateMachineEvent_c.class);
      StateMachineEvent_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_smevt_id};
          new_inst = (StateMachineEvent_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_smevt_id = IdAssigner.preprocessUUID(p_m_smevt_id);
       //extract 28 bit value only            
       new_inst.m_smevt_idLongBased = 0xfffffff & p_m_smevt_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
       new_inst.m_numb = p_m_numb;
       new_inst.m_mning = p_m_mning;
       new_inst.m_is_lbl_u = p_m_is_lbl_u;
       new_inst.m_unq_lbl = p_m_unq_lbl;
       new_inst.m_drv_lbl = p_m_drv_lbl;
       new_inst.m_descrip = p_m_descrip;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new StateMachineEvent_c(modelRoot,
p_m_smevt_id,
p_m_sm_id,
p_m_smspd_id,
p_m_numb,
p_m_mning,
p_m_is_lbl_u,
p_m_unq_lbl,
p_m_drv_lbl,
p_m_descrip
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public StateMachineEvent_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_smevt_id,
       java.util.UUID         p_m_sm_id,
       java.util.UUID         p_m_smspd_id,
       int          p_m_numb,
       String       p_m_mning,
       int          p_m_is_lbl_u,
       String       p_m_unq_lbl,
       String       p_m_drv_lbl,
       String       p_m_descrip){
    InstanceList instances = modelRoot.getInstanceList(StateMachineEvent_c.class);
    StateMachineEvent_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_smevt_id
            };
        source = (StateMachineEvent_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_smevt_id = IdAssigner.preprocessUUID(p_m_smevt_id);
       //extract 28 bit value only            
       source.m_smevt_idLongBased = 0xfffffff & p_m_smevt_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
       source.m_numb = p_m_numb;
       source.m_mning = p_m_mning;
       source.m_is_lbl_u = p_m_is_lbl_u;
       source.m_unq_lbl = p_m_unq_lbl;
       source.m_drv_lbl = p_m_drv_lbl;
       source.m_descrip = p_m_descrip;
        
           return source ;
        }
      }
      // there is no instance matching the id
    StateMachineEvent_c new_inst = new StateMachineEvent_c(modelRoot,
p_m_smevt_id,
p_m_sm_id,
p_m_smspd_id,
p_m_numb,
p_m_mning,
p_m_is_lbl_u,
p_m_unq_lbl,
p_m_drv_lbl,
p_m_descrip
);
    return new_inst;
  }
  public StateMachineEvent_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_smevt_id = idAssigner.createUUID();
     m_sm_id = IdAssigner.NULL_UUID;   
     m_smspd_id = IdAssigner.NULL_UUID;   
     m_mning = "";   
     m_unq_lbl = "";   
     m_drv_lbl = "";   
     m_descrip = "";   
    setUniqueId(m_smevt_id);
    Object [] key = {m_smevt_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_smevt_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_smevt_id !=  p_newKey ){
	
		m_smevt_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof StateMachineEvent_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof StateMachineEvent_c)) {
           return false;
       }
       
       StateMachineEvent_c me = (StateMachineEvent_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getSmevt_id()) || IdAssigner.NULL_UUID.equals(((StateMachineEvent_c)elem).getSmevt_id())) && this != elem)) {
      	return false;
      }
      if (!getSmevt_id().equals(((StateMachineEvent_c)elem).getSmevt_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof StateMachineEvent_c)) {
           return false;
       }
       
       StateMachineEvent_c me = (StateMachineEvent_c)elem;
      if (!getSmevt_id().equals(((StateMachineEvent_c)elem).getSmevt_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_smevt_id ;
  private long m_smevt_idLongBased ;
  private java.util.UUID         m_sm_id ;
  private java.util.UUID         m_smspd_id ;
  private int          m_numb ;
  private String       m_mning ;
  private int          m_is_lbl_u ;
  private String       m_unq_lbl ;
  private String       m_drv_lbl ;
  private String       m_descrip ;
      
// declare association references from this class
  
  
    
// referring navigation

StateMachine_c StateMachine ;
public void relateAcrossR502To(StateMachine_c target)
{
	relateAcrossR502To(target, true);
}
public void relateAcrossR502To(StateMachine_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == StateMachine) return;  // already related

    if ( StateMachine != target ) {
    
    Object oldKey = getInstanceKey();

    if (StateMachine != null) {
    
        StateMachine.clearBackPointerR502To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StateMachineEvent_c.relateAcrossR502To(StateMachine_c target)", 
			"Relate performed across R502 from State Machine Event to State Machine without unrelate of prior instance.");  
		}
    }
                
    	StateMachine = target ;
        m_sm_id = target.getSm_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR502To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "502", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR502From(StateMachine_c target)
{
	unrelateAcrossR502From(target, true);
}
public void unrelateAcrossR502From(StateMachine_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (StateMachine == null) return;  // already unrelated
	
	if (target != StateMachine) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R502", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR502To(this);
    }
    

      if(StateMachine != null) {
      
        m_sm_id = StateMachine.getSm_id();
        StateMachine = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "502", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StateMachineEvent_c getOneSM_EVTOnR502(StateMachine_c [] targets)
{
    return getOneSM_EVTOnR502(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR502(StateMachine_c [] targets, ClassQueryInterface_c test)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_EVTOnR502(targets[i], test);
        }
    }

    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR502(StateMachine_c target)
{
  return getOneSM_EVTOnR502(target, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR502(StateMachine_c target, boolean loadComponent)
{
    return getOneSM_EVTOnR502(target.getModelRoot(), target, null, loadComponent);
}

public static StateMachineEvent_c getOneSM_EVTOnR502(StateMachine_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_EVTOnR502(target.getModelRoot(), target, test);
  }
  return null;
}

public static StateMachineEvent_c getOneSM_EVTOnR502(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test)
{
	return getOneSM_EVTOnR502(modelRoot, target, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR502(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSM_EVTOnR502(modelRoot,target,test);
}
private static StateMachineEvent_c find_getOneSM_EVTOnR502(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502) {
	    for ( int i = 0; i < target.backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502.size(); ++i ) {
	      StateMachineEvent_c source = (StateMachineEvent_c)target.backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR502(StateMachine_c [] targets)
{
  return getManySM_EVTsOnR502(targets, null);
}
public static StateMachineEvent_c [] getManySM_EVTsOnR502(StateMachine_c [] targets, boolean loadComponent)
{
  return getManySM_EVTsOnR502(targets, null, loadComponent);
}
public static StateMachineEvent_c [] getManySM_EVTsOnR502(StateMachine_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR502(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR502(StateMachine_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StateMachineEvent_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(StateMachineEvent_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502) {
	    for (int j = 0; j < targets[i].backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502.size(); ++j) {
	      StateMachineEvent_c source = (StateMachineEvent_c)targets[i].backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	StateMachineEvent_c[] ret_set = new StateMachineEvent_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StateMachineEvent_c[0];
  }
  }

public static StateMachineEvent_c [] getManySM_EVTsOnR502(StateMachine_c target)
{
  return getManySM_EVTsOnR502(target, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR502(StateMachine_c target, boolean loadComponent)
{
  return getManySM_EVTsOnR502(target, null, loadComponent);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR502(StateMachine_c target, ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR502(target, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR502(StateMachine_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new StateMachineEvent_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502) {
    for (int i = 0; i < target.backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502.size(); ++i) {
      StateMachineEvent_c source = (StateMachineEvent_c)target.backPointer_CanBeCommunicatedToViaStateMachineEventCanBeCommunicatedToVia_R502.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		StateMachineEvent_c[] ret_set = new StateMachineEvent_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new StateMachineEvent_c[0];
	}
  }


  
    
// referring navigation

EventSupplementalData_c CarriesEventSupplementalData ;
public void relateAcrossR520To(EventSupplementalData_c target)
{
	relateAcrossR520To(target, true);
}
public void relateAcrossR520To(EventSupplementalData_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == CarriesEventSupplementalData) return;  // already related

    if ( CarriesEventSupplementalData != target ) {
    
    Object oldKey = getInstanceKey();

    if (CarriesEventSupplementalData != null) {
    
        CarriesEventSupplementalData.clearBackPointerR520To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StateMachineEvent_c.relateAcrossR520To(EventSupplementalData_c target)", 
			"Relate performed across R520 from State Machine Event to Event Supplemental Data without unrelate of prior instance.");  
		}
    }
                
    	CarriesEventSupplementalData = target ;
        if(IdAssigner.NULL_UUID.equals(target.getSm_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_sm_id = target.getSm_idCachedValue();
        }
        m_smspd_id = target.getSmspd_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR520To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "520", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR520From(EventSupplementalData_c target)
{
	unrelateAcrossR520From(target, true);
}
public void unrelateAcrossR520From(EventSupplementalData_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (CarriesEventSupplementalData == null) return;  // already unrelated
	
	if (target != CarriesEventSupplementalData) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R520", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR520To(this);
    }
    

      if(CarriesEventSupplementalData != null) {
      
        m_sm_id = CarriesEventSupplementalData.getSm_id();
        if(IdAssigner.NULL_UUID.equals(m_sm_id))
        {
          m_sm_id = CarriesEventSupplementalData.getSm_idCachedValue();
        }       
        m_smspd_id = CarriesEventSupplementalData.getSmspd_id();
        CarriesEventSupplementalData = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "520", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StateMachineEvent_c getOneSM_EVTOnR520(EventSupplementalData_c [] targets)
{
    return getOneSM_EVTOnR520(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR520(EventSupplementalData_c [] targets, ClassQueryInterface_c test)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_EVTOnR520(targets[i], test);
        }
    }

    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR520(EventSupplementalData_c target)
{
  return getOneSM_EVTOnR520(target, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR520(EventSupplementalData_c target, boolean loadComponent)
{
    return getOneSM_EVTOnR520(target.getModelRoot(), target, null, loadComponent);
}

public static StateMachineEvent_c getOneSM_EVTOnR520(EventSupplementalData_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_EVTOnR520(target.getModelRoot(), target, test);
  }
  return null;
}

public static StateMachineEvent_c getOneSM_EVTOnR520(ModelRoot modelRoot, EventSupplementalData_c target, ClassQueryInterface_c test)
{
	return getOneSM_EVTOnR520(modelRoot, target, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR520(ModelRoot modelRoot, EventSupplementalData_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSM_EVTOnR520(modelRoot,target,test);
}
private static StateMachineEvent_c find_getOneSM_EVTOnR520(ModelRoot modelRoot, EventSupplementalData_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520) {
	    for ( int i = 0; i < target.backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520.size(); ++i ) {
	      StateMachineEvent_c source = (StateMachineEvent_c)target.backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR520(EventSupplementalData_c [] targets)
{
  return getManySM_EVTsOnR520(targets, null);
}
public static StateMachineEvent_c [] getManySM_EVTsOnR520(EventSupplementalData_c [] targets, boolean loadComponent)
{
  return getManySM_EVTsOnR520(targets, null, loadComponent);
}
public static StateMachineEvent_c [] getManySM_EVTsOnR520(EventSupplementalData_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR520(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR520(EventSupplementalData_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StateMachineEvent_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(StateMachineEvent_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520) {
	    for (int j = 0; j < targets[i].backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520.size(); ++j) {
	      StateMachineEvent_c source = (StateMachineEvent_c)targets[i].backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	StateMachineEvent_c[] ret_set = new StateMachineEvent_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StateMachineEvent_c[0];
  }
  }

public static StateMachineEvent_c [] getManySM_EVTsOnR520(EventSupplementalData_c target)
{
  return getManySM_EVTsOnR520(target, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR520(EventSupplementalData_c target, boolean loadComponent)
{
  return getManySM_EVTsOnR520(target, null, loadComponent);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR520(EventSupplementalData_c target, ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR520(target, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR520(EventSupplementalData_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new StateMachineEvent_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520) {
    for (int i = 0; i < target.backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520.size(); ++i) {
      StateMachineEvent_c source = (StateMachineEvent_c)target.backPointer_DefinesSignatureOfStateMachineEventDefinesSignatureOf_R520.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		StateMachineEvent_c[] ret_set = new StateMachineEvent_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new StateMachineEvent_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<StateMachineEventDataItem_c> backPointer_CarriesStateMachineEventDataItemCarries_R532 = new ArrayList<StateMachineEventDataItem_c>();

public void setStateMachineEventDataItemOrderInChildListR532(StateMachineEventDataItem_c target, int index) {
	unrelateAcrossR532From(target);
	StateMachineEventDataItem_c[] elements = StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR532From((StateMachineEventDataItem_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR532To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR532To((StateMachineEventDataItem_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR532To(StateMachineEventDataItem_c target)
{
  if (target != null) {
    target.relateAcrossR532To(this, true) ;
  }
}

public void relateAcrossR532To(StateMachineEventDataItem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR532To(this, notifyChanges) ;
  }
}

public void setBackPointerR532To(StateMachineEventDataItem_c target)
{
  	synchronized (backPointer_CarriesStateMachineEventDataItemCarries_R532) {
		backPointer_CarriesStateMachineEventDataItemCarries_R532.add(target);
	}
}

public void unrelateAcrossR532From(StateMachineEventDataItem_c target)
{
  if (target != null) {
    target.unrelateAcrossR532From(this, true) ;
  }
}

public void unrelateAcrossR532From(StateMachineEventDataItem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR532From(this, notifyChanges) ;
  }
}

public void clearBackPointerR532To(StateMachineEventDataItem_c target)
{
  synchronized (backPointer_CarriesStateMachineEventDataItemCarries_R532) {
	    backPointer_CarriesStateMachineEventDataItemCarries_R532.remove(target);
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR532(StateMachineEventDataItem_c [] targets)
{
    return getOneSM_EVTOnR532(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR532(StateMachineEventDataItem_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR532(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR532(StateMachineEventDataItem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR532(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR532(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR532(StateMachineEventDataItem_c target)
{
	return getOneSM_EVTOnR532(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR532(StateMachineEventDataItem_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.CarriedByStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR532(StateMachineEventDataItem_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR532(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR532(StateMachineEventDataItem_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].CarriedByStateMachineEvent == null)
	  targets[i].loadProxy();
    StateMachineEvent_c associate = targets[i].CarriedByStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR532(StateMachineEventDataItem_c [] targets)
{
  return getManySM_EVTsOnR532(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR532(StateMachineEventDataItem_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    StateMachineEventDataItem_c [] targetArray = new StateMachineEventDataItem_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR532(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR532(StateMachineEventDataItem_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR532(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR532(StateMachineEventDataItem_c target)
{
    return getManySM_EVTsOnR532(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR532(StateMachineEventDataItem_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR532(target, null, loadComponent);
}


    
  
  
// referred to navigation

SemEvent_c backPointer_IsSubtypeSemEventIsSubtype_R525;

public void setSemEventOrderInChildListR525(SemEvent_c target, int index) {
	unrelateAcrossR525From(target);
	SemEvent_c[] elements = SemEvent_c.getManySM_SEVTsOnR525(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR525From((SemEvent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR525To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR525To((SemEvent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR525To(SemEvent_c target)
{
  if (target != null) {
    target.relateAcrossR525To(this, true) ;
  }
}

public void relateAcrossR525To(SemEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR525To(this, notifyChanges) ;
  }
}

public void setBackPointerR525To(SemEvent_c target)
{
    backPointer_IsSubtypeSemEventIsSubtype_R525 = target;
}

public void unrelateAcrossR525From(SemEvent_c target)
{
  if (target != null) {
    target.unrelateAcrossR525From(this, true) ;
  }
}

public void unrelateAcrossR525From(SemEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR525From(this, notifyChanges) ;
  }
}

public void clearBackPointerR525To(SemEvent_c target)
{
	if (target == backPointer_IsSubtypeSemEventIsSubtype_R525) {
		backPointer_IsSubtypeSemEventIsSubtype_R525 = null;
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR525(SemEvent_c [] targets)
{
    return getOneSM_EVTOnR525(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR525(SemEvent_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR525(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR525(SemEvent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR525(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR525(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR525(SemEvent_c target)
{
	return getOneSM_EVTOnR525(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR525(SemEvent_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(SemEvent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR525(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(SemEvent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeStateMachineEvent == null)
	  targets[i].loadProxy();
    StateMachineEvent_c associate = targets[i].IsSupertypeStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(SemEvent_c [] targets)
{
  return getManySM_EVTsOnR525(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(SemEvent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SemEvent_c [] targetArray = new SemEvent_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR525(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(SemEvent_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR525(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(SemEvent_c target)
{
    return getManySM_EVTsOnR525(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(SemEvent_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR525(target, null, loadComponent);
}

  
  
  
// referred to navigation

PolymorphicEvent_c backPointer_IsSubtypePolymorphicEventIsSubtype_R525;

public void setPolymorphicEventOrderInChildListR525(PolymorphicEvent_c target, int index) {
	unrelateAcrossR525From(target);
	PolymorphicEvent_c[] elements = PolymorphicEvent_c.getManySM_PEVTsOnR525(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR525From((PolymorphicEvent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR525To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR525To((PolymorphicEvent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR525To(PolymorphicEvent_c target)
{
  if (target != null) {
    target.relateAcrossR525To(this, true) ;
  }
}

public void relateAcrossR525To(PolymorphicEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR525To(this, notifyChanges) ;
  }
}

public void setBackPointerR525To(PolymorphicEvent_c target)
{
    backPointer_IsSubtypePolymorphicEventIsSubtype_R525 = target;
}

public void unrelateAcrossR525From(PolymorphicEvent_c target)
{
  if (target != null) {
    target.unrelateAcrossR525From(this, true) ;
  }
}

public void unrelateAcrossR525From(PolymorphicEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR525From(this, notifyChanges) ;
  }
}

public void clearBackPointerR525To(PolymorphicEvent_c target)
{
	if (target == backPointer_IsSubtypePolymorphicEventIsSubtype_R525) {
		backPointer_IsSubtypePolymorphicEventIsSubtype_R525 = null;
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR525(PolymorphicEvent_c [] targets)
{
    return getOneSM_EVTOnR525(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR525(PolymorphicEvent_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR525(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR525(PolymorphicEvent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR525(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR525(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR525(PolymorphicEvent_c target)
{
	return getOneSM_EVTOnR525(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR525(PolymorphicEvent_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(PolymorphicEvent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR525(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(PolymorphicEvent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeStateMachineEvent == null)
	  targets[i].loadProxy();
    StateMachineEvent_c associate = targets[i].IsSupertypeStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(PolymorphicEvent_c [] targets)
{
  return getManySM_EVTsOnR525(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(PolymorphicEvent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    PolymorphicEvent_c [] targetArray = new PolymorphicEvent_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR525(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(PolymorphicEvent_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR525(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(PolymorphicEvent_c target)
{
    return getManySM_EVTsOnR525(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR525(PolymorphicEvent_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR525(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<EventMessage_c> backPointer_IsGeneratedByEventMessageIsGeneratedBy_R1009 = new ArrayList<EventMessage_c>();

public void setEventMessageOrderInChildListR1009(EventMessage_c target, int index) {
	unrelateAcrossR1009From(target);
	EventMessage_c[] elements = EventMessage_c.getManyMSG_EsOnR1009(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1009From((EventMessage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1009To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1009To((EventMessage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1009To(EventMessage_c target)
{
  if (target != null) {
    target.relateAcrossR1009To(this, true) ;
  }
}

public void relateAcrossR1009To(EventMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1009To(this, notifyChanges) ;
  }
}

public void setBackPointerR1009To(EventMessage_c target)
{
  	synchronized (backPointer_IsGeneratedByEventMessageIsGeneratedBy_R1009) {
		backPointer_IsGeneratedByEventMessageIsGeneratedBy_R1009.add(target);
	}
}

public void unrelateAcrossR1009From(EventMessage_c target)
{
  if (target != null) {
    target.unrelateAcrossR1009From(this, true) ;
  }
}

public void unrelateAcrossR1009From(EventMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1009From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1009To(EventMessage_c target)
{
  synchronized (backPointer_IsGeneratedByEventMessageIsGeneratedBy_R1009) {
	    backPointer_IsGeneratedByEventMessageIsGeneratedBy_R1009.remove(target);
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR1009(EventMessage_c [] targets)
{
    return getOneSM_EVTOnR1009(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR1009(EventMessage_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR1009(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR1009(EventMessage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR1009(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR1009(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR1009(EventMessage_c target)
{
	return getOneSM_EVTOnR1009(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR1009(EventMessage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.GeneratesStateMachineEvent != null){
		target.GeneratesStateMachineEvent.loadProxy();
	}
	}
    return target.GeneratesStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR1009(EventMessage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR1009(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR1009(EventMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].GeneratesStateMachineEvent == null)
	  targets[i].loadProxy();
    StateMachineEvent_c associate = targets[i].GeneratesStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR1009(EventMessage_c [] targets)
{
  return getManySM_EVTsOnR1009(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR1009(EventMessage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    EventMessage_c [] targetArray = new EventMessage_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR1009(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR1009(EventMessage_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR1009(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR1009(EventMessage_c target)
{
    return getManySM_EVTsOnR1009(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR1009(EventMessage_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR1009(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<PendingEvent_c> backPointer_HasInstancesPendingEventHasInstances_R2906 = new ArrayList<PendingEvent_c>();

public void setPendingEventOrderInChildListR2906(PendingEvent_c target, int index) {
	unrelateAcrossR2906From(target);
	PendingEvent_c[] elements = PendingEvent_c.getManyI_EVIsOnR2906(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2906From((PendingEvent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2906To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2906To((PendingEvent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2906To(PendingEvent_c target)
{
  if (target != null) {
    target.relateAcrossR2906To(this, true) ;
  }
}

public void relateAcrossR2906To(PendingEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2906To(this, notifyChanges) ;
  }
}

public void setBackPointerR2906To(PendingEvent_c target)
{
  	synchronized (backPointer_HasInstancesPendingEventHasInstances_R2906) {
		backPointer_HasInstancesPendingEventHasInstances_R2906.add(target);
	}
}

public void unrelateAcrossR2906From(PendingEvent_c target)
{
  if (target != null) {
    target.unrelateAcrossR2906From(this, true) ;
  }
}

public void unrelateAcrossR2906From(PendingEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2906From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2906To(PendingEvent_c target)
{
  synchronized (backPointer_HasInstancesPendingEventHasInstances_R2906) {
	    backPointer_HasInstancesPendingEventHasInstances_R2906.remove(target);
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR2906(PendingEvent_c [] targets)
{
    return getOneSM_EVTOnR2906(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR2906(PendingEvent_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR2906(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR2906(PendingEvent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR2906(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR2906(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR2906(PendingEvent_c target)
{
	return getOneSM_EVTOnR2906(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR2906(PendingEvent_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsInstanceOfStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR2906(PendingEvent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR2906(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR2906(PendingEvent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
    StateMachineEvent_c associate = targets[i].IsInstanceOfStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR2906(PendingEvent_c [] targets)
{
  return getManySM_EVTsOnR2906(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR2906(PendingEvent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    PendingEvent_c [] targetArray = new PendingEvent_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR2906(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR2906(PendingEvent_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR2906(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR2906(PendingEvent_c target)
{
    return getManySM_EVTsOnR2906(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR2906(PendingEvent_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR2906(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<CreateSmEventStatement_c> backPointer_CreateSmEventStatement_R706 = new ArrayList<CreateSmEventStatement_c>();

public void setCreateSmEventStatementOrderInChildListR706(CreateSmEventStatement_c target, int index) {
	unrelateAcrossR706From(target);
	CreateSmEventStatement_c[] elements = CreateSmEventStatement_c.getManyE_CSMEsOnR706(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR706From((CreateSmEventStatement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR706To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR706To((CreateSmEventStatement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR706To(CreateSmEventStatement_c target)
{
  if (target != null) {
    target.relateAcrossR706To(this, true) ;
  }
}

public void relateAcrossR706To(CreateSmEventStatement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR706To(this, notifyChanges) ;
  }
}

public void setBackPointerR706To(CreateSmEventStatement_c target)
{
  	synchronized (backPointer_CreateSmEventStatement_R706) {
		backPointer_CreateSmEventStatement_R706.add(target);
	}
}

public void unrelateAcrossR706From(CreateSmEventStatement_c target)
{
  if (target != null) {
    target.unrelateAcrossR706From(this, true) ;
  }
}

public void unrelateAcrossR706From(CreateSmEventStatement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR706From(this, notifyChanges) ;
  }
}

public void clearBackPointerR706To(CreateSmEventStatement_c target)
{
  synchronized (backPointer_CreateSmEventStatement_R706) {
	    backPointer_CreateSmEventStatement_R706.remove(target);
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR706(CreateSmEventStatement_c [] targets)
{
    return getOneSM_EVTOnR706(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR706(CreateSmEventStatement_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR706(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR706(CreateSmEventStatement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR706(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR706(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR706(CreateSmEventStatement_c target)
{
	return getOneSM_EVTOnR706(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR706(CreateSmEventStatement_c target, boolean loadComponent)
{
  if (target != null) {
    return target.CreatesStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR706(CreateSmEventStatement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR706(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR706(CreateSmEventStatement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
    StateMachineEvent_c associate = targets[i].CreatesStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR706(CreateSmEventStatement_c [] targets)
{
  return getManySM_EVTsOnR706(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR706(CreateSmEventStatement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    CreateSmEventStatement_c [] targetArray = new CreateSmEventStatement_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR706(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR706(CreateSmEventStatement_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR706(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR706(CreateSmEventStatement_c target)
{
    return getManySM_EVTsOnR706(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR706(CreateSmEventStatement_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR706(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<GenerateSmEventStatement_c> backPointer_GenerateSmEventStatement_R707 = new ArrayList<GenerateSmEventStatement_c>();

public void setGenerateSmEventStatementOrderInChildListR707(GenerateSmEventStatement_c target, int index) {
	unrelateAcrossR707From(target);
	GenerateSmEventStatement_c[] elements = GenerateSmEventStatement_c.getManyE_GSMEsOnR707(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR707From((GenerateSmEventStatement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR707To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR707To((GenerateSmEventStatement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR707To(GenerateSmEventStatement_c target)
{
  if (target != null) {
    target.relateAcrossR707To(this, true) ;
  }
}

public void relateAcrossR707To(GenerateSmEventStatement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR707To(this, notifyChanges) ;
  }
}

public void setBackPointerR707To(GenerateSmEventStatement_c target)
{
  	synchronized (backPointer_GenerateSmEventStatement_R707) {
		backPointer_GenerateSmEventStatement_R707.add(target);
	}
}

public void unrelateAcrossR707From(GenerateSmEventStatement_c target)
{
  if (target != null) {
    target.unrelateAcrossR707From(this, true) ;
  }
}

public void unrelateAcrossR707From(GenerateSmEventStatement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR707From(this, notifyChanges) ;
  }
}

public void clearBackPointerR707To(GenerateSmEventStatement_c target)
{
  synchronized (backPointer_GenerateSmEventStatement_R707) {
	    backPointer_GenerateSmEventStatement_R707.remove(target);
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR707(GenerateSmEventStatement_c [] targets)
{
    return getOneSM_EVTOnR707(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR707(GenerateSmEventStatement_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR707(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR707(GenerateSmEventStatement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR707(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR707(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR707(GenerateSmEventStatement_c target)
{
	return getOneSM_EVTOnR707(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR707(GenerateSmEventStatement_c target, boolean loadComponent)
{
  if (target != null) {
    return target.GeneratesStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR707(GenerateSmEventStatement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR707(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR707(GenerateSmEventStatement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
    StateMachineEvent_c associate = targets[i].GeneratesStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR707(GenerateSmEventStatement_c [] targets)
{
  return getManySM_EVTsOnR707(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR707(GenerateSmEventStatement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    GenerateSmEventStatement_c [] targetArray = new GenerateSmEventStatement_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR707(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR707(GenerateSmEventStatement_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR707(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR707(GenerateSmEventStatement_c target)
{
    return getManySM_EVTsOnR707(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR707(GenerateSmEventStatement_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR707(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<EeToSmEventComm_c> backPointer_IsCarriedToOtherSmsViaEeToSmEventCommIsCarriedToOtherSmsVia_R405 = new ArrayList<EeToSmEventComm_c>();

public void setEeToSmEventCommOrderInChildListR405(EeToSmEventComm_c target, int index) {
	unrelateAcrossR405From(target);
	EeToSmEventComm_c[] elements = EeToSmEventComm_c.getManyCA_EESMEsOnR405(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR405From((EeToSmEventComm_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR405To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR405To((EeToSmEventComm_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR405To(EeToSmEventComm_c target)
{
  if (target != null) {
    target.relateAcrossR405To(this, true) ;
  }
}

public void relateAcrossR405To(EeToSmEventComm_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR405To(this, notifyChanges) ;
  }
}

public void setBackPointerR405To(EeToSmEventComm_c target)
{
  	synchronized (backPointer_IsCarriedToOtherSmsViaEeToSmEventCommIsCarriedToOtherSmsVia_R405) {
		backPointer_IsCarriedToOtherSmsViaEeToSmEventCommIsCarriedToOtherSmsVia_R405.add(target);
	}
}

public void unrelateAcrossR405From(EeToSmEventComm_c target)
{
  if (target != null) {
    target.unrelateAcrossR405From(this, true) ;
  }
}

public void unrelateAcrossR405From(EeToSmEventComm_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR405From(this, notifyChanges) ;
  }
}

public void clearBackPointerR405To(EeToSmEventComm_c target)
{
  synchronized (backPointer_IsCarriedToOtherSmsViaEeToSmEventCommIsCarriedToOtherSmsVia_R405) {
	    backPointer_IsCarriedToOtherSmsViaEeToSmEventCommIsCarriedToOtherSmsVia_R405.remove(target);
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR405(EeToSmEventComm_c [] targets)
{
    return getOneSM_EVTOnR405(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR405(EeToSmEventComm_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR405(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR405(EeToSmEventComm_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR405(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR405(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR405(EeToSmEventComm_c target)
{
	return getOneSM_EVTOnR405(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR405(EeToSmEventComm_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.RepresentsCommunicationOfStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR405(EeToSmEventComm_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR405(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR405(EeToSmEventComm_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RepresentsCommunicationOfStateMachineEvent == null)
	  targets[i].loadProxy();
    StateMachineEvent_c associate = targets[i].RepresentsCommunicationOfStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR405(EeToSmEventComm_c [] targets)
{
  return getManySM_EVTsOnR405(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR405(EeToSmEventComm_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    EeToSmEventComm_c [] targetArray = new EeToSmEventComm_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR405(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR405(EeToSmEventComm_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR405(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR405(EeToSmEventComm_c target)
{
    return getManySM_EVTsOnR405(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR405(EeToSmEventComm_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR405(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<SmToSmEventComm_c> backPointer_IsCarriedToOtherSmsViaSmToSmEventCommIsCarriedToOtherSmsVia_R409 = new ArrayList<SmToSmEventComm_c>();

public void setSmToSmEventCommOrderInChildListR409(SmToSmEventComm_c target, int index) {
	unrelateAcrossR409From(target);
	SmToSmEventComm_c[] elements = SmToSmEventComm_c.getManyCA_SMSMEsOnR409(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR409From((SmToSmEventComm_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR409To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR409To((SmToSmEventComm_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR409To(SmToSmEventComm_c target)
{
  if (target != null) {
    target.relateAcrossR409To(this, true) ;
  }
}

public void relateAcrossR409To(SmToSmEventComm_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR409To(this, notifyChanges) ;
  }
}

public void setBackPointerR409To(SmToSmEventComm_c target)
{
  	synchronized (backPointer_IsCarriedToOtherSmsViaSmToSmEventCommIsCarriedToOtherSmsVia_R409) {
		backPointer_IsCarriedToOtherSmsViaSmToSmEventCommIsCarriedToOtherSmsVia_R409.add(target);
	}
}

public void unrelateAcrossR409From(SmToSmEventComm_c target)
{
  if (target != null) {
    target.unrelateAcrossR409From(this, true) ;
  }
}

public void unrelateAcrossR409From(SmToSmEventComm_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR409From(this, notifyChanges) ;
  }
}

public void clearBackPointerR409To(SmToSmEventComm_c target)
{
  synchronized (backPointer_IsCarriedToOtherSmsViaSmToSmEventCommIsCarriedToOtherSmsVia_R409) {
	    backPointer_IsCarriedToOtherSmsViaSmToSmEventCommIsCarriedToOtherSmsVia_R409.remove(target);
	}
}

public static StateMachineEvent_c getOneSM_EVTOnR409(SmToSmEventComm_c [] targets)
{
    return getOneSM_EVTOnR409(targets, null);
}

public static StateMachineEvent_c getOneSM_EVTOnR409(SmToSmEventComm_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTOnR409(targets, test, true);
}

public static StateMachineEvent_c getOneSM_EVTOnR409(SmToSmEventComm_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEvent_c candidate_val = getOneSM_EVTOnR409(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTOnR409(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEvent_c getOneSM_EVTOnR409(SmToSmEventComm_c target)
{
	return getOneSM_EVTOnR409(target, true);
}
public static StateMachineEvent_c getOneSM_EVTOnR409(SmToSmEventComm_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.RepresentsCommunicationOfStateMachineEvent ;
  } else {
    return null;
  }
}

public static StateMachineEvent_c [] getManySM_EVTsOnR409(SmToSmEventComm_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTsOnR409(targets, test, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR409(SmToSmEventComm_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEvent_c[0];
  
  
  LinkedHashSet<StateMachineEvent_c> elementsSet = new LinkedHashSet<StateMachineEvent_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RepresentsCommunicationOfStateMachineEvent == null)
	  targets[i].loadProxy();
    StateMachineEvent_c associate = targets[i].RepresentsCommunicationOfStateMachineEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEvent_c[] result = new StateMachineEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEvent_c [] getManySM_EVTsOnR409(SmToSmEventComm_c [] targets)
{
  return getManySM_EVTsOnR409(targets, null);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR409(SmToSmEventComm_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SmToSmEventComm_c [] targetArray = new SmToSmEventComm_c[1];
    targetArray[0] = target;
    return getManySM_EVTsOnR409(targetArray, test, loadComponent);
  } else {
    StateMachineEvent_c [] result = new StateMachineEvent_c [0] ;
    return result ;
  }
  
}

public static StateMachineEvent_c [] getManySM_EVTsOnR409(SmToSmEventComm_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTsOnR409(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR409(SmToSmEventComm_c target)
{
    return getManySM_EVTsOnR409(target, null, true);
}

public static StateMachineEvent_c [] getManySM_EVTsOnR409(SmToSmEventComm_c target, boolean loadComponent)
{
    return getManySM_EVTsOnR409(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (StateMachine == null) {          
      // R502
      StateMachine_c relInst38928 = (StateMachine_c) baseRoot.getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38928 == null) {
      			relInst38928 = (StateMachine_c) Ooaofooa.getDefaultInstance().getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
      		}
			if (relInst38928 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38928 = (StateMachine_c) roots[i].getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
					if (relInst38928 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38928 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38928) && !isProxy())) {
	      relInst38928.relateAcrossR502To(this, notifyChanges);
	  }
	  }
	}
	          

	if (CarriesEventSupplementalData == null) {          
      // R520
      EventSupplementalData_c relInst38929 = (EventSupplementalData_c) baseRoot.getInstanceList(EventSupplementalData_c.class).get(new Object[] {m_smspd_id,m_sm_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38929 == null) {
      			relInst38929 = (EventSupplementalData_c) Ooaofooa.getDefaultInstance().getInstanceList(EventSupplementalData_c.class).get(new Object[] {m_smspd_id,m_sm_id});
      		}
			if (relInst38929 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38929 = (EventSupplementalData_c) roots[i].getInstanceList(EventSupplementalData_c.class).get(new Object[] {m_smspd_id,m_sm_id});
					if (relInst38929 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38929 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38929) && !isProxy())) {
	      relInst38929.relateAcrossR520To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R502
      // SM_SM
		  inst=StateMachine;
			unrelateAcrossR502From(StateMachine, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R520
      // SM_SUPDT
		  inst=CarriesEventSupplementalData;
			unrelateAcrossR520From(CarriesEventSupplementalData, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(StateMachineEvent_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final StateMachineEvent_c inst = (StateMachineEvent_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(StateMachineEvent_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static StateMachineEvent_c StateMachineEventInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		StateMachineEvent_c result=findStateMachineEventInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,StateMachineEvent_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findStateMachineEventInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static StateMachineEvent_c findStateMachineEventInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(StateMachineEvent_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				StateMachineEvent_c x = (StateMachineEvent_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static StateMachineEvent_c StateMachineEventInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return StateMachineEventInstance(modelRoot,test,true);
  }
  
  public static StateMachineEvent_c StateMachineEventInstance(ModelRoot modelRoot)
  {
	 return StateMachineEventInstance(modelRoot,null,true);
  }

  public static StateMachineEvent_c [] StateMachineEventInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, StateMachineEvent_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(StateMachineEvent_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					StateMachineEvent_c x = (StateMachineEvent_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				StateMachineEvent_c[] ret_set = new StateMachineEvent_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new StateMachineEvent_c[0];
			}		
		} 
  }
  public static StateMachineEvent_c [] StateMachineEventInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  StateMachineEventInstances(modelRoot,test,true);
  }
  public static StateMachineEvent_c [] StateMachineEventInstances(ModelRoot modelRoot)
  {
	return StateMachineEventInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the State Machine Event.dispose call: ";
	StateMachineEventDataItem_c testR532Inst = StateMachineEventDataItem_c.getOneSM_EVTDIOnR532(this, false);

	if ( testR532Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "532 ";	
	}
	StateMachine_c testR502Inst = StateMachine_c.getOneSM_SMOnR502(this, false);

	if ( testR502Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "502 ";
	}
	EventSupplementalData_c testR520Inst = EventSupplementalData_c.getOneSM_SUPDTOnR520(this, false);

	if ( testR520Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "520 ";
	}
	SemEvent_c testR525Inst1 = SemEvent_c.getOneSM_SEVTOnR525(this, false);

	if ( testR525Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "525 ";
	}
	PolymorphicEvent_c testR525Inst2 = PolymorphicEvent_c.getOneSM_PEVTOnR525(this, false);

	if ( testR525Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "525 ";
	}
	EventMessage_c testR1009Inst = EventMessage_c.getOneMSG_EOnR1009(this, false);

	if ( testR1009Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1009 ";	
	}
	PendingEvent_c testR2906Inst = PendingEvent_c.getOneI_EVIOnR2906(this, false);

	if ( testR2906Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2906 ";	
	}
	CreateSmEventStatement_c testR706Inst = CreateSmEventStatement_c.getOneE_CSMEOnR706(this, false);

	if ( testR706Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "706 ";	
	}
	GenerateSmEventStatement_c testR707Inst = GenerateSmEventStatement_c.getOneE_GSMEOnR707(this, false);

	if ( testR707Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "707 ";	
	}
	EeToSmEventComm_c testR405Inst = EeToSmEventComm_c.getOneCA_EESMEOnR405(this, false);

	if ( testR405Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "405 ";	
	}
	SmToSmEventComm_c testR409Inst = SmToSmEventComm_c.getOneCA_SMSMEOnR409(this, false);

	if ( testR409Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "409 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "State Machine Event", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("smevt_id")){
         return true;
      }
      if(attributeName.equals("sm_id")){
         return true;
      }
      if(attributeName.equals("smspd_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getSmevt_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getSmevt_idLongBased()
  {
    if(m_smevt_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_smevt_id)){
    	return 0xfffffff & m_smevt_id.getLeastSignificantBits();
    }
    return m_smevt_idLongBased ;
  }
  public java.util.UUID getSmevt_id()
  {
    return m_smevt_id ;
  }


  public void setSmevt_id(java.util.UUID newValue)
  {
   m_smevt_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getSm_idLongBased()
  {
    if ( StateMachine != null )
    {
      return StateMachine.getSm_idLongBased();
    }
    if ( CarriesEventSupplementalData != null )
    {
      return CarriesEventSupplementalData.getSm_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSm_id()
  {
    if ( StateMachine != null )
    {
      return StateMachine.getSm_id();
    }
    if ( CarriesEventSupplementalData != null )
    {
      return CarriesEventSupplementalData.getSm_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSm_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sm_id) )
      return m_sm_id;
    else
      return getSm_id();
  }
  
  public long getSmspd_idLongBased()
  {
    if ( CarriesEventSupplementalData != null )
    {
      return CarriesEventSupplementalData.getSmspd_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSmspd_id()
  {
    if ( CarriesEventSupplementalData != null )
    {
      return CarriesEventSupplementalData.getSmspd_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSmspd_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_smspd_id) )
      return m_smspd_id;
    else
      return getSmspd_id();
  }
  
  public void setSmspd_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_smspd_id)){
	        return;
	    }
	}else if(m_smspd_id != null){
	    if(m_smspd_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Smspd_id", m_smspd_id, newValue,true); 
   m_smspd_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getNumb()
  {
    return m_numb ;
  }


  public void setNumb(int newValue)
  {
    if(m_numb == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Numb", new Integer(m_numb), new Integer(newValue),true);

   m_numb = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getMning()
  {
    return m_mning ;
  }


  public void setMning(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_mning)){
	        return;
	    }
	}else if(m_mning != null){
	    if(m_mning.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Mning", m_mning, newValue,true); 
   m_mning = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getIs_lbl_u()
  {
    return m_is_lbl_u ;
  }


  public void setIs_lbl_u(int newValue)
  {
    if(m_is_lbl_u == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Is_lbl_u", new Integer(m_is_lbl_u), new Integer(newValue),true);

   m_is_lbl_u = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getUnq_lbl()
  {
    return m_unq_lbl ;
  }


  public void setUnq_lbl(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_unq_lbl)){
	        return;
	    }
	}else if(m_unq_lbl != null){
	    if(m_unq_lbl.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Unq_lbl", m_unq_lbl, newValue,true); 
   m_unq_lbl = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDrv_lbl()
  {
ModelRoot modelRoot = getModelRoot();
if ( (getIs_lbl_u() == 0) )
{

NonLocalEvent_c v_nlevt = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


if ( (  (v_nlevt != null)) )
{

PolymorphicEvent_c v_poly = PolymorphicEvent_c.getOneSM_PEVTOnR527(v_nlevt);


StateMachineEvent_c v_pevt = StateMachineEvent_c.getOneSM_EVTOnR525(v_poly);


if ( (  (v_pevt != null)) )
{

return v_pevt.getDrv_lbl() + "*";



}

else
{

if ( (  (v_poly != null)) )
{

return v_poly.getLocalclasskl() + Gd_c.Int_to_string(			    
getNumb()) + "*";



}

else
{

return Ooaofooa.Getorphanedelementkl(modelRoot) + Gd_c.Int_to_string(			    
getNumb()) + "*";



}


}


}

else
{

ModelClass_c v_cl = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR502(this)));


if ( (  (v_cl == null)) )
{

v_cl = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR502(this)));


if ( (  (v_cl != null)) )
{

SignalEvent_c v_signalEvt = SignalEvent_c.getOneSM_SGEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


if ( (  (v_signalEvt != null)) )
{

return v_signalEvt.Get_name();



}

else
{

return v_cl.getKey_lett() + "_A" + Gd_c.Int_to_string(			    
getNumb());



}


}

else
{

return Getcacheddrv_lbl() + Gd_c.Int_to_string(			    
getNumb());



}


}

else
{

SignalEvent_c v_signalEvt = SignalEvent_c.getOneSM_SGEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


if ( (  (v_signalEvt != null)) )
{

return v_signalEvt.Get_name();



}

else
{

return v_cl.getKey_lett() + Gd_c.Int_to_string(			    
getNumb());



}


}


}


}

else
{

return getUnq_lbl() + Gd_c.Int_to_string(			    
getNumb());



}


  }


  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "State Machine Event", //$NON-NLS-1$
	  " Operation entered: State Machine Event::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     StateMachineEvent_c [] objs = StateMachineEvent_c.StateMachineEventInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "State Machine Event", //$NON-NLS-1$
	  " Operation entered: State Machine Event::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class StateMachineEvent_c_test38931_c implements ClassQueryInterface_c
    {
	  StateMachineEvent_c_test38931_c( java.util.UUID            p38932 ) {
	  m_p38932 = p38932;
	  }
	  private java.util.UUID             m_p38932; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachineEvent_c selected = (StateMachineEvent_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSmevt_id().equals(m_p38932));
	      return retval;
	  }
    }

    StateMachineEvent_c [] objs38930 = 
    StateMachineEvent_c.StateMachineEventInstances(modelRoot, new StateMachineEvent_c_test38931_c(getSmevt_id())) ;

    if ( (  (objs38930.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event", //$NON-NLS-1$
           "Consistency: Object: State Machine Event: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38930.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38930.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs38930.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event", //$NON-NLS-1$
           "Consistency: Object: State Machine Event: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38930.length )  + " SMevt_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38930.length )  + " SMevt_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

    class StateMachineEvent_c_test38934_c implements ClassQueryInterface_c
    {
	  StateMachineEvent_c_test38934_c( java.util.UUID            p38935, java.util.UUID            p38936, java.util.UUID            p38937 ) {
	            m_p38935 = p38935; 
m_p38936 = p38936; 
m_p38937 = p38937;
	  }
	  private java.util.UUID             m_p38935; private java.util.UUID             m_p38936; private java.util.UUID             m_p38937; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachineEvent_c selected = (StateMachineEvent_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p38935)) & (selected.getSmevt_id().equals(m_p38936)) & (selected.getSmspd_id().equals(m_p38937));
	      return retval;
	  }
    }

    StateMachineEvent_c [] objs38933 = 
    StateMachineEvent_c.StateMachineEventInstances(modelRoot, new StateMachineEvent_c_test38934_c(getSm_id(), getSmevt_id(), getSmspd_id())) ;

    if ( (  (objs38933.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event", //$NON-NLS-1$
           "Consistency: Object: State Machine Event: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38933.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38933.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs38933.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event", //$NON-NLS-1$
           "Consistency: Object: State Machine Event: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38933.length )  + " SM_ID: " + "Not Printable"  + " SMevt_ID: " + "Not Printable"  + " SMspd_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38933.length )  + " SM_ID: " + "Not Printable"  + " SMevt_ID: " + "Not Printable"  + " SMspd_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // State Machine Event is a referring class in association: rel.Numb = 502
          // The participating class is: State Machine
    class StateMachine_c_test38940_c implements ClassQueryInterface_c
    {
	  StateMachine_c_test38940_c( java.util.UUID            p38941 ) {
	  m_p38941 = p38941;
	  }
	  private java.util.UUID             m_p38941; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachine_c selected = (StateMachine_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p38941));
	      return retval;
	  }
    }

    StateMachine_c [] objs38939 = 
    StateMachine_c.StateMachineInstances(modelRoot, new StateMachine_c_test38940_c(getSm_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs38939.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event", //$NON-NLS-1$
           "Consistency: Object: State Machine Event: Association: 502: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38939.length )  + " SM_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event: Association: 502: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38939.length )  + " SM_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // State Machine Event is a referring class in association: rel.Numb = 520
          // The participating class is: Event Supplemental Data
		  // This class is deprecated, no consistency check generated

          // State Machine Event is a participating class in association: rel.Numb = 532
             // Object: State Machine Event Data Item
          // State Machine Event is a participating class in association: rel.Numb = 1009
             // Object: Event Message
          // State Machine Event is a participating class in association: rel.Numb = 2906
             // Object: Pending Event
          // State Machine Event is a participating class in association: rel.Numb = 706
             // Object: Create SM Event Statement
          // State Machine Event is a participating class in association: rel.Numb = 707
             // Object: Generate SM Event Statement
          // State Machine Event is a participating class in association: rel.Numb = 405
             // Object: EE to SM Event Comm
          // State Machine Event is a participating class in association: rel.Numb = 409
             // Object: SM to SM Event Comm
          // Supertype: rel.Numb = 525
    int objs38946 = 0;
            // Subtype Object: SEM Event
    class SemEvent_c_test38947_c implements ClassQueryInterface_c
    {
	  SemEvent_c_test38947_c( java.util.UUID            p38948, java.util.UUID            p38949, java.util.UUID            p38950 ) {
	            m_p38948 = p38948; 
m_p38949 = p38949; 
m_p38950 = p38950;
	  }
	  private java.util.UUID             m_p38948; private java.util.UUID             m_p38949; private java.util.UUID             m_p38950; 
	  public boolean evaluate (Object candidate)
	  {
	      SemEvent_c selected = (SemEvent_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSmevt_id().equals(m_p38948)) & (selected.getSm_id().equals(m_p38949)) & (selected.getSmspd_id().equals(m_p38950));
	      return retval;
	  }
    }

    SemEvent_c [] objs38951 = 
    SemEvent_c.SemEventInstances(modelRoot, new SemEvent_c_test38947_c(getSmevt_id(), getSm_id(), getSmspd_id())) ;
 
    objs38946 = objs38946 + objs38951.length;
            // Subtype Object: Polymorphic Event
    class PolymorphicEvent_c_test38952_c implements ClassQueryInterface_c
    {
	  PolymorphicEvent_c_test38952_c( java.util.UUID            p38953, java.util.UUID            p38954, java.util.UUID            p38955 ) {
	            m_p38953 = p38953; 
m_p38954 = p38954; 
m_p38955 = p38955;
	  }
	  private java.util.UUID             m_p38953; private java.util.UUID             m_p38954; private java.util.UUID             m_p38955; 
	  public boolean evaluate (Object candidate)
	  {
	      PolymorphicEvent_c selected = (PolymorphicEvent_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSmevt_id().equals(m_p38953)) & (selected.getSm_id().equals(m_p38954)) & (selected.getSmspd_id().equals(m_p38955));
	      return retval;
	  }
    }

    PolymorphicEvent_c [] objs38956 = 
    PolymorphicEvent_c.PolymorphicEventInstances(modelRoot, new PolymorphicEvent_c_test38952_c(getSmevt_id(), getSm_id(), getSmspd_id())) ;
 
    objs38946 = objs38946 + objs38956.length;
    if ( objs38946 != 1 )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event", //$NON-NLS-1$
           "Consistency: Object: State Machine Event: Association: 525: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38946 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event: Association: 525: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38946 )  , e); 
      }
      retval = false;

    }

    return retval;
  }


  // declare transform functions
  public  String       Get_event_text()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Get_event_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = Get_name() ;


  class StateMachineEventDataItem_test37649_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return (selected.getPrevious_smedi_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
StateMachineEventDataItem_c v_parameter = StateMachineEventDataItem_c.getOneSM_EVTDIOnR532(this, new StateMachineEventDataItem_test37649_c());


NonLocalEvent_c v_nl = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


if (   (v_nl != null) )
{

  class StateMachineEventDataItem_test37650_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return (selected.getPrevious_smedi_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
StateMachineEventDataItem_c [] v_parameters = StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(StateMachineEvent_c.getManySM_EVTsOnR525(PolymorphicEvent_c.getManySM_PEVTsOnR527(v_nl)), new StateMachineEventDataItem_test37650_c());



}

if ( Pref_c.Getboolean(			    
"bridgepoint_prefs_show_event_parameters") )
{

if (   (v_parameter != null) )
{

v_result = v_result + "(" ;


String       v_sep = "" ;


while ( (  (v_parameter != null)) )
{

v_result = v_result + v_sep + v_parameter.getName() ;


v_sep = ", " ;


v_parameter = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(v_parameter);



}

v_result = v_result + ")" ;



}


}

else
{

if (   (v_parameter != null) )
{

v_result = v_result + "(...)" ;



}


}

return v_result;



   } // End get_event_text
  public  String       Get_name()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
NonLocalEvent_c v_nlevt = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


if ( (  (v_nlevt != null)) )
{

PolymorphicEvent_c v_poly = PolymorphicEvent_c.getOneSM_PEVTOnR527(v_nlevt);


if ( (  (v_poly != null)) )
{

return getMning() + "::" + v_poly.getLocalclassname();



}

else
{

return getMning() + "::" + Ooaofooa.Getorphanedelementname(modelRoot);



}


}

else
{

SignalEvent_c v_signalEvt = SignalEvent_c.getOneSM_SGEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


if ( (  (v_signalEvt != null)) )
{

return getDrv_lbl();



}

else
{

return getDrv_lbl() + ": " + getMning();



}


}


   } // End get_name
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR502(this);


this.unrelateAcrossR502From(v_sm);


SemEvent_c v_sevt = SemEvent_c.getOneSM_SEVTOnR525(this);


if ( (  (v_sevt != null)) )
{

if (v_sevt != null) {
v_sevt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

PolymorphicEvent_c v_pevt = PolymorphicEvent_c.getOneSM_PEVTOnR525(this);


if ( (  (v_pevt != null)) )
{

if (v_pevt != null) {
v_pevt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

StateMachineEventDataItem_c [] v_dis = StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(this);


StateMachineEventDataItem_c  v_di = null;
for ( int i37173 = 0; i37173 < v_dis.length; i37173++)
{
  v_di = v_dis[i37173] ;

if (v_di != null) {
v_di.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

SmToSmEventComm_c [] v_smsmes = SmToSmEventComm_c.getManyCA_SMSMEsOnR409(this);


SmToSmEventComm_c  v_smsme = null;
for ( int i37174 = 0; i37174 < v_smsmes.length; i37174++)
{
  v_smsme = v_smsmes[i37174] ;

if (v_smsme != null) {
v_smsme.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

EeToSmEventComm_c [] v_eesmes = EeToSmEventComm_c.getManyCA_EESMEsOnR405(this);


EeToSmEventComm_c  v_eesme = null;
for ( int i37175 = 0; i37175 < v_eesmes.length; i37175++)
{
  v_eesme = v_eesmes[i37175] ;

if (v_eesme != null) {
v_eesme.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

CreateSmEventStatement_c [] v_csmes = CreateSmEventStatement_c.getManyE_CSMEsOnR706(this);


CreateSmEventStatement_c  v_csme = null;
for ( int i37176 = 0; i37176 < v_csmes.length; i37176++)
{
  v_csme = v_csmes[i37176] ;

this.unrelateAcrossR706From(v_csme);



}

GenerateSmEventStatement_c [] v_gsmes = GenerateSmEventStatement_c.getManyE_GSMEsOnR707(this);


GenerateSmEventStatement_c  v_gsme = null;
for ( int i37177 = 0; i37177 < v_gsmes.length; i37177++)
{
  v_gsme = v_gsmes[i37177] ;

this.unrelateAcrossR707From(v_gsme);



}

EventMessage_c [] v_ems = EventMessage_c.getManyMSG_EsOnR1009(this);


EventMessage_c  v_em = null;
for ( int i37178 = 0; i37178 < v_ems.length; i37178++)
{
  v_em = v_ems[i37178] ;

AsynchronousMessage_c v_message = AsynchronousMessage_c.getOneMSG_AMOnR1019(v_em);


if (v_message != null) {
v_message.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

PendingEvent_c [] v_pend_evts = PendingEvent_c.getManyI_EVIsOnR2906(this);


PendingEvent_c  v_pend_evt = null;
for ( int i37179 = 0; i37179 < v_pend_evts.length; i37179++)
{
  v_pend_evt = v_pend_evts[i37179] ;

this.unrelateAcrossR2906From(v_pend_evt);


if (v_pend_evt != null) {
v_pend_evt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_name = Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Event"			    
,Converttoinstance()) ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setMning( v_success) ;



}

else
{

Dispose() ;



}

setNumb( 1) ;


Setuniquenumber(			    
false ) ;


StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR502(this);


SemEvent_c v_semEvt = new SemEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_semEvt));


  this.relateAcrossR525To(v_semEvt);


LocalEvent_c v_locEvt = new LocalEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_locEvt));


if (v_semEvt != null) {
  v_semEvt.relateAcrossR526To(v_locEvt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_semEvt != null) {
v_semEvt.Createdefaultmatrixentries() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End initialize
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("subtype")) )
{

if ( (p_Value.equals("SM_SEVT")) )
{

SemEvent_c v_sevt = SemEvent_c.getOneSM_SEVTOnR525(this);


return   (v_sevt != null);



}

else if ( (p_Value.equals("SM_PEVT")) )
{

PolymorphicEvent_c v_pevt = PolymorphicEvent_c.getOneSM_PEVTOnR525(this);


return   (v_pevt != null);



}


}

else if ( (p_Name.equals("can")) )
{

if ( ((p_Value.equals("ch generic pkg") || p_Value.equals("ignore spec pkg")) || (p_Value.equals("ch spec pkg") || p_Value.equals("ignore generic pkg"))) )
{

ModelClass_c v_cls = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR502(this)));


if ( (  (v_cls == null)) )
{

v_cls = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR502(this)));



}

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(v_cls);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_cc = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_cc != null) ;


if ( (((p_Value.equals("ch spec pkg")) || (p_Value.equals("ignore spec pkg"))) && (v_isInGenericPackage)) )
{

return false;



}

if ( (((p_Value.equals("ch generic pkg")) || (p_Value.equals("ignore generic pkg"))) && (  !v_isInGenericPackage)) )
{

return false;



}

  class StateMachineState_test37380_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineState_c selected = (StateMachineState_c)candidate;
		return Ooaofooa.Canstateignoreorsayeventcanthappen(modelRoot			    
,((p_Value.equals("ch spec pkg")) || (p_Value.equals("ch generic pkg")))			    
,getSmevt_id()			    
,getSm_id()			    
,selected.getSmstt_id()			    
,selected.getSm_id()) ;
	}
  }
StateMachineState_c v_state = StateMachineState_c.StateMachineStateInstance(modelRoot, new StateMachineState_test37380_c()) ;


return   (v_state != null);



}


}

return false;



   } // End actionFilter
  public  boolean      Hasdataitem(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Hasdataitem") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineEventDataItem_test37651_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return selected.getSmedi_id().equals(p_Id) ;
	}
  }
StateMachineEventDataItem_c v_item = StateMachineEventDataItem_c.getOneSM_EVTDIOnR532(this, new StateMachineEventDataItem_test37651_c());


return   (v_item != null);



   } // End hasDataItem
  public  boolean      Isassignabletostatemachine(final java.util.UUID         p_Assigntomachineid,final boolean      p_Iscreationtransition)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Isassignabletostatemachine") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassStateMachine_c v_classStateMachine = ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR502(this));


if ( (  (v_classStateMachine != null)) )
{

SignalEvent_c v_sigEvt = SignalEvent_c.getOneSM_SGEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


if (   (v_sigEvt != null) )
{

return false;



}

return p_Assigntomachineid.equals(getSm_id());



}

ModelClass_c v_selfClass = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR502(this)));


StateMachine_c v_assignToMachine = (StateMachine_c) modelRoot.getInstanceList(StateMachine_c.class).getGlobal(null, p_Assigntomachineid);


ModelClass_c v_assignToMachineClass = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(v_assignToMachine));


boolean      v_isSupertype = v_selfClass.Issupertypeof(			    
v_assignToMachineClass.getObj_id()) ;


if ( ((! p_Assigntomachineid.equals(getSm_id()) &&   !v_isSupertype) || (! p_Assigntomachineid.equals(getSm_id()) && p_Iscreationtransition)) )
{

return false;



}

PolymorphicEvent_c v_polymorphic = PolymorphicEvent_c.getOneSM_PEVTOnR525(this);


if ( (  !  (v_polymorphic == null)) )
{

if ( (Isassignedinsubtypestatemachine(			    
v_assignToMachineClass.getObj_id())) )
{

return false;



}


}

NonLocalEvent_c v_nonLocal = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


if ( (  !  (v_nonLocal == null)) )
{

return false;



}

if ( (v_isSupertype && Isassignedinsupertypestatemachine(			    
v_assignToMachineClass.getObj_id())) )
{

return false;



}

return true;



   } // End isAssignableToStateMachine
  public  boolean      Isassignedinsubtypestatemachine(final java.util.UUID         p_Supertypeid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Isassignedinsubtypestatemachine") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_supertype = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, p_Supertypeid);


ModelClass_c [] v_subtypes = ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferringClassInAssoc_c.getManyR_RGOsOnR205(ClassAsSubtype_c.getManyR_SUBsOnR213(SubtypeSupertypeAssociation_c.getManyR_SUBSUPsOnR212(ClassAsSupertype_c.getManyR_SUPERsOnR204(ReferredToClassInAssoc_c.getManyR_RTOsOnR203(ClassInAssociation_c.getManyR_OIRsOnR201(v_supertype))))))));


ModelClass_c  v_subtype = null;
for ( int i37180 = 0; i37180 < v_subtypes.length; i37180++)
{
  v_subtype = v_subtypes[i37180] ;

StateMachine_c v_subtypeMachine = StateMachine_c.getOneSM_SMOnR517(InstanceStateMachine_c.getOneSM_ISMOnR518(v_subtype));


if ( (  (v_subtypeMachine != null)) )
{

  class StateMachineEvent_test37652_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37652_c( java.util.UUID         p37653, java.util.UUID         p37654 ) {
		m_p37653 = p37653;
				m_p37654 = p37654;
	}
	private java.util.UUID         m_p37653;
		private java.util.UUID         m_p37654;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return selected.getSmevt_id().equals(m_p37653) && selected.getSm_id().equals(m_p37654) ;
	}
  }
StateMachineEvent_c v_aliasedEvent = StateMachineEvent_c.getOneSM_EVTOnR525(PolymorphicEvent_c.getManySM_PEVTsOnR527(NonLocalEvent_c.getManySM_NLEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR502(v_subtypeMachine)))), new StateMachineEvent_test37652_c(getSmevt_id(), getSm_id()));


if ( (  !  (v_aliasedEvent == null)) )
{

return true;



}


}

if ( (Isassignedinsubtypestatemachine(			    
v_subtype.getObj_id())) )
{

return true;



}


}

return false;



   } // End isAssignedInSubtypeStateMachine
  public  boolean      Isassignedinsupertypestatemachine(final java.util.UUID         p_Subtypeid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Isassignedinsupertypestatemachine") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_subtype = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, p_Subtypeid);


ModelClass_c [] v_supertypes = ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferredToClassInAssoc_c.getManyR_RTOsOnR204(ClassAsSupertype_c.getManyR_SUPERsOnR212(SubtypeSupertypeAssociation_c.getManyR_SUBSUPsOnR213(ClassAsSubtype_c.getManyR_SUBsOnR205(ReferringClassInAssoc_c.getManyR_RGOsOnR203(ClassInAssociation_c.getManyR_OIRsOnR201(v_subtype))))))));


ModelClass_c  v_supertype = null;
for ( int i37181 = 0; i37181 < v_supertypes.length; i37181++)
{
  v_supertype = v_supertypes[i37181] ;

StateMachine_c v_supertypeMachine = StateMachine_c.getOneSM_SMOnR517(InstanceStateMachine_c.getOneSM_ISMOnR518(v_supertype));


if ( (  (v_supertypeMachine != null)) )
{

  class StateMachineEvent_test37655_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37655_c( java.util.UUID         p37656, java.util.UUID         p37657 ) {
		m_p37656 = p37656;
				m_p37657 = p37657;
	}
	private java.util.UUID         m_p37656;
		private java.util.UUID         m_p37657;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return selected.getSmevt_id().equals(m_p37656) && selected.getSm_id().equals(m_p37657) ;
	}
  }
StateMachineEvent_c v_event = StateMachineEvent_c.getOneSM_EVTOnR502(v_supertypeMachine, new StateMachineEvent_test37655_c(getSmevt_id(), getSm_id()));


if ( (  (v_event != null)) )
{

NewStateTransition_c v_transition = NewStateTransition_c.getOneSM_NSTXNOnR504(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(SemEvent_c.getManySM_SEVTsOnR525(v_event)));


if ( (  (v_transition != null)) )
{

return true;



}

EventIgnored_c v_ignored = EventIgnored_c.getOneSM_EIGNOnR504(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(SemEvent_c.getManySM_SEVTsOnR525(v_event)));


if ( (  (v_ignored != null)) )
{

return true;



}


}

  class StateMachineEvent_test37658_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37658_c( java.util.UUID         p37659, java.util.UUID         p37660 ) {
		m_p37659 = p37659;
				m_p37660 = p37660;
	}
	private java.util.UUID         m_p37659;
		private java.util.UUID         m_p37660;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return selected.getSmevt_id().equals(m_p37659) && selected.getSm_id().equals(m_p37660) ;
	}
  }
StateMachineEvent_c v_aliasedEvent = StateMachineEvent_c.getOneSM_EVTOnR525(PolymorphicEvent_c.getManySM_PEVTsOnR527(NonLocalEvent_c.getManySM_NLEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR502(v_supertypeMachine)))), new StateMachineEvent_test37658_c(getSmevt_id(), getSm_id()));


if ( (  (v_aliasedEvent != null)) )
{

return true;



}


}

if ( (Isassignedinsupertypestatemachine(			    
v_supertype.getObj_id())) )
{

return true;



}


}

return false;



   } // End isAssignedInSupertypeStateMachine
  public  boolean      Canstateignoreorsaycanthappen(final boolean      p_Considercanthappen,final java.util.UUID         p_Stateid,final java.util.UUID         p_Statestatemachineid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Canstateignoreorsaycanthappen") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineState_test37381_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineState_c selected = (StateMachineState_c)candidate;
		return selected.getSmstt_id().equals(p_Stateid) && selected.getSm_id().equals(p_Statestatemachineid) ;
	}
  }
StateMachineState_c v_state = StateMachineState_c.StateMachineStateInstance(modelRoot, new StateMachineState_test37381_c()) ;


return v_state.Canignoreorsayeventcanthappen(			    
p_Considercanthappen			    
,getSmevt_id()			    
,getSm_id());



   } // End canStateIgnoreOrSayCantHappen
  public  void Ignoreonstate(final java.util.UUID         p_Stateid,final java.util.UUID         p_Statestatemachineid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Ignoreonstate") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineState_test37382_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineState_c selected = (StateMachineState_c)candidate;
		return selected.getSmstt_id().equals(p_Stateid) && selected.getSm_id().equals(p_Statestatemachineid) ;
	}
  }
StateMachineState_c v_state = StateMachineState_c.StateMachineStateInstance(modelRoot, new StateMachineState_test37382_c()) ;


java.util.UUID         v_eventId = Getassociatedeventforstatemachine(			    
v_state.getSm_id()) ;


StateMachineEvent_c v_event = (StateMachineEvent_c) modelRoot.getInstanceList(StateMachineEvent_c.class).getGlobal(null, v_eventId);


  class StateEventMatrixEntry_test37661_c implements ClassQueryInterface_c
  {
	StateEventMatrixEntry_test37661_c( java.util.UUID         p37662 ) {
		m_p37662 = p37662;
	}
	private java.util.UUID         m_p37662;
	public boolean evaluate (Object candidate)
	{
		StateEventMatrixEntry_c selected = (StateEventMatrixEntry_c)candidate;
		return (selected.getSmstt_id().equals(m_p37662)) ;
	}
  }
StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR503(SemEvent_c.getManySM_SEVTsOnR525(v_event), new StateEventMatrixEntry_test37661_c(v_state.getSmstt_id()));


if (v_seme != null) {
v_seme.Migratechtoei() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End ignoreOnState
  public  java.util.UUID         Getassociatedeventforstatemachine(final java.util.UUID         p_Statemachineid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Getassociatedeventforstatemachine") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (getSm_id().equals(p_Statemachineid)) )
{

return getSmevt_id();



}

  class StateMachineState_test37384_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineState_c selected = (StateMachineState_c)candidate;
		return selected.getSm_id().equals(p_Statemachineid) ;
	}
  }
StateMachineState_c v_machine = StateMachineState_c.StateMachineStateInstance(modelRoot, new StateMachineState_test37384_c()) ;


PolymorphicEvent_c v_polyEvent = PolymorphicEvent_c.getOneSM_PEVTOnR525(this);


if ( (  (v_polyEvent != null)) )
{

  class NonLocalEvent_test37663_c implements ClassQueryInterface_c
  {
	NonLocalEvent_test37663_c( java.util.UUID         p37664 ) {
		m_p37664 = p37664;
	}
	private java.util.UUID         m_p37664;
	public boolean evaluate (Object candidate)
	{
		NonLocalEvent_c selected = (NonLocalEvent_c)candidate;
		return selected.getSm_id().equals(m_p37664) ;
	}
  }
NonLocalEvent_c v_nonLocalEvent = NonLocalEvent_c.getOneSM_NLEVTOnR527(v_polyEvent, new NonLocalEvent_test37663_c(v_machine.getSm_id()));


if ( (  (v_nonLocalEvent != null)) )
{

return v_nonLocalEvent.getSmevt_id();



}

else
{

return v_polyEvent.Createnonlocaleventforstatemachine(			    
v_machine.getSm_id());



}


}

else
{

SemEvent_c v_matrixEvent = SemEvent_c.getOneSM_SEVTOnR525(this);


if (v_matrixEvent != null) {
v_matrixEvent.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_polyEvent = new PolymorphicEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_polyEvent));


if (v_polyEvent != null) {
  v_polyEvent.relateAcrossR525To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


return v_polyEvent.Createnonlocaleventforstatemachine(			    
v_machine.getSm_id());



}


   } // End getAssociatedEventForStateMachine
  public  void Saycanthappenonstate(final java.util.UUID         p_Stateid,final java.util.UUID         p_Statestatemachineid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Saycanthappenonstate") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineState_test37385_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineState_c selected = (StateMachineState_c)candidate;
		return selected.getSmstt_id().equals(p_Stateid) && selected.getSm_id().equals(p_Statestatemachineid) ;
	}
  }
StateMachineState_c v_state = StateMachineState_c.StateMachineStateInstance(modelRoot, new StateMachineState_test37385_c()) ;


java.util.UUID         v_eventId = Getassociatedeventforstatemachine(			    
v_state.getSm_id()) ;


StateMachineEvent_c v_event = (StateMachineEvent_c) modelRoot.getInstanceList(StateMachineEvent_c.class).getGlobal(null, v_eventId);


  class StateEventMatrixEntry_test37665_c implements ClassQueryInterface_c
  {
	StateEventMatrixEntry_test37665_c( java.util.UUID         p37666 ) {
		m_p37666 = p37666;
	}
	private java.util.UUID         m_p37666;
	public boolean evaluate (Object candidate)
	{
		StateEventMatrixEntry_c selected = (StateEventMatrixEntry_c)candidate;
		return (selected.getSmstt_id().equals(m_p37666)) ;
	}
  }
StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR503(SemEvent_c.getManySM_SEVTsOnR525(v_event), new StateEventMatrixEntry_test37665_c(v_state.getSmstt_id()));


if (v_seme != null) {
v_seme.Migrateeitoch() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End sayCantHappenOnState
  public  boolean      Isclassbased()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Isclassbased") ; 
               final ModelRoot modelRoot = getModelRoot();
boolean      v_result = false ;


ClassStateMachine_c v_asm = ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR502(this));


CreationTransition_c v_creationTransition = CreationTransition_c.getOneSM_CRTXNOnR509(LocalEvent_c.getOneSM_LEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this)));


if ( (  (v_asm != null)) || (  (v_creationTransition != null)) )
{

v_result = true ;



}

return v_result;



   } // End isClassBased
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getSmevt_id();



   } // End get_ooa_id
  public  boolean      Checkbreakpoint(final int  p_Processtype)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Checkbreakpoint") ; 
               final ModelRoot modelRoot = getModelRoot();
return false;



   } // End checkBreakpoint
  public  void Setuniquenumber(final boolean      p_Checkforduplicate)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Setuniquenumber") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR502(this);


StateMachineEvent_c [] v_events = StateMachineEvent_c.getManySM_EVTsOnR502(v_sm);


boolean      v_foundDuplicate = false ;


int          v_originalNumb = getNumb() ;


StateMachineEvent_c  v_event = null;
for ( int i37182 = 0; i37182 < v_events.length; i37182++)
{
  v_event = v_events[i37182] ;

if ( (v_event.getSmevt_id().equals(getSmevt_id())) )
{

continue;



}

if ( (v_event.getNumb() == getNumb()) )
{

v_foundDuplicate = true ;



}

if ( (v_event.getNumb() >= getNumb()) )
{

setNumb( v_event.getNumb() + 1) ;



}


}

if ( (  !v_foundDuplicate && p_Checkforduplicate) )
{

setNumb( v_originalNumb) ;



}


   } // End setUniqueNumber
  public  boolean      Canrename()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Canrename") ; 
               final ModelRoot modelRoot = getModelRoot();
NonLocalEvent_c v_nlevt = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(this));


return   (v_nlevt == null);



   } // End canRename
  public  void Newparameter()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Newparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachineEventDataItem_c v_newEvtdi = new StateMachineEventDataItem_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_newEvtdi));


  this.relateAcrossR532To(v_newEvtdi);


StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR502(this);


if (v_newEvtdi != null) {
  v_newEvtdi.relateAcrossR516To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_newEvtdi != null) {
v_newEvtdi.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Createmessageargumentsforparameter(			    
v_newEvtdi.getSmedi_id() ) ;



   } // End newParameter
  public  void Initializeorder()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Initializeorder") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachineEventDataItem_c [] v_peers = StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(this);


if ( (  (v_peers.length) > 1) )
{

boolean      v_initialOrderingCheckPerformed = false ;


  class StateMachineEventDataItem_test37667_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return (selected.getSmedi_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
StateMachineEventDataItem_c v_head = StateMachineEventDataItem_c.getOneSM_EVTDIOnR532(this, new StateMachineEventDataItem_test37667_c());


StateMachineEventDataItem_c v_endOfList = v_head ;


int          v_loopCnt = 0 ;


StateMachineEventDataItem_c  v_peer = null;
for ( int i37183 = 0; i37183 < v_peers.length; i37183++)
{
  v_peer = v_peers[i37183] ;

if ( (  !v_initialOrderingCheckPerformed) )
{

StateMachineEventDataItem_c v_predecessor = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(v_peer);


StateMachineEventDataItem_c v_successor = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(v_peer);


v_initialOrderingCheckPerformed = true ;


if ( (  (v_predecessor != null) ||   (v_successor != null)) )
{

break;



}

v_head = v_peer ;


v_endOfList = v_peer ;



}

if ( (v_loopCnt == 1) )
{

if ( (v_peer.getName().compareTo(v_head.getName()) < 0) )
{

if (v_peer != null) {
  v_peer.relateAcrossR533ToPrecedes(v_head);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if (v_head != null) {
  v_head.relateAcrossR533ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}


}

else if ( (v_loopCnt > 1) )
{

StateMachineEventDataItem_c v_insertPoint = v_head ;


StateMachineEventDataItem_c v_next = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(v_head);


while ( (  (v_next != null)) )
{

if ( (v_next.getName().compareTo(v_peer.getName()) < 0) )
{

break;



}

else
{

v_insertPoint = v_next ;


v_next = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(v_next);



}


}

if ( (  (v_next == null)) )
{

if (v_peer != null) {
  v_peer.relateAcrossR533ToPrecedes(v_endOfList);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if ( ((v_insertPoint == v_head) && (v_peer.getName().compareTo(v_head.getName()) > 0)) )
{

if (v_head != null) {
  v_head.relateAcrossR533ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}

else
{

if (v_next != null) {
v_next.unrelateAcrossR533FromPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_peer != null) {
  v_peer.relateAcrossR533ToPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_next != null) {
  v_next.relateAcrossR533ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

v_loopCnt = v_loopCnt + 1 ;



}


}


   } // End initializeOrder
  public  void Pastestatemachineeventdataitem(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Pastestatemachineeventdataitem") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineEventDataItem_test37387_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return (selected.getSmedi_id().equals(p_Id)) ;
	}
  }
StateMachineEventDataItem_c v_item = StateMachineEventDataItem_c.StateMachineEventDataItemInstance(modelRoot, new StateMachineEventDataItem_test37387_c()) ;


if ( (  (v_item != null)) )
{

StateMachine_c v_existingSm = StateMachine_c.getOneSM_SMOnR516(v_item);


if ( (  (v_existingSm != null)) )
{

if (v_existingSm != null) {
v_existingSm.unrelateAcrossR516From(v_item);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

StateMachineEvent_c v_existingEvt = StateMachineEvent_c.getOneSM_EVTOnR532(v_item);


if ( (  (v_existingEvt != null)) )
{

if (v_existingEvt != null) {
v_existingEvt.unrelateAcrossR532From(v_item);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_item != null) {
  v_item.relateAcrossR532To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR502(this);


if (v_item != null) {
  v_item.relateAcrossR516To(v_machine);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Adddataitemtoorder(			    
v_item.getSmedi_id() ) ;


if (v_item != null) {
  v_item.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_item.Converttoinstance()			    
,v_item.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Createmessageargumentsforparameter(			    
v_item.getSmedi_id() ) ;



}


   } // End pasteStateMachineEventDataItem
  public  void Adddataitemtoorder(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Adddataitemtoorder") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineEventDataItem_test37388_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return (selected.getSmedi_id().equals(p_Id)) ;
	}
  }
StateMachineEventDataItem_c v_item = StateMachineEventDataItem_c.StateMachineEventDataItemInstance(modelRoot, new StateMachineEventDataItem_test37388_c()) ;


if ( (  (v_item != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


StateMachineEventDataItem_c [] v_peers = StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(this);


StateMachineEventDataItem_c  v_peer = null;
for ( int i37184 = 0; i37184 < v_peers.length; i37184++)
{
  v_peer = v_peers[i37184] ;

if ( (v_peer != v_item) )
{

StateMachineEventDataItem_c v_predecessor = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(v_peer);


if ( (  (v_predecessor == null)) )
{

if (v_item != null) {
  v_item.relateAcrossR533ToSucceeds(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}


   } // End addDataItemToOrder
  public  void Createmessageargumentsforparameter(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Createmessageargumentsforparameter") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineEventDataItem_test37389_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return (selected.getSmedi_id().equals(p_Id)) ;
	}
  }
StateMachineEventDataItem_c v_parameter = StateMachineEventDataItem_c.StateMachineEventDataItemInstance(modelRoot, new StateMachineEventDataItem_test37389_c()) ;


if ( (  (v_parameter != null)) )
{

Message_c [] v_messages = Message_c.getManyMSG_MsOnR1018(AsynchronousMessage_c.getManyMSG_AMsOnR1019(EventMessage_c.getManyMSG_EsOnR1009(this)));


Message_c  v_message = null;
for ( int i37185 = 0; i37185 < v_messages.length; i37185++)
{
  v_message = v_messages[i37185] ;

MessageArgument_c v_arg = new MessageArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_arg));


EventArgument_c v_ea = new EventArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ea));


if (v_ea != null) {
  v_ea.relateAcrossR1017To(v_parameter);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ea != null) {
  v_ea.relateAcrossR1013To(v_arg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_message != null) {
  v_message.relateAcrossR1001To(v_arg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


   } // End createMessageArgumentsForParameter
  public  String       Getpath()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = getDrv_lbl() ;


StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR502(this);


ClassStateMachine_c v_classSM = ClassStateMachine_c.getOneSM_ASMOnR517(v_sm);


InstanceStateMachine_c v_instSM = InstanceStateMachine_c.getOneSM_ISMOnR517(v_sm);


if ( (  (v_classSM != null)) )
{

ModelClass_c v_modelClass = ModelClass_c.getOneO_OBJOnR519(v_classSM);


v_result = v_result + "::Class Based Satate Machine::" + v_modelClass.Getpath(			    
true			    
,v_modelClass.getName()) ;



}

else if ( (  (v_instSM != null)) )
{

ModelClass_c v_modelClass = ModelClass_c.getOneO_OBJOnR518(v_instSM);


v_result = v_result + "::Instance Based Satate Machine::" + v_modelClass.Getpath(			    
true			    
,v_modelClass.getName()) ;



}

return v_result;



   } // End getPath
  public  String       Getcacheddrv_lbl()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Getcacheddrv_lbl") ; 
	return m_drv_lbl;
   } // End getCachedDrv_Lbl
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR502(this);


ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(v_machine));


if ( (  (v_clazz == null)) )
{

v_clazz = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(v_machine));



}

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_clazz));


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

StateMachineEvent_c [] v_events = StateMachineEvent_c.getManySM_EVTsOnR502(v_machine);


StateMachineEvent_c  v_evt = null;
for ( int i37186 = 0; i37186 < v_events.length; i37186++)
{
  v_evt = v_events[i37186] ;

if ( (v_evt != this && v_evt.Getsignature().equals(Getsignature())) )
{

IntegrityManager_c.Createissue(modelRoot			    
,"Found another event under the same state machine with a " + "matching signature." + Gd_c.Newline() + Gd_c.Newline() + "Signature: " + Getsignature()			    
,Converttoinstance()			    
,getSmevt_id()			    
,getMning()			    
,Getpath()			    
,Severity_c.Error			    
,v_sys_id ) ;



}

if ( (v_evt != this && v_evt.getNumb() == getNumb()) )
{

IntegrityManager_c.Createissue(modelRoot			    
,"Found another event under the same state machine with a " + "matching number."			    
,Converttoinstance()			    
,getSmevt_id()			    
,getMning()			    
,Getpath()			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity
  public  String       Getsignature()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event", " Operation entered: StateMachineEvent::Getsignature") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_signature = getMning() ;


int          v_count = 0 ;


StateMachineEventDataItem_c [] v_parameters = StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(this);


int          v_paramLength =   (v_parameters.length) ;


if ( (v_paramLength > 0) )
{

v_signature = v_signature + "(" ;



}

StateMachineEventDataItem_c  v_parameter = null;
for ( int i37187 = 0; i37187 < v_parameters.length; i37187++)
{
  v_parameter = v_parameters[i37187] ;

DataType_c v_type = DataType_c.getOneS_DTOnR524(v_parameter);


if ( (v_count > 0 && v_count != v_paramLength - 1) )
{

v_signature = v_signature + ", " ;



}

v_signature = v_signature + v_type.getName() ;


v_count = v_count + 1 ;



}

if ( (v_paramLength > 0) )
{

v_signature = v_signature + ")" ;



}

return v_signature;



   } // End getSignature

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return StateMachineEventActionFilter.getSingleton();
    }
	  return null;
  }
} // end State Machine Event
