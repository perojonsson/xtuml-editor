      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Sequence_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_SEQUENCE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Sequence_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Sequence_c(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       java.util.UUID         p_m_ss_id,
       java.util.UUID         p_m_prev_package_id,
       String       p_m_descrip,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_package_id,
       java.util.UUID         p_m_component_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       m_name = p_m_name;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_prev_package_id = IdAssigner.preprocessUUID(p_m_prev_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
    setUniqueId(m_package_id);
    Object [] key = {m_package_id};
    addInstanceToMap(key);
  }
  static public Sequence_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       java.util.UUID         p_m_ss_id,
       java.util.UUID         p_m_prev_package_id,
       String       p_m_descrip,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_package_id,
       java.util.UUID         p_m_component_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);
      Sequence_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_package_id};
          new_inst = (Sequence_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       new_inst.m_name = p_m_name;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_prev_package_id = IdAssigner.preprocessUUID(p_m_prev_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Sequence_c(modelRoot,
p_m_package_id,
p_m_dom_id,
p_m_name,
p_m_ss_id,
p_m_prev_package_id,
p_m_descrip,
p_m_sys_id,
p_m_component_package_id,
p_m_component_id
);
		new_inst.m_contentPath = contentPath;
    new_inst.setComponent(null);
	}
    return new_inst;
  }

  static public Sequence_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       java.util.UUID         p_m_ss_id,
       java.util.UUID         p_m_prev_package_id,
       String       p_m_descrip,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_package_id,
       java.util.UUID         p_m_component_id){
    InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);
    Sequence_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_package_id
            };
        source = (Sequence_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       source.m_name = p_m_name;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_prev_package_id = IdAssigner.preprocessUUID(p_m_prev_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    Sequence_c new_inst = new Sequence_c(modelRoot,
p_m_package_id,
p_m_dom_id,
p_m_name,
p_m_ss_id,
p_m_prev_package_id,
p_m_descrip,
p_m_sys_id,
p_m_component_package_id,
p_m_component_id
);
    return new_inst;
  }
  public Sequence_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_dom_id = IdAssigner.NULL_UUID;   
     m_name = "";   
     m_ss_id = IdAssigner.NULL_UUID;   
     m_descrip = "";   
     m_sys_id = IdAssigner.NULL_UUID;   
     m_package_id = idAssigner.createUUID();
     m_component_package_id = IdAssigner.NULL_UUID;   
     m_prev_package_id = IdAssigner.NULL_UUID;   
     m_component_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_package_id);
    Object [] key = {m_package_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_package_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_package_id !=  p_newKey ){
	
		m_package_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Sequence_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Sequence_c)) {
           return false;
       }
       
       Sequence_c me = (Sequence_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getPackage_id()) || IdAssigner.NULL_UUID.equals(((Sequence_c)elem).getPackage_id())) && this != elem)) {
      	return false;
      }
      if (!getPackage_id().equals(((Sequence_c)elem).getPackage_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Sequence_c)) {
           return false;
       }
       
       Sequence_c me = (Sequence_c)elem;
      if (!getPackage_idCachedValue().equals(((Sequence_c)elem).getPackage_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_dom_id ;
  private String       m_name ;
  private java.util.UUID         m_ss_id ;
  private String       m_descrip ;
  private java.util.UUID         m_sys_id ;
  private java.util.UUID         m_package_id ;
  private java.util.UUID         m_component_package_id ;
  private java.util.UUID         m_prev_package_id ;
  private java.util.UUID         m_component_id ;
      
// declare association references from this class
  
  
    
// referring navigation

SpecificationPackage_c IsSupertypeSpecificationPackage ;
public void relateAcrossR1402To(SpecificationPackage_c target)
{
	relateAcrossR1402To(target, true);
}
public void relateAcrossR1402To(SpecificationPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypeSpecificationPackage) return;  // already related

    if ( IsSupertypeSpecificationPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypeSpecificationPackage != null) {
    
        IsSupertypeSpecificationPackage.clearBackPointerR1402To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Sequence_c.relateAcrossR1402To(SpecificationPackage_c target)", 
			"Relate performed across R1402 from Sequence to Specification Package without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypeSpecificationPackage = target ;
        m_package_id = target.getPackage_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1402To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1402", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1402From(SpecificationPackage_c target)
{
	unrelateAcrossR1402From(target, true);
}
public void unrelateAcrossR1402From(SpecificationPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypeSpecificationPackage == null) return;  // already unrelated
	
	if (target != IsSupertypeSpecificationPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1402", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1402To(this);
    }
    

      if(IsSupertypeSpecificationPackage != null) {
      
        m_package_id = IsSupertypeSpecificationPackage.getPackage_id();
        IsSupertypeSpecificationPackage = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1402", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Sequence_c getOneSQ_SOnR1402(SpecificationPackage_c [] targets)
{
    return getOneSQ_SOnR1402(targets, null);
}

public static Sequence_c getOneSQ_SOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_SOnR1402(targets[i], test);
        }
    }

    return ret_val;
}

public static Sequence_c getOneSQ_SOnR1402(SpecificationPackage_c target)
{
  return getOneSQ_SOnR1402(target, null);
}

public static Sequence_c getOneSQ_SOnR1402(SpecificationPackage_c target, boolean loadComponent)
{
    return getOneSQ_SOnR1402(target.getModelRoot(), target, null, loadComponent);
}

public static Sequence_c getOneSQ_SOnR1402(SpecificationPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_SOnR1402(target.getModelRoot(), target, test);
  }
  return null;
}

public static Sequence_c getOneSQ_SOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test)
{
	return getOneSQ_SOnR1402(modelRoot, target, test, true);
}

public static Sequence_c getOneSQ_SOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSQ_SOnR1402(modelRoot,target,test);
}
private static Sequence_c find_getOneSQ_SOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Sequence_c source = (Sequence_c)target.backPointer_IsSubtypeSequenceIsSubtype_R1402;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Sequence_c [] getManySQ_SsOnR1402(SpecificationPackage_c [] targets)
{
  return getManySQ_SsOnR1402(targets, null);
}
public static Sequence_c [] getManySQ_SsOnR1402(SpecificationPackage_c [] targets, boolean loadComponent)
{
  return getManySQ_SsOnR1402(targets, null, loadComponent);
}
public static Sequence_c [] getManySQ_SsOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR1402(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Sequence_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Sequence_c source = (Sequence_c)targets[i].backPointer_IsSubtypeSequenceIsSubtype_R1402;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Sequence_c[] ret_set = new Sequence_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Sequence_c[0];
  }
  }

public static Sequence_c [] getManySQ_SsOnR1402(SpecificationPackage_c target)
{
  if (target != null) {
    SpecificationPackage_c [] targetArray = new SpecificationPackage_c[1];
    targetArray[0] = target;
    return getManySQ_SsOnR1402(targetArray);
  } else {
    Sequence_c [] result = new Sequence_c [0] ;
  return result ;
}
}

public static Sequence_c [] getManySQ_SsOnR1402(SpecificationPackage_c target, boolean loadComponent)
{
  if (target != null) {
    SpecificationPackage_c [] targetArray = new SpecificationPackage_c[1];
    targetArray[0] = target;
    return getManySQ_SsOnR1402(targetArray, loadComponent);
  } else {
    Sequence_c [] result = new Sequence_c [0] ;
  return result ;
}
}



  
    
// referring navigation

SequenceInSequence_c IsDisplayedInSequenceInSequence ;
public void relateAcrossR928To(SequenceInSequence_c target)
{
	relateAcrossR928To(target, true);
}
public void relateAcrossR928To(SequenceInSequence_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsDisplayedInSequenceInSequence) return;  // already related

    if ( IsDisplayedInSequenceInSequence != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsDisplayedInSequenceInSequence != null) {
    
        IsDisplayedInSequenceInSequence.clearBackPointerR928To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Sequence_c.relateAcrossR928To(SequenceInSequence_c target)", 
			"Relate performed across R928 from Sequence to Sequence in Sequence without unrelate of prior instance.");  
		}
    }
                
    	IsDisplayedInSequenceInSequence = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_prev_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR928To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "928", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR928From(SequenceInSequence_c target)
{
	unrelateAcrossR928From(target, true);
}
public void unrelateAcrossR928From(SequenceInSequence_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsDisplayedInSequenceInSequence == null) return;  // already unrelated
	
	if (target != IsDisplayedInSequenceInSequence) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R928", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR928To(this);
    }
    

      if(IsDisplayedInSequenceInSequence != null) {
      
        m_prev_package_id = IsDisplayedInSequenceInSequence.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_prev_package_id))
        {
          m_prev_package_id = IsDisplayedInSequenceInSequence.getPackage_idCachedValue();
        }       
        IsDisplayedInSequenceInSequence = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "928", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Sequence_c getOneSQ_SOnR928(SequenceInSequence_c [] targets)
{
    return getOneSQ_SOnR928(targets, null);
}

public static Sequence_c getOneSQ_SOnR928(SequenceInSequence_c [] targets, ClassQueryInterface_c test)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_SOnR928(targets[i], test);
        }
    }

    return ret_val;
}

public static Sequence_c getOneSQ_SOnR928(SequenceInSequence_c target)
{
  return getOneSQ_SOnR928(target, null);
}

public static Sequence_c getOneSQ_SOnR928(SequenceInSequence_c target, boolean loadComponent)
{
    return getOneSQ_SOnR928(target.getModelRoot(), target, null, loadComponent);
}

public static Sequence_c getOneSQ_SOnR928(SequenceInSequence_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_SOnR928(target.getModelRoot(), target, test);
  }
  return null;
}

public static Sequence_c getOneSQ_SOnR928(ModelRoot modelRoot, SequenceInSequence_c target, ClassQueryInterface_c test)
{
	return getOneSQ_SOnR928(modelRoot, target, test, true);
}

public static Sequence_c getOneSQ_SOnR928(ModelRoot modelRoot, SequenceInSequence_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSQ_SOnR928(modelRoot,target,test);
}
private static Sequence_c find_getOneSQ_SOnR928(ModelRoot modelRoot, SequenceInSequence_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_HasChildrenSequenceHasChildren_R928) {
	    for ( int i = 0; i < target.backPointer_HasChildrenSequenceHasChildren_R928.size(); ++i ) {
	      Sequence_c source = (Sequence_c)target.backPointer_HasChildrenSequenceHasChildren_R928.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Sequence_c [] getManySQ_SsOnR928(SequenceInSequence_c [] targets)
{
  return getManySQ_SsOnR928(targets, null);
}
public static Sequence_c [] getManySQ_SsOnR928(SequenceInSequence_c [] targets, boolean loadComponent)
{
  return getManySQ_SsOnR928(targets, null, loadComponent);
}
public static Sequence_c [] getManySQ_SsOnR928(SequenceInSequence_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR928(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR928(SequenceInSequence_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Sequence_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_HasChildrenSequenceHasChildren_R928) {
	    for (int j = 0; j < targets[i].backPointer_HasChildrenSequenceHasChildren_R928.size(); ++j) {
	      Sequence_c source = (Sequence_c)targets[i].backPointer_HasChildrenSequenceHasChildren_R928.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Sequence_c[] ret_set = new Sequence_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Sequence_c[0];
  }
  }

public static Sequence_c [] getManySQ_SsOnR928(SequenceInSequence_c target)
{
  return getManySQ_SsOnR928(target, null);
}

public static Sequence_c [] getManySQ_SsOnR928(SequenceInSequence_c target, boolean loadComponent)
{
  return getManySQ_SsOnR928(target, null, loadComponent);
}

public static Sequence_c [] getManySQ_SsOnR928(SequenceInSequence_c target, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR928(target, test, true);
}

public static Sequence_c [] getManySQ_SsOnR928(SequenceInSequence_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Sequence_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_HasChildrenSequenceHasChildren_R928) {
    for (int i = 0; i < target.backPointer_HasChildrenSequenceHasChildren_R928.size(); ++i) {
      Sequence_c source = (Sequence_c)target.backPointer_HasChildrenSequenceHasChildren_R928.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Sequence_c[] ret_set = new Sequence_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Sequence_c[0];
	}
  }


  
    
// referring navigation

Domain_c IsShownInDomain ;
public void relateAcrossR913To(Domain_c target)
{
	relateAcrossR913To(target, true);
}
public void relateAcrossR913To(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsShownInDomain) return;  // already related

    if ( IsShownInDomain != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsShownInDomain != null) {
        UmlProblem.removeXtUMLProblem(this, IsShownInDomain);
    
        IsShownInDomain.clearBackPointerR913To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Sequence_c.relateAcrossR913To(Domain_c target)", 
			"Relate performed across R913 from Sequence to Domain without unrelate of prior instance.");  
		}
    }
                
    	IsShownInDomain = target ;
        m_dom_id = target.getDom_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR913To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "913", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR913From(Domain_c target)
{
	unrelateAcrossR913From(target, true);
}
public void unrelateAcrossR913From(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsShownInDomain == null) return;  // already unrelated
	
	if (target != IsShownInDomain) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R913", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR913To(this);
    }
    

      if(IsShownInDomain != null) {
      
        m_dom_id = IsShownInDomain.getDom_id();
        IsShownInDomain = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "913", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Sequence_c getOneSQ_SOnR913(Domain_c [] targets)
{
    return getOneSQ_SOnR913(targets, null);
}

public static Sequence_c getOneSQ_SOnR913(Domain_c [] targets, ClassQueryInterface_c test)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_SOnR913(targets[i], test);
        }
    }

    return ret_val;
}

public static Sequence_c getOneSQ_SOnR913(Domain_c target)
{
  return getOneSQ_SOnR913(target, null);
}

public static Sequence_c getOneSQ_SOnR913(Domain_c target, boolean loadComponent)
{
    return getOneSQ_SOnR913(target.getModelRoot(), target, null, loadComponent);
}

public static Sequence_c getOneSQ_SOnR913(Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_SOnR913(target.getModelRoot(), target, test);
  }
  return null;
}

public static Sequence_c getOneSQ_SOnR913(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
	return getOneSQ_SOnR913(modelRoot, target, test, true);
}

public static Sequence_c getOneSQ_SOnR913(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Sequence_c result = null;
  
  result=find_getOneSQ_SOnR913(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Sequence_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneSQ_SOnR913(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Sequence_c find_getOneSQ_SOnR913(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanShowSequenceCanShow_R913) {
	    for ( int i = 0; i < target.backPointer_CanShowSequenceCanShow_R913.size(); ++i ) {
	      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R913.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Sequence_c [] getManySQ_SsOnR913(Domain_c [] targets)
{
  return getManySQ_SsOnR913(targets, null);
}
public static Sequence_c [] getManySQ_SsOnR913(Domain_c [] targets, boolean loadComponent)
{
  return getManySQ_SsOnR913(targets, null, loadComponent);
}
public static Sequence_c [] getManySQ_SsOnR913(Domain_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR913(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR913(Domain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Sequence_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Sequence_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanShowSequenceCanShow_R913) {
	    for (int j = 0; j < targets[i].backPointer_CanShowSequenceCanShow_R913.size(); ++j) {
	      Sequence_c source = (Sequence_c)targets[i].backPointer_CanShowSequenceCanShow_R913.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Sequence_c[] ret_set = new Sequence_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Sequence_c[0];
  }
  }

public static Sequence_c [] getManySQ_SsOnR913(Domain_c target)
{
  return getManySQ_SsOnR913(target, null);
}

public static Sequence_c [] getManySQ_SsOnR913(Domain_c target, boolean loadComponent)
{
  return getManySQ_SsOnR913(target, null, loadComponent);
}

public static Sequence_c [] getManySQ_SsOnR913(Domain_c target, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR913(target, test, true);
}

public static Sequence_c [] getManySQ_SsOnR913(Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Sequence_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Sequence_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_CanShowSequenceCanShow_R913) {
    for (int i = 0; i < target.backPointer_CanShowSequenceCanShow_R913.size(); ++i) {
      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R913.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Sequence_c[] ret_set = new Sequence_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Sequence_c[0];
	}
  }


  
    
// referring navigation

Subsystem_c IsShownInSubsystem ;
public void relateAcrossR914To(Subsystem_c target)
{
	relateAcrossR914To(target, true);
}
public void relateAcrossR914To(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsShownInSubsystem) return;  // already related

    if ( IsShownInSubsystem != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsShownInSubsystem != null) {
        UmlProblem.removeXtUMLProblem(this, IsShownInSubsystem);
    
        IsShownInSubsystem.clearBackPointerR914To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Sequence_c.relateAcrossR914To(Subsystem_c target)", 
			"Relate performed across R914 from Sequence to Subsystem without unrelate of prior instance.");  
		}
    }
                
    	IsShownInSubsystem = target ;
        m_ss_id = target.getSs_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR914To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "914", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR914From(Subsystem_c target)
{
	unrelateAcrossR914From(target, true);
}
public void unrelateAcrossR914From(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsShownInSubsystem == null) return;  // already unrelated
	
	if (target != IsShownInSubsystem) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R914", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR914To(this);
    }
    

      if(IsShownInSubsystem != null) {
      
        m_ss_id = IsShownInSubsystem.getSs_id();
        IsShownInSubsystem = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "914", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Sequence_c getOneSQ_SOnR914(Subsystem_c [] targets)
{
    return getOneSQ_SOnR914(targets, null);
}

public static Sequence_c getOneSQ_SOnR914(Subsystem_c [] targets, ClassQueryInterface_c test)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_SOnR914(targets[i], test);
        }
    }

    return ret_val;
}

public static Sequence_c getOneSQ_SOnR914(Subsystem_c target)
{
  return getOneSQ_SOnR914(target, null);
}

public static Sequence_c getOneSQ_SOnR914(Subsystem_c target, boolean loadComponent)
{
    return getOneSQ_SOnR914(target.getModelRoot(), target, null, loadComponent);
}

public static Sequence_c getOneSQ_SOnR914(Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_SOnR914(target.getModelRoot(), target, test);
  }
  return null;
}

public static Sequence_c getOneSQ_SOnR914(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
	return getOneSQ_SOnR914(modelRoot, target, test, true);
}

public static Sequence_c getOneSQ_SOnR914(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Sequence_c result = null;
  
  result=find_getOneSQ_SOnR914(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Sequence_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneSQ_SOnR914(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Sequence_c find_getOneSQ_SOnR914(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanShowSequenceCanShow_R914) {
	    for ( int i = 0; i < target.backPointer_CanShowSequenceCanShow_R914.size(); ++i ) {
	      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R914.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Sequence_c [] getManySQ_SsOnR914(Subsystem_c [] targets)
{
  return getManySQ_SsOnR914(targets, null);
}
public static Sequence_c [] getManySQ_SsOnR914(Subsystem_c [] targets, boolean loadComponent)
{
  return getManySQ_SsOnR914(targets, null, loadComponent);
}
public static Sequence_c [] getManySQ_SsOnR914(Subsystem_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR914(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR914(Subsystem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Sequence_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Sequence_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanShowSequenceCanShow_R914) {
	    for (int j = 0; j < targets[i].backPointer_CanShowSequenceCanShow_R914.size(); ++j) {
	      Sequence_c source = (Sequence_c)targets[i].backPointer_CanShowSequenceCanShow_R914.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Sequence_c[] ret_set = new Sequence_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Sequence_c[0];
  }
  }

public static Sequence_c [] getManySQ_SsOnR914(Subsystem_c target)
{
  return getManySQ_SsOnR914(target, null);
}

public static Sequence_c [] getManySQ_SsOnR914(Subsystem_c target, boolean loadComponent)
{
  return getManySQ_SsOnR914(target, null, loadComponent);
}

public static Sequence_c [] getManySQ_SsOnR914(Subsystem_c target, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR914(target, test, true);
}

public static Sequence_c [] getManySQ_SsOnR914(Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Sequence_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Sequence_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_CanShowSequenceCanShow_R914) {
    for (int i = 0; i < target.backPointer_CanShowSequenceCanShow_R914.size(); ++i) {
      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R914.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Sequence_c[] ret_set = new Sequence_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Sequence_c[0];
	}
  }


  
    
// referring navigation

SystemModel_c SystemModel ;
public void relateAcrossR950To(SystemModel_c target)
{
	relateAcrossR950To(target, true);
}
public void relateAcrossR950To(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == SystemModel) return;  // already related

    if ( SystemModel != target ) {
    
    Object oldKey = getInstanceKey();

    if (SystemModel != null) {
        UmlProblem.removeXtUMLProblem(this, SystemModel);
    
        SystemModel.clearBackPointerR950To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Sequence_c.relateAcrossR950To(SystemModel_c target)", 
			"Relate performed across R950 from Sequence to System Model without unrelate of prior instance.");  
		}
    }
                
    	SystemModel = target ;
        m_sys_id = target.getSys_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR950To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "950", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR950From(SystemModel_c target)
{
	unrelateAcrossR950From(target, true);
}
public void unrelateAcrossR950From(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (SystemModel == null) return;  // already unrelated
	
	if (target != SystemModel) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R950", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR950To(this);
    }
    

      if(SystemModel != null) {
      
        m_sys_id = SystemModel.getSys_id();
        SystemModel = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "950", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Sequence_c getOneSQ_SOnR950(SystemModel_c [] targets)
{
    return getOneSQ_SOnR950(targets, null);
}

public static Sequence_c getOneSQ_SOnR950(SystemModel_c [] targets, ClassQueryInterface_c test)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_SOnR950(targets[i], test);
        }
    }

    return ret_val;
}

public static Sequence_c getOneSQ_SOnR950(SystemModel_c target)
{
  return getOneSQ_SOnR950(target, null);
}

public static Sequence_c getOneSQ_SOnR950(SystemModel_c target, boolean loadComponent)
{
    return getOneSQ_SOnR950(target.getModelRoot(), target, null, loadComponent);
}

public static Sequence_c getOneSQ_SOnR950(SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_SOnR950(target.getModelRoot(), target, test);
  }
  return null;
}

public static Sequence_c getOneSQ_SOnR950(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
	return getOneSQ_SOnR950(modelRoot, target, test, true);
}

public static Sequence_c getOneSQ_SOnR950(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Sequence_c result = null;
  
  result=find_getOneSQ_SOnR950(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Sequence_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneSQ_SOnR950(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Sequence_c find_getOneSQ_SOnR950(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanShowSequenceCanShow_R950) {
	    for ( int i = 0; i < target.backPointer_CanShowSequenceCanShow_R950.size(); ++i ) {
	      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R950.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Sequence_c [] getManySQ_SsOnR950(SystemModel_c [] targets)
{
  return getManySQ_SsOnR950(targets, null);
}
public static Sequence_c [] getManySQ_SsOnR950(SystemModel_c [] targets, boolean loadComponent)
{
  return getManySQ_SsOnR950(targets, null, loadComponent);
}
public static Sequence_c [] getManySQ_SsOnR950(SystemModel_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR950(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR950(SystemModel_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Sequence_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Sequence_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanShowSequenceCanShow_R950) {
	    for (int j = 0; j < targets[i].backPointer_CanShowSequenceCanShow_R950.size(); ++j) {
	      Sequence_c source = (Sequence_c)targets[i].backPointer_CanShowSequenceCanShow_R950.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Sequence_c[] ret_set = new Sequence_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Sequence_c[0];
  }
  }

public static Sequence_c [] getManySQ_SsOnR950(SystemModel_c target)
{
  return getManySQ_SsOnR950(target, null);
}

public static Sequence_c [] getManySQ_SsOnR950(SystemModel_c target, boolean loadComponent)
{
  return getManySQ_SsOnR950(target, null, loadComponent);
}

public static Sequence_c [] getManySQ_SsOnR950(SystemModel_c target, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR950(target, test, true);
}

public static Sequence_c [] getManySQ_SsOnR950(SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Sequence_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Sequence_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_CanShowSequenceCanShow_R950) {
    for (int i = 0; i < target.backPointer_CanShowSequenceCanShow_R950.size(); ++i) {
      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R950.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Sequence_c[] ret_set = new Sequence_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Sequence_c[0];
	}
  }


  
    
// referring navigation

ComponentPackage_c ComponentPackage ;
public void relateAcrossR951To(ComponentPackage_c target)
{
	relateAcrossR951To(target, true);
}
public void relateAcrossR951To(ComponentPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ComponentPackage) return;  // already related

    if ( ComponentPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (ComponentPackage != null) {
        UmlProblem.removeXtUMLProblem(this, ComponentPackage);
    
        ComponentPackage.clearBackPointerR951To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Sequence_c.relateAcrossR951To(ComponentPackage_c target)", 
			"Relate performed across R951 from Sequence to Component Package without unrelate of prior instance.");  
		}
    }
                
    	ComponentPackage = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR951To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "951", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR951From(ComponentPackage_c target)
{
	unrelateAcrossR951From(target, true);
}
public void unrelateAcrossR951From(ComponentPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ComponentPackage == null) return;  // already unrelated
	
	if (target != ComponentPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R951", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR951To(this);
    }
    

      if(ComponentPackage != null) {
      
        m_component_package_id = ComponentPackage.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_component_package_id))
        {
          m_component_package_id = ComponentPackage.getPackage_idCachedValue();
        }       
        ComponentPackage = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "951", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Sequence_c getOneSQ_SOnR951(ComponentPackage_c [] targets)
{
    return getOneSQ_SOnR951(targets, null);
}

public static Sequence_c getOneSQ_SOnR951(ComponentPackage_c [] targets, ClassQueryInterface_c test)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_SOnR951(targets[i], test);
        }
    }

    return ret_val;
}

public static Sequence_c getOneSQ_SOnR951(ComponentPackage_c target)
{
  return getOneSQ_SOnR951(target, null);
}

public static Sequence_c getOneSQ_SOnR951(ComponentPackage_c target, boolean loadComponent)
{
    return getOneSQ_SOnR951(target.getModelRoot(), target, null, loadComponent);
}

public static Sequence_c getOneSQ_SOnR951(ComponentPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_SOnR951(target.getModelRoot(), target, test);
  }
  return null;
}

public static Sequence_c getOneSQ_SOnR951(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test)
{
	return getOneSQ_SOnR951(modelRoot, target, test, true);
}

public static Sequence_c getOneSQ_SOnR951(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Sequence_c result = null;
  
  result=find_getOneSQ_SOnR951(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Sequence_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneSQ_SOnR951(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Sequence_c find_getOneSQ_SOnR951(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanShowSequenceCanShow_R951) {
	    for ( int i = 0; i < target.backPointer_CanShowSequenceCanShow_R951.size(); ++i ) {
	      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R951.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Sequence_c [] getManySQ_SsOnR951(ComponentPackage_c [] targets)
{
  return getManySQ_SsOnR951(targets, null);
}
public static Sequence_c [] getManySQ_SsOnR951(ComponentPackage_c [] targets, boolean loadComponent)
{
  return getManySQ_SsOnR951(targets, null, loadComponent);
}
public static Sequence_c [] getManySQ_SsOnR951(ComponentPackage_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR951(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR951(ComponentPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Sequence_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Sequence_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanShowSequenceCanShow_R951) {
	    for (int j = 0; j < targets[i].backPointer_CanShowSequenceCanShow_R951.size(); ++j) {
	      Sequence_c source = (Sequence_c)targets[i].backPointer_CanShowSequenceCanShow_R951.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Sequence_c[] ret_set = new Sequence_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Sequence_c[0];
  }
  }

public static Sequence_c [] getManySQ_SsOnR951(ComponentPackage_c target)
{
  return getManySQ_SsOnR951(target, null);
}

public static Sequence_c [] getManySQ_SsOnR951(ComponentPackage_c target, boolean loadComponent)
{
  return getManySQ_SsOnR951(target, null, loadComponent);
}

public static Sequence_c [] getManySQ_SsOnR951(ComponentPackage_c target, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR951(target, test, true);
}

public static Sequence_c [] getManySQ_SsOnR951(ComponentPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Sequence_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Sequence_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_CanShowSequenceCanShow_R951) {
    for (int i = 0; i < target.backPointer_CanShowSequenceCanShow_R951.size(); ++i) {
      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R951.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Sequence_c[] ret_set = new Sequence_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Sequence_c[0];
	}
  }


  
    
// referring navigation

Component_c Component ;
public void relateAcrossR952To(Component_c target)
{
	relateAcrossR952To(target, true);
}
public void relateAcrossR952To(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == Component) return;  // already related

    if ( Component != target ) {
    
    Object oldKey = getInstanceKey();

    if (Component != null) {
        UmlProblem.removeXtUMLProblem(this, Component);
    
        Component.clearBackPointerR952To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Sequence_c.relateAcrossR952To(Component_c target)", 
			"Relate performed across R952 from Sequence to Component without unrelate of prior instance.");  
		}
    }
                
    	Component = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR952To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "952", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR952From(Component_c target)
{
	unrelateAcrossR952From(target, true);
}
public void unrelateAcrossR952From(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (Component == null) return;  // already unrelated
	
	if (target != Component) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R952", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR952To(this);
    }
    

      if(Component != null) {
      
        m_component_id = Component.getId();
        if(IdAssigner.NULL_UUID.equals(m_component_id))
        {
          m_component_id = Component.getIdCachedValue();
        }       
        Component = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "952", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Sequence_c getOneSQ_SOnR952(Component_c [] targets)
{
    return getOneSQ_SOnR952(targets, null);
}

public static Sequence_c getOneSQ_SOnR952(Component_c [] targets, ClassQueryInterface_c test)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSQ_SOnR952(targets[i], test);
        }
    }

    return ret_val;
}

public static Sequence_c getOneSQ_SOnR952(Component_c target)
{
  return getOneSQ_SOnR952(target, null);
}

public static Sequence_c getOneSQ_SOnR952(Component_c target, boolean loadComponent)
{
    return getOneSQ_SOnR952(target.getModelRoot(), target, null, loadComponent);
}

public static Sequence_c getOneSQ_SOnR952(Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSQ_SOnR952(target.getModelRoot(), target, test);
  }
  return null;
}

public static Sequence_c getOneSQ_SOnR952(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
	return getOneSQ_SOnR952(modelRoot, target, test, true);
}

public static Sequence_c getOneSQ_SOnR952(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Sequence_c result = null;
  
  result=find_getOneSQ_SOnR952(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Sequence_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneSQ_SOnR952(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Sequence_c find_getOneSQ_SOnR952(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanShowSequenceCanShow_R952) {
	    for ( int i = 0; i < target.backPointer_CanShowSequenceCanShow_R952.size(); ++i ) {
	      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R952.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Sequence_c [] getManySQ_SsOnR952(Component_c [] targets)
{
  return getManySQ_SsOnR952(targets, null);
}
public static Sequence_c [] getManySQ_SsOnR952(Component_c [] targets, boolean loadComponent)
{
  return getManySQ_SsOnR952(targets, null, loadComponent);
}
public static Sequence_c [] getManySQ_SsOnR952(Component_c [] targets, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR952(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR952(Component_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Sequence_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Sequence_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanShowSequenceCanShow_R952) {
	    for (int j = 0; j < targets[i].backPointer_CanShowSequenceCanShow_R952.size(); ++j) {
	      Sequence_c source = (Sequence_c)targets[i].backPointer_CanShowSequenceCanShow_R952.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Sequence_c[] ret_set = new Sequence_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Sequence_c[0];
  }
  }

public static Sequence_c [] getManySQ_SsOnR952(Component_c target)
{
  return getManySQ_SsOnR952(target, null);
}

public static Sequence_c [] getManySQ_SsOnR952(Component_c target, boolean loadComponent)
{
  return getManySQ_SsOnR952(target, null, loadComponent);
}

public static Sequence_c [] getManySQ_SsOnR952(Component_c target, ClassQueryInterface_c test)
{
	return getManySQ_SsOnR952(target, test, true);
}

public static Sequence_c [] getManySQ_SsOnR952(Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Sequence_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Sequence_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_CanShowSequenceCanShow_R952) {
    for (int i = 0; i < target.backPointer_CanShowSequenceCanShow_R952.size(); ++i) {
      Sequence_c source = (Sequence_c)target.backPointer_CanShowSequenceCanShow_R952.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Sequence_c[] ret_set = new Sequence_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Sequence_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

SequenceInSequence_c backPointer_CanShowSequenceInSequenceCanShow_R911;

public void setSequenceInSequenceOrderInChildListR911(SequenceInSequence_c target, int index) {
	unrelateAcrossR911From(target);
	SequenceInSequence_c[] elements = SequenceInSequence_c.getManySQ_SISsOnR911(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR911From((SequenceInSequence_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR911To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR911To((SequenceInSequence_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR911To(SequenceInSequence_c target)
{
  if (target != null) {
    target.relateAcrossR911To(this, true) ;
  }
}

public void relateAcrossR911To(SequenceInSequence_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR911To(this, notifyChanges) ;
  }
}

public void setBackPointerR911To(SequenceInSequence_c target)
{
    backPointer_CanShowSequenceInSequenceCanShow_R911 = target;
}

public void unrelateAcrossR911From(SequenceInSequence_c target)
{
  if (target != null) {
    target.unrelateAcrossR911From(this, true) ;
  }
}

public void unrelateAcrossR911From(SequenceInSequence_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR911From(this, notifyChanges) ;
  }
}

public void clearBackPointerR911To(SequenceInSequence_c target)
{
	if (target == backPointer_CanShowSequenceInSequenceCanShow_R911) {
		backPointer_CanShowSequenceInSequenceCanShow_R911 = null;
	}
}

public static Sequence_c getOneSQ_SOnR911(SequenceInSequence_c [] targets)
{
    return getOneSQ_SOnR911(targets, null);
}

public static Sequence_c getOneSQ_SOnR911(SequenceInSequence_c [] targets, ClassQueryInterface_c test)
{
    return getOneSQ_SOnR911(targets, test, true);
}

public static Sequence_c getOneSQ_SOnR911(SequenceInSequence_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Sequence_c candidate_val = getOneSQ_SOnR911(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSQ_SOnR911(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Sequence_c getOneSQ_SOnR911(SequenceInSequence_c target)
{
	return getOneSQ_SOnR911(target, true);
}
public static Sequence_c getOneSQ_SOnR911(SequenceInSequence_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsShownInSequence != null){
		target.IsShownInSequence.loadProxy();
	}
	}
    return target.IsShownInSequence ;
  } else {
    return null;
  }
}

public static Sequence_c [] getManySQ_SsOnR911(SequenceInSequence_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySQ_SsOnR911(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR911(SequenceInSequence_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Sequence_c[0];
  
  
  LinkedHashSet<Sequence_c> elementsSet = new LinkedHashSet<Sequence_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsShownInSequence == null)
	  targets[i].loadProxy();
    Sequence_c associate = targets[i].IsShownInSequence;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Sequence_c[] result = new Sequence_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Sequence_c [] getManySQ_SsOnR911(SequenceInSequence_c [] targets)
{
  return getManySQ_SsOnR911(targets, null);
}

public static Sequence_c [] getManySQ_SsOnR911(SequenceInSequence_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SequenceInSequence_c [] targetArray = new SequenceInSequence_c[1];
    targetArray[0] = target;
    return getManySQ_SsOnR911(targetArray, test, loadComponent);
  } else {
    Sequence_c [] result = new Sequence_c [0] ;
    return result ;
  }
  
}

public static Sequence_c [] getManySQ_SsOnR911(SequenceInSequence_c target,
    ClassQueryInterface_c test)
{
    return getManySQ_SsOnR911(target, null, true);
}

public static Sequence_c [] getManySQ_SsOnR911(SequenceInSequence_c target)
{
    return getManySQ_SsOnR911(target, null, true);
}

public static Sequence_c [] getManySQ_SsOnR911(SequenceInSequence_c target, boolean loadComponent)
{
    return getManySQ_SsOnR911(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<InteractionParticipant_c> backPointer_ContainsInteractionParticipantContains_R929 = new ArrayList<InteractionParticipant_c>();

public void setInteractionParticipantOrderInChildListR929(InteractionParticipant_c target, int index) {
	unrelateAcrossR929From(target);
	InteractionParticipant_c[] elements = InteractionParticipant_c.getManySQ_PsOnR929(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR929From((InteractionParticipant_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR929To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR929To((InteractionParticipant_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR929To(InteractionParticipant_c target)
{
  if (target != null) {
    target.relateAcrossR929To(this, true) ;
  }
}

public void relateAcrossR929To(InteractionParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR929To(this, notifyChanges) ;
  }
}

public void setBackPointerR929To(InteractionParticipant_c target)
{
  	synchronized (backPointer_ContainsInteractionParticipantContains_R929) {
		backPointer_ContainsInteractionParticipantContains_R929.add(target);
	}
}

public void unrelateAcrossR929From(InteractionParticipant_c target)
{
  if (target != null) {
    target.unrelateAcrossR929From(this, true) ;
  }
}

public void unrelateAcrossR929From(InteractionParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR929From(this, notifyChanges) ;
  }
}

public void clearBackPointerR929To(InteractionParticipant_c target)
{
  synchronized (backPointer_ContainsInteractionParticipantContains_R929) {
	    backPointer_ContainsInteractionParticipantContains_R929.remove(target);
	}
}

public static Sequence_c getOneSQ_SOnR929(InteractionParticipant_c [] targets)
{
    return getOneSQ_SOnR929(targets, null);
}

public static Sequence_c getOneSQ_SOnR929(InteractionParticipant_c [] targets, ClassQueryInterface_c test)
{
    return getOneSQ_SOnR929(targets, test, true);
}

public static Sequence_c getOneSQ_SOnR929(InteractionParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Sequence_c candidate_val = getOneSQ_SOnR929(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSQ_SOnR929(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Sequence_c getOneSQ_SOnR929(InteractionParticipant_c target)
{
	return getOneSQ_SOnR929(target, true);
}
public static Sequence_c getOneSQ_SOnR929(InteractionParticipant_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ParticipatesInSequence ;
  } else {
    return null;
  }
}

public static Sequence_c [] getManySQ_SsOnR929(InteractionParticipant_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySQ_SsOnR929(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR929(InteractionParticipant_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Sequence_c[0];
  
  
  LinkedHashSet<Sequence_c> elementsSet = new LinkedHashSet<Sequence_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ParticipatesInSequence == null)
	  targets[i].loadProxy();
    Sequence_c associate = targets[i].ParticipatesInSequence;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Sequence_c[] result = new Sequence_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Sequence_c [] getManySQ_SsOnR929(InteractionParticipant_c [] targets)
{
  return getManySQ_SsOnR929(targets, null);
}

public static Sequence_c [] getManySQ_SsOnR929(InteractionParticipant_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    InteractionParticipant_c [] targetArray = new InteractionParticipant_c[1];
    targetArray[0] = target;
    return getManySQ_SsOnR929(targetArray, test, loadComponent);
  } else {
    Sequence_c [] result = new Sequence_c [0] ;
    return result ;
  }
  
}

public static Sequence_c [] getManySQ_SsOnR929(InteractionParticipant_c target,
    ClassQueryInterface_c test)
{
    return getManySQ_SsOnR929(target, null, true);
}

public static Sequence_c [] getManySQ_SsOnR929(InteractionParticipant_c target)
{
    return getManySQ_SsOnR929(target, null, true);
}

public static Sequence_c [] getManySQ_SsOnR929(InteractionParticipant_c target, boolean loadComponent)
{
    return getManySQ_SsOnR929(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<MessageInSequence_c> backPointer_ContainsMessageInSequenceContains_R953 = new ArrayList<MessageInSequence_c>();

public void setMessageInSequenceOrderInChildListR953(MessageInSequence_c target, int index) {
	unrelateAcrossR953From(target);
	MessageInSequence_c[] elements = MessageInSequence_c.getManySQ_MISsOnR953(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR953From((MessageInSequence_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR953To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR953To((MessageInSequence_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR953To(MessageInSequence_c target)
{
  if (target != null) {
    target.relateAcrossR953To(this, true) ;
  }
}

public void relateAcrossR953To(MessageInSequence_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR953To(this, notifyChanges) ;
  }
}

public void setBackPointerR953To(MessageInSequence_c target)
{
  	synchronized (backPointer_ContainsMessageInSequenceContains_R953) {
		backPointer_ContainsMessageInSequenceContains_R953.add(target);
	}
}

public void unrelateAcrossR953From(MessageInSequence_c target)
{
  if (target != null) {
    target.unrelateAcrossR953From(this, true) ;
  }
}

public void unrelateAcrossR953From(MessageInSequence_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR953From(this, notifyChanges) ;
  }
}

public void clearBackPointerR953To(MessageInSequence_c target)
{
  synchronized (backPointer_ContainsMessageInSequenceContains_R953) {
	    backPointer_ContainsMessageInSequenceContains_R953.remove(target);
	}
}

public static Sequence_c getOneSQ_SOnR953(MessageInSequence_c [] targets)
{
    return getOneSQ_SOnR953(targets, null);
}

public static Sequence_c getOneSQ_SOnR953(MessageInSequence_c [] targets, ClassQueryInterface_c test)
{
    return getOneSQ_SOnR953(targets, test, true);
}

public static Sequence_c getOneSQ_SOnR953(MessageInSequence_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Sequence_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Sequence_c candidate_val = getOneSQ_SOnR953(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSQ_SOnR953(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Sequence_c getOneSQ_SOnR953(MessageInSequence_c target)
{
	return getOneSQ_SOnR953(target, true);
}
public static Sequence_c getOneSQ_SOnR953(MessageInSequence_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ContainedInSequence ;
  } else {
    return null;
  }
}

public static Sequence_c [] getManySQ_SsOnR953(MessageInSequence_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySQ_SsOnR953(targets, test, true);
}

public static Sequence_c [] getManySQ_SsOnR953(MessageInSequence_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Sequence_c[0];
  
  
  LinkedHashSet<Sequence_c> elementsSet = new LinkedHashSet<Sequence_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ContainedInSequence == null)
	  targets[i].loadProxy();
    Sequence_c associate = targets[i].ContainedInSequence;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Sequence_c[] result = new Sequence_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Sequence_c [] getManySQ_SsOnR953(MessageInSequence_c [] targets)
{
  return getManySQ_SsOnR953(targets, null);
}

public static Sequence_c [] getManySQ_SsOnR953(MessageInSequence_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    MessageInSequence_c [] targetArray = new MessageInSequence_c[1];
    targetArray[0] = target;
    return getManySQ_SsOnR953(targetArray, test, loadComponent);
  } else {
    Sequence_c [] result = new Sequence_c [0] ;
    return result ;
  }
  
}

public static Sequence_c [] getManySQ_SsOnR953(MessageInSequence_c target,
    ClassQueryInterface_c test)
{
    return getManySQ_SsOnR953(target, null, true);
}

public static Sequence_c [] getManySQ_SsOnR953(MessageInSequence_c target)
{
    return getManySQ_SsOnR953(target, null, true);
}

public static Sequence_c [] getManySQ_SsOnR953(MessageInSequence_c target, boolean loadComponent)
{
    return getManySQ_SsOnR953(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R1402
      SpecificationPackage_c relInst39346 = (SpecificationPackage_c) baseRoot.getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39346 == null) {
      			relInst39346 = (SpecificationPackage_c) Ooaofooa.getDefaultInstance().getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
      		}
			if (relInst39346 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39346 = (SpecificationPackage_c) roots[i].getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
					if (relInst39346 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39346 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39346) && !isProxy())) {
	      relInst39346.relateAcrossR1402To(this, notifyChanges);
	  }
	  }
	          

	if (IsDisplayedInSequenceInSequence == null) {          
      // R928
      SequenceInSequence_c relInst39347 = (SequenceInSequence_c) baseRoot.getInstanceList(SequenceInSequence_c.class).get(new Object[] {m_prev_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39347 == null) {
      			relInst39347 = (SequenceInSequence_c) Ooaofooa.getDefaultInstance().getInstanceList(SequenceInSequence_c.class).get(new Object[] {m_prev_package_id});
      		}
			if (relInst39347 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39347 = (SequenceInSequence_c) roots[i].getInstanceList(SequenceInSequence_c.class).get(new Object[] {m_prev_package_id});
					if (relInst39347 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39347 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39347) && !isProxy())) {
	      relInst39347.relateAcrossR928To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsShownInDomain == null) {          
      // R913
      Domain_c relInst39348 = (Domain_c) baseRoot.getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39348 == null) {
      			relInst39348 = (Domain_c) Ooaofooa.getDefaultInstance().getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
      		}
			if (relInst39348 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39348 = (Domain_c) roots[i].getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
					if (relInst39348 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39348 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39348) && !isProxy())) {
	      relInst39348.relateAcrossR913To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsShownInSubsystem == null) {          
      // R914
      Subsystem_c relInst39349 = (Subsystem_c) baseRoot.getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39349 == null) {
      			relInst39349 = (Subsystem_c) Ooaofooa.getDefaultInstance().getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
      		}
			if (relInst39349 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39349 = (Subsystem_c) roots[i].getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
					if (relInst39349 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39349 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39349) && !isProxy())) {
	      relInst39349.relateAcrossR914To(this, notifyChanges);
	  }
	  }
	}
	          

	if (SystemModel == null) {          
      // R950
      baseRoot = Ooaofooa.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
      SystemModel_c relInst39350 = (SystemModel_c) baseRoot.getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39350 == null) {
      			relInst39350 = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
      		}
			if (relInst39350 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39350 = (SystemModel_c) roots[i].getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
					if (relInst39350 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39350 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39350) && !isProxy())) {
	      relInst39350.relateAcrossR950To(this, notifyChanges);
	  }
	      // set the root in the Domain's model root, not the System Model's
	      // modelRoot is the SystemModel's root when we are loading a Domain proxy
	      ((Ooaofooa)getModelRoot()).setRoot(relInst39350);
	  }
          baseRoot = modelRoot;
	}
	          

	if (ComponentPackage == null) {          
      // R951
      ComponentPackage_c relInst39351 = (ComponentPackage_c) baseRoot.getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39351 == null) {
      			relInst39351 = (ComponentPackage_c) Ooaofooa.getDefaultInstance().getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
      		}
			if (relInst39351 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39351 = (ComponentPackage_c) roots[i].getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
					if (relInst39351 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39351 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39351) && !isProxy())) {
	      relInst39351.relateAcrossR951To(this, notifyChanges);
	  }
	  }
	}
	          

	if (Component == null) {          
      // R952
      Component_c relInst39352 = (Component_c) baseRoot.getInstanceList(Component_c.class).get(new Object[] {m_component_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39352 == null) {
      			relInst39352 = (Component_c) Ooaofooa.getDefaultInstance().getInstanceList(Component_c.class).get(new Object[] {m_component_id});
      		}
			if (relInst39352 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39352 = (Component_c) roots[i].getInstanceList(Component_c.class).get(new Object[] {m_component_id});
					if (relInst39352 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39352 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39352) && !isProxy())) {
	      relInst39352.relateAcrossR952To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R1402
      // EP_SPKG
		  inst=IsSupertypeSpecificationPackage;
			unrelateAcrossR1402From(IsSupertypeSpecificationPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R928
      // SQ_SIS
		  inst=IsDisplayedInSequenceInSequence;
			unrelateAcrossR928From(IsDisplayedInSequenceInSequence, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R913
      // S_DOM
		  inst=IsShownInDomain;
			unrelateAcrossR913From(IsShownInDomain, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R914
      // S_SS
		  inst=IsShownInSubsystem;
			unrelateAcrossR914From(IsShownInSubsystem, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R950
      // S_SYS
		  inst=SystemModel;
			unrelateAcrossR950From(SystemModel, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R951
      // CP_CP
		  inst=ComponentPackage;
			unrelateAcrossR951From(ComponentPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R952
      // C_C
		  inst=Component;
			unrelateAcrossR952From(Component, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Sequence_c inst = (Sequence_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Sequence_c SequenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Sequence_c result=findSequenceInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Sequence_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findSequenceInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Sequence_c findSequenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Sequence_c x = (Sequence_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Sequence_c SequenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return SequenceInstance(modelRoot,test,true);
  }
  
  public static Sequence_c SequenceInstance(ModelRoot modelRoot)
  {
	 return SequenceInstance(modelRoot,null,true);
  }

  public static Sequence_c [] SequenceInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Sequence_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Sequence_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Sequence_c x = (Sequence_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Sequence_c[] ret_set = new Sequence_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Sequence_c[0];
			}		
		} 
  }
  public static Sequence_c [] SequenceInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  SequenceInstances(modelRoot,test,true);
  }
  public static Sequence_c [] SequenceInstances(ModelRoot modelRoot)
  {
	return SequenceInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Sequence.dispose call: ";
	SpecificationPackage_c testR1402Inst7 = SpecificationPackage_c.getOneEP_SPKGOnR1402(this, false);

	if ( testR1402Inst7 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "1402 ";
	}
	SequenceInSequence_c testR911Inst = SequenceInSequence_c.getOneSQ_SISOnR911(this, false);

	if ( testR911Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "911 ";	
	}
	SequenceInSequence_c testR928Inst = SequenceInSequence_c.getOneSQ_SISOnR928(this, false);

	if ( testR928Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "928 ";
	}
	Domain_c testR913Inst = Domain_c.getOneS_DOMOnR913(this, false);

	if ( testR913Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "913 ";
	}
	Subsystem_c testR914Inst = Subsystem_c.getOneS_SSOnR914(this, false);

	if ( testR914Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "914 ";
	}
	InteractionParticipant_c testR929Inst = InteractionParticipant_c.getOneSQ_POnR929(this, false);

	if ( testR929Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "929 ";	
	}
	SystemModel_c testR950Inst = SystemModel_c.getOneS_SYSOnR950(this, false);

	if ( testR950Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "950 ";
	}
	ComponentPackage_c testR951Inst = ComponentPackage_c.getOneCP_CPOnR951(this, false);

	if ( testR951Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "951 ";
	}
	Component_c testR952Inst = Component_c.getOneC_COnR952(this, false);

	if ( testR952Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "952 ";
	}
	MessageInSequence_c testR953Inst = MessageInSequence_c.getOneSQ_MISOnR953(this, false);

	if ( testR953Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "953 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Sequence", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("dom_id")){
         return true;
      }
      if(attributeName.equals("ss_id")){
         return true;
      }
      if(attributeName.equals("sys_id")){
         return true;
      }
      if(attributeName.equals("package_id")){
         return true;
      }
      if(attributeName.equals("component_package_id")){
         return true;
      }
      if(attributeName.equals("prev_package_id")){
         return true;
      }
      if(attributeName.equals("component_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getPackage_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getPackage_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getDom_idLongBased()
  {
    if ( IsShownInDomain != null )
    {
      return IsShownInDomain.getDom_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDom_id()
  {
    if ( IsShownInDomain != null )
    {
      return IsShownInDomain.getDom_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDom_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dom_id) )
      return m_dom_id;
    else
      return getDom_id();
  }
  
  public void setDom_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dom_id)){
	        return;
	    }
	}else if(m_dom_id != null){
	    if(m_dom_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dom_id", m_dom_id, newValue,true); 
   m_dom_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSs_idLongBased()
  {
    if ( IsShownInSubsystem != null )
    {
      return IsShownInSubsystem.getSs_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSs_id()
  {
    if ( IsShownInSubsystem != null )
    {
      return IsShownInSubsystem.getSs_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSs_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ss_id) )
      return m_ss_id;
    else
      return getSs_id();
  }
  
  public void setSs_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ss_id)){
	        return;
	    }
	}else if(m_ss_id != null){
	    if(m_ss_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ss_id", m_ss_id, newValue,true); 
   m_ss_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSys_idLongBased()
  {
    if ( SystemModel != null )
    {
      return SystemModel.getSys_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSys_id()
  {
    if ( SystemModel != null )
    {
      return SystemModel.getSys_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSys_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sys_id) )
      return m_sys_id;
    else
      return getSys_id();
  }
  
  public void setSys_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_sys_id)){
	        return;
	    }
	}else if(m_sys_id != null){
	    if(m_sys_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Sys_id", m_sys_id, newValue,true); 
   m_sys_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPackage_idLongBased()
  {
    if ( IsSupertypeSpecificationPackage != null )
    {
      return IsSupertypeSpecificationPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPackage_id()
  {
    if ( IsSupertypeSpecificationPackage != null )
    {
      return IsSupertypeSpecificationPackage.getPackage_id();
    }
    return m_package_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypeSpecificationPackage != null );
 
 }                  

  public java.util.UUID getPackage_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_package_id) )
      return m_package_id;
    else
      return getPackage_id();
  }
  
  public void setPackage_id(java.util.UUID newValue)
  {
   m_package_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getComponent_package_idLongBased()
  {
    if ( ComponentPackage != null )
    {
      return ComponentPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_package_id()
  {
    if ( ComponentPackage != null )
    {
      return ComponentPackage.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_package_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_package_id) )
      return m_component_package_id;
    else
      return getComponent_package_id();
  }
  
  public void setComponent_package_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_package_id)){
	        return;
	    }
	}else if(m_component_package_id != null){
	    if(m_component_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_package_id", m_component_package_id, newValue,true); 
   m_component_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPrev_package_idLongBased()
  {
    if ( IsDisplayedInSequenceInSequence != null )
    {
      return IsDisplayedInSequenceInSequence.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPrev_package_id()
  {
    if ( IsDisplayedInSequenceInSequence != null )
    {
      return IsDisplayedInSequenceInSequence.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getPrev_package_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_prev_package_id) )
      return m_prev_package_id;
    else
      return getPrev_package_id();
  }
  
  public void setPrev_package_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_prev_package_id)){
	        return;
	    }
	}else if(m_prev_package_id != null){
	    if(m_prev_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Prev_package_id", m_prev_package_id, newValue,true); 
   m_prev_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getComponent_idLongBased()
  {
    if ( Component != null )
    {
      return Component.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_id()
  {
    if ( Component != null )
    {
      return Component.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_id) )
      return m_component_id;
    else
      return getComponent_id();
  }
  
  public void setComponent_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_id)){
	        return;
	    }
	}else if(m_component_id != null){
	    if(m_component_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_id", m_component_id, newValue,true); 
   m_component_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Sequence", //$NON-NLS-1$
	  " Operation entered: Sequence::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Sequence_c [] objs = Sequence_c.SequenceInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Sequence", //$NON-NLS-1$
	  " Operation entered: Sequence::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Sequence_c_test39354_c implements ClassQueryInterface_c
    {
	  Sequence_c_test39354_c( java.util.UUID            p39355 ) {
	  m_p39355 = p39355;
	  }
	  private java.util.UUID             m_p39355; 
	  public boolean evaluate (Object candidate)
	  {
	      Sequence_c selected = (Sequence_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p39355));
	      return retval;
	  }
    }

    Sequence_c [] objs39353 = 
    Sequence_c.SequenceInstances(modelRoot, new Sequence_c_test39354_c(getPackage_id())) ;

    if ( (  (objs39353.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs39353.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39353.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs39353.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39353.length )  + " Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39353.length )  + " Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Sequence is a referring class in association: rel.Numb = 913
          // The participating class is: Domain
    class Domain_c_test39359_c implements ClassQueryInterface_c
    {
	  Domain_c_test39359_c( java.util.UUID            p39360 ) {
	  m_p39360 = p39360;
	  }
	  private java.util.UUID             m_p39360; 
	  public boolean evaluate (Object candidate)
	  {
	      Domain_c selected = (Domain_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDom_id().equals(m_p39360));
	      return retval;
	  }
    }

    Domain_c [] objs39358 = 
    Domain_c.DomainInstances(modelRoot, new Domain_c_test39359_c(getDom_id())) ;

    if ( (  (objs39358.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Association: 913: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39358.length )  + " Dom_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Association: 913: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39358.length )  + " Dom_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Sequence is a referring class in association: rel.Numb = 914
          // The participating class is: Subsystem
    class Subsystem_c_test39362_c implements ClassQueryInterface_c
    {
	  Subsystem_c_test39362_c( java.util.UUID            p39363 ) {
	  m_p39363 = p39363;
	  }
	  private java.util.UUID             m_p39363; 
	  public boolean evaluate (Object candidate)
	  {
	      Subsystem_c selected = (Subsystem_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSs_id().equals(m_p39363));
	      return retval;
	  }
    }

    Subsystem_c [] objs39361 = 
    Subsystem_c.SubsystemInstances(modelRoot, new Subsystem_c_test39362_c(getSs_id())) ;

    if ( (  (objs39361.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Association: 914: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39361.length )  + " SS_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Association: 914: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39361.length )  + " SS_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Sequence is a referring class in association: rel.Numb = 950
          // The participating class is: System Model
    class SystemModel_c_test39365_c implements ClassQueryInterface_c
    {
	  SystemModel_c_test39365_c( java.util.UUID            p39366 ) {
	  m_p39366 = p39366;
	  }
	  private java.util.UUID             m_p39366; 
	  public boolean evaluate (Object candidate)
	  {
	      SystemModel_c selected = (SystemModel_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSys_id().equals(m_p39366));
	      return retval;
	  }
    }

    SystemModel_c [] objs39364 = 
    SystemModel_c.SystemModelInstances(Ooaofooa.getDefaultInstance(), new SystemModel_c_test39365_c(getSys_id())) ;

    if ( (  (objs39364.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Association: 950: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39364.length )  + " Sys_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Association: 950: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39364.length )  + " Sys_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Sequence is a subtype in association: rel.Numb = 1402
          // The supertype class is: Specification Package
    class SpecificationPackage_c_test39368_c implements ClassQueryInterface_c
    {
	  SpecificationPackage_c_test39368_c( java.util.UUID            p39369 ) {
	  m_p39369 = p39369;
	  }
	  private java.util.UUID             m_p39369; 
	  public boolean evaluate (Object candidate)
	  {
	      SpecificationPackage_c selected = (SpecificationPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p39369));
	      return retval;
	  }
    }

    SpecificationPackage_c [] objs39367 = 
    SpecificationPackage_c.SpecificationPackageInstances(modelRoot, new SpecificationPackage_c_test39368_c(getPackage_id())) ;

    if ( (  (objs39367.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Association: 1402: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs39367.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Association: 1402: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39367.length )  , e); 
      }
      retval = false;

    }

          // Sequence is a referring class in association: rel.Numb = 951
          // The participating class is: Component Package
    class ComponentPackage_c_test39371_c implements ClassQueryInterface_c
    {
	  ComponentPackage_c_test39371_c( java.util.UUID            p39372 ) {
	  m_p39372 = p39372;
	  }
	  private java.util.UUID             m_p39372; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentPackage_c selected = (ComponentPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p39372));
	      return retval;
	  }
    }

    ComponentPackage_c [] objs39370 = 
    ComponentPackage_c.ComponentPackageInstances(modelRoot, new ComponentPackage_c_test39371_c(getComponent_package_id())) ;

    if ( (  (objs39370.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Association: 951: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39370.length )  + " Component_Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Association: 951: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39370.length )  + " Component_Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Sequence is a referring class in association: rel.Numb = 928
          // The participating class is: Sequence in Sequence
    class SequenceInSequence_c_test39374_c implements ClassQueryInterface_c
    {
	  SequenceInSequence_c_test39374_c( java.util.UUID            p39375 ) {
	  m_p39375 = p39375;
	  }
	  private java.util.UUID             m_p39375; 
	  public boolean evaluate (Object candidate)
	  {
	      SequenceInSequence_c selected = (SequenceInSequence_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p39375));
	      return retval;
	  }
    }

    SequenceInSequence_c [] objs39373 = 
    SequenceInSequence_c.SequenceInSequenceInstances(modelRoot, new SequenceInSequence_c_test39374_c(getPrev_package_id())) ;

    if ( (  (objs39373.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Association: 928: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39373.length )  + " Prev_Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Association: 928: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39373.length )  + " Prev_Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Sequence is a referring class in association: rel.Numb = 952
          // The participating class is: Component
    class Component_c_test39377_c implements ClassQueryInterface_c
    {
	  Component_c_test39377_c( java.util.UUID            p39378 ) {
	  m_p39378 = p39378;
	  }
	  private java.util.UUID             m_p39378; 
	  public boolean evaluate (Object candidate)
	  {
	      Component_c selected = (Component_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39378));
	      return retval;
	  }
    }

    Component_c [] objs39376 = 
    Component_c.ComponentInstances(modelRoot, new Component_c_test39377_c(getComponent_id())) ;

    if ( (  (objs39376.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Association: 952: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39376.length )  + " Component_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Association: 952: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39376.length )  + " Component_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Sequence is a participating class in association: rel.Numb = 911
             // Object: Sequence in Sequence
    class SequenceInSequence_c_test39380_c implements ClassQueryInterface_c
    {
	  SequenceInSequence_c_test39380_c( java.util.UUID            p39381 ) {
	  m_p39381 = p39381;
	  }
	  private java.util.UUID             m_p39381; 
	  public boolean evaluate (Object candidate)
	  {
	      SequenceInSequence_c selected = (SequenceInSequence_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p39381));
	      return retval;
	  }
    }

    SequenceInSequence_c [] objs39379 = 
    SequenceInSequence_c.SequenceInSequenceInstances(modelRoot, new SequenceInSequence_c_test39380_c(getPackage_id())) ;

    if ( (  (objs39379.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Sequence", //$NON-NLS-1$
           "Consistency: Object: Sequence: Association: 911: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs39379.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Sequence: Association: 911: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39379.length )  , e); 
      }
      retval = false;

    }

          // Sequence is a participating class in association: rel.Numb = 929
             // Object: Interaction Participant
          // Sequence is a participating class in association: rel.Numb = 953
             // Object: Message In Sequence
    return retval;
  }


  // declare transform functions
  public  int          Get_compartments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Get_compartments") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_compartments
  public  int          Get_entries(final int          p_Comp_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Get_entries") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_entries
  public  String       Get_compartment_text(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Get_compartment_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


if ( (p_At == Justification_c.Center_in_X) )
{

v_result = "«sequence»" ;



}

else if ( (p_At == Justification_c.Center) )
{

v_result = getName() ;



}

return v_result;



   } // End get_compartment_text
  public  int  Get_text_style(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Get_text_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.None;



   } // End get_text_style
  public  int  Get_style()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.Folder;



   } // End get_style
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getPackage_id();



   } // End get_ooa_id
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
setName( Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Sequence"			    
,Converttoinstance())) ;



   } // End initialize
  public  boolean      Newlifespan(final java.util.UUID         p_From,final boolean      p_Fromisimported,final java.util.UUID         p_To,final boolean      p_Toisimported)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newlifespan") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_part = (InteractionParticipant_c) modelRoot.getInstanceList(InteractionParticipant_c.class).getGlobal(null, p_From);


InteractionParticipant_c v_partTo = (InteractionParticipant_c) modelRoot.getInstanceList(InteractionParticipant_c.class).getGlobal(null, p_To);


if ( (  (v_part == null)) && (  (v_partTo != null)) )
{

InteractionParticipant_c v_inst = v_partTo ;



}

if ( (  (v_part != null)) )
{

Lifespan_c v_otherLifeSpan = Lifespan_c.getOneSQ_LSOnR940(v_part);


if ( (  (v_otherLifeSpan != null)) )
{

return false;



}

InteractionParticipant_c v_lifeSpanPart = new InteractionParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_lifeSpanPart));


Lifespan_c v_lifespan = new Lifespan_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_lifespan));


if (v_lifespan != null) {
  v_lifespan.relateAcrossR940To(v_part);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_lifespan != null) {
  v_lifespan.relateAcrossR930To(v_lifeSpanPart);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_lifeSpanPart != null) {
  v_lifeSpanPart.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


return true;



}

return false;



   } // End newLifeSpan
  public  void Newclassinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newclassinstance") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_participant = new InteractionParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_participant));


ClassInstanceParticipant_c v_inst = new ClassInstanceParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_inst));


if (v_participant != null) {
  v_participant.relateAcrossR930To(v_inst);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_participant != null) {
  v_participant.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_inst != null) {
v_inst.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newClassInstance
  public  void Newclassparticipant()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newclassparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_participant = new InteractionParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_participant));


ClassParticipant_c v_cp = new ClassParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_cp));


if (v_participant != null) {
  v_participant.relateAcrossR930To(v_cp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_participant != null) {
  v_participant.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_cp != null) {
v_cp.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newClassParticipant
  public  void Newsequence()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newsequence") ; 
               final ModelRoot modelRoot = getModelRoot();
Sequence_c v_sequence = new Sequence_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sequence));


SpecificationPackage_c v_sp = new SpecificationPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sp));


if (v_sequence != null) {
  v_sequence.relateAcrossR1402To(v_sp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


SequenceInSequence_c v_sis = SequenceInSequence_c.getOneSQ_SISOnR911(this);


if ( (  (v_sis == null)) )
{

v_sis = new SequenceInSequence_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sis));


  this.relateAcrossR911To(v_sis);



}

if (v_sis != null) {
  v_sis.relateAcrossR928To(v_sequence);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_sequence != null) {
v_sequence.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newSequence
  public  boolean      Newtimingmark(final java.util.UUID         p_From,final boolean      p_Fromisimported,final java.util.UUID         p_To,final boolean      p_Toisimported)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newtimingmark") ; 
               final ModelRoot modelRoot = getModelRoot();
Lifespan_c v_lifespan = (Lifespan_c) modelRoot.getInstanceList(Lifespan_c.class).getGlobal(null, p_From);


if ( (  (v_lifespan != null)) )
{

TimingMark_c v_mark = new TimingMark_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_mark));


if (v_mark != null) {
  v_mark.relateAcrossR931To(v_lifespan);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


return true;



}

return false;



   } // End newTimingMark
  public  boolean      Newtimespan(final java.util.UUID         p_From,final boolean      p_Fromisimported,final java.util.UUID         p_To,final boolean      p_Toisimported)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newtimespan") ; 
               final ModelRoot modelRoot = getModelRoot();
TimingMark_c v_mark = (TimingMark_c) modelRoot.getInstanceList(TimingMark_c.class).getGlobal(null, p_From);


if ( (  (v_mark != null)) )
{

TimingMark_c v_otherMark = (TimingMark_c) modelRoot.getInstanceList(TimingMark_c.class).getGlobal(null, p_To);


if ( (  (v_otherMark != null)) )
{

TimeSpan_c v_span = new TimeSpan_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_span));


if (v_span != null) {
  v_span.relateAcrossR941To(v_mark);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_span != null) {
  v_span.relateAcrossR942To(v_otherMark);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


return true;



}


}

return false;



   } // End newTimeSpan
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_dom = Domain_c.getOneS_DOMOnR913(this);


Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR914(this);


SequenceInSequence_c v_sis = SequenceInSequence_c.getOneSQ_SISOnR928(this);


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR950(this);


ComponentPackage_c v_compPackage = ComponentPackage_c.getOneCP_CPOnR951(this);


Component_c v_comp = Component_c.getOneC_COnR952(this);


if ( (  (v_comp != null)) )
{

this.unrelateAcrossR952From(v_comp);



}

if ( (  (v_compPackage != null)) )
{

this.unrelateAcrossR951From(v_compPackage);



}

if ( (  (v_system != null)) )
{

this.unrelateAcrossR950From(v_system);



}

if ( (  (v_dom != null)) )
{

this.unrelateAcrossR913From(v_dom);



}

if ( (  (v_ss != null)) )
{

this.unrelateAcrossR914From(v_ss);



}

v_sis = SequenceInSequence_c.getOneSQ_SISOnR928(this);


if ( (  (v_sis != null)) )
{

this.unrelateAcrossR928From(v_sis);


Sequence_c v_other_child = Sequence_c.getOneSQ_SOnR928(v_sis);


if (   (v_other_child == null) )
{

Sequence_c v_parent = Sequence_c.getOneSQ_SOnR911(v_sis);


if ( (  (v_parent != null)) )
{

if (v_sis != null) {
v_sis.unrelateAcrossR911From(v_parent);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_sis != null) {
// get the location of this element in the instance list
// before deleting
if ( v_sis.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_sis));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}


}

v_sis = SequenceInSequence_c.getOneSQ_SISOnR911(this);


Sequence_c [] v_sequences = Sequence_c.getManySQ_SsOnR928(v_sis);


Sequence_c  v_sequence = null;
for ( int i37226 = 0; i37226 < v_sequences.length; i37226++)
{
  v_sequence = v_sequences[i37226] ;

if (v_sequence != null) {
v_sequence.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

InteractionParticipant_c [] v_participants = InteractionParticipant_c.getManySQ_PsOnR929(this);


InteractionParticipant_c  v_participant = null;
for ( int i37227 = 0; i37227 < v_participants.length; i37227++)
{
  v_participant = v_participants[i37227] ;

this.unrelateAcrossR929From(v_participant);


if (v_participant != null) {
v_participant.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


if ( (  (v_specPkg != null)) )
{

this.unrelateAcrossR1402From(v_specPkg);


if (v_specPkg != null) {
v_specPkg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

MessageInSequence_c [] v_miss = MessageInSequence_c.getManySQ_MISsOnR953(this);


MessageInSequence_c  v_mis = null;
for ( int i37228 = 0; i37228 < v_miss.length; i37228++)
{
  v_mis = v_miss[i37228] ;

Message_c v_message = Message_c.getOneMSG_MOnR954(v_mis);


if (v_mis != null) {
v_mis.unrelateAcrossR953From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_mis != null) {
v_mis.unrelateAcrossR954From(v_message);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_message != null) {
v_message.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Newexternalentityparticipant()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newexternalentityparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_participant = new InteractionParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_participant));


ExternalEntityParticipant_c v_eep = new ExternalEntityParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_eep));


if (v_participant != null) {
  v_participant.relateAcrossR930To(v_eep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_participant != null) {
  v_participant.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_eep != null) {
v_eep.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newExternalEntityParticipant
  public  boolean      Newsyncmessage(final java.util.UUID         p_From,final boolean      p_Fromisimported,final java.util.UUID         p_To,final boolean      p_Toisimported)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newsyncmessage") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_fromParticipant = (InteractionParticipant_c) modelRoot.getInstanceList(InteractionParticipant_c.class).getGlobal(null, p_From);


InteractionParticipant_c v_toParticipant = (InteractionParticipant_c) modelRoot.getInstanceList(InteractionParticipant_c.class).getGlobal(null, p_To);


if ( (  (v_toParticipant != null)) )
{

Message_c v_message = new Message_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_message));


MessageInSequence_c v_mis = new MessageInSequence_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_mis));


if (v_message != null) {
  v_message.relateAcrossR954To(v_mis);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_mis != null) {
  v_mis.relateAcrossR953To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_message != null) {
  v_message.relateAcrossR1007To(v_toParticipant);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (  (v_fromParticipant != null)) )
{

if (v_message != null) {
  v_message.relateAcrossR1008To(v_fromParticipant);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

SynchronousMessage_c v_sm = new SynchronousMessage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sm));


if (v_message != null) {
  v_message.relateAcrossR1018To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_sm != null) {
v_sm.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


return true;



}

return false;



   } // End newSyncMessage
  public  boolean      Newasyncmessage(final java.util.UUID         p_From,final boolean      p_Fromisimported,final java.util.UUID         p_To,final boolean      p_Toisimported)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newasyncmessage") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_fromParticipant = (InteractionParticipant_c) modelRoot.getInstanceList(InteractionParticipant_c.class).getGlobal(null, p_From);


InteractionParticipant_c v_toParticipant = (InteractionParticipant_c) modelRoot.getInstanceList(InteractionParticipant_c.class).getGlobal(null, p_To);


if ( (  (v_toParticipant != null)) )
{

Message_c v_message = new Message_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_message));


MessageInSequence_c v_mis = new MessageInSequence_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_mis));


if (v_message != null) {
  v_message.relateAcrossR954To(v_mis);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_mis != null) {
  v_mis.relateAcrossR953To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_message != null) {
  v_message.relateAcrossR1007To(v_toParticipant);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (  (v_fromParticipant != null)) )
{

if (v_message != null) {
  v_message.relateAcrossR1008To(v_fromParticipant);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

AsynchronousMessage_c v_am = new AsynchronousMessage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_am));


if (v_message != null) {
  v_message.relateAcrossR1018To(v_am);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_am != null) {
v_am.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


return true;



}

return false;



   } // End newASyncMessage
  public  void Newfunctionpackageparticipant()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newfunctionpackageparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_participant = new InteractionParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_participant));


FunctionPackageParticipant_c v_fpp = new FunctionPackageParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fpp));


if (v_participant != null) {
  v_participant.relateAcrossR930To(v_fpp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_participant != null) {
  v_participant.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_fpp != null) {
v_fpp.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newFunctionPackageParticipant
  public  boolean      Newreturnmessage(final java.util.UUID         p_From,final boolean      p_Fromisimported,final java.util.UUID         p_To,final boolean      p_Toisimported)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newreturnmessage") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_fromParticipant = (InteractionParticipant_c) modelRoot.getInstanceList(InteractionParticipant_c.class).getGlobal(null, p_From);


InteractionParticipant_c v_toParticipant = (InteractionParticipant_c) modelRoot.getInstanceList(InteractionParticipant_c.class).getGlobal(null, p_To);


if ( (  (v_toParticipant != null)) )
{

Message_c v_message = new Message_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_message));


if (v_message != null) {
  v_message.relateAcrossR1007To(v_toParticipant);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


MessageInSequence_c v_mis = new MessageInSequence_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_mis));


if (v_message != null) {
  v_message.relateAcrossR954To(v_mis);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_mis != null) {
  v_mis.relateAcrossR953To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (  (v_fromParticipant != null)) )
{

if (v_message != null) {
  v_message.relateAcrossR1008To(v_fromParticipant);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ReturnMessage_c v_rm = new ReturnMessage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_rm));


if (v_rm != null) {
  v_rm.relateAcrossR1018To(v_message);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_rm != null) {
v_rm.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


return true;



}

return false;



   } // End newReturnMessage
  public  void Newactor()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newactor") ; 
               final ModelRoot modelRoot = getModelRoot();
ActorParticipant_c v_actor = new ActorParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_actor));


InteractionParticipant_c v_participant = new InteractionParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_participant));


if (v_actor != null) {
  v_actor.relateAcrossR930To(v_participant);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_participant != null) {
  v_participant.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_actor != null) {
v_actor.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newActor
  public  String       Getpath(final boolean      p_Domainnameonly)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_domain = Domain_c.getOneS_DOMOnR913(this);


String       v_domainName = "" ;


String       v_result = getName() ;


if ( (  (v_domain == null)) )
{

Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR914(this);


if ( (  (v_ss != null)) )
{

v_domain = Domain_c.getOneS_DOMOnR1(v_ss);


if ( (  (v_domain != null)) )
{

v_result = v_ss.Getpath(			    
"") + "::" + v_result ;


v_domainName = v_domain.getName() ;



}


}

else
{

Sequence_c v_sis = Sequence_c.getOneSQ_SOnR911(SequenceInSequence_c.getOneSQ_SISOnR928(this));


while ( (  (v_sis != null)) )
{

v_result = v_sis.getName() + "::" + v_result ;


Sequence_c v_prev = v_sis ;


v_sis = Sequence_c.getOneSQ_SOnR911(SequenceInSequence_c.getOneSQ_SISOnR928(v_sis));


if ( (  (v_sis == null)) )
{

if ( (p_Domainnameonly) )
{

return v_prev.Getpath(			    
true);



}

else
{

v_result = v_prev.Getpath(			    
p_Domainnameonly) + v_result ;



}


}


}


}


}

else
{

v_domainName = v_domain.getName() ;


v_result = v_domainName + "::" + v_result ;



}

if ( (p_Domainnameonly && (  (v_domain != null))) )
{

return v_domain.getName();



}

else
{

return v_result;



}


   } // End getPath
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  void Newcomponentparticipant()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Newcomponentparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_participant = new InteractionParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_participant));


ComponentParticipant_c v_cp = new ComponentParticipant_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_cp));


if (v_participant != null) {
  v_participant.relateAcrossR930To(v_cp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_participant != null) {
  v_participant.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_cp != null) {
v_cp.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newComponentParticipant
  public  void Associatewithpackage(final java.util.UUID         p_Pkgid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Associatewithpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Package_c v_package = (Package_c) modelRoot.getInstanceList(Package_c.class).getGlobal(null, p_Pkgid);


SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


if (v_specPkg != null) {
  v_specPkg.relateAcrossR1400To(v_package);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithPackage
  public  void Deassociatefromparent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Deassociatefromparent") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR950(this);


if ( (  (v_system != null)) )
{

this.unrelateAcrossR950From(v_system);



}

Domain_c v_domain = Domain_c.getOneS_DOMOnR913(this);


if ( (  (v_domain != null)) )
{

this.unrelateAcrossR913From(v_domain);



}

Subsystem_c v_subsystem = Subsystem_c.getOneS_SSOnR914(this);


if ( (  (v_subsystem != null)) )
{

this.unrelateAcrossR914From(v_subsystem);



}

ComponentPackage_c v_cp = ComponentPackage_c.getOneCP_CPOnR951(this);


if ( (  (v_cp != null)) )
{

this.unrelateAcrossR951From(v_cp);



}

Component_c v_comp = Component_c.getOneC_COnR952(this);


if ( (  (v_comp != null)) )
{

this.unrelateAcrossR952From(v_comp);



}

SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


Package_c v_package = Package_c.getOneEP_PKGOnR1400(v_specPkg);


if ( (  (v_package != null)) )
{

if (v_specPkg != null) {
v_specPkg.unrelateAcrossR1400From(v_package);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

SequenceInSequence_c v_sis = SequenceInSequence_c.getOneSQ_SISOnR928(this);


if ( (  (v_sis != null)) )
{

Sequence_c v_sequence = Sequence_c.getOneSQ_SOnR911(v_sis);


if (v_sis != null) {
v_sis.unrelateAcrossR928From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


Sequence_c [] v_otherSeqs = Sequence_c.getManySQ_SsOnR928(v_sis);


if ( (  (v_otherSeqs.length == 0)) )
{

if (v_sis != null) {
v_sis.unrelateAcrossR911From(v_sequence);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_sis != null) {
// get the location of this element in the instance list
// before deleting
if ( v_sis.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_sis));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}


}


   } // End deassociateFromParent
  public  void Associatewithsystem(final java.util.UUID         p_Sysid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Associatewithsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


SystemModel_c v_system = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(p_Sysid);


if (v_system != null) {
  v_system.relateAcrossR950To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithSystem
  public  void Associatewithcomponent(final java.util.UUID         p_Compid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Associatewithcomponent") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Component_c v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, p_Compid);


  this.relateAcrossR952To(v_component);



   } // End associateWithComponent
  public  void Associatewithcomponentpackage(final java.util.UUID         p_Cpid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Associatewithcomponentpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


ComponentPackage_c v_cp = (ComponentPackage_c) modelRoot.getInstanceList(ComponentPackage_c.class).getGlobal(null, p_Cpid);


if (v_cp != null) {
  v_cp.relateAcrossR951To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithComponentPackage
  public  void Associatewithdomain(final java.util.UUID         p_Domid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Associatewithdomain") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Domain_c v_domain = (Domain_c) modelRoot.getInstanceList(Domain_c.class).getGlobal(null, p_Domid);


if (v_domain != null) {
  v_domain.relateAcrossR913To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithDomain
  public  void Associatewithsubsystem(final java.util.UUID         p_Ssid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Associatewithsubsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Subsystem_c v_ss = (Subsystem_c) modelRoot.getInstanceList(Subsystem_c.class).getGlobal(null, p_Ssid);


if (v_ss != null) {
  v_ss.relateAcrossR914To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithSubsystem
  public  void Associatewithsequence(final java.util.UUID         p_Seqid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Associatewithsequence") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Sequence_c v_seq = (Sequence_c) modelRoot.getInstanceList(Sequence_c.class).getGlobal(null, p_Seqid);


SequenceInSequence_c v_sis = SequenceInSequence_c.getOneSQ_SISOnR911(v_seq);


if ( (  (v_sis == null)) )
{

v_sis = new SequenceInSequence_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sis));


if (v_seq != null) {
  v_seq.relateAcrossR911To(v_sis);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

  this.relateAcrossR928To(v_sis);



   } // End associateWithSequence
  public  void Pastesequence(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pastesequence") ; 
               final ModelRoot modelRoot = getModelRoot();
Sequence_c v_seq = (Sequence_c) modelRoot.getInstanceList(Sequence_c.class).getGlobal(null, p_Id);


if ( (  (v_seq != null)) )
{

if (v_seq != null) {
  v_seq.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_seq.Converttoinstance()			    
,v_seq.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_seq != null) {
v_seq.Associatewithsequence(			    
getPackage_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteSequence
  public  int          Getsequencecount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getsequencecount") ; 
               final ModelRoot modelRoot = getModelRoot();
Sequence_c [] v_sequences = Sequence_c.getManySQ_SsOnR928(SequenceInSequence_c.getManySQ_SISsOnR911(this));


return   (v_sequences.length);



   } // End getSequenceCount
  public  java.util.UUID         Getsequenceid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getsequenceid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


Sequence_c [] v_sequences = Sequence_c.getManySQ_SsOnR928(SequenceInSequence_c.getManySQ_SISsOnR911(this));


int          v_count = -1 ;


Sequence_c  v_sequence = null;
for ( int i37229 = 0; i37229 < v_sequences.length; i37229++)
{
  v_sequence = v_sequences[i37229] ;

if ( (  (v_sequence != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_sequence.Get_ooa_id();



}


}

return v_id;



   } // End getSequenceId
  public  int          Getcomponentcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getcomponentcount") ; 
               final ModelRoot modelRoot = getModelRoot();
ComponentParticipant_c [] v_components = ComponentParticipant_c.getManySQ_COPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


return   (v_components.length);



   } // End getComponentCount
  public  java.util.UUID         Getcomponentid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ComponentParticipant_c [] v_components = ComponentParticipant_c.getManySQ_COPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


int          v_count = -1 ;


ComponentParticipant_c  v_component = null;
for ( int i37230 = 0; i37230 < v_components.length; i37230++)
{
  v_component = v_components[i37230] ;

if ( (  (v_component != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_component.Get_ooa_id();



}


}

return v_id;



   } // End getComponentId
  public  int          Getinstancecount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getinstancecount") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassInstanceParticipant_c [] v_classInstances = ClassInstanceParticipant_c.getManySQ_CIPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


return   (v_classInstances.length);



   } // End getInstanceCount
  public  java.util.UUID         Getinstanceid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getinstanceid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ClassInstanceParticipant_c [] v_classInstances = ClassInstanceParticipant_c.getManySQ_CIPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


int          v_count = -1 ;


ClassInstanceParticipant_c  v_classInstance = null;
for ( int i37231 = 0; i37231 < v_classInstances.length; i37231++)
{
  v_classInstance = v_classInstances[i37231] ;

if ( (  (v_classInstance != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_classInstance.Get_ooa_id();



}


}

return v_id;



   } // End getInstanceId
  public  int          Getactorcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getactorcount") ; 
               final ModelRoot modelRoot = getModelRoot();
ActorParticipant_c [] v_actors = ActorParticipant_c.getManySQ_APsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


return   (v_actors.length);



   } // End getActorCount
  public  java.util.UUID         Getactorid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getactorid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ActorParticipant_c [] v_actors = ActorParticipant_c.getManySQ_APsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


int          v_count = -1 ;


ActorParticipant_c  v_actor = null;
for ( int i37232 = 0; i37232 < v_actors.length; i37232++)
{
  v_actor = v_actors[i37232] ;

if ( (  (v_actor != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_actor.Get_ooa_id();



}


}

return v_id;



   } // End getActorId
  public  int          Getexternalentitycount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getexternalentitycount") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntityParticipant_c [] v_externalEntities = ExternalEntityParticipant_c.getManySQ_EEPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


return   (v_externalEntities.length);



   } // End getExternalEntityCount
  public  java.util.UUID         Getexternalentityid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getexternalentityid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ExternalEntityParticipant_c [] v_externalEntities = ExternalEntityParticipant_c.getManySQ_EEPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


int          v_count = -1 ;


ExternalEntityParticipant_c  v_externalEntity = null;
for ( int i37233 = 0; i37233 < v_externalEntities.length; i37233++)
{
  v_externalEntity = v_externalEntities[i37233] ;

if ( (  (v_externalEntity != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_externalEntity.Get_ooa_id();



}


}

return v_id;



   } // End getExternalEntityId
  public  int          Getclasscount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getclasscount") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassParticipant_c [] v_classes = ClassParticipant_c.getManySQ_CPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


return   (v_classes.length);



   } // End getClassCount
  public  java.util.UUID         Getclassid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getclassid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ClassParticipant_c [] v_classes = ClassParticipant_c.getManySQ_CPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


int          v_count = -1 ;


ClassParticipant_c  v_classParticipant = null;
for ( int i37234 = 0; i37234 < v_classes.length; i37234++)
{
  v_classParticipant = v_classes[i37234] ;

if ( (  (v_classParticipant != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_classParticipant.Get_ooa_id();



}


}

return v_id;



   } // End getClassId
  public  int          Getfunctionpckgcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getfunctionpckgcount") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionPackageParticipant_c [] v_functionPckgs = FunctionPackageParticipant_c.getManySQ_FPPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


return   (v_functionPckgs.length);



   } // End getFunctionPckgCount
  public  java.util.UUID         Getfunctionpckgid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getfunctionpckgid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


FunctionPackageParticipant_c [] v_functionPckgs = FunctionPackageParticipant_c.getManySQ_FPPsOnR930(InteractionParticipant_c.getManySQ_PsOnR929(this));


int          v_count = -1 ;


FunctionPackageParticipant_c  v_functionPckg = null;
for ( int i37235 = 0; i37235 < v_functionPckgs.length; i37235++)
{
  v_functionPckg = v_functionPckgs[i37235] ;

if ( (  (v_functionPckg != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_functionPckg.Get_ooa_id();



}


}

return v_id;



   } // End getFunctionPckgId
  public  java.util.UUID         Getsystemid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Getsystemid") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR950(this);


if (   (v_system != null) )
{

return v_system.getSys_id();



}

ComponentPackage_c v_compPkg = ComponentPackage_c.getOneCP_CPOnR951(this);


if (   (v_compPkg != null) )
{

return v_compPkg.Getsystemid();



}

Component_c v_component = Component_c.getOneC_COnR952(this);


if (   (v_compPkg != null) )
{

return v_component.Getsystemid();



}

Sequence_c v_parentSeq = Sequence_c.getOneSQ_SOnR911(SequenceInSequence_c.getOneSQ_SISOnR928(this));


if (   (v_parentSeq != null) )
{

return v_parentSeq.Getsystemid();



}

Domain_c v_domain = Domain_c.getOneS_DOMOnR913(this);


if (   (v_domain != null) )
{

return v_domain.Getsystemid();



}

Subsystem_c v_subsystem = Subsystem_c.getOneS_SSOnR914(this);


if (   (v_subsystem != null) )
{

return v_subsystem.Getsystemid();



}

User_c.Logerror(			    
"getSystemId()::No parent found for sequence"			    
,"" ) ;


return Gd_c.Null_unique_id();



   } // End getSystemId
  public  void Pasteactorparticipant(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pasteactorparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
ActorParticipant_c v_actor = (ActorParticipant_c) modelRoot.getInstanceList(ActorParticipant_c.class).getGlobal(null, p_Id);


if ( (  (v_actor != null)) )
{

InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(v_actor);


Sequence_c v_existingContainer = Sequence_c.getOneSQ_SOnR929(v_part);


if ( (  (v_existingContainer != null)) )
{

if (v_part != null) {
v_part.unrelateAcrossR929From(v_existingContainer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_part != null) {
  v_part.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteActorParticipant
  public  void Pasteclassparticipant(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pasteclassparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassParticipant_c v_cp = (ClassParticipant_c) modelRoot.getInstanceList(ClassParticipant_c.class).getGlobal(null, p_Id);


if ( (  (v_cp != null)) )
{

InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(v_cp);


Sequence_c v_existingContainer = Sequence_c.getOneSQ_SOnR929(v_part);


if ( (  (v_existingContainer != null)) )
{

if (v_part != null) {
v_part.unrelateAcrossR929From(v_existingContainer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_part != null) {
  v_part.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteClassParticipant
  public  void Pasteclassinstanceparticipant(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pasteclassinstanceparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassInstanceParticipant_c v_cip = (ClassInstanceParticipant_c) modelRoot.getInstanceList(ClassInstanceParticipant_c.class).getGlobal(null, p_Id);


if ( (  (v_cip != null)) )
{

InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(v_cip);


Sequence_c v_existingContainer = Sequence_c.getOneSQ_SOnR929(v_part);


if ( (  (v_existingContainer != null)) )
{

if (v_part != null) {
v_part.unrelateAcrossR929From(v_existingContainer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_part != null) {
  v_part.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteClassInstanceParticipant
  public  void Pasteexternalentityparticipant(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pasteexternalentityparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntityParticipant_c v_eep = (ExternalEntityParticipant_c) modelRoot.getInstanceList(ExternalEntityParticipant_c.class).getGlobal(null, p_Id);


if ( (  (v_eep != null)) )
{

InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(v_eep);


Sequence_c v_existingContainer = Sequence_c.getOneSQ_SOnR929(v_part);


if ( (  (v_existingContainer != null)) )
{

if (v_part != null) {
v_part.unrelateAcrossR929From(v_existingContainer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_part != null) {
  v_part.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteExternalEntityParticipant
  public  void Pastecomponentparticipant(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pastecomponentparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
ComponentParticipant_c v_comp = (ComponentParticipant_c) modelRoot.getInstanceList(ComponentParticipant_c.class).getGlobal(null, p_Id);


if ( (  (v_comp != null)) )
{

InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(v_comp);


Sequence_c v_existingContainer = Sequence_c.getOneSQ_SOnR929(v_part);


if ( (  (v_existingContainer != null)) )
{

if (v_part != null) {
v_part.unrelateAcrossR929From(v_existingContainer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_part != null) {
  v_part.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteComponentParticipant
  public  void Pastefunctionpackageparticipant(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pastefunctionpackageparticipant") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionPackageParticipant_c v_fpp = (FunctionPackageParticipant_c) modelRoot.getInstanceList(FunctionPackageParticipant_c.class).getGlobal(null, p_Id);


if ( (  (v_fpp != null)) )
{

InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(v_fpp);


Sequence_c v_existingContainer = Sequence_c.getOneSQ_SOnR929(v_part);


if ( (  (v_existingContainer != null)) )
{

if (v_part != null) {
v_part.unrelateAcrossR929From(v_existingContainer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_part != null) {
  v_part.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteFunctionPackageParticipant
  public  void Pastesynchronousmessage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pastesynchronousmessage") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End pasteSynchronousMessage
  public  void Pasteasynchronousmessage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pasteasynchronousmessage") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End pasteAsynchronousMessage
  public  void Pastereturnmessage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pastereturnmessage") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End pasteReturnMessage
  public  void Pastelifespan(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pastelifespan") ; 
               final ModelRoot modelRoot = getModelRoot();
Lifespan_c v_lifespan = (Lifespan_c) modelRoot.getInstanceList(Lifespan_c.class).getGlobal(null, p_Id);


if ( (  (v_lifespan != null)) )
{

InteractionParticipant_c v_part = InteractionParticipant_c.getOneSQ_POnR930(v_lifespan);


if (v_part != null) {
  v_part.relateAcrossR929To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteLifespan
  public  void Pastetimingmark(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pastetimingmark") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End pasteTimingMark
  public  void Pastetimespan(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Sequence", " Operation entered: Sequence::Pastetimespan") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End pasteTimeSpan

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	if (adapter == org.eclipse.core.resources.IResource.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
        	return comp.getFile().getParent();
        }
	}else if(adapter == org.eclipse.core.resources.IFile.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
            return comp.getFile();
        }
	}
	  return null;
  }
} // end Sequence
