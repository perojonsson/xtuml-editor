      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.InterfaceReference_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_INTERFACE_REFERENCE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class InterfaceReference_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public InterfaceReference_c(ModelRoot modelRoot,
       java.util.UUID         p_m_id,
       java.util.UUID         p_m_formal_interface_id,
       java.util.UUID         p_m_delegation_id,
       java.util.UUID         p_m_port_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_port_id = IdAssigner.preprocessUUID(p_m_port_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_id = IdAssigner.preprocessUUID(p_m_id);
       //extract 28 bit value only            
       m_idLongBased = 0xfffffff & p_m_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_formal_interface_id = IdAssigner.preprocessUUID(p_m_formal_interface_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_delegation_id = IdAssigner.preprocessUUID(p_m_delegation_id);
        
    setUniqueId(m_id);
    Object [] key = {m_id};
    addInstanceToMap(key);
  }
  static public InterfaceReference_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_id,
       java.util.UUID         p_m_formal_interface_id,
       java.util.UUID         p_m_delegation_id,
       java.util.UUID         p_m_port_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);
      InterfaceReference_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_id};
          new_inst = (InterfaceReference_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_port_id = IdAssigner.preprocessUUID(p_m_port_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_id = IdAssigner.preprocessUUID(p_m_id);
       //extract 28 bit value only            
       new_inst.m_idLongBased = 0xfffffff & p_m_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_formal_interface_id = IdAssigner.preprocessUUID(p_m_formal_interface_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_delegation_id = IdAssigner.preprocessUUID(p_m_delegation_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new InterfaceReference_c(modelRoot,
p_m_id,
p_m_formal_interface_id,
p_m_delegation_id,
p_m_port_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public InterfaceReference_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_id,
       java.util.UUID         p_m_formal_interface_id,
       java.util.UUID         p_m_delegation_id,
       java.util.UUID         p_m_port_id){
    InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);
    InterfaceReference_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_id
            };
        source = (InterfaceReference_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_port_id = IdAssigner.preprocessUUID(p_m_port_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_id = IdAssigner.preprocessUUID(p_m_id);
       //extract 28 bit value only            
       source.m_idLongBased = 0xfffffff & p_m_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_formal_interface_id = IdAssigner.preprocessUUID(p_m_formal_interface_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_delegation_id = IdAssigner.preprocessUUID(p_m_delegation_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    InterfaceReference_c new_inst = new InterfaceReference_c(modelRoot,
p_m_id,
p_m_formal_interface_id,
p_m_delegation_id,
p_m_port_id
);
    return new_inst;
  }
  public InterfaceReference_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_port_id = IdAssigner.NULL_UUID;   
     m_id = idAssigner.createUUID();
     m_formal_interface_id = IdAssigner.NULL_UUID;   
     m_delegation_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_id);
    Object [] key = {m_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_id !=  p_newKey ){
	
		m_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  

	public void ResolverequirementforR4009(NonRootModelElement proxy) {
		if(proxy != null && proxy.isProxy() && !this.isProxy()) {
			Requirement_c element = null;
      Object oldKey = CorePlugin.getImportedElementKeyMap().get(proxy);
	  		// remove proxy instance from list, so that it is not resolved
			// in the call below
			proxy.delete_unchecked();
			// find matching instance
			element = (Requirement_c) Ooaofooa.getDefaultInstance().getInstanceList(Requirement_c.class).getGlobal(oldKey);
			if(element != null) {
				boolean result = true;
				try {
					Method method = element.getClass().getMethod(
							"Isreferringtodefaultinterfacereference", new Class[]{});
					Object objectResult = method.invoke(element, new Object[]{});
					if (objectResult != null) {
						result = ((Boolean) objectResult).booleanValue();
					}
				} catch (NoSuchMethodException e) {
					// do nothing
				} catch (IllegalArgumentException e) {
					// do nothing
				} catch (IllegalAccessException e) {
					// do nothing
				} catch (InvocationTargetException e) {
					// do nothing
				}
				if (!result) {
					// if the element is not referring to the default
					// then do not hook up with pasted element
					return;
				}
				// relate the possible type
				InterfaceReference_c existingRTO = InterfaceReference_c.getOneC_IROnR4009(element);
				element.unrelateAcrossR4009From(existingRTO);
				element.relateAcrossR4009To(this);
				// check that resolution is allowed
				try {
					Method method = element.getClass().getMethod("Canrefertointerfacereference", new Class[] {});
					Object objectResult = method.invoke(element, new Object[] {});
			        if ( objectResult != null ) {
			        	result = ((Boolean) objectResult).booleanValue();
			        }
				} catch (NoSuchMethodException e) {
					// do nothing
				} catch (IllegalArgumentException e) {
					// do nothing
				} catch (IllegalAccessException e) {
					// do nothing
				} catch (InvocationTargetException e) {
					// do nothing
				}
				if(!result) {
					element.unrelateAcrossR4009From(this);
					element.relateAcrossR4009To(existingRTO);
				}
			}
		}
	}
	public void ResolveprovisionforR4009(NonRootModelElement proxy) {
		if(proxy != null && proxy.isProxy() && !this.isProxy()) {
			Provision_c element = null;
      Object oldKey = CorePlugin.getImportedElementKeyMap().get(proxy);
	  		// remove proxy instance from list, so that it is not resolved
			// in the call below
			proxy.delete_unchecked();
			// find matching instance
			element = (Provision_c) Ooaofooa.getDefaultInstance().getInstanceList(Provision_c.class).getGlobal(oldKey);
			if(element != null) {
				boolean result = true;
				try {
					Method method = element.getClass().getMethod(
							"Isreferringtodefaultinterfacereference", new Class[]{});
					Object objectResult = method.invoke(element, new Object[]{});
					if (objectResult != null) {
						result = ((Boolean) objectResult).booleanValue();
					}
				} catch (NoSuchMethodException e) {
					// do nothing
				} catch (IllegalArgumentException e) {
					// do nothing
				} catch (IllegalAccessException e) {
					// do nothing
				} catch (InvocationTargetException e) {
					// do nothing
				}
				if (!result) {
					// if the element is not referring to the default
					// then do not hook up with pasted element
					return;
				}
				// relate the possible type
				InterfaceReference_c existingRTO = InterfaceReference_c.getOneC_IROnR4009(element);
				element.unrelateAcrossR4009From(existingRTO);
				element.relateAcrossR4009To(this);
				// check that resolution is allowed
				try {
					Method method = element.getClass().getMethod("Canrefertointerfacereference", new Class[] {});
					Object objectResult = method.invoke(element, new Object[] {});
			        if ( objectResult != null ) {
			        	result = ((Boolean) objectResult).booleanValue();
			        }
				} catch (NoSuchMethodException e) {
					// do nothing
				} catch (IllegalArgumentException e) {
					// do nothing
				} catch (IllegalAccessException e) {
					// do nothing
				} catch (InvocationTargetException e) {
					// do nothing
				}
				if(!result) {
					element.unrelateAcrossR4009From(this);
					element.relateAcrossR4009To(existingRTO);
				}
			}
		}
	}
	public void ResolveinterfacereferenceindelegationforR4013(NonRootModelElement proxy) {
		if(proxy != null && proxy.isProxy() && !this.isProxy()) {
			InterfaceReferenceInDelegation_c element = null;
      Object oldKey = CorePlugin.getImportedElementKeyMap().get(proxy);
	  		// remove proxy instance from list, so that it is not resolved
			// in the call below
			proxy.delete_unchecked();
			// find matching instance
			element = (InterfaceReferenceInDelegation_c) Ooaofooa.getDefaultInstance().getInstanceList(InterfaceReferenceInDelegation_c.class).getGlobal(oldKey);
			if(element != null) {
				boolean result = true;
				try {
					Method method = element.getClass().getMethod(
							"Isreferringtodefaultinterfacereference", new Class[]{});
					Object objectResult = method.invoke(element, new Object[]{});
					if (objectResult != null) {
						result = ((Boolean) objectResult).booleanValue();
					}
				} catch (NoSuchMethodException e) {
					// do nothing
				} catch (IllegalArgumentException e) {
					// do nothing
				} catch (IllegalAccessException e) {
					// do nothing
				} catch (InvocationTargetException e) {
					// do nothing
				}
				if (!result) {
					// if the element is not referring to the default
					// then do not hook up with pasted element
					return;
				}
				// relate the possible type
				InterfaceReference_c existingRTO = InterfaceReference_c.getOneC_IROnR4013(element);
				element.unrelateAcrossR4013From(existingRTO);
				element.relateAcrossR4013To(this);
				// check that resolution is allowed
				try {
					Method method = element.getClass().getMethod("Canrefertointerfacereference", new Class[] {});
					Object objectResult = method.invoke(element, new Object[] {});
			        if ( objectResult != null ) {
			        	result = ((Boolean) objectResult).booleanValue();
			        }
				} catch (NoSuchMethodException e) {
					// do nothing
				} catch (IllegalArgumentException e) {
					// do nothing
				} catch (IllegalAccessException e) {
					// do nothing
				} catch (InvocationTargetException e) {
					// do nothing
				}
				if(!result) {
					element.unrelateAcrossR4013From(this);
					element.relateAcrossR4013To(existingRTO);
				}
			}
		}
	}
	public void ResolveimportedreferenceforR4701(NonRootModelElement proxy) {
		if(proxy != null && proxy.isProxy() && !this.isProxy()) {
			ImportedReference_c element = null;
      Object oldKey = CorePlugin.getImportedElementKeyMap().get(proxy);
	  		// remove proxy instance from list, so that it is not resolved
			// in the call below
			proxy.delete_unchecked();
			// find matching instance
			element = (ImportedReference_c) Ooaofooa.getDefaultInstance().getInstanceList(ImportedReference_c.class).getGlobal(oldKey);
			if(element != null) {
				boolean result = true;
				try {
					Method method = element.getClass().getMethod(
							"Isreferringtodefaultinterfacereference", new Class[]{});
					Object objectResult = method.invoke(element, new Object[]{});
					if (objectResult != null) {
						result = ((Boolean) objectResult).booleanValue();
					}
				} catch (NoSuchMethodException e) {
					// do nothing
				} catch (IllegalArgumentException e) {
					// do nothing
				} catch (IllegalAccessException e) {
					// do nothing
				} catch (InvocationTargetException e) {
					// do nothing
				}
				if (!result) {
					// if the element is not referring to the default
					// then do not hook up with pasted element
					return;
				}
				// relate the possible type
				InterfaceReference_c existingRTO = InterfaceReference_c.getOneC_IROnR4701(element);
				element.unrelateAcrossR4701From(existingRTO);
				element.relateAcrossR4701To(this);
				// check that resolution is allowed
				try {
					Method method = element.getClass().getMethod("Canrefertointerfacereference", new Class[] {});
					Object objectResult = method.invoke(element, new Object[] {});
			        if ( objectResult != null ) {
			        	result = ((Boolean) objectResult).booleanValue();
			        }
				} catch (NoSuchMethodException e) {
					// do nothing
				} catch (IllegalArgumentException e) {
					// do nothing
				} catch (IllegalAccessException e) {
					// do nothing
				} catch (InvocationTargetException e) {
					// do nothing
				}
				if(!result) {
					element.unrelateAcrossR4701From(this);
					element.relateAcrossR4701To(existingRTO);
				}
			}
		}
	}


  public boolean equals (Object elem) {
     if (!(elem instanceof InterfaceReference_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof InterfaceReference_c)) {
           return false;
       }
       
       InterfaceReference_c me = (InterfaceReference_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getId()) || IdAssigner.NULL_UUID.equals(((InterfaceReference_c)elem).getId())) && this != elem)) {
      	return false;
      }
      if (!getId().equals(((InterfaceReference_c)elem).getId())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof InterfaceReference_c)) {
           return false;
       }
       
       InterfaceReference_c me = (InterfaceReference_c)elem;
      if (!getId().equals(((InterfaceReference_c)elem).getId())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_port_id ;
  private java.util.UUID         m_id ;
  private long m_idLongBased ;
  private java.util.UUID         m_formal_interface_id ;
  private java.util.UUID         m_delegation_id ;
      
// declare association references from this class
  
  
    
// referring navigation

Port_c OriginatesFromPort ;
public void relateAcrossR4016To(Port_c target)
{
	relateAcrossR4016To(target, true);
}
public void relateAcrossR4016To(Port_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == OriginatesFromPort) return;  // already related

    if ( OriginatesFromPort != target ) {
    
    Object oldKey = getInstanceKey();

    if (OriginatesFromPort != null) {
    
        OriginatesFromPort.clearBackPointerR4016To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfaceReference_c.relateAcrossR4016To(Port_c target)", 
			"Relate performed across R4016 from Interface Reference to Port without unrelate of prior instance.");  
		}
    }
                
    	OriginatesFromPort = target ;
        m_port_id = target.getId();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4016To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4016", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4016From(Port_c target)
{
	unrelateAcrossR4016From(target, true);
}
public void unrelateAcrossR4016From(Port_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (OriginatesFromPort == null) return;  // already unrelated
	
	if (target != OriginatesFromPort) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4016", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4016To(this);
    }
    

      if(OriginatesFromPort != null) {
      
        m_port_id = OriginatesFromPort.getId();
        OriginatesFromPort = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4016", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfaceReference_c getOneC_IROnR4016(Port_c [] targets)
{
    return getOneC_IROnR4016(targets, null);
}

public static InterfaceReference_c getOneC_IROnR4016(Port_c [] targets, ClassQueryInterface_c test)
{
    InterfaceReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneC_IROnR4016(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfaceReference_c getOneC_IROnR4016(Port_c target)
{
  return getOneC_IROnR4016(target, null);
}

public static InterfaceReference_c getOneC_IROnR4016(Port_c target, boolean loadComponent)
{
    return getOneC_IROnR4016(target.getModelRoot(), target, null, loadComponent);
}

public static InterfaceReference_c getOneC_IROnR4016(Port_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneC_IROnR4016(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfaceReference_c getOneC_IROnR4016(ModelRoot modelRoot, Port_c target, ClassQueryInterface_c test)
{
	return getOneC_IROnR4016(modelRoot, target, test, true);
}

public static InterfaceReference_c getOneC_IROnR4016(ModelRoot modelRoot, Port_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneC_IROnR4016(modelRoot,target,test);
}
private static InterfaceReference_c find_getOneC_IROnR4016(ModelRoot modelRoot, Port_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ExposesInterfaceReferenceExposes_R4016) {
	    for ( int i = 0; i < target.backPointer_ExposesInterfaceReferenceExposes_R4016.size(); ++i ) {
	      InterfaceReference_c source = (InterfaceReference_c)target.backPointer_ExposesInterfaceReferenceExposes_R4016.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static InterfaceReference_c [] getManyC_IRsOnR4016(Port_c [] targets)
{
  return getManyC_IRsOnR4016(targets, null);
}
public static InterfaceReference_c [] getManyC_IRsOnR4016(Port_c [] targets, boolean loadComponent)
{
  return getManyC_IRsOnR4016(targets, null, loadComponent);
}
public static InterfaceReference_c [] getManyC_IRsOnR4016(Port_c [] targets, ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4016(targets, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4016(Port_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfaceReference_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ExposesInterfaceReferenceExposes_R4016) {
	    for (int j = 0; j < targets[i].backPointer_ExposesInterfaceReferenceExposes_R4016.size(); ++j) {
	      InterfaceReference_c source = (InterfaceReference_c)targets[i].backPointer_ExposesInterfaceReferenceExposes_R4016.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	InterfaceReference_c[] ret_set = new InterfaceReference_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfaceReference_c[0];
  }
  }

public static InterfaceReference_c [] getManyC_IRsOnR4016(Port_c target)
{
  return getManyC_IRsOnR4016(target, null);
}

public static InterfaceReference_c [] getManyC_IRsOnR4016(Port_c target, boolean loadComponent)
{
  return getManyC_IRsOnR4016(target, null, loadComponent);
}

public static InterfaceReference_c [] getManyC_IRsOnR4016(Port_c target, ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4016(target, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4016(Port_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new InterfaceReference_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_ExposesInterfaceReferenceExposes_R4016) {
    for (int i = 0; i < target.backPointer_ExposesInterfaceReferenceExposes_R4016.size(); ++i) {
      InterfaceReference_c source = (InterfaceReference_c)target.backPointer_ExposesInterfaceReferenceExposes_R4016.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		InterfaceReference_c[] ret_set = new InterfaceReference_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new InterfaceReference_c[0];
	}
  }


  
    
// referring navigation

Interface_c MayBeDefinedByInterface ;
public void relateAcrossR4012To(Interface_c target)
{
	relateAcrossR4012To(target, true);
}
public void relateAcrossR4012To(Interface_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == MayBeDefinedByInterface) return;  // already related

    if ( MayBeDefinedByInterface != target ) {
    
    Object oldKey = getInstanceKey();

    if (MayBeDefinedByInterface != null) {
        UmlProblem.removeXtUMLProblem(this, MayBeDefinedByInterface);
    
        MayBeDefinedByInterface.clearBackPointerR4012To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfaceReference_c.relateAcrossR4012To(Interface_c target)", 
			"Relate performed across R4012 from Interface Reference to Interface without unrelate of prior instance.");  
		}
    }
                
    	MayBeDefinedByInterface = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_formal_interface_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4012To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4012", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4012From(Interface_c target)
{
	unrelateAcrossR4012From(target, true);
}
public void unrelateAcrossR4012From(Interface_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (MayBeDefinedByInterface == null) return;  // already unrelated
	
	if (target != MayBeDefinedByInterface) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4012", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4012To(this);
    }
    

      if(MayBeDefinedByInterface != null) {
      
        m_formal_interface_id = MayBeDefinedByInterface.getId();
        if(IdAssigner.NULL_UUID.equals(m_formal_interface_id))
        {
          m_formal_interface_id = MayBeDefinedByInterface.getIdCachedValue();
        }       
        MayBeDefinedByInterface = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4012", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfaceReference_c getOneC_IROnR4012(Interface_c [] targets)
{
    return getOneC_IROnR4012(targets, null);
}

public static InterfaceReference_c getOneC_IROnR4012(Interface_c [] targets, ClassQueryInterface_c test)
{
    InterfaceReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneC_IROnR4012(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfaceReference_c getOneC_IROnR4012(Interface_c target)
{
  return getOneC_IROnR4012(target, null);
}

public static InterfaceReference_c getOneC_IROnR4012(Interface_c target, boolean loadComponent)
{
    return getOneC_IROnR4012(target.getModelRoot(), target, null, loadComponent);
}

public static InterfaceReference_c getOneC_IROnR4012(Interface_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneC_IROnR4012(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfaceReference_c getOneC_IROnR4012(ModelRoot modelRoot, Interface_c target, ClassQueryInterface_c test)
{
	return getOneC_IROnR4012(modelRoot, target, test, true);
}

public static InterfaceReference_c getOneC_IROnR4012(ModelRoot modelRoot, Interface_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  InterfaceReference_c result = null;
  
  result=find_getOneC_IROnR4012(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,InterfaceReference_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneC_IROnR4012(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static InterfaceReference_c find_getOneC_IROnR4012(ModelRoot modelRoot, Interface_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012) {
	    for ( int i = 0; i < target.backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012.size(); ++i ) {
	      InterfaceReference_c source = (InterfaceReference_c)target.backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static InterfaceReference_c [] getManyC_IRsOnR4012(Interface_c [] targets)
{
  return getManyC_IRsOnR4012(targets, null);
}
public static InterfaceReference_c [] getManyC_IRsOnR4012(Interface_c [] targets, boolean loadComponent)
{
  return getManyC_IRsOnR4012(targets, null, loadComponent);
}
public static InterfaceReference_c [] getManyC_IRsOnR4012(Interface_c [] targets, ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4012(targets, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4012(Interface_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfaceReference_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, InterfaceReference_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012) {
	    for (int j = 0; j < targets[i].backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012.size(); ++j) {
	      InterfaceReference_c source = (InterfaceReference_c)targets[i].backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	InterfaceReference_c[] ret_set = new InterfaceReference_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfaceReference_c[0];
  }
  }

public static InterfaceReference_c [] getManyC_IRsOnR4012(Interface_c target)
{
  return getManyC_IRsOnR4012(target, null);
}

public static InterfaceReference_c [] getManyC_IRsOnR4012(Interface_c target, boolean loadComponent)
{
  return getManyC_IRsOnR4012(target, null, loadComponent);
}

public static InterfaceReference_c [] getManyC_IRsOnR4012(Interface_c target, ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4012(target, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4012(Interface_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new InterfaceReference_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, InterfaceReference_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012) {
    for (int i = 0; i < target.backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012.size(); ++i) {
      InterfaceReference_c source = (InterfaceReference_c)target.backPointer_IsFormalDefinitionInterfaceReferenceIsFormalDefinition_R4012.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		InterfaceReference_c[] ret_set = new InterfaceReference_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new InterfaceReference_c[0];
	}
  }


  
    
// referring navigation

Delegation_c ReceivesDelegationViaDelegation ;
public void relateAcrossR4014To(Delegation_c target)
{
	relateAcrossR4014To(target, true);
}
public void relateAcrossR4014To(Delegation_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ReceivesDelegationViaDelegation) return;  // already related

    if ( ReceivesDelegationViaDelegation != target ) {
    
    Object oldKey = getInstanceKey();

    if (ReceivesDelegationViaDelegation != null) {
        UmlProblem.removeXtUMLProblem(this, ReceivesDelegationViaDelegation);
    
        ReceivesDelegationViaDelegation.clearBackPointerR4014To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfaceReference_c.relateAcrossR4014To(Delegation_c target)", 
			"Relate performed across R4014 from Interface Reference to Delegation without unrelate of prior instance.");  
		}
    }
                
    	ReceivesDelegationViaDelegation = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_delegation_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4014To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4014", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4014From(Delegation_c target)
{
	unrelateAcrossR4014From(target, true);
}
public void unrelateAcrossR4014From(Delegation_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ReceivesDelegationViaDelegation == null) return;  // already unrelated
	
	if (target != ReceivesDelegationViaDelegation) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4014", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4014To(this);
    }
    

      if(ReceivesDelegationViaDelegation != null) {
      
        m_delegation_id = ReceivesDelegationViaDelegation.getId();
        if(IdAssigner.NULL_UUID.equals(m_delegation_id))
        {
          m_delegation_id = ReceivesDelegationViaDelegation.getIdCachedValue();
        }       
        ReceivesDelegationViaDelegation = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4014", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfaceReference_c getOneC_IROnR4014(Delegation_c [] targets)
{
    return getOneC_IROnR4014(targets, null);
}

public static InterfaceReference_c getOneC_IROnR4014(Delegation_c [] targets, ClassQueryInterface_c test)
{
    InterfaceReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneC_IROnR4014(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfaceReference_c getOneC_IROnR4014(Delegation_c target)
{
  return getOneC_IROnR4014(target, null);
}

public static InterfaceReference_c getOneC_IROnR4014(Delegation_c target, boolean loadComponent)
{
    return getOneC_IROnR4014(target.getModelRoot(), target, null, loadComponent);
}

public static InterfaceReference_c getOneC_IROnR4014(Delegation_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneC_IROnR4014(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfaceReference_c getOneC_IROnR4014(ModelRoot modelRoot, Delegation_c target, ClassQueryInterface_c test)
{
	return getOneC_IROnR4014(modelRoot, target, test, true);
}

public static InterfaceReference_c getOneC_IROnR4014(ModelRoot modelRoot, Delegation_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  InterfaceReference_c result = null;
  
  result=find_getOneC_IROnR4014(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,InterfaceReference_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneC_IROnR4014(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static InterfaceReference_c find_getOneC_IROnR4014(ModelRoot modelRoot, Delegation_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014) {
	    for ( int i = 0; i < target.backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014.size(); ++i ) {
	      InterfaceReference_c source = (InterfaceReference_c)target.backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static InterfaceReference_c [] getManyC_IRsOnR4014(Delegation_c [] targets)
{
  return getManyC_IRsOnR4014(targets, null);
}
public static InterfaceReference_c [] getManyC_IRsOnR4014(Delegation_c [] targets, boolean loadComponent)
{
  return getManyC_IRsOnR4014(targets, null, loadComponent);
}
public static InterfaceReference_c [] getManyC_IRsOnR4014(Delegation_c [] targets, ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4014(targets, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4014(Delegation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfaceReference_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, InterfaceReference_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014) {
	    for (int j = 0; j < targets[i].backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014.size(); ++j) {
	      InterfaceReference_c source = (InterfaceReference_c)targets[i].backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	InterfaceReference_c[] ret_set = new InterfaceReference_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfaceReference_c[0];
  }
  }

public static InterfaceReference_c [] getManyC_IRsOnR4014(Delegation_c target)
{
  return getManyC_IRsOnR4014(target, null);
}

public static InterfaceReference_c [] getManyC_IRsOnR4014(Delegation_c target, boolean loadComponent)
{
  return getManyC_IRsOnR4014(target, null, loadComponent);
}

public static InterfaceReference_c [] getManyC_IRsOnR4014(Delegation_c target, ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4014(target, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4014(Delegation_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new InterfaceReference_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, InterfaceReference_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014) {
    for (int i = 0; i < target.backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014.size(); ++i) {
      InterfaceReference_c source = (InterfaceReference_c)target.backPointer_ProvidesDelegationToInterfaceReferenceProvidesDelegationTo_R4014.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		InterfaceReference_c[] ret_set = new InterfaceReference_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new InterfaceReference_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

Requirement_c backPointer_IsSubtypeRequirementIsSubtype_R4009;

public void setRequirementOrderInChildListR4009(Requirement_c target, int index) {
	unrelateAcrossR4009From(target);
	Requirement_c[] elements = Requirement_c.getManyC_RsOnR4009(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR4009From((Requirement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR4009To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR4009To((Requirement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR4009To(Requirement_c target)
{
  if (target != null) {
    target.relateAcrossR4009To(this, true) ;
  }
}

public void relateAcrossR4009To(Requirement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR4009To(this, notifyChanges) ;
  }
}

public void setBackPointerR4009To(Requirement_c target)
{
    backPointer_IsSubtypeRequirementIsSubtype_R4009 = target;
}

public void unrelateAcrossR4009From(Requirement_c target)
{
  if (target != null) {
    target.unrelateAcrossR4009From(this, true) ;
  }
}

public void unrelateAcrossR4009From(Requirement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR4009From(this, notifyChanges) ;
  }
}

public void clearBackPointerR4009To(Requirement_c target)
{
	if (target == backPointer_IsSubtypeRequirementIsSubtype_R4009) {
		backPointer_IsSubtypeRequirementIsSubtype_R4009 = null;
	}
}

public static InterfaceReference_c getOneC_IROnR4009(Requirement_c [] targets)
{
    return getOneC_IROnR4009(targets, null);
}

public static InterfaceReference_c getOneC_IROnR4009(Requirement_c [] targets, ClassQueryInterface_c test)
{
    return getOneC_IROnR4009(targets, test, true);
}

public static InterfaceReference_c getOneC_IROnR4009(Requirement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    InterfaceReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             InterfaceReference_c candidate_val = getOneC_IROnR4009(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneC_IROnR4009(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static InterfaceReference_c getOneC_IROnR4009(Requirement_c target)
{
	return getOneC_IROnR4009(target, true);
}
public static InterfaceReference_c getOneC_IROnR4009(Requirement_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeInterfaceReference ;
  } else {
    return null;
  }
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Requirement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4009(targets, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Requirement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new InterfaceReference_c[0];
  
  
  LinkedHashSet<InterfaceReference_c> elementsSet = new LinkedHashSet<InterfaceReference_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeInterfaceReference == null)
	  targets[i].loadProxy();
    InterfaceReference_c associate = targets[i].IsSupertypeInterfaceReference;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  InterfaceReference_c[] result = new InterfaceReference_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Requirement_c [] targets)
{
  return getManyC_IRsOnR4009(targets, null);
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Requirement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Requirement_c [] targetArray = new Requirement_c[1];
    targetArray[0] = target;
    return getManyC_IRsOnR4009(targetArray, test, loadComponent);
  } else {
    InterfaceReference_c [] result = new InterfaceReference_c [0] ;
    return result ;
  }
  
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Requirement_c target,
    ClassQueryInterface_c test)
{
    return getManyC_IRsOnR4009(target, null, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Requirement_c target)
{
    return getManyC_IRsOnR4009(target, null, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Requirement_c target, boolean loadComponent)
{
    return getManyC_IRsOnR4009(target, null, loadComponent);
}

  
  
  
// referred to navigation

Provision_c backPointer_IsSubtypeProvisionIsSubtype_R4009;

public void setProvisionOrderInChildListR4009(Provision_c target, int index) {
	unrelateAcrossR4009From(target);
	Provision_c[] elements = Provision_c.getManyC_PsOnR4009(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR4009From((Provision_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR4009To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR4009To((Provision_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR4009To(Provision_c target)
{
  if (target != null) {
    target.relateAcrossR4009To(this, true) ;
  }
}

public void relateAcrossR4009To(Provision_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR4009To(this, notifyChanges) ;
  }
}

public void setBackPointerR4009To(Provision_c target)
{
    backPointer_IsSubtypeProvisionIsSubtype_R4009 = target;
}

public void unrelateAcrossR4009From(Provision_c target)
{
  if (target != null) {
    target.unrelateAcrossR4009From(this, true) ;
  }
}

public void unrelateAcrossR4009From(Provision_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR4009From(this, notifyChanges) ;
  }
}

public void clearBackPointerR4009To(Provision_c target)
{
	if (target == backPointer_IsSubtypeProvisionIsSubtype_R4009) {
		backPointer_IsSubtypeProvisionIsSubtype_R4009 = null;
	}
}

public static InterfaceReference_c getOneC_IROnR4009(Provision_c [] targets)
{
    return getOneC_IROnR4009(targets, null);
}

public static InterfaceReference_c getOneC_IROnR4009(Provision_c [] targets, ClassQueryInterface_c test)
{
    return getOneC_IROnR4009(targets, test, true);
}

public static InterfaceReference_c getOneC_IROnR4009(Provision_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    InterfaceReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             InterfaceReference_c candidate_val = getOneC_IROnR4009(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneC_IROnR4009(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static InterfaceReference_c getOneC_IROnR4009(Provision_c target)
{
	return getOneC_IROnR4009(target, true);
}
public static InterfaceReference_c getOneC_IROnR4009(Provision_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeInterfaceReference ;
  } else {
    return null;
  }
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Provision_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4009(targets, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Provision_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new InterfaceReference_c[0];
  
  
  LinkedHashSet<InterfaceReference_c> elementsSet = new LinkedHashSet<InterfaceReference_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeInterfaceReference == null)
	  targets[i].loadProxy();
    InterfaceReference_c associate = targets[i].IsSupertypeInterfaceReference;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  InterfaceReference_c[] result = new InterfaceReference_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Provision_c [] targets)
{
  return getManyC_IRsOnR4009(targets, null);
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Provision_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Provision_c [] targetArray = new Provision_c[1];
    targetArray[0] = target;
    return getManyC_IRsOnR4009(targetArray, test, loadComponent);
  } else {
    InterfaceReference_c [] result = new InterfaceReference_c [0] ;
    return result ;
  }
  
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Provision_c target,
    ClassQueryInterface_c test)
{
    return getManyC_IRsOnR4009(target, null, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Provision_c target)
{
    return getManyC_IRsOnR4009(target, null, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4009(Provision_c target, boolean loadComponent)
{
    return getManyC_IRsOnR4009(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<InterfaceReferenceInDelegation_c> backPointer_MayDelegateThroughInterfaceReferenceInDelegationMayDelegateThrough_R4013 = new ArrayList<InterfaceReferenceInDelegation_c>();

public void setInterfaceReferenceInDelegationOrderInChildListR4013(InterfaceReferenceInDelegation_c target, int index) {
	unrelateAcrossR4013From(target);
	InterfaceReferenceInDelegation_c[] elements = InterfaceReferenceInDelegation_c.getManyC_RIDsOnR4013(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR4013From((InterfaceReferenceInDelegation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR4013To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR4013To((InterfaceReferenceInDelegation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR4013To(InterfaceReferenceInDelegation_c target)
{
  if (target != null) {
    target.relateAcrossR4013To(this, true) ;
  }
}

public void relateAcrossR4013To(InterfaceReferenceInDelegation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR4013To(this, notifyChanges) ;
  }
}

public void setBackPointerR4013To(InterfaceReferenceInDelegation_c target)
{
  	synchronized (backPointer_MayDelegateThroughInterfaceReferenceInDelegationMayDelegateThrough_R4013) {
		backPointer_MayDelegateThroughInterfaceReferenceInDelegationMayDelegateThrough_R4013.add(target);
	}
}

public void unrelateAcrossR4013From(InterfaceReferenceInDelegation_c target)
{
  if (target != null) {
    target.unrelateAcrossR4013From(this, true) ;
  }
}

public void unrelateAcrossR4013From(InterfaceReferenceInDelegation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR4013From(this, notifyChanges) ;
  }
}

public void clearBackPointerR4013To(InterfaceReferenceInDelegation_c target)
{
  synchronized (backPointer_MayDelegateThroughInterfaceReferenceInDelegationMayDelegateThrough_R4013) {
	    backPointer_MayDelegateThroughInterfaceReferenceInDelegationMayDelegateThrough_R4013.remove(target);
	}
}

public static InterfaceReference_c getOneC_IROnR4013(InterfaceReferenceInDelegation_c [] targets)
{
    return getOneC_IROnR4013(targets, null);
}

public static InterfaceReference_c getOneC_IROnR4013(InterfaceReferenceInDelegation_c [] targets, ClassQueryInterface_c test)
{
    return getOneC_IROnR4013(targets, test, true);
}

public static InterfaceReference_c getOneC_IROnR4013(InterfaceReferenceInDelegation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    InterfaceReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             InterfaceReference_c candidate_val = getOneC_IROnR4013(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneC_IROnR4013(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static InterfaceReference_c getOneC_IROnR4013(InterfaceReferenceInDelegation_c target)
{
	return getOneC_IROnR4013(target, true);
}
public static InterfaceReference_c getOneC_IROnR4013(InterfaceReferenceInDelegation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.HandlesDelegationForInterfaceReference ;
  } else {
    return null;
  }
}

public static InterfaceReference_c [] getManyC_IRsOnR4013(InterfaceReferenceInDelegation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4013(targets, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4013(InterfaceReferenceInDelegation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new InterfaceReference_c[0];
  
  
  LinkedHashSet<InterfaceReference_c> elementsSet = new LinkedHashSet<InterfaceReference_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].HandlesDelegationForInterfaceReference == null)
	  targets[i].loadProxy();
    InterfaceReference_c associate = targets[i].HandlesDelegationForInterfaceReference;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  InterfaceReference_c[] result = new InterfaceReference_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static InterfaceReference_c [] getManyC_IRsOnR4013(InterfaceReferenceInDelegation_c [] targets)
{
  return getManyC_IRsOnR4013(targets, null);
}

public static InterfaceReference_c [] getManyC_IRsOnR4013(InterfaceReferenceInDelegation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    InterfaceReferenceInDelegation_c [] targetArray = new InterfaceReferenceInDelegation_c[1];
    targetArray[0] = target;
    return getManyC_IRsOnR4013(targetArray, test, loadComponent);
  } else {
    InterfaceReference_c [] result = new InterfaceReference_c [0] ;
    return result ;
  }
  
}

public static InterfaceReference_c [] getManyC_IRsOnR4013(InterfaceReferenceInDelegation_c target,
    ClassQueryInterface_c test)
{
    return getManyC_IRsOnR4013(target, null, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4013(InterfaceReferenceInDelegation_c target)
{
    return getManyC_IRsOnR4013(target, null, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4013(InterfaceReferenceInDelegation_c target, boolean loadComponent)
{
    return getManyC_IRsOnR4013(target, null, loadComponent);
}

public static InterfaceReference_c getOneC_IROnR4013(Delegation_c target)
{
  return InterfaceReference_c.getOneC_IROnR4013(InterfaceReferenceInDelegation_c.getOneC_RIDOnR4013(target)) ;
}

public static InterfaceReference_c getOneC_IROnR4013(Delegation_c target,
    ClassQueryInterface_c test)
{
  return InterfaceReference_c.getOneC_IROnR4013(InterfaceReferenceInDelegation_c.getManyC_RIDsOnR4013(target), test) ;
}

public static InterfaceReference_c [] getManyC_IRsOnR4013(Delegation_c target,
    ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4013(target, test, true);
}
public static InterfaceReference_c [] getManyC_IRsOnR4013(Delegation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  InterfaceReferenceInDelegation_c [] associators = InterfaceReferenceInDelegation_c.getManyC_RIDsOnR4013(target, loadComponent) ;
    return InterfaceReference_c.getManyC_IRsOnR4013(associators, test, loadComponent) ;
}
public static InterfaceReference_c [] getManyC_IRsOnR4013(Delegation_c target)
{
    return getManyC_IRsOnR4013(target, null, true);
}
public static InterfaceReference_c [] getManyC_IRsOnR4013(Delegation_c target, boolean loadComponent)
{
    return getManyC_IRsOnR4013(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ImportedReference_c> backPointer_IsImportedImportedReferenceIsImported_R4701 = new ArrayList<ImportedReference_c>();

public void setImportedReferenceOrderInChildListR4701(ImportedReference_c target, int index) {
	unrelateAcrossR4701From(target);
	ImportedReference_c[] elements = ImportedReference_c.getManyCL_IIRsOnR4701(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR4701From((ImportedReference_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR4701To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR4701To((ImportedReference_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR4701To(ImportedReference_c target)
{
  if (target != null) {
    target.relateAcrossR4701To(this, true) ;
  }
}

public void relateAcrossR4701To(ImportedReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR4701To(this, notifyChanges) ;
  }
}

public void setBackPointerR4701To(ImportedReference_c target)
{
  	synchronized (backPointer_IsImportedImportedReferenceIsImported_R4701) {
		backPointer_IsImportedImportedReferenceIsImported_R4701.add(target);
	}
}

public void unrelateAcrossR4701From(ImportedReference_c target)
{
  if (target != null) {
    target.unrelateAcrossR4701From(this, true) ;
  }
}

public void unrelateAcrossR4701From(ImportedReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR4701From(this, notifyChanges) ;
  }
}

public void clearBackPointerR4701To(ImportedReference_c target)
{
  synchronized (backPointer_IsImportedImportedReferenceIsImported_R4701) {
	    backPointer_IsImportedImportedReferenceIsImported_R4701.remove(target);
	}
}

public static InterfaceReference_c getOneC_IROnR4701(ImportedReference_c [] targets)
{
    return getOneC_IROnR4701(targets, null);
}

public static InterfaceReference_c getOneC_IROnR4701(ImportedReference_c [] targets, ClassQueryInterface_c test)
{
    return getOneC_IROnR4701(targets, test, true);
}

public static InterfaceReference_c getOneC_IROnR4701(ImportedReference_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    InterfaceReference_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             InterfaceReference_c candidate_val = getOneC_IROnR4701(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneC_IROnR4701(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static InterfaceReference_c getOneC_IROnR4701(ImportedReference_c target)
{
	return getOneC_IROnR4701(target, true);
}
public static InterfaceReference_c getOneC_IROnR4701(ImportedReference_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.ImportsInterfaceReference != null){
		target.ImportsInterfaceReference.loadProxy();
	}
	}
    return target.ImportsInterfaceReference ;
  } else {
    return null;
  }
}

public static InterfaceReference_c [] getManyC_IRsOnR4701(ImportedReference_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyC_IRsOnR4701(targets, test, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4701(ImportedReference_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new InterfaceReference_c[0];
  
  
  LinkedHashSet<InterfaceReference_c> elementsSet = new LinkedHashSet<InterfaceReference_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ImportsInterfaceReference == null)
	  targets[i].loadProxy();
    InterfaceReference_c associate = targets[i].ImportsInterfaceReference;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  InterfaceReference_c[] result = new InterfaceReference_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static InterfaceReference_c [] getManyC_IRsOnR4701(ImportedReference_c [] targets)
{
  return getManyC_IRsOnR4701(targets, null);
}

public static InterfaceReference_c [] getManyC_IRsOnR4701(ImportedReference_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ImportedReference_c [] targetArray = new ImportedReference_c[1];
    targetArray[0] = target;
    return getManyC_IRsOnR4701(targetArray, test, loadComponent);
  } else {
    InterfaceReference_c [] result = new InterfaceReference_c [0] ;
    return result ;
  }
  
}

public static InterfaceReference_c [] getManyC_IRsOnR4701(ImportedReference_c target,
    ClassQueryInterface_c test)
{
    return getManyC_IRsOnR4701(target, null, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4701(ImportedReference_c target)
{
    return getManyC_IRsOnR4701(target, null, true);
}

public static InterfaceReference_c [] getManyC_IRsOnR4701(ImportedReference_c target, boolean loadComponent)
{
    return getManyC_IRsOnR4701(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (OriginatesFromPort == null) {          
      // R4016
      Port_c relInst56986 = (Port_c) baseRoot.getInstanceList(Port_c.class).get(new Object[] {m_port_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56986 == null) {
      			relInst56986 = (Port_c) Ooaofooa.getDefaultInstance().getInstanceList(Port_c.class).get(new Object[] {m_port_id});
      		}
			if (relInst56986 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56986 = (Port_c) roots[i].getInstanceList(Port_c.class).get(new Object[] {m_port_id});
					if (relInst56986 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56986 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56986) && !isProxy())) {
	      relInst56986.relateAcrossR4016To(this, notifyChanges);
	  }
	  }
	}
	          

	if (MayBeDefinedByInterface == null) {          
      // R4012
      Interface_c relInst56987 = (Interface_c) baseRoot.getInstanceList(Interface_c.class).get(new Object[] {m_formal_interface_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56987 == null) {
      			relInst56987 = (Interface_c) Ooaofooa.getDefaultInstance().getInstanceList(Interface_c.class).get(new Object[] {m_formal_interface_id});
      		}
			if (relInst56987 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56987 = (Interface_c) roots[i].getInstanceList(Interface_c.class).get(new Object[] {m_formal_interface_id});
					if (relInst56987 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56987 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56987) && !isProxy())) {
	      relInst56987.relateAcrossR4012To(this, notifyChanges);
	  }
	  }
	}
	          

	if (ReceivesDelegationViaDelegation == null) {          
      // R4014
      Delegation_c relInst56988 = (Delegation_c) baseRoot.getInstanceList(Delegation_c.class).get(new Object[] {m_delegation_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56988 == null) {
      			relInst56988 = (Delegation_c) Ooaofooa.getDefaultInstance().getInstanceList(Delegation_c.class).get(new Object[] {m_delegation_id});
      		}
			if (relInst56988 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56988 = (Delegation_c) roots[i].getInstanceList(Delegation_c.class).get(new Object[] {m_delegation_id});
					if (relInst56988 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56988 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56988) && !isProxy())) {
	      relInst56988.relateAcrossR4014To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R4016
      // C_PO
		  inst=OriginatesFromPort;
			unrelateAcrossR4016From(OriginatesFromPort, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4012
      // C_I
		  inst=MayBeDefinedByInterface;
			unrelateAcrossR4012From(MayBeDefinedByInterface, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4014
      // C_DG
		  inst=ReceivesDelegationViaDelegation;
			unrelateAcrossR4014From(ReceivesDelegationViaDelegation, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final InterfaceReference_c inst = (InterfaceReference_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static InterfaceReference_c InterfaceReferenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		InterfaceReference_c result=findInterfaceReferenceInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,InterfaceReference_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findInterfaceReferenceInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static InterfaceReference_c findInterfaceReferenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				InterfaceReference_c x = (InterfaceReference_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static InterfaceReference_c InterfaceReferenceInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return InterfaceReferenceInstance(modelRoot,test,true);
  }
  
  public static InterfaceReference_c InterfaceReferenceInstance(ModelRoot modelRoot)
  {
	 return InterfaceReferenceInstance(modelRoot,null,true);
  }

  public static InterfaceReference_c [] InterfaceReferenceInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, InterfaceReference_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(InterfaceReference_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					InterfaceReference_c x = (InterfaceReference_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				InterfaceReference_c[] ret_set = new InterfaceReference_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new InterfaceReference_c[0];
			}		
		} 
  }
  public static InterfaceReference_c [] InterfaceReferenceInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  InterfaceReferenceInstances(modelRoot,test,true);
  }
  public static InterfaceReference_c [] InterfaceReferenceInstances(ModelRoot modelRoot)
  {
	return InterfaceReferenceInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Interface Reference.dispose call: ";
	Requirement_c testR4009Inst1 = Requirement_c.getOneC_ROnR4009(this, false);

	if ( testR4009Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "4009 ";
	}
	Provision_c testR4009Inst2 = Provision_c.getOneC_POnR4009(this, false);

	if ( testR4009Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "4009 ";
	}
	Port_c testR4016Inst = Port_c.getOneC_POOnR4016(this, false);

	if ( testR4016Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4016 ";
	}
	InterfaceReferenceInDelegation_c testR4013Inst = InterfaceReferenceInDelegation_c.getOneC_RIDOnR4013(this, false);

	if ( testR4013Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4013 ";
	}
	Interface_c testR4012Inst = Interface_c.getOneC_IOnR4012(this, false);

	if ( testR4012Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4012 ";
	}
	Delegation_c testR4014Inst = Delegation_c.getOneC_DGOnR4014(this, false);

	if ( testR4014Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4014 ";
	}
	ImportedReference_c testR4701Inst = ImportedReference_c.getOneCL_IIROnR4701(this, false);

	if ( testR4701Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "4701 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Interface Reference", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("port_id")){
         return true;
      }
      if(attributeName.equals("id")){
         return true;
      }
      if(attributeName.equals("formal_interface_id")){
         return true;
      }
      if(attributeName.equals("delegation_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getId();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getPort_idLongBased()
  {
    if ( OriginatesFromPort != null )
    {
      return OriginatesFromPort.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPort_id()
  {
    if ( OriginatesFromPort != null )
    {
      return OriginatesFromPort.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getPort_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_port_id) )
      return m_port_id;
    else
      return getPort_id();
  }
  
  public void setPort_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_port_id)){
	        return;
	    }
	}else if(m_port_id != null){
	    if(m_port_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Port_id", m_port_id, newValue,true); 
   m_port_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getIdLongBased()
  {
    if(m_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_id)){
    	return 0xfffffff & m_id.getLeastSignificantBits();
    }
    return m_idLongBased ;
  }
  public java.util.UUID getId()
  {
    return m_id ;
  }


  public void setId(java.util.UUID newValue)
  {
   m_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getFormal_interface_idLongBased()
  {
    if ( MayBeDefinedByInterface != null )
    {
      return MayBeDefinedByInterface.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getFormal_interface_id()
  {
    if ( MayBeDefinedByInterface != null )
    {
      return MayBeDefinedByInterface.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getFormal_interface_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_formal_interface_id) )
      return m_formal_interface_id;
    else
      return getFormal_interface_id();
  }
  
  public void setFormal_interface_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_formal_interface_id)){
	        return;
	    }
	}else if(m_formal_interface_id != null){
	    if(m_formal_interface_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Formal_interface_id", m_formal_interface_id, newValue,true); 
   m_formal_interface_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDelegation_idLongBased()
  {
    if ( ReceivesDelegationViaDelegation != null )
    {
      return ReceivesDelegationViaDelegation.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDelegation_id()
  {
    if ( ReceivesDelegationViaDelegation != null )
    {
      return ReceivesDelegationViaDelegation.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDelegation_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_delegation_id) )
      return m_delegation_id;
    else
      return getDelegation_id();
  }
  
  public void setDelegation_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_delegation_id)){
	        return;
	    }
	}else if(m_delegation_id != null){
	    if(m_delegation_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Delegation_id", m_delegation_id, newValue,true); 
   m_delegation_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Interface Reference", //$NON-NLS-1$
	  " Operation entered: Interface Reference::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     InterfaceReference_c [] objs = InterfaceReference_c.InterfaceReferenceInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Interface Reference", //$NON-NLS-1$
	  " Operation entered: Interface Reference::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class InterfaceReference_c_test56990_c implements ClassQueryInterface_c
    {
	  InterfaceReference_c_test56990_c( java.util.UUID            p56991 ) {
	  m_p56991 = p56991;
	  }
	  private java.util.UUID             m_p56991; 
	  public boolean evaluate (Object candidate)
	  {
	      InterfaceReference_c selected = (InterfaceReference_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p56991));
	      return retval;
	  }
    }

    InterfaceReference_c [] objs56989 = 
    InterfaceReference_c.InterfaceReferenceInstances(modelRoot, new InterfaceReference_c_test56990_c(getId())) ;

    if ( (  (objs56989.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Reference", //$NON-NLS-1$
           "Consistency: Object: Interface Reference: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56989.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Reference: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56989.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56989.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Reference", //$NON-NLS-1$
           "Consistency: Object: Interface Reference: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56989.length )  + " Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Reference: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56989.length )  + " Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Interface Reference is a referring class in association: rel.Numb = 4016
          // The participating class is: Port
    class Port_c_test56995_c implements ClassQueryInterface_c
    {
	  Port_c_test56995_c( java.util.UUID            p56996 ) {
	  m_p56996 = p56996;
	  }
	  private java.util.UUID             m_p56996; 
	  public boolean evaluate (Object candidate)
	  {
	      Port_c selected = (Port_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p56996));
	      return retval;
	  }
    }

    Port_c [] objs56994 = 
    Port_c.PortInstances(modelRoot, new Port_c_test56995_c(getPort_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56994.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Reference", //$NON-NLS-1$
           "Consistency: Object: Interface Reference: Association: 4016: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56994.length )  + " Port_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Reference: Association: 4016: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56994.length )  + " Port_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Interface Reference is a referring class in association: rel.Numb = 4012
          // The participating class is: Interface
    class Interface_c_test56998_c implements ClassQueryInterface_c
    {
	  Interface_c_test56998_c( java.util.UUID            p56999 ) {
	  m_p56999 = p56999;
	  }
	  private java.util.UUID             m_p56999; 
	  public boolean evaluate (Object candidate)
	  {
	      Interface_c selected = (Interface_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p56999));
	      return retval;
	  }
    }

    Interface_c [] objs56997 = 
    Interface_c.InterfaceInstances(modelRoot, new Interface_c_test56998_c(getFormal_interface_id())) ;

    if ( (  (objs56997.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Reference", //$NON-NLS-1$
           "Consistency: Object: Interface Reference: Association: 4012: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56997.length )  + " Formal_Interface_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Reference: Association: 4012: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56997.length )  + " Formal_Interface_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Interface Reference is a referring class in association: rel.Numb = 4014
          // The participating class is: Delegation
    class Delegation_c_test57001_c implements ClassQueryInterface_c
    {
	  Delegation_c_test57001_c( java.util.UUID            p57002 ) {
	  m_p57002 = p57002;
	  }
	  private java.util.UUID             m_p57002; 
	  public boolean evaluate (Object candidate)
	  {
	      Delegation_c selected = (Delegation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p57002));
	      return retval;
	  }
    }

    Delegation_c [] objs57000 = 
    Delegation_c.DelegationInstances(modelRoot, new Delegation_c_test57001_c(getDelegation_id())) ;

    if ( (  (objs57000.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Reference", //$NON-NLS-1$
           "Consistency: Object: Interface Reference: Association: 4014: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs57000.length )  + " Delegation_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Reference: Association: 4014: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs57000.length )  + " Delegation_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Supertype: rel.Numb = 4009
    int objs57003 = 0;
            // Subtype Object: Requirement
    class Requirement_c_test57004_c implements ClassQueryInterface_c
    {
	  Requirement_c_test57004_c( java.util.UUID            p57005 ) {
	  m_p57005 = p57005;
	  }
	  private java.util.UUID             m_p57005; 
	  public boolean evaluate (Object candidate)
	  {
	      Requirement_c selected = (Requirement_c) candidate;
	      boolean retval = false;
	      retval = (selected.getRequirement_id().equals(m_p57005));
	      return retval;
	  }
    }

    Requirement_c [] objs57006 = 
    Requirement_c.RequirementInstances(modelRoot, new Requirement_c_test57004_c(getId())) ;
 
    objs57003 = objs57003 + objs57006.length;
            // Subtype Object: Provision
    class Provision_c_test57007_c implements ClassQueryInterface_c
    {
	  Provision_c_test57007_c( java.util.UUID            p57008 ) {
	  m_p57008 = p57008;
	  }
	  private java.util.UUID             m_p57008; 
	  public boolean evaluate (Object candidate)
	  {
	      Provision_c selected = (Provision_c) candidate;
	      boolean retval = false;
	      retval = (selected.getProvision_id().equals(m_p57008));
	      return retval;
	  }
    }

    Provision_c [] objs57009 = 
    Provision_c.ProvisionInstances(modelRoot, new Provision_c_test57007_c(getId())) ;
 
    objs57003 = objs57003 + objs57009.length;
    if ( objs57003 != 1 )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Reference", //$NON-NLS-1$
           "Consistency: Object: Interface Reference: Association: 4009: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs57003 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Reference: Association: 4009: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs57003 )  , e); 
      }
      retval = false;

    }

          // Associated One Side: rel.Numb = 4013
            // Link Object: Interface Reference In Delegation
            // Other Side Class: Delegation
          // Interface Reference is a participating class in association: rel.Numb = 4701
             // Object: Imported Reference
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfaceReferenceInDelegation_c [] v_delegationMediums = InterfaceReferenceInDelegation_c.getManyC_RIDsOnR4013(this);


InterfaceReferenceInDelegation_c  v_dMedium = null;
for ( int i55191 = 0; i55191 < v_delegationMediums.length; i55191++)
{
  v_dMedium = v_delegationMediums[i55191] ;

Delegation_c v_delegation = Delegation_c.getOneC_DGOnR4013(v_dMedium);


if (v_dMedium != null) {
v_dMedium.unrelateAcrossR4013From( this ) ; v_dMedium.unrelateAcrossR4013From( v_delegation ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_dMedium != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dMedium.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dMedium));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


if (v_delegation != null) {
v_delegation.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Delegation_c v_delegation = Delegation_c.getOneC_DGOnR4014(this);


if ( (  (v_delegation != null)) )
{

this.unrelateAcrossR4014From(v_delegation);


if (v_delegation != null) {
v_delegation.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Port_c v_port = Port_c.getOneC_POOnR4016(this);


if ( (  (v_port != null)) )
{

Component_c v_component = Component_c.getOneC_COnR4010(v_port);


if ( (  (v_component != null)) )
{

if (v_component != null) {
v_component.unrelateAcrossR4010From(v_port);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_port != null) {
v_port.unrelateAcrossR4016From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_port != null) {
v_port.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Removesignalsandoperations() ;


Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


if ( (  (v_interface != null)) )
{

if (v_interface != null) {
v_interface.unrelateAcrossR4012From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


if ( (  (v_provision != null)) )
{

this.unrelateAcrossR4009From(v_provision);


if (v_provision != null) {
v_provision.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else if ( (  (v_requirement != null)) )
{

this.unrelateAcrossR4009From(v_requirement);


if (v_requirement != null) {
v_requirement.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Formalize(final boolean      p_Formalizeother,final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Formalize") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfaceReference_c v_rootIr = (InterfaceReference_c) modelRoot.getInstanceList(InterfaceReference_c.class).getGlobal(null, Getrootir());


Interface_c v_interface = Interface_c.getOneC_IOnR4012(v_rootIr);


boolean      v_formalizedRoot = false ;


if (   (v_interface != null) )
{

if ( (p_Id.equals(v_interface.getId()) &&   !Util_c.Isproxy(			    
v_interface.Converttoinstance())) )
{

v_formalizedRoot = true ;



}

else
{

Unformalize(			    
false ) ;



}


}

if ( (  !(getId().equals(Getrootir())) &&   !v_formalizedRoot) )
{

Provision_c v_rootPro = Provision_c.getOneC_POnR4009(v_rootIr);


if ( (  (v_rootPro != null)) )
{

if (v_rootPro != null) {
v_rootPro.Formalize(			    
p_Id			    
,p_Formalizeother ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

Requirement_c v_rootReq = Requirement_c.getOneC_ROnR4009(v_rootIr);


if ( (  (v_rootReq != null)) )
{

if (v_rootReq != null) {
v_rootReq.Formalize(			    
p_Id			    
,p_Formalizeother ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

return ;



}

Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


ComponentPackage_c v_compPackage = ComponentPackage_c.getOneCP_CPOnR4604(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)));


if ( (  (v_compPackage == null)) )
{

Component_c v_parentComponent = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


if ( (  (v_parentComponent != null)) )
{

while ( (  (v_compPackage == null)) )
{

v_compPackage = ComponentPackage_c.getOneCP_CPOnR4604(v_parentComponent);


v_parentComponent = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_parentComponent));



}


}


}

boolean      v_isInGenericPkg = false ;


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)))));


if ( (  (v_system == null)) )
{

Component_c v_component = Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this));


java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent));


v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);



}

if ( (  (v_system != null)) )
{

v_isInGenericPkg = true ;



}

if ( (  (v_compPackage != null) || v_isInGenericPkg) )
{

if ( (v_isInGenericPkg) )
{

PackageableElement_c v_interfacePe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Id);


v_interface = Interface_c.getOneC_IOnR8001(v_interfacePe);



}

else
{

v_system = SystemModel_c.getOneS_SYSOnR4606(v_compPackage);


  class Interface_test55838_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Interface_c selected = (Interface_c)candidate;
		return (selected.getId().equals(p_Id)) ;
	}
  }
v_interface = Interface_c.getOneC_IOnR4303(InterfacePackage_c.getManyIP_IPsOnR4304(v_system), new Interface_test55838_c());



}

if ( (  (v_interface != null)) )
{

boolean      v_doNotFormalize = false ;


if ( (  !(getId().equals(Getrootir()) && v_formalizedRoot)) )
{

Createsignalsandoperations(			    
v_interface.getId() ) ;


if (v_interface != null) {
  v_interface.relateAcrossR4012To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (  (v_requirement != null)) )
{

Provision_c [] v_provisions = Provision_c.getManyC_PsOnR4002(Satisfaction_c.getManyC_SFsOnR4002(v_requirement));


for ( int i55192 = 0; i55192 < v_provisions.length; i55192++)
{
  v_provision = v_provisions[i55192] ;

if ( (p_Formalizeother) || (  !v_provision.Isformal()) )
{

if (v_provision != null) {
v_provision.Formalize(			    
p_Id			    
,false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

else if ( (  (v_provision != null)) )
{

Requirement_c [] v_requirements = Requirement_c.getManyC_RsOnR4002(Satisfaction_c.getManyC_SFsOnR4002(v_provision));


for ( int i55193 = 0; i55193 < v_requirements.length; i55193++)
{
  v_requirement = v_requirements[i55193] ;

if ( (p_Formalizeother) || (  !v_requirement.Isformal()) )
{

if (v_requirement != null) {
v_requirement.Formalize(			    
v_interface.getId()			    
,false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


}

if ( (getId().equals(Getrootir())) )
{

Formalizedelegatedreferences(			    
p_Formalizeother			    
,v_interface.getId() ) ;



}


}


}


   } // End formalize
  public  boolean      Isformal()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Isformal") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


return   (v_interface != null);



   } // End isFormal
  public  String       Interfacename()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Interfacename") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


if (   (v_interface != null) )
{

return v_interface.getName();



}

String       v_result = "" ;


Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


if (   (v_requirement != null) )
{

v_result = v_requirement.getInformalname() ;



}

else
{

v_result = v_provision.getInformalname() ;



}

return v_result;



   } // End interfaceName
  public  void Unformalize(final boolean      p_Unformalizeother)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Unformalize") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (  !(getId().equals(Getrootir()))) )
{

InterfaceReference_c v_rootIr = (InterfaceReference_c) modelRoot.getInstanceList(InterfaceReference_c.class).getGlobal(null, Getrootir());


if ( (v_rootIr.Isformal()) )
{

Provision_c v_rootPro = Provision_c.getOneC_POnR4009(v_rootIr);


if ( (  (v_rootPro != null)) )
{

if (v_rootPro != null) {
v_rootPro.Unformalize(			    
p_Unformalizeother ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

Requirement_c v_rootReq = Requirement_c.getOneC_ROnR4009(v_rootIr);


if ( (  (v_rootReq != null)) )
{

if (v_rootReq != null) {
v_rootReq.Unformalize(			    
p_Unformalizeother ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

return ;



}


}

Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


if ( (  (v_requirement != null)) )
{

RequiredExecutableProperty_c [] v_reps = RequiredExecutableProperty_c.getManySPR_REPsOnR4500(v_requirement);


RequiredExecutableProperty_c  v_rep = null;
for ( int i55194 = 0; i55194 < v_reps.length; i55194++)
{
  v_rep = v_reps[i55194] ;

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4500(v_rep);


if (v_rep != null) {
v_rep.unrelateAcrossR4500From( v_requirement ) ; v_rep.unrelateAcrossR4500From( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_rep != null) {
v_rep.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( (p_Unformalizeother) )
{

Provision_c [] v_provisions = Provision_c.getManyC_PsOnR4002(Satisfaction_c.getManyC_SFsOnR4002(v_requirement));


for ( int i55195 = 0; i55195 < v_provisions.length; i55195++)
{
  v_provision = v_provisions[i55195] ;

if (v_provision != null) {
v_provision.Unformalize(			    
false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

else if ( (  (v_provision != null)) )
{

ProvidedExecutableProperty_c [] v_peps = ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(v_provision);


ProvidedExecutableProperty_c  v_pep = null;
for ( int i55196 = 0; i55196 < v_peps.length; i55196++)
{
  v_pep = v_peps[i55196] ;

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4501(v_pep);


if (v_pep != null) {
v_pep.unrelateAcrossR4501From( v_provision ) ; v_pep.unrelateAcrossR4501From( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_pep != null) {
v_pep.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Requirement_c [] v_reqs = Requirement_c.getManyC_RsOnR4002(Satisfaction_c.getManyC_SFsOnR4002(v_provision));


Requirement_c  v_req = null;
for ( int i55197 = 0; i55197 < v_reqs.length; i55197++)
{
  v_req = v_reqs[i55197] ;

if ( (p_Unformalizeother) || (v_req.Isformal()) )
{

if (v_req != null) {
v_req.Unformalize(			    
false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}

if ( (  (v_interface != null)) )
{

if (v_interface != null) {
v_interface.unrelateAcrossR4012From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (getId().equals(Getrootir())) )
{

Unformalizedelegatedreferences(			    
p_Unformalizeother ) ;



}


   } // End unformalize
  public  java.util.UUID         Getdelegatedir()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Getdelegatedir") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_resultID = Gd_c.Null_unique_id() ;


java.util.UUID         v_NULL_ID = Gd_c.Null_unique_id() ;


Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


if ( (  (v_interface == null)) )
{

InterfaceReference_c [] v_delegatedIRs = InterfaceReference_c.getManyC_IRsOnR4014(Delegation_c.getManyC_DGsOnR4013(this));


InterfaceReference_c  v_delegatedIR = null;
for ( int i55198 = 0; i55198 < v_delegatedIRs.length; i55198++)
{
  v_delegatedIR = v_delegatedIRs[i55198] ;

v_interface = Interface_c.getOneC_IOnR4012(v_delegatedIR);


if ( (  (v_interface != null)) )
{

v_resultID = v_interface.getId() ;



}

else
{

return v_delegatedIR.Getdelegatedir();



}

if ( (! v_resultID.equals(v_NULL_ID)) )
{

break;



}


}


}

return v_resultID;



   } // End getDelegatedIR
  public  java.util.UUID         Getrootir()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Getrootir") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfaceReference_c v_rootIR = this ;


java.util.UUID         v_NULL_ID = Gd_c.Null_unique_id() ;


InterfaceReference_c v_tempIR = v_rootIR ;


while (   (v_tempIR != null) )
{

v_rootIR = v_tempIR ;


v_tempIR = InterfaceReference_c.getOneC_IROnR4013(InterfaceReferenceInDelegation_c.getManyC_RIDsOnR4013(Delegation_c.getManyC_DGsOnR4014(v_tempIR)));



}

return v_rootIR.getId();



   } // End getRootIR
  public  boolean      Canuseinterfacesinpackage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Canuseinterfacesinpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
boolean      v_result = false ;


Component_c v_component = Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this));


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_component));


if ( (  (v_component != null) &&   (v_pkg == null)) )
{

  class InterfacePackage_test55839_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InterfacePackage_c selected = (InterfacePackage_c)candidate;
		return (selected.getPackage_id().equals(p_Id)) ;
	}
  }
InterfacePackage_c v_ipkg = InterfacePackage_c.getOneIP_IPOnR4304(SystemModel_c.getManyS_SYSsOnR4606(ComponentPackage_c.getManyCP_CPsOnR4608(Component_c.getManyC_CsOnR4010(Port_c.getManyC_POsOnR4016(this)))), new InterfacePackage_test55839_c());


if ( (  (v_ipkg != null)) )
{

Component_c v_irParent = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_component));


Component_c v_interfaceParentComponent = Component_c.getOneC_COnR4206(v_ipkg);


if ( (  (v_interfaceParentComponent == null)) )
{

InterfacePackage_c v_parentInterfacePackage = InterfacePackage_c.getOneIP_IPOnR4300(InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4301(v_ipkg));


while ( (  (v_parentInterfacePackage != null)) )
{

v_interfaceParentComponent = Component_c.getOneC_COnR4206(v_parentInterfacePackage);


v_parentInterfacePackage = InterfacePackage_c.getOneIP_IPOnR4300(InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4301(v_parentInterfacePackage));



}


}

if ( (  (v_irParent != null) &&   (v_interfaceParentComponent != null)) )
{

if ( (  (v_interfaceParentComponent != null)) )
{

Component_c v_parentParentComponent = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_irParent));


while ( (  (v_parentParentComponent != null)) )
{

if ( (v_interfaceParentComponent == v_parentParentComponent) )
{

v_result = true ;


break;



}

v_parentParentComponent = Component_c.getOneC_COnR4202(ComponentInComponent_c.getOneCN_CICOnR4203(v_parentParentComponent));



}

if ( (  !v_result) )
{

if ( (v_interfaceParentComponent == v_irParent) )
{

v_result = true ;



}


}


}


}

else if ( (  (v_irParent == null) &&   (v_interfaceParentComponent != null)) )
{

return false;



}

else if ( (  (v_irParent != null) &&   (v_interfaceParentComponent == null) ||   (v_irParent == null) &&   (v_interfaceParentComponent == null)) )
{

v_result = true ;



}

if ( (v_result) )
{

Interface_c v_interface = Interface_c.getOneC_IOnR4303(v_ipkg);


if ( (  (v_interface != null)) )
{

v_result = true ;



}

else
{

v_result = false ;



}

if ( (Isformal() && v_result) )
{

Interface_c v_existingInterface = Interface_c.getOneC_IOnR4012(this);


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4303(v_ipkg);


for ( int i55199 = 0; i55199 < v_interfaces.length; i55199++)
{
  v_interface = v_interfaces[i55199] ;

if ( (v_existingInterface != v_interface) )
{

return true;



}


}

v_result = false ;



}


}


}


}

return v_result;



   } // End canUseInterfacesInPackage
  public  boolean      Canformalizeagainstanyinterface()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Canformalizeagainstanyinterface") ; 
               final ModelRoot modelRoot = getModelRoot();
boolean      v_isInGenericPkg = false ;


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)))));


if ( (  (v_system == null)) )
{

Component_c v_component = Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this));


if ( (  (v_component != null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent)));



}


}

if ( (  (v_system != null)) )
{

v_isInGenericPkg = true ;



}

if ( (v_isInGenericPkg) )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


if ( (  (v_package != null)) )
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,""			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.INTERFACE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  class SearchResultSet_test55840_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return (selected.getType() == Elementtypeconstants_c.INTERFACE) ;
	}
  }
SearchResultSet_c [] v_srs = SearchResultSet_c.getManyPE_SRSsOnR8005(v_package, new SearchResultSet_test55840_c());


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_srs)));


Interface_c  v_interface = null;
for ( int i55200 = 0; i55200 < v_interfaces.length; i55200++)
{
  v_interface = v_interfaces[i55200] ;

if ( (! v_interface.getId().equals(getFormal_interface_id())) )
{

return true;



}


}


}

Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


if ( (  (v_component != null)) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,""			    
,v_component.getId()			    
,Elementtypeconstants_c.INTERFACE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  class ComponentResultSet_test55841_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return (selected.getType() == Elementtypeconstants_c.INTERFACE) ;
	}
  }
ComponentResultSet_c [] v_crs = ComponentResultSet_c.getManyPE_CRSsOnR8007(v_component, new ComponentResultSet_test55841_c());


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_crs)));


Interface_c  v_interface = null;
for ( int i55201 = 0; i55201 < v_interfaces.length; i55201++)
{
  v_interface = v_interfaces[i55201] ;

if ( (! v_interface.getId().equals(getFormal_interface_id())) )
{

return true;



}


}


}


}

else
{

ComponentPackage_c v_componentPackage = ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)));


v_system = SystemModel_c.getOneS_SYSOnR4606(v_componentPackage);


if ( (  (v_system != null)) )
{

InterfacePackage_c [] v_diagrams = InterfacePackage_c.getManyIP_IPsOnR4304(v_system);


InterfacePackage_c  v_diagram = null;
for ( int i55202 = 0; i55202 < v_diagrams.length; i55202++)
{
  v_diagram = v_diagrams[i55202] ;

if ( (Canuseinterfacesinpackage(			    
v_diagram.getPackage_id())) )
{

Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4303(v_diagram);


Interface_c  v_interface = null;
for ( int i55203 = 0; i55203 < v_interfaces.length; i55203++)
{
  v_interface = v_interfaces[i55203] ;

if ( (! v_interface.getId().equals(getFormal_interface_id())) )
{

return true;



}


}


}


}


}


}

return false;



   } // End canFormalizeAgainstAnyInterface
  public  void Formalizedelegatedreferences(final boolean      p_Formalizeother,final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Formalizedelegatedreferences") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfaceReference_c [] v_nextRefs = InterfaceReference_c.getManyC_IRsOnR4014(Delegation_c.getManyC_DGsOnR4013(InterfaceReferenceInDelegation_c.getManyC_RIDsOnR4013(this)));


InterfaceReference_c  v_nextRef = null;
for ( int i55204 = 0; i55204 < v_nextRefs.length; i55204++)
{
  v_nextRef = v_nextRefs[i55204] ;

boolean      v_formalize = false ;


if ( (v_nextRef.Isformal()) )
{

Interface_c v_interface = Interface_c.getOneC_IOnR4012(v_nextRef);


if ( (! v_interface.getId().equals(p_Id)) )
{

if (v_nextRef != null) {
v_nextRef.Unformalize(			    
false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_formalize = true ;



}


}

else
{

v_formalize = true ;



}

if ( (v_formalize) )
{

if (v_nextRef != null) {
v_nextRef.Formalize(			    
p_Formalizeother			    
,p_Id ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if (v_nextRef != null) {
v_nextRef.Formalizedelegatedreferences(			    
p_Formalizeother			    
,p_Id ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End formalizeDelegatedReferences
  public  void Unformalizedelegatedreferences(final boolean      p_Unformalizeother)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Unformalizedelegatedreferences") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfaceReference_c [] v_nextRefs = InterfaceReference_c.getManyC_IRsOnR4014(Delegation_c.getManyC_DGsOnR4013(InterfaceReferenceInDelegation_c.getManyC_RIDsOnR4013(this)));


InterfaceReference_c  v_nextRef = null;
for ( int i55205 = 0; i55205 < v_nextRefs.length; i55205++)
{
  v_nextRef = v_nextRefs[i55205] ;

if (v_nextRef != null) {
v_nextRef.Unformalize(			    
p_Unformalizeother ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_nextRef != null) {
v_nextRef.Unformalizedelegatedreferences(			    
p_Unformalizeother ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End unformalizeDelegatedReferences
  public  String       Get_name()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = Interfacename() ;


Port_c v_port = Port_c.getOneC_POOnR4016(this);


if (   (v_port != null) && ! v_port.getName().equals("") )
{

v_result = v_port.getName() + " ( " + v_result + " )" ;



}

return v_result;



   } // End get_name
  public  void Resolveinterface()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Resolveinterface") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_proxyInterface = Interface_c.getOneC_IOnR4012(this);


if ( (  (v_proxyInterface != null) &&   !Util_c.Isproxy(			    
Converttoinstance())) )
{

SystemModel_c v_genericPkgSys = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)))));


if ( (  (v_genericPkgSys == null)) )
{

Component_c v_component = Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this));


if ( (  (v_component != null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_genericPkgSys = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent)));



}


}

if ( (  (v_genericPkgSys != null)) )
{

java.util.UUID         v_id = Findmatchinginterface(			    
Gd_c.Null_unique_id()			    
,v_genericPkgSys.getSys_id()) ;


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


Component_c v_comp = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


Interface_c [] v_resolvedInterfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_pkg)));


if ( (  (v_resolvedInterfaces.length == 0)) )
{

v_resolvedInterfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_comp)));



}

boolean      v_interfaceLocated = false ;


Interface_c  v_interface = null;
for ( int i55206 = 0; i55206 < v_resolvedInterfaces.length; i55206++)
{
  v_interface = v_resolvedInterfaces[i55206] ;

if ( (v_interface.getId().equals(v_id)) )
{

v_interfaceLocated = true ;


this.unrelateAcrossR4012From(v_proxyInterface);


  this.relateAcrossR4012To(v_interface);


Migrateexecutableproperties() ;


break;



}


}

if ( (  !v_interfaceLocated) )
{

Util_c.Addpastedelementtoproblemlist(			    
Interfacename()			    
,"Interfaces for the following references could" + " not be located:" ) ;



}


}

else
{

ComponentPackage_c v_componentPackage = ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)));


if ( (  (v_componentPackage != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(v_componentPackage);


if ( (  (v_system != null)) )
{

java.util.UUID         v_id = Findmatchinginterface(			    
Gd_c.Null_unique_id()			    
,v_system.getSys_id()) ;


  class Interface_test55842_c implements ClassQueryInterface_c
  {
	Interface_test55842_c( java.util.UUID         p55843 ) {
		m_p55843 = p55843;
	}
	private java.util.UUID         m_p55843;
	public boolean evaluate (Object candidate)
	{
		Interface_c selected = (Interface_c)candidate;
		return (selected.getId().equals(m_p55843)) ;
	}
  }
Interface_c v_interface = Interface_c.getOneC_IOnR4303(InterfacePackage_c.getManyIP_IPsOnR4304(v_system), new Interface_test55842_c(v_id));


if ( (  (v_interface != null)) )
{

this.unrelateAcrossR4012From(v_proxyInterface);


  this.relateAcrossR4012To(v_interface);


Migrateexecutableproperties() ;



}

else
{

Util_c.Addpastedelementtoproblemlist(			    
Interfacename()			    
,"Interfaces for the following references could" + " not be located:" ) ;



}


}


}


}


}


   } // End resolveInterface
  public  void Createsignalsandoperations(final java.util.UUID         p_Interface_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Createsignalsandoperations") ; 
               final ModelRoot modelRoot = getModelRoot();
  class Interface_test55844_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Interface_c selected = (Interface_c)candidate;
		return (selected.getId().equals(p_Interface_id)) ;
	}
  }
Interface_c v_interface = Interface_c.getOneC_IOnR4303(InterfacePackage_c.getManyIP_IPsOnR4304(SystemModel_c.getManyS_SYSsOnR4606(ComponentPackage_c.getManyCP_CPsOnR4608(Component_c.getManyC_CsOnR4010(Port_c.getManyC_POsOnR4016(this))))), new Interface_test55844_c());


if ( (  (v_interface == null)) )
{

PackageableElement_c v_interfacePe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Interface_id);


v_interface = Interface_c.getOneC_IOnR8001(v_interfacePe);



}

if ( (  (v_interface != null)) )
{

InterfaceOperation_c [] v_operations = InterfaceOperation_c.getManyC_IOsOnR4004(ExecutableProperty_c.getManyC_EPsOnR4003(v_interface));


InterfaceSignal_c [] v_signals = InterfaceSignal_c.getManyC_ASsOnR4004(ExecutableProperty_c.getManyC_EPsOnR4003(v_interface));


Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


if ( (  (v_requirement != null)) )
{

InterfaceSignal_c  v_signal = null;
for ( int i55207 = 0; i55207 < v_signals.length; i55207++)
{
  v_signal = v_signals[i55207] ;

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4004(v_signal);


RequiredExecutableProperty_c v_req_ep = new RequiredExecutableProperty_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_req_ep));


RequiredSignal_c v_req_signal = new RequiredSignal_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_req_signal));


if (v_req_signal != null) {
v_req_signal.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_req_ep != null) {
  v_req_ep.relateAcrossR4500To( v_requirement ) ;   v_req_ep.relateAcrossR4500To( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_req_signal != null) {
  v_req_signal.relateAcrossR4502To(v_req_ep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

InterfaceOperation_c  v_operation = null;
for ( int i55208 = 0; i55208 < v_operations.length; i55208++)
{
  v_operation = v_operations[i55208] ;

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4004(v_operation);


RequiredExecutableProperty_c v_req_ep = new RequiredExecutableProperty_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_req_ep));


RequiredOperation_c v_req_operation = new RequiredOperation_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_req_operation));


if (v_req_operation != null) {
v_req_operation.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_req_ep != null) {
  v_req_ep.relateAcrossR4500To( v_requirement ) ;   v_req_ep.relateAcrossR4500To( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_req_operation != null) {
  v_req_operation.relateAcrossR4502To(v_req_ep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


InterfaceSignal_c  v_signal = null;
for ( int i55209 = 0; i55209 < v_signals.length; i55209++)
{
  v_signal = v_signals[i55209] ;

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4004(v_signal);


ProvidedExecutableProperty_c v_pro_ep = new ProvidedExecutableProperty_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pro_ep));


ProvidedSignal_c v_pro_signal = new ProvidedSignal_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pro_signal));


if (v_pro_signal != null) {
v_pro_signal.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_pro_ep != null) {
  v_pro_ep.relateAcrossR4501To( v_provision ) ;   v_pro_ep.relateAcrossR4501To( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_pro_signal != null) {
  v_pro_signal.relateAcrossR4503To(v_pro_ep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

InterfaceOperation_c  v_operation = null;
for ( int i55210 = 0; i55210 < v_operations.length; i55210++)
{
  v_operation = v_operations[i55210] ;

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4004(v_operation);


ProvidedExecutableProperty_c v_pro_ep = new ProvidedExecutableProperty_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pro_ep));


ProvidedOperation_c v_pro_operation = new ProvidedOperation_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pro_operation));


if (v_pro_operation != null) {
v_pro_operation.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_pro_ep != null) {
  v_pro_ep.relateAcrossR4501To( v_provision ) ;   v_pro_ep.relateAcrossR4501To( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_pro_operation != null) {
  v_pro_operation.relateAcrossR4503To(v_pro_ep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End createSignalsAndOperations
  public  void Removesignalsandoperations()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Removesignalsandoperations") ; 
               final ModelRoot modelRoot = getModelRoot();
Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


if ( (  (v_requirement != null)) )
{

RequiredExecutableProperty_c [] v_reps = RequiredExecutableProperty_c.getManySPR_REPsOnR4500(v_requirement);


RequiredExecutableProperty_c  v_rep = null;
for ( int i55211 = 0; i55211 < v_reps.length; i55211++)
{
  v_rep = v_reps[i55211] ;

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4500(v_rep);


if (v_rep != null) {
v_rep.unrelateAcrossR4500From( v_requirement ) ; v_rep.unrelateAcrossR4500From( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_rep != null) {
v_rep.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

else
{

Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


ProvidedExecutableProperty_c [] v_peps = ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(v_provision);


ProvidedExecutableProperty_c  v_pep = null;
for ( int i55212 = 0; i55212 < v_peps.length; i55212++)
{
  v_pep = v_peps[i55212] ;

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4501(v_pep);


if (v_pep != null) {
v_pep.unrelateAcrossR4501From( v_provision ) ; v_pep.unrelateAcrossR4501From( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_pep != null) {
v_pep.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End removeSignalsAndOperations
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Converttoinstance") ; 
return this;
   } // End convertToInstance
  public  java.util.UUID         Findmatchinginterface(final java.util.UUID         p_Pe,final java.util.UUID         p_System_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Findmatchinginterface") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_currentInterface = Interface_c.getOneC_IOnR4012(this);


if ( (  (v_currentInterface == null)) )
{

return Gd_c.Null_unique_id();



}

java.util.UUID         v_id = Gd_c.Null_unique_id() ;


if ( (Util_c.Isproxy(			    
v_currentInterface.Converttoinstance())) )
{

String       v_name = v_currentInterface.getName() ;


SystemModel_c v_system = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(p_System_id);


boolean      v_isInGenericPkg = false ;


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


Component_c v_comp = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


if ( (  (v_pkg != null) ||   (v_comp != null)) )
{

v_isInGenericPkg = true ;



}

else
{

if ( (! p_Pe.equals(Gd_c.Null_unique_id())) )
{

v_isInGenericPkg = true ;



}


}

if ( (v_isInGenericPkg) )
{

PackageableElement_c v_packageableElement = PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)));


if ( (! p_Pe.equals(Gd_c.Null_unique_id())) )
{

v_packageableElement = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Pe);


v_pkg = Package_c.getOneEP_PKGOnR8000(v_packageableElement);


if ( (  (v_pkg == null)) )
{

v_comp = Component_c.getOneC_COnR8003(v_packageableElement);



}


}

if (v_packageableElement != null) {
v_packageableElement.Resolveinterfacerelativetoself(			    
v_name ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Interface_c [] v_resolvedInterfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_pkg)));


if ( (  (v_resolvedInterfaces.length == 0)) )
{

v_resolvedInterfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_comp)));



}

if ( (  (v_resolvedInterfaces.length) == 1) )
{

Interface_c  v_interface = null;
for ( int i55213 = 0; i55213 < v_resolvedInterfaces.length; i55213++)
{
  v_interface = v_resolvedInterfaces[i55213] ;

return v_interface.getId();



}


}

else
{

Interface_c  v_interface = null;
for ( int i55214 = 0; i55214 < v_resolvedInterfaces.length; i55214++)
{
  v_interface = v_resolvedInterfaces[i55214] ;

if ( (Interfacepreciselymatches(			    
v_interface.getId())) )
{

return v_interface.getId();



}


}

for ( int i55215 = 0; i55215 < v_resolvedInterfaces.length; i55215++)
{
  v_interface = v_resolvedInterfaces[i55215] ;

return v_interface.getId();



}


}


}

else
{

  class Interface_test55845_c implements ClassQueryInterface_c
  {
	Interface_test55845_c( String       p55846 ) {
		m_p55846 = p55846;
	}
	private String       m_p55846;
	public boolean evaluate (Object candidate)
	{
		Interface_c selected = (Interface_c)candidate;
		return (selected.getName().equals(m_p55846)) ;
	}
  }
Interface_c v_interface = Interface_c.getOneC_IOnR4303(InterfacePackage_c.getManyIP_IPsOnR4304(v_system), new Interface_test55845_c(v_name));


if ( (  (v_interface != null)) )
{

return v_interface.getId();



}


}


}

else
{

v_id = v_currentInterface.getId() ;



}

return v_id;



   } // End findMatchingInterface
  public  java.util.UUID         Getcomponentid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Getcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
Port_c v_port = Port_c.getOneC_POOnR4016(this);


return v_port.Getcomponentid();



   } // End getComponentId
  public  boolean      Issynchronized()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Issynchronized") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


if ( (  (v_interface == null)) )
{

return true;



}

if ( (Util_c.Isproxy(			    
v_interface.Converttoinstance())) )
{

return false;



}

InterfacePackage_c v_pkg = InterfacePackage_c.getOneIP_IPOnR4303(v_interface);


PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(v_interface);


if ( (  (v_pkg == null) &&   (v_pe == null)) )
{

return false;



}

Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


ExecutableProperty_c [] v_eps = ExecutableProperty_c.getManyC_EPsOnR4003(v_interface);


ExecutableProperty_c  v_ep = null;
for ( int i55216 = 0; i55216 < v_eps.length; i55216++)
{
  v_ep = v_eps[i55216] ;

if ( (  (v_provision != null)) )
{

  class ProvidedExecutableProperty_test55847_c implements ClassQueryInterface_c
  {
	ProvidedExecutableProperty_test55847_c( java.util.UUID         p55848 ) {
		m_p55848 = p55848;
	}
	private java.util.UUID         m_p55848;
	public boolean evaluate (Object candidate)
	{
		ProvidedExecutableProperty_c selected = (ProvidedExecutableProperty_c)candidate;
		return (selected.getExecutableproperty_id().equals(m_p55848)) ;
	}
  }
ProvidedExecutableProperty_c v_pep = ProvidedExecutableProperty_c.getOneSPR_PEPOnR4501(v_provision, new ProvidedExecutableProperty_test55847_c(v_ep.getId()));


if ( (  (v_pep == null)) )
{

return false;



}


}

if ( (  (v_requirement != null)) )
{

  class RequiredExecutableProperty_test55849_c implements ClassQueryInterface_c
  {
	RequiredExecutableProperty_test55849_c( java.util.UUID         p55850 ) {
		m_p55850 = p55850;
	}
	private java.util.UUID         m_p55850;
	public boolean evaluate (Object candidate)
	{
		RequiredExecutableProperty_c selected = (RequiredExecutableProperty_c)candidate;
		return (selected.getExecutableproperty_id().equals(m_p55850)) ;
	}
  }
RequiredExecutableProperty_c v_rep = RequiredExecutableProperty_c.getOneSPR_REPOnR4500(v_requirement, new RequiredExecutableProperty_test55849_c(v_ep.getId()));


if ( (  (v_rep == null)) )
{

return false;



}


}


}

return true;



   } // End isSynchronized
  public  void Synchronizesignalsandoperations()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Synchronizesignalsandoperations") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


InterfaceOperation_c [] v_operations = InterfaceOperation_c.getManyC_IOsOnR4004(ExecutableProperty_c.getManyC_EPsOnR4003(v_interface));


InterfaceSignal_c [] v_signals = InterfaceSignal_c.getManyC_ASsOnR4004(ExecutableProperty_c.getManyC_EPsOnR4003(v_interface));


Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


if ( (  (v_provision != null)) )
{

ProvidedOperation_c [] v_providedOperations = ProvidedOperation_c.getManySPR_POsOnR4503(ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(v_provision));


ProvidedOperation_c  v_providedOperation = null;
for ( int i55217 = 0; i55217 < v_providedOperations.length; i55217++)
{
  v_providedOperation = v_providedOperations[i55217] ;

ProvidedExecutableProperty_c v_pep = ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_providedOperation);


ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4501(v_pep);


Interface_c v_iface = Interface_c.getOneC_IOnR4003(v_ep);


if ( (  (v_ep == null) || Util_c.Isproxy(			    
v_ep.Converttoinstance()) ||   (v_iface == null) || Util_c.Isproxy(			    
v_iface.Converttoinstance())) )
{

if (v_pep != null) {
v_pep.unrelateAcrossR4501From( v_provision ) ; v_pep.unrelateAcrossR4501From( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_pep != null) {
v_pep.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

InterfaceOperation_c  v_operation = null;
for ( int i55218 = 0; i55218 < v_operations.length; i55218++)
{
  v_operation = v_operations[i55218] ;

  class ProvidedExecutableProperty_test55851_c implements ClassQueryInterface_c
  {
	ProvidedExecutableProperty_test55851_c( java.util.UUID         p55852 ) {
		m_p55852 = p55852;
	}
	private java.util.UUID         m_p55852;
	public boolean evaluate (Object candidate)
	{
		ProvidedExecutableProperty_c selected = (ProvidedExecutableProperty_c)candidate;
		return (selected.getProvision_id().equals(m_p55852)) ;
	}
  }
ProvidedExecutableProperty_c v_pep = ProvidedExecutableProperty_c.getOneSPR_PEPOnR4501(ExecutableProperty_c.getManyC_EPsOnR4004(v_operation), new ProvidedExecutableProperty_test55851_c(v_provision.getProvision_id()));


if ( (  (v_pep == null)) )
{

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4004(v_operation);


ProvidedExecutableProperty_c v_pro_ep = new ProvidedExecutableProperty_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pro_ep));


ProvidedOperation_c v_pro_operation = new ProvidedOperation_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pro_operation));


if (v_pro_operation != null) {
v_pro_operation.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_pro_ep != null) {
  v_pro_ep.relateAcrossR4501To( v_provision ) ;   v_pro_ep.relateAcrossR4501To( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_pro_operation != null) {
  v_pro_operation.relateAcrossR4503To(v_pro_ep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

ProvidedSignal_c [] v_providedSignals = ProvidedSignal_c.getManySPR_PSsOnR4503(ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(v_provision));


ProvidedSignal_c  v_providedSignal = null;
for ( int i55219 = 0; i55219 < v_providedSignals.length; i55219++)
{
  v_providedSignal = v_providedSignals[i55219] ;

ProvidedExecutableProperty_c v_pep = ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_providedSignal);


ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4501(v_pep);


Interface_c v_iface = Interface_c.getOneC_IOnR4003(v_ep);


if ( (  (v_ep == null) || Util_c.Isproxy(			    
v_ep.Converttoinstance()) ||   (v_iface == null) || Util_c.Isproxy(			    
v_iface.Converttoinstance())) )
{

if (v_pep != null) {
v_pep.unrelateAcrossR4501From( v_provision ) ; v_pep.unrelateAcrossR4501From( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_pep != null) {
v_pep.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

InterfaceSignal_c  v_signal = null;
for ( int i55220 = 0; i55220 < v_signals.length; i55220++)
{
  v_signal = v_signals[i55220] ;

  class ProvidedExecutableProperty_test55853_c implements ClassQueryInterface_c
  {
	ProvidedExecutableProperty_test55853_c( java.util.UUID         p55854 ) {
		m_p55854 = p55854;
	}
	private java.util.UUID         m_p55854;
	public boolean evaluate (Object candidate)
	{
		ProvidedExecutableProperty_c selected = (ProvidedExecutableProperty_c)candidate;
		return (selected.getProvision_id().equals(m_p55854)) ;
	}
  }
ProvidedExecutableProperty_c v_pep = ProvidedExecutableProperty_c.getOneSPR_PEPOnR4501(ExecutableProperty_c.getManyC_EPsOnR4004(v_signal), new ProvidedExecutableProperty_test55853_c(v_provision.getProvision_id()));


if ( (  (v_pep == null)) )
{

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4004(v_signal);


ProvidedExecutableProperty_c v_pro_ep = new ProvidedExecutableProperty_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pro_ep));


ProvidedSignal_c v_pro_signal = new ProvidedSignal_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pro_signal));


if (v_pro_signal != null) {
v_pro_signal.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_pro_ep != null) {
  v_pro_ep.relateAcrossR4501To( v_provision ) ;   v_pro_ep.relateAcrossR4501To( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_pro_signal != null) {
  v_pro_signal.relateAcrossR4503To(v_pro_ep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


if ( (  (v_requirement != null)) )
{

RequiredOperation_c [] v_requiredOperations = RequiredOperation_c.getManySPR_ROsOnR4502(RequiredExecutableProperty_c.getManySPR_REPsOnR4500(v_requirement));


RequiredOperation_c  v_requiredOperation = null;
for ( int i55221 = 0; i55221 < v_requiredOperations.length; i55221++)
{
  v_requiredOperation = v_requiredOperations[i55221] ;

RequiredExecutableProperty_c v_rep = RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_requiredOperation);


ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4500(v_rep);


Interface_c v_iface = Interface_c.getOneC_IOnR4003(v_ep);


if ( (  (v_ep == null) || Util_c.Isproxy(			    
v_ep.Converttoinstance()) ||   (v_iface == null) || Util_c.Isproxy(			    
v_iface.Converttoinstance())) )
{

if (v_rep != null) {
v_rep.unrelateAcrossR4500From( v_requirement ) ; v_rep.unrelateAcrossR4500From( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_rep != null) {
v_rep.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

InterfaceOperation_c  v_operation = null;
for ( int i55222 = 0; i55222 < v_operations.length; i55222++)
{
  v_operation = v_operations[i55222] ;

  class RequiredExecutableProperty_test55855_c implements ClassQueryInterface_c
  {
	RequiredExecutableProperty_test55855_c( java.util.UUID         p55856 ) {
		m_p55856 = p55856;
	}
	private java.util.UUID         m_p55856;
	public boolean evaluate (Object candidate)
	{
		RequiredExecutableProperty_c selected = (RequiredExecutableProperty_c)candidate;
		return (selected.getRequirement_id().equals(m_p55856)) ;
	}
  }
RequiredExecutableProperty_c v_rep = RequiredExecutableProperty_c.getOneSPR_REPOnR4500(ExecutableProperty_c.getManyC_EPsOnR4004(v_operation), new RequiredExecutableProperty_test55855_c(v_requirement.getRequirement_id()));


if ( (  (v_rep == null)) )
{

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4004(v_operation);


RequiredExecutableProperty_c v_req_ep = new RequiredExecutableProperty_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_req_ep));


RequiredOperation_c v_req_operation = new RequiredOperation_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_req_operation));


if (v_req_operation != null) {
v_req_operation.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_req_ep != null) {
  v_req_ep.relateAcrossR4500To( v_requirement ) ;   v_req_ep.relateAcrossR4500To( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_req_operation != null) {
  v_req_operation.relateAcrossR4502To(v_req_ep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

RequiredSignal_c [] v_requiredSignals = RequiredSignal_c.getManySPR_RSsOnR4502(RequiredExecutableProperty_c.getManySPR_REPsOnR4500(v_requirement));


RequiredSignal_c  v_requiredSignal = null;
for ( int i55223 = 0; i55223 < v_requiredSignals.length; i55223++)
{
  v_requiredSignal = v_requiredSignals[i55223] ;

RequiredExecutableProperty_c v_rep = RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_requiredSignal);


ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4500(v_rep);


Interface_c v_iface = Interface_c.getOneC_IOnR4003(v_ep);


if ( (  (v_ep == null) || Util_c.Isproxy(			    
v_ep.Converttoinstance()) ||   (v_iface == null) || Util_c.Isproxy(			    
v_iface.Converttoinstance())) )
{

if (v_rep != null) {
v_rep.unrelateAcrossR4500From( v_requirement ) ; v_rep.unrelateAcrossR4500From( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_rep != null) {
v_rep.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

InterfaceSignal_c  v_signal = null;
for ( int i55224 = 0; i55224 < v_signals.length; i55224++)
{
  v_signal = v_signals[i55224] ;

  class RequiredExecutableProperty_test55857_c implements ClassQueryInterface_c
  {
	RequiredExecutableProperty_test55857_c( java.util.UUID         p55858 ) {
		m_p55858 = p55858;
	}
	private java.util.UUID         m_p55858;
	public boolean evaluate (Object candidate)
	{
		RequiredExecutableProperty_c selected = (RequiredExecutableProperty_c)candidate;
		return (selected.getRequirement_id().equals(m_p55858)) ;
	}
  }
RequiredExecutableProperty_c v_rep = RequiredExecutableProperty_c.getOneSPR_REPOnR4500(ExecutableProperty_c.getManyC_EPsOnR4004(v_signal), new RequiredExecutableProperty_test55857_c(v_requirement.getRequirement_id()));


if ( (  (v_rep == null)) )
{

ExecutableProperty_c v_ep = ExecutableProperty_c.getOneC_EPOnR4004(v_signal);


RequiredExecutableProperty_c v_req_ep = new RequiredExecutableProperty_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_req_ep));


RequiredSignal_c v_req_signal = new RequiredSignal_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_req_signal));


if (v_req_signal != null) {
v_req_signal.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_req_ep != null) {
  v_req_ep.relateAcrossR4500To( v_requirement ) ;   v_req_ep.relateAcrossR4500To( v_ep ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_req_signal != null) {
  v_req_signal.relateAcrossR4502To(v_req_ep);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End synchronizeSignalsAndOperations
  public  void Migrateexecutableproperties()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Migrateexecutableproperties") ; 
               final ModelRoot modelRoot = getModelRoot();
Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


if ( (  (v_provision != null)) )
{

ProvidedExecutableProperty_c [] v_peps = ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(v_provision);


ProvidedExecutableProperty_c  v_pep = null;
for ( int i55225 = 0; i55225 < v_peps.length; i55225++)
{
  v_pep = v_peps[i55225] ;

if (v_pep != null) {
v_pep.Migrateexecutableproperty() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

if ( (  (v_requirement != null)) )
{

RequiredExecutableProperty_c [] v_reps = RequiredExecutableProperty_c.getManySPR_REPsOnR4500(v_requirement);


RequiredExecutableProperty_c  v_rep = null;
for ( int i55226 = 0; i55226 < v_reps.length; i55226++)
{
  v_rep = v_reps[i55226] ;

if (v_rep != null) {
v_rep.Migrateexecutableproperty() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End migrateExecutableProperties
  public  boolean      Interfacepreciselymatches(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Interfacepreciselymatches") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


Component_c v_comp = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


Interface_c [] v_resolvedInterfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_pkg)));


if ( (  (v_resolvedInterfaces.length == 0)) )
{

v_resolvedInterfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_comp)));



}

Interface_c  v_interface = null;
for ( int i55227 = 0; i55227 < v_resolvedInterfaces.length; i55227++)
{
  v_interface = v_resolvedInterfaces[i55227] ;

if ( (v_interface.getId().equals(p_Id)) )
{

ExecutableProperty_c [] v_eps = ExecutableProperty_c.getManyC_EPsOnR4003(v_interface);


ProvidedExecutableProperty_c [] v_peps = ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(Provision_c.getManyC_PsOnR4009(this));


if ( (  (v_peps.length != 0)) )
{

if ( (  (v_peps.length) !=   (v_eps.length)) )
{

return false;



}

boolean      v_foundMatch = false ;


ProvidedExecutableProperty_c  v_pep = null;
for ( int i55228 = 0; i55228 < v_peps.length; i55228++)
{
  v_pep = v_peps[i55228] ;

ExecutableProperty_c v_epProxy = ExecutableProperty_c.getOneC_EPOnR4501(v_pep);


ExecutableProperty_c  v_ep = null;
for ( int i55229 = 0; i55229 < v_eps.length; i55229++)
{
  v_ep = v_eps[i55229] ;

if ( (v_ep.getName().equals(v_epProxy.Getcachedname())) )
{

InterfaceOperation_c v_iop = InterfaceOperation_c.getOneC_IOOnR4004(v_ep);


if ( (  (v_iop != null)) )
{

ProvidedOperation_c v_providedOp = ProvidedOperation_c.getOneSPR_POOnR4503(v_pep);


if ( (  (v_providedOp != null)) )
{

v_foundMatch = true ;



}

else
{

v_foundMatch = false ;



}


}

else
{

InterfaceSignal_c v_as = InterfaceSignal_c.getOneC_ASOnR4004(v_ep);


if ( (  (v_as != null)) )
{

ProvidedSignal_c v_providedSignal = ProvidedSignal_c.getOneSPR_PSOnR4503(v_pep);


if ( (  (v_providedSignal != null)) )
{

v_foundMatch = true ;



}

else
{

v_foundMatch = false ;



}


}


}


}


}

if ( (  !v_foundMatch) )
{

return false;



}


}

return true;



}

RequiredExecutableProperty_c [] v_reps = RequiredExecutableProperty_c.getManySPR_REPsOnR4500(Requirement_c.getManyC_RsOnR4009(this));


if ( (  (v_reps.length != 0)) )
{

if ( (  (v_reps.length) !=   (v_eps.length)) )
{

return false;



}

boolean      v_foundMatch = false ;


RequiredExecutableProperty_c  v_rep = null;
for ( int i55230 = 0; i55230 < v_reps.length; i55230++)
{
  v_rep = v_reps[i55230] ;

ExecutableProperty_c v_epProxy = ExecutableProperty_c.getOneC_EPOnR4500(v_rep);


ExecutableProperty_c  v_ep = null;
for ( int i55231 = 0; i55231 < v_eps.length; i55231++)
{
  v_ep = v_eps[i55231] ;

if ( (v_ep.getName().equals(v_epProxy.Getcachedname())) )
{

InterfaceOperation_c v_iop = InterfaceOperation_c.getOneC_IOOnR4004(v_ep);


if ( (  (v_iop != null)) )
{

RequiredOperation_c v_requiredOp = RequiredOperation_c.getOneSPR_ROOnR4502(v_rep);


if ( (  (v_requiredOp != null)) )
{

v_foundMatch = true ;



}

else
{

v_foundMatch = false ;



}


}

else
{

InterfaceSignal_c v_as = InterfaceSignal_c.getOneC_ASOnR4004(v_ep);


if ( (  (v_as != null)) )
{

RequiredSignal_c v_requiredSignal = RequiredSignal_c.getOneSPR_RSOnR4502(v_rep);


if ( (  (v_requiredSignal != null)) )
{

v_foundMatch = true ;



}

else
{

v_foundMatch = false ;



}


}


}


}


}

if ( (  !v_foundMatch) )
{

return false;



}


}

return true;



}


}


}

return false;



   } // End interfacePreciselyMatches
  public  void Synchronize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Synchronize") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


if ( (  (v_interface != null)) )
{

boolean      v_isTornDown = Util_c.Isproxy(			    
v_interface.Converttoinstance()) ;


if ( (  !v_isTornDown) )
{

InterfacePackage_c v_pkg = InterfacePackage_c.getOneIP_IPOnR4303(v_interface);


PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(v_interface);


if ( (  (v_pkg == null) &&   (v_pe == null)) )
{

v_isTornDown = true ;



}


}

if ( (v_isTornDown) )
{

Unformalize(			    
false ) ;


return ;



}

Synchronizesignalsandoperations() ;



}


   } // End synchronize
  public  void Collectreferencesforsynchronization(final Object p_Referencelist,final int  p_Synctype)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Collectreferencesforsynchronization") ; 
               final ModelRoot modelRoot = getModelRoot();
Provision_c v_provision = Provision_c.getOneC_POnR4009(this);


if ( (  (v_provision != null)) )
{

Util_c.Addelementtolist(			    
v_provision.Converttoinstance()			    
,p_Referencelist ) ;


if (v_provision != null) {
v_provision.Collectreferencesforsynchronization(			    
p_Referencelist			    
,p_Synctype ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Requirement_c v_requirement = Requirement_c.getOneC_ROnR4009(this);


if ( (  (v_requirement != null)) )
{

Util_c.Addelementtolist(			    
v_requirement.Converttoinstance()			    
,p_Referencelist ) ;


if (v_requirement != null) {
v_requirement.Collectreferencesforsynchronization(			    
p_Referencelist			    
,p_Synctype ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End collectReferencesForSynchronization
  public  boolean      Isreferringtodefaultinterface()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Isreferringtodefaultinterface") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_interface = Interface_c.getOneC_IOnR4012(this);


if ( (  (v_interface != null)) )
{

return Util_c.Isproxy(			    
v_interface.Converttoinstance());



}

return true;



   } // End isReferringToDefaultInterface
  public  boolean      Canrefertointerface()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Reference", " Operation entered: InterfaceReference::Canrefertointerface") ; 
               final ModelRoot modelRoot = getModelRoot();
boolean      v_isInGenericPkg = false ;


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)))));


if ( (  (v_system == null)) )
{

Component_c v_component = Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this));


if ( (  (v_component != null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent)));



}


}

if ( (  (v_system != null)) )
{

v_isInGenericPkg = true ;



}

if ( (v_isInGenericPkg) )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


if ( (  (v_package != null)) )
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,""			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.INTERFACE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  class SearchResultSet_test55859_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return (selected.getType() == Elementtypeconstants_c.INTERFACE) ;
	}
  }
SearchResultSet_c [] v_srs = SearchResultSet_c.getManyPE_SRSsOnR8005(v_package, new SearchResultSet_test55859_c());


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_srs)));


Interface_c  v_interface = null;
for ( int i55232 = 0; i55232 < v_interfaces.length; i55232++)
{
  v_interface = v_interfaces[i55232] ;

if ( (v_interface.getId().equals(getFormal_interface_id())) )
{

return true;



}


}


}

Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this))));


if ( (  (v_component != null)) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,""			    
,v_component.getId()			    
,Elementtypeconstants_c.INTERFACE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  class ComponentResultSet_test55860_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return (selected.getType() == Elementtypeconstants_c.INTERFACE) ;
	}
  }
ComponentResultSet_c [] v_crs = ComponentResultSet_c.getManyPE_CRSsOnR8007(v_component, new ComponentResultSet_test55860_c());


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_crs)));


Interface_c  v_interface = null;
for ( int i55233 = 0; i55233 < v_interfaces.length; i55233++)
{
  v_interface = v_interfaces[i55233] ;

if ( (v_interface.getId().equals(getFormal_interface_id())) )
{

return true;



}


}


}


}

else
{

ComponentPackage_c v_componentPackage = ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4010(Port_c.getOneC_POOnR4016(this)));


v_system = SystemModel_c.getOneS_SYSOnR4606(v_componentPackage);


if ( (  (v_system != null)) )
{

InterfacePackage_c [] v_diagrams = InterfacePackage_c.getManyIP_IPsOnR4304(v_system);


InterfacePackage_c  v_diagram = null;
for ( int i55234 = 0; i55234 < v_diagrams.length; i55234++)
{
  v_diagram = v_diagrams[i55234] ;

if ( (Canuseinterfacesinpackage(			    
v_diagram.getPackage_id())) )
{

Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4303(v_diagram);


Interface_c  v_interface = null;
for ( int i55235 = 0; i55235 < v_interfaces.length; i55235++)
{
  v_interface = v_interfaces[i55235] ;

if ( (v_interface.getId().equals(getFormal_interface_id())) )
{

return true;



}


}


}


}


}


}

return false;



   } // End canReferToInterface

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Interface Reference
