      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.StructureMember_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_STRUCTURE_MEMBER extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class StructureMember_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public StructureMember_c(ModelRoot modelRoot,
       java.util.UUID         p_m_member_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_parent_dt_dt_id,
       java.util.UUID         p_m_dt_id,
       java.util.UUID         p_m_previous_member_id,
       String       p_m_dimensions)
  {
    super(modelRoot);
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_member_id = IdAssigner.preprocessUUID(p_m_member_id);
       //extract 28 bit value only            
       m_member_idLongBased = 0xfffffff & p_m_member_id.getLeastSignificantBits();
       m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_parent_dt_dt_id = IdAssigner.preprocessUUID(p_m_parent_dt_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_previous_member_id = IdAssigner.preprocessUUID(p_m_previous_member_id);
        
    setUniqueId(m_member_id);
    Object [] key = {m_member_id,m_parent_dt_dt_id};
    addInstanceToMap(key);
  }
  static public StructureMember_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_member_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_parent_dt_dt_id,
       java.util.UUID         p_m_dt_id,
       java.util.UUID         p_m_previous_member_id,
       String       p_m_dimensions, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);
      StructureMember_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_member_id,p_m_parent_dt_dt_id};
          new_inst = (StructureMember_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_member_id = IdAssigner.preprocessUUID(p_m_member_id);
       //extract 28 bit value only            
       new_inst.m_member_idLongBased = 0xfffffff & p_m_member_id.getLeastSignificantBits();
       new_inst.m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_parent_dt_dt_id = IdAssigner.preprocessUUID(p_m_parent_dt_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_previous_member_id = IdAssigner.preprocessUUID(p_m_previous_member_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new StructureMember_c(modelRoot,
p_m_member_id,
p_m_name,
p_m_descrip,
p_m_parent_dt_dt_id,
p_m_dt_id,
p_m_previous_member_id,
p_m_dimensions
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public StructureMember_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_member_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_parent_dt_dt_id,
       java.util.UUID         p_m_dt_id,
       java.util.UUID         p_m_previous_member_id,
       String       p_m_dimensions){
    InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);
    StructureMember_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_member_id
        ,
        p_m_parent_dt_dt_id
            };
        source = (StructureMember_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_member_id = IdAssigner.preprocessUUID(p_m_member_id);
       //extract 28 bit value only            
       source.m_member_idLongBased = 0xfffffff & p_m_member_id.getLeastSignificantBits();
       source.m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_parent_dt_dt_id = IdAssigner.preprocessUUID(p_m_parent_dt_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_previous_member_id = IdAssigner.preprocessUUID(p_m_previous_member_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    StructureMember_c new_inst = new StructureMember_c(modelRoot,
p_m_member_id,
p_m_name,
p_m_descrip,
p_m_parent_dt_dt_id,
p_m_dt_id,
p_m_previous_member_id,
p_m_dimensions
);
    return new_inst;
  }
  public StructureMember_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_name = "";   
     m_descrip = "";   
     m_member_id = idAssigner.createUUID();
     m_dimensions = "";   
     m_parent_dt_dt_id = IdAssigner.NULL_UUID;   
     m_dt_id = IdAssigner.NULL_UUID;   
     m_previous_member_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_member_id);
    Object [] key = {m_member_id,m_parent_dt_dt_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_member_id,m_parent_dt_dt_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_member_id !=  p_newKey ){
	
		m_member_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof StructureMember_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof StructureMember_c)) {
           return false;
       }
       
       StructureMember_c me = (StructureMember_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getMember_id()) || IdAssigner.NULL_UUID.equals(((StructureMember_c)elem).getMember_id())) && this != elem)) {
      	return false;
      }
      if (!getMember_id().equals(((StructureMember_c)elem).getMember_id())) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getParent_dt_dt_id()) || IdAssigner.NULL_UUID.equals(((StructureMember_c)elem).getParent_dt_dt_id())) && this != elem)) {
      	return false;
      }
      if (!getParent_dt_dt_id().equals(((StructureMember_c)elem).getParent_dt_dt_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof StructureMember_c)) {
           return false;
       }
       
       StructureMember_c me = (StructureMember_c)elem;
      if (!getMember_id().equals(((StructureMember_c)elem).getMember_id())) return false;
      if (!getParent_dt_dt_idCachedValue().equals(((StructureMember_c)elem).getParent_dt_dt_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private String       m_name ;
  private String       m_descrip ;
  private java.util.UUID         m_member_id ;
  private long m_member_idLongBased ;
  private String       m_dimensions ;
  private java.util.UUID         m_parent_dt_dt_id ;
  private java.util.UUID         m_dt_id ;
  private java.util.UUID         m_previous_member_id ;
      
// declare association references from this class
  
  
    
// referring navigation

StructuredDataType_c HasParentStructuredDataType ;
public void relateAcrossR44To(StructuredDataType_c target)
{
	relateAcrossR44To(target, true);
}
public void relateAcrossR44To(StructuredDataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == HasParentStructuredDataType) return;  // already related

    if ( HasParentStructuredDataType != target ) {
    
    Object oldKey = getInstanceKey();

    if (HasParentStructuredDataType != null) {
    
        HasParentStructuredDataType.clearBackPointerR44To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StructureMember_c.relateAcrossR44To(StructuredDataType_c target)", 
			"Relate performed across R44 from Structure Member to Structured Data Type without unrelate of prior instance.");  
		}
    }
                
    	HasParentStructuredDataType = target ;
        if(IdAssigner.NULL_UUID.equals(target.getDt_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_parent_dt_dt_id = target.getDt_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR44To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "44", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR44From(StructuredDataType_c target)
{
	unrelateAcrossR44From(target, true);
}
public void unrelateAcrossR44From(StructuredDataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (HasParentStructuredDataType == null) return;  // already unrelated
	
	if (target != HasParentStructuredDataType) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R44", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR44To(this);
    }
    

      if(HasParentStructuredDataType != null) {
      
        m_parent_dt_dt_id = HasParentStructuredDataType.getDt_id();
        if(IdAssigner.NULL_UUID.equals(m_parent_dt_dt_id))
        {
          m_parent_dt_dt_id = HasParentStructuredDataType.getDt_idCachedValue();
        }       
        HasParentStructuredDataType = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "44", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StructureMember_c getOneS_MBROnR44(StructuredDataType_c [] targets)
{
    return getOneS_MBROnR44(targets, null);
}

public static StructureMember_c getOneS_MBROnR44(StructuredDataType_c [] targets, ClassQueryInterface_c test)
{
    StructureMember_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_MBROnR44(targets[i], test);
        }
    }

    return ret_val;
}

public static StructureMember_c getOneS_MBROnR44(StructuredDataType_c target)
{
  return getOneS_MBROnR44(target, null);
}

public static StructureMember_c getOneS_MBROnR44(StructuredDataType_c target, boolean loadComponent)
{
    return getOneS_MBROnR44(target.getModelRoot(), target, null, loadComponent);
}

public static StructureMember_c getOneS_MBROnR44(StructuredDataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_MBROnR44(target.getModelRoot(), target, test);
  }
  return null;
}

public static StructureMember_c getOneS_MBROnR44(ModelRoot modelRoot, StructuredDataType_c target, ClassQueryInterface_c test)
{
	return getOneS_MBROnR44(modelRoot, target, test, true);
}

public static StructureMember_c getOneS_MBROnR44(ModelRoot modelRoot, StructuredDataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_MBROnR44(modelRoot,target,test);
}
private static StructureMember_c find_getOneS_MBROnR44(ModelRoot modelRoot, StructuredDataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_HasMemberStructureMemberHasMember_R44) {
	    for ( int i = 0; i < target.backPointer_HasMemberStructureMemberHasMember_R44.size(); ++i ) {
	      StructureMember_c source = (StructureMember_c)target.backPointer_HasMemberStructureMemberHasMember_R44.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static StructureMember_c [] getManyS_MBRsOnR44(StructuredDataType_c [] targets)
{
  return getManyS_MBRsOnR44(targets, null);
}
public static StructureMember_c [] getManyS_MBRsOnR44(StructuredDataType_c [] targets, boolean loadComponent)
{
  return getManyS_MBRsOnR44(targets, null, loadComponent);
}
public static StructureMember_c [] getManyS_MBRsOnR44(StructuredDataType_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_MBRsOnR44(targets, test, true);
}

public static StructureMember_c [] getManyS_MBRsOnR44(StructuredDataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StructureMember_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_HasMemberStructureMemberHasMember_R44) {
	    for (int j = 0; j < targets[i].backPointer_HasMemberStructureMemberHasMember_R44.size(); ++j) {
	      StructureMember_c source = (StructureMember_c)targets[i].backPointer_HasMemberStructureMemberHasMember_R44.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	StructureMember_c[] ret_set = new StructureMember_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StructureMember_c[0];
  }
  }

public static StructureMember_c [] getManyS_MBRsOnR44(StructuredDataType_c target)
{
  return getManyS_MBRsOnR44(target, null);
}

public static StructureMember_c [] getManyS_MBRsOnR44(StructuredDataType_c target, boolean loadComponent)
{
  return getManyS_MBRsOnR44(target, null, loadComponent);
}

public static StructureMember_c [] getManyS_MBRsOnR44(StructuredDataType_c target, ClassQueryInterface_c test)
{
	return getManyS_MBRsOnR44(target, test, true);
}

public static StructureMember_c [] getManyS_MBRsOnR44(StructuredDataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new StructureMember_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_HasMemberStructureMemberHasMember_R44) {
    for (int i = 0; i < target.backPointer_HasMemberStructureMemberHasMember_R44.size(); ++i) {
      StructureMember_c source = (StructureMember_c)target.backPointer_HasMemberStructureMemberHasMember_R44.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		StructureMember_c[] ret_set = new StructureMember_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new StructureMember_c[0];
	}
  }


  
    
// referring navigation

DataType_c IsDefinedByDataType ;
public void relateAcrossR45To(DataType_c target)
{
	relateAcrossR45To(target, true);
}
public void relateAcrossR45To(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsDefinedByDataType) return;  // already related

    if ( IsDefinedByDataType != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsDefinedByDataType != null) {
        UmlProblem.removeXtUMLProblem(this, IsDefinedByDataType);
    
        IsDefinedByDataType.clearBackPointerR45To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StructureMember_c.relateAcrossR45To(DataType_c target)", 
			"Relate performed across R45 from Structure Member to Data Type without unrelate of prior instance.");  
		}
    }
                
    	IsDefinedByDataType = target ;
        if(IdAssigner.NULL_UUID.equals(target.getDt_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_dt_id = target.getDt_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR45To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "45", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR45From(DataType_c target)
{
	unrelateAcrossR45From(target, true);
}
public void unrelateAcrossR45From(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsDefinedByDataType == null) return;  // already unrelated
	
	if (target != IsDefinedByDataType) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R45", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR45To(this);
    }
    

      if(IsDefinedByDataType != null) {
      
        m_dt_id = IsDefinedByDataType.getDt_id();
        if(IdAssigner.NULL_UUID.equals(m_dt_id))
        {
          m_dt_id = IsDefinedByDataType.getDt_idCachedValue();
        }       
        IsDefinedByDataType = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "45", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StructureMember_c getOneS_MBROnR45(DataType_c [] targets)
{
    return getOneS_MBROnR45(targets, null);
}

public static StructureMember_c getOneS_MBROnR45(DataType_c [] targets, ClassQueryInterface_c test)
{
    StructureMember_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_MBROnR45(targets[i], test);
        }
    }

    return ret_val;
}

public static StructureMember_c getOneS_MBROnR45(DataType_c target)
{
  return getOneS_MBROnR45(target, null);
}

public static StructureMember_c getOneS_MBROnR45(DataType_c target, boolean loadComponent)
{
    return getOneS_MBROnR45(target.getModelRoot(), target, null, loadComponent);
}

public static StructureMember_c getOneS_MBROnR45(DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_MBROnR45(target.getModelRoot(), target, test);
  }
  return null;
}

public static StructureMember_c getOneS_MBROnR45(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
	return getOneS_MBROnR45(modelRoot, target, test, true);
}

public static StructureMember_c getOneS_MBROnR45(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  StructureMember_c result = null;
  
  result=find_getOneS_MBROnR45(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,StructureMember_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_MBROnR45(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static StructureMember_c find_getOneS_MBROnR45(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45) {
	    for ( int i = 0; i < target.backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45.size(); ++i ) {
	      StructureMember_c source = (StructureMember_c)target.backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static StructureMember_c [] getManyS_MBRsOnR45(DataType_c [] targets)
{
  return getManyS_MBRsOnR45(targets, null);
}
public static StructureMember_c [] getManyS_MBRsOnR45(DataType_c [] targets, boolean loadComponent)
{
  return getManyS_MBRsOnR45(targets, null, loadComponent);
}
public static StructureMember_c [] getManyS_MBRsOnR45(DataType_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_MBRsOnR45(targets, test, true);
}

public static StructureMember_c [] getManyS_MBRsOnR45(DataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StructureMember_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, StructureMember_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45) {
	    for (int j = 0; j < targets[i].backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45.size(); ++j) {
	      StructureMember_c source = (StructureMember_c)targets[i].backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	StructureMember_c[] ret_set = new StructureMember_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StructureMember_c[0];
  }
  }

public static StructureMember_c [] getManyS_MBRsOnR45(DataType_c target)
{
  return getManyS_MBRsOnR45(target, null);
}

public static StructureMember_c [] getManyS_MBRsOnR45(DataType_c target, boolean loadComponent)
{
  return getManyS_MBRsOnR45(target, null, loadComponent);
}

public static StructureMember_c [] getManyS_MBRsOnR45(DataType_c target, ClassQueryInterface_c test)
{
	return getManyS_MBRsOnR45(target, test, true);
}

public static StructureMember_c [] getManyS_MBRsOnR45(DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new StructureMember_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, StructureMember_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45) {
    for (int i = 0; i < target.backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45.size(); ++i) {
      StructureMember_c source = (StructureMember_c)target.backPointer_DefinesTheTypeOfStructureMemberDefinesTheTypeOf_R45.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		StructureMember_c[] ret_set = new StructureMember_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new StructureMember_c[0];
	}
  }


  
    
// referring navigation

StructureMember_c SucceedsStructureMember ;
public void relateAcrossR46ToSucceeds(StructureMember_c target)
{
	relateAcrossR46ToSucceeds(target, true);
}
public void relateAcrossR46ToSucceeds(StructureMember_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == SucceedsStructureMember) return;  // already related

    if ( SucceedsStructureMember != target ) {
    
    Object oldKey = getInstanceKey();

    if (SucceedsStructureMember != null) {
    
        SucceedsStructureMember.clearBackPointerR46ToPrecedes(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StructureMember_c.relateAcrossR46ToSucceeds(StructureMember_c target)", 
			"Relate performed across R46 from Structure Member to Structure Member without unrelate of prior instance.");  
		}
    }
                
    	SucceedsStructureMember = target ;
        if(IdAssigner.NULL_UUID.equals(target.getParent_dt_dt_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_parent_dt_dt_id = target.getParent_dt_dt_idCachedValue();
        }
        m_previous_member_id = target.getMember_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR46ToPrecedes(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "46", "Succeeds");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR46FromSucceeds(StructureMember_c target)
{
	unrelateAcrossR46FromSucceeds(target, true);
}
public void unrelateAcrossR46FromSucceeds(StructureMember_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (SucceedsStructureMember == null) return;  // already unrelated
	
	if (target != SucceedsStructureMember) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R46", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR46ToPrecedes(this);
    }
    

      if(SucceedsStructureMember != null) {
      
        m_parent_dt_dt_id = SucceedsStructureMember.getParent_dt_dt_id();
        if(IdAssigner.NULL_UUID.equals(m_parent_dt_dt_id))
        {
          m_parent_dt_dt_id = SucceedsStructureMember.getParent_dt_dt_idCachedValue();
        }       
        m_previous_member_id = SucceedsStructureMember.getMember_id();
        SucceedsStructureMember = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "46", "Succeeds");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StructureMember_c getOneS_MBROnR46Precedes(StructureMember_c [] targets)
{
    return getOneS_MBROnR46Precedes(targets, null);
}

public static StructureMember_c getOneS_MBROnR46Precedes(StructureMember_c [] targets, ClassQueryInterface_c test)
{
    StructureMember_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_MBROnR46Precedes(targets[i], test);
        }
    }

    return ret_val;
}

public static StructureMember_c getOneS_MBROnR46Precedes(StructureMember_c target)
{
  return getOneS_MBROnR46Precedes(target, null);
}

public static StructureMember_c getOneS_MBROnR46Precedes(StructureMember_c target, boolean loadComponent)
{
    return getOneS_MBROnR46Precedes(target.getModelRoot(), target, null, loadComponent);
}

public static StructureMember_c getOneS_MBROnR46Precedes(StructureMember_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_MBROnR46Precedes(target.getModelRoot(), target, test);
  }
  return null;
}

public static StructureMember_c getOneS_MBROnR46Precedes(ModelRoot modelRoot, StructureMember_c target, ClassQueryInterface_c test)
{
	return getOneS_MBROnR46Precedes(modelRoot, target, test, true);
}

public static StructureMember_c getOneS_MBROnR46Precedes(ModelRoot modelRoot, StructureMember_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_MBROnR46Precedes(modelRoot,target,test);
}
private static StructureMember_c find_getOneS_MBROnR46Precedes(ModelRoot modelRoot, StructureMember_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    StructureMember_c source = (StructureMember_c)target.backPointer_PrecedesStructureMemberPrecedes_R46;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static StructureMember_c [] getManyS_MBRsOnR46Precedes(StructureMember_c [] targets)
{
  return getManyS_MBRsOnR46Precedes(targets, null);
}
public static StructureMember_c [] getManyS_MBRsOnR46Precedes(StructureMember_c [] targets, boolean loadComponent)
{
  return getManyS_MBRsOnR46Precedes(targets, null, loadComponent);
}
public static StructureMember_c [] getManyS_MBRsOnR46Precedes(StructureMember_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_MBRsOnR46Precedes(targets, test, true);
}

public static StructureMember_c [] getManyS_MBRsOnR46Precedes(StructureMember_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StructureMember_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      StructureMember_c source = (StructureMember_c)targets[i].backPointer_PrecedesStructureMemberPrecedes_R46;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	StructureMember_c[] ret_set = new StructureMember_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StructureMember_c[0];
  }
  }

public static StructureMember_c [] getManyS_MBRsOnR46Precedes(StructureMember_c target)
{
  if (target != null) {
    StructureMember_c [] targetArray = new StructureMember_c[1];
    targetArray[0] = target;
    return getManyS_MBRsOnR46Precedes(targetArray);
  } else {
    StructureMember_c [] result = new StructureMember_c [0] ;
  return result ;
}
}

public static StructureMember_c [] getManyS_MBRsOnR46Precedes(StructureMember_c target, boolean loadComponent)
{
  if (target != null) {
    StructureMember_c [] targetArray = new StructureMember_c[1];
    targetArray[0] = target;
    return getManyS_MBRsOnR46Precedes(targetArray, loadComponent);
  } else {
    StructureMember_c [] result = new StructureMember_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<MemberValueReference_c> backPointer_MemberValueReference_R836 = new ArrayList<MemberValueReference_c>();

public void setMemberValueReferenceOrderInChildListR836(MemberValueReference_c target, int index) {
	unrelateAcrossR836From(target);
	MemberValueReference_c[] elements = MemberValueReference_c.getManyV_MVLsOnR836(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR836From((MemberValueReference_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR836To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR836To((MemberValueReference_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR836To(MemberValueReference_c target)
{
  if (target != null) {
    target.relateAcrossR836To(this, true) ;
  }
}

public void relateAcrossR836To(MemberValueReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR836To(this, notifyChanges) ;
  }
}

public void setBackPointerR836To(MemberValueReference_c target)
{
  	synchronized (backPointer_MemberValueReference_R836) {
		backPointer_MemberValueReference_R836.add(target);
	}
}

public void unrelateAcrossR836From(MemberValueReference_c target)
{
  if (target != null) {
    target.unrelateAcrossR836From(this, true) ;
  }
}

public void unrelateAcrossR836From(MemberValueReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR836From(this, notifyChanges) ;
  }
}

public void clearBackPointerR836To(MemberValueReference_c target)
{
  synchronized (backPointer_MemberValueReference_R836) {
	    backPointer_MemberValueReference_R836.remove(target);
	}
}

public static StructureMember_c getOneS_MBROnR836(MemberValueReference_c [] targets)
{
    return getOneS_MBROnR836(targets, null);
}

public static StructureMember_c getOneS_MBROnR836(MemberValueReference_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_MBROnR836(targets, test, true);
}

public static StructureMember_c getOneS_MBROnR836(MemberValueReference_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StructureMember_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StructureMember_c candidate_val = getOneS_MBROnR836(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_MBROnR836(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StructureMember_c getOneS_MBROnR836(MemberValueReference_c target)
{
	return getOneS_MBROnR836(target, true);
}
public static StructureMember_c getOneS_MBROnR836(MemberValueReference_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsValueOfStructureMember ;
  } else {
    return null;
  }
}

public static StructureMember_c [] getManyS_MBRsOnR836(MemberValueReference_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_MBRsOnR836(targets, test, true);
}

public static StructureMember_c [] getManyS_MBRsOnR836(MemberValueReference_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StructureMember_c[0];
  
  
  LinkedHashSet<StructureMember_c> elementsSet = new LinkedHashSet<StructureMember_c>();
  for (int i = 0; i < targets.length; i++) {
    StructureMember_c associate = targets[i].IsValueOfStructureMember;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StructureMember_c[] result = new StructureMember_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StructureMember_c [] getManyS_MBRsOnR836(MemberValueReference_c [] targets)
{
  return getManyS_MBRsOnR836(targets, null);
}

public static StructureMember_c [] getManyS_MBRsOnR836(MemberValueReference_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    MemberValueReference_c [] targetArray = new MemberValueReference_c[1];
    targetArray[0] = target;
    return getManyS_MBRsOnR836(targetArray, test, loadComponent);
  } else {
    StructureMember_c [] result = new StructureMember_c [0] ;
    return result ;
  }
  
}

public static StructureMember_c [] getManyS_MBRsOnR836(MemberValueReference_c target,
    ClassQueryInterface_c test)
{
    return getManyS_MBRsOnR836(target, null, true);
}

public static StructureMember_c [] getManyS_MBRsOnR836(MemberValueReference_c target)
{
    return getManyS_MBRsOnR836(target, null, true);
}

public static StructureMember_c [] getManyS_MBRsOnR836(MemberValueReference_c target, boolean loadComponent)
{
    return getManyS_MBRsOnR836(target, null, loadComponent);
}


    
  
  
// referred to navigation

StructureMember_c backPointer_PrecedesStructureMemberPrecedes_R46;

public void setStructureMemberOrderInChildListR46(StructureMember_c target, int index) {
	unrelateAcrossR46FromPrecedes(target);
	StructureMember_c[] elements = StructureMember_c.getManyS_MBRsOnR46Precedes(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR46FromPrecedes((StructureMember_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR46ToPrecedes(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR46ToPrecedes((StructureMember_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR46ToPrecedes(StructureMember_c target)
{
  if (target != null) {
    target.relateAcrossR46ToSucceeds(this, true) ;
  }
}

public void relateAcrossR46ToPrecedes(StructureMember_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR46ToSucceeds(this, notifyChanges) ;
  }
}

public void setBackPointerR46ToPrecedes(StructureMember_c target)
{
    backPointer_PrecedesStructureMemberPrecedes_R46 = target;
}

public void unrelateAcrossR46FromPrecedes(StructureMember_c target)
{
  if (target != null) {
    target.unrelateAcrossR46FromSucceeds(this, true) ;
  }
}

public void unrelateAcrossR46FromPrecedes(StructureMember_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR46FromSucceeds(this, notifyChanges) ;
  }
}

public void clearBackPointerR46ToPrecedes(StructureMember_c target)
{
	if (target == backPointer_PrecedesStructureMemberPrecedes_R46) {
		backPointer_PrecedesStructureMemberPrecedes_R46 = null;
	}
}

public static StructureMember_c getOneS_MBROnR46Succeeds(StructureMember_c [] targets)
{
    return getOneS_MBROnR46Succeeds(targets, null);
}

public static StructureMember_c getOneS_MBROnR46Succeeds(StructureMember_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_MBROnR46Succeeds(targets, test, true);
}

public static StructureMember_c getOneS_MBROnR46Succeeds(StructureMember_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StructureMember_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StructureMember_c candidate_val = getOneS_MBROnR46Succeeds(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_MBROnR46Succeeds(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StructureMember_c getOneS_MBROnR46Succeeds(StructureMember_c target)
{
	return getOneS_MBROnR46Succeeds(target, true);
}
public static StructureMember_c getOneS_MBROnR46Succeeds(StructureMember_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.SucceedsStructureMember ;
  } else {
    return null;
  }
}

public static StructureMember_c [] getManyS_MBRsOnR46Succeeds(StructureMember_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_MBRsOnR46Succeeds(targets, test, true);
}

public static StructureMember_c [] getManyS_MBRsOnR46Succeeds(StructureMember_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StructureMember_c[0];
  
  
  LinkedHashSet<StructureMember_c> elementsSet = new LinkedHashSet<StructureMember_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].SucceedsStructureMember == null)
	  targets[i].loadProxy();
    StructureMember_c associate = targets[i].SucceedsStructureMember;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StructureMember_c[] result = new StructureMember_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StructureMember_c [] getManyS_MBRsOnR46Succeeds(StructureMember_c [] targets)
{
  return getManyS_MBRsOnR46Succeeds(targets, null);
}

public static StructureMember_c [] getManyS_MBRsOnR46Succeeds(StructureMember_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    StructureMember_c [] targetArray = new StructureMember_c[1];
    targetArray[0] = target;
    return getManyS_MBRsOnR46Succeeds(targetArray, test, loadComponent);
  } else {
    StructureMember_c [] result = new StructureMember_c [0] ;
    return result ;
  }
  
}

public static StructureMember_c [] getManyS_MBRsOnR46Succeeds(StructureMember_c target,
    ClassQueryInterface_c test)
{
    return getManyS_MBRsOnR46Succeeds(target, null, true);
}

public static StructureMember_c [] getManyS_MBRsOnR46Succeeds(StructureMember_c target)
{
    return getManyS_MBRsOnR46Succeeds(target, null, true);
}

public static StructureMember_c [] getManyS_MBRsOnR46Succeeds(StructureMember_c target, boolean loadComponent)
{
    return getManyS_MBRsOnR46Succeeds(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Dimensions_c> backPointer_MayHaveDimensionsMayHave_R53 = new ArrayList<Dimensions_c>();

public void setDimensionsOrderInChildListR53(Dimensions_c target, int index) {
	unrelateAcrossR53From(target);
	Dimensions_c[] elements = Dimensions_c.getManyS_DIMsOnR53(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR53From((Dimensions_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR53To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR53To((Dimensions_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR53To(Dimensions_c target)
{
  if (target != null) {
    target.relateAcrossR53To(this, true) ;
  }
}

public void relateAcrossR53To(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR53To(this, notifyChanges) ;
  }
}

public void setBackPointerR53To(Dimensions_c target)
{
  	synchronized (backPointer_MayHaveDimensionsMayHave_R53) {
		backPointer_MayHaveDimensionsMayHave_R53.add(target);
	}
}

public void unrelateAcrossR53From(Dimensions_c target)
{
  if (target != null) {
    target.unrelateAcrossR53From(this, true) ;
  }
}

public void unrelateAcrossR53From(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR53From(this, notifyChanges) ;
  }
}

public void clearBackPointerR53To(Dimensions_c target)
{
  synchronized (backPointer_MayHaveDimensionsMayHave_R53) {
	    backPointer_MayHaveDimensionsMayHave_R53.remove(target);
	}
}

public static StructureMember_c getOneS_MBROnR53(Dimensions_c [] targets)
{
    return getOneS_MBROnR53(targets, null);
}

public static StructureMember_c getOneS_MBROnR53(Dimensions_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_MBROnR53(targets, test, true);
}

public static StructureMember_c getOneS_MBROnR53(Dimensions_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StructureMember_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StructureMember_c candidate_val = getOneS_MBROnR53(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_MBROnR53(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StructureMember_c getOneS_MBROnR53(Dimensions_c target)
{
	return getOneS_MBROnR53(target, true);
}
public static StructureMember_c getOneS_MBROnR53(Dimensions_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.SpecifiesOccurrencesOfStructureMember ;
  } else {
    return null;
  }
}

public static StructureMember_c [] getManyS_MBRsOnR53(Dimensions_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_MBRsOnR53(targets, test, true);
}

public static StructureMember_c [] getManyS_MBRsOnR53(Dimensions_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StructureMember_c[0];
  
  
  LinkedHashSet<StructureMember_c> elementsSet = new LinkedHashSet<StructureMember_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].SpecifiesOccurrencesOfStructureMember == null)
	  targets[i].loadProxy();
    StructureMember_c associate = targets[i].SpecifiesOccurrencesOfStructureMember;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StructureMember_c[] result = new StructureMember_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StructureMember_c [] getManyS_MBRsOnR53(Dimensions_c [] targets)
{
  return getManyS_MBRsOnR53(targets, null);
}

public static StructureMember_c [] getManyS_MBRsOnR53(Dimensions_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Dimensions_c [] targetArray = new Dimensions_c[1];
    targetArray[0] = target;
    return getManyS_MBRsOnR53(targetArray, test, loadComponent);
  } else {
    StructureMember_c [] result = new StructureMember_c [0] ;
    return result ;
  }
  
}

public static StructureMember_c [] getManyS_MBRsOnR53(Dimensions_c target,
    ClassQueryInterface_c test)
{
    return getManyS_MBRsOnR53(target, null, true);
}

public static StructureMember_c [] getManyS_MBRsOnR53(Dimensions_c target)
{
    return getManyS_MBRsOnR53(target, null, true);
}

public static StructureMember_c [] getManyS_MBRsOnR53(Dimensions_c target, boolean loadComponent)
{
    return getManyS_MBRsOnR53(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (HasParentStructuredDataType == null) {          
      // R44
      StructuredDataType_c relInst56336 = (StructuredDataType_c) baseRoot.getInstanceList(StructuredDataType_c.class).get(new Object[] {m_parent_dt_dt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56336 == null) {
      			relInst56336 = (StructuredDataType_c) Ooaofooa.getDefaultInstance().getInstanceList(StructuredDataType_c.class).get(new Object[] {m_parent_dt_dt_id});
      		}
			if (relInst56336 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56336 = (StructuredDataType_c) roots[i].getInstanceList(StructuredDataType_c.class).get(new Object[] {m_parent_dt_dt_id});
					if (relInst56336 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56336 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56336) && !isProxy())) {
	      relInst56336.relateAcrossR44To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsDefinedByDataType == null) {          
      // R45
      DataType_c relInst56337 = (DataType_c) baseRoot.getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56337 == null) {
      			relInst56337 = (DataType_c) Ooaofooa.getDefaultInstance().getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
      		}
			if (relInst56337 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56337 = (DataType_c) roots[i].getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
					if (relInst56337 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56337 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56337) && !isProxy())) {
	      relInst56337.relateAcrossR45To(this, notifyChanges);
	  }
	  }
	}
	          

	if (SucceedsStructureMember == null) {          
      // R46
      StructureMember_c relInst56338 = (StructureMember_c) baseRoot.getInstanceList(StructureMember_c.class).get(new Object[] {m_previous_member_id,m_parent_dt_dt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56338 == null) {
      			relInst56338 = (StructureMember_c) Ooaofooa.getDefaultInstance().getInstanceList(StructureMember_c.class).get(new Object[] {m_previous_member_id,m_parent_dt_dt_id});
      		}
			if (relInst56338 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56338 = (StructureMember_c) roots[i].getInstanceList(StructureMember_c.class).get(new Object[] {m_previous_member_id,m_parent_dt_dt_id});
					if (relInst56338 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56338 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56338) && !isProxy())) {
	      relInst56338.relateAcrossR46ToPrecedes(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R44
      // S_SDT
		  inst=HasParentStructuredDataType;
			unrelateAcrossR44From(HasParentStructuredDataType, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R45
      // S_DT
		  inst=IsDefinedByDataType;
			unrelateAcrossR45From(IsDefinedByDataType, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R46
      // S_MBR
		  inst=SucceedsStructureMember;
			unrelateAcrossR46FromSucceeds(SucceedsStructureMember, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final StructureMember_c inst = (StructureMember_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static StructureMember_c StructureMemberInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		StructureMember_c result=findStructureMemberInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,StructureMember_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findStructureMemberInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static StructureMember_c findStructureMemberInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				StructureMember_c x = (StructureMember_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static StructureMember_c StructureMemberInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return StructureMemberInstance(modelRoot,test,true);
  }
  
  public static StructureMember_c StructureMemberInstance(ModelRoot modelRoot)
  {
	 return StructureMemberInstance(modelRoot,null,true);
  }

  public static StructureMember_c [] StructureMemberInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, StructureMember_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(StructureMember_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					StructureMember_c x = (StructureMember_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				StructureMember_c[] ret_set = new StructureMember_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new StructureMember_c[0];
			}		
		} 
  }
  public static StructureMember_c [] StructureMemberInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  StructureMemberInstances(modelRoot,test,true);
  }
  public static StructureMember_c [] StructureMemberInstances(ModelRoot modelRoot)
  {
	return StructureMemberInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Structure Member.dispose call: ";
	StructuredDataType_c testR44Inst = StructuredDataType_c.getOneS_SDTOnR44(this, false);

	if ( testR44Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "44 ";
	}
	MemberValueReference_c testR836Inst = MemberValueReference_c.getOneV_MVLOnR836(this, false);

	if ( testR836Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "836 ";	
	}
	DataType_c testR45Inst = DataType_c.getOneS_DTOnR45(this, false);

	if ( testR45Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "45 ";
	}
	StructureMember_c testR46Inst = StructureMember_c.getOneS_MBROnR46Precedes(this, false);

	if ( testR46Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "46 ";	
	}
	 testR46Inst = StructureMember_c.getOneS_MBROnR46Succeeds(this, false);

	if ( testR46Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "46 ";
	}
	Dimensions_c testR53Inst = Dimensions_c.getOneS_DIMOnR53(this, false);

	if ( testR53Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "53 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Structure Member", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("member_id")){
         return true;
      }
      if(attributeName.equals("parent_dt_dt_id")){
         return true;
      }
      if(attributeName.equals("dt_id")){
         return true;
      }
      if(attributeName.equals("previous_member_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getMember_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    tempID= getParent_dt_dt_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getParent_dt_dt_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getMember_idLongBased()
  {
    if(m_member_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_member_id)){
    	return 0xfffffff & m_member_id.getLeastSignificantBits();
    }
    return m_member_idLongBased ;
  }
  public java.util.UUID getMember_id()
  {
    return m_member_id ;
  }


  public void setMember_id(java.util.UUID newValue)
  {
   m_member_id = IdAssigner.preprocessUUID(newValue);
  }
  public String getDimensions()
  {
    return m_dimensions ;
  }


  public void setDimensions(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dimensions)){
	        return;
	    }
	}else if(m_dimensions != null){
	    if(m_dimensions.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dimensions", m_dimensions, newValue,true); 
   m_dimensions = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getParent_dt_dt_idLongBased()
  {
    if ( HasParentStructuredDataType != null )
    {
      return HasParentStructuredDataType.getDt_idLongBased();
    }
    if ( SucceedsStructureMember != null )
    {
      return SucceedsStructureMember.getParent_dt_dt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getParent_dt_dt_id()
  {
    if ( HasParentStructuredDataType != null )
    {
      return HasParentStructuredDataType.getDt_id();
    }
    if ( SucceedsStructureMember != null )
    {
      return SucceedsStructureMember.getParent_dt_dt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getParent_dt_dt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_parent_dt_dt_id) )
      return m_parent_dt_dt_id;
    else
      return getParent_dt_dt_id();
  }
  
  public long getDt_idLongBased()
  {
    if ( IsDefinedByDataType != null )
    {
      return IsDefinedByDataType.getDt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDt_id()
  {
    if ( IsDefinedByDataType != null )
    {
      return IsDefinedByDataType.getDt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dt_id) )
      return m_dt_id;
    else
      return getDt_id();
  }
  
  public void setDt_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dt_id)){
	        return;
	    }
	}else if(m_dt_id != null){
	    if(m_dt_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dt_id", m_dt_id, newValue,true); 
   m_dt_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPrevious_member_idLongBased()
  {
    if ( SucceedsStructureMember != null )
    {
      return SucceedsStructureMember.getMember_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPrevious_member_id()
  {
    if ( SucceedsStructureMember != null )
    {
      return SucceedsStructureMember.getMember_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getPrevious_member_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_previous_member_id) )
      return m_previous_member_id;
    else
      return getPrevious_member_id();
  }
  
  public void setPrevious_member_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_previous_member_id)){
	        return;
	    }
	}else if(m_previous_member_id != null){
	    if(m_previous_member_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Previous_member_id", m_previous_member_id, newValue,true); 
   m_previous_member_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Structure Member", //$NON-NLS-1$
	  " Operation entered: Structure Member::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     StructureMember_c [] objs = StructureMember_c.StructureMemberInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Structure Member", //$NON-NLS-1$
	  " Operation entered: Structure Member::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class StructureMember_c_test56340_c implements ClassQueryInterface_c
    {
	  StructureMember_c_test56340_c( java.util.UUID            p56341, java.util.UUID            p56342 ) {
	       m_p56341 = p56341; 
m_p56342 = p56342;
	  }
	  private java.util.UUID             m_p56341; private java.util.UUID             m_p56342; 
	  public boolean evaluate (Object candidate)
	  {
	      StructureMember_c selected = (StructureMember_c) candidate;
	      boolean retval = false;
	      retval = (selected.getMember_id().equals(m_p56341)) & (selected.getParent_dt_dt_id().equals(m_p56342));
	      return retval;
	  }
    }

    StructureMember_c [] objs56339 = 
    StructureMember_c.StructureMemberInstances(modelRoot, new StructureMember_c_test56340_c(getMember_id(), getParent_dt_dt_id())) ;

    if ( (  (objs56339.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Structure Member", //$NON-NLS-1$
           "Consistency: Object: Structure Member: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56339.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Structure Member: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56339.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56339.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Structure Member", //$NON-NLS-1$
           "Consistency: Object: Structure Member: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56339.length )  + " Member_ID: " + "Not Printable"  + " Parent_DT_DT_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Structure Member: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56339.length )  + " Member_ID: " + "Not Printable"  + " Parent_DT_DT_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Structure Member is a referring class in association: rel.Numb = 44
          // The participating class is: Structured Data Type
    class StructuredDataType_c_test56346_c implements ClassQueryInterface_c
    {
	  StructuredDataType_c_test56346_c( java.util.UUID            p56347 ) {
	  m_p56347 = p56347;
	  }
	  private java.util.UUID             m_p56347; 
	  public boolean evaluate (Object candidate)
	  {
	      StructuredDataType_c selected = (StructuredDataType_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p56347));
	      return retval;
	  }
    }

    StructuredDataType_c [] objs56345 = 
    StructuredDataType_c.StructuredDataTypeInstances(modelRoot, new StructuredDataType_c_test56346_c(getParent_dt_dt_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56345.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Structure Member", //$NON-NLS-1$
           "Consistency: Object: Structure Member: Association: 44: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56345.length )  + " Parent_DT_DT_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Structure Member: Association: 44: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56345.length )  + " Parent_DT_DT_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Structure Member is a referring class in association: rel.Numb = 46
          // The participating class is: Structure Member
    class StructureMember_c_test56349_c implements ClassQueryInterface_c
    {
	  StructureMember_c_test56349_c( java.util.UUID            p56350, java.util.UUID            p56351 ) {
	       m_p56350 = p56350; 
m_p56351 = p56351;
	  }
	  private java.util.UUID             m_p56350; private java.util.UUID             m_p56351; 
	  public boolean evaluate (Object candidate)
	  {
	      StructureMember_c selected = (StructureMember_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p56350)) & (selected.getMember_id().equals(m_p56351));
	      return retval;
	  }
    }

    StructureMember_c [] objs56348 = 
    StructureMember_c.StructureMemberInstances(modelRoot, new StructureMember_c_test56349_c(getParent_dt_dt_id(), getPrevious_member_id())) ;

    if ( (  (objs56348.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Structure Member", //$NON-NLS-1$
           "Consistency: Object: Structure Member: Association: 46: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56348.length )  + " Parent_DT_DT_ID: " + "Not Printable"  + " Previous_Member_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Structure Member: Association: 46: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56348.length )  + " Parent_DT_DT_ID: " + "Not Printable"  + " Previous_Member_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Structure Member is a referring class in association: rel.Numb = 45
          // The participating class is: Data Type
    class DataType_c_test56353_c implements ClassQueryInterface_c
    {
	  DataType_c_test56353_c( java.util.UUID            p56354 ) {
	  m_p56354 = p56354;
	  }
	  private java.util.UUID             m_p56354; 
	  public boolean evaluate (Object candidate)
	  {
	      DataType_c selected = (DataType_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p56354));
	      return retval;
	  }
    }

    DataType_c [] objs56352 = 
    DataType_c.DataTypeInstances(modelRoot, new DataType_c_test56353_c(getDt_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56352.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Structure Member", //$NON-NLS-1$
           "Consistency: Object: Structure Member: Association: 45: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56352.length )  + " DT_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Structure Member: Association: 45: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56352.length )  + " DT_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Structure Member is a participating class in association: rel.Numb = 46
             // Object: Structure Member
    class StructureMember_c_test56356_c implements ClassQueryInterface_c
    {
	  StructureMember_c_test56356_c( java.util.UUID            p56357, java.util.UUID            p56358 ) {
	       m_p56357 = p56357; 
m_p56358 = p56358;
	  }
	  private java.util.UUID             m_p56357; private java.util.UUID             m_p56358; 
	  public boolean evaluate (Object candidate)
	  {
	      StructureMember_c selected = (StructureMember_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPrevious_member_id().equals(m_p56357)) & (selected.getParent_dt_dt_id().equals(m_p56358));
	      return retval;
	  }
    }

    StructureMember_c [] objs56355 = 
    StructureMember_c.StructureMemberInstances(modelRoot, new StructureMember_c_test56356_c(getMember_id(), getDt_id())) ;

    if ( (  (objs56355.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Structure Member", //$NON-NLS-1$
           "Consistency: Object: Structure Member: Association: 46: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56355.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Structure Member: Association: 46: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56355.length )  , e); 
      }
      retval = false;

    }

          // Structure Member is a participating class in association: rel.Numb = 836
             // Object: Member Value Reference
          // Structure Member is a participating class in association: rel.Numb = 53
             // Object: Dimensions
    return retval;
  }


  // declare transform functions
  public  void Initialize(final String       p_Newname)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
StructuredDataType_c v_sdt = StructuredDataType_c.getOneS_SDTOnR44(this);


if (v_sdt != null) {
v_sdt.Addmembertoorder(			    
getMember_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


String       v_name = p_Newname ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setName( v_success) ;



}

else
{

Dispose() ;



}


   } // End initialize
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
StructuredDataType_c v_sdt = StructuredDataType_c.getOneS_SDTOnR44(this);


if ( (  (v_sdt != null)) )
{

this.unrelateAcrossR44From(v_sdt);



}

DataType_c v_datatype = DataType_c.getOneS_DTOnR45(this);


this.unrelateAcrossR45From(v_datatype);


StructureMember_c v_successor = StructureMember_c.getOneS_MBROnR46Precedes(this);


StructureMember_c v_predecessor = StructureMember_c.getOneS_MBROnR46Succeeds(this);


if ( (  !  (v_successor == null)) )
{

this.unrelateAcrossR46FromPrecedes(v_successor);



}

if ( (  !  (v_predecessor == null)) )
{

this.unrelateAcrossR46FromSucceeds(v_predecessor);



}

if ( (  (v_successor != null) &&   (v_predecessor != null)) )
{

if (v_successor != null) {
  v_successor.relateAcrossR46ToSucceeds(v_predecessor);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

MemberValueReference_c [] v_memBrValues = MemberValueReference_c.getManyV_MVLsOnR836(this);


MemberValueReference_c  v_membrValue = null;
for ( int i54974 = 0; i54974 < v_memBrValues.length; i54974++)
{
  v_membrValue = v_memBrValues[i54974] ;

if (v_membrValue != null) {
v_membrValue.unrelateAcrossR836From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


Value_c v_value = Value_c.getOneV_VALOnR801(v_membrValue);


if (   (v_value != null) )
{

if (v_value != null) {
v_value.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR53(this);


Dimensions_c  v_dim = null;
for ( int i54975 = 0; i54975 < v_dims.length; i54975++)
{
  v_dim = v_dims[i54975] ;

this.unrelateAcrossR53From(v_dim);


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Moveup()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Moveup") ; 
               final ModelRoot modelRoot = getModelRoot();
Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


StructureMember_c v_prev_mbr = StructureMember_c.getOneS_MBROnR46Succeeds(this);


StructureMember_c v_prev_prev_mbr = StructureMember_c.getOneS_MBROnR46Succeeds(v_prev_mbr);


StructureMember_c v_next_mbr = StructureMember_c.getOneS_MBROnR46Precedes(this);


if ( (  (v_prev_prev_mbr != null)) )
{

if (v_prev_mbr != null) {
v_prev_mbr.unrelateAcrossR46FromSucceeds(v_prev_prev_mbr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (  (v_next_mbr != null)) )
{

if (v_next_mbr != null) {
v_next_mbr.unrelateAcrossR46FromSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

this.unrelateAcrossR46FromSucceeds(v_prev_mbr);


if ( (  (v_prev_prev_mbr != null)) )
{

  this.relateAcrossR46ToSucceeds(v_prev_prev_mbr);



}

if ( (  (v_next_mbr == null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}

if (v_prev_mbr != null) {
  v_prev_mbr.relateAcrossR46ToSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (  (v_next_mbr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;


if (v_next_mbr != null) {
  v_next_mbr.relateAcrossR46ToSucceeds(v_prev_mbr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End moveUp
  public  void Movedown()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Movedown") ; 
               final ModelRoot modelRoot = getModelRoot();
Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


StructureMember_c v_next_mbr = StructureMember_c.getOneS_MBROnR46Precedes(this);


StructureMember_c v_prev_mbr = StructureMember_c.getOneS_MBROnR46Succeeds(this);


StructureMember_c v_next_next_mbr = StructureMember_c.getOneS_MBROnR46Precedes(v_next_mbr);


if ( (  (v_next_next_mbr != null)) )
{

if (v_next_next_mbr != null) {
v_next_next_mbr.unrelateAcrossR46FromSucceeds(v_next_mbr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (  (v_prev_mbr != null)) )
{

this.unrelateAcrossR46FromSucceeds(v_prev_mbr);



}

if (v_next_mbr != null) {
v_next_mbr.unrelateAcrossR46FromSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if ( (  (v_prev_mbr != null)) )
{

if (v_next_mbr != null) {
  v_next_mbr.relateAcrossR46ToSucceeds(v_prev_mbr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if ( (  (v_next_next_mbr == null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}

  this.relateAcrossR46ToSucceeds(v_next_mbr);


if ( (  (v_next_next_mbr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;


if (v_next_next_mbr != null) {
  v_next_next_mbr.relateAcrossR46ToSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End moveDown
  public  void Changetype(final String       p_Typename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Changetype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_old_dt = DataType_c.getOneS_DTOnR45(this);


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this)));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8001(v_packageableElem));


if ( (  (v_system == null) &&   (v_component != null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent)));



}

java.util.UUID         v_id = v_packageableElem.Resolvedatatyperelativetoself(			    
"integer"			    
,p_Typename) ;


  class DataType_test55644_c implements ClassQueryInterface_c
  {
	DataType_test55644_c( java.util.UUID         p55645 ) {
		m_p55645 = p55645;
	}
	private java.util.UUID         m_p55645;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55645)) ;
	}
  }
DataType_c v_new_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test55644_c(v_id));


if (   (v_new_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class PackageableElement_test55646_c implements ClassQueryInterface_c
  {
	PackageableElement_test55646_c( java.util.UUID         p55647 ) {
		m_p55647 = p55647;
	}
	private java.util.UUID         m_p55647;
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(m_p55647) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system), new PackageableElement_test55646_c(v_id));


DataType_c v_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_new_dt == null)) )
{

  class DataType_test55648_c implements ClassQueryInterface_c
  {
	DataType_test55648_c( java.util.UUID         p55649 ) {
		m_p55649 = p55649;
	}
	private java.util.UUID         m_p55649;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55649)) ;
	}
  }
v_new_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(Package_c.getManyEP_PKGsOnR1405(v_system)), new DataType_test55648_c(v_id));



}

if ( (  (v_new_dt != null)) )
{

this.unrelateAcrossR45From(v_old_dt);


  this.relateAcrossR45To(v_new_dt);



}


}

else
{

  class DataType_test55650_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals(p_Typename) ;
	}
  }
DataType_c v_new_dt = DataType_c.getOneS_DTOnR14(Domain_c.getManyS_DOMsOnR14(DataType_c.getManyS_DTsOnR17(StructuredDataType_c.getManyS_SDTsOnR44(this))), new DataType_test55650_c());


if ( (  (v_new_dt == null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4402(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4401(DataType_c.getManyS_DTsOnR17(StructuredDataType_c.getManyS_SDTsOnR44(this))));


if ( (  (v_system != null)) )
{

java.util.UUID         v_dt_id = v_system.Getcoretypeid(			    
p_Typename) ;


PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_dt_id);


v_new_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}


}

if ( (  (v_new_dt != null)) )
{

this.unrelateAcrossR45From(v_old_dt);


  this.relateAcrossR45To(v_new_dt);



}


}


   } // End changeType
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("can")) )
{

if ( (p_Value.equals("move up")) )
{

StructureMember_c v_prev_attr = StructureMember_c.getOneS_MBROnR46Succeeds(this);


return   (v_prev_attr != null);



}

else if ( (p_Value.equals("move down")) )
{

StructureMember_c v_next_attr = StructureMember_c.getOneS_MBROnR46Precedes(this);


return   (v_next_attr != null);



}


}

return false;



   } // End actionFilter
  public  void Rename(final String       p_New_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Rename") ; 
               final ModelRoot modelRoot = getModelRoot();
setName( p_New_name) ;



   } // End rename
  public  boolean      Isallowedtype(final String       p_Typename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Isallowedtype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this)));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

return v_packageableElem.Isallowedtype(			    
false			    
,p_Typename);



}

else
{

DataTypePackage_c v_dpkg = DataTypePackage_c.getOneS_DPKOnR39(DataTypeInPackage_c.getOneS_DIPOnR39(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this))));


SystemModel_c v_sys = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(v_dpkg.Getsystemid());


if ( (  (v_sys != null)) )
{

return Util_c.Isallowedparametertype(			    
v_sys.Converttoinstance()			    
,p_Typename);



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR14(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this)));


if ( (  (v_domain != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(v_domain);


if ( (  (v_system != null)) )
{

return DataType_c.Isallowedparametertype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename);



}

else
{

boolean      v_result = DataType_c.Isallowedparametertype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename) ;


if ( (  !v_result) )
{

SystemModel_c v_dt_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


return Util_c.Isallowedparametertype(			    
v_dt_system.Converttoinstance()			    
,p_Typename);



}

else
{

return v_result;



}


}


}


}

return false;



}


   } // End isAllowedType
  public  void Resolvedatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Resolvedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dtProxy = DataType_c.getOneS_DTOnR45(this);


if ( (  (v_dtProxy != null) &&   !Util_c.Isproxy(			    
Converttoinstance())) )
{

String       v_name = v_dtProxy.getName() ;


if (v_dtProxy != null) {
v_dtProxy.unrelateAcrossR45From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this)));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

java.util.UUID         v_id = v_packageableElem.Resolvedatatyperelativetoself(			    
"integer"			    
,v_name) ;


  class DataType_test55651_c implements ClassQueryInterface_c
  {
	DataType_test55651_c( java.util.UUID         p55652 ) {
		m_p55652 = p55652;
	}
	private java.util.UUID         m_p55652;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p55652) ;
	}
  }
DataType_c v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_package)), new DataType_test55651_c(v_id));


if ( (  (v_resolvedDt == null)) )
{

  class DataType_test55653_c implements ClassQueryInterface_c
  {
	DataType_test55653_c( java.util.UUID         p55654 ) {
		m_p55654 = p55654;
	}
	private java.util.UUID         m_p55654;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p55654) ;
	}
  }
v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_component)), new DataType_test55653_c(v_id));



}

if (   (v_resolvedDt != null) )
{

if (v_resolvedDt != null) {
  v_resolvedDt.relateAcrossR45To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4402(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4401(DataType_c.getManyS_DTsOnR17(StructuredDataType_c.getManyS_SDTsOnR44(this))));


if ( (  !  (v_system == null)) )
{

java.util.UUID         v_dt_id = v_system.Getcoretypeid(			    
v_name) ;


PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_dt_id);


DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_resolvedDT == null)) )
{

v_dt_id = v_system.Getcoretypeid(			    
"integer") ;


v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_dt_id);


v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_resolvedDT != null)) )
{

if (v_resolvedDT != null) {
  v_resolvedDT.relateAcrossR45To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR14(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this)));


java.util.UUID         v_id = v_domain.Resolvedatatyperelativetoself(			    
"integer"			    
,v_name) ;


  class DataType_test55655_c implements ClassQueryInterface_c
  {
	DataType_test55655_c( java.util.UUID         p55656 ) {
		m_p55656 = p55656;
	}
	private java.util.UUID         m_p55656;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55656)) ;
	}
  }
DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55655_c(v_id));


if ( (  (v_resolvedDT == null)) )
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test55657_c implements ClassQueryInterface_c
  {
	DataType_test55657_c( java.util.UUID         p55658 ) {
		m_p55658 = p55658;
	}
	private java.util.UUID         m_p55658;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55658)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test55657_c(v_id));


if (   (v_resolvedDT == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class PackageableElement_test55659_c implements ClassQueryInterface_c
  {
	PackageableElement_test55659_c( java.util.UUID         p55660 ) {
		m_p55660 = p55660;
	}
	private java.util.UUID         m_p55660;
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(m_p55660) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system), new PackageableElement_test55659_c(v_id));


v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);



}


}

if ( (  (v_resolvedDT != null)) )
{

if (v_resolvedDT != null) {
  v_resolvedDT.relateAcrossR45To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


}


   } // End resolveDataType
  public  int          Getdimensionscnt()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Getdimensionscnt") ; 
               final ModelRoot modelRoot = getModelRoot();
Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR53(this);


int          v_dimensions =   (v_dims.length) ;


return v_dimensions;



   } // End getDimensionsCnt
  public  void Resizedimensions(final int          p_Dimension,final int          p_Elementcount,final int          p_Numdimensions)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Resizedimensions") ; 
               final ModelRoot modelRoot = getModelRoot();
while ( (p_Numdimensions > Getdimensionscnt()) )
{

Dimensions_c v_dim = new Dimensions_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dim));


if (v_dim != null) {
  v_dim.setDimensioncount( Getdimensionscnt()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dim != null) {
  v_dim.relateAcrossR53To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

while ( (p_Numdimensions < Getdimensionscnt()) )
{

  class Dimensions_test55661_c implements ClassQueryInterface_c
  {
	Dimensions_test55661_c( int          p55662 ) {
		m_p55662 = p55662;
	}
	private int          m_p55662;
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == (m_p55662 - 1)) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR53(this, new Dimensions_test55661_c(Getdimensionscnt()));


if (v_dim != null) {
v_dim.unrelateAcrossR53From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( (p_Numdimensions > 0) )
{

  class Dimensions_test55663_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == p_Dimension) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR53(this, new Dimensions_test55663_c());


if ( (v_dim.getElementcount() != p_Elementcount) )
{

if (v_dim != null) {
  v_dim.setElementcount( p_Elementcount) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


   } // End resizeDimensions
  public  boolean      Canrefertodatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Canrefertodatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR45(this);


if ( (  (v_dt != null)) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this)));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

return v_packageableElem.Canrefertodatatype(			    
v_dt.getDt_id()			    
,v_dt.getName());



}

else
{

DataTypePackage_c v_mbrDTPkg = DataTypePackage_c.getOneS_DPKOnR39(DataTypeInPackage_c.getOneS_DIPOnR39(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this))));


DataTypePackage_c v_dtPkg = DataTypePackage_c.getOneS_DPKOnR39(DataTypeInPackage_c.getOneS_DIPOnR39(v_dt));


if ( (v_mbrDTPkg.Isdomainlevel()) )
{

java.util.UUID         v_dom_id = v_mbrDTPkg.Getdomainid() ;


Domain_c v_domain = (Domain_c) modelRoot.getInstanceList(Domain_c.class).getGlobal(null, v_dom_id);


if ( (  !v_dtPkg.Isdomainlevel()) )
{

if ( (v_domain.Participatesinsystem()) )
{

return true;



}

else
{

return false;



}


}

else
{

Domain_c v_dtDomain = Domain_c.getOneS_DOMOnR14(v_dt);


if ( (v_dtDomain == v_domain) )
{

return true;



}


}


}

else
{

if ( (  !v_dtPkg.Isdomainlevel()) )
{

return true;



}


}


}


}

return false;



   } // End canReferToDataType
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Converttoinstance") ; 
return this;
   } // End convertToInstance
  public  boolean      Isreferringtodefaultdatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Isreferringtodefaultdatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR45(this);


String       v_elementType = Util_c.Getsimpleclassname(			    
Converttoinstance()) ;


if ( (v_dt.getName().equals(DataType_c.Getdefaultdatatypename(modelRoot			    
,v_elementType))) )
{

return true;



}

return false;



   } // End isReferringToDefaultDataType
  public  boolean      Canusedatatype(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Canusedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this)));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

  class SearchResultSet_test55664_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test55664_c());


  class DataType_test55665_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet)), new DataType_test55665_c());


if (   (v_component != null) )
{

  class ComponentResultSet_test55666_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test55666_c());


  class DataType_test55667_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet)), new DataType_test55667_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR14(DataType_c.getOneS_DTOnR17(StructuredDataType_c.getOneS_SDTOnR44(this)));


if ( (  (v_domain != null)) )
{

if ( (v_domain.Participatesinsystem()) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test55668_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test55668_c());


if (   (v_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class PackageableElement_test55669_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(p_Id) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system), new PackageableElement_test55669_c());


v_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_dt == null)) )
{

  class DataType_test55670_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55670_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}


}

else
{

  class DataType_test55671_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55671_c());


if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}


}


}

else
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4402(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4401(DataType_c.getManyS_DTsOnR17(StructuredDataType_c.getManyS_SDTsOnR44(this))));


  class DataType_test55672_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test55672_c());


if (   (v_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class PackageableElement_test55673_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(p_Id) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system), new PackageableElement_test55673_c());


v_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}


}

return false;



}


   } // End canUseDataType
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Structure Member", " Operation entered: StructureMember::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
StructuredDataType_c v_sdt = StructuredDataType_c.getOneS_SDTOnR44(this);


DataType_c v_dt = DataType_c.getOneS_DTOnR17(v_sdt);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_dt));


Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(v_dt));


if ( (  !  (v_component == null)) )
{

java.util.UUID         v_pkgId = v_component.Getpackageid() ;


v_package = (Package_c) modelRoot.getInstanceList(Package_c.class).getGlobal(null, v_pkgId);



}

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

StructureMember_c [] v_members = StructureMember_c.getManyS_MBRsOnR44(v_sdt);


StructureMember_c  v_member = null;
for ( int i54976 = 0; i54976 < v_members.length; i54976++)
{
  v_member = v_members[i54976] ;

if ( (v_member != this && v_member.getName().equals(getName())) )
{

IntegrityManager_c.Createissue(modelRoot			    
,"Found another member under the same structured data type with a " + "matching name."			    
,Converttoinstance()			    
,getMember_id()			    
,getName()			    
,v_dt.Getpath(			    
true			    
,"") + "::" + getName()			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return StructureMemberActionFilter.getSingleton();
    }
	  return null;
  }
} // end Structure Member
