package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.GenerateEventStatement_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_GENERATE_EVENT_STATEMENT extends genericEvent_c {
	public abstract int getEvtcode();
}

public class GenerateEventStatement_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public GenerateEventStatement_c(ModelRoot modelRoot,
			java.util.UUID p_m_statement_id) {
		super(modelRoot);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_statement_id = IdAssigner.preprocessUUID(p_m_statement_id);

		Object[] key = {m_statement_id};
		addInstanceToMap(key);
	}
	static public GenerateEventStatement_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_statement_id, String p_contentPath,
			IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(GenerateEventStatement_c.class);
		GenerateEventStatement_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_statement_id};
			new_inst = (GenerateEventStatement_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_statement_id = IdAssigner
						.preprocessUUID(p_m_statement_id);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new GenerateEventStatement_c(modelRoot, p_m_statement_id);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public GenerateEventStatement_c resolveInstance(ModelRoot modelRoot,
			java.util.UUID p_m_statement_id) {
		InstanceList instances = modelRoot
				.getInstanceList(GenerateEventStatement_c.class);
		GenerateEventStatement_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_statement_id};
			source = (GenerateEventStatement_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_statement_id = IdAssigner
						.preprocessUUID(p_m_statement_id);

				return source;
			}
		}
		// there is no instance matching the id
		GenerateEventStatement_c new_inst = new GenerateEventStatement_c(
				modelRoot, p_m_statement_id);
		return new_inst;
	}
	public GenerateEventStatement_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_statement_id = IdAssigner.NULL_UUID;
		Object[] key = {m_statement_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_statement_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p4
		// round p5
		if (m_statement_id != p_newKey) {

			m_statement_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof GenerateEventStatement_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof GenerateEventStatement_c)) {
			return false;
		}

		GenerateEventStatement_c me = (GenerateEventStatement_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getStatement_id()) || IdAssigner.NULL_UUID
						.equals(((GenerateEventStatement_c) elem)
								.getStatement_id())) && this != elem)) {
			return false;
		}
		if (!getStatement_id().equals(
				((GenerateEventStatement_c) elem).getStatement_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof GenerateEventStatement_c)) {
			return false;
		}

		GenerateEventStatement_c me = (GenerateEventStatement_c) elem;
		if (!getStatement_idCachedValue().equals(
				((GenerateEventStatement_c) elem).getStatement_idCachedValue()))
			return false;
		return true;
	}

	// Attributes
	private java.util.UUID m_statement_id;

	// declare association references from this class

	// referring navigation

	EventSpecificationStatement_c IsSupertypeEventSpecificationStatement;
	public void relateAcrossR701To(EventSpecificationStatement_c target) {
		relateAcrossR701To(target, true);
	}
	public void relateAcrossR701To(EventSpecificationStatement_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsSupertypeEventSpecificationStatement)
			return; // already related

		if (IsSupertypeEventSpecificationStatement != target) {

			Object oldKey = getInstanceKey();

			if (IsSupertypeEventSpecificationStatement != null) {

				IsSupertypeEventSpecificationStatement
						.clearBackPointerR701To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"GenerateEventStatement_c.relateAcrossR701To(EventSpecificationStatement_c target)",
									"Relate performed across R701 from Generate Event Statement to Event Specification Statement without unrelate of prior instance.");
				}
			}

			IsSupertypeEventSpecificationStatement = target;
			if (IdAssigner.NULL_UUID.equals(target.getStatement_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_statement_id = target.getStatement_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR701To(this);
			target.addRef();
		}
	}
	public void unrelateAcrossR701From(EventSpecificationStatement_c target) {
		unrelateAcrossR701From(target, true);
	}
	public void unrelateAcrossR701From(EventSpecificationStatement_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (IsSupertypeEventSpecificationStatement == null)
			return; // already unrelated

		if (target != IsSupertypeEventSpecificationStatement) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R701",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR701To(this);
		}

		if (IsSupertypeEventSpecificationStatement != null) {

			m_statement_id = IsSupertypeEventSpecificationStatement
					.getStatement_id();
			if (IdAssigner.NULL_UUID.equals(m_statement_id)) {
				m_statement_id = IsSupertypeEventSpecificationStatement
						.getStatement_idCachedValue();
			}
			IsSupertypeEventSpecificationStatement = null;
			target.removeRef();
		}
	}

	public static GenerateEventStatement_c getOneE_GESOnR701(
			EventSpecificationStatement_c[] targets) {
		return getOneE_GESOnR701(targets, null);
	}

	public static GenerateEventStatement_c getOneE_GESOnR701(
			EventSpecificationStatement_c[] targets, ClassQueryInterface_c test) {
		GenerateEventStatement_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneE_GESOnR701(targets[i], test);
			}
		}

		return ret_val;
	}

	public static GenerateEventStatement_c getOneE_GESOnR701(
			EventSpecificationStatement_c target) {
		return getOneE_GESOnR701(target, null);
	}

	public static GenerateEventStatement_c getOneE_GESOnR701(
			EventSpecificationStatement_c target, boolean loadComponent) {
		return getOneE_GESOnR701(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static GenerateEventStatement_c getOneE_GESOnR701(
			EventSpecificationStatement_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneE_GESOnR701(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static GenerateEventStatement_c getOneE_GESOnR701(
			ModelRoot modelRoot, EventSpecificationStatement_c target,
			ClassQueryInterface_c test) {
		return getOneE_GESOnR701(modelRoot, target, test, true);
	}

	public static GenerateEventStatement_c getOneE_GESOnR701(
			ModelRoot modelRoot, EventSpecificationStatement_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneE_GESOnR701(modelRoot, target, test);
	}
	private static GenerateEventStatement_c find_getOneE_GESOnR701(
			ModelRoot modelRoot, EventSpecificationStatement_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			GenerateEventStatement_c source = (GenerateEventStatement_c) target.backPointer_IsSubtypeGenerateEventStatementIsSubtype_R701;
			if (source != null && (test == null || test.evaluate(source))) {
				return source;
			}
		}
		// not found
		return null;
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR701(
			EventSpecificationStatement_c[] targets) {
		return getManyE_GESsOnR701(targets, null);
	}
	public static GenerateEventStatement_c[] getManyE_GESsOnR701(
			EventSpecificationStatement_c[] targets, boolean loadComponent) {
		return getManyE_GESsOnR701(targets, null, loadComponent);
	}
	public static GenerateEventStatement_c[] getManyE_GESsOnR701(
			EventSpecificationStatement_c[] targets, ClassQueryInterface_c test) {
		return getManyE_GESsOnR701(targets, test, true);
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR701(
			EventSpecificationStatement_c[] targets,
			ClassQueryInterface_c test, boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new GenerateEventStatement_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(GenerateEventStatement_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			GenerateEventStatement_c source = (GenerateEventStatement_c) targets[i].backPointer_IsSubtypeGenerateEventStatementIsSubtype_R701;
			if (source != null && (test == null || test.evaluate(source))) {
				matches.add(source);
			}
		}
		if (matches.size() > 0) {
			GenerateEventStatement_c[] ret_set = new GenerateEventStatement_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new GenerateEventStatement_c[0];
		}
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR701(
			EventSpecificationStatement_c target) {
		if (target != null) {
			EventSpecificationStatement_c[] targetArray = new EventSpecificationStatement_c[1];
			targetArray[0] = target;
			return getManyE_GESsOnR701(targetArray);
		} else {
			GenerateEventStatement_c[] result = new GenerateEventStatement_c[0];
			return result;
		}
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR701(
			EventSpecificationStatement_c target, boolean loadComponent) {
		if (target != null) {
			EventSpecificationStatement_c[] targetArray = new EventSpecificationStatement_c[1];
			targetArray[0] = target;
			return getManyE_GESsOnR701(targetArray, loadComponent);
		} else {
			GenerateEventStatement_c[] result = new GenerateEventStatement_c[0];
			return result;
		}
	}

	// declare associations referring to this class

	// referred to navigation

	GenerateToExternalEntity_c backPointer_IsSubtypeGenerateToExternalEntityIsSubtype_R703;

	public void setGenerateToExternalEntityOrderInChildListR703(
			GenerateToExternalEntity_c target, int index) {
		unrelateAcrossR703From(target);
		GenerateToExternalEntity_c[] elements = GenerateToExternalEntity_c
				.getManyE_GEEsOnR703(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR703From((GenerateToExternalEntity_c) elements[i]);
			}
			count++;
		}
		relateAcrossR703To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR703To((GenerateToExternalEntity_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR703To(GenerateToExternalEntity_c target) {
		if (target != null) {
			target.relateAcrossR703To(this, true);
		}
	}

	public void relateAcrossR703To(GenerateToExternalEntity_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR703To(this, notifyChanges);
		}
	}

	public void setBackPointerR703To(GenerateToExternalEntity_c target) {
		backPointer_IsSubtypeGenerateToExternalEntityIsSubtype_R703 = target;
	}

	public void unrelateAcrossR703From(GenerateToExternalEntity_c target) {
		if (target != null) {
			target.unrelateAcrossR703From(this, true);
		}
	}

	public void unrelateAcrossR703From(GenerateToExternalEntity_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR703From(this, notifyChanges);
		}
	}

	public void clearBackPointerR703To(GenerateToExternalEntity_c target) {
		if (target == backPointer_IsSubtypeGenerateToExternalEntityIsSubtype_R703) {
			backPointer_IsSubtypeGenerateToExternalEntityIsSubtype_R703 = null;
		}
	}

	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateToExternalEntity_c[] targets) {
		return getOneE_GESOnR703(targets, null);
	}

	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateToExternalEntity_c[] targets, ClassQueryInterface_c test) {
		return getOneE_GESOnR703(targets, test, true);
	}

	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateToExternalEntity_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		GenerateEventStatement_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					GenerateEventStatement_c candidate_val = getOneE_GESOnR703(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneE_GESOnR703(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateToExternalEntity_c target) {
		return getOneE_GESOnR703(target, true);
	}
	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateToExternalEntity_c target, boolean loadComponent) {
		if (target != null) {
			return target.IsSupertypeGenerateEventStatement;
		} else {
			return null;
		}
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateToExternalEntity_c[] targets, ClassQueryInterface_c test) {
		return getManyE_GESsOnR703(targets, test, true);
	}

	public static GenerateEventStatement_c [] getManyE_GESsOnR703(GenerateToExternalEntity_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new GenerateEventStatement_c[0];
  
  
  LinkedHashSet<GenerateEventStatement_c> elementsSet = new LinkedHashSet<GenerateEventStatement_c>();
  for (int i = 0; i < targets.length; i++) {
    GenerateEventStatement_c associate = targets[i].IsSupertypeGenerateEventStatement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  GenerateEventStatement_c[] result = new GenerateEventStatement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateToExternalEntity_c[] targets) {
		return getManyE_GESsOnR703(targets, null);
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateToExternalEntity_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			GenerateToExternalEntity_c[] targetArray = new GenerateToExternalEntity_c[1];
			targetArray[0] = target;
			return getManyE_GESsOnR703(targetArray, test, loadComponent);
		} else {
			GenerateEventStatement_c[] result = new GenerateEventStatement_c[0];
			return result;
		}

	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateToExternalEntity_c target, ClassQueryInterface_c test) {
		return getManyE_GESsOnR703(target, null, true);
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateToExternalEntity_c target) {
		return getManyE_GESsOnR703(target, null, true);
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateToExternalEntity_c target, boolean loadComponent) {
		return getManyE_GESsOnR703(target, null, loadComponent);
	}

	// referred to navigation

	GenerateSmEventStatement_c backPointer_IsSubtypeGenerateSmEventStatementIsSubtype_R703;

	public void setGenerateSmEventStatementOrderInChildListR703(
			GenerateSmEventStatement_c target, int index) {
		unrelateAcrossR703From(target);
		GenerateSmEventStatement_c[] elements = GenerateSmEventStatement_c
				.getManyE_GSMEsOnR703(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR703From((GenerateSmEventStatement_c) elements[i]);
			}
			count++;
		}
		relateAcrossR703To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR703To((GenerateSmEventStatement_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR703To(GenerateSmEventStatement_c target) {
		if (target != null) {
			target.relateAcrossR703To(this, true);
		}
	}

	public void relateAcrossR703To(GenerateSmEventStatement_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR703To(this, notifyChanges);
		}
	}

	public void setBackPointerR703To(GenerateSmEventStatement_c target) {
		backPointer_IsSubtypeGenerateSmEventStatementIsSubtype_R703 = target;
	}

	public void unrelateAcrossR703From(GenerateSmEventStatement_c target) {
		if (target != null) {
			target.unrelateAcrossR703From(this, true);
		}
	}

	public void unrelateAcrossR703From(GenerateSmEventStatement_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR703From(this, notifyChanges);
		}
	}

	public void clearBackPointerR703To(GenerateSmEventStatement_c target) {
		if (target == backPointer_IsSubtypeGenerateSmEventStatementIsSubtype_R703) {
			backPointer_IsSubtypeGenerateSmEventStatementIsSubtype_R703 = null;
		}
	}

	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateSmEventStatement_c[] targets) {
		return getOneE_GESOnR703(targets, null);
	}

	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateSmEventStatement_c[] targets, ClassQueryInterface_c test) {
		return getOneE_GESOnR703(targets, test, true);
	}

	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateSmEventStatement_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		GenerateEventStatement_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					GenerateEventStatement_c candidate_val = getOneE_GESOnR703(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneE_GESOnR703(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateSmEventStatement_c target) {
		return getOneE_GESOnR703(target, true);
	}
	public static GenerateEventStatement_c getOneE_GESOnR703(
			GenerateSmEventStatement_c target, boolean loadComponent) {
		if (target != null) {
			return target.IsSupertypeGenerateEventStatement;
		} else {
			return null;
		}
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateSmEventStatement_c[] targets, ClassQueryInterface_c test) {
		return getManyE_GESsOnR703(targets, test, true);
	}

	public static GenerateEventStatement_c [] getManyE_GESsOnR703(GenerateSmEventStatement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new GenerateEventStatement_c[0];
  
  
  LinkedHashSet<GenerateEventStatement_c> elementsSet = new LinkedHashSet<GenerateEventStatement_c>();
  for (int i = 0; i < targets.length; i++) {
    GenerateEventStatement_c associate = targets[i].IsSupertypeGenerateEventStatement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  GenerateEventStatement_c[] result = new GenerateEventStatement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateSmEventStatement_c[] targets) {
		return getManyE_GESsOnR703(targets, null);
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateSmEventStatement_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			GenerateSmEventStatement_c[] targetArray = new GenerateSmEventStatement_c[1];
			targetArray[0] = target;
			return getManyE_GESsOnR703(targetArray, test, loadComponent);
		} else {
			GenerateEventStatement_c[] result = new GenerateEventStatement_c[0];
			return result;
		}

	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateSmEventStatement_c target, ClassQueryInterface_c test) {
		return getManyE_GESsOnR703(target, null, true);
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateSmEventStatement_c target) {
		return getManyE_GESsOnR703(target, null, true);
	}

	public static GenerateEventStatement_c[] getManyE_GESsOnR703(
			GenerateSmEventStatement_c target, boolean loadComponent) {
		return getManyE_GESsOnR703(target, null, loadComponent);
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies,
			boolean notifyChanges, boolean searchAllRoots) {
		InstanceList instances = null;
		ModelRoot baseRoot = modelRoot;

		// R701
		EventSpecificationStatement_c relInst56068 = (EventSpecificationStatement_c) baseRoot
				.getInstanceList(EventSpecificationStatement_c.class).get(
						new Object[]{m_statement_id});
		// if there was no local element, check for any global elements
		// failing that proceed to check other model roots
		if (relInst56068 == null) {
			relInst56068 = (EventSpecificationStatement_c) Ooaofooa
					.getDefaultInstance()
					.getInstanceList(EventSpecificationStatement_c.class)
					.get(new Object[]{m_statement_id});
		}
		if (relInst56068 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
			Ooaofooa[] roots = Ooaofooa.getInstances();
			for (int i = 0; i < roots.length; i++) {
				if (roots[i].isCompareRoot()) {
					// never use elements from any compare root
					continue;
				}
				relInst56068 = (EventSpecificationStatement_c) roots[i]
						.getInstanceList(EventSpecificationStatement_c.class)
						.get(new Object[]{m_statement_id});
				if (relInst56068 != null)
					break;
			}
		}
		//synchronized
		if (relInst56068 != null) {
			if (relateProxies || !isProxy()
					|| (inSameComponent(this, relInst56068) && !isProxy())) {
				relInst56068.relateAcrossR701To(this, notifyChanges);
			}
		}

	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R701
		// E_ESS
		inst = IsSupertypeEventSpecificationStatement;
		unrelateAcrossR701From(IsSupertypeEventSpecificationStatement,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(GenerateEventStatement_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final GenerateEventStatement_c inst = (GenerateEventStatement_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(GenerateEventStatement_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static GenerateEventStatement_c GenerateEventStatementInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		GenerateEventStatement_c result = findGenerateEventStatementInstance(
				modelRoot, test, loadComponent);
		return result;
	}
	private static GenerateEventStatement_c findGenerateEventStatementInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(GenerateEventStatement_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				GenerateEventStatement_c x = (GenerateEventStatement_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					return x;
				}
			}
		}
		return null;
	}
	public static GenerateEventStatement_c GenerateEventStatementInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return GenerateEventStatementInstance(modelRoot, test, true);
	}

	public static GenerateEventStatement_c GenerateEventStatementInstance(
			ModelRoot modelRoot) {
		return GenerateEventStatementInstance(modelRoot, null, true);
	}

	public static GenerateEventStatement_c[] GenerateEventStatementInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(GenerateEventStatement_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				GenerateEventStatement_c x = (GenerateEventStatement_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					matches.add(x);
				}
			}
			if (matches.size() > 0) {
				GenerateEventStatement_c[] ret_set = new GenerateEventStatement_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new GenerateEventStatement_c[0];
			}
		}
	}
	public static GenerateEventStatement_c[] GenerateEventStatementInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return GenerateEventStatementInstances(modelRoot, test, true);
	}
	public static GenerateEventStatement_c[] GenerateEventStatementInstances(
			ModelRoot modelRoot) {
		return GenerateEventStatementInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Generate Event Statement.dispose call: ";
		GenerateToExternalEntity_c testR703Inst1 = GenerateToExternalEntity_c
				.getOneE_GEEOnR703(this, false);

		if (testR703Inst1 != null) {
			delete_error = true;
			errorMsg = errorMsg + "703 ";
		}
		GenerateSmEventStatement_c testR703Inst2 = GenerateSmEventStatement_c
				.getOneE_GSMEOnR703(this, false);

		if (testR703Inst2 != null) {
			delete_error = true;
			errorMsg = errorMsg + "703 ";
		}
		EventSpecificationStatement_c testR701Inst1 = EventSpecificationStatement_c
				.getOneE_ESSOnR701(this, false);

		if (testR701Inst1 != null) {
			delete_error = true;
			errorMsg = errorMsg + "701 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log.println(ILogger.DELETE,
						"Generate Event Statement", errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("statement_id")) {
			return true;
		}
		return false;
	}
	// declare attribute accessors
	public long getStatement_idLongBased() {
		if (IsSupertypeEventSpecificationStatement != null) {
			return IsSupertypeEventSpecificationStatement
					.getStatement_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getStatement_id() {
		if (IsSupertypeEventSpecificationStatement != null) {
			return IsSupertypeEventSpecificationStatement.getStatement_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public boolean hasSuperType() {
		return (IsSupertypeEventSpecificationStatement != null);

	}

	public java.util.UUID getStatement_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_statement_id))
			return m_statement_id;
		else
			return getStatement_id();
	}

	public void setStatement_id(java.util.UUID newValue) {
		m_statement_id = IdAssigner.preprocessUUID(newValue);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Generate Event Statement", //$NON-NLS-1$
						" Operation entered: Generate Event Statement::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		GenerateEventStatement_c[] objs = GenerateEventStatement_c
				.GenerateEventStatementInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Generate Event Statement", //$NON-NLS-1$
						" Operation entered: Generate Event Statement::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class GenerateEventStatement_c_test56070_c
				implements
					ClassQueryInterface_c {
			GenerateEventStatement_c_test56070_c(java.util.UUID p56071) {
				m_p56071 = p56071;
			}
			private java.util.UUID m_p56071;
			public boolean evaluate(Object candidate) {
				GenerateEventStatement_c selected = (GenerateEventStatement_c) candidate;
				boolean retval = false;
				retval = (selected.getStatement_id().equals(m_p56071));
				return retval;
			}
		}

		GenerateEventStatement_c[] objs56069 = GenerateEventStatement_c
				.GenerateEventStatementInstances(modelRoot,
						new GenerateEventStatement_c_test56070_c(
								getStatement_id()));

		if (((objs56069.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Generate Event Statement", //$NON-NLS-1$
								"Consistency: Object: Generate Event Statement: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs56069.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Generate Event Statement: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56069.length), e);
			}
			retval = false;

		}

		if (((objs56069.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Generate Event Statement", //$NON-NLS-1$
								"Consistency: Object: Generate Event Statement: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs56069.length)
										+ " Statement_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Generate Event Statement: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56069.length)
										+ " Statement_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Generate Event Statement is a subtype in association: rel.Numb = 701
		// The supertype class is: Event Specification Statement
		class EventSpecificationStatement_c_test56075_c
				implements
					ClassQueryInterface_c {
			EventSpecificationStatement_c_test56075_c(java.util.UUID p56076) {
				m_p56076 = p56076;
			}
			private java.util.UUID m_p56076;
			public boolean evaluate(Object candidate) {
				EventSpecificationStatement_c selected = (EventSpecificationStatement_c) candidate;
				boolean retval = false;
				retval = (selected.getStatement_id().equals(m_p56076));
				return retval;
			}
		}

		EventSpecificationStatement_c[] objs56074 = EventSpecificationStatement_c
				.EventSpecificationStatementInstances(modelRoot,
						new EventSpecificationStatement_c_test56075_c(
								getStatement_id()));

		if (((objs56074.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Generate Event Statement", //$NON-NLS-1$
								"Consistency: Object: Generate Event Statement: Association: 701: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs56074.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Generate Event Statement: Association: 701: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56074.length), e);
			}
			retval = false;

		}

		// Supertype: rel.Numb = 703
		int objs56077 = 0;
		// Subtype Object: Generate to External Entity
		class GenerateToExternalEntity_c_test56078_c
				implements
					ClassQueryInterface_c {
			GenerateToExternalEntity_c_test56078_c(java.util.UUID p56079) {
				m_p56079 = p56079;
			}
			private java.util.UUID m_p56079;
			public boolean evaluate(Object candidate) {
				GenerateToExternalEntity_c selected = (GenerateToExternalEntity_c) candidate;
				boolean retval = false;
				retval = (selected.getStatement_id().equals(m_p56079));
				return retval;
			}
		}

		GenerateToExternalEntity_c[] objs56080 = GenerateToExternalEntity_c
				.GenerateToExternalEntityInstances(modelRoot,
						new GenerateToExternalEntity_c_test56078_c(
								getStatement_id()));

		objs56077 = objs56077 + objs56080.length;
		// Subtype Object: Generate SM Event Statement
		class GenerateSmEventStatement_c_test56081_c
				implements
					ClassQueryInterface_c {
			GenerateSmEventStatement_c_test56081_c(java.util.UUID p56082) {
				m_p56082 = p56082;
			}
			private java.util.UUID m_p56082;
			public boolean evaluate(Object candidate) {
				GenerateSmEventStatement_c selected = (GenerateSmEventStatement_c) candidate;
				boolean retval = false;
				retval = (selected.getStatement_id().equals(m_p56082));
				return retval;
			}
		}

		GenerateSmEventStatement_c[] objs56083 = GenerateSmEventStatement_c
				.GenerateSmEventStatementInstances(modelRoot,
						new GenerateSmEventStatement_c_test56081_c(
								getStatement_id()));

		objs56077 = objs56077 + objs56083.length;
		if (objs56077 != 1) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Generate Event Statement", //$NON-NLS-1$
								"Consistency: Object: Generate Event Statement: Association: 703: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs56077)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Generate Event Statement: Association: 703: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56077), e);
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "Generate Event Statement",
				" Operation entered: GenerateEventStatement::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		GenerateSmEventStatement_c v_gsme = GenerateSmEventStatement_c
				.getOneE_GSMEOnR703(this);

		if (((v_gsme != null))) {

			this.unrelateAcrossR703From(v_gsme);

			if (v_gsme != null) {
				v_gsme.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		GenerateToExternalEntity_c v_gee = GenerateToExternalEntity_c
				.getOneE_GEEOnR703(this);

		if (((v_gee != null))) {

			this.unrelateAcrossR703From(v_gee);

			if (v_gee != null) {
				v_gee.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		delete();

	} // End dispose
	public void Execute(final java.util.UUID p_Stack_frame_id) {
		Ooaofooa.log.println(ILogger.OPERATION, "Generate Event Statement",
				" Operation entered: GenerateEventStatement::Execute");
		final ModelRoot modelRoot = getModelRoot();
		GenerateSmEventStatement_c v_genSMEv = GenerateSmEventStatement_c
				.getOneE_GSMEOnR703(this);

		GenerateToExternalEntity_c v_genGEEv = GenerateToExternalEntity_c
				.getOneE_GEEOnR703(this);

		if (((v_genSMEv != null))) {

			if (v_genSMEv != null) {
				v_genSMEv.Execute(p_Stack_frame_id);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_genGEEv != null))) {

			Body_c v_body = Body_c.getOneACT_ACTOnR601(Block_c
					.getOneACT_BLKOnR602(Statement_c
							.getOneACT_SMTOnR603(EventSpecificationStatement_c
									.getOneE_ESSOnR701(this))));

			String v_pathMsg = "<No Path Available - Empty instance>";

			if (((v_body != null))) {

				v_pathMsg = v_body.Getpath();

			}

			User_c.Logerror(
					"Generate Event Statement.execute: Executing events to External Entities is not supported at this time.",
					v_pathMsg);

		}

	} // End execute

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		return null;
	}
} // end Generate Event Statement
