      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ComponentInstance_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import java.util.concurrent.locks.ReentrantLock;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_COMPONENT_INSTANCE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ComponentInstance_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ComponentInstance_c(ModelRoot modelRoot,
       boolean      p_m_running,
       java.util.UUID         p_m_execution_engine_id,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_component_id,
       java.util.UUID         p_m_package_id,
       int          p_m_next_unique_id,
       int          p_m_next_instance_id,
       java.util.UUID         p_m_importedcomponent_id,
       String       p_m_label,
       ReentrantLock p_m_eqe_lock,
       ReentrantLock p_m_sqe_lock,
       java.util.UUID         p_m_container_id,
       Object p_m_realizedby)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_execution_engine_id = IdAssigner.preprocessUUID(p_m_execution_engine_id);
       //extract 28 bit value only            
       m_execution_engine_idLongBased = 0xfffffff & p_m_execution_engine_id.getLeastSignificantBits();
       m_running = p_m_running;
       m_next_unique_id = p_m_next_unique_id;
       m_next_instance_id = p_m_next_instance_id;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       m_label = p_m_label;
       m_eqe_lock = p_m_eqe_lock;
       m_sqe_lock = p_m_sqe_lock;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_importedcomponent_id = IdAssigner.preprocessUUID(p_m_importedcomponent_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_container_id = IdAssigner.preprocessUUID(p_m_container_id);
       m_realizedby = p_m_realizedby;
        
    setUniqueId(m_execution_engine_id);
    Object [] key = {m_execution_engine_id};
    addInstanceToMap(key);
  }
  static public ComponentInstance_c createProxy(ModelRoot modelRoot,
       boolean      p_m_running,
       java.util.UUID         p_m_execution_engine_id,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_component_id,
       java.util.UUID         p_m_package_id,
       int          p_m_next_unique_id,
       int          p_m_next_instance_id,
       java.util.UUID         p_m_importedcomponent_id,
       String       p_m_label,
       ReentrantLock p_m_eqe_lock,
       ReentrantLock p_m_sqe_lock,
       java.util.UUID         p_m_container_id,
       Object p_m_realizedby, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);
      ComponentInstance_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_execution_engine_id};
          new_inst = (ComponentInstance_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_execution_engine_id = IdAssigner.preprocessUUID(p_m_execution_engine_id);
       //extract 28 bit value only            
       new_inst.m_execution_engine_idLongBased = 0xfffffff & p_m_execution_engine_id.getLeastSignificantBits();
       new_inst.m_running = p_m_running;
       new_inst.m_next_unique_id = p_m_next_unique_id;
       new_inst.m_next_instance_id = p_m_next_instance_id;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       new_inst.m_label = p_m_label;
       new_inst.m_eqe_lock = p_m_eqe_lock;
       new_inst.m_sqe_lock = p_m_sqe_lock;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_importedcomponent_id = IdAssigner.preprocessUUID(p_m_importedcomponent_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_container_id = IdAssigner.preprocessUUID(p_m_container_id);
       new_inst.m_realizedby = p_m_realizedby;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ComponentInstance_c(modelRoot,
p_m_running,
p_m_execution_engine_id,
p_m_dom_id,
p_m_component_id,
p_m_package_id,
p_m_next_unique_id,
p_m_next_instance_id,
p_m_importedcomponent_id,
p_m_label,
p_m_eqe_lock,
p_m_sqe_lock,
p_m_container_id,
p_m_realizedby
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ComponentInstance_c resolveInstance(ModelRoot modelRoot,
       boolean      p_m_running,
       java.util.UUID         p_m_execution_engine_id,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_component_id,
       java.util.UUID         p_m_package_id,
       int          p_m_next_unique_id,
       int          p_m_next_instance_id,
       java.util.UUID         p_m_importedcomponent_id,
       String       p_m_label,
       ReentrantLock p_m_eqe_lock,
       ReentrantLock p_m_sqe_lock,
       java.util.UUID         p_m_container_id,
       Object p_m_realizedby){
    InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);
    ComponentInstance_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_execution_engine_id
            };
        source = (ComponentInstance_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_execution_engine_id = IdAssigner.preprocessUUID(p_m_execution_engine_id);
       //extract 28 bit value only            
       source.m_execution_engine_idLongBased = 0xfffffff & p_m_execution_engine_id.getLeastSignificantBits();
       source.m_running = p_m_running;
       source.m_next_unique_id = p_m_next_unique_id;
       source.m_next_instance_id = p_m_next_instance_id;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       source.m_label = p_m_label;
       source.m_eqe_lock = p_m_eqe_lock;
       source.m_sqe_lock = p_m_sqe_lock;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_importedcomponent_id = IdAssigner.preprocessUUID(p_m_importedcomponent_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_container_id = IdAssigner.preprocessUUID(p_m_container_id);
       source.m_realizedby = p_m_realizedby;
        
           return source ;
        }
      }
      // there is no instance matching the id
    ComponentInstance_c new_inst = new ComponentInstance_c(modelRoot,
p_m_running,
p_m_execution_engine_id,
p_m_dom_id,
p_m_component_id,
p_m_package_id,
p_m_next_unique_id,
p_m_next_instance_id,
p_m_importedcomponent_id,
p_m_label,
p_m_eqe_lock,
p_m_sqe_lock,
p_m_container_id,
p_m_realizedby
);
    return new_inst;
  }
  public ComponentInstance_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_execution_engine_id = idAssigner.createUUID();
     m_dom_id = IdAssigner.NULL_UUID;   
     m_label = "";   
     m_eqe_lock = new ReentrantLock();   
     m_sqe_lock = new ReentrantLock();   
     m_component_id = IdAssigner.NULL_UUID;   
     m_importedcomponent_id = IdAssigner.NULL_UUID;   
     m_package_id = IdAssigner.NULL_UUID;   
     m_container_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_execution_engine_id);
    Object [] key = {m_execution_engine_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_execution_engine_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_execution_engine_id !=  p_newKey ){
	
		m_execution_engine_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof ComponentInstance_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ComponentInstance_c)) {
           return false;
       }
       
       ComponentInstance_c me = (ComponentInstance_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getExecution_engine_id()) || IdAssigner.NULL_UUID.equals(((ComponentInstance_c)elem).getExecution_engine_id())) && this != elem)) {
      	return false;
      }
      if (!getExecution_engine_id().equals(((ComponentInstance_c)elem).getExecution_engine_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ComponentInstance_c)) {
           return false;
       }
       
       ComponentInstance_c me = (ComponentInstance_c)elem;
      if (!getExecution_engine_id().equals(((ComponentInstance_c)elem).getExecution_engine_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_execution_engine_id ;
  private long m_execution_engine_idLongBased ;
  private boolean      m_running ;
  private int          m_next_unique_id ;
  private int          m_next_instance_id ;
  private java.util.UUID         m_dom_id ;
  private String       m_label ;
  private ReentrantLock m_eqe_lock ;
  private ReentrantLock m_sqe_lock ;
  private java.util.UUID         m_component_id ;
  private java.util.UUID         m_importedcomponent_id ;
  private java.util.UUID         m_package_id ;
  private java.util.UUID         m_container_id ;
  private Object m_realizedby ;
      
// declare association references from this class
  
  
    
// referring navigation

ComponentInstanceContainer_c ComponentInstanceContainer ;
public void relateAcrossR2975To(ComponentInstanceContainer_c target)
{
	relateAcrossR2975To(target, true);
}
public void relateAcrossR2975To(ComponentInstanceContainer_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ComponentInstanceContainer) return;  // already related

    if ( ComponentInstanceContainer != target ) {
    
    Object oldKey = getInstanceKey();

    if (ComponentInstanceContainer != null) {
    
        ComponentInstanceContainer.clearBackPointerR2975To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentInstance_c.relateAcrossR2975To(ComponentInstanceContainer_c target)", 
			"Relate performed across R2975 from Component Instance to Component Instance Container without unrelate of prior instance.");  
		}
    }
                
    	ComponentInstanceContainer = target ;
        if(IdAssigner.NULL_UUID.equals(target.getContainer_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_container_id = target.getContainer_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR2975To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "2975", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR2975From(ComponentInstanceContainer_c target)
{
	unrelateAcrossR2975From(target, true);
}
public void unrelateAcrossR2975From(ComponentInstanceContainer_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ComponentInstanceContainer == null) return;  // already unrelated
	
	if (target != ComponentInstanceContainer) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R2975", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR2975To(this);
    }
    

      if(ComponentInstanceContainer != null) {
      
        m_container_id = ComponentInstanceContainer.getContainer_id();
        if(IdAssigner.NULL_UUID.equals(m_container_id))
        {
          m_container_id = ComponentInstanceContainer.getContainer_idCachedValue();
        }       
        ComponentInstanceContainer = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "2975", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentInstance_c getOneI_EXEOnR2975(ComponentInstanceContainer_c [] targets)
{
    return getOneI_EXEOnR2975(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2975(ComponentInstanceContainer_c [] targets, ClassQueryInterface_c test)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneI_EXEOnR2975(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2975(ComponentInstanceContainer_c target)
{
  return getOneI_EXEOnR2975(target, null);
}

public static ComponentInstance_c getOneI_EXEOnR2975(ComponentInstanceContainer_c target, boolean loadComponent)
{
    return getOneI_EXEOnR2975(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentInstance_c getOneI_EXEOnR2975(ComponentInstanceContainer_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneI_EXEOnR2975(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentInstance_c getOneI_EXEOnR2975(ModelRoot modelRoot, ComponentInstanceContainer_c target, ClassQueryInterface_c test)
{
	return getOneI_EXEOnR2975(modelRoot, target, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2975(ModelRoot modelRoot, ComponentInstanceContainer_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneI_EXEOnR2975(modelRoot,target,test);
}
private static ComponentInstance_c find_getOneI_EXEOnR2975(ModelRoot modelRoot, ComponentInstanceContainer_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ComponentInstance_R2975) {
	    for ( int i = 0; i < target.backPointer_ComponentInstance_R2975.size(); ++i ) {
	      ComponentInstance_c source = (ComponentInstance_c)target.backPointer_ComponentInstance_R2975.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2975(ComponentInstanceContainer_c [] targets)
{
  return getManyI_EXEsOnR2975(targets, null);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2975(ComponentInstanceContainer_c [] targets, boolean loadComponent)
{
  return getManyI_EXEsOnR2975(targets, null, loadComponent);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2975(ComponentInstanceContainer_c [] targets, ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2975(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2975(ComponentInstanceContainer_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentInstance_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ComponentInstance_R2975) {
	    for (int j = 0; j < targets[i].backPointer_ComponentInstance_R2975.size(); ++j) {
	      ComponentInstance_c source = (ComponentInstance_c)targets[i].backPointer_ComponentInstance_R2975.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentInstance_c[0];
  }
  }

public static ComponentInstance_c [] getManyI_EXEsOnR2975(ComponentInstanceContainer_c target)
{
  return getManyI_EXEsOnR2975(target, null);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2975(ComponentInstanceContainer_c target, boolean loadComponent)
{
  return getManyI_EXEsOnR2975(target, null, loadComponent);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2975(ComponentInstanceContainer_c target, ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2975(target, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2975(ComponentInstanceContainer_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ComponentInstance_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_ComponentInstance_R2975) {
    for (int i = 0; i < target.backPointer_ComponentInstance_R2975.size(); ++i) {
      ComponentInstance_c source = (ComponentInstance_c)target.backPointer_ComponentInstance_R2975.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ComponentInstance_c[0];
	}
  }


  
    
// referring navigation

Domain_c IsVerifyingDomain ;
public void relateAcrossR2948To(Domain_c target)
{
	relateAcrossR2948To(target, true);
}
public void relateAcrossR2948To(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsVerifyingDomain) return;  // already related

    if ( IsVerifyingDomain != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsVerifyingDomain != null) {
    
        IsVerifyingDomain.clearBackPointerR2948To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentInstance_c.relateAcrossR2948To(Domain_c target)", 
			"Relate performed across R2948 from Component Instance to Domain without unrelate of prior instance.");  
		}
    }
                
    	IsVerifyingDomain = target ;
        m_dom_id = target.getDom_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR2948To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "2948", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR2948From(Domain_c target)
{
	unrelateAcrossR2948From(target, true);
}
public void unrelateAcrossR2948From(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsVerifyingDomain == null) return;  // already unrelated
	
	if (target != IsVerifyingDomain) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R2948", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR2948To(this);
    }
    

      if(IsVerifyingDomain != null) {
      
        m_dom_id = IsVerifyingDomain.getDom_id();
        IsVerifyingDomain = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "2948", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentInstance_c getOneI_EXEOnR2948(Domain_c [] targets)
{
    return getOneI_EXEOnR2948(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2948(Domain_c [] targets, ClassQueryInterface_c test)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneI_EXEOnR2948(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2948(Domain_c target)
{
  return getOneI_EXEOnR2948(target, null);
}

public static ComponentInstance_c getOneI_EXEOnR2948(Domain_c target, boolean loadComponent)
{
    return getOneI_EXEOnR2948(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentInstance_c getOneI_EXEOnR2948(Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneI_EXEOnR2948(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentInstance_c getOneI_EXEOnR2948(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
	return getOneI_EXEOnR2948(modelRoot, target, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2948(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneI_EXEOnR2948(modelRoot,target,test);
}
private static ComponentInstance_c find_getOneI_EXEOnR2948(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    ComponentInstance_c source = (ComponentInstance_c)target.backPointer_IsBeingVerifiedByComponentInstanceIsBeingVerifiedBy_R2948;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2948(Domain_c [] targets)
{
  return getManyI_EXEsOnR2948(targets, null);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2948(Domain_c [] targets, boolean loadComponent)
{
  return getManyI_EXEsOnR2948(targets, null, loadComponent);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2948(Domain_c [] targets, ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2948(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2948(Domain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentInstance_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      ComponentInstance_c source = (ComponentInstance_c)targets[i].backPointer_IsBeingVerifiedByComponentInstanceIsBeingVerifiedBy_R2948;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentInstance_c[0];
  }
  }

public static ComponentInstance_c [] getManyI_EXEsOnR2948(Domain_c target)
{
  if (target != null) {
    Domain_c [] targetArray = new Domain_c[1];
    targetArray[0] = target;
    return getManyI_EXEsOnR2948(targetArray);
  } else {
    ComponentInstance_c [] result = new ComponentInstance_c [0] ;
  return result ;
}
}

public static ComponentInstance_c [] getManyI_EXEsOnR2948(Domain_c target, boolean loadComponent)
{
  if (target != null) {
    Domain_c [] targetArray = new Domain_c[1];
    targetArray[0] = target;
    return getManyI_EXEsOnR2948(targetArray, loadComponent);
  } else {
    ComponentInstance_c [] result = new ComponentInstance_c [0] ;
  return result ;
}
}



  
    
// referring navigation

Component_c IsVerifyingInstanceOfComponent ;
public void relateAcrossR2955To(Component_c target)
{
	relateAcrossR2955To(target, true);
}
public void relateAcrossR2955To(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsVerifyingInstanceOfComponent) return;  // already related

    if ( IsVerifyingInstanceOfComponent != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsVerifyingInstanceOfComponent != null) {
    
        IsVerifyingInstanceOfComponent.clearBackPointerR2955To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentInstance_c.relateAcrossR2955To(Component_c target)", 
			"Relate performed across R2955 from Component Instance to Component without unrelate of prior instance.");  
		}
    }
                
    	IsVerifyingInstanceOfComponent = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR2955To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "2955", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR2955From(Component_c target)
{
	unrelateAcrossR2955From(target, true);
}
public void unrelateAcrossR2955From(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsVerifyingInstanceOfComponent == null) return;  // already unrelated
	
	if (target != IsVerifyingInstanceOfComponent) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R2955", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR2955To(this);
    }
    

      if(IsVerifyingInstanceOfComponent != null) {
      
        m_component_id = IsVerifyingInstanceOfComponent.getId();
        if(IdAssigner.NULL_UUID.equals(m_component_id))
        {
          m_component_id = IsVerifyingInstanceOfComponent.getIdCachedValue();
        }       
        IsVerifyingInstanceOfComponent = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "2955", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentInstance_c getOneI_EXEOnR2955(Component_c [] targets)
{
    return getOneI_EXEOnR2955(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2955(Component_c [] targets, ClassQueryInterface_c test)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneI_EXEOnR2955(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2955(Component_c target)
{
  return getOneI_EXEOnR2955(target, null);
}

public static ComponentInstance_c getOneI_EXEOnR2955(Component_c target, boolean loadComponent)
{
    return getOneI_EXEOnR2955(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentInstance_c getOneI_EXEOnR2955(Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneI_EXEOnR2955(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentInstance_c getOneI_EXEOnR2955(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
	return getOneI_EXEOnR2955(modelRoot, target, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2955(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneI_EXEOnR2955(modelRoot,target,test);
}
private static ComponentInstance_c find_getOneI_EXEOnR2955(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955) {
	    for ( int i = 0; i < target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955.size(); ++i ) {
	      ComponentInstance_c source = (ComponentInstance_c)target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2955(Component_c [] targets)
{
  return getManyI_EXEsOnR2955(targets, null);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2955(Component_c [] targets, boolean loadComponent)
{
  return getManyI_EXEsOnR2955(targets, null, loadComponent);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2955(Component_c [] targets, ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2955(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2955(Component_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentInstance_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955) {
	    for (int j = 0; j < targets[i].backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955.size(); ++j) {
	      ComponentInstance_c source = (ComponentInstance_c)targets[i].backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentInstance_c[0];
  }
  }

public static ComponentInstance_c [] getManyI_EXEsOnR2955(Component_c target)
{
  return getManyI_EXEsOnR2955(target, null);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2955(Component_c target, boolean loadComponent)
{
  return getManyI_EXEsOnR2955(target, null, loadComponent);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2955(Component_c target, ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2955(target, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2955(Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ComponentInstance_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955) {
    for (int i = 0; i < target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955.size(); ++i) {
      ComponentInstance_c source = (ComponentInstance_c)target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2955.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ComponentInstance_c[0];
	}
  }


  
    
// referring navigation

ComponentReference_c IsVerifyingInstanceOfComponentReference ;
public void relateAcrossR2963To(ComponentReference_c target)
{
	relateAcrossR2963To(target, true);
}
public void relateAcrossR2963To(ComponentReference_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsVerifyingInstanceOfComponentReference) return;  // already related

    if ( IsVerifyingInstanceOfComponentReference != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsVerifyingInstanceOfComponentReference != null) {
    
        IsVerifyingInstanceOfComponentReference.clearBackPointerR2963To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentInstance_c.relateAcrossR2963To(ComponentReference_c target)", 
			"Relate performed across R2963 from Component Instance to Component Reference without unrelate of prior instance.");  
		}
    }
                
    	IsVerifyingInstanceOfComponentReference = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_importedcomponent_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR2963To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "2963", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR2963From(ComponentReference_c target)
{
	unrelateAcrossR2963From(target, true);
}
public void unrelateAcrossR2963From(ComponentReference_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsVerifyingInstanceOfComponentReference == null) return;  // already unrelated
	
	if (target != IsVerifyingInstanceOfComponentReference) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R2963", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR2963To(this);
    }
    

      if(IsVerifyingInstanceOfComponentReference != null) {
      
        m_importedcomponent_id = IsVerifyingInstanceOfComponentReference.getId();
        if(IdAssigner.NULL_UUID.equals(m_importedcomponent_id))
        {
          m_importedcomponent_id = IsVerifyingInstanceOfComponentReference.getIdCachedValue();
        }       
        IsVerifyingInstanceOfComponentReference = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "2963", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentInstance_c getOneI_EXEOnR2963(ComponentReference_c [] targets)
{
    return getOneI_EXEOnR2963(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2963(ComponentReference_c [] targets, ClassQueryInterface_c test)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneI_EXEOnR2963(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2963(ComponentReference_c target)
{
  return getOneI_EXEOnR2963(target, null);
}

public static ComponentInstance_c getOneI_EXEOnR2963(ComponentReference_c target, boolean loadComponent)
{
    return getOneI_EXEOnR2963(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentInstance_c getOneI_EXEOnR2963(ComponentReference_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneI_EXEOnR2963(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentInstance_c getOneI_EXEOnR2963(ModelRoot modelRoot, ComponentReference_c target, ClassQueryInterface_c test)
{
	return getOneI_EXEOnR2963(modelRoot, target, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2963(ModelRoot modelRoot, ComponentReference_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneI_EXEOnR2963(modelRoot,target,test);
}
private static ComponentInstance_c find_getOneI_EXEOnR2963(ModelRoot modelRoot, ComponentReference_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963) {
	    for ( int i = 0; i < target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963.size(); ++i ) {
	      ComponentInstance_c source = (ComponentInstance_c)target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2963(ComponentReference_c [] targets)
{
  return getManyI_EXEsOnR2963(targets, null);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2963(ComponentReference_c [] targets, boolean loadComponent)
{
  return getManyI_EXEsOnR2963(targets, null, loadComponent);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2963(ComponentReference_c [] targets, ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2963(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2963(ComponentReference_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentInstance_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963) {
	    for (int j = 0; j < targets[i].backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963.size(); ++j) {
	      ComponentInstance_c source = (ComponentInstance_c)targets[i].backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentInstance_c[0];
  }
  }

public static ComponentInstance_c [] getManyI_EXEsOnR2963(ComponentReference_c target)
{
  return getManyI_EXEsOnR2963(target, null);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2963(ComponentReference_c target, boolean loadComponent)
{
  return getManyI_EXEsOnR2963(target, null, loadComponent);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2963(ComponentReference_c target, ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2963(target, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2963(ComponentReference_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ComponentInstance_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963) {
    for (int i = 0; i < target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963.size(); ++i) {
      ComponentInstance_c source = (ComponentInstance_c)target.backPointer_InstanceBeingVerifiedByComponentInstanceInstanceBeingVerifiedBy_R2963.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ComponentInstance_c[0];
	}
  }


  
    
// referring navigation

Package_c IsVerifyingPackage ;
public void relateAcrossR2970To(Package_c target)
{
	relateAcrossR2970To(target, true);
}
public void relateAcrossR2970To(Package_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsVerifyingPackage) return;  // already related

    if ( IsVerifyingPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsVerifyingPackage != null) {
    
        IsVerifyingPackage.clearBackPointerR2970To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ComponentInstance_c.relateAcrossR2970To(Package_c target)", 
			"Relate performed across R2970 from Component Instance to Package without unrelate of prior instance.");  
		}
    }
                
    	IsVerifyingPackage = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR2970To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "2970", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR2970From(Package_c target)
{
	unrelateAcrossR2970From(target, true);
}
public void unrelateAcrossR2970From(Package_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsVerifyingPackage == null) return;  // already unrelated
	
	if (target != IsVerifyingPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R2970", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR2970To(this);
    }
    

      if(IsVerifyingPackage != null) {
      
        m_package_id = IsVerifyingPackage.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_package_id))
        {
          m_package_id = IsVerifyingPackage.getPackage_idCachedValue();
        }       
        IsVerifyingPackage = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "2970", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ComponentInstance_c getOneI_EXEOnR2970(Package_c [] targets)
{
    return getOneI_EXEOnR2970(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2970(Package_c [] targets, ClassQueryInterface_c test)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneI_EXEOnR2970(targets[i], test);
        }
    }

    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2970(Package_c target)
{
  return getOneI_EXEOnR2970(target, null);
}

public static ComponentInstance_c getOneI_EXEOnR2970(Package_c target, boolean loadComponent)
{
    return getOneI_EXEOnR2970(target.getModelRoot(), target, null, loadComponent);
}

public static ComponentInstance_c getOneI_EXEOnR2970(Package_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneI_EXEOnR2970(target.getModelRoot(), target, test);
  }
  return null;
}

public static ComponentInstance_c getOneI_EXEOnR2970(ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test)
{
	return getOneI_EXEOnR2970(modelRoot, target, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2970(ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneI_EXEOnR2970(modelRoot,target,test);
}
private static ComponentInstance_c find_getOneI_EXEOnR2970(ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    ComponentInstance_c source = (ComponentInstance_c)target.backPointer_IsBeingVerifiedByComponentInstanceIsBeingVerifiedBy_R2970;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2970(Package_c [] targets)
{
  return getManyI_EXEsOnR2970(targets, null);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2970(Package_c [] targets, boolean loadComponent)
{
  return getManyI_EXEsOnR2970(targets, null, loadComponent);
}
public static ComponentInstance_c [] getManyI_EXEsOnR2970(Package_c [] targets, ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2970(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2970(Package_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ComponentInstance_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      ComponentInstance_c source = (ComponentInstance_c)targets[i].backPointer_IsBeingVerifiedByComponentInstanceIsBeingVerifiedBy_R2970;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ComponentInstance_c[0];
  }
  }

public static ComponentInstance_c [] getManyI_EXEsOnR2970(Package_c target)
{
  if (target != null) {
    Package_c [] targetArray = new Package_c[1];
    targetArray[0] = target;
    return getManyI_EXEsOnR2970(targetArray);
  } else {
    ComponentInstance_c [] result = new ComponentInstance_c [0] ;
  return result ;
}
}

public static ComponentInstance_c [] getManyI_EXEsOnR2970(Package_c target, boolean loadComponent)
{
  if (target != null) {
    Package_c [] targetArray = new Package_c[1];
    targetArray[0] = target;
    return getManyI_EXEsOnR2970(targetArray, loadComponent);
  } else {
    ComponentInstance_c [] result = new ComponentInstance_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<PendingEvent_c> backPointer_HousesPendingEventHouses_R2964 = new ArrayList<PendingEvent_c>();

public void setPendingEventOrderInChildListR2964(PendingEvent_c target, int index) {
	unrelateAcrossR2964From(target);
	PendingEvent_c[] elements = PendingEvent_c.getManyI_EVIsOnR2964(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2964From((PendingEvent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2964To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2964To((PendingEvent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2964To(PendingEvent_c target)
{
  if (target != null) {
    target.relateAcrossR2964To(this, true) ;
  }
}

public void relateAcrossR2964To(PendingEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2964To(this, notifyChanges) ;
  }
}

public void setBackPointerR2964To(PendingEvent_c target)
{
  	synchronized (backPointer_HousesPendingEventHouses_R2964) {
		backPointer_HousesPendingEventHouses_R2964.add(target);
	}
}

public void unrelateAcrossR2964From(PendingEvent_c target)
{
  if (target != null) {
    target.unrelateAcrossR2964From(this, true) ;
  }
}

public void unrelateAcrossR2964From(PendingEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2964From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2964To(PendingEvent_c target)
{
  synchronized (backPointer_HousesPendingEventHouses_R2964) {
	    backPointer_HousesPendingEventHouses_R2964.remove(target);
	}
}

public static ComponentInstance_c getOneI_EXEOnR2964(PendingEvent_c [] targets)
{
    return getOneI_EXEOnR2964(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2964(PendingEvent_c [] targets, ClassQueryInterface_c test)
{
    return getOneI_EXEOnR2964(targets, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2964(PendingEvent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ComponentInstance_c candidate_val = getOneI_EXEOnR2964(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneI_EXEOnR2964(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2964(PendingEvent_c target)
{
	return getOneI_EXEOnR2964(target, true);
}
public static ComponentInstance_c getOneI_EXEOnR2964(PendingEvent_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsPendingInComponentInstance ;
  } else {
    return null;
  }
}

public static ComponentInstance_c [] getManyI_EXEsOnR2964(PendingEvent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2964(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2964(PendingEvent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ComponentInstance_c[0];
  
  
  LinkedHashSet<ComponentInstance_c> elementsSet = new LinkedHashSet<ComponentInstance_c>();
  for (int i = 0; i < targets.length; i++) {
    ComponentInstance_c associate = targets[i].IsPendingInComponentInstance;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ComponentInstance_c[] result = new ComponentInstance_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2964(PendingEvent_c [] targets)
{
  return getManyI_EXEsOnR2964(targets, null);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2964(PendingEvent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    PendingEvent_c [] targetArray = new PendingEvent_c[1];
    targetArray[0] = target;
    return getManyI_EXEsOnR2964(targetArray, test, loadComponent);
  } else {
    ComponentInstance_c [] result = new ComponentInstance_c [0] ;
    return result ;
  }
  
}

public static ComponentInstance_c [] getManyI_EXEsOnR2964(PendingEvent_c target,
    ClassQueryInterface_c test)
{
    return getManyI_EXEsOnR2964(target, null, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2964(PendingEvent_c target)
{
    return getManyI_EXEsOnR2964(target, null, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2964(PendingEvent_c target, boolean loadComponent)
{
    return getManyI_EXEsOnR2964(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<PendingEvent_c> backPointer_SendsPendingEventSends_R2976 = new ArrayList<PendingEvent_c>();

public void setPendingEventOrderInChildListR2976(PendingEvent_c target, int index) {
	unrelateAcrossR2976From(target);
	PendingEvent_c[] elements = PendingEvent_c.getManyI_EVIsOnR2976(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2976From((PendingEvent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2976To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2976To((PendingEvent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2976To(PendingEvent_c target)
{
  if (target != null) {
    target.relateAcrossR2976To(this, true) ;
  }
}

public void relateAcrossR2976To(PendingEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2976To(this, notifyChanges) ;
  }
}

public void setBackPointerR2976To(PendingEvent_c target)
{
  	synchronized (backPointer_SendsPendingEventSends_R2976) {
		backPointer_SendsPendingEventSends_R2976.add(target);
	}
}

public void unrelateAcrossR2976From(PendingEvent_c target)
{
  if (target != null) {
    target.unrelateAcrossR2976From(this, true) ;
  }
}

public void unrelateAcrossR2976From(PendingEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2976From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2976To(PendingEvent_c target)
{
  synchronized (backPointer_SendsPendingEventSends_R2976) {
	    backPointer_SendsPendingEventSends_R2976.remove(target);
	}
}

public static ComponentInstance_c getOneI_EXEOnR2976(PendingEvent_c [] targets)
{
    return getOneI_EXEOnR2976(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2976(PendingEvent_c [] targets, ClassQueryInterface_c test)
{
    return getOneI_EXEOnR2976(targets, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2976(PendingEvent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ComponentInstance_c candidate_val = getOneI_EXEOnR2976(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneI_EXEOnR2976(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2976(PendingEvent_c target)
{
	return getOneI_EXEOnR2976(target, true);
}
public static ComponentInstance_c getOneI_EXEOnR2976(PendingEvent_c target, boolean loadComponent)
{
  if (target != null) {
    return target.OriginatesFromComponentInstance ;
  } else {
    return null;
  }
}

public static ComponentInstance_c [] getManyI_EXEsOnR2976(PendingEvent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2976(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2976(PendingEvent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ComponentInstance_c[0];
  
  
  LinkedHashSet<ComponentInstance_c> elementsSet = new LinkedHashSet<ComponentInstance_c>();
  for (int i = 0; i < targets.length; i++) {
    ComponentInstance_c associate = targets[i].OriginatesFromComponentInstance;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ComponentInstance_c[] result = new ComponentInstance_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2976(PendingEvent_c [] targets)
{
  return getManyI_EXEsOnR2976(targets, null);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2976(PendingEvent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    PendingEvent_c [] targetArray = new PendingEvent_c[1];
    targetArray[0] = target;
    return getManyI_EXEsOnR2976(targetArray, test, loadComponent);
  } else {
    ComponentInstance_c [] result = new ComponentInstance_c [0] ;
    return result ;
  }
  
}

public static ComponentInstance_c [] getManyI_EXEsOnR2976(PendingEvent_c target,
    ClassQueryInterface_c test)
{
    return getManyI_EXEsOnR2976(target, null, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2976(PendingEvent_c target)
{
    return getManyI_EXEsOnR2976(target, null, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2976(PendingEvent_c target, boolean loadComponent)
{
    return getManyI_EXEsOnR2976(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Instance_c> backPointer_CreatesInstanceCreates_R2957 = new ArrayList<Instance_c>();

public void setInstanceOrderInChildListR2957(Instance_c target, int index) {
	unrelateAcrossR2957From(target);
	Instance_c[] elements = Instance_c.getManyI_INSsOnR2957(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2957From((Instance_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2957To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2957To((Instance_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2957To(Instance_c target)
{
  if (target != null) {
    target.relateAcrossR2957To(this, true) ;
  }
}

public void relateAcrossR2957To(Instance_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2957To(this, notifyChanges) ;
  }
}

public void setBackPointerR2957To(Instance_c target)
{
  	synchronized (backPointer_CreatesInstanceCreates_R2957) {
		backPointer_CreatesInstanceCreates_R2957.add(target);
	}
}

public void unrelateAcrossR2957From(Instance_c target)
{
  if (target != null) {
    target.unrelateAcrossR2957From(this, true) ;
  }
}

public void unrelateAcrossR2957From(Instance_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2957From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2957To(Instance_c target)
{
  synchronized (backPointer_CreatesInstanceCreates_R2957) {
	    backPointer_CreatesInstanceCreates_R2957.remove(target);
	}
}

public static ComponentInstance_c getOneI_EXEOnR2957(Instance_c [] targets)
{
    return getOneI_EXEOnR2957(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2957(Instance_c [] targets, ClassQueryInterface_c test)
{
    return getOneI_EXEOnR2957(targets, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2957(Instance_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ComponentInstance_c candidate_val = getOneI_EXEOnR2957(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneI_EXEOnR2957(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2957(Instance_c target)
{
	return getOneI_EXEOnR2957(target, true);
}
public static ComponentInstance_c getOneI_EXEOnR2957(Instance_c target, boolean loadComponent)
{
  if (target != null) {
    return target.CreatedByComponentInstance ;
  } else {
    return null;
  }
}

public static ComponentInstance_c [] getManyI_EXEsOnR2957(Instance_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2957(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2957(Instance_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ComponentInstance_c[0];
  
  
  LinkedHashSet<ComponentInstance_c> elementsSet = new LinkedHashSet<ComponentInstance_c>();
  for (int i = 0; i < targets.length; i++) {
    ComponentInstance_c associate = targets[i].CreatedByComponentInstance;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ComponentInstance_c[] result = new ComponentInstance_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2957(Instance_c [] targets)
{
  return getManyI_EXEsOnR2957(targets, null);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2957(Instance_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Instance_c [] targetArray = new Instance_c[1];
    targetArray[0] = target;
    return getManyI_EXEsOnR2957(targetArray, test, loadComponent);
  } else {
    ComponentInstance_c [] result = new ComponentInstance_c [0] ;
    return result ;
  }
  
}

public static ComponentInstance_c [] getManyI_EXEsOnR2957(Instance_c target,
    ClassQueryInterface_c test)
{
    return getManyI_EXEsOnR2957(target, null, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2957(Instance_c target)
{
    return getManyI_EXEsOnR2957(target, null, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2957(Instance_c target, boolean loadComponent)
{
    return getManyI_EXEsOnR2957(target, null, loadComponent);
}


    
  
  
// referred to navigation

ComponentInstanceContainer_c backPointer_ComponentInstanceContainer_R2974;

public void setComponentInstanceContainerOrderInChildListR2974(ComponentInstanceContainer_c target, int index) {
	unrelateAcrossR2974From(target);
	ComponentInstanceContainer_c[] elements = ComponentInstanceContainer_c.getManyI_CINsOnR2974(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2974From((ComponentInstanceContainer_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2974To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2974To((ComponentInstanceContainer_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2974To(ComponentInstanceContainer_c target)
{
  if (target != null) {
    target.relateAcrossR2974To(this, true) ;
  }
}

public void relateAcrossR2974To(ComponentInstanceContainer_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2974To(this, notifyChanges) ;
  }
}

public void setBackPointerR2974To(ComponentInstanceContainer_c target)
{
    backPointer_ComponentInstanceContainer_R2974 = target;
}

public void unrelateAcrossR2974From(ComponentInstanceContainer_c target)
{
  if (target != null) {
    target.unrelateAcrossR2974From(this, true) ;
  }
}

public void unrelateAcrossR2974From(ComponentInstanceContainer_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2974From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2974To(ComponentInstanceContainer_c target)
{
	if (target == backPointer_ComponentInstanceContainer_R2974) {
		backPointer_ComponentInstanceContainer_R2974 = null;
	}
}

public static ComponentInstance_c getOneI_EXEOnR2974(ComponentInstanceContainer_c [] targets)
{
    return getOneI_EXEOnR2974(targets, null);
}

public static ComponentInstance_c getOneI_EXEOnR2974(ComponentInstanceContainer_c [] targets, ClassQueryInterface_c test)
{
    return getOneI_EXEOnR2974(targets, test, true);
}

public static ComponentInstance_c getOneI_EXEOnR2974(ComponentInstanceContainer_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ComponentInstance_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ComponentInstance_c candidate_val = getOneI_EXEOnR2974(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneI_EXEOnR2974(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ComponentInstance_c getOneI_EXEOnR2974(ComponentInstanceContainer_c target)
{
	return getOneI_EXEOnR2974(target, true);
}
public static ComponentInstance_c getOneI_EXEOnR2974(ComponentInstanceContainer_c target, boolean loadComponent)
{
  if (target != null) {
    return target.ComponentInstance ;
  } else {
    return null;
  }
}

public static ComponentInstance_c [] getManyI_EXEsOnR2974(ComponentInstanceContainer_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyI_EXEsOnR2974(targets, test, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2974(ComponentInstanceContainer_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ComponentInstance_c[0];
  
  
  LinkedHashSet<ComponentInstance_c> elementsSet = new LinkedHashSet<ComponentInstance_c>();
  for (int i = 0; i < targets.length; i++) {
    ComponentInstance_c associate = targets[i].ComponentInstance;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ComponentInstance_c[] result = new ComponentInstance_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ComponentInstance_c [] getManyI_EXEsOnR2974(ComponentInstanceContainer_c [] targets)
{
  return getManyI_EXEsOnR2974(targets, null);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2974(ComponentInstanceContainer_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ComponentInstanceContainer_c [] targetArray = new ComponentInstanceContainer_c[1];
    targetArray[0] = target;
    return getManyI_EXEsOnR2974(targetArray, test, loadComponent);
  } else {
    ComponentInstance_c [] result = new ComponentInstance_c [0] ;
    return result ;
  }
  
}

public static ComponentInstance_c [] getManyI_EXEsOnR2974(ComponentInstanceContainer_c target,
    ClassQueryInterface_c test)
{
    return getManyI_EXEsOnR2974(target, null, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2974(ComponentInstanceContainer_c target)
{
    return getManyI_EXEsOnR2974(target, null, true);
}

public static ComponentInstance_c [] getManyI_EXEsOnR2974(ComponentInstanceContainer_c target, boolean loadComponent)
{
    return getManyI_EXEsOnR2974(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (ComponentInstanceContainer == null) {          
      // R2975
      ComponentInstanceContainer_c relInst40896 = (ComponentInstanceContainer_c) baseRoot.getInstanceList(ComponentInstanceContainer_c.class).get(new Object[] {m_container_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40896 == null) {
      			relInst40896 = (ComponentInstanceContainer_c) Ooaofooa.getDefaultInstance().getInstanceList(ComponentInstanceContainer_c.class).get(new Object[] {m_container_id});
      		}
			if (relInst40896 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40896 = (ComponentInstanceContainer_c) roots[i].getInstanceList(ComponentInstanceContainer_c.class).get(new Object[] {m_container_id});
					if (relInst40896 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40896 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40896) && !isProxy())) {
	      relInst40896.relateAcrossR2975To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsVerifyingDomain == null) {          
      // R2948
      Domain_c relInst40897 = (Domain_c) baseRoot.getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40897 == null) {
      			relInst40897 = (Domain_c) Ooaofooa.getDefaultInstance().getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
      		}
			if (relInst40897 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40897 = (Domain_c) roots[i].getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
					if (relInst40897 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40897 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40897) && !isProxy())) {
	      relInst40897.relateAcrossR2948To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsVerifyingInstanceOfComponent == null) {          
      // R2955
      Component_c relInst40898 = (Component_c) baseRoot.getInstanceList(Component_c.class).get(new Object[] {m_component_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40898 == null) {
      			relInst40898 = (Component_c) Ooaofooa.getDefaultInstance().getInstanceList(Component_c.class).get(new Object[] {m_component_id});
      		}
			if (relInst40898 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40898 = (Component_c) roots[i].getInstanceList(Component_c.class).get(new Object[] {m_component_id});
					if (relInst40898 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40898 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40898) && !isProxy())) {
	      relInst40898.relateAcrossR2955To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsVerifyingInstanceOfComponentReference == null) {          
      // R2963
      ComponentReference_c relInst40899 = (ComponentReference_c) baseRoot.getInstanceList(ComponentReference_c.class).get(new Object[] {m_importedcomponent_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40899 == null) {
      			relInst40899 = (ComponentReference_c) Ooaofooa.getDefaultInstance().getInstanceList(ComponentReference_c.class).get(new Object[] {m_importedcomponent_id});
      		}
			if (relInst40899 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40899 = (ComponentReference_c) roots[i].getInstanceList(ComponentReference_c.class).get(new Object[] {m_importedcomponent_id});
					if (relInst40899 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40899 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40899) && !isProxy())) {
	      relInst40899.relateAcrossR2963To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsVerifyingPackage == null) {          
      // R2970
      Package_c relInst40900 = (Package_c) baseRoot.getInstanceList(Package_c.class).get(new Object[] {m_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40900 == null) {
      			relInst40900 = (Package_c) Ooaofooa.getDefaultInstance().getInstanceList(Package_c.class).get(new Object[] {m_package_id});
      		}
			if (relInst40900 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40900 = (Package_c) roots[i].getInstanceList(Package_c.class).get(new Object[] {m_package_id});
					if (relInst40900 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40900 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40900) && !isProxy())) {
	      relInst40900.relateAcrossR2970To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R2975
      // I_CIN
		  inst=ComponentInstanceContainer;
			unrelateAcrossR2975From(ComponentInstanceContainer, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R2948
      // S_DOM
		  inst=IsVerifyingDomain;
			unrelateAcrossR2948From(IsVerifyingDomain, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R2955
      // C_C
		  inst=IsVerifyingInstanceOfComponent;
			unrelateAcrossR2955From(IsVerifyingInstanceOfComponent, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R2963
      // CL_IC
		  inst=IsVerifyingInstanceOfComponentReference;
			unrelateAcrossR2963From(IsVerifyingInstanceOfComponentReference, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R2970
      // EP_PKG
		  inst=IsVerifyingPackage;
			unrelateAcrossR2970From(IsVerifyingPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ComponentInstance_c inst = (ComponentInstance_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ComponentInstance_c ComponentInstanceInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ComponentInstance_c result=findComponentInstanceInstance(modelRoot,test,loadComponent);
	  return result;  
  }
private static ComponentInstance_c findComponentInstanceInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ComponentInstance_c x = (ComponentInstance_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					return x;
			}
		}
		}
			return null;
}
  public static ComponentInstance_c ComponentInstanceInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ComponentInstanceInstance(modelRoot,test,true);
  }
  
  public static ComponentInstance_c ComponentInstanceInstance(ModelRoot modelRoot)
  {
	 return ComponentInstanceInstance(modelRoot,null,true);
  }

  public static ComponentInstance_c [] ComponentInstanceInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
		    InstanceList instances = modelRoot.getInstanceList(ComponentInstance_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ComponentInstance_c x = (ComponentInstance_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ComponentInstance_c[] ret_set = new ComponentInstance_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ComponentInstance_c[0];
			}		
		} 
  }
  public static ComponentInstance_c [] ComponentInstanceInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ComponentInstanceInstances(modelRoot,test,true);
  }
  public static ComponentInstance_c [] ComponentInstanceInstances(ModelRoot modelRoot)
  {
	return ComponentInstanceInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Component Instance.dispose call: ";
	PendingEvent_c testR2964Inst = PendingEvent_c.getOneI_EVIOnR2964(this, false);

	if ( testR2964Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2964 ";	
	}
	PendingEvent_c testR2976Inst = PendingEvent_c.getOneI_EVIOnR2976(this, false);

	if ( testR2976Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2976 ";	
	}
	Instance_c testR2957Inst = Instance_c.getOneI_INSOnR2957(this, false);

	if ( testR2957Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2957 ";	
	}
	ComponentInstanceContainer_c testR2974Inst = ComponentInstanceContainer_c.getOneI_CINOnR2974(this, false);

	if ( testR2974Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2974 ";	
	}
	ComponentInstanceContainer_c testR2975Inst = ComponentInstanceContainer_c.getOneI_CINOnR2975(this, false);

	if ( testR2975Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "2975 ";
	}
	Domain_c testR2948Inst = Domain_c.getOneS_DOMOnR2948(this, false);

	if ( testR2948Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "2948 ";
	}
	Component_c testR2955Inst = Component_c.getOneC_COnR2955(this, false);

	if ( testR2955Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "2955 ";
	}
	ComponentReference_c testR2963Inst = ComponentReference_c.getOneCL_ICOnR2963(this, false);

	if ( testR2963Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "2963 ";
	}
	Package_c testR2970Inst = Package_c.getOneEP_PKGOnR2970(this, false);

	if ( testR2970Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "2970 ";
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Component Instance", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("execution_engine_id")){
         return true;
      }
      if(attributeName.equals("dom_id")){
         return true;
      }
      if(attributeName.equals("component_id")){
         return true;
      }
      if(attributeName.equals("importedcomponent_id")){
         return true;
      }
      if(attributeName.equals("package_id")){
         return true;
      }
      if(attributeName.equals("container_id")){
         return true;
      }
      return false;      
  }      
  // declare attribute accessors
  public long getExecution_engine_idLongBased()
  {
    if(m_execution_engine_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_execution_engine_id)){
    	return 0xfffffff & m_execution_engine_id.getLeastSignificantBits();
    }
    return m_execution_engine_idLongBased ;
  }
  public java.util.UUID getExecution_engine_id()
  {
    return m_execution_engine_id ;
  }


  public void setExecution_engine_id(java.util.UUID newValue)
  {
   m_execution_engine_id = IdAssigner.preprocessUUID(newValue);
  }
  public boolean getRunning()
  {
    return m_running ;
  }


  public void setRunning(boolean newValue)
  {
    if(m_running == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Running", new Boolean(m_running), new Boolean(newValue),false);

   m_running = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getNext_unique_id()
  {
    return m_next_unique_id ;
  }


  public void setNext_unique_id(int newValue)
  {
    if(m_next_unique_id == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Next_unique_id", new Integer(m_next_unique_id), new Integer(newValue),false);

   m_next_unique_id = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getNext_instance_id()
  {
    return m_next_instance_id ;
  }


  public void setNext_instance_id(int newValue)
  {
    if(m_next_instance_id == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Next_instance_id", new Integer(m_next_instance_id), new Integer(newValue),false);

   m_next_instance_id = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDom_idLongBased()
  {
    if ( IsVerifyingDomain != null )
    {
      return IsVerifyingDomain.getDom_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDom_id()
  {
    if ( IsVerifyingDomain != null )
    {
      return IsVerifyingDomain.getDom_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDom_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dom_id) )
      return m_dom_id;
    else
      return getDom_id();
  }
  
  public void setDom_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dom_id)){
	        return;
	    }
	}else if(m_dom_id != null){
	    if(m_dom_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dom_id", m_dom_id, newValue,false); 
   m_dom_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getLabel()
  {
ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


Component_c v_component = Component_c.getOneC_COnR2955(this);


if ( (  (v_component != null)) )
{

v_result = v_component.getLabel() ;


ComponentInstance_c [] v_engines = ComponentInstance_c.getManyI_EXEsOnR2955(v_component);


int          v_number = Getenginenumber() ;


if ( (  (v_engines.length) > 1) )
{

v_result = v_result + " - " + Gd_c.Int_to_string(			    
v_number) ;



}


}

ComponentReference_c v_icomponent = ComponentReference_c.getOneCL_ICOnR2963(this);


if ( (  (v_icomponent != null)) )
{

v_result = v_icomponent.getName() ;


ComponentInstance_c [] v_engines = ComponentInstance_c.getManyI_EXEsOnR2963(v_icomponent);


int          v_number = Getenginenumber() ;


if ( (  (v_engines.length) > 1) )
{

v_result = v_result + " - " + Gd_c.Int_to_string(			    
v_number) ;



}


}

Domain_c v_domain = Domain_c.getOneS_DOMOnR2948(this);


if ( (  (v_domain != null)) )
{

v_result = v_domain.getName() ;



}

if (   !Util_c.Isnull(			    
getRealizedby()) )
{

v_result = v_result + " (Realized)" ;



}

return v_result;



  }


  public ReentrantLock getEqe_lock()
  {
    return m_eqe_lock ;
  }


  public void setEqe_lock(ReentrantLock newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_eqe_lock)){
	        return;
	    }
	}else if(m_eqe_lock != null){
	    if(m_eqe_lock.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Eqe_lock", m_eqe_lock, newValue,false); 
   m_eqe_lock = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public ReentrantLock getSqe_lock()
  {
    return m_sqe_lock ;
  }


  public void setSqe_lock(ReentrantLock newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_sqe_lock)){
	        return;
	    }
	}else if(m_sqe_lock != null){
	    if(m_sqe_lock.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Sqe_lock", m_sqe_lock, newValue,false); 
   m_sqe_lock = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getComponent_idLongBased()
  {
    if ( IsVerifyingInstanceOfComponent != null )
    {
      return IsVerifyingInstanceOfComponent.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_id()
  {
    if ( IsVerifyingInstanceOfComponent != null )
    {
      return IsVerifyingInstanceOfComponent.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_id) )
      return m_component_id;
    else
      return getComponent_id();
  }
  
  public void setComponent_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_id)){
	        return;
	    }
	}else if(m_component_id != null){
	    if(m_component_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_id", m_component_id, newValue,false); 
   m_component_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getImportedcomponent_idLongBased()
  {
    if ( IsVerifyingInstanceOfComponentReference != null )
    {
      return IsVerifyingInstanceOfComponentReference.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getImportedcomponent_id()
  {
    if ( IsVerifyingInstanceOfComponentReference != null )
    {
      return IsVerifyingInstanceOfComponentReference.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getImportedcomponent_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_importedcomponent_id) )
      return m_importedcomponent_id;
    else
      return getImportedcomponent_id();
  }
  
  public void setImportedcomponent_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_importedcomponent_id)){
	        return;
	    }
	}else if(m_importedcomponent_id != null){
	    if(m_importedcomponent_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Importedcomponent_id", m_importedcomponent_id, newValue,false); 
   m_importedcomponent_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPackage_idLongBased()
  {
    if ( IsVerifyingPackage != null )
    {
      return IsVerifyingPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPackage_id()
  {
    if ( IsVerifyingPackage != null )
    {
      return IsVerifyingPackage.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getPackage_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_package_id) )
      return m_package_id;
    else
      return getPackage_id();
  }
  
  public void setPackage_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_package_id)){
	        return;
	    }
	}else if(m_package_id != null){
	    if(m_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Package_id", m_package_id, newValue,false); 
   m_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getContainer_idLongBased()
  {
    if ( ComponentInstanceContainer != null )
    {
      return ComponentInstanceContainer.getContainer_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getContainer_id()
  {
    if ( ComponentInstanceContainer != null )
    {
      return ComponentInstanceContainer.getContainer_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getContainer_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_container_id) )
      return m_container_id;
    else
      return getContainer_id();
  }
  
  public void setContainer_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_container_id)){
	        return;
	    }
	}else if(m_container_id != null){
	    if(m_container_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Container_id", m_container_id, newValue,false); 
   m_container_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public Object getRealizedby()
  {
    return m_realizedby ;
  }


  public void setRealizedby(Object newValue)
  {
    if(m_realizedby == newValue){
        return;
    }
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Realizedby", m_realizedby, newValue,false); 
   m_realizedby = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Component Instance", //$NON-NLS-1$
	  " Operation entered: Component Instance::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ComponentInstance_c [] objs = ComponentInstance_c.ComponentInstanceInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Component Instance", //$NON-NLS-1$
	  " Operation entered: Component Instance::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ComponentInstance_c_test40902_c implements ClassQueryInterface_c
    {
	  ComponentInstance_c_test40902_c( java.util.UUID            p40903 ) {
	  m_p40903 = p40903;
	  }
	  private java.util.UUID             m_p40903; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentInstance_c selected = (ComponentInstance_c) candidate;
	      boolean retval = false;
	      retval = (selected.getExecution_engine_id().equals(m_p40903));
	      return retval;
	  }
    }

    ComponentInstance_c [] objs40901 = 
    ComponentInstance_c.ComponentInstanceInstances(modelRoot, new ComponentInstance_c_test40902_c(getExecution_engine_id())) ;

    if ( (  (objs40901.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Instance", //$NON-NLS-1$
           "Consistency: Object: Component Instance: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40901.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Instance: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40901.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs40901.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Instance", //$NON-NLS-1$
           "Consistency: Object: Component Instance: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40901.length )  + " Execution_Engine_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Instance: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40901.length )  + " Execution_Engine_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Component Instance is a referring class in association: rel.Numb = 2948
          // The participating class is: Domain
    class Domain_c_test40907_c implements ClassQueryInterface_c
    {
	  Domain_c_test40907_c( java.util.UUID            p40908 ) {
	  m_p40908 = p40908;
	  }
	  private java.util.UUID             m_p40908; 
	  public boolean evaluate (Object candidate)
	  {
	      Domain_c selected = (Domain_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDom_id().equals(m_p40908));
	      return retval;
	  }
    }

    Domain_c [] objs40906 = 
    Domain_c.DomainInstances(modelRoot, new Domain_c_test40907_c(getDom_id())) ;

    if ( (  (objs40906.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Instance", //$NON-NLS-1$
           "Consistency: Object: Component Instance: Association: 2948: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40906.length )  + " Dom_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Instance: Association: 2948: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40906.length )  + " Dom_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Component Instance is a referring class in association: rel.Numb = 2955
          // The participating class is: Component
    class Component_c_test40910_c implements ClassQueryInterface_c
    {
	  Component_c_test40910_c( java.util.UUID            p40911 ) {
	  m_p40911 = p40911;
	  }
	  private java.util.UUID             m_p40911; 
	  public boolean evaluate (Object candidate)
	  {
	      Component_c selected = (Component_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p40911));
	      return retval;
	  }
    }

    Component_c [] objs40909 = 
    Component_c.ComponentInstances(modelRoot, new Component_c_test40910_c(getComponent_id())) ;

    if ( (  (objs40909.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Instance", //$NON-NLS-1$
           "Consistency: Object: Component Instance: Association: 2955: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40909.length )  + " Component_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Instance: Association: 2955: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40909.length )  + " Component_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Component Instance is a referring class in association: rel.Numb = 2963
          // The participating class is: Component Reference
    class ComponentReference_c_test40913_c implements ClassQueryInterface_c
    {
	  ComponentReference_c_test40913_c( java.util.UUID            p40914 ) {
	  m_p40914 = p40914;
	  }
	  private java.util.UUID             m_p40914; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentReference_c selected = (ComponentReference_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p40914));
	      return retval;
	  }
    }

    ComponentReference_c [] objs40912 = 
    ComponentReference_c.ComponentReferenceInstances(modelRoot, new ComponentReference_c_test40913_c(getImportedcomponent_id())) ;

    if ( (  (objs40912.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Instance", //$NON-NLS-1$
           "Consistency: Object: Component Instance: Association: 2963: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40912.length )  + " ImportedComponent_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Instance: Association: 2963: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40912.length )  + " ImportedComponent_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Component Instance is a referring class in association: rel.Numb = 2970
          // The participating class is: Package
    class Package_c_test40916_c implements ClassQueryInterface_c
    {
	  Package_c_test40916_c( java.util.UUID            p40917 ) {
	  m_p40917 = p40917;
	  }
	  private java.util.UUID             m_p40917; 
	  public boolean evaluate (Object candidate)
	  {
	      Package_c selected = (Package_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p40917));
	      return retval;
	  }
    }

    Package_c [] objs40915 = 
    Package_c.PackageInstances(modelRoot, new Package_c_test40916_c(getPackage_id())) ;

    if ( (  (objs40915.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Instance", //$NON-NLS-1$
           "Consistency: Object: Component Instance: Association: 2970: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40915.length )  + " Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Instance: Association: 2970: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40915.length )  + " Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Component Instance is a referring class in association: rel.Numb = 2975
          // The participating class is: Component Instance Container
    class ComponentInstanceContainer_c_test40919_c implements ClassQueryInterface_c
    {
	  ComponentInstanceContainer_c_test40919_c( java.util.UUID            p40920 ) {
	  m_p40920 = p40920;
	  }
	  private java.util.UUID             m_p40920; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentInstanceContainer_c selected = (ComponentInstanceContainer_c) candidate;
	      boolean retval = false;
	      retval = (selected.getContainer_id().equals(m_p40920));
	      return retval;
	  }
    }

    ComponentInstanceContainer_c [] objs40918 = 
    ComponentInstanceContainer_c.ComponentInstanceContainerInstances(modelRoot, new ComponentInstanceContainer_c_test40919_c(getContainer_id())) ;

    if ( (  (objs40918.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Instance", //$NON-NLS-1$
           "Consistency: Object: Component Instance: Association: 2975: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40918.length )  + " Container_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Instance: Association: 2975: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40918.length )  + " Container_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Component Instance is a participating class in association: rel.Numb = 2964
             // Object: Pending Event
          // Component Instance is a participating class in association: rel.Numb = 2976
             // Object: Pending Event
          // Component Instance is a participating class in association: rel.Numb = 2957
             // Object: Instance
          // Component Instance is a participating class in association: rel.Numb = 2974
             // Object: Component Instance Container
    class ComponentInstanceContainer_c_test40922_c implements ClassQueryInterface_c
    {
	  ComponentInstanceContainer_c_test40922_c( java.util.UUID            p40923 ) {
	  m_p40923 = p40923;
	  }
	  private java.util.UUID             m_p40923; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentInstanceContainer_c selected = (ComponentInstanceContainer_c) candidate;
	      boolean retval = false;
	      retval = (selected.getContainer_id().equals(m_p40923));
	      return retval;
	  }
    }

    ComponentInstanceContainer_c [] objs40921 = 
    ComponentInstanceContainer_c.ComponentInstanceContainerInstances(modelRoot, new ComponentInstanceContainer_c_test40922_c(getExecution_engine_id())) ;

    if ( (  (objs40921.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Component Instance", //$NON-NLS-1$
           "Consistency: Object: Component Instance: Association: 2974: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40921.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Component Instance: Association: 2974: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40921.length )  , e); 
      }
      retval = false;

    }

    return retval;
  }


  // declare transform functions
  public  void Step()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Step") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End step
  public  void Initializearchitecture()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Initializearchitecture") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End InitializeArchitecture
  public  int          Getnextunique_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Getnextunique_id") ; 
               final ModelRoot modelRoot = getModelRoot();
setNext_unique_id( getNext_unique_id() + 1) ;


return getNext_unique_id();



   } // End getNextUnique_ID
  public  void Start()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Start") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End start
  public  void Stop()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Stop") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End stop
  public  String       Getnextinstance_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Getnextinstance_id") ; 
               final ModelRoot modelRoot = getModelRoot();
setNext_instance_id( getNext_instance_id() + 1) ;


return Gd_c.Int_to_string(			    
getNext_instance_id());



   } // End getNextInstance_ID
  public  void Reset()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Reset") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End reset
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End dispose
  public  int          Getenginenumber()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Getenginenumber") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR2955(this);


if ( (  (v_component != null)) )
{

int          v_count = 0 ;


ComponentInstance_c [] v_engines = ComponentInstance_c.getManyI_EXEsOnR2955(v_component);


ComponentInstance_c  v_engine = null;
for ( int i37341 = 0; i37341 < v_engines.length; i37341++)
{
  v_engine = v_engines[i37341] ;

v_count = v_count + 1 ;


if ( (v_engine == this) )
{

return v_count;



}


}


}

else
{

ComponentReference_c v_icomponent = ComponentReference_c.getOneCL_ICOnR2963(this);


if ( (  (v_icomponent != null)) )
{

int          v_count = 0 ;


ComponentInstance_c [] v_engines = ComponentInstance_c.getManyI_EXEsOnR2963(v_icomponent);


ComponentInstance_c  v_engine = null;
for ( int i37342 = 0; i37342 < v_engines.length; i37342++)
{
  v_engine = v_engines[i37342] ;

v_count = v_count + 1 ;


if ( (v_engine == this) )
{

return v_count;



}


}


}


}

return 1;



   } // End getEngineNumber
  public  void Initializeclasses()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Initializeclasses") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End initializeClasses
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  void Notify()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Notify") ; 
if (lib.TIM.isSIM_TIME()) {
  lib.TIM.busyNotification(this);
}

synchronized(this) {
  this.notify();
}
   } // End notify
  public  void Lockqueue(final String       p_Queue_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Lockqueue") ; 
if (p_Queue_name.compareTo("I_EQE")==0) {
	m_eqe_lock.lock();
} else if (p_Queue_name.compareTo("I_SQE")==0) {
	m_sqe_lock.lock();
} else {
	Exception e = new Exception();
	e.fillInStackTrace();
	CorePlugin.logError(
			"Invalid queue name specified: " + p_Queue_name,
			e);
}

   } // End lockQueue
  public  void Unlockqueue(final String       p_Queue_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Unlockqueue") ; 
if (p_Queue_name.compareTo("I_EQE")==0) {
	m_eqe_lock.unlock();
} else if (p_Queue_name.compareTo("I_SQE")==0) {
	m_sqe_lock.unlock();
} else {
	Exception e = new Exception();
	e.fillInStackTrace();
	CorePlugin.logError(
			"Invalid queue name specified: " + p_Queue_name,
			e);
}

   } // End unlockQueue
  public  String       Getname()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Getname") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


Component_c v_component = Component_c.getOneC_COnR2955(this);


if (   (v_component != null) )
{

v_result = v_component.getName() + Gd_c.Int_to_string(			    
Getenginenumber()) ;



}

return v_result;



   } // End getName
  public static java.util.UUID         Resolvetargetchannel(ModelRoot modelRoot,final java.util.UUID         p_Interfacereference,final boolean      p_Isrequired,final java.util.UUID         p_Localcomponentinstance,final java.util.UUID         p_Specifiedcomponentinstance)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Resolvetargetchannel") ; 
return Gd_c.Null_unique_id();



   } // End resolveTargetChannel
  public static java.util.UUID         Resolvetargetbody(ModelRoot modelRoot,final java.util.UUID         p_Channel,final String       p_Invokingpath,final boolean      p_Isrequired,final String       p_Messagename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Resolvetargetbody") ; 
return Gd_c.Null_unique_id();



   } // End resolveTargetBody
  public static void Transfervaluetotarget(ModelRoot modelRoot,final java.util.UUID         p_Arg,final java.util.UUID         p_Body,final java.util.UUID         p_Local_stack_frame_id,final java.util.UUID         p_Message,final java.util.UUID         p_Stack_frame_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Component Instance", " Operation entered: ComponentInstance::Transfervaluetotarget") ; 

   } // End transferValueToTarget

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Component Instance
