      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Domain_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_DOMAIN extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Domain_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Domain_c(ModelRoot modelRoot,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       String       p_m_descrip,
       int          p_m_full_der,
       java.util.UUID         p_m_config_id,
       java.util.UUID         p_m_sys_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //extract 28 bit value only            
       m_dom_idLongBased = 0xfffffff & p_m_dom_id.getLeastSignificantBits();
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       m_full_der = p_m_full_der;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_config_id = IdAssigner.preprocessUUID(p_m_config_id);
       //extract 28 bit value only            
       m_config_idLongBased = 0xfffffff & p_m_config_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       // default value for m_isbeingverified
        
    setUniqueId(m_dom_id);
    Object [] key = {m_dom_id};
    addInstanceToMap(key);
  }
  static public Domain_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       String       p_m_descrip,
       int          p_m_full_der,
       java.util.UUID         p_m_config_id,
       java.util.UUID         p_m_sys_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Domain_c.class);
      Domain_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_dom_id};
          new_inst = (Domain_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //extract 28 bit value only            
       new_inst.m_dom_idLongBased = 0xfffffff & p_m_dom_id.getLeastSignificantBits();
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       new_inst.m_full_der = p_m_full_der;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_config_id = IdAssigner.preprocessUUID(p_m_config_id);
       //extract 28 bit value only            
       new_inst.m_config_idLongBased = 0xfffffff & p_m_config_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       // default value for m_isbeingverified
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Domain_c(modelRoot,
p_m_dom_id,
p_m_name,
p_m_descrip,
p_m_full_der,
p_m_config_id,
p_m_sys_id
);
		new_inst.m_contentPath = contentPath;
    new_inst.setComponent(null);
	}
    return new_inst;
  }

  static public Domain_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_dom_id,
       String       p_m_name,
       String       p_m_descrip,
       int          p_m_full_der,
       java.util.UUID         p_m_config_id,
       java.util.UUID         p_m_sys_id){
    InstanceList instances = modelRoot.getInstanceList(Domain_c.class);
    Domain_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_dom_id
            };
        source = (Domain_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //extract 28 bit value only            
       source.m_dom_idLongBased = 0xfffffff & p_m_dom_id.getLeastSignificantBits();
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       source.m_full_der = p_m_full_der;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_config_id = IdAssigner.preprocessUUID(p_m_config_id);
       //extract 28 bit value only            
       source.m_config_idLongBased = 0xfffffff & p_m_config_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       // default value for m_isbeingverified
        
           return source ;
        }
      }
      // there is no instance matching the id
    Domain_c new_inst = new Domain_c(modelRoot,
p_m_dom_id,
p_m_name,
p_m_descrip,
p_m_full_der,
p_m_config_id,
p_m_sys_id
);
    return new_inst;
  }
  public Domain_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_dom_id = idAssigner.createUUID();
     m_name = "";   
     m_descrip = "";   
     m_config_id = IdAssigner.NULL_UUID;   
     m_sys_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_dom_id);
    Object [] key = {m_dom_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_dom_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_dom_id !=  p_newKey ){
	
		m_dom_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Domain_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Domain_c)) {
           return false;
       }
       
       Domain_c me = (Domain_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getDom_id()) || IdAssigner.NULL_UUID.equals(((Domain_c)elem).getDom_id())) && this != elem)) {
      	return false;
      }
      if (!getDom_id().equals(((Domain_c)elem).getDom_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Domain_c)) {
           return false;
       }
       
       Domain_c me = (Domain_c)elem;
      if (!getDom_id().equals(((Domain_c)elem).getDom_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_dom_id ;
  private long m_dom_idLongBased ;
  private String       m_name ;
  private String       m_descrip ;
  private int          m_full_der ;
  private java.util.UUID         m_config_id ;
  private long m_config_idLongBased ;
  private java.util.UUID         m_sys_id ;
  private boolean      m_isbeingverified ;
      
// declare association references from this class
  
  
    
// referring navigation

SystemModel_c SystemModel ;
public void relateAcrossR28To(SystemModel_c target)
{
	relateAcrossR28To(target, true);
}
public void relateAcrossR28To(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == SystemModel) return;  // already related

    if ( SystemModel != target ) {
    
    Object oldKey = getInstanceKey();

    if (SystemModel != null) {
        UmlProblem.removeXtUMLProblem(this, SystemModel);
    
        SystemModel.clearBackPointerR28To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Domain_c.relateAcrossR28To(SystemModel_c target)", 
			"Relate performed across R28 from Domain to System Model without unrelate of prior instance.");  
		}
    }
                
    	SystemModel = target ;
        m_sys_id = target.getSys_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR28To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "28", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR28From(SystemModel_c target)
{
	unrelateAcrossR28From(target, true);
}
public void unrelateAcrossR28From(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (SystemModel == null) return;  // already unrelated
	
	if (target != SystemModel) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R28", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR28To(this);
    }
    

      if(SystemModel != null) {
      
        m_sys_id = SystemModel.getSys_id();
        SystemModel = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "28", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Domain_c getOneS_DOMOnR28(SystemModel_c [] targets)
{
    return getOneS_DOMOnR28(targets, null);
}

public static Domain_c getOneS_DOMOnR28(SystemModel_c [] targets, ClassQueryInterface_c test)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_DOMOnR28(targets[i], test);
        }
    }

    return ret_val;
}

public static Domain_c getOneS_DOMOnR28(SystemModel_c target)
{
  return getOneS_DOMOnR28(target, null);
}

public static Domain_c getOneS_DOMOnR28(SystemModel_c target, boolean loadComponent)
{
    return getOneS_DOMOnR28(target.getModelRoot(), target, null, loadComponent);
}

public static Domain_c getOneS_DOMOnR28(SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_DOMOnR28(target.getModelRoot(), target, test);
  }
  return null;
}

public static Domain_c getOneS_DOMOnR28(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
	return getOneS_DOMOnR28(modelRoot, target, test, true);
}

public static Domain_c getOneS_DOMOnR28(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Domain_c result = null;
  
  result=find_getOneS_DOMOnR28(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Domain_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_DOMOnR28(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Domain_c find_getOneS_DOMOnR28(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_Domain_R28) {
	    for ( int i = 0; i < target.backPointer_Domain_R28.size(); ++i ) {
	      Domain_c source = (Domain_c)target.backPointer_Domain_R28.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Domain_c [] getManyS_DOMsOnR28(SystemModel_c [] targets)
{
  return getManyS_DOMsOnR28(targets, null);
}
public static Domain_c [] getManyS_DOMsOnR28(SystemModel_c [] targets, boolean loadComponent)
{
  return getManyS_DOMsOnR28(targets, null, loadComponent);
}
public static Domain_c [] getManyS_DOMsOnR28(SystemModel_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR28(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR28(SystemModel_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Domain_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Domain_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Domain_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_Domain_R28) {
	    for (int j = 0; j < targets[i].backPointer_Domain_R28.size(); ++j) {
	      Domain_c source = (Domain_c)targets[i].backPointer_Domain_R28.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Domain_c[] ret_set = new Domain_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Domain_c[0];
  }
  }

public static Domain_c [] getManyS_DOMsOnR28(SystemModel_c target)
{
  return getManyS_DOMsOnR28(target, null);
}

public static Domain_c [] getManyS_DOMsOnR28(SystemModel_c target, boolean loadComponent)
{
  return getManyS_DOMsOnR28(target, null, loadComponent);
}

public static Domain_c [] getManyS_DOMsOnR28(SystemModel_c target, ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR28(target, test, true);
}

public static Domain_c [] getManyS_DOMsOnR28(SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Domain_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Domain_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_Domain_R28) {
    for (int i = 0; i < target.backPointer_Domain_R28.size(); ++i) {
      Domain_c source = (Domain_c)target.backPointer_Domain_R28.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Domain_c[] ret_set = new Domain_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Domain_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<SubsystemInDomain_c> backPointer_HasTopLevelSubsystemsSubsystemInDomainHasTopLevelSubsystems_R43 = new ArrayList<SubsystemInDomain_c>();

public void setSubsystemInDomainOrderInChildListR43(SubsystemInDomain_c target, int index) {
	unrelateAcrossR43From(target);
	SubsystemInDomain_c[] elements = SubsystemInDomain_c.getManyS_SIDsOnR43(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR43From((SubsystemInDomain_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR43To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR43To((SubsystemInDomain_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR43To(SubsystemInDomain_c target)
{
  if (target != null) {
    target.relateAcrossR43To(this, true) ;
  }
}

public void relateAcrossR43To(SubsystemInDomain_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR43To(this, notifyChanges) ;
  }
}

public void setBackPointerR43To(SubsystemInDomain_c target)
{
  	synchronized (backPointer_HasTopLevelSubsystemsSubsystemInDomainHasTopLevelSubsystems_R43) {
		backPointer_HasTopLevelSubsystemsSubsystemInDomainHasTopLevelSubsystems_R43.add(target);
	}
}

public void unrelateAcrossR43From(SubsystemInDomain_c target)
{
  if (target != null) {
    target.unrelateAcrossR43From(this, true) ;
  }
}

public void unrelateAcrossR43From(SubsystemInDomain_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR43From(this, notifyChanges) ;
  }
}

public void clearBackPointerR43To(SubsystemInDomain_c target)
{
  synchronized (backPointer_HasTopLevelSubsystemsSubsystemInDomainHasTopLevelSubsystems_R43) {
	    backPointer_HasTopLevelSubsystemsSubsystemInDomainHasTopLevelSubsystems_R43.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR43(SubsystemInDomain_c [] targets)
{
    return getOneS_DOMOnR43(targets, null);
}

public static Domain_c getOneS_DOMOnR43(SubsystemInDomain_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR43(targets, test, true);
}

public static Domain_c getOneS_DOMOnR43(SubsystemInDomain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR43(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR43(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR43(SubsystemInDomain_c target)
{
	return getOneS_DOMOnR43(target, true);
}
public static Domain_c getOneS_DOMOnR43(SubsystemInDomain_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsTopLevelOfSubsystemsDomain != null){
		target.IsTopLevelOfSubsystemsDomain.loadProxy();
	}
	}
    return target.IsTopLevelOfSubsystemsDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR43(SubsystemInDomain_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR43(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR43(SubsystemInDomain_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsTopLevelOfSubsystemsDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsTopLevelOfSubsystemsDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR43(SubsystemInDomain_c [] targets)
{
  return getManyS_DOMsOnR43(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR43(SubsystemInDomain_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SubsystemInDomain_c [] targetArray = new SubsystemInDomain_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR43(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR43(SubsystemInDomain_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR43(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR43(SubsystemInDomain_c target)
{
    return getManyS_DOMsOnR43(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR43(SubsystemInDomain_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR43(target, null, loadComponent);
}

public static Domain_c getOneS_DOMOnR43(Subsystem_c target)
{
  return Domain_c.getOneS_DOMOnR43(SubsystemInDomain_c.getOneS_SIDOnR43(target)) ;
}

public static Domain_c getOneS_DOMOnR43(Subsystem_c target,
    ClassQueryInterface_c test)
{
  return Domain_c.getOneS_DOMOnR43(SubsystemInDomain_c.getManyS_SIDsOnR43(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<Subsystem_c> backPointer_IsPartitionedIntoSubsystemIsPartitionedInto_R1 = new ArrayList<Subsystem_c>();

public void setSubsystemOrderInChildListR1(Subsystem_c target, int index) {
	unrelateAcrossR1From(target);
	Subsystem_c[] elements = Subsystem_c.getManyS_SSsOnR1(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1From((Subsystem_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1To((Subsystem_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1To(Subsystem_c target)
{
  if (target != null) {
    target.relateAcrossR1To(this, true) ;
  }
}

public void relateAcrossR1To(Subsystem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1To(this, notifyChanges) ;
  }
}

public void setBackPointerR1To(Subsystem_c target)
{
  	synchronized (backPointer_IsPartitionedIntoSubsystemIsPartitionedInto_R1) {
		backPointer_IsPartitionedIntoSubsystemIsPartitionedInto_R1.add(target);
	}
}

public void unrelateAcrossR1From(Subsystem_c target)
{
  if (target != null) {
    target.unrelateAcrossR1From(this, true) ;
  }
}

public void unrelateAcrossR1From(Subsystem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1To(Subsystem_c target)
{
  synchronized (backPointer_IsPartitionedIntoSubsystemIsPartitionedInto_R1) {
	    backPointer_IsPartitionedIntoSubsystemIsPartitionedInto_R1.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR1(Subsystem_c [] targets)
{
    return getOneS_DOMOnR1(targets, null);
}

public static Domain_c getOneS_DOMOnR1(Subsystem_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR1(targets, test, true);
}

public static Domain_c getOneS_DOMOnR1(Subsystem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR1(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR1(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR1(Subsystem_c target)
{
	return getOneS_DOMOnR1(target, true);
}
public static Domain_c getOneS_DOMOnR1(Subsystem_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsFirstLevelOfPartitioningForDomain != null){
		target.IsFirstLevelOfPartitioningForDomain.loadProxy();
	}
	}
    return target.IsFirstLevelOfPartitioningForDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR1(Subsystem_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR1(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR1(Subsystem_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsFirstLevelOfPartitioningForDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsFirstLevelOfPartitioningForDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR1(Subsystem_c [] targets)
{
  return getManyS_DOMsOnR1(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR1(Subsystem_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Subsystem_c [] targetArray = new Subsystem_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR1(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR1(Subsystem_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR1(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR1(Subsystem_c target)
{
    return getManyS_DOMsOnR1(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR1(Subsystem_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR1(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionPackage_c> backPointer_ContainsFunctionPackageContains_R29 = new ArrayList<FunctionPackage_c>();

public void setFunctionPackageOrderInChildListR29(FunctionPackage_c target, int index) {
	unrelateAcrossR29From(target);
	FunctionPackage_c[] elements = FunctionPackage_c.getManyS_FPKsOnR29(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR29From((FunctionPackage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR29To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR29To((FunctionPackage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR29To(FunctionPackage_c target)
{
  if (target != null) {
    target.relateAcrossR29To(this, true) ;
  }
}

public void relateAcrossR29To(FunctionPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR29To(this, notifyChanges) ;
  }
}

public void setBackPointerR29To(FunctionPackage_c target)
{
  	synchronized (backPointer_ContainsFunctionPackageContains_R29) {
		backPointer_ContainsFunctionPackageContains_R29.add(target);
	}
}

public void unrelateAcrossR29From(FunctionPackage_c target)
{
  if (target != null) {
    target.unrelateAcrossR29From(this, true) ;
  }
}

public void unrelateAcrossR29From(FunctionPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR29From(this, notifyChanges) ;
  }
}

public void clearBackPointerR29To(FunctionPackage_c target)
{
  synchronized (backPointer_ContainsFunctionPackageContains_R29) {
	    backPointer_ContainsFunctionPackageContains_R29.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR29(FunctionPackage_c [] targets)
{
    return getOneS_DOMOnR29(targets, null);
}

public static Domain_c getOneS_DOMOnR29(FunctionPackage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR29(targets, test, true);
}

public static Domain_c getOneS_DOMOnR29(FunctionPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR29(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR29(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR29(FunctionPackage_c target)
{
	return getOneS_DOMOnR29(target, true);
}
public static Domain_c getOneS_DOMOnR29(FunctionPackage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsContainedInDomain != null){
		target.IsContainedInDomain.loadProxy();
	}
	}
    return target.IsContainedInDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR29(FunctionPackage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR29(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR29(FunctionPackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsContainedInDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsContainedInDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR29(FunctionPackage_c [] targets)
{
  return getManyS_DOMsOnR29(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR29(FunctionPackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionPackage_c [] targetArray = new FunctionPackage_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR29(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR29(FunctionPackage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR29(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR29(FunctionPackage_c target)
{
    return getManyS_DOMsOnR29(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR29(FunctionPackage_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR29(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionPackageInDomain_c> backPointer_ContainsFunctionPackageInDomainContains_R301 = new ArrayList<FunctionPackageInDomain_c>();

public void setFunctionPackageInDomainOrderInChildListR301(FunctionPackageInDomain_c target, int index) {
	unrelateAcrossR301From(target);
	FunctionPackageInDomain_c[] elements = FunctionPackageInDomain_c.getManyPL_FPIDsOnR301(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR301From((FunctionPackageInDomain_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR301To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR301To((FunctionPackageInDomain_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR301To(FunctionPackageInDomain_c target)
{
  if (target != null) {
    target.relateAcrossR301To(this, true) ;
  }
}

public void relateAcrossR301To(FunctionPackageInDomain_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR301To(this, notifyChanges) ;
  }
}

public void setBackPointerR301To(FunctionPackageInDomain_c target)
{
  	synchronized (backPointer_ContainsFunctionPackageInDomainContains_R301) {
		backPointer_ContainsFunctionPackageInDomainContains_R301.add(target);
	}
}

public void unrelateAcrossR301From(FunctionPackageInDomain_c target)
{
  if (target != null) {
    target.unrelateAcrossR301From(this, true) ;
  }
}

public void unrelateAcrossR301From(FunctionPackageInDomain_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR301From(this, notifyChanges) ;
  }
}

public void clearBackPointerR301To(FunctionPackageInDomain_c target)
{
  synchronized (backPointer_ContainsFunctionPackageInDomainContains_R301) {
	    backPointer_ContainsFunctionPackageInDomainContains_R301.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR301(FunctionPackageInDomain_c [] targets)
{
    return getOneS_DOMOnR301(targets, null);
}

public static Domain_c getOneS_DOMOnR301(FunctionPackageInDomain_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR301(targets, test, true);
}

public static Domain_c getOneS_DOMOnR301(FunctionPackageInDomain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR301(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR301(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR301(FunctionPackageInDomain_c target)
{
	return getOneS_DOMOnR301(target, true);
}
public static Domain_c getOneS_DOMOnR301(FunctionPackageInDomain_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsContainerDomain != null){
		target.IsContainerDomain.loadProxy();
	}
	}
    return target.IsContainerDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR301(FunctionPackageInDomain_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR301(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR301(FunctionPackageInDomain_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsContainerDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsContainerDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR301(FunctionPackageInDomain_c [] targets)
{
  return getManyS_DOMsOnR301(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR301(FunctionPackageInDomain_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionPackageInDomain_c [] targetArray = new FunctionPackageInDomain_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR301(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR301(FunctionPackageInDomain_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR301(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR301(FunctionPackageInDomain_c target)
{
    return getManyS_DOMsOnR301(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR301(FunctionPackageInDomain_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR301(target, null, loadComponent);
}

public static Domain_c getOneS_DOMOnR301(FunctionPackage_c target)
{
  return Domain_c.getOneS_DOMOnR301(FunctionPackageInDomain_c.getOnePL_FPIDOnR301(target)) ;
}

public static Domain_c getOneS_DOMOnR301(FunctionPackage_c target,
    ClassQueryInterface_c test)
{
  return Domain_c.getOneS_DOMOnR301(FunctionPackageInDomain_c.getManyPL_FPIDsOnR301(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<Function_c> backPointer_DefinesFunctionDefines_R23 = new ArrayList<Function_c>();

public void setFunctionOrderInChildListR23(Function_c target, int index) {
	unrelateAcrossR23From(target);
	Function_c[] elements = Function_c.getManyS_SYNCsOnR23(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR23From((Function_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR23To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR23To((Function_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR23To(Function_c target)
{
  if (target != null) {
    target.relateAcrossR23To(this, true) ;
  }
}

public void relateAcrossR23To(Function_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR23To(this, notifyChanges) ;
  }
}

public void setBackPointerR23To(Function_c target)
{
  	synchronized (backPointer_DefinesFunctionDefines_R23) {
		backPointer_DefinesFunctionDefines_R23.add(target);
	}
}

public void unrelateAcrossR23From(Function_c target)
{
  if (target != null) {
    target.unrelateAcrossR23From(this, true) ;
  }
}

public void unrelateAcrossR23From(Function_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR23From(this, notifyChanges) ;
  }
}

public void clearBackPointerR23To(Function_c target)
{
  synchronized (backPointer_DefinesFunctionDefines_R23) {
	    backPointer_DefinesFunctionDefines_R23.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR23(Function_c [] targets)
{
    return getOneS_DOMOnR23(targets, null);
}

public static Domain_c getOneS_DOMOnR23(Function_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR23(targets, test, true);
}

public static Domain_c getOneS_DOMOnR23(Function_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR23(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR23(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR23(Function_c target)
{
	return getOneS_DOMOnR23(target, true);
}
public static Domain_c getOneS_DOMOnR23(Function_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsDefinedInDomain != null){
		target.IsDefinedInDomain.loadProxy();
	}
	}
    return target.IsDefinedInDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR23(Function_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR23(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR23(Function_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsDefinedInDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsDefinedInDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR23(Function_c [] targets)
{
  return getManyS_DOMsOnR23(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR23(Function_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Function_c [] targetArray = new Function_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR23(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR23(Function_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR23(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR23(Function_c target)
{
    return getManyS_DOMsOnR23(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR23(Function_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR23(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ExternalEntityPackage_c> backPointer_ContainsExternalEntityPackageContains_R36 = new ArrayList<ExternalEntityPackage_c>();

public void setExternalEntityPackageOrderInChildListR36(ExternalEntityPackage_c target, int index) {
	unrelateAcrossR36From(target);
	ExternalEntityPackage_c[] elements = ExternalEntityPackage_c.getManyS_EEPKsOnR36(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR36From((ExternalEntityPackage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR36To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR36To((ExternalEntityPackage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR36To(ExternalEntityPackage_c target)
{
  if (target != null) {
    target.relateAcrossR36To(this, true) ;
  }
}

public void relateAcrossR36To(ExternalEntityPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR36To(this, notifyChanges) ;
  }
}

public void setBackPointerR36To(ExternalEntityPackage_c target)
{
  	synchronized (backPointer_ContainsExternalEntityPackageContains_R36) {
		backPointer_ContainsExternalEntityPackageContains_R36.add(target);
	}
}

public void unrelateAcrossR36From(ExternalEntityPackage_c target)
{
  if (target != null) {
    target.unrelateAcrossR36From(this, true) ;
  }
}

public void unrelateAcrossR36From(ExternalEntityPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR36From(this, notifyChanges) ;
  }
}

public void clearBackPointerR36To(ExternalEntityPackage_c target)
{
  synchronized (backPointer_ContainsExternalEntityPackageContains_R36) {
	    backPointer_ContainsExternalEntityPackageContains_R36.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR36(ExternalEntityPackage_c [] targets)
{
    return getOneS_DOMOnR36(targets, null);
}

public static Domain_c getOneS_DOMOnR36(ExternalEntityPackage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR36(targets, test, true);
}

public static Domain_c getOneS_DOMOnR36(ExternalEntityPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR36(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR36(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR36(ExternalEntityPackage_c target)
{
	return getOneS_DOMOnR36(target, true);
}
public static Domain_c getOneS_DOMOnR36(ExternalEntityPackage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsContainedInDomain != null){
		target.IsContainedInDomain.loadProxy();
	}
	}
    return target.IsContainedInDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR36(ExternalEntityPackage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR36(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR36(ExternalEntityPackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsContainedInDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsContainedInDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR36(ExternalEntityPackage_c [] targets)
{
  return getManyS_DOMsOnR36(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR36(ExternalEntityPackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityPackage_c [] targetArray = new ExternalEntityPackage_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR36(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR36(ExternalEntityPackage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR36(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR36(ExternalEntityPackage_c target)
{
    return getManyS_DOMsOnR36(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR36(ExternalEntityPackage_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR36(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ExternalEntityPackageInDomain_c> backPointer_ContainsExternalEntityPackageInDomainContains_R300 = new ArrayList<ExternalEntityPackageInDomain_c>();

public void setExternalEntityPackageInDomainOrderInChildListR300(ExternalEntityPackageInDomain_c target, int index) {
	unrelateAcrossR300From(target);
	ExternalEntityPackageInDomain_c[] elements = ExternalEntityPackageInDomain_c.getManyPL_EEPIDsOnR300(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR300From((ExternalEntityPackageInDomain_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR300To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR300To((ExternalEntityPackageInDomain_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR300To(ExternalEntityPackageInDomain_c target)
{
  if (target != null) {
    target.relateAcrossR300To(this, true) ;
  }
}

public void relateAcrossR300To(ExternalEntityPackageInDomain_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR300To(this, notifyChanges) ;
  }
}

public void setBackPointerR300To(ExternalEntityPackageInDomain_c target)
{
  	synchronized (backPointer_ContainsExternalEntityPackageInDomainContains_R300) {
		backPointer_ContainsExternalEntityPackageInDomainContains_R300.add(target);
	}
}

public void unrelateAcrossR300From(ExternalEntityPackageInDomain_c target)
{
  if (target != null) {
    target.unrelateAcrossR300From(this, true) ;
  }
}

public void unrelateAcrossR300From(ExternalEntityPackageInDomain_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR300From(this, notifyChanges) ;
  }
}

public void clearBackPointerR300To(ExternalEntityPackageInDomain_c target)
{
  synchronized (backPointer_ContainsExternalEntityPackageInDomainContains_R300) {
	    backPointer_ContainsExternalEntityPackageInDomainContains_R300.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR300(ExternalEntityPackageInDomain_c [] targets)
{
    return getOneS_DOMOnR300(targets, null);
}

public static Domain_c getOneS_DOMOnR300(ExternalEntityPackageInDomain_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR300(targets, test, true);
}

public static Domain_c getOneS_DOMOnR300(ExternalEntityPackageInDomain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR300(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR300(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR300(ExternalEntityPackageInDomain_c target)
{
	return getOneS_DOMOnR300(target, true);
}
public static Domain_c getOneS_DOMOnR300(ExternalEntityPackageInDomain_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsContainerDomain != null){
		target.IsContainerDomain.loadProxy();
	}
	}
    return target.IsContainerDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR300(ExternalEntityPackageInDomain_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR300(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR300(ExternalEntityPackageInDomain_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsContainerDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsContainerDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR300(ExternalEntityPackageInDomain_c [] targets)
{
  return getManyS_DOMsOnR300(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR300(ExternalEntityPackageInDomain_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityPackageInDomain_c [] targetArray = new ExternalEntityPackageInDomain_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR300(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR300(ExternalEntityPackageInDomain_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR300(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR300(ExternalEntityPackageInDomain_c target)
{
    return getManyS_DOMsOnR300(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR300(ExternalEntityPackageInDomain_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR300(target, null, loadComponent);
}

public static Domain_c getOneS_DOMOnR300(ExternalEntityPackage_c target)
{
  return Domain_c.getOneS_DOMOnR300(ExternalEntityPackageInDomain_c.getOnePL_EEPIDOnR300(target)) ;
}

public static Domain_c getOneS_DOMOnR300(ExternalEntityPackage_c target,
    ClassQueryInterface_c test)
{
  return Domain_c.getOneS_DOMOnR300(ExternalEntityPackageInDomain_c.getManyPL_EEPIDsOnR300(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<ExternalEntity_c> backPointer_InteractsWithExternalEntityInteractsWith_R8 = new ArrayList<ExternalEntity_c>();

public void setExternalEntityOrderInChildListR8(ExternalEntity_c target, int index) {
	unrelateAcrossR8From(target);
	ExternalEntity_c[] elements = ExternalEntity_c.getManyS_EEsOnR8(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8From((ExternalEntity_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8To((ExternalEntity_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8To(ExternalEntity_c target)
{
  if (target != null) {
    target.relateAcrossR8To(this, true) ;
  }
}

public void relateAcrossR8To(ExternalEntity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8To(this, notifyChanges) ;
  }
}

public void setBackPointerR8To(ExternalEntity_c target)
{
  	synchronized (backPointer_InteractsWithExternalEntityInteractsWith_R8) {
		backPointer_InteractsWithExternalEntityInteractsWith_R8.add(target);
	}
}

public void unrelateAcrossR8From(ExternalEntity_c target)
{
  if (target != null) {
    target.unrelateAcrossR8From(this, true) ;
  }
}

public void unrelateAcrossR8From(ExternalEntity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8To(ExternalEntity_c target)
{
  synchronized (backPointer_InteractsWithExternalEntityInteractsWith_R8) {
	    backPointer_InteractsWithExternalEntityInteractsWith_R8.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR8(ExternalEntity_c [] targets)
{
    return getOneS_DOMOnR8(targets, null);
}

public static Domain_c getOneS_DOMOnR8(ExternalEntity_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR8(targets, test, true);
}

public static Domain_c getOneS_DOMOnR8(ExternalEntity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR8(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR8(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR8(ExternalEntity_c target)
{
	return getOneS_DOMOnR8(target, true);
}
public static Domain_c getOneS_DOMOnR8(ExternalEntity_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.InteractsWithDomain != null){
		target.InteractsWithDomain.loadProxy();
	}
	}
    return target.InteractsWithDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR8(ExternalEntity_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR8(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR8(ExternalEntity_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].InteractsWithDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].InteractsWithDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR8(ExternalEntity_c [] targets)
{
  return getManyS_DOMsOnR8(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR8(ExternalEntity_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntity_c [] targetArray = new ExternalEntity_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR8(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR8(ExternalEntity_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR8(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR8(ExternalEntity_c target)
{
    return getManyS_DOMsOnR8(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR8(ExternalEntity_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR8(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<UseCaseDiagram_c> backPointer_CanDisplayUseCaseDiagramCanDisplay_R1201 = new ArrayList<UseCaseDiagram_c>();

public void setUseCaseDiagramOrderInChildListR1201(UseCaseDiagram_c target, int index) {
	unrelateAcrossR1201From(target);
	UseCaseDiagram_c[] elements = UseCaseDiagram_c.getManyUC_UCCsOnR1201(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1201From((UseCaseDiagram_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1201To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1201To((UseCaseDiagram_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1201To(UseCaseDiagram_c target)
{
  if (target != null) {
    target.relateAcrossR1201To(this, true) ;
  }
}

public void relateAcrossR1201To(UseCaseDiagram_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1201To(this, notifyChanges) ;
  }
}

public void setBackPointerR1201To(UseCaseDiagram_c target)
{
  	synchronized (backPointer_CanDisplayUseCaseDiagramCanDisplay_R1201) {
		backPointer_CanDisplayUseCaseDiagramCanDisplay_R1201.add(target);
	}
}

public void unrelateAcrossR1201From(UseCaseDiagram_c target)
{
  if (target != null) {
    target.unrelateAcrossR1201From(this, true) ;
  }
}

public void unrelateAcrossR1201From(UseCaseDiagram_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1201From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1201To(UseCaseDiagram_c target)
{
  synchronized (backPointer_CanDisplayUseCaseDiagramCanDisplay_R1201) {
	    backPointer_CanDisplayUseCaseDiagramCanDisplay_R1201.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR1201(UseCaseDiagram_c [] targets)
{
    return getOneS_DOMOnR1201(targets, null);
}

public static Domain_c getOneS_DOMOnR1201(UseCaseDiagram_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR1201(targets, test, true);
}

public static Domain_c getOneS_DOMOnR1201(UseCaseDiagram_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR1201(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR1201(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR1201(UseCaseDiagram_c target)
{
	return getOneS_DOMOnR1201(target, true);
}
public static Domain_c getOneS_DOMOnR1201(UseCaseDiagram_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.CanBeDisplayedInDomain != null){
		target.CanBeDisplayedInDomain.loadProxy();
	}
	}
    return target.CanBeDisplayedInDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR1201(UseCaseDiagram_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR1201(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR1201(UseCaseDiagram_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].CanBeDisplayedInDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].CanBeDisplayedInDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR1201(UseCaseDiagram_c [] targets)
{
  return getManyS_DOMsOnR1201(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR1201(UseCaseDiagram_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    UseCaseDiagram_c [] targetArray = new UseCaseDiagram_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR1201(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR1201(UseCaseDiagram_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR1201(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR1201(UseCaseDiagram_c target)
{
    return getManyS_DOMsOnR1201(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR1201(UseCaseDiagram_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR1201(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Sequence_c> backPointer_CanShowSequenceCanShow_R913 = new ArrayList<Sequence_c>();

public void setSequenceOrderInChildListR913(Sequence_c target, int index) {
	unrelateAcrossR913From(target);
	Sequence_c[] elements = Sequence_c.getManySQ_SsOnR913(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR913From((Sequence_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR913To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR913To((Sequence_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR913To(Sequence_c target)
{
  if (target != null) {
    target.relateAcrossR913To(this, true) ;
  }
}

public void relateAcrossR913To(Sequence_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR913To(this, notifyChanges) ;
  }
}

public void setBackPointerR913To(Sequence_c target)
{
  	synchronized (backPointer_CanShowSequenceCanShow_R913) {
		backPointer_CanShowSequenceCanShow_R913.add(target);
	}
}

public void unrelateAcrossR913From(Sequence_c target)
{
  if (target != null) {
    target.unrelateAcrossR913From(this, true) ;
  }
}

public void unrelateAcrossR913From(Sequence_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR913From(this, notifyChanges) ;
  }
}

public void clearBackPointerR913To(Sequence_c target)
{
  synchronized (backPointer_CanShowSequenceCanShow_R913) {
	    backPointer_CanShowSequenceCanShow_R913.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR913(Sequence_c [] targets)
{
    return getOneS_DOMOnR913(targets, null);
}

public static Domain_c getOneS_DOMOnR913(Sequence_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR913(targets, test, true);
}

public static Domain_c getOneS_DOMOnR913(Sequence_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR913(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR913(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR913(Sequence_c target)
{
	return getOneS_DOMOnR913(target, true);
}
public static Domain_c getOneS_DOMOnR913(Sequence_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsShownInDomain != null){
		target.IsShownInDomain.loadProxy();
	}
	}
    return target.IsShownInDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR913(Sequence_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR913(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR913(Sequence_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsShownInDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsShownInDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR913(Sequence_c [] targets)
{
  return getManyS_DOMsOnR913(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR913(Sequence_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Sequence_c [] targetArray = new Sequence_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR913(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR913(Sequence_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR913(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR913(Sequence_c target)
{
    return getManyS_DOMsOnR913(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR913(Sequence_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR913(target, null, loadComponent);
}


    
  
  
// referred to navigation

ComponentInstance_c backPointer_IsBeingVerifiedByComponentInstanceIsBeingVerifiedBy_R2948;

public void setComponentInstanceOrderInChildListR2948(ComponentInstance_c target, int index) {
	unrelateAcrossR2948From(target);
	ComponentInstance_c[] elements = ComponentInstance_c.getManyI_EXEsOnR2948(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2948From((ComponentInstance_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2948To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2948To((ComponentInstance_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2948To(ComponentInstance_c target)
{
  if (target != null) {
    target.relateAcrossR2948To(this, true) ;
  }
}

public void relateAcrossR2948To(ComponentInstance_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2948To(this, notifyChanges) ;
  }
}

public void setBackPointerR2948To(ComponentInstance_c target)
{
    backPointer_IsBeingVerifiedByComponentInstanceIsBeingVerifiedBy_R2948 = target;
}

public void unrelateAcrossR2948From(ComponentInstance_c target)
{
  if (target != null) {
    target.unrelateAcrossR2948From(this, true) ;
  }
}

public void unrelateAcrossR2948From(ComponentInstance_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2948From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2948To(ComponentInstance_c target)
{
	if (target == backPointer_IsBeingVerifiedByComponentInstanceIsBeingVerifiedBy_R2948) {
		backPointer_IsBeingVerifiedByComponentInstanceIsBeingVerifiedBy_R2948 = null;
	}
}

public static Domain_c getOneS_DOMOnR2948(ComponentInstance_c [] targets)
{
    return getOneS_DOMOnR2948(targets, null);
}

public static Domain_c getOneS_DOMOnR2948(ComponentInstance_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR2948(targets, test, true);
}

public static Domain_c getOneS_DOMOnR2948(ComponentInstance_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR2948(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR2948(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR2948(ComponentInstance_c target)
{
	return getOneS_DOMOnR2948(target, true);
}
public static Domain_c getOneS_DOMOnR2948(ComponentInstance_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsVerifyingDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR2948(ComponentInstance_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR2948(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR2948(ComponentInstance_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
    Domain_c associate = targets[i].IsVerifyingDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR2948(ComponentInstance_c [] targets)
{
  return getManyS_DOMsOnR2948(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR2948(ComponentInstance_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ComponentInstance_c [] targetArray = new ComponentInstance_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR2948(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR2948(ComponentInstance_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR2948(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR2948(ComponentInstance_c target)
{
    return getManyS_DOMsOnR2948(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR2948(ComponentInstance_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR2948(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<DataType_c> backPointer_ContainsDefinedDataTypeContainsDefined_R14 = new ArrayList<DataType_c>();

public void setDataTypeOrderInChildListR14(DataType_c target, int index) {
	unrelateAcrossR14From(target);
	DataType_c[] elements = DataType_c.getManyS_DTsOnR14(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR14From((DataType_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR14To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR14To((DataType_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR14To(DataType_c target)
{
  if (target != null) {
    target.relateAcrossR14To(this, true) ;
  }
}

public void relateAcrossR14To(DataType_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR14To(this, notifyChanges) ;
  }
}

public void setBackPointerR14To(DataType_c target)
{
  	synchronized (backPointer_ContainsDefinedDataTypeContainsDefined_R14) {
		backPointer_ContainsDefinedDataTypeContainsDefined_R14.add(target);
	}
}

public void unrelateAcrossR14From(DataType_c target)
{
  if (target != null) {
    target.unrelateAcrossR14From(this, true) ;
  }
}

public void unrelateAcrossR14From(DataType_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR14From(this, notifyChanges) ;
  }
}

public void clearBackPointerR14To(DataType_c target)
{
  synchronized (backPointer_ContainsDefinedDataTypeContainsDefined_R14) {
	    backPointer_ContainsDefinedDataTypeContainsDefined_R14.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR14(DataType_c [] targets)
{
    return getOneS_DOMOnR14(targets, null);
}

public static Domain_c getOneS_DOMOnR14(DataType_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR14(targets, test, true);
}

public static Domain_c getOneS_DOMOnR14(DataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR14(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR14(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR14(DataType_c target)
{
	return getOneS_DOMOnR14(target, true);
}
public static Domain_c getOneS_DOMOnR14(DataType_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.DefinesTypesAvailableWithinDomain != null){
		target.DefinesTypesAvailableWithinDomain.loadProxy();
	}
	}
    return target.DefinesTypesAvailableWithinDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR14(DataType_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR14(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR14(DataType_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].DefinesTypesAvailableWithinDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].DefinesTypesAvailableWithinDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR14(DataType_c [] targets)
{
  return getManyS_DOMsOnR14(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR14(DataType_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    DataType_c [] targetArray = new DataType_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR14(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR14(DataType_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR14(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR14(DataType_c target)
{
    return getManyS_DOMsOnR14(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR14(DataType_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR14(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<DataTypePackage_c> backPointer_ContainsDataTypePackageContains_R40 = new ArrayList<DataTypePackage_c>();

public void setDataTypePackageOrderInChildListR40(DataTypePackage_c target, int index) {
	unrelateAcrossR40From(target);
	DataTypePackage_c[] elements = DataTypePackage_c.getManyS_DPKsOnR40(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR40From((DataTypePackage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR40To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR40To((DataTypePackage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR40To(DataTypePackage_c target)
{
  if (target != null) {
    target.relateAcrossR40To(this, true) ;
  }
}

public void relateAcrossR40To(DataTypePackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR40To(this, notifyChanges) ;
  }
}

public void setBackPointerR40To(DataTypePackage_c target)
{
  	synchronized (backPointer_ContainsDataTypePackageContains_R40) {
		backPointer_ContainsDataTypePackageContains_R40.add(target);
	}
}

public void unrelateAcrossR40From(DataTypePackage_c target)
{
  if (target != null) {
    target.unrelateAcrossR40From(this, true) ;
  }
}

public void unrelateAcrossR40From(DataTypePackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR40From(this, notifyChanges) ;
  }
}

public void clearBackPointerR40To(DataTypePackage_c target)
{
  synchronized (backPointer_ContainsDataTypePackageContains_R40) {
	    backPointer_ContainsDataTypePackageContains_R40.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR40(DataTypePackage_c [] targets)
{
    return getOneS_DOMOnR40(targets, null);
}

public static Domain_c getOneS_DOMOnR40(DataTypePackage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR40(targets, test, true);
}

public static Domain_c getOneS_DOMOnR40(DataTypePackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR40(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR40(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR40(DataTypePackage_c target)
{
	return getOneS_DOMOnR40(target, true);
}
public static Domain_c getOneS_DOMOnR40(DataTypePackage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsContainedInDomain != null){
		target.IsContainedInDomain.loadProxy();
	}
	}
    return target.IsContainedInDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR40(DataTypePackage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR40(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR40(DataTypePackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsContainedInDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsContainedInDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR40(DataTypePackage_c [] targets)
{
  return getManyS_DOMsOnR40(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR40(DataTypePackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    DataTypePackage_c [] targetArray = new DataTypePackage_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR40(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR40(DataTypePackage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR40(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR40(DataTypePackage_c target)
{
    return getManyS_DOMsOnR40(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR40(DataTypePackage_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR40(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<DatatypeInSuppression_c> backPointer_ContainsSuppressedDatatypeInSuppressionContainsSuppressed_R47 = new ArrayList<DatatypeInSuppression_c>();

public void setDatatypeInSuppressionOrderInChildListR47(DatatypeInSuppression_c target, int index) {
	unrelateAcrossR47From(target);
	DatatypeInSuppression_c[] elements = DatatypeInSuppression_c.getManyS_DISsOnR47(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR47From((DatatypeInSuppression_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR47To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR47To((DatatypeInSuppression_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR47To(DatatypeInSuppression_c target)
{
  if (target != null) {
    target.relateAcrossR47To(this, true) ;
  }
}

public void relateAcrossR47To(DatatypeInSuppression_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR47To(this, notifyChanges) ;
  }
}

public void setBackPointerR47To(DatatypeInSuppression_c target)
{
  	synchronized (backPointer_ContainsSuppressedDatatypeInSuppressionContainsSuppressed_R47) {
		backPointer_ContainsSuppressedDatatypeInSuppressionContainsSuppressed_R47.add(target);
	}
}

public void unrelateAcrossR47From(DatatypeInSuppression_c target)
{
  if (target != null) {
    target.unrelateAcrossR47From(this, true) ;
  }
}

public void unrelateAcrossR47From(DatatypeInSuppression_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR47From(this, notifyChanges) ;
  }
}

public void clearBackPointerR47To(DatatypeInSuppression_c target)
{
  synchronized (backPointer_ContainsSuppressedDatatypeInSuppressionContainsSuppressed_R47) {
	    backPointer_ContainsSuppressedDatatypeInSuppressionContainsSuppressed_R47.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR47(DatatypeInSuppression_c [] targets)
{
    return getOneS_DOMOnR47(targets, null);
}

public static Domain_c getOneS_DOMOnR47(DatatypeInSuppression_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR47(targets, test, true);
}

public static Domain_c getOneS_DOMOnR47(DatatypeInSuppression_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR47(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR47(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR47(DatatypeInSuppression_c target)
{
	return getOneS_DOMOnR47(target, true);
}
public static Domain_c getOneS_DOMOnR47(DatatypeInSuppression_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSuppressedInDomain != null){
		target.IsSuppressedInDomain.loadProxy();
	}
	}
    return target.IsSuppressedInDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR47(DatatypeInSuppression_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR47(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR47(DatatypeInSuppression_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSuppressedInDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].IsSuppressedInDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR47(DatatypeInSuppression_c [] targets)
{
  return getManyS_DOMsOnR47(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR47(DatatypeInSuppression_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    DatatypeInSuppression_c [] targetArray = new DatatypeInSuppression_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR47(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR47(DatatypeInSuppression_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR47(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR47(DatatypeInSuppression_c target)
{
    return getManyS_DOMsOnR47(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR47(DatatypeInSuppression_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR47(target, null, loadComponent);
}

public static Domain_c getOneS_DOMOnR47(DataType_c target)
{
  return Domain_c.getOneS_DOMOnR47(DatatypeInSuppression_c.getOneS_DISOnR47(target)) ;
}

public static Domain_c getOneS_DOMOnR47(DataType_c target,
    ClassQueryInterface_c test)
{
  return Domain_c.getOneS_DOMOnR47(DatatypeInSuppression_c.getManyS_DISsOnR47(target), test) ;
}

public static Domain_c [] getManyS_DOMsOnR47(DataType_c target,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR47(target, test, true);
}
public static Domain_c [] getManyS_DOMsOnR47(DataType_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  DatatypeInSuppression_c [] associators = DatatypeInSuppression_c.getManyS_DISsOnR47(target, loadComponent) ;
    return Domain_c.getManyS_DOMsOnR47(associators, test, loadComponent) ;
}
public static Domain_c [] getManyS_DOMsOnR47(DataType_c target)
{
    return getManyS_DOMsOnR47(target, null, true);
}
public static Domain_c [] getManyS_DOMsOnR47(DataType_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR47(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<DomainAsComponent_c> backPointer_DefinedSubjectMatterForDomainAsComponentDefinedSubjectMatterFor_R4204 = new ArrayList<DomainAsComponent_c>();

public void setDomainAsComponentOrderInChildListR4204(DomainAsComponent_c target, int index) {
	unrelateAcrossR4204From(target);
	DomainAsComponent_c[] elements = DomainAsComponent_c.getManyCN_DCsOnR4204(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR4204From((DomainAsComponent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR4204To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR4204To((DomainAsComponent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR4204To(DomainAsComponent_c target)
{
  if (target != null) {
    target.relateAcrossR4204To(this, true) ;
  }
}

public void relateAcrossR4204To(DomainAsComponent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR4204To(this, notifyChanges) ;
  }
}

public void setBackPointerR4204To(DomainAsComponent_c target)
{
  	synchronized (backPointer_DefinedSubjectMatterForDomainAsComponentDefinedSubjectMatterFor_R4204) {
		backPointer_DefinedSubjectMatterForDomainAsComponentDefinedSubjectMatterFor_R4204.add(target);
	}
}

public void unrelateAcrossR4204From(DomainAsComponent_c target)
{
  if (target != null) {
    target.unrelateAcrossR4204From(this, true) ;
  }
}

public void unrelateAcrossR4204From(DomainAsComponent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR4204From(this, notifyChanges) ;
  }
}

public void clearBackPointerR4204To(DomainAsComponent_c target)
{
  synchronized (backPointer_DefinedSubjectMatterForDomainAsComponentDefinedSubjectMatterFor_R4204) {
	    backPointer_DefinedSubjectMatterForDomainAsComponentDefinedSubjectMatterFor_R4204.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR4204(DomainAsComponent_c [] targets)
{
    return getOneS_DOMOnR4204(targets, null);
}

public static Domain_c getOneS_DOMOnR4204(DomainAsComponent_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR4204(targets, test, true);
}

public static Domain_c getOneS_DOMOnR4204(DomainAsComponent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR4204(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR4204(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR4204(DomainAsComponent_c target)
{
	return getOneS_DOMOnR4204(target, true);
}
public static Domain_c getOneS_DOMOnR4204(DomainAsComponent_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.HasSubjectMatterOfDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR4204(DomainAsComponent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR4204(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR4204(DomainAsComponent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].HasSubjectMatterOfDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].HasSubjectMatterOfDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR4204(DomainAsComponent_c [] targets)
{
  return getManyS_DOMsOnR4204(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR4204(DomainAsComponent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    DomainAsComponent_c [] targetArray = new DomainAsComponent_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR4204(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR4204(DomainAsComponent_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR4204(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR4204(DomainAsComponent_c target)
{
    return getManyS_DOMsOnR4204(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR4204(DomainAsComponent_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR4204(target, null, loadComponent);
}

public static Domain_c getOneS_DOMOnR4204(Component_c target)
{
  return Domain_c.getOneS_DOMOnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(target)) ;
}

public static Domain_c getOneS_DOMOnR4204(Component_c target,
    ClassQueryInterface_c test)
{
  return Domain_c.getOneS_DOMOnR4204(DomainAsComponent_c.getManyCN_DCsOnR4204(target), test) ;
}



    
  
  
// referred to navigation

ArrayList<Communication_c> backPointer_CanDisplayCommunicationCanDisplay_R1132 = new ArrayList<Communication_c>();

public void setCommunicationOrderInChildListR1132(Communication_c target, int index) {
	unrelateAcrossR1132From(target);
	Communication_c[] elements = Communication_c.getManyCOMM_COMMsOnR1132(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1132From((Communication_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1132To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1132To((Communication_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1132To(Communication_c target)
{
  if (target != null) {
    target.relateAcrossR1132To(this, true) ;
  }
}

public void relateAcrossR1132To(Communication_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1132To(this, notifyChanges) ;
  }
}

public void setBackPointerR1132To(Communication_c target)
{
  	synchronized (backPointer_CanDisplayCommunicationCanDisplay_R1132) {
		backPointer_CanDisplayCommunicationCanDisplay_R1132.add(target);
	}
}

public void unrelateAcrossR1132From(Communication_c target)
{
  if (target != null) {
    target.unrelateAcrossR1132From(this, true) ;
  }
}

public void unrelateAcrossR1132From(Communication_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1132From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1132To(Communication_c target)
{
  synchronized (backPointer_CanDisplayCommunicationCanDisplay_R1132) {
	    backPointer_CanDisplayCommunicationCanDisplay_R1132.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR1132(Communication_c [] targets)
{
    return getOneS_DOMOnR1132(targets, null);
}

public static Domain_c getOneS_DOMOnR1132(Communication_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR1132(targets, test, true);
}

public static Domain_c getOneS_DOMOnR1132(Communication_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR1132(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR1132(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR1132(Communication_c target)
{
	return getOneS_DOMOnR1132(target, true);
}
public static Domain_c getOneS_DOMOnR1132(Communication_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.CanBeDisplayedInDomain != null){
		target.CanBeDisplayedInDomain.loadProxy();
	}
	}
    return target.CanBeDisplayedInDomain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR1132(Communication_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR1132(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR1132(Communication_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].CanBeDisplayedInDomain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].CanBeDisplayedInDomain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR1132(Communication_c [] targets)
{
  return getManyS_DOMsOnR1132(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR1132(Communication_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Communication_c [] targetArray = new Communication_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR1132(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR1132(Communication_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR1132(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR1132(Communication_c target)
{
    return getManyS_DOMsOnR1132(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR1132(Communication_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR1132(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Activity_c> backPointer_ContainsActivityContains_R1100 = new ArrayList<Activity_c>();

public void setActivityOrderInChildListR1100(Activity_c target, int index) {
	unrelateAcrossR1100From(target);
	Activity_c[] elements = Activity_c.getManyA_AsOnR1100(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1100From((Activity_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1100To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1100To((Activity_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1100To(Activity_c target)
{
  if (target != null) {
    target.relateAcrossR1100To(this, true) ;
  }
}

public void relateAcrossR1100To(Activity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1100To(this, notifyChanges) ;
  }
}

public void setBackPointerR1100To(Activity_c target)
{
  	synchronized (backPointer_ContainsActivityContains_R1100) {
		backPointer_ContainsActivityContains_R1100.add(target);
	}
}

public void unrelateAcrossR1100From(Activity_c target)
{
  if (target != null) {
    target.unrelateAcrossR1100From(this, true) ;
  }
}

public void unrelateAcrossR1100From(Activity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1100From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1100To(Activity_c target)
{
  synchronized (backPointer_ContainsActivityContains_R1100) {
	    backPointer_ContainsActivityContains_R1100.remove(target);
	}
}

public static Domain_c getOneS_DOMOnR1100(Activity_c [] targets)
{
    return getOneS_DOMOnR1100(targets, null);
}

public static Domain_c getOneS_DOMOnR1100(Activity_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_DOMOnR1100(targets, test, true);
}

public static Domain_c getOneS_DOMOnR1100(Activity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Domain_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Domain_c candidate_val = getOneS_DOMOnR1100(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_DOMOnR1100(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Domain_c getOneS_DOMOnR1100(Activity_c target)
{
	return getOneS_DOMOnR1100(target, true);
}
public static Domain_c getOneS_DOMOnR1100(Activity_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.Domain != null){
		target.Domain.loadProxy();
	}
	}
    return target.Domain ;
  } else {
    return null;
  }
}

public static Domain_c [] getManyS_DOMsOnR1100(Activity_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_DOMsOnR1100(targets, test, true);
}

public static Domain_c [] getManyS_DOMsOnR1100(Activity_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Domain_c[0];
  
  
  LinkedHashSet<Domain_c> elementsSet = new LinkedHashSet<Domain_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].Domain == null)
	  targets[i].loadProxy();
    Domain_c associate = targets[i].Domain;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  Domain_c[] result = new Domain_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Domain_c [] getManyS_DOMsOnR1100(Activity_c [] targets)
{
  return getManyS_DOMsOnR1100(targets, null);
}

public static Domain_c [] getManyS_DOMsOnR1100(Activity_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Activity_c [] targetArray = new Activity_c[1];
    targetArray[0] = target;
    return getManyS_DOMsOnR1100(targetArray, test, loadComponent);
  } else {
    Domain_c [] result = new Domain_c [0] ;
    return result ;
  }
  
}

public static Domain_c [] getManyS_DOMsOnR1100(Activity_c target,
    ClassQueryInterface_c test)
{
    return getManyS_DOMsOnR1100(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR1100(Activity_c target)
{
    return getManyS_DOMsOnR1100(target, null, true);
}

public static Domain_c [] getManyS_DOMsOnR1100(Activity_c target, boolean loadComponent)
{
    return getManyS_DOMsOnR1100(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (SystemModel == null) {          
      // R28
      baseRoot = Ooaofooa.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
      SystemModel_c relInst56597 = (SystemModel_c) baseRoot.getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56597 == null) {
      			relInst56597 = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
      		}
			if (relInst56597 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56597 = (SystemModel_c) roots[i].getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
					if (relInst56597 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56597 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56597) && !isProxy())) {
	      relInst56597.relateAcrossR28To(this, notifyChanges);
	  }
	      // set the root in the Domain's model root, not the System Model's
	      // modelRoot is the SystemModel's root when we are loading a Domain proxy
	      ((Ooaofooa)getModelRoot()).setRoot(relInst56597);
	  }
          baseRoot = modelRoot;
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R28
      // S_SYS
		  inst=SystemModel;
			unrelateAcrossR28From(SystemModel, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Domain_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Domain_c inst = (Domain_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Domain_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Domain_c DomainInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Domain_c result=findDomainInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Domain_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findDomainInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Domain_c findDomainInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Domain_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Domain_c x = (Domain_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Domain_c DomainInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return DomainInstance(modelRoot,test,true);
  }
  
  public static Domain_c DomainInstance(ModelRoot modelRoot)
  {
	 return DomainInstance(modelRoot,null,true);
  }

  public static Domain_c [] DomainInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Domain_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Domain_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Domain_c x = (Domain_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Domain_c[] ret_set = new Domain_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Domain_c[0];
			}		
		} 
  }
  public static Domain_c [] DomainInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  DomainInstances(modelRoot,test,true);
  }
  public static Domain_c [] DomainInstances(ModelRoot modelRoot)
  {
	return DomainInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Domain.dispose call: ";
	SystemModel_c testR28Inst = SystemModel_c.getOneS_SYSOnR28(this, false);

	if ( testR28Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "28 ";
	}
 	SubsystemInDomain_c testR43Inst = SubsystemInDomain_c.getOneS_SIDOnR43(this, false);

 	if ( testR43Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "43 ";
 	}
	Subsystem_c testR1Inst = Subsystem_c.getOneS_SSOnR1(this, false);

	if ( testR1Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1 ";	
	}
	FunctionPackage_c testR29Inst = FunctionPackage_c.getOneS_FPKOnR29(this, false);

	if ( testR29Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "29 ";	
	}
 	FunctionPackageInDomain_c testR301Inst = FunctionPackageInDomain_c.getOnePL_FPIDOnR301(this, false);

 	if ( testR301Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "301 ";
 	}
	Function_c testR23Inst = Function_c.getOneS_SYNCOnR23(this, false);

	if ( testR23Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "23 ";	
	}
	ExternalEntityPackage_c testR36Inst = ExternalEntityPackage_c.getOneS_EEPKOnR36(this, false);

	if ( testR36Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "36 ";	
	}
	ExternalEntityPackageInDomain_c testR300Inst = ExternalEntityPackageInDomain_c.getOnePL_EEPIDOnR300(this, false);

	if ( testR300Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "300 ";
	}
	ExternalEntity_c testR8Inst = ExternalEntity_c.getOneS_EEOnR8(this, false);

	if ( testR8Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8 ";	
	}
	UseCaseDiagram_c testR1201Inst = UseCaseDiagram_c.getOneUC_UCCOnR1201(this, false);

	if ( testR1201Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1201 ";	
	}
	Sequence_c testR913Inst = Sequence_c.getOneSQ_SOnR913(this, false);

	if ( testR913Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "913 ";	
	}
	ComponentInstance_c testR2948Inst = ComponentInstance_c.getOneI_EXEOnR2948(this, false);

	if ( testR2948Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2948 ";	
	}
	DataType_c testR14Inst = DataType_c.getOneS_DTOnR14(this, false);

	if ( testR14Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "14 ";	
	}
	DataTypePackage_c testR40Inst = DataTypePackage_c.getOneS_DPKOnR40(this, false);

	if ( testR40Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "40 ";	
	}
	DatatypeInSuppression_c testR47Inst = DatatypeInSuppression_c.getOneS_DISOnR47(this, false);

	if ( testR47Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "47 ";
	}
 	DomainAsComponent_c testR4204Inst = DomainAsComponent_c.getOneCN_DCOnR4204(this, false);

 	if ( testR4204Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "4204 ";
 	}
	Communication_c testR1132Inst = Communication_c.getOneCOMM_COMMOnR1132(this, false);

	if ( testR1132Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1132 ";	
	}
	Activity_c testR1100Inst = Activity_c.getOneA_AOnR1100(this, false);

	if ( testR1100Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1100 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Domain", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("dom_id")){
         return true;
      }
      if(attributeName.equals("config_id")){
         return true;
      }
      if(attributeName.equals("sys_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getDom_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getDom_idLongBased()
  {
    if(m_dom_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_dom_id)){
    	return 0xfffffff & m_dom_id.getLeastSignificantBits();
    }
    return m_dom_idLongBased ;
  }
  public java.util.UUID getDom_id()
  {
    return m_dom_id ;
  }


  public void setDom_id(java.util.UUID newValue)
  {
   m_dom_id = IdAssigner.preprocessUUID(newValue);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getFull_der()
  {
    return m_full_der ;
  }


  public void setFull_der(int newValue)
  {
    if(m_full_der == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Full_der", new Integer(m_full_der), new Integer(newValue),true);

   m_full_der = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getConfig_idLongBased()
  {
    if(m_config_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_config_id)){
    	return 0xfffffff & m_config_id.getLeastSignificantBits();
    }
    return m_config_idLongBased ;
  }
  public java.util.UUID getConfig_id()
  {
    return m_config_id ;
  }


  public void setConfig_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_config_id)){
	        return;
	    }
	}else if(m_config_id != null){
	    if(m_config_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Config_id", m_config_id, newValue,true); 
   m_config_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSys_idLongBased()
  {
    if ( SystemModel != null )
    {
      return SystemModel.getSys_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSys_id()
  {
    if ( SystemModel != null )
    {
      return SystemModel.getSys_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSys_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sys_id) )
      return m_sys_id;
    else
      return getSys_id();
  }
  
  public void setSys_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_sys_id)){
	        return;
	    }
	}else if(m_sys_id != null){
	    if(m_sys_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Sys_id", m_sys_id, newValue,true); 
   m_sys_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public boolean getIsbeingverified()
  {
ModelRoot modelRoot = getModelRoot();
ComponentInstance_c v_ee = ComponentInstance_c.getOneI_EXEOnR2948(this);


return   (v_ee != null);



  }


  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Domain", //$NON-NLS-1$
	  " Operation entered: Domain::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Domain_c [] objs = Domain_c.DomainInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Domain", //$NON-NLS-1$
	  " Operation entered: Domain::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Domain_c_test56599_c implements ClassQueryInterface_c
    {
	  Domain_c_test56599_c( java.util.UUID            p56600 ) {
	  m_p56600 = p56600;
	  }
	  private java.util.UUID             m_p56600; 
	  public boolean evaluate (Object candidate)
	  {
	      Domain_c selected = (Domain_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDom_id().equals(m_p56600));
	      return retval;
	  }
    }

    Domain_c [] objs56598 = 
    Domain_c.DomainInstances(modelRoot, new Domain_c_test56599_c(getDom_id())) ;

    if ( (  (objs56598.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Domain", //$NON-NLS-1$
           "Consistency: Object: Domain: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56598.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Domain: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56598.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56598.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Domain", //$NON-NLS-1$
           "Consistency: Object: Domain: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56598.length )  + " Dom_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Domain: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56598.length )  + " Dom_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Domain is a referring class in association: rel.Numb = 28
          // The participating class is: System Model
    class SystemModel_c_test56604_c implements ClassQueryInterface_c
    {
	  SystemModel_c_test56604_c( java.util.UUID            p56605 ) {
	  m_p56605 = p56605;
	  }
	  private java.util.UUID             m_p56605; 
	  public boolean evaluate (Object candidate)
	  {
	      SystemModel_c selected = (SystemModel_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSys_id().equals(m_p56605));
	      return retval;
	  }
    }

    SystemModel_c [] objs56603 = 
    SystemModel_c.SystemModelInstances(Ooaofooa.getDefaultInstance(), new SystemModel_c_test56604_c(getSys_id())) ;

    if ( (  (objs56603.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Domain", //$NON-NLS-1$
           "Consistency: Object: Domain: Association: 28: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56603.length )  + " Sys_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Domain: Association: 28: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56603.length )  + " Sys_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Associated Other Side: rel.Numb = 43
            // Link Object: Subsystem in Domain
          // Domain is a participating class in association: rel.Numb = 1
             // Object: Subsystem
          // Domain is a participating class in association: rel.Numb = 29
             // Object: Function Package
          // Associated Other Side: rel.Numb = 301
            // Link Object: Function Package in Domain
          // Domain is a participating class in association: rel.Numb = 23
             // Object: Function
          // Domain is a participating class in association: rel.Numb = 36
             // Object: External Entity Package
          // Domain is a participating class in association: rel.Numb = 8
             // Object: External Entity
          // Domain is a participating class in association: rel.Numb = 1201
             // Object: Use Case Diagram
          // Domain is a participating class in association: rel.Numb = 913
             // Object: Sequence
          // Domain is a participating class in association: rel.Numb = 2948
             // Object: Component Instance
    class ComponentInstance_c_test56607_c implements ClassQueryInterface_c
    {
	  ComponentInstance_c_test56607_c( java.util.UUID            p56608 ) {
	  m_p56608 = p56608;
	  }
	  private java.util.UUID             m_p56608; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentInstance_c selected = (ComponentInstance_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDom_id().equals(m_p56608));
	      return retval;
	  }
    }

    ComponentInstance_c [] objs56606 = 
    ComponentInstance_c.ComponentInstanceInstances(modelRoot, new ComponentInstance_c_test56607_c(getDom_id())) ;

    if ( (  (objs56606.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Domain", //$NON-NLS-1$
           "Consistency: Object: Domain: Association: 2948: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56606.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Domain: Association: 2948: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56606.length )  , e); 
      }
      retval = false;

    }

          // Domain is a participating class in association: rel.Numb = 14
             // Object: Data Type
          // Domain is a participating class in association: rel.Numb = 40
             // Object: Data Type Package
          // Associated One Side: rel.Numb = 47
            // Link Object: Datatype In Suppression
            // Other Side Class: Data Type
          // Associated One Side: rel.Numb = 300
            // Link Object: External Entity Package in Domain
            // Other Side Class: External Entity Package
          // Associated Other Side: rel.Numb = 4204
            // Link Object: Domain As Component
          // Domain is a participating class in association: rel.Numb = 1132
             // Object: Communication
          // Domain is a participating class in association: rel.Numb = 1100
             // Object: Activity
    return retval;
  }


  // declare transform functions
  public  void Newsubsystem()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newsubsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
Subsystem_c v_ss = new Subsystem_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ss));


  this.relateAcrossR1To(v_ss);


SubsystemInDomain_c v_sid = new SubsystemInDomain_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sid));


if (v_sid != null) {
  v_sid.relateAcrossR43To( this ) ;   v_sid.relateAcrossR43To( v_ss ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_ss != null) {
v_ss.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newSubsystem
  public  void Newexternalentity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newexternalentity") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntity_c v_ee = new ExternalEntity_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ee));


  this.relateAcrossR8To(v_ee);


if (v_ee != null) {
v_ee.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newExternalEntity
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_sys = SystemModel_c.getOneS_SYSOnR28(this);


this.unrelateAcrossR28From(v_sys);


Subsystem_c [] v_sses = Subsystem_c.getManyS_SSsOnR43(this);


Subsystem_c  v_ss = null;
for ( int i55030 = 0; i55030 < v_sses.length; i55030++)
{
  v_ss = v_sses[i55030] ;

if (v_ss != null) {
v_ss.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ExternalEntityPackage_c [] v_eepks = ExternalEntityPackage_c.getManyS_EEPKsOnR36(this);


ExternalEntityPackage_c  v_eepk = null;
for ( int i55031 = 0; i55031 < v_eepks.length; i55031++)
{
  v_eepk = v_eepks[i55031] ;

if (v_eepk != null) {
v_eepk.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

FunctionPackage_c [] v_fpks = FunctionPackage_c.getManyS_FPKsOnR29(this);


FunctionPackage_c  v_fpk = null;
for ( int i55032 = 0; i55032 < v_fpks.length; i55032++)
{
  v_fpk = v_fpks[i55032] ;

if (v_fpk != null) {
v_fpk.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

DataTypePackage_c [] v_dpks = DataTypePackage_c.getManyS_DPKsOnR40(this);


DataTypePackage_c  v_dpk = null;
for ( int i55033 = 0; i55033 < v_dpks.length; i55033++)
{
  v_dpk = v_dpks[i55033] ;

if (v_dpk != null) {
v_dpk.Internal_dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Sequence_c [] v_sequences = Sequence_c.getManySQ_SsOnR913(this);


Sequence_c  v_sequence = null;
for ( int i55034 = 0; i55034 < v_sequences.length; i55034++)
{
  v_sequence = v_sequences[i55034] ;

if (v_sequence != null) {
v_sequence.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Communication_c [] v_comms = Communication_c.getManyCOMM_COMMsOnR1132(this);


Communication_c  v_comm = null;
for ( int i55035 = 0; i55035 < v_comms.length; i55035++)
{
  v_comm = v_comms[i55035] ;

if (v_comm != null) {
v_comm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

UseCaseDiagram_c [] v_uccs = UseCaseDiagram_c.getManyUC_UCCsOnR1201(this);


UseCaseDiagram_c  v_ucc = null;
for ( int i55036 = 0; i55036 < v_uccs.length; i55036++)
{
  v_ucc = v_uccs[i55036] ;

if (v_ucc != null) {
v_ucc.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Activity_c [] v_acts = Activity_c.getManyA_AsOnR1100(this);


Activity_c  v_act = null;
for ( int i55037 = 0; i55037 < v_acts.length; i55037++)
{
  v_act = v_acts[i55037] ;

if (v_act != null) {
v_act.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

DomainAsComponent_c v_dac = DomainAsComponent_c.getOneCN_DCOnR4204(this);


if ( (  (v_dac != null)) )
{

Component_c v_component = Component_c.getOneC_COnR4204(v_dac);


if (v_dac != null) {
v_dac.unrelateAcrossR4204From( this ) ; v_dac.unrelateAcrossR4204From( v_component ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_dac != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dac.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dac));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

DatatypeInSuppression_c [] v_diss = DatatypeInSuppression_c.getManyS_DISsOnR47(this);


DatatypeInSuppression_c  v_dis = null;
for ( int i55038 = 0; i55038 < v_diss.length; i55038++)
{
  v_dis = v_diss[i55038] ;

DataType_c v_dt = DataType_c.getOneS_DTOnR47(v_dis);


if (v_dis != null) {
v_dis.unrelateAcrossR47From( this ) ; v_dis.unrelateAcrossR47From( v_dt ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_dis != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dis.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dis));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


if (v_dt != null) {
v_dt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Newdatatypepackage()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newdatatypepackage") ; 
               final ModelRoot modelRoot = getModelRoot();
DataTypePackage_c v_dPkg = new DataTypePackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dPkg));


SpecificationPackage_c v_sp = new SpecificationPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sp));


if (v_dPkg != null) {
  v_dPkg.relateAcrossR1402To(v_sp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR40To(v_dPkg);


if (v_dPkg != null) {
v_dPkg.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newDatatypePackage
  public  void Newexternalentitypackage()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newexternalentitypackage") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntityPackage_c v_ePkg = new ExternalEntityPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ePkg));


  this.relateAcrossR36To(v_ePkg);


ExternalEntityPackageInDomain_c v_ePkgInDomain = new ExternalEntityPackageInDomain_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ePkgInDomain));


if (v_ePkgInDomain != null) {
  v_ePkgInDomain.relateAcrossR300To( this ) ;   v_ePkgInDomain.relateAcrossR300To( v_ePkg ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_ePkg != null) {
v_ePkg.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newExternalEntityPackage
  public  void Newfunctionpackage()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newfunctionpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionPackage_c v_fPkg = new FunctionPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fPkg));


  this.relateAcrossR29To(v_fPkg);


FunctionPackageInDomain_c v_fPkgInDomain = new FunctionPackageInDomain_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fPkgInDomain));


if (v_fPkgInDomain != null) {
  v_fPkgInDomain.relateAcrossR301To( this ) ;   v_fPkgInDomain.relateAcrossR301To( v_fPkg ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_fPkg != null) {
v_fPkg.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newFunctionPackage
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getDom_id();



   } // End get_ooa_id
  public  void Newsequence()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newsequence") ; 
               final ModelRoot modelRoot = getModelRoot();
Sequence_c v_sequence = new Sequence_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sequence));


SpecificationPackage_c v_sp = new SpecificationPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sp));


if (v_sequence != null) {
  v_sequence.relateAcrossR1402To(v_sp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR913To(v_sequence);


if (v_sequence != null) {
v_sequence.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newSequence
  public  void Newcommunication()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newcommunication") ; 
               final ModelRoot modelRoot = getModelRoot();
Communication_c v_communication = new Communication_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_communication));


SpecificationPackage_c v_sp = new SpecificationPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sp));


if (v_communication != null) {
  v_communication.relateAcrossR1402To(v_sp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR1132To(v_communication);


if (v_communication != null) {
v_communication.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newCommunication
  public  void Newusecasepackage()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newusecasepackage") ; 
               final ModelRoot modelRoot = getModelRoot();
UseCaseDiagram_c v_ucc = new UseCaseDiagram_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ucc));


SpecificationPackage_c v_sp = new SpecificationPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sp));


if (v_ucc != null) {
  v_ucc.relateAcrossR1402To(v_sp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR1201To(v_ucc);


if (v_ucc != null) {
v_ucc.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newUseCasePackage
  public  void Newactivity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Newactivity") ; 
               final ModelRoot modelRoot = getModelRoot();
Activity_c v_a = new Activity_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_a));


SpecificationPackage_c v_sp = new SpecificationPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sp));


if (v_sp != null) {
  v_sp.relateAcrossR1402To(v_a);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR1100To(v_a);


if (v_a != null) {
v_a.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newActivity
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("can") && p_Value.equals("launchVerifier")) )
{

return   !getIsbeingverified();



}

else
{

return false;



}


   } // End actionFilter
  public  void Setupwirings()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Setupwirings") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_sysmodel = SystemModel_c.getOneS_SYSOnR28(this);


Domain_c [] v_doms = Domain_c.getManyS_DOMsOnR28(v_sysmodel);


ExternalEntity_c [] v_ees = ExternalEntity_c.getManyS_EEsOnR8(this);


ExternalEntity_c  v_ee = null;
for ( int i55039 = 0; i55039 < v_ees.length; i55039++)
{
  v_ee = v_ees[i55039] ;

Bridge_c [] v_bridges = Bridge_c.getManyS_BRGsOnR19(v_ee);


Bridge_c  v_brg = null;
for ( int i55040 = 0; i55040 < v_bridges.length; i55040++)
{
  v_brg = v_bridges[i55040] ;

AutomaticWiring_c v_wiring = new AutomaticWiring_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_wiring));


if (v_wiring != null) {
  v_wiring.relateAcrossR3200To(v_brg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Statement_c [] v_statements = Statement_c.getManyACT_SMTsOnR602(Block_c.getManyACT_BLKsOnR666(Body_c.getManyACT_ACTsOnR698(BridgeBody_c.getManyACT_BRBsOnR697(v_brg))));


if ( (  (v_statements.length == 0)) )
{

boolean      v_wiring_found = false ;


Domain_c  v_dom = null;
for ( int i55041 = 0; i55041 < v_doms.length; i55041++)
{
  v_dom = v_doms[i55041] ;

if ( (v_wiring_found) )
{

break;



}

if ( (v_dom.getIsbeingverified() && v_dom.getName().equals(v_ee.getKey_lett())) )
{

FunctionPackage_c [] v_function_pkgs = FunctionPackage_c.getManyS_FPKsOnR29(v_dom);


FunctionPackage_c  v_function_pkg = null;
for ( int i55042 = 0; i55042 < v_function_pkgs.length; i55042++)
{
  v_function_pkg = v_function_pkgs[i55042] ;

if ( (v_wiring_found) )
{

break;



}

  class Function_test55722_c implements ClassQueryInterface_c
  {
	Function_test55722_c( String       p55723 ) {
		m_p55723 = p55723;
	}
	private String       m_p55723;
	public boolean evaluate (Object candidate)
	{
		Function_c selected = (Function_c)candidate;
		return (selected.getName().equals(m_p55723)) ;
	}
  }
Function_c v_function = Function_c.getOneS_SYNCOnR31(v_function_pkg, new Function_test55722_c(v_brg.getName()));


if ( (  (v_function != null)) )
{

BridgeParameter_c [] v_bridge_params = BridgeParameter_c.getManyS_BPARMsOnR21(v_brg);


boolean      v_params_match = true ;


BridgeParameter_c  v_bridge_param = null;
for ( int i55043 = 0; i55043 < v_bridge_params.length; i55043++)
{
  v_bridge_param = v_bridge_params[i55043] ;

  class FunctionParameter_test55724_c implements ClassQueryInterface_c
  {
	FunctionParameter_test55724_c( String       p55725 ) {
		m_p55725 = p55725;
	}
	private String       m_p55725;
	public boolean evaluate (Object candidate)
	{
		FunctionParameter_c selected = (FunctionParameter_c)candidate;
		return (selected.getName().equals(m_p55725)) ;
	}
  }
FunctionParameter_c v_func_param = FunctionParameter_c.getOneS_SPARMOnR24(v_function, new FunctionParameter_test55724_c(v_bridge_param.getName()));


if ( (  (v_func_param == null)) )
{

v_params_match = false ;


break;



}

DataType_c v_brg_param_dt = DataType_c.getOneS_DTOnR22(v_bridge_param);


DataType_c v_func_param_dt = DataType_c.getOneS_DTOnR26(v_func_param);


if ( (! v_brg_param_dt.Getcoredatatypename().equals(v_func_param_dt.Getcoredatatypename())) )
{

v_params_match = false ;


break;



}


}

if ( (  !v_params_match) )
{

continue;



}

if (v_function != null) {
  v_function.relateAcrossR3201To(v_wiring);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_wiring_found = true ;



}


}


}


}


}

else
{

continue;



}


}


}


   } // End setupWirings
  public  void Removewirings()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Removewirings") ; 
               final ModelRoot modelRoot = getModelRoot();
AutomaticWiring_c [] v_wirings = AutomaticWiring_c.AutomaticWiringInstances(modelRoot) ;


AutomaticWiring_c  v_wiring = null;
for ( int i55044 = 0; i55044 < v_wirings.length; i55044++)
{
  v_wiring = v_wirings[i55044] ;

if (v_wiring != null) {
v_wiring.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End removeWirings
  public  void Pastesubsystem(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Pastesubsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
Subsystem_c v_subsystem = (Subsystem_c) modelRoot.getInstanceList(Subsystem_c.class).getGlobal(null, p_Id);


if ( (  (v_subsystem != null)) )
{

Domain_c v_existingDomain = Domain_c.getOneS_DOMOnR1(v_subsystem);


if ( (  (v_existingDomain != null)) )
{

if (v_existingDomain != null) {
v_existingDomain.unrelateAcrossR1From(v_subsystem);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

SubsystemInDomain_c v_existingSID = SubsystemInDomain_c.getOneS_SIDOnR43(v_subsystem);


if ( (  (v_existingSID != null)) )
{

v_existingDomain = Domain_c.getOneS_DOMOnR43(v_existingSID);


if ( (  (v_existingDomain != null)) )
{

if (v_existingSID != null) {
v_existingSID.unrelateAcrossR43From( v_subsystem ) ; v_existingSID.unrelateAcrossR43From( v_existingDomain ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}



}


}

else
{

SubsystemInSubsystem_c v_sis = SubsystemInSubsystem_c.getOneS_SISOnR42(v_subsystem);


if ( (  (v_sis != null)) )
{

Subsystem_c v_parentSS = Subsystem_c.getOneS_SSOnR41(v_sis);


if ( (  (v_parentSS != null)) )
{

if (v_sis != null) {
v_sis.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

v_existingSID = new SubsystemInDomain_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_existingSID));



}

if (v_subsystem != null) {
v_subsystem.Associatechildsubsystemstodomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_subsystem != null) {
  v_subsystem.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_subsystem.Converttoinstance()			    
,v_subsystem.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_subsystem != null) {
  v_subsystem.relateAcrossR1To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_existingSID != null) {
  v_existingSID.relateAcrossR43To( v_subsystem ) ;   v_existingSID.relateAcrossR43To( this ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_subsystem != null) {
v_subsystem.Removeincompletenonlocalevents() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteSubsystem
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Converttoinstance") ; 
return this;
   } // End convertToInstance
  public  void Pasteexternalentitypackage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Pasteexternalentitypackage") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntityPackage_c v_eepkg = (ExternalEntityPackage_c) modelRoot.getInstanceList(ExternalEntityPackage_c.class).getGlobal(null, p_Id);


if ( (  (v_eepkg != null)) )
{

Domain_c v_prevDomain = Domain_c.getOneS_DOMOnR36(v_eepkg);


if ( (  (v_prevDomain != null)) )
{

if (v_eepkg != null) {
v_eepkg.unrelateAcrossR36From(v_prevDomain);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_eepkg != null) {
  v_eepkg.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_eepkg.Converttoinstance()			    
,v_eepkg.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_eepkg != null) {
  v_eepkg.relateAcrossR36To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


ExternalEntityPackageInDomain_c v_eepid = ExternalEntityPackageInDomain_c.getOnePL_EEPIDOnR300(v_eepkg);


if ( (  (v_eepid != null)) )
{

v_prevDomain = Domain_c.getOneS_DOMOnR300(v_eepid);


if (v_eepid != null) {
v_eepid.unrelateAcrossR300From( v_eepkg ) ; v_eepid.unrelateAcrossR300From( v_prevDomain ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_eepid != null) {
  v_eepid.relateAcrossR300To( v_eepkg ) ;   v_eepid.relateAcrossR300To( this ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

else
{

v_eepid = new ExternalEntityPackageInDomain_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_eepid));


if (v_eepid != null) {
  v_eepid.relateAcrossR300To( v_eepkg ) ;   v_eepid.relateAcrossR300To( this ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

if (v_eepkg != null) {
v_eepkg.Associatechildpackagestodomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


ExternalEntityPackage_c [] v_childPkgs = ExternalEntityPackage_c.getManyS_EEPKsOnR35(EePackageInPackage_c.getManyS_EEPIPsOnR34(v_eepkg));


ExternalEntityPackage_c  v_childPkg = null;
for ( int i55045 = 0; i55045 < v_childPkgs.length; i55045++)
{
  v_childPkg = v_childPkgs[i55045] ;

ExternalEntity_c [] v_ees = ExternalEntity_c.getManyS_EEsOnR33(ExternalEntityInPackage_c.getManyS_EEIPsOnR33(v_childPkg));


ExternalEntity_c  v_ee = null;
for ( int i55046 = 0; i55046 < v_ees.length; i55046++)
{
  v_ee = v_ees[i55046] ;

Domain_c v_prevDom = Domain_c.getOneS_DOMOnR8(v_ee);


if ( (  (v_prevDom != null)) )
{

if (v_ee != null) {
v_ee.unrelateAcrossR8From(v_prevDom);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_ee != null) {
  v_ee.relateAcrossR8To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

ExternalEntity_c [] v_ees = ExternalEntity_c.getManyS_EEsOnR33(ExternalEntityInPackage_c.getManyS_EEIPsOnR33(v_eepkg));


ExternalEntity_c  v_ee = null;
for ( int i55047 = 0; i55047 < v_ees.length; i55047++)
{
  v_ee = v_ees[i55047] ;

Domain_c v_prevDom = Domain_c.getOneS_DOMOnR8(v_ee);


if ( (  (v_prevDom != null)) )
{

if (v_ee != null) {
v_ee.unrelateAcrossR8From(v_prevDom);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_ee != null) {
  v_ee.relateAcrossR8To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


   } // End pasteExternalEntityPackage
  public  void Pastefunctionpackage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Pastefunctionpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionPackage_c v_fpkg = (FunctionPackage_c) modelRoot.getInstanceList(FunctionPackage_c.class).getGlobal(null, p_Id);


if ( (  (v_fpkg != null)) )
{

if (v_fpkg != null) {
  v_fpkg.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_fpkg.Converttoinstance()			    
,v_fpkg.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Domain_c v_existDomain = Domain_c.getOneS_DOMOnR29(v_fpkg);


if ( (  (v_existDomain != null)) )
{

if (v_fpkg != null) {
v_fpkg.unrelateAcrossR29From(v_existDomain);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_fpkg != null) {
  v_fpkg.relateAcrossR29To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


FunctionPackageInDomain_c v_fpid = FunctionPackageInDomain_c.getOnePL_FPIDOnR301(v_fpkg);


if ( (  (v_fpid != null)) )
{

Domain_c v_prevDomain = Domain_c.getOneS_DOMOnR301(v_fpid);


if (v_fpid != null) {
v_fpid.unrelateAcrossR301From( v_fpkg ) ; v_fpid.unrelateAcrossR301From( v_prevDomain ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_fpid != null) {
  v_fpid.relateAcrossR301To( v_fpkg ) ;   v_fpid.relateAcrossR301To( this ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

else
{

v_fpid = new FunctionPackageInDomain_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fpid));


if (v_fpid != null) {
  v_fpid.relateAcrossR301To( v_fpkg ) ;   v_fpid.relateAcrossR301To( this ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

if (v_fpkg != null) {
v_fpkg.Associatechildpackagestodomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Function_c [] v_functions = Function_c.getManyS_SYNCsOnR31(v_fpkg);


Function_c  v_function = null;
for ( int i55048 = 0; i55048 < v_functions.length; i55048++)
{
  v_function = v_functions[i55048] ;

Domain_c v_prevDomain = Domain_c.getOneS_DOMOnR23(v_function);


if ( (  (v_prevDomain != null)) )
{

if (v_function != null) {
v_function.unrelateAcrossR23From(v_prevDomain);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_function != null) {
  v_function.relateAcrossR23To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_fpkg != null) {
v_fpkg.Associatechildpackagefunctionstodomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteFunctionPackage
  public  void Pastedatatypepackage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Pastedatatypepackage") ; 
               final ModelRoot modelRoot = getModelRoot();
DataTypePackage_c v_dtpkg = (DataTypePackage_c) modelRoot.getInstanceList(DataTypePackage_c.class).getGlobal(null, p_Id);


if ( (  (v_dtpkg != null)) )
{

if (v_dtpkg != null) {
  v_dtpkg.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_dtpkg.Converttoinstance()			    
,v_dtpkg.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dtpkg != null) {
v_dtpkg.Associatewithdomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_dtpkg != null) {
v_dtpkg.Associatedtswithdomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_dtpkg != null) {
v_dtpkg.Associatecspswithdomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_dtpkg != null) {
v_dtpkg.Handleuserdatatyperesolution() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteDataTypePackage
  public  boolean      Cancopydatatypepackage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Cancopydatatypepackage") ; 
               final ModelRoot modelRoot = getModelRoot();
  class DataTypePackage_test55726_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataTypePackage_c selected = (DataTypePackage_c)candidate;
		return (selected.getPackage_id().equals(p_Id)) ;
	}
  }
DataTypePackage_c v_dtPackage = DataTypePackage_c.getOneS_DPKOnR40(this, new DataTypePackage_test55726_c());


if ( (  (v_dtPackage != null)) )
{

if ( (! v_dtPackage.getName().equals(Ooaofooa.Getcoredatatypespackagename(modelRoot))) )
{

return true;



}


}

return false;



   } // End canCopyDataTypePackage
  public  void Associatechildrenwithsystemcoretypes()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Associatechildrenwithsystemcoretypes") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c [] v_coreTypes = DataType_c.getManyS_DTsOnR17(CoreDataType_c.getManyS_CDTsOnR17(DataType_c.getManyS_DTsOnR14(this)));


DataType_c  v_coreType = null;
for ( int i55049 = 0; i55049 < v_coreTypes.length; i55049++)
{
  v_coreType = v_coreTypes[i55049] ;

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(this);


  class DataType_test55727_c implements ClassQueryInterface_c
  {
	DataType_test55727_c( String       p55728 ) {
		m_p55728 = p55728;
	}
	private String       m_p55728;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getName().equals(m_p55728)) ;
	}
  }
DataType_c v_matchingSystemType = DataType_c.getOneS_DTOnR17(CoreDataType_c.getManyS_CDTsOnR17(DataType_c.getManyS_DTsOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system))), new DataType_test55727_c(v_coreType.getName()));


if (   (v_matchingSystemType == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class DataType_test55729_c implements ClassQueryInterface_c
  {
	DataType_test55729_c( String       p55730 ) {
		m_p55730 = p55730;
	}
	private String       m_p55730;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getName().equals(m_p55730)) ;
	}
  }
v_matchingSystemType = DataType_c.getOneS_DTOnR17(CoreDataType_c.getManyS_CDTsOnR17(DataType_c.getManyS_DTsOnR8001(PackageableElement_c.getManyPE_PEsOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system)))), new DataType_test55729_c(v_coreType.getName()));



}

Function_c [] v_functions = Function_c.getManyS_SYNCsOnR25(v_coreType);


Function_c  v_function = null;
for ( int i55050 = 0; i55050 < v_functions.length; i55050++)
{
  v_function = v_functions[i55050] ;

if (v_function != null) {
v_function.unrelateAcrossR25From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_function != null) {
  v_function.relateAcrossR25To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

FunctionParameter_c [] v_functionParams = FunctionParameter_c.getManyS_SPARMsOnR26(v_coreType);


FunctionParameter_c  v_functionParam = null;
for ( int i55051 = 0; i55051 < v_functionParams.length; i55051++)
{
  v_functionParam = v_functionParams[i55051] ;

if (v_functionParam != null) {
v_functionParam.unrelateAcrossR26From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_functionParam != null) {
  v_functionParam.relateAcrossR26To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

StructureMember_c [] v_structureMembers = StructureMember_c.getManyS_MBRsOnR45(v_coreType);


StructureMember_c  v_structureMember = null;
for ( int i55052 = 0; i55052 < v_structureMembers.length; i55052++)
{
  v_structureMember = v_structureMembers[i55052] ;

if (v_structureMember != null) {
v_structureMember.unrelateAcrossR45From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_structureMember != null) {
  v_structureMember.relateAcrossR45To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Bridge_c [] v_bridges = Bridge_c.getManyS_BRGsOnR20(v_coreType);


Bridge_c  v_brg = null;
for ( int i55053 = 0; i55053 < v_bridges.length; i55053++)
{
  v_brg = v_bridges[i55053] ;

if (v_brg != null) {
v_brg.unrelateAcrossR20From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_brg != null) {
  v_brg.relateAcrossR20To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

BridgeParameter_c [] v_parms = BridgeParameter_c.getManyS_BPARMsOnR22(v_coreType);


BridgeParameter_c  v_parm = null;
for ( int i55054 = 0; i55054 < v_parms.length; i55054++)
{
  v_parm = v_parms[i55054] ;

if (v_parm != null) {
v_parm.unrelateAcrossR22From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_parm != null) {
  v_parm.relateAcrossR22To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ExternalEntityDataItem_c [] v_eedis = ExternalEntityDataItem_c.getManyS_EEDIsOnR15(v_coreType);


ExternalEntityDataItem_c  v_eedi = null;
for ( int i55055 = 0; i55055 < v_eedis.length; i55055++)
{
  v_eedi = v_eedis[i55055] ;

if (v_eedi != null) {
v_eedi.unrelateAcrossR15From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_eedi != null) {
  v_eedi.relateAcrossR15To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ExternalEntityEventDataItem_c [] v_eeedis = ExternalEntityEventDataItem_c.getManyS_EEEDIsOnR16(v_coreType);


ExternalEntityEventDataItem_c  v_eeedi = null;
for ( int i55056 = 0; i55056 < v_eeedis.length; i55056++)
{
  v_eeedi = v_eeedis[i55056] ;

if (v_eeedi != null) {
v_eeedi.unrelateAcrossR16From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_eeedi != null) {
  v_eeedi.relateAcrossR16To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

UserDataType_c [] v_udts = UserDataType_c.getManyS_UDTsOnR18(v_coreType);


UserDataType_c  v_udt = null;
for ( int i55057 = 0; i55057 < v_udts.length; i55057++)
{
  v_udt = v_udts[i55057] ;

if ( v_udt.getGen_type() == 0 )
{

CoreDataType_c v_coreTypeCore = CoreDataType_c.getOneS_CDTOnR17(v_coreType);


if ( (  (v_coreTypeCore != null)) )
{

if (v_udt != null) {
v_udt.unrelateAcrossR18From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_udt != null) {
  v_udt.relateAcrossR18To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

StateMachineEventDataItem_c [] v_evtdis = StateMachineEventDataItem_c.getManySM_EVTDIsOnR524(v_coreType);


StateMachineEventDataItem_c  v_evtdi = null;
for ( int i55058 = 0; i55058 < v_evtdis.length; i55058++)
{
  v_evtdi = v_evtdis[i55058] ;

if (v_evtdi != null) {
v_evtdi.unrelateAcrossR524From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_evtdi != null) {
  v_evtdi.relateAcrossR524To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Operation_c [] v_ops = Operation_c.getManyO_TFRsOnR116(v_coreType);


Operation_c  v_op = null;
for ( int i55059 = 0; i55059 < v_ops.length; i55059++)
{
  v_op = v_ops[i55059] ;

if (v_op != null) {
v_op.unrelateAcrossR116From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_op != null) {
  v_op.relateAcrossR116To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

OperationParameter_c [] v_opParms = OperationParameter_c.getManyO_TPARMsOnR118(v_coreType);


OperationParameter_c  v_opParm = null;
for ( int i55060 = 0; i55060 < v_opParms.length; i55060++)
{
  v_opParm = v_opParms[i55060] ;

if (v_opParm != null) {
v_opParm.unrelateAcrossR118From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_opParm != null) {
  v_opParm.relateAcrossR118To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Attribute_c [] v_attrs = Attribute_c.getManyO_ATTRsOnR114(v_coreType);


Attribute_c  v_attr = null;
for ( int i55061 = 0; i55061 < v_attrs.length; i55061++)
{
  v_attr = v_attrs[i55061] ;

if (v_attr != null) {
v_attr.unrelateAcrossR114From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_attr != null) {
  v_attr.relateAcrossR114To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Variable_c [] v_vvars = Variable_c.getManyV_VARsOnR848(v_coreType);


Variable_c  v_vvar = null;
for ( int i55062 = 0; i55062 < v_vvars.length; i55062++)
{
  v_vvar = v_vvars[i55062] ;

if (v_vvar != null) {
v_vvar.unrelateAcrossR848From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_vvar != null) {
  v_vvar.relateAcrossR848To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

SymbolicConstant_c [] v_constants = SymbolicConstant_c.getManyCNST_SYCsOnR1500(v_coreType);


SymbolicConstant_c  v_constant = null;
for ( int i55063 = 0; i55063 < v_constants.length; i55063++)
{
  v_constant = v_constants[i55063] ;

if (v_constant != null) {
v_constant.unrelateAcrossR1500From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_constant != null) {
  v_constant.relateAcrossR1500To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


   } // End associateChildrenWithSystemCoreTypes
  public  void Associatechildrenwithsystembuiltintypes()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Associatechildrenwithsystembuiltintypes") ; 
               final ModelRoot modelRoot = getModelRoot();
  class UserDataType_test55731_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		UserDataType_c selected = (UserDataType_c)candidate;
		return (selected.getGen_type() != 0) ;
	}
  }
UserDataType_c [] v_coreTypes = UserDataType_c.getManyS_UDTsOnR17(DataType_c.getManyS_DTsOnR14(this), new UserDataType_test55731_c());


UserDataType_c  v_builtInType = null;
for ( int i55064 = 0; i55064 < v_coreTypes.length; i55064++)
{
  v_builtInType = v_coreTypes[i55064] ;

DataType_c v_coreType = DataType_c.getOneS_DTOnR17(v_builtInType);


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(this);


  class DataType_test55732_c implements ClassQueryInterface_c
  {
	DataType_test55732_c( String       p55733 ) {
		m_p55733 = p55733;
	}
	private String       m_p55733;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getName().equals(m_p55733)) ;
	}
  }
DataType_c [] v_matchingSystemTypes = DataType_c.getManyS_DTsOnR17(UserDataType_c.getManyS_UDTsOnR17(DataType_c.getManyS_DTsOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system))), new DataType_test55732_c(v_coreType.getName()));


if (   (v_matchingSystemTypes.length == 0) &&   (v_system != null) && v_system.getUseglobals() )
{

  class DataType_test55734_c implements ClassQueryInterface_c
  {
	DataType_test55734_c( String       p55735 ) {
		m_p55735 = p55735;
	}
	private String       m_p55735;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getName().equals(m_p55735)) ;
	}
  }
v_matchingSystemTypes = DataType_c.getManyS_DTsOnR17(UserDataType_c.getManyS_UDTsOnR17(DataType_c.getManyS_DTsOnR8001(PackageableElement_c.getManyPE_PEsOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system)))), new DataType_test55734_c(v_coreType.getName()));



}

DataType_c  v_matchingSystemType = null;
for ( int i55065 = 0; i55065 < v_matchingSystemTypes.length; i55065++)
{
  v_matchingSystemType = v_matchingSystemTypes[i55065] ;

UserDataType_c v_udt = UserDataType_c.getOneS_UDTOnR17(v_matchingSystemType);


if ( (v_udt.getGen_type() == 0) )
{

continue;



}

Function_c [] v_functions = Function_c.getManyS_SYNCsOnR25(v_coreType);


Function_c  v_function = null;
for ( int i55066 = 0; i55066 < v_functions.length; i55066++)
{
  v_function = v_functions[i55066] ;

if (v_function != null) {
v_function.unrelateAcrossR25From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_function != null) {
  v_function.relateAcrossR25To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

FunctionParameter_c [] v_functionParams = FunctionParameter_c.getManyS_SPARMsOnR26(v_coreType);


FunctionParameter_c  v_functionParam = null;
for ( int i55067 = 0; i55067 < v_functionParams.length; i55067++)
{
  v_functionParam = v_functionParams[i55067] ;

if (v_functionParam != null) {
v_functionParam.unrelateAcrossR26From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_functionParam != null) {
  v_functionParam.relateAcrossR26To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

StructureMember_c [] v_structureMembers = StructureMember_c.getManyS_MBRsOnR45(v_coreType);


StructureMember_c  v_structureMember = null;
for ( int i55068 = 0; i55068 < v_structureMembers.length; i55068++)
{
  v_structureMember = v_structureMembers[i55068] ;

if (v_structureMember != null) {
v_structureMember.unrelateAcrossR45From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_structureMember != null) {
  v_structureMember.relateAcrossR45To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Bridge_c [] v_bridges = Bridge_c.getManyS_BRGsOnR20(v_coreType);


Bridge_c  v_brg = null;
for ( int i55069 = 0; i55069 < v_bridges.length; i55069++)
{
  v_brg = v_bridges[i55069] ;

if (v_brg != null) {
v_brg.unrelateAcrossR20From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_brg != null) {
  v_brg.relateAcrossR20To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

BridgeParameter_c [] v_parms = BridgeParameter_c.getManyS_BPARMsOnR22(v_coreType);


BridgeParameter_c  v_parm = null;
for ( int i55070 = 0; i55070 < v_parms.length; i55070++)
{
  v_parm = v_parms[i55070] ;

if (v_parm != null) {
v_parm.unrelateAcrossR22From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_parm != null) {
  v_parm.relateAcrossR22To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ExternalEntityDataItem_c [] v_eedis = ExternalEntityDataItem_c.getManyS_EEDIsOnR15(v_coreType);


ExternalEntityDataItem_c  v_eedi = null;
for ( int i55071 = 0; i55071 < v_eedis.length; i55071++)
{
  v_eedi = v_eedis[i55071] ;

if (v_eedi != null) {
v_eedi.unrelateAcrossR15From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_eedi != null) {
  v_eedi.relateAcrossR15To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ExternalEntityEventDataItem_c [] v_eeedis = ExternalEntityEventDataItem_c.getManyS_EEEDIsOnR16(v_coreType);


ExternalEntityEventDataItem_c  v_eeedi = null;
for ( int i55072 = 0; i55072 < v_eeedis.length; i55072++)
{
  v_eeedi = v_eeedis[i55072] ;

if (v_eeedi != null) {
v_eeedi.unrelateAcrossR16From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_eeedi != null) {
  v_eeedi.relateAcrossR16To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

UserDataType_c [] v_udts = UserDataType_c.getManyS_UDTsOnR18(v_coreType);


for ( int i55073 = 0; i55073 < v_udts.length; i55073++)
{
  v_udt = v_udts[i55073] ;

CoreDataType_c v_coreTypeCore = CoreDataType_c.getOneS_CDTOnR17(v_coreType);


CoreDataType_c v_systemCoreType = CoreDataType_c.getOneS_CDTOnR17(v_matchingSystemType);


if (v_udt != null) {
v_udt.unrelateAcrossR18From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_udt != null) {
  v_udt.relateAcrossR18To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

StateMachineEventDataItem_c [] v_evtdis = StateMachineEventDataItem_c.getManySM_EVTDIsOnR524(v_coreType);


StateMachineEventDataItem_c  v_evtdi = null;
for ( int i55074 = 0; i55074 < v_evtdis.length; i55074++)
{
  v_evtdi = v_evtdis[i55074] ;

if (v_evtdi != null) {
v_evtdi.unrelateAcrossR524From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_evtdi != null) {
  v_evtdi.relateAcrossR524To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Operation_c [] v_ops = Operation_c.getManyO_TFRsOnR116(v_coreType);


Operation_c  v_op = null;
for ( int i55075 = 0; i55075 < v_ops.length; i55075++)
{
  v_op = v_ops[i55075] ;

if (v_op != null) {
v_op.unrelateAcrossR116From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_op != null) {
  v_op.relateAcrossR116To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

OperationParameter_c [] v_opParms = OperationParameter_c.getManyO_TPARMsOnR118(v_coreType);


OperationParameter_c  v_opParm = null;
for ( int i55076 = 0; i55076 < v_opParms.length; i55076++)
{
  v_opParm = v_opParms[i55076] ;

if (v_opParm != null) {
v_opParm.unrelateAcrossR118From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_opParm != null) {
  v_opParm.relateAcrossR118To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Attribute_c [] v_attrs = Attribute_c.getManyO_ATTRsOnR114(v_coreType);


Attribute_c  v_attr = null;
for ( int i55077 = 0; i55077 < v_attrs.length; i55077++)
{
  v_attr = v_attrs[i55077] ;

if (v_attr != null) {
v_attr.unrelateAcrossR114From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_attr != null) {
  v_attr.relateAcrossR114To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Variable_c [] v_vvars = Variable_c.getManyV_VARsOnR848(v_coreType);


Variable_c  v_vvar = null;
for ( int i55078 = 0; i55078 < v_vvars.length; i55078++)
{
  v_vvar = v_vvars[i55078] ;

if (v_vvar != null) {
v_vvar.unrelateAcrossR848From(v_coreType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_vvar != null) {
  v_vvar.relateAcrossR848To(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End associateChildrenWithSystemBuiltInTypes
  public  void Associatechildrenwithsuppresseddatatypes()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Associatechildrenwithsuppresseddatatypes") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c [] v_suppressedTypes = DataType_c.getManyS_DTsOnR47(DatatypeInSuppression_c.getManyS_DISsOnR47(this));


DataType_c  v_suppressedType = null;
for ( int i55079 = 0; i55079 < v_suppressedTypes.length; i55079++)
{
  v_suppressedType = v_suppressedTypes[i55079] ;

  class DataType_test55736_c implements ClassQueryInterface_c
  {
	DataType_test55736_c( String       p55737 ) {
		m_p55737 = p55737;
	}
	private String       m_p55737;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getName().equals(m_p55737)) ;
	}
  }
DataType_c v_matchingSystemType = DataType_c.getOneS_DTOnR14(this, new DataType_test55736_c(v_suppressedType.getName()));


if (   (v_matchingSystemType != null) )
{

Function_c [] v_functions = Function_c.getManyS_SYNCsOnR25(v_matchingSystemType);


Function_c  v_function = null;
for ( int i55080 = 0; i55080 < v_functions.length; i55080++)
{
  v_function = v_functions[i55080] ;

if (v_function != null) {
v_function.unrelateAcrossR25From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_function != null) {
  v_function.relateAcrossR25To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

FunctionParameter_c [] v_functionParams = FunctionParameter_c.getManyS_SPARMsOnR26(v_matchingSystemType);


FunctionParameter_c  v_functionParam = null;
for ( int i55081 = 0; i55081 < v_functionParams.length; i55081++)
{
  v_functionParam = v_functionParams[i55081] ;

if (v_functionParam != null) {
v_functionParam.unrelateAcrossR26From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_functionParam != null) {
  v_functionParam.relateAcrossR26To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

StructureMember_c [] v_structureMembers = StructureMember_c.getManyS_MBRsOnR45(v_matchingSystemType);


StructureMember_c  v_structureMember = null;
for ( int i55082 = 0; i55082 < v_structureMembers.length; i55082++)
{
  v_structureMember = v_structureMembers[i55082] ;

if (v_structureMember != null) {
v_structureMember.unrelateAcrossR45From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_structureMember != null) {
  v_structureMember.relateAcrossR45To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Bridge_c [] v_bridges = Bridge_c.getManyS_BRGsOnR20(v_matchingSystemType);


Bridge_c  v_brg = null;
for ( int i55083 = 0; i55083 < v_bridges.length; i55083++)
{
  v_brg = v_bridges[i55083] ;

if (v_brg != null) {
v_brg.unrelateAcrossR20From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_brg != null) {
  v_brg.relateAcrossR20To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

BridgeParameter_c [] v_parms = BridgeParameter_c.getManyS_BPARMsOnR22(v_matchingSystemType);


BridgeParameter_c  v_parm = null;
for ( int i55084 = 0; i55084 < v_parms.length; i55084++)
{
  v_parm = v_parms[i55084] ;

if (v_parm != null) {
v_parm.unrelateAcrossR22From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_parm != null) {
  v_parm.relateAcrossR22To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ExternalEntityDataItem_c [] v_eedis = ExternalEntityDataItem_c.getManyS_EEDIsOnR15(v_matchingSystemType);


ExternalEntityDataItem_c  v_eedi = null;
for ( int i55085 = 0; i55085 < v_eedis.length; i55085++)
{
  v_eedi = v_eedis[i55085] ;

if (v_eedi != null) {
v_eedi.unrelateAcrossR15From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_eedi != null) {
  v_eedi.relateAcrossR15To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ExternalEntityEventDataItem_c [] v_eeedis = ExternalEntityEventDataItem_c.getManyS_EEEDIsOnR16(v_matchingSystemType);


ExternalEntityEventDataItem_c  v_eeedi = null;
for ( int i55086 = 0; i55086 < v_eeedis.length; i55086++)
{
  v_eeedi = v_eeedis[i55086] ;

if (v_eeedi != null) {
v_eeedi.unrelateAcrossR16From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_eeedi != null) {
  v_eeedi.relateAcrossR16To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

UserDataType_c [] v_udts = UserDataType_c.getManyS_UDTsOnR18(v_matchingSystemType);


UserDataType_c  v_udt = null;
for ( int i55087 = 0; i55087 < v_udts.length; i55087++)
{
  v_udt = v_udts[i55087] ;

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4402(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4401(DataType_c.getManyS_DTsOnR17(v_udt)));


GlobalElementInSystem_c v_global = GlobalElementInSystem_c.getOneG_EISOnR9100(PackageableElement_c.getManyPE_PEsOnR8001(DataType_c.getManyS_DTsOnR17(v_udt)));


if (   (v_system == null) &&   (v_global == null) )
{

CoreDataType_c v_systemCoreType = CoreDataType_c.getOneS_CDTOnR17(v_matchingSystemType);


CoreDataType_c v_suppressedCoreType = CoreDataType_c.getOneS_CDTOnR17(v_suppressedType);


if (v_udt != null) {
v_udt.unrelateAcrossR18From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_udt != null) {
  v_udt.relateAcrossR18To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

StateMachineEventDataItem_c [] v_evtdis = StateMachineEventDataItem_c.getManySM_EVTDIsOnR524(v_matchingSystemType);


StateMachineEventDataItem_c  v_evtdi = null;
for ( int i55088 = 0; i55088 < v_evtdis.length; i55088++)
{
  v_evtdi = v_evtdis[i55088] ;

if (v_evtdi != null) {
v_evtdi.unrelateAcrossR524From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_evtdi != null) {
  v_evtdi.relateAcrossR524To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Operation_c [] v_ops = Operation_c.getManyO_TFRsOnR116(v_matchingSystemType);


Operation_c  v_op = null;
for ( int i55089 = 0; i55089 < v_ops.length; i55089++)
{
  v_op = v_ops[i55089] ;

if (v_op != null) {
v_op.unrelateAcrossR116From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_op != null) {
  v_op.relateAcrossR116To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

OperationParameter_c [] v_opParms = OperationParameter_c.getManyO_TPARMsOnR118(v_matchingSystemType);


OperationParameter_c  v_opParm = null;
for ( int i55090 = 0; i55090 < v_opParms.length; i55090++)
{
  v_opParm = v_opParms[i55090] ;

if (v_opParm != null) {
v_opParm.unrelateAcrossR118From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_opParm != null) {
  v_opParm.relateAcrossR118To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Attribute_c [] v_attrs = Attribute_c.getManyO_ATTRsOnR114(v_matchingSystemType);


Attribute_c  v_attr = null;
for ( int i55091 = 0; i55091 < v_attrs.length; i55091++)
{
  v_attr = v_attrs[i55091] ;

if (v_attr != null) {
v_attr.unrelateAcrossR114From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_attr != null) {
  v_attr.relateAcrossR114To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Variable_c [] v_vvars = Variable_c.getManyV_VARsOnR848(v_matchingSystemType);


Variable_c  v_vvar = null;
for ( int i55092 = 0; i55092 < v_vvars.length; i55092++)
{
  v_vvar = v_vvars[i55092] ;

if (v_vvar != null) {
v_vvar.unrelateAcrossR848From(v_matchingSystemType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_vvar != null) {
  v_vvar.relateAcrossR848To(v_suppressedType);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End associateChildrenWithSuppressedDatatypes
  public  java.util.UUID         Resolvedatatyperelativetoself(final String       p_Default_name,final String       p_Expected_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Resolvedatatyperelativetoself") ; 
               final ModelRoot modelRoot = getModelRoot();
  class DataType_test55738_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getName().equals(p_Expected_name)) ;
	}
  }
DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR14(this, new DataType_test55738_c());


if ( (  (v_resolvedDT == null)) )
{

Component_c v_component = Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(this));


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(v_component));


if ( (  (v_component != null)) )
{

java.util.UUID         v_resdt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_resdt_id = v_system.Getcoretypeid(			    
p_Expected_name) ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_resdt_id);


v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_resolvedDT == null)) )
{

if ( (  (v_component == null)) )
{

  class DataType_test55739_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getName().equals(p_Default_name)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR14(this, new DataType_test55739_c());



}

else
{

java.util.UUID         v_resdt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_resdt_id = v_system.Getcoretypeid(			    
p_Default_name) ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_resdt_id);


v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);



}


}


}

if ( (  (v_resolvedDT != null)) )
{

return v_resolvedDT.getDt_id();



}

User_c.Logerror(			    
"Unable to resolve any data type."			    
,"" ) ;


return Gd_c.Null_unique_id();



   } // End resolveDataTypeRelativeToSelf
  public  boolean      Participatesinsystem()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Participatesinsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(this));


return   (v_component != null);



   } // End participatesInSystem
  public  void Pasteactivity(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Pasteactivity") ; 
               final ModelRoot modelRoot = getModelRoot();
Activity_c v_activity = (Activity_c) modelRoot.getInstanceList(Activity_c.class).getGlobal(null, p_Id);


if ( (  (v_activity != null)) )
{

if (v_activity != null) {
  v_activity.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_activity.Converttoinstance()			    
,v_activity.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_activity != null) {
v_activity.Associatewithdomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteActivity
  public  void Pastecommunication(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Pastecommunication") ; 
               final ModelRoot modelRoot = getModelRoot();
Communication_c v_comm = (Communication_c) modelRoot.getInstanceList(Communication_c.class).getGlobal(null, p_Id);


if ( (  (v_comm != null)) )
{

if (v_comm != null) {
  v_comm.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_comm.Converttoinstance()			    
,v_comm.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_comm != null) {
v_comm.Associatewithdomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteCommunication
  public  void Pastesequence(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Pastesequence") ; 
               final ModelRoot modelRoot = getModelRoot();
Sequence_c v_seq = (Sequence_c) modelRoot.getInstanceList(Sequence_c.class).getGlobal(null, p_Id);


if ( (  (v_seq != null)) )
{

if (v_seq != null) {
  v_seq.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_seq.Converttoinstance()			    
,v_seq.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_seq != null) {
v_seq.Associatewithdomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteSequence
  public  void Pasteusecasediagram(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Pasteusecasediagram") ; 
               final ModelRoot modelRoot = getModelRoot();
UseCaseDiagram_c v_ucd = (UseCaseDiagram_c) modelRoot.getInstanceList(UseCaseDiagram_c.class).getGlobal(null, p_Id);


if ( (  (v_ucd != null)) )
{

if (v_ucd != null) {
  v_ucd.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_ucd.Converttoinstance()			    
,v_ucd.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_ucd != null) {
v_ucd.Associatewithdomain(			    
getDom_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteUseCaseDiagram
  public  java.util.UUID         Getcontainingcomponentid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getcontainingcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(this));


if ( (  (v_component != null)) )
{

return v_component.getId();



}

return Gd_c.Null_unique_id();



   } // End getContainingComponentId
  public  String       Getpath(final String       p_Path)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_path = getName() ;


if ( (! p_Path.equals("")) )
{

v_path = v_path + "::" + p_Path ;



}

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(this);


if ( (  (v_system != null)) )
{

return v_path;



}

else
{

Component_c v_component = Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(this));


if ( (  (v_component != null)) )
{

return v_component.Getpath(			    
true			    
,p_Path);



}


}

return v_path;



   } // End getPath
  public  int          Getsubsystemcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getsubsystemcount") ; 
               final ModelRoot modelRoot = getModelRoot();
Subsystem_c [] v_subsystems = Subsystem_c.getManyS_SSsOnR43(this);


return   (v_subsystems.length);



   } // End getSubsystemCount
  public  java.util.UUID         Getsubsystemid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getsubsystemid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


Subsystem_c [] v_subsystems = Subsystem_c.getManyS_SSsOnR43(this);


int          v_count = -1 ;


Subsystem_c  v_subsystem = null;
for ( int i55093 = 0; i55093 < v_subsystems.length; i55093++)
{
  v_subsystem = v_subsystems[i55093] ;

if ( (  (v_subsystem != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_subsystem.Get_ooa_id();



}


}

return v_id;



   } // End getSubsystemId
  public  int          Getexternalentitypkgcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getexternalentitypkgcount") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntityPackage_c [] v_externalEntityPckgs = ExternalEntityPackage_c.getManyS_EEPKsOnR36(this);


return   (v_externalEntityPckgs.length);



   } // End getExternalEntityPkgCount
  public  java.util.UUID         Getexternalentitypkgid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getexternalentitypkgid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ExternalEntityPackage_c [] v_externalEntityPckgs = ExternalEntityPackage_c.getManyS_EEPKsOnR36(this);


int          v_count = -1 ;


ExternalEntityPackage_c  v_externalEntityPckg = null;
for ( int i55094 = 0; i55094 < v_externalEntityPckgs.length; i55094++)
{
  v_externalEntityPckg = v_externalEntityPckgs[i55094] ;

if ( (  (v_externalEntityPckg != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_externalEntityPckg.Get_ooa_id();



}


}

return v_id;



   } // End getExternalEntityPkgId
  public  int          Getfunctionpckgcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getfunctionpckgcount") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionPackage_c [] v_functionPckgs = FunctionPackage_c.getManyS_FPKsOnR29(this);


return   (v_functionPckgs.length);



   } // End getFunctionPckgCount
  public  java.util.UUID         Getfunctionpckgid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getfunctionpckgid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


FunctionPackage_c [] v_functionPckgs = FunctionPackage_c.getManyS_FPKsOnR29(this);


int          v_count = -1 ;


FunctionPackage_c  v_functionPckg = null;
for ( int i55095 = 0; i55095 < v_functionPckgs.length; i55095++)
{
  v_functionPckg = v_functionPckgs[i55095] ;

if ( (  (v_functionPckg != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_functionPckg.Get_ooa_id();



}


}

return v_id;



   } // End getFunctionPckgId
  public  int          Getdatatypepckgcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getdatatypepckgcount") ; 
               final ModelRoot modelRoot = getModelRoot();
DataTypePackage_c [] v_datatypePckgs = DataTypePackage_c.getManyS_DPKsOnR40(this);


return   (v_datatypePckgs.length);



   } // End getDatatypePckgCount
  public  java.util.UUID         Getdatatypepckgid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getdatatypepckgid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


DataTypePackage_c [] v_datatypePckgs = DataTypePackage_c.getManyS_DPKsOnR40(this);


int          v_count = -1 ;


DataTypePackage_c  v_datatypePckg = null;
for ( int i55096 = 0; i55096 < v_datatypePckgs.length; i55096++)
{
  v_datatypePckg = v_datatypePckgs[i55096] ;

if ( (  (v_datatypePckg != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_datatypePckg.Get_ooa_id();



}


}

return v_id;



   } // End getDatatypePckgId
  public  int          Getsequencecount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getsequencecount") ; 
               final ModelRoot modelRoot = getModelRoot();
Sequence_c [] v_sequences = Sequence_c.getManySQ_SsOnR913(this);


return   (v_sequences.length);



   } // End getSequenceCount
  public  java.util.UUID         Getsequenceid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getsequenceid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


Sequence_c [] v_sequences = Sequence_c.getManySQ_SsOnR913(this);


int          v_count = -1 ;


Sequence_c  v_sequence = null;
for ( int i55097 = 0; i55097 < v_sequences.length; i55097++)
{
  v_sequence = v_sequences[i55097] ;

if ( (  (v_sequence != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_sequence.Get_ooa_id();



}


}

return v_id;



   } // End getSequenceId
  public  int          Getcommunicationcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getcommunicationcount") ; 
               final ModelRoot modelRoot = getModelRoot();
Communication_c [] v_communications = Communication_c.getManyCOMM_COMMsOnR1132(this);


return   (v_communications.length);



   } // End getCommunicationCount
  public  java.util.UUID         Getcommunicationid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getcommunicationid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


Communication_c [] v_communications = Communication_c.getManyCOMM_COMMsOnR1132(this);


int          v_count = -1 ;


Communication_c  v_communication = null;
for ( int i55098 = 0; i55098 < v_communications.length; i55098++)
{
  v_communication = v_communications[i55098] ;

if ( (  (v_communication != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_communication.Get_ooa_id();



}


}

return v_id;



   } // End getCommunicationId
  public  int          Getusecasecount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getusecasecount") ; 
               final ModelRoot modelRoot = getModelRoot();
UseCaseDiagram_c [] v_usecases = UseCaseDiagram_c.getManyUC_UCCsOnR1201(this);


return   (v_usecases.length);



   } // End getUsecaseCount
  public  java.util.UUID         Getusecaseid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getusecaseid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


UseCaseDiagram_c [] v_usecases = UseCaseDiagram_c.getManyUC_UCCsOnR1201(this);


int          v_count = -1 ;


UseCaseDiagram_c  v_usecase = null;
for ( int i55099 = 0; i55099 < v_usecases.length; i55099++)
{
  v_usecase = v_usecases[i55099] ;

if ( (  (v_usecase != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_usecase.Get_ooa_id();



}


}

return v_id;



   } // End getUsecaseId
  public  int          Getactivitycount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getactivitycount") ; 
               final ModelRoot modelRoot = getModelRoot();
Activity_c [] v_activities = Activity_c.getManyA_AsOnR1100(this);


return   (v_activities.length);



   } // End getActivityCount
  public  java.util.UUID         Getactivityid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getactivityid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


Activity_c [] v_activities = Activity_c.getManyA_AsOnR1100(this);


int          v_count = -1 ;


Activity_c  v_activity = null;
for ( int i55100 = 0; i55100 < v_activities.length; i55100++)
{
  v_activity = v_activities[i55100] ;

if ( (  (v_activity != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_activity.Get_ooa_id();



}


}

return v_id;



   } // End getActivityId
  public  java.util.UUID         Getsystemid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Getsystemid") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(this);


if (   (v_system != null) )
{

return v_system.getSys_id();



}

else
{

Component_c v_component = Component_c.getOneC_COnR4204(this);


if (   (v_component != null) )
{

return v_component.Getsystemid();



}


}

User_c.Logerror(			    
"Domain.getSystemId()::No parent found."			    
,"" ) ;


return Gd_c.Null_unique_id();



   } // End getSystemId
  public  void Removeincompletesignalevents()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Domain", " Operation entered: Domain::Removeincompletesignalevents") ; 
               final ModelRoot modelRoot = getModelRoot();
Subsystem_c [] v_subsystems = Subsystem_c.getManyS_SSsOnR1(this);


Subsystem_c  v_subsystem = null;
for ( int i55101 = 0; i55101 < v_subsystems.length; i55101++)
{
  v_subsystem = v_subsystems[i55101] ;

if (v_subsystem != null) {
v_subsystem.Removeincompletesignalevents() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End removeIncompleteSignalEvents

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return DomainActionFilter.getSingleton();
    }
	if (adapter == org.eclipse.core.resources.IResource.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
        	return comp.getFile().getParent();
        }
	}else if(adapter == org.eclipse.core.resources.IFile.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
            return comp.getFile();
        }
	}
	  return null;
  }
    public SystemModel_c getDomainParent() {
		if(SystemModel != null){
			return SystemModel;
		}
		
        final UUID sys_id = getSys_idCachedValue();
        SystemModel_c sysMod = SystemModel_c.SystemModelInstance(
            Ooaofooa.getDefaultInstance(),
            new ClassQueryInterface_c() {

                public boolean evaluate(Object candidate) {
                    SystemModel_c selected = (SystemModel_c) candidate;
                    return selected.getSys_id().equals(sys_id);
                }

        },false);
        return sysMod;
    }

} // end Domain
