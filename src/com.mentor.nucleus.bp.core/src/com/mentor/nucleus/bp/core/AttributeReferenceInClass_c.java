package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.AttributeReferenceInClass_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_ATTRIBUTE_REFERENCE_IN_CLASS extends genericEvent_c {
	public abstract int getEvtcode();
}

public class AttributeReferenceInClass_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public AttributeReferenceInClass_c(ModelRoot modelRoot,
			java.util.UUID p_m_obj_id, java.util.UUID p_m_robj_id,
			int p_m_roid_id, java.util.UUID p_m_rattr_id,
			java.util.UUID p_m_rel_id, java.util.UUID p_m_oir_id,
			java.util.UUID p_m_roir_id, java.util.UUID p_m_attr_id,
			java.util.UUID p_m_aref_id, java.util.UUID p_m_paref_id,
			boolean p_m_is_cstrd, String p_m_descrip, String p_m_robj_name,
			String p_m_rattr_name, String p_m_rel_name) {
		super(modelRoot);
		m_roid_id = p_m_roid_id;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_rattr_id = IdAssigner.preprocessUUID(p_m_rattr_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_oir_id = IdAssigner.preprocessUUID(p_m_oir_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_roir_id = IdAssigner.preprocessUUID(p_m_roir_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_attr_id = IdAssigner.preprocessUUID(p_m_attr_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_aref_id = IdAssigner.preprocessUUID(p_m_aref_id);
		//extract 28 bit value only            
		m_aref_idLongBased = 0xfffffff & p_m_aref_id.getLeastSignificantBits();
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_paref_id = IdAssigner.preprocessUUID(p_m_paref_id);
		m_is_cstrd = p_m_is_cstrd;
		m_descrip = p_m_descrip;
		m_robj_name = p_m_robj_name;
		m_rattr_name = p_m_rattr_name;
		m_rel_name = p_m_rel_name;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_robj_id = IdAssigner.preprocessUUID(p_m_robj_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);

		setUniqueId(m_aref_id);
		Object[] key = {new UUID(0, new Long(m_roid_id)), m_rattr_id, m_oir_id,
				m_roir_id, m_robj_id, m_obj_id, m_rel_id};
		addInstanceToMap(key);
	}
	static public AttributeReferenceInClass_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_obj_id, java.util.UUID p_m_robj_id,
			int p_m_roid_id, java.util.UUID p_m_rattr_id,
			java.util.UUID p_m_rel_id, java.util.UUID p_m_oir_id,
			java.util.UUID p_m_roir_id, java.util.UUID p_m_attr_id,
			java.util.UUID p_m_aref_id, java.util.UUID p_m_paref_id,
			boolean p_m_is_cstrd, String p_m_descrip, String p_m_robj_name,
			String p_m_rattr_name, String p_m_rel_name, String p_contentPath,
			IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);
		AttributeReferenceInClass_c new_inst = null;
		synchronized (instances) {
			Object[] key = {new UUID(0, new Long(p_m_roid_id)), p_m_rattr_id,
					p_m_oir_id, p_m_roir_id, p_m_robj_id, p_m_obj_id,
					p_m_rel_id};
			new_inst = (AttributeReferenceInClass_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				new_inst.m_roid_id = p_m_roid_id;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_rattr_id = IdAssigner.preprocessUUID(p_m_rattr_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_oir_id = IdAssigner.preprocessUUID(p_m_oir_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_roir_id = IdAssigner.preprocessUUID(p_m_roir_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_attr_id = IdAssigner.preprocessUUID(p_m_attr_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_aref_id = IdAssigner.preprocessUUID(p_m_aref_id);
				//extract 28 bit value only            
				new_inst.m_aref_idLongBased = 0xfffffff & p_m_aref_id
						.getLeastSignificantBits();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_paref_id = IdAssigner.preprocessUUID(p_m_paref_id);
				new_inst.m_is_cstrd = p_m_is_cstrd;
				new_inst.m_descrip = p_m_descrip;
				new_inst.m_robj_name = p_m_robj_name;
				new_inst.m_rattr_name = p_m_rattr_name;
				new_inst.m_rel_name = p_m_rel_name;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_robj_id = IdAssigner.preprocessUUID(p_m_robj_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new AttributeReferenceInClass_c(modelRoot, p_m_obj_id,
					p_m_robj_id, p_m_roid_id, p_m_rattr_id, p_m_rel_id,
					p_m_oir_id, p_m_roir_id, p_m_attr_id, p_m_aref_id,
					p_m_paref_id, p_m_is_cstrd, p_m_descrip, p_m_robj_name,
					p_m_rattr_name, p_m_rel_name);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public AttributeReferenceInClass_c resolveInstance(
			ModelRoot modelRoot, java.util.UUID p_m_obj_id,
			java.util.UUID p_m_robj_id, int p_m_roid_id,
			java.util.UUID p_m_rattr_id, java.util.UUID p_m_rel_id,
			java.util.UUID p_m_oir_id, java.util.UUID p_m_roir_id,
			java.util.UUID p_m_attr_id, java.util.UUID p_m_aref_id,
			java.util.UUID p_m_paref_id, boolean p_m_is_cstrd,
			String p_m_descrip, String p_m_robj_name, String p_m_rattr_name,
			String p_m_rel_name) {
		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);
		AttributeReferenceInClass_c source = null;
		synchronized (instances) {
			Object[] key = {new UUID(0, new Long(p_m_roid_id)), p_m_rattr_id,
					p_m_oir_id, p_m_roir_id, p_m_robj_id, p_m_obj_id,
					p_m_rel_id};
			source = (AttributeReferenceInClass_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				source.m_roid_id = p_m_roid_id;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_rattr_id = IdAssigner.preprocessUUID(p_m_rattr_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_oir_id = IdAssigner.preprocessUUID(p_m_oir_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_roir_id = IdAssigner.preprocessUUID(p_m_roir_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_attr_id = IdAssigner.preprocessUUID(p_m_attr_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_aref_id = IdAssigner.preprocessUUID(p_m_aref_id);
				//extract 28 bit value only            
				source.m_aref_idLongBased = 0xfffffff & p_m_aref_id
						.getLeastSignificantBits();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_paref_id = IdAssigner.preprocessUUID(p_m_paref_id);
				source.m_is_cstrd = p_m_is_cstrd;
				source.m_descrip = p_m_descrip;
				source.m_robj_name = p_m_robj_name;
				source.m_rattr_name = p_m_rattr_name;
				source.m_rel_name = p_m_rel_name;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_robj_id = IdAssigner.preprocessUUID(p_m_robj_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);

				return source;
			}
		}
		// there is no instance matching the id
		AttributeReferenceInClass_c new_inst = new AttributeReferenceInClass_c(
				modelRoot, p_m_obj_id, p_m_robj_id, p_m_roid_id, p_m_rattr_id,
				p_m_rel_id, p_m_oir_id, p_m_roir_id, p_m_attr_id, p_m_aref_id,
				p_m_paref_id, p_m_is_cstrd, p_m_descrip, p_m_robj_name,
				p_m_rattr_name, p_m_rel_name);
		return new_inst;
	}
	public AttributeReferenceInClass_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_rattr_id = IdAssigner.NULL_UUID;
		m_oir_id = IdAssigner.NULL_UUID;
		m_roir_id = IdAssigner.NULL_UUID;
		m_attr_id = IdAssigner.NULL_UUID;
		m_aref_id = idAssigner.createUUID();
		m_paref_id = IdAssigner.NULL_UUID;
		m_descrip = "";
		m_robj_name = "";
		m_rattr_name = "";
		m_rel_name = "";
		m_robj_id = IdAssigner.NULL_UUID;
		m_obj_id = IdAssigner.NULL_UUID;
		m_rel_id = IdAssigner.NULL_UUID;
		setUniqueId(m_aref_id);
		Object[] key = {new UUID(0, new Long(m_roid_id)), m_rattr_id, m_oir_id,
				m_roir_id, m_robj_id, m_obj_id, m_rel_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {new UUID(0, new Long(m_roid_id)), m_rattr_id, m_oir_id,
				m_roir_id, m_robj_id, m_obj_id, m_rel_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p4
		// round p6
		// round p7
		// round p1
		// round p2
		// round p3
		// round p4
		// round p5
		if (m_rattr_id != p_newKey) {

			m_rattr_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof AttributeReferenceInClass_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof AttributeReferenceInClass_c)) {
			return false;
		}

		AttributeReferenceInClass_c me = (AttributeReferenceInClass_c) elem;
		if (getRoid_id() != ((AttributeReferenceInClass_c) elem).getRoid_id())
			return false;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getRattr_id()) || IdAssigner.NULL_UUID
						.equals(((AttributeReferenceInClass_c) elem)
								.getRattr_id())) && this != elem)) {
			return false;
		}
		if (!getRattr_id().equals(
				((AttributeReferenceInClass_c) elem).getRattr_id()))
			return false;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getOir_id()) || IdAssigner.NULL_UUID
						.equals(((AttributeReferenceInClass_c) elem)
								.getOir_id())) && this != elem)) {
			return false;
		}
		if (!getOir_id().equals(
				((AttributeReferenceInClass_c) elem).getOir_id()))
			return false;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getRoir_id()) || IdAssigner.NULL_UUID
						.equals(((AttributeReferenceInClass_c) elem)
								.getRoir_id())) && this != elem)) {
			return false;
		}
		if (!getRoir_id().equals(
				((AttributeReferenceInClass_c) elem).getRoir_id()))
			return false;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getRobj_id()) || IdAssigner.NULL_UUID
						.equals(((AttributeReferenceInClass_c) elem)
								.getRobj_id())) && this != elem)) {
			return false;
		}
		if (!getRobj_id().equals(
				((AttributeReferenceInClass_c) elem).getRobj_id()))
			return false;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getObj_id()) || IdAssigner.NULL_UUID
						.equals(((AttributeReferenceInClass_c) elem)
								.getObj_id())) && this != elem)) {
			return false;
		}
		if (!getObj_id().equals(
				((AttributeReferenceInClass_c) elem).getObj_id()))
			return false;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getRel_id()) || IdAssigner.NULL_UUID
						.equals(((AttributeReferenceInClass_c) elem)
								.getRel_id())) && this != elem)) {
			return false;
		}
		if (!getRel_id().equals(
				((AttributeReferenceInClass_c) elem).getRel_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof AttributeReferenceInClass_c)) {
			return false;
		}

		AttributeReferenceInClass_c me = (AttributeReferenceInClass_c) elem;
		if (getRoid_idCachedValue() != ((AttributeReferenceInClass_c) elem)
				.getRoid_idCachedValue())
			return false;
		if (!getRattr_idCachedValue().equals(
				((AttributeReferenceInClass_c) elem).getRattr_idCachedValue()))
			return false;
		if (!getOir_idCachedValue().equals(
				((AttributeReferenceInClass_c) elem).getOir_idCachedValue()))
			return false;
		if (!getRoir_idCachedValue().equals(
				((AttributeReferenceInClass_c) elem).getRoir_idCachedValue()))
			return false;
		if (!getRobj_idCachedValue().equals(
				((AttributeReferenceInClass_c) elem).getRobj_idCachedValue()))
			return false;
		if (!getObj_idCachedValue().equals(
				((AttributeReferenceInClass_c) elem).getObj_idCachedValue()))
			return false;
		if (!getRel_idCachedValue().equals(
				((AttributeReferenceInClass_c) elem).getRel_idCachedValue()))
			return false;
		return true;
	}

	// Attributes
	private int m_roid_id;
	private java.util.UUID m_rattr_id;
	private java.util.UUID m_oir_id;
	private java.util.UUID m_roir_id;
	private java.util.UUID m_attr_id;
	private java.util.UUID m_aref_id;
	private long m_aref_idLongBased;
	private java.util.UUID m_paref_id;
	private boolean m_is_cstrd;
	private String m_descrip;
	private String m_robj_name;
	private String m_rattr_name;
	private String m_rel_name;
	private java.util.UUID m_robj_id;
	private java.util.UUID m_obj_id;
	private java.util.UUID m_rel_id;

	// declare association references from this class

	// referring navigation

	ReferredToIdentifierAttribute_c RefersAcrossAssociationViaReferredToIdentifierAttribute;
	public void relateAcrossR111To(ReferredToIdentifierAttribute_c target) {
		relateAcrossR111To(target, true);
	}
	public void relateAcrossR111To(ReferredToIdentifierAttribute_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == RefersAcrossAssociationViaReferredToIdentifierAttribute)
			return; // already related

		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != target) {

			Object oldKey = getInstanceKey();

			if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
				UmlProblem
						.removeXtUMLProblem(this,
								RefersAcrossAssociationViaReferredToIdentifierAttribute);

				RefersAcrossAssociationViaReferredToIdentifierAttribute
						.clearBackPointerR111To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"AttributeReferenceInClass_c.relateAcrossR111To(ReferredToIdentifierAttribute_c target)",
									"Relate performed across R111 from Attribute Reference in Class to Referred To Identifier Attribute without unrelate of prior instance.");
				}
			}

			RefersAcrossAssociationViaReferredToIdentifierAttribute = target;
			if (IdAssigner.NULL_UUID.equals(target.getAttr_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_rattr_id = target.getAttr_idCachedValue();
			}
			if (IdAssigner.NULL_UUID.equals(target.getOir_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_roir_id = target.getOir_idCachedValue();
			}
			if (IdAssigner.NULL_UUID.equals(target.getObj_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_robj_id = target.getObj_idCachedValue();
			}
			if (IdAssigner.NULL_UUID.equals(target.getRel_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_rel_id = target.getRel_idCachedValue();
			}
			if (target.getOid_id() == 0) {
				// do not update cached value
			} else {
				// update cached value
				m_roid_id = target.getOid_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR111To(this);
			target.addRef();
			UmlProblem.handleDanglingReference(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "111", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR111From(ReferredToIdentifierAttribute_c target) {
		unrelateAcrossR111From(target, true);
	}
	public void unrelateAcrossR111From(ReferredToIdentifierAttribute_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (RefersAcrossAssociationViaReferredToIdentifierAttribute == null)
			return; // already unrelated

		if (target != RefersAcrossAssociationViaReferredToIdentifierAttribute) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R111",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR111To(this);
		}

		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {

			m_rattr_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getAttr_id();
			if (IdAssigner.NULL_UUID.equals(m_rattr_id)) {
				m_rattr_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
						.getAttr_idCachedValue();
			}
			m_roir_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getOir_id();
			if (IdAssigner.NULL_UUID.equals(m_roir_id)) {
				m_roir_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
						.getOir_idCachedValue();
			}
			m_robj_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getObj_id();
			if (IdAssigner.NULL_UUID.equals(m_robj_id)) {
				m_robj_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
						.getObj_idCachedValue();
			}
			m_rel_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getRel_id();
			if (IdAssigner.NULL_UUID.equals(m_rel_id)) {
				m_rel_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
						.getRel_idCachedValue();
			}
			m_roid_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getOid_id();
			if (m_roid_id == 0) {
				m_roid_id = RefersAcrossAssociationViaReferredToIdentifierAttribute
						.getOid_idCachedValue();
			}
			RefersAcrossAssociationViaReferredToIdentifierAttribute = null;
			target.removeRef();
			UmlProblem.removeXtUMLProblem(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "111", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	// referring navigation

	ReferringClassInAssoc_c IsUsedToReferClassByReferringClassInAssoc;
	public void relateAcrossR111To(ReferringClassInAssoc_c target) {
		relateAcrossR111To(target, true);
	}
	public void relateAcrossR111To(ReferringClassInAssoc_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsUsedToReferClassByReferringClassInAssoc)
			return; // already related

		if (IsUsedToReferClassByReferringClassInAssoc != target) {

			Object oldKey = getInstanceKey();

			if (IsUsedToReferClassByReferringClassInAssoc != null) {
				UmlProblem.removeXtUMLProblem(this,
						IsUsedToReferClassByReferringClassInAssoc);

				IsUsedToReferClassByReferringClassInAssoc
						.clearBackPointerR111To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"AttributeReferenceInClass_c.relateAcrossR111To(ReferringClassInAssoc_c target)",
									"Relate performed across R111 from Attribute Reference in Class to Referring Class In Assoc without unrelate of prior instance.");
				}
			}

			IsUsedToReferClassByReferringClassInAssoc = target;
			if (IdAssigner.NULL_UUID.equals(target.getOir_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_oir_id = target.getOir_idCachedValue();
			}
			if (IdAssigner.NULL_UUID.equals(target.getObj_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_obj_id = target.getObj_idCachedValue();
			}
			if (IdAssigner.NULL_UUID.equals(target.getRel_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_rel_id = target.getRel_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR111To(this);
			target.addRef();
			UmlProblem.handleDanglingReference(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "111", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR111From(ReferringClassInAssoc_c target) {
		unrelateAcrossR111From(target, true);
	}
	public void unrelateAcrossR111From(ReferringClassInAssoc_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (IsUsedToReferClassByReferringClassInAssoc == null)
			return; // already unrelated

		if (target != IsUsedToReferClassByReferringClassInAssoc) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R111",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR111To(this);
		}

		if (IsUsedToReferClassByReferringClassInAssoc != null) {

			m_oir_id = IsUsedToReferClassByReferringClassInAssoc.getOir_id();
			if (IdAssigner.NULL_UUID.equals(m_oir_id)) {
				m_oir_id = IsUsedToReferClassByReferringClassInAssoc
						.getOir_idCachedValue();
			}
			m_obj_id = IsUsedToReferClassByReferringClassInAssoc.getObj_id();
			if (IdAssigner.NULL_UUID.equals(m_obj_id)) {
				m_obj_id = IsUsedToReferClassByReferringClassInAssoc
						.getObj_idCachedValue();
			}
			m_rel_id = IsUsedToReferClassByReferringClassInAssoc.getRel_id();
			if (IdAssigner.NULL_UUID.equals(m_rel_id)) {
				m_rel_id = IsUsedToReferClassByReferringClassInAssoc
						.getRel_idCachedValue();
			}
			IsUsedToReferClassByReferringClassInAssoc = null;
			target.removeRef();
			UmlProblem.removeXtUMLProblem(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "111", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferredToIdentifierAttribute_c[] targets) {
		return getOneO_REFOnR111(targets, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferredToIdentifierAttribute_c[] targets,
			ClassQueryInterface_c test) {
		AttributeReferenceInClass_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneO_REFOnR111(targets[i], test);
			}
		}

		return ret_val;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferredToIdentifierAttribute_c target) {
		return getOneO_REFOnR111(target, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferredToIdentifierAttribute_c target, boolean loadComponent) {
		return getOneO_REFOnR111(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferredToIdentifierAttribute_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneO_REFOnR111(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ModelRoot modelRoot, ReferredToIdentifierAttribute_c target,
			ClassQueryInterface_c test) {
		return getOneO_REFOnR111(modelRoot, target, test, true);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ModelRoot modelRoot, ReferredToIdentifierAttribute_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		AttributeReferenceInClass_c result = null;

		result = find_getOneO_REFOnR111(modelRoot, target, test);
		if (result == null && (loadComponent)) {
			// not a Containment Relation
			List comps = PersistenceManager.findAllComponents(modelRoot,
					AttributeReferenceInClass_c.class);
			for (int i = 0; i < comps.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) comps
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = find_getOneO_REFOnR111(modelRoot, target, test);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}

		return result;
	}
	private static AttributeReferenceInClass_c find_getOneO_REFOnR111(
			ModelRoot modelRoot, ReferredToIdentifierAttribute_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111) {
				for (int i = 0; i < target.backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111
						.size(); ++i) {
					AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) target.backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferredToIdentifierAttribute_c[] targets) {
		return getManyO_REFsOnR111(targets, null);
	}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferredToIdentifierAttribute_c[] targets, boolean loadComponent) {
		return getManyO_REFsOnR111(targets, null, loadComponent);
	}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferredToIdentifierAttribute_c[] targets,
			ClassQueryInterface_c test) {
		return getManyO_REFsOnR111(targets, test, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferredToIdentifierAttribute_c[] targets,
			ClassQueryInterface_c test, boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new AttributeReferenceInClass_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					AttributeReferenceInClass_c.class);

		}

		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111) {
				for (int j = 0; j < targets[i].backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111
						.size(); ++j) {
					AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) targets[i].backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			AttributeReferenceInClass_c[] ret_set = new AttributeReferenceInClass_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AttributeReferenceInClass_c[0];
		}
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferredToIdentifierAttribute_c target) {
		return getManyO_REFsOnR111(target, null);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferredToIdentifierAttribute_c target, boolean loadComponent) {
		return getManyO_REFsOnR111(target, null, loadComponent);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferredToIdentifierAttribute_c target, ClassQueryInterface_c test) {
		return getManyO_REFsOnR111(target, test, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferredToIdentifierAttribute_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new AttributeReferenceInClass_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					AttributeReferenceInClass_c.class);
		}
		Vector matches = new Vector();
		synchronized (target.backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111) {
			for (int i = 0; i < target.backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111
					.size(); ++i) {
				AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) target.backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			AttributeReferenceInClass_c[] ret_set = new AttributeReferenceInClass_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AttributeReferenceInClass_c[0];
		}
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferringClassInAssoc_c[] targets) {
		return getOneO_REFOnR111(targets, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferringClassInAssoc_c[] targets, ClassQueryInterface_c test) {
		AttributeReferenceInClass_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneO_REFOnR111(targets[i], test);
			}
		}

		return ret_val;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferringClassInAssoc_c target) {
		return getOneO_REFOnR111(target, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferringClassInAssoc_c target, boolean loadComponent) {
		return getOneO_REFOnR111(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ReferringClassInAssoc_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneO_REFOnR111(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ModelRoot modelRoot, ReferringClassInAssoc_c target,
			ClassQueryInterface_c test) {
		return getOneO_REFOnR111(modelRoot, target, test, true);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR111(
			ModelRoot modelRoot, ReferringClassInAssoc_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		AttributeReferenceInClass_c result = null;

		result = find_getOneO_REFOnR111(modelRoot, target, test);
		if (result == null && (loadComponent)) {
			// not a Containment Relation
			List comps = PersistenceManager.findAllComponents(modelRoot,
					AttributeReferenceInClass_c.class);
			for (int i = 0; i < comps.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) comps
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = find_getOneO_REFOnR111(modelRoot, target, test);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}

		return result;
	}
	private static AttributeReferenceInClass_c find_getOneO_REFOnR111(
			ModelRoot modelRoot, ReferringClassInAssoc_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111) {
				for (int i = 0; i < target.backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111
						.size(); ++i) {
					AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) target.backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferringClassInAssoc_c[] targets) {
		return getManyO_REFsOnR111(targets, null);
	}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferringClassInAssoc_c[] targets, boolean loadComponent) {
		return getManyO_REFsOnR111(targets, null, loadComponent);
	}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferringClassInAssoc_c[] targets, ClassQueryInterface_c test) {
		return getManyO_REFsOnR111(targets, test, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferringClassInAssoc_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new AttributeReferenceInClass_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					AttributeReferenceInClass_c.class);

		}

		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111) {
				for (int j = 0; j < targets[i].backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111
						.size(); ++j) {
					AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) targets[i].backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			AttributeReferenceInClass_c[] ret_set = new AttributeReferenceInClass_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AttributeReferenceInClass_c[0];
		}
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferringClassInAssoc_c target) {
		return getManyO_REFsOnR111(target, null);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferringClassInAssoc_c target, boolean loadComponent) {
		return getManyO_REFsOnR111(target, null, loadComponent);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferringClassInAssoc_c target, ClassQueryInterface_c test) {
		return getManyO_REFsOnR111(target, test, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR111(
			ReferringClassInAssoc_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new AttributeReferenceInClass_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		if (loadComponent) {
			//not a Containment Relation
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					AttributeReferenceInClass_c.class);
		}
		Vector matches = new Vector();
		synchronized (target.backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111) {
			for (int i = 0; i < target.backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111
					.size(); ++i) {
				AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) target.backPointer_RefersAcrossAssociationViaAttributeReferenceInClassRefersAcrossAssociationVia_R111
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			AttributeReferenceInClass_c[] ret_set = new AttributeReferenceInClass_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AttributeReferenceInClass_c[0];
		}
	}

	// referring navigation

	ReferentialAttribute_c IsResolvedByReferentialAttribute;
	public void relateAcrossR108To(ReferentialAttribute_c target) {
		relateAcrossR108To(target, true);
	}
	public void relateAcrossR108To(ReferentialAttribute_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsResolvedByReferentialAttribute)
			return; // already related

		if (IsResolvedByReferentialAttribute != target) {

			Object oldKey = getInstanceKey();

			if (IsResolvedByReferentialAttribute != null) {

				IsResolvedByReferentialAttribute.clearBackPointerR108To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"AttributeReferenceInClass_c.relateAcrossR108To(ReferentialAttribute_c target)",
									"Relate performed across R108 from Attribute Reference in Class to Referential Attribute without unrelate of prior instance.");
				}
			}

			IsResolvedByReferentialAttribute = target;
			if (IdAssigner.NULL_UUID.equals(target.getAttr_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_attr_id = target.getAttr_idCachedValue();
			}
			if (IdAssigner.NULL_UUID.equals(target.getObj_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_obj_id = target.getObj_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR108To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "108", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR108From(ReferentialAttribute_c target) {
		unrelateAcrossR108From(target, true);
	}
	public void unrelateAcrossR108From(ReferentialAttribute_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (IsResolvedByReferentialAttribute == null)
			return; // already unrelated

		if (target != IsResolvedByReferentialAttribute) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R108",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR108To(this);
		}

		if (IsResolvedByReferentialAttribute != null) {

			m_attr_id = IsResolvedByReferentialAttribute.getAttr_id();
			if (IdAssigner.NULL_UUID.equals(m_attr_id)) {
				m_attr_id = IsResolvedByReferentialAttribute
						.getAttr_idCachedValue();
			}
			m_obj_id = IsResolvedByReferentialAttribute.getObj_id();
			if (IdAssigner.NULL_UUID.equals(m_obj_id)) {
				m_obj_id = IsResolvedByReferentialAttribute
						.getObj_idCachedValue();
			}
			IsResolvedByReferentialAttribute = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "108", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR108(
			ReferentialAttribute_c[] targets) {
		return getOneO_REFOnR108(targets, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR108(
			ReferentialAttribute_c[] targets, ClassQueryInterface_c test) {
		AttributeReferenceInClass_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneO_REFOnR108(targets[i], test);
			}
		}

		return ret_val;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR108(
			ReferentialAttribute_c target) {
		return getOneO_REFOnR108(target, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR108(
			ReferentialAttribute_c target, boolean loadComponent) {
		return getOneO_REFOnR108(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR108(
			ReferentialAttribute_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneO_REFOnR108(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR108(
			ModelRoot modelRoot, ReferentialAttribute_c target,
			ClassQueryInterface_c test) {
		return getOneO_REFOnR108(modelRoot, target, test, true);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR108(
			ModelRoot modelRoot, ReferentialAttribute_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneO_REFOnR108(modelRoot, target, test);
	}
	private static AttributeReferenceInClass_c find_getOneO_REFOnR108(
			ModelRoot modelRoot, ReferentialAttribute_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_ResolvesAttributeReferenceInClassResolves_R108) {
				for (int i = 0; i < target.backPointer_ResolvesAttributeReferenceInClassResolves_R108
						.size(); ++i) {
					AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) target.backPointer_ResolvesAttributeReferenceInClassResolves_R108
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR108(
			ReferentialAttribute_c[] targets) {
		return getManyO_REFsOnR108(targets, null);
	}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR108(
			ReferentialAttribute_c[] targets, boolean loadComponent) {
		return getManyO_REFsOnR108(targets, null, loadComponent);
	}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR108(
			ReferentialAttribute_c[] targets, ClassQueryInterface_c test) {
		return getManyO_REFsOnR108(targets, test, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR108(
			ReferentialAttribute_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new AttributeReferenceInClass_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_ResolvesAttributeReferenceInClassResolves_R108) {
				for (int j = 0; j < targets[i].backPointer_ResolvesAttributeReferenceInClassResolves_R108
						.size(); ++j) {
					AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) targets[i].backPointer_ResolvesAttributeReferenceInClassResolves_R108
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			AttributeReferenceInClass_c[] ret_set = new AttributeReferenceInClass_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AttributeReferenceInClass_c[0];
		}
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR108(
			ReferentialAttribute_c target) {
		return getManyO_REFsOnR108(target, null);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR108(
			ReferentialAttribute_c target, boolean loadComponent) {
		return getManyO_REFsOnR108(target, null, loadComponent);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR108(
			ReferentialAttribute_c target, ClassQueryInterface_c test) {
		return getManyO_REFsOnR108(target, test, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR108(
			ReferentialAttribute_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target == null)
			return new AttributeReferenceInClass_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		Vector matches = new Vector();
		synchronized (target.backPointer_ResolvesAttributeReferenceInClassResolves_R108) {
			for (int i = 0; i < target.backPointer_ResolvesAttributeReferenceInClassResolves_R108
					.size(); ++i) {
				AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) target.backPointer_ResolvesAttributeReferenceInClassResolves_R108
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			AttributeReferenceInClass_c[] ret_set = new AttributeReferenceInClass_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AttributeReferenceInClass_c[0];
		}
	}

	// referring navigation

	AttributeReferenceInClass_c SucceedsAttributeReferenceInClass;
	public void relateAcrossR112ToSucceeds(AttributeReferenceInClass_c target) {
		relateAcrossR112ToSucceeds(target, true);
	}
	public void relateAcrossR112ToSucceeds(AttributeReferenceInClass_c target,
			boolean notifyChanges) {
		if (target == null)
			return;

		if (target == SucceedsAttributeReferenceInClass)
			return; // already related

		if (SucceedsAttributeReferenceInClass != target) {

			Object oldKey = getInstanceKey();

			if (SucceedsAttributeReferenceInClass != null) {

				SucceedsAttributeReferenceInClass
						.clearBackPointerR112ToPrecedes(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"AttributeReferenceInClass_c.relateAcrossR112ToSucceeds(AttributeReferenceInClass_c target)",
									"Relate performed across R112 from Attribute Reference in Class to Attribute Reference in Class without unrelate of prior instance.");
				}
			}

			SucceedsAttributeReferenceInClass = target;
			m_paref_id = target.getAref_id();
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR112ToPrecedes(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "112", "Succeeds");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR112FromSucceeds(
			AttributeReferenceInClass_c target) {
		unrelateAcrossR112FromSucceeds(target, true);
	}
	public void unrelateAcrossR112FromSucceeds(
			AttributeReferenceInClass_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (SucceedsAttributeReferenceInClass == null)
			return; // already unrelated

		if (target != SucceedsAttributeReferenceInClass) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R112",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR112ToPrecedes(this);
		}

		if (SucceedsAttributeReferenceInClass != null) {

			m_paref_id = SucceedsAttributeReferenceInClass.getAref_id();
			SucceedsAttributeReferenceInClass = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "112", "Succeeds");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Precedes(
			AttributeReferenceInClass_c[] targets) {
		return getOneO_REFOnR112Precedes(targets, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Precedes(
			AttributeReferenceInClass_c[] targets, ClassQueryInterface_c test) {
		AttributeReferenceInClass_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneO_REFOnR112Precedes(targets[i], test);
			}
		}

		return ret_val;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Precedes(
			AttributeReferenceInClass_c target) {
		return getOneO_REFOnR112Precedes(target, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Precedes(
			AttributeReferenceInClass_c target, boolean loadComponent) {
		return getOneO_REFOnR112Precedes(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Precedes(
			AttributeReferenceInClass_c target, ClassQueryInterface_c test) {
		if (target != null) {
			return getOneO_REFOnR112Precedes(target.getModelRoot(), target,
					test);
		}
		return null;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Precedes(
			ModelRoot modelRoot, AttributeReferenceInClass_c target,
			ClassQueryInterface_c test) {
		return getOneO_REFOnR112Precedes(modelRoot, target, test, true);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Precedes(
			ModelRoot modelRoot, AttributeReferenceInClass_c target,
			ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneO_REFOnR112Precedes(modelRoot, target, test);
	}
	private static AttributeReferenceInClass_c find_getOneO_REFOnR112Precedes(
			ModelRoot modelRoot, AttributeReferenceInClass_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) target.backPointer_PrecedesAttributeReferenceInClassPrecedes_R112;
			if (source != null && (test == null || test.evaluate(source))) {
				return source;
			}
		}
		// not found
		return null;
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Precedes(
			AttributeReferenceInClass_c[] targets) {
		return getManyO_REFsOnR112Precedes(targets, null);
	}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Precedes(
			AttributeReferenceInClass_c[] targets, boolean loadComponent) {
		return getManyO_REFsOnR112Precedes(targets, null, loadComponent);
	}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Precedes(
			AttributeReferenceInClass_c[] targets, ClassQueryInterface_c test) {
		return getManyO_REFsOnR112Precedes(targets, test, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Precedes(
			AttributeReferenceInClass_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new AttributeReferenceInClass_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			AttributeReferenceInClass_c source = (AttributeReferenceInClass_c) targets[i].backPointer_PrecedesAttributeReferenceInClassPrecedes_R112;
			if (source != null && (test == null || test.evaluate(source))) {
				matches.add(source);
			}
		}
		if (matches.size() > 0) {
			AttributeReferenceInClass_c[] ret_set = new AttributeReferenceInClass_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new AttributeReferenceInClass_c[0];
		}
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Precedes(
			AttributeReferenceInClass_c target) {
		if (target != null) {
			AttributeReferenceInClass_c[] targetArray = new AttributeReferenceInClass_c[1];
			targetArray[0] = target;
			return getManyO_REFsOnR112Precedes(targetArray);
		} else {
			AttributeReferenceInClass_c[] result = new AttributeReferenceInClass_c[0];
			return result;
		}
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Precedes(
			AttributeReferenceInClass_c target, boolean loadComponent) {
		if (target != null) {
			AttributeReferenceInClass_c[] targetArray = new AttributeReferenceInClass_c[1];
			targetArray[0] = target;
			return getManyO_REFsOnR112Precedes(targetArray, loadComponent);
		} else {
			AttributeReferenceInClass_c[] result = new AttributeReferenceInClass_c[0];
			return result;
		}
	}

	// declare associations referring to this class

	// referred to navigation

	AttributeReferenceInClass_c backPointer_PrecedesAttributeReferenceInClassPrecedes_R112;

	public void setAttributeReferenceInClassOrderInChildListR112(
			AttributeReferenceInClass_c target, int index) {
		unrelateAcrossR112FromPrecedes(target);
		AttributeReferenceInClass_c[] elements = AttributeReferenceInClass_c
				.getManyO_REFsOnR112Precedes(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR112FromPrecedes((AttributeReferenceInClass_c) elements[i]);
			}
			count++;
		}
		relateAcrossR112ToPrecedes(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR112ToPrecedes((AttributeReferenceInClass_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR112ToPrecedes(AttributeReferenceInClass_c target) {
		if (target != null) {
			target.relateAcrossR112ToSucceeds(this, true);
		}
	}

	public void relateAcrossR112ToPrecedes(AttributeReferenceInClass_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR112ToSucceeds(this, notifyChanges);
		}
	}

	public void setBackPointerR112ToPrecedes(AttributeReferenceInClass_c target) {
		backPointer_PrecedesAttributeReferenceInClassPrecedes_R112 = target;
	}

	public void unrelateAcrossR112FromPrecedes(
			AttributeReferenceInClass_c target) {
		if (target != null) {
			target.unrelateAcrossR112FromSucceeds(this, true);
		}
	}

	public void unrelateAcrossR112FromPrecedes(
			AttributeReferenceInClass_c target, boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR112FromSucceeds(this, notifyChanges);
		}
	}

	public void clearBackPointerR112ToPrecedes(
			AttributeReferenceInClass_c target) {
		if (target == backPointer_PrecedesAttributeReferenceInClassPrecedes_R112) {
			backPointer_PrecedesAttributeReferenceInClassPrecedes_R112 = null;
		}
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Succeeds(
			AttributeReferenceInClass_c[] targets) {
		return getOneO_REFOnR112Succeeds(targets, null);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Succeeds(
			AttributeReferenceInClass_c[] targets, ClassQueryInterface_c test) {
		return getOneO_REFOnR112Succeeds(targets, test, true);
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Succeeds(
			AttributeReferenceInClass_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		AttributeReferenceInClass_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					AttributeReferenceInClass_c candidate_val = getOneO_REFOnR112Succeeds(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneO_REFOnR112Succeeds(targets[i],
							loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static AttributeReferenceInClass_c getOneO_REFOnR112Succeeds(
			AttributeReferenceInClass_c target) {
		return getOneO_REFOnR112Succeeds(target, true);
	}
	public static AttributeReferenceInClass_c getOneO_REFOnR112Succeeds(
			AttributeReferenceInClass_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.SucceedsAttributeReferenceInClass;
		} else {
			return null;
		}
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Succeeds(
			AttributeReferenceInClass_c[] targets, ClassQueryInterface_c test) {
		return getManyO_REFsOnR112Succeeds(targets, test, true);
	}

	public static AttributeReferenceInClass_c [] getManyO_REFsOnR112Succeeds(AttributeReferenceInClass_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new AttributeReferenceInClass_c[0];
  
  
  LinkedHashSet<AttributeReferenceInClass_c> elementsSet = new LinkedHashSet<AttributeReferenceInClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].SucceedsAttributeReferenceInClass == null)
	  targets[i].loadProxy();
    AttributeReferenceInClass_c associate = targets[i].SucceedsAttributeReferenceInClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  AttributeReferenceInClass_c[] result = new AttributeReferenceInClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Succeeds(
			AttributeReferenceInClass_c[] targets) {
		return getManyO_REFsOnR112Succeeds(targets, null);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Succeeds(
			AttributeReferenceInClass_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			AttributeReferenceInClass_c[] targetArray = new AttributeReferenceInClass_c[1];
			targetArray[0] = target;
			return getManyO_REFsOnR112Succeeds(targetArray, test, loadComponent);
		} else {
			AttributeReferenceInClass_c[] result = new AttributeReferenceInClass_c[0];
			return result;
		}

	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Succeeds(
			AttributeReferenceInClass_c target, ClassQueryInterface_c test) {
		return getManyO_REFsOnR112Succeeds(target, null, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Succeeds(
			AttributeReferenceInClass_c target) {
		return getManyO_REFsOnR112Succeeds(target, null, true);
	}

	public static AttributeReferenceInClass_c[] getManyO_REFsOnR112Succeeds(
			AttributeReferenceInClass_c target, boolean loadComponent) {
		return getManyO_REFsOnR112Succeeds(target, null, loadComponent);
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R111
      ReferredToIdentifierAttribute_c relInst38765 = (ReferredToIdentifierAttribute_c) baseRoot.getInstanceList(ReferredToIdentifierAttribute_c.class).get(new Object[] {m_rattr_id,m_roir_id,new UUID(0, new Long(m_roid_id)),m_robj_id,m_rel_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38765 == null) {
      			relInst38765 = (ReferredToIdentifierAttribute_c) Ooaofooa.getDefaultInstance().getInstanceList(ReferredToIdentifierAttribute_c.class).get(new Object[] {m_rattr_id,m_roir_id,new UUID(0, new Long(m_roid_id)),m_robj_id,m_rel_id});
      		}
			if (relInst38765 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38765 = (ReferredToIdentifierAttribute_c) roots[i].getInstanceList(ReferredToIdentifierAttribute_c.class).get(new Object[] {m_rattr_id,m_roir_id,new UUID(0, new Long(m_roid_id)),m_robj_id,m_rel_id});
					if (relInst38765 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38765 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38765) && !isProxy())) {
	      relInst38765.relateAcrossR111To(this, notifyChanges);
	  }
	  }
	          
      ReferringClassInAssoc_c relInst38766 = (ReferringClassInAssoc_c) baseRoot.getInstanceList(ReferringClassInAssoc_c.class).get(new Object[] {m_oir_id,m_obj_id,m_rel_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38766 == null) {
      			relInst38766 = (ReferringClassInAssoc_c) Ooaofooa.getDefaultInstance().getInstanceList(ReferringClassInAssoc_c.class).get(new Object[] {m_oir_id,m_obj_id,m_rel_id});
      		}
			if (relInst38766 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38766 = (ReferringClassInAssoc_c) roots[i].getInstanceList(ReferringClassInAssoc_c.class).get(new Object[] {m_oir_id,m_obj_id,m_rel_id});
					if (relInst38766 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38766 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38766) && !isProxy())) {
	      relInst38766.relateAcrossR111To(this, notifyChanges);
	  }
	  }
	          

	if (IsResolvedByReferentialAttribute == null) {          
      // R108
      ReferentialAttribute_c relInst38767 = (ReferentialAttribute_c) baseRoot.getInstanceList(ReferentialAttribute_c.class).get(new Object[] {m_attr_id,m_obj_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38767 == null) {
      			relInst38767 = (ReferentialAttribute_c) Ooaofooa.getDefaultInstance().getInstanceList(ReferentialAttribute_c.class).get(new Object[] {m_attr_id,m_obj_id});
      		}
			if (relInst38767 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38767 = (ReferentialAttribute_c) roots[i].getInstanceList(ReferentialAttribute_c.class).get(new Object[] {m_attr_id,m_obj_id});
					if (relInst38767 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38767 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38767) && !isProxy())) {
	      relInst38767.relateAcrossR108To(this, notifyChanges);
	  }
	  }
	}
	          

	if (SucceedsAttributeReferenceInClass == null) {          
      // R112
	  instances = baseRoot.getInstanceList(AttributeReferenceInClass_c.class);
      AttributeReferenceInClass_c relInst38768 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           AttributeReferenceInClass_c source = (AttributeReferenceInClass_c)cursor.next() ;
           if (     source.getAref_id().equals(m_paref_id) 		){
  		relInst38768 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst38768 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38768) && !isProxy())) {
	      relInst38768.relateAcrossR112ToPrecedes(this, notifyChanges);
	  }
	  }
	}
	          
	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R111
		// O_RTIDA
		inst = RefersAcrossAssociationViaReferredToIdentifierAttribute;
		unrelateAcrossR111From(
				RefersAcrossAssociationViaReferredToIdentifierAttribute,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R_RGO
		inst = IsUsedToReferClassByReferringClassInAssoc;
		unrelateAcrossR111From(IsUsedToReferClassByReferringClassInAssoc,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R108
		// O_RATTR
		inst = IsResolvedByReferentialAttribute;
		unrelateAcrossR108From(IsResolvedByReferentialAttribute, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
		// R112
		// O_REF
		inst = SucceedsAttributeReferenceInClass;
		unrelateAcrossR112FromSucceeds(SucceedsAttributeReferenceInClass,
				notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(AttributeReferenceInClass_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final AttributeReferenceInClass_c inst = (AttributeReferenceInClass_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static AttributeReferenceInClass_c AttributeReferenceInClassInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		AttributeReferenceInClass_c result = findAttributeReferenceInClassInstance(
				modelRoot, test, loadComponent);
		if (result == null && loadComponent) {
			List pmcs = PersistenceManager.findAllComponents(modelRoot,
					AttributeReferenceInClass_c.class);
			for (int i = 0; i < pmcs.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) pmcs
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = findAttributeReferenceInClassInstance(
								modelRoot, test, loadComponent);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}
		if (result != null && loadComponent) {
			result.loadProxy();
		}
		return result;
	}
	private static AttributeReferenceInClass_c findAttributeReferenceInClassInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				AttributeReferenceInClass_c x = (AttributeReferenceInClass_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						return x;
				}
			}
		}
		return null;
	}
	public static AttributeReferenceInClass_c AttributeReferenceInClassInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return AttributeReferenceInClassInstance(modelRoot, test, true);
	}

	public static AttributeReferenceInClass_c AttributeReferenceInClassInstance(
			ModelRoot modelRoot) {
		return AttributeReferenceInClassInstance(modelRoot, null, true);
	}

	public static AttributeReferenceInClass_c[] AttributeReferenceInClassInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (loadComponent) {
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					AttributeReferenceInClass_c.class);
		}
		InstanceList instances = modelRoot
				.getInstanceList(AttributeReferenceInClass_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				AttributeReferenceInClass_c x = (AttributeReferenceInClass_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						matches.add(x);
				}
			}
			if (matches.size() > 0) {
				AttributeReferenceInClass_c[] ret_set = new AttributeReferenceInClass_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new AttributeReferenceInClass_c[0];
			}
		}
	}
	public static AttributeReferenceInClass_c[] AttributeReferenceInClassInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return AttributeReferenceInClassInstances(modelRoot, test, true);
	}
	public static AttributeReferenceInClass_c[] AttributeReferenceInClassInstances(
			ModelRoot modelRoot) {
		return AttributeReferenceInClassInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Attribute Reference in Class.dispose call: ";
		ReferringClassInAssoc_c testR111Inst = ReferringClassInAssoc_c
				.getOneR_RGOOnR111(this, false);

		if (testR111Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "111 ";
		}

		ReferredToIdentifierAttribute_c testR111InstOth = ReferredToIdentifierAttribute_c
				.getOneO_RTIDAOnR111(this, false);

		if (testR111InstOth != null) {
			delete_error = true;
			errorMsg = errorMsg + "111 ";
		}
		ReferentialAttribute_c testR108Inst = ReferentialAttribute_c
				.getOneO_RATTROnR108(this, false);

		if (testR108Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "108 ";
		}
		AttributeReferenceInClass_c testR112Inst = AttributeReferenceInClass_c
				.getOneO_REFOnR112Precedes(this, false);

		if (testR112Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "112 ";
		}
		testR112Inst = AttributeReferenceInClass_c.getOneO_REFOnR112Succeeds(
				this, false);

		if (testR112Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "112 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log.println(ILogger.DELETE,
						"Attribute Reference in Class", errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	/**
	 * Assigns IDs to instances of this class.
	 */
	private static IdAssigner idAssigner = new IdAssigner();

	/**
	 * See field.
	 */
	public IdAssigner getIdAssigner() {
		return idAssigner;
	}

	/**
	 * See field.
	 */
	public static IdAssigner getIdAssigner_() {
		return idAssigner;
	}
	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("rattr_id")) {
			return true;
		}
		if (attributeName.equals("oir_id")) {
			return true;
		}
		if (attributeName.equals("roir_id")) {
			return true;
		}
		if (attributeName.equals("attr_id")) {
			return true;
		}
		if (attributeName.equals("aref_id")) {
			return true;
		}
		if (attributeName.equals("paref_id")) {
			return true;
		}
		if (attributeName.equals("robj_id")) {
			return true;
		}
		if (attributeName.equals("obj_id")) {
			return true;
		}
		if (attributeName.equals("rel_id")) {
			return true;
		}
		return false;
	}
	public String getCompUniqueID() {
		UUID tempID = null;
		long longID = 0L;
		StringBuffer result = new StringBuffer();

		longID = getRoid_id();

		if (longID == 0L)
			longID = getRoid_idCachedValue();
		result.append(longID + "_");
		tempID = getRattr_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getRattr_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		tempID = getOir_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getOir_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		tempID = getRoir_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getRoir_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		tempID = getRobj_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getRobj_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		tempID = getObj_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getObj_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		tempID = getRel_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getRel_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		return result.toString();
	}
	// declare attribute accessors
	public int getRoid_id() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getOid_id();
		}
		return 0;
	}

	public int getRoid_idCachedValue() {
		return m_roid_id;
	}

	public void setRoid_id(int newValue) {
		if (m_roid_id == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Roid_id", new Integer(m_roid_id), new Integer(newValue), true);

		m_roid_id = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getRattr_idLongBased() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getAttr_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getRattr_id() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getAttr_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getRattr_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_rattr_id))
			return m_rattr_id;
		else
			return getRattr_id();
	}

	public void setRattr_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_rattr_id)) {
				return;
			}
		} else if (m_rattr_id != null) {
			if (m_rattr_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Rattr_id", m_rattr_id, newValue, true);
		m_rattr_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getOir_idLongBased() {
		if (IsUsedToReferClassByReferringClassInAssoc != null) {
			return IsUsedToReferClassByReferringClassInAssoc
					.getOir_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getOir_id() {
		if (IsUsedToReferClassByReferringClassInAssoc != null) {
			return IsUsedToReferClassByReferringClassInAssoc.getOir_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getOir_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_oir_id))
			return m_oir_id;
		else
			return getOir_id();
	}

	public void setOir_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_oir_id)) {
				return;
			}
		} else if (m_oir_id != null) {
			if (m_oir_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Oir_id", m_oir_id, newValue, true);
		m_oir_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getRoir_idLongBased() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getOir_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getRoir_id() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getOir_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getRoir_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_roir_id))
			return m_roir_id;
		else
			return getRoir_id();
	}

	public void setRoir_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_roir_id)) {
				return;
			}
		} else if (m_roir_id != null) {
			if (m_roir_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Roir_id", m_roir_id, newValue, true);
		m_roir_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getAttr_idLongBased() {
		if (IsResolvedByReferentialAttribute != null) {
			return IsResolvedByReferentialAttribute.getAttr_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getAttr_id() {
		if (IsResolvedByReferentialAttribute != null) {
			return IsResolvedByReferentialAttribute.getAttr_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getAttr_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_attr_id))
			return m_attr_id;
		else
			return getAttr_id();
	}

	public void setAttr_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_attr_id)) {
				return;
			}
		} else if (m_attr_id != null) {
			if (m_attr_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Attr_id", m_attr_id, newValue, true);
		m_attr_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getAref_idLongBased() {
		if (m_aref_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_aref_id)) {
			return 0xfffffff & m_aref_id.getLeastSignificantBits();
		}
		return m_aref_idLongBased;
	}
	public java.util.UUID getAref_id() {
		return m_aref_id;
	}

	public void setAref_id(java.util.UUID newValue) {
		m_aref_id = IdAssigner.preprocessUUID(newValue);
	}
	public long getParef_idLongBased() {
		if (SucceedsAttributeReferenceInClass != null) {
			return SucceedsAttributeReferenceInClass.getAref_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getParef_id() {
		if (SucceedsAttributeReferenceInClass != null) {
			return SucceedsAttributeReferenceInClass.getAref_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getParef_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_paref_id))
			return m_paref_id;
		else
			return getParef_id();
	}

	public void setParef_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_paref_id)) {
				return;
			}
		} else if (m_paref_id != null) {
			if (m_paref_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Paref_id", m_paref_id, newValue, true);
		m_paref_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public boolean getIs_cstrd() {
		return m_is_cstrd;
	}

	public void setIs_cstrd(boolean newValue) {
		if (m_is_cstrd == newValue) {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Is_cstrd", new Boolean(m_is_cstrd), new Boolean(newValue),
				true);

		m_is_cstrd = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getDescrip() {
		return m_descrip;
	}

	public void setDescrip(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_descrip)) {
				return;
			}
		} else if (m_descrip != null) {
			if (m_descrip.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Descrip", m_descrip, newValue, true);
		m_descrip = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getRobj_name() {
		ModelClass_c base_class = ModelClass_c
				.getOneO_OBJOnR201(ClassInAssociation_c.getOneR_OIROnR203(ReferredToClassInAssoc_c
						.getOneR_RTOOnR110(ReferredToIdentifierAttribute_c
								.getOneO_RTIDAOnR111(this))));

		if (base_class != null) {
			m_robj_name = base_class.getName();
			return m_robj_name;
		} else {
			return m_robj_name;
		}
	}

	public String getRattr_name() {
		Attribute_c base_attribute = Attribute_c
				.getOneO_ATTROnR105(ClassIdentifierAttribute_c
						.getOneO_OIDAOnR110(ReferredToIdentifierAttribute_c
								.getOneO_RTIDAOnR111(this)));
		if (base_attribute != null) {
			m_rattr_name = base_attribute.getName();
			return m_rattr_name;
		} else {
			return m_rattr_name;
		}
	}

	public String getRel_name() {
		Association_c base_association = Association_c
				.getOneR_RELOnR201(ClassInAssociation_c.getOneR_OIROnR203(ReferredToClassInAssoc_c
						.getOneR_RTOOnR110(ReferredToIdentifierAttribute_c
								.getOneO_RTIDAOnR111(this))));
		if (base_association != null) {
			String txt_phrase = Get_referential_phrase();
			if (txt_phrase.equals("")) {
				m_rel_name = base_association.Get_name();
			} else {
				m_rel_name = base_association.Get_name() + ".'" + txt_phrase
						+ "'";
			}
			return m_rel_name;
		} else {
			return m_rel_name;
		}
	}

	public long getRobj_idLongBased() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getObj_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getRobj_id() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getObj_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getRobj_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_robj_id))
			return m_robj_id;
		else
			return getRobj_id();
	}

	public void setRobj_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_robj_id)) {
				return;
			}
		} else if (m_robj_id != null) {
			if (m_robj_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Robj_id", m_robj_id, newValue, true);
		m_robj_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getObj_idLongBased() {
		if (IsResolvedByReferentialAttribute != null) {
			return IsResolvedByReferentialAttribute.getObj_idLongBased();
		}
		if (IsUsedToReferClassByReferringClassInAssoc != null) {
			return IsUsedToReferClassByReferringClassInAssoc
					.getObj_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getObj_id() {
		if (IsResolvedByReferentialAttribute != null) {
			return IsResolvedByReferentialAttribute.getObj_id();
		}
		if (IsUsedToReferClassByReferringClassInAssoc != null) {
			return IsUsedToReferClassByReferringClassInAssoc.getObj_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getObj_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_obj_id))
			return m_obj_id;
		else
			return getObj_id();
	}

	public long getRel_idLongBased() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getRel_idLongBased();
		}
		if (IsUsedToReferClassByReferringClassInAssoc != null) {
			return IsUsedToReferClassByReferringClassInAssoc
					.getRel_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getRel_id() {
		if (RefersAcrossAssociationViaReferredToIdentifierAttribute != null) {
			return RefersAcrossAssociationViaReferredToIdentifierAttribute
					.getRel_id();
		}
		if (IsUsedToReferClassByReferringClassInAssoc != null) {
			return IsUsedToReferClassByReferringClassInAssoc.getRel_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getRel_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_rel_id))
			return m_rel_id;
		else
			return getRel_id();
	}

	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Attribute Reference in Class", //$NON-NLS-1$
						" Operation entered: Attribute Reference in Class::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		AttributeReferenceInClass_c[] objs = AttributeReferenceInClass_c
				.AttributeReferenceInClassInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Attribute Reference in Class", //$NON-NLS-1$
						" Operation entered: Attribute Reference in Class::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class AttributeReferenceInClass_c_test38770_c
				implements
					ClassQueryInterface_c {
			AttributeReferenceInClass_c_test38770_c(int p38771,
					java.util.UUID p38772, java.util.UUID p38773,
					java.util.UUID p38774, java.util.UUID p38775,
					java.util.UUID p38776, java.util.UUID p38777) {
				m_p38771 = p38771;
				m_p38772 = p38772;
				m_p38773 = p38773;
				m_p38774 = p38774;
				m_p38775 = p38775;
				m_p38776 = p38776;
				m_p38777 = p38777;
			}
			private int m_p38771;
			private java.util.UUID m_p38772;
			private java.util.UUID m_p38773;
			private java.util.UUID m_p38774;
			private java.util.UUID m_p38775;
			private java.util.UUID m_p38776;
			private java.util.UUID m_p38777;
			public boolean evaluate(Object candidate) {
				AttributeReferenceInClass_c selected = (AttributeReferenceInClass_c) candidate;
				boolean retval = false;
				retval = (selected.getRoid_id() == (m_p38771))
						& (selected.getRattr_id().equals(m_p38772))
						& (selected.getOir_id().equals(m_p38773))
						& (selected.getRoir_id().equals(m_p38774))
						& (selected.getRobj_id().equals(m_p38775))
						& (selected.getObj_id().equals(m_p38776))
						& (selected.getRel_id().equals(m_p38777));
				return retval;
			}
		}

		AttributeReferenceInClass_c[] objs38769 = AttributeReferenceInClass_c
				.AttributeReferenceInClassInstances(modelRoot,
						new AttributeReferenceInClass_c_test38770_c(
								getRoid_id(), getRattr_id(), getOir_id(),
								getRoir_id(), getRobj_id(), getObj_id(),
								getRel_id()));

		if (((objs38769.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Attribute Reference in Class", //$NON-NLS-1$
								"Consistency: Object: Attribute Reference in Class: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs38769.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Attribute Reference in Class: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs38769.length), e);
			}
			retval = false;

		}

		if (((objs38769.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Attribute Reference in Class", //$NON-NLS-1$
								"Consistency: Object: Attribute Reference in Class: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs38769.length)
										+ " ROid_ID: " + Integer.toString(getRoid_id()) + " RAttr_ID: " + "Not Printable" + " OIR_ID: " + "Not Printable" + " ROIR_ID: " + "Not Printable" + " RObj_ID: " + "Not Printable" + " Obj_ID: " + "Not Printable" + " Rel_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Attribute Reference in Class: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs38769.length)
										+ " ROid_ID: " + Integer.toString(getRoid_id()) + " RAttr_ID: " + "Not Printable" + " OIR_ID: " + "Not Printable" + " ROIR_ID: " + "Not Printable" + " RObj_ID: " + "Not Printable" + " Obj_ID: " + "Not Printable" + " Rel_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		class AttributeReferenceInClass_c_test38779_c
				implements
					ClassQueryInterface_c {
			AttributeReferenceInClass_c_test38779_c(java.util.UUID p38780) {
				m_p38780 = p38780;
			}
			private java.util.UUID m_p38780;
			public boolean evaluate(Object candidate) {
				AttributeReferenceInClass_c selected = (AttributeReferenceInClass_c) candidate;
				boolean retval = false;
				retval = (selected.getAref_id().equals(m_p38780));
				return retval;
			}
		}

		AttributeReferenceInClass_c[] objs38778 = AttributeReferenceInClass_c
				.AttributeReferenceInClassInstances(modelRoot,
						new AttributeReferenceInClass_c_test38779_c(
								getAref_id()));

		if (((objs38778.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Attribute Reference in Class", //$NON-NLS-1$
								"Consistency: Object: Attribute Reference in Class: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs38778.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Attribute Reference in Class: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs38778.length), e);
			}
			retval = false;

		}

		if (((objs38778.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Attribute Reference in Class", //$NON-NLS-1$
								"Consistency: Object: Attribute Reference in Class: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs38778.length)
										+ " ARef_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Attribute Reference in Class: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs38778.length)
										+ " ARef_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Attribute Reference in Class is a link class in association: rel.Numb = 111
		// Other side
		// Attribute Reference in Class is a referring class in association: rel.Numb = 108
		// The participating class is: Referential Attribute
		class ReferentialAttribute_c_test38783_c
				implements
					ClassQueryInterface_c {
			ReferentialAttribute_c_test38783_c(java.util.UUID p38784,
					java.util.UUID p38785) {
				m_p38784 = p38784;
				m_p38785 = p38785;
			}
			private java.util.UUID m_p38784;
			private java.util.UUID m_p38785;
			public boolean evaluate(Object candidate) {
				ReferentialAttribute_c selected = (ReferentialAttribute_c) candidate;
				boolean retval = false;
				retval = (selected.getAttr_id().equals(m_p38784))
						& (selected.getObj_id().equals(m_p38785));
				return retval;
			}
		}

		ReferentialAttribute_c[] objs38782 = ReferentialAttribute_c
				.ReferentialAttributeInstances(modelRoot,
						new ReferentialAttribute_c_test38783_c(getAttr_id(),
								getObj_id()));

		// The participant is unconditional
		// The multiplicity of the participant is one
		if (((objs38782.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Attribute Reference in Class", //$NON-NLS-1$
								"Consistency: Object: Attribute Reference in Class: Association: 108: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs38782.length)
										+ " Attr_ID: " + "Not Printable" + " Obj_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Attribute Reference in Class: Association: 108: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs38782.length)
										+ " Attr_ID: " + "Not Printable" + " Obj_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Attribute Reference in Class is a referring class in association: rel.Numb = 112
		// The participating class is: Attribute Reference in Class
		class AttributeReferenceInClass_c_test38787_c
				implements
					ClassQueryInterface_c {
			AttributeReferenceInClass_c_test38787_c(java.util.UUID p38788) {
				m_p38788 = p38788;
			}
			private java.util.UUID m_p38788;
			public boolean evaluate(Object candidate) {
				AttributeReferenceInClass_c selected = (AttributeReferenceInClass_c) candidate;
				boolean retval = false;
				retval = (selected.getAref_id().equals(m_p38788));
				return retval;
			}
		}

		AttributeReferenceInClass_c[] objs38786 = AttributeReferenceInClass_c
				.AttributeReferenceInClassInstances(modelRoot,
						new AttributeReferenceInClass_c_test38787_c(
								getParef_id()));

		if (((objs38786.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Attribute Reference in Class", //$NON-NLS-1$
								"Consistency: Object: Attribute Reference in Class: Association: 112: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs38786.length)
										+ " PARef_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Attribute Reference in Class: Association: 112: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs38786.length)
										+ " PARef_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Attribute Reference in Class is a participating class in association: rel.Numb = 112
		// Object: Attribute Reference in Class
		class AttributeReferenceInClass_c_test38790_c
				implements
					ClassQueryInterface_c {
			AttributeReferenceInClass_c_test38790_c(java.util.UUID p38791) {
				m_p38791 = p38791;
			}
			private java.util.UUID m_p38791;
			public boolean evaluate(Object candidate) {
				AttributeReferenceInClass_c selected = (AttributeReferenceInClass_c) candidate;
				boolean retval = false;
				retval = (selected.getParef_id().equals(m_p38791));
				return retval;
			}
		}

		AttributeReferenceInClass_c[] objs38789 = AttributeReferenceInClass_c
				.AttributeReferenceInClassInstances(modelRoot,
						new AttributeReferenceInClass_c_test38790_c(
								getAref_id()));

		if (((objs38789.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(
								ILogger.CONSISTENCY,
								"Attribute Reference in Class", //$NON-NLS-1$
								"Consistency: Object: Attribute Reference in Class: Association: 112: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs38789.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Attribute Reference in Class: Association: 112: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs38789.length), e);
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public String Get_name() {
		Ooaofooa.log.println(ILogger.OPERATION, "Attribute Reference in Class",
				" Operation entered: AttributeReferenceInClass::Get_name");
		final ModelRoot modelRoot = getModelRoot();
		Association_c v_rel = Association_c
				.getOneR_RELOnR201(ClassInAssociation_c
						.getOneR_OIROnR203(ReferringClassInAssoc_c
								.getOneR_RGOOnR111(this)));

		if ((v_rel == null)) {

			return getRobj_name() + "." + getRattr_name() + "(" + getRel_name()
					+ ")";

		}

		else {

			Attribute_c v_attr = Attribute_c
					.getOneO_ATTROnR105(ClassIdentifierAttribute_c
							.getOneO_OIDAOnR110(ReferredToIdentifierAttribute_c
									.getOneO_RTIDAOnR111(this)));

			if (((v_attr != null))) {

				ModelClass_c v_obj = ModelClass_c.getOneO_OBJOnR102(v_attr);

				String v_txt_phrase = Get_referential_phrase();

				if ((v_attr != null) && (v_obj != null)) {

					if ((v_txt_phrase.equals(""))) {

						return v_obj.getName() + "." + v_attr.getName() + "("
								+ v_rel.Get_name() + ")";

					}

					else {

						return v_obj.getName() + "." + v_attr.getName() + "("
								+ v_rel.Get_name() + "." + Util_c.Gettic()
								+ v_txt_phrase + Util_c.Gettic() + ")";

					}

				}

				else {

					return getRobj_name() + "." + getRattr_name() + "("
							+ getRel_name() + ")";

				}

			}

			else {

				return getRobj_name() + "." + getRattr_name() + "("
						+ getRel_name() + ")";

			}

		}

	} // End get_name
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "Attribute Reference in Class",
				" Operation entered: AttributeReferenceInClass::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		AttributeReferenceInClass_c v_next_ref = AttributeReferenceInClass_c
				.getOneO_REFOnR112Precedes(this);

		AttributeReferenceInClass_c v_prior_ref = AttributeReferenceInClass_c
				.getOneO_REFOnR112Succeeds(this);

		if (((v_next_ref != null) && (v_prior_ref != null))) {

			this.unrelateAcrossR112FromPrecedes(v_next_ref);

			if (v_prior_ref != null) {
				v_prior_ref.unrelateAcrossR112FromPrecedes(this);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if (v_prior_ref != null) {
				v_prior_ref.relateAcrossR112ToPrecedes(v_next_ref);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

		}

		else {

			if (((v_prior_ref != null) && (v_next_ref == null))) {

				if (v_prior_ref != null) {
					v_prior_ref.unrelateAcrossR112FromPrecedes(this);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Unrelate attempted on null left hand instance.",
									t);
				}

			}

			else {

				this.unrelateAcrossR112FromPrecedes(v_next_ref);

			}

		}

		ReferentialAttribute_c v_owningReferential = ReferentialAttribute_c
				.getOneO_RATTROnR108(this);

		if ((v_owningReferential != null)) {

			this.unrelateAcrossR108From(v_owningReferential);

		}

		ReferredToIdentifierAttribute_c v_rtida = ReferredToIdentifierAttribute_c
				.getOneO_RTIDAOnR111(this);

		ReferringClassInAssoc_c v_rgo = ReferringClassInAssoc_c
				.getOneR_RGOOnR111(this);

		ReferredToClassInAssoc_c v_rto = ReferredToClassInAssoc_c
				.getOneR_RTOOnR110(v_rtida);

		unrelateAcrossR111From(v_rtida);
		unrelateAcrossR111From(v_rgo);

		if (delete()) {
			Ooaofooa.getDefaultInstance().fireModelElementDeleted(
					new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE,
							this));
		}

	} // End dispose
	public String Get_text(final boolean p_Includetextphrase) {
		Ooaofooa.log.println(ILogger.OPERATION, "Attribute Reference in Class",
				" Operation entered: AttributeReferenceInClass::Get_text");
		final ModelRoot modelRoot = getModelRoot();
		String v_result = "R???";

		Association_c v_rel = Association_c
				.getOneR_RELOnR201(ClassInAssociation_c
						.getOneR_OIROnR203(ReferringClassInAssoc_c
								.getOneR_RGOOnR111(this)));

		if (((v_rel != null))) {

			String v_txt_phrase = Get_referential_phrase();

			if ((v_txt_phrase.equals("") || !p_Includetextphrase)) {

				v_result = v_rel.Get_name();

			}

			else {

				v_result = v_rel.Get_name() + "." + Util_c.Gettic()
						+ v_txt_phrase + Util_c.Gettic();

			}

		}

		else {

			v_result = getRel_name();

		}

		if ((getIs_cstrd())) {

			v_result = v_result + "c";

		}

		return v_result;

	} // End get_text
	public void Migraterefattrordispose() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Attribute Reference in Class",
						" Operation entered: AttributeReferenceInClass::Migraterefattrordispose");
		final ModelRoot modelRoot = getModelRoot();
		AttributeReferenceInClass_c[] v_siblings = AttributeReferenceInClass_c
				.getManyO_REFsOnR108(ReferentialAttribute_c
						.getManyO_RATTRsOnR108(this));

		if (((v_siblings.length) == 1)) {

			ReferentialAttribute_c v_rattr = ReferentialAttribute_c
					.getOneO_RATTROnR108(this);

			ClassIdentifierAttribute_c v_idattr = ClassIdentifierAttribute_c
					.getOneO_OIDAOnR105(Attribute_c
							.getManyO_ATTRsOnR106(v_rattr));

			if (((v_idattr == null))) {

				Attribute_c v_attr = Attribute_c.getOneO_ATTROnR106(v_rattr);

				if (v_attr != null) {
					v_attr.Dispose();
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

			}

			else {

				ReferredToIdentifierAttribute_c v_rattr_ref = ReferredToIdentifierAttribute_c
						.getOneO_RTIDAOnR110(v_idattr);

				if (((v_rattr_ref != null))) {

					if (v_rattr != null) {
						v_rattr.Migratetobase();
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

				else {

					Attribute_c v_attr = Attribute_c
							.getOneO_ATTROnR106(v_rattr);

					if (v_attr != null) {
						v_attr.Dispose();
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin
								.logError(
										"Attempted to call an operation on a null instance.",
										t);
					}

				}

			}

		}

		else {

			Dispose();

		}

	} // End migrateRefAttrOrDispose
	public String Get_referential_phrase() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Attribute Reference in Class",
						" Operation entered: AttributeReferenceInClass::Get_referential_phrase");
		final ModelRoot modelRoot = getModelRoot();
		ReferredToClassInAssoc_c v_rto = ReferredToClassInAssoc_c
				.getOneR_RTOOnR110(ReferredToIdentifierAttribute_c
						.getOneO_RTIDAOnR111(this));

		ClassAsAssociatedOneSide_c v_cone = ClassAsAssociatedOneSide_c
				.getOneR_AONEOnR204(v_rto);

		ClassAsAssociatedOtherSide_c v_coth = ClassAsAssociatedOtherSide_c
				.getOneR_AOTHOnR204(v_rto);

		ClassAsSimpleParticipant_c v_casp = ClassAsSimpleParticipant_c
				.getOneR_PARTOnR204(v_rto);

		String v_txt_phrase = "";

		if (((v_cone != null))) {

			v_txt_phrase = v_cone.getTxt_phrs();

		}

		if (((v_coth != null))) {

			v_txt_phrase = v_coth.getTxt_phrs();

		}

		if (((v_casp != null))) {

			v_txt_phrase = v_casp.getTxt_phrs();

		}

		return v_txt_phrase;

	} // End get_referential_phrase

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		return null;
	}
} // end Attribute Reference in Class
