      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ExternalEntity_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_EXTERNAL_ENTITY extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ExternalEntity_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ExternalEntity_c(ModelRoot modelRoot,
       java.util.UUID         p_m_ee_id,
       String       p_m_name,
       String       p_m_descrip,
       String       p_m_key_lett,
       java.util.UUID         p_m_dom_id,
       String       p_m_realized_class_path,
       String       p_m_label,
       boolean      p_m_isrealized)
  {
    super(modelRoot);
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       m_key_lett = p_m_key_lett;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
       m_realized_class_path = p_m_realized_class_path;
       m_label = p_m_label;
       m_isrealized = p_m_isrealized;
        
    setUniqueId(m_ee_id);
    Object [] key = {m_ee_id};
    addInstanceToMap(key);
  }
  static public ExternalEntity_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_ee_id,
       String       p_m_name,
       String       p_m_descrip,
       String       p_m_key_lett,
       java.util.UUID         p_m_dom_id,
       String       p_m_realized_class_path,
       String       p_m_label,
       boolean      p_m_isrealized, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ExternalEntity_c.class);
      ExternalEntity_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_ee_id};
          new_inst = (ExternalEntity_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       new_inst.m_key_lett = p_m_key_lett;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
       new_inst.m_realized_class_path = p_m_realized_class_path;
       new_inst.m_label = p_m_label;
       new_inst.m_isrealized = p_m_isrealized;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ExternalEntity_c(modelRoot,
p_m_ee_id,
p_m_name,
p_m_descrip,
p_m_key_lett,
p_m_dom_id,
p_m_realized_class_path,
p_m_label,
p_m_isrealized
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ExternalEntity_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_ee_id,
       String       p_m_name,
       String       p_m_descrip,
       String       p_m_key_lett,
       java.util.UUID         p_m_dom_id,
       String       p_m_realized_class_path,
       String       p_m_label,
       boolean      p_m_isrealized){
    InstanceList instances = modelRoot.getInstanceList(ExternalEntity_c.class);
    ExternalEntity_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_ee_id
            };
        source = (ExternalEntity_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       source.m_key_lett = p_m_key_lett;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
       source.m_realized_class_path = p_m_realized_class_path;
       source.m_label = p_m_label;
       source.m_isrealized = p_m_isrealized;
        
           return source ;
        }
      }
      // there is no instance matching the id
    ExternalEntity_c new_inst = new ExternalEntity_c(modelRoot,
p_m_ee_id,
p_m_name,
p_m_descrip,
p_m_key_lett,
p_m_dom_id,
p_m_realized_class_path,
p_m_label,
p_m_isrealized
);
    return new_inst;
  }
  public ExternalEntity_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_name = "";   
     m_descrip = "";   
     m_key_lett = "";   
     m_dom_id = IdAssigner.NULL_UUID;   
     m_ee_id = idAssigner.createUUID();
     m_realized_class_path = "";   
     m_label = "";   
    setUniqueId(m_ee_id);
    Object [] key = {m_ee_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_ee_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_ee_id !=  p_newKey ){
	
		m_ee_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof ExternalEntity_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ExternalEntity_c)) {
           return false;
       }
       
       ExternalEntity_c me = (ExternalEntity_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getEe_id()) || IdAssigner.NULL_UUID.equals(((ExternalEntity_c)elem).getEe_id())) && this != elem)) {
      	return false;
      }
      if (!getEe_id().equals(((ExternalEntity_c)elem).getEe_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ExternalEntity_c)) {
           return false;
       }
       
       ExternalEntity_c me = (ExternalEntity_c)elem;
      if (!getEe_idCachedValue().equals(((ExternalEntity_c)elem).getEe_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private String       m_name ;
  private String       m_descrip ;
  private String       m_key_lett ;
  private java.util.UUID         m_dom_id ;
  private java.util.UUID         m_ee_id ;
  private String       m_realized_class_path ;
  private String       m_label ;
  private boolean      m_isrealized ;
      
// declare association references from this class
  
  
    
// referring navigation

PackageableElement_c IsSupertypePackageableElement ;
public void relateAcrossR8001To(PackageableElement_c target)
{
	relateAcrossR8001To(target, true);
}
public void relateAcrossR8001To(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypePackageableElement) return;  // already related

    if ( IsSupertypePackageableElement != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypePackageableElement != null) {
    
        IsSupertypePackageableElement.clearBackPointerR8001To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ExternalEntity_c.relateAcrossR8001To(PackageableElement_c target)", 
			"Relate performed across R8001 from External Entity to Packageable Element without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypePackageableElement = target ;
        m_ee_id = target.getElement_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8001To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8001From(PackageableElement_c target)
{
	unrelateAcrossR8001From(target, true);
}
public void unrelateAcrossR8001From(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypePackageableElement == null) return;  // already unrelated
	
	if (target != IsSupertypePackageableElement) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8001", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8001To(this);
    }
    

      if(IsSupertypePackageableElement != null) {
      
        m_ee_id = IsSupertypePackageableElement.getElement_id();
        IsSupertypePackageableElement = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ExternalEntity_c getOneS_EEOnR8001(PackageableElement_c [] targets)
{
    return getOneS_EEOnR8001(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_EEOnR8001(targets[i], test);
        }
    }

    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR8001(PackageableElement_c target)
{
  return getOneS_EEOnR8001(target, null);
}

public static ExternalEntity_c getOneS_EEOnR8001(PackageableElement_c target, boolean loadComponent)
{
    return getOneS_EEOnR8001(target.getModelRoot(), target, null, loadComponent);
}

public static ExternalEntity_c getOneS_EEOnR8001(PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_EEOnR8001(target.getModelRoot(), target, test);
  }
  return null;
}

public static ExternalEntity_c getOneS_EEOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
	return getOneS_EEOnR8001(modelRoot, target, test, true);
}

public static ExternalEntity_c getOneS_EEOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_EEOnR8001(modelRoot,target,test);
}
private static ExternalEntity_c find_getOneS_EEOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    ExternalEntity_c source = (ExternalEntity_c)target.backPointer_IsSubtypeExternalEntityIsSubtype_R8001;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static ExternalEntity_c [] getManyS_EEsOnR8001(PackageableElement_c [] targets)
{
  return getManyS_EEsOnR8001(targets, null);
}
public static ExternalEntity_c [] getManyS_EEsOnR8001(PackageableElement_c [] targets, boolean loadComponent)
{
  return getManyS_EEsOnR8001(targets, null, loadComponent);
}
public static ExternalEntity_c [] getManyS_EEsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_EEsOnR8001(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ExternalEntity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ExternalEntity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      ExternalEntity_c source = (ExternalEntity_c)targets[i].backPointer_IsSubtypeExternalEntityIsSubtype_R8001;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	ExternalEntity_c[] ret_set = new ExternalEntity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ExternalEntity_c[0];
  }
  }

public static ExternalEntity_c [] getManyS_EEsOnR8001(PackageableElement_c target)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR8001(targetArray);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
  return result ;
}
}

public static ExternalEntity_c [] getManyS_EEsOnR8001(PackageableElement_c target, boolean loadComponent)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR8001(targetArray, loadComponent);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
  return result ;
}
}



  
    
// referring navigation

Domain_c InteractsWithDomain ;
public void relateAcrossR8To(Domain_c target)
{
	relateAcrossR8To(target, true);
}
public void relateAcrossR8To(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == InteractsWithDomain) return;  // already related

    if ( InteractsWithDomain != target ) {
    
    Object oldKey = getInstanceKey();

    if (InteractsWithDomain != null) {
        UmlProblem.removeXtUMLProblem(this, InteractsWithDomain);
    
        InteractsWithDomain.clearBackPointerR8To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ExternalEntity_c.relateAcrossR8To(Domain_c target)", 
			"Relate performed across R8 from External Entity to Domain without unrelate of prior instance.");  
		}
    }
                
    	InteractsWithDomain = target ;
        m_dom_id = target.getDom_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8From(Domain_c target)
{
	unrelateAcrossR8From(target, true);
}
public void unrelateAcrossR8From(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (InteractsWithDomain == null) return;  // already unrelated
	
	if (target != InteractsWithDomain) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8To(this);
    }
    

      if(InteractsWithDomain != null) {
      
        m_dom_id = InteractsWithDomain.getDom_id();
        InteractsWithDomain = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ExternalEntity_c getOneS_EEOnR8(Domain_c [] targets)
{
    return getOneS_EEOnR8(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR8(Domain_c [] targets, ClassQueryInterface_c test)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_EEOnR8(targets[i], test);
        }
    }

    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR8(Domain_c target)
{
  return getOneS_EEOnR8(target, null);
}

public static ExternalEntity_c getOneS_EEOnR8(Domain_c target, boolean loadComponent)
{
    return getOneS_EEOnR8(target.getModelRoot(), target, null, loadComponent);
}

public static ExternalEntity_c getOneS_EEOnR8(Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_EEOnR8(target.getModelRoot(), target, test);
  }
  return null;
}

public static ExternalEntity_c getOneS_EEOnR8(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
	return getOneS_EEOnR8(modelRoot, target, test, true);
}

public static ExternalEntity_c getOneS_EEOnR8(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  ExternalEntity_c result = null;
  
  result=find_getOneS_EEOnR8(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,ExternalEntity_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_EEOnR8(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static ExternalEntity_c find_getOneS_EEOnR8(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_InteractsWithExternalEntityInteractsWith_R8) {
	    for ( int i = 0; i < target.backPointer_InteractsWithExternalEntityInteractsWith_R8.size(); ++i ) {
	      ExternalEntity_c source = (ExternalEntity_c)target.backPointer_InteractsWithExternalEntityInteractsWith_R8.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ExternalEntity_c [] getManyS_EEsOnR8(Domain_c [] targets)
{
  return getManyS_EEsOnR8(targets, null);
}
public static ExternalEntity_c [] getManyS_EEsOnR8(Domain_c [] targets, boolean loadComponent)
{
  return getManyS_EEsOnR8(targets, null, loadComponent);
}
public static ExternalEntity_c [] getManyS_EEsOnR8(Domain_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_EEsOnR8(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR8(Domain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ExternalEntity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ExternalEntity_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(ExternalEntity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_InteractsWithExternalEntityInteractsWith_R8) {
	    for (int j = 0; j < targets[i].backPointer_InteractsWithExternalEntityInteractsWith_R8.size(); ++j) {
	      ExternalEntity_c source = (ExternalEntity_c)targets[i].backPointer_InteractsWithExternalEntityInteractsWith_R8.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ExternalEntity_c[] ret_set = new ExternalEntity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ExternalEntity_c[0];
  }
  }

public static ExternalEntity_c [] getManyS_EEsOnR8(Domain_c target)
{
  return getManyS_EEsOnR8(target, null);
}

public static ExternalEntity_c [] getManyS_EEsOnR8(Domain_c target, boolean loadComponent)
{
  return getManyS_EEsOnR8(target, null, loadComponent);
}

public static ExternalEntity_c [] getManyS_EEsOnR8(Domain_c target, ClassQueryInterface_c test)
{
	return getManyS_EEsOnR8(target, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR8(Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ExternalEntity_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ExternalEntity_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_InteractsWithExternalEntityInteractsWith_R8) {
    for (int i = 0; i < target.backPointer_InteractsWithExternalEntityInteractsWith_R8.size(); ++i) {
      ExternalEntity_c source = (ExternalEntity_c)target.backPointer_InteractsWithExternalEntityInteractsWith_R8.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ExternalEntity_c[] ret_set = new ExternalEntity_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ExternalEntity_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<ExternalEntityInPackage_c> backPointer_IsContainedInExternalEntityInPackageIsContainedIn_R33 = new ArrayList<ExternalEntityInPackage_c>();

public void setExternalEntityInPackageOrderInChildListR33(ExternalEntityInPackage_c target, int index) {
	unrelateAcrossR33From(target);
	ExternalEntityInPackage_c[] elements = ExternalEntityInPackage_c.getManyS_EEIPsOnR33(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR33From((ExternalEntityInPackage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR33To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR33To((ExternalEntityInPackage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR33To(ExternalEntityInPackage_c target)
{
  if (target != null) {
    target.relateAcrossR33To(this, true) ;
  }
}

public void relateAcrossR33To(ExternalEntityInPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR33To(this, notifyChanges) ;
  }
}

public void setBackPointerR33To(ExternalEntityInPackage_c target)
{
  	synchronized (backPointer_IsContainedInExternalEntityInPackageIsContainedIn_R33) {
		backPointer_IsContainedInExternalEntityInPackageIsContainedIn_R33.add(target);
	}
}

public void unrelateAcrossR33From(ExternalEntityInPackage_c target)
{
  if (target != null) {
    target.unrelateAcrossR33From(this, true) ;
  }
}

public void unrelateAcrossR33From(ExternalEntityInPackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR33From(this, notifyChanges) ;
  }
}

public void clearBackPointerR33To(ExternalEntityInPackage_c target)
{
  synchronized (backPointer_IsContainedInExternalEntityInPackageIsContainedIn_R33) {
	    backPointer_IsContainedInExternalEntityInPackageIsContainedIn_R33.remove(target);
	}
}

public static ExternalEntity_c getOneS_EEOnR33(ExternalEntityInPackage_c [] targets)
{
    return getOneS_EEOnR33(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR33(ExternalEntityInPackage_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEOnR33(targets, test, true);
}

public static ExternalEntity_c getOneS_EEOnR33(ExternalEntityInPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntity_c candidate_val = getOneS_EEOnR33(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEOnR33(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR33(ExternalEntityInPackage_c target)
{
	return getOneS_EEOnR33(target, true);
}
public static ExternalEntity_c getOneS_EEOnR33(ExternalEntityInPackage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ContainsExternalEntity ;
  } else {
    return null;
  }
}

public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityInPackage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEsOnR33(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityInPackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntity_c[0];
  
  
  LinkedHashSet<ExternalEntity_c> elementsSet = new LinkedHashSet<ExternalEntity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ContainsExternalEntity == null)
	  targets[i].loadProxy();
    ExternalEntity_c associate = targets[i].ContainsExternalEntity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntity_c[] result = new ExternalEntity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityInPackage_c [] targets)
{
  return getManyS_EEsOnR33(targets, null);
}

public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityInPackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityInPackage_c [] targetArray = new ExternalEntityInPackage_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR33(targetArray, test, loadComponent);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
    return result ;
  }
  
}

public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityInPackage_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEsOnR33(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityInPackage_c target)
{
    return getManyS_EEsOnR33(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityInPackage_c target, boolean loadComponent)
{
    return getManyS_EEsOnR33(target, null, loadComponent);
}

public static ExternalEntity_c getOneS_EEOnR33(ExternalEntityPackage_c target)
{
  return ExternalEntity_c.getOneS_EEOnR33(ExternalEntityInPackage_c.getOneS_EEIPOnR33(target)) ;
}

public static ExternalEntity_c getOneS_EEOnR33(ExternalEntityPackage_c target,
    ClassQueryInterface_c test)
{
  return ExternalEntity_c.getOneS_EEOnR33(ExternalEntityInPackage_c.getManyS_EEIPsOnR33(target), test) ;
}

public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityPackage_c target,
    ClassQueryInterface_c test)
{
	return getManyS_EEsOnR33(target, test, true);
}
public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityPackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  ExternalEntityInPackage_c [] associators = ExternalEntityInPackage_c.getManyS_EEIPsOnR33(target, loadComponent) ;
    return ExternalEntity_c.getManyS_EEsOnR33(associators, test, loadComponent) ;
}
public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityPackage_c target)
{
    return getManyS_EEsOnR33(target, null, true);
}
public static ExternalEntity_c [] getManyS_EEsOnR33(ExternalEntityPackage_c target, boolean loadComponent)
{
    return getManyS_EEsOnR33(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ExternalEntityInModel_c> backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9 = new ArrayList<ExternalEntityInModel_c>();

public void setExternalEntityInModelOrderInChildListR9(ExternalEntityInModel_c target, int index) {
	unrelateAcrossR9From(target);
	ExternalEntityInModel_c[] elements = ExternalEntityInModel_c.getManyS_EEMsOnR9(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR9From((ExternalEntityInModel_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR9To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR9To((ExternalEntityInModel_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR9To(ExternalEntityInModel_c target)
{
  if (target != null) {
    target.relateAcrossR9To(this, true) ;
  }
}

public void relateAcrossR9To(ExternalEntityInModel_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR9To(this, notifyChanges) ;
  }
}

public void setBackPointerR9To(ExternalEntityInModel_c target)
{
  	synchronized (backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9) {
		backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9.add(target);
	}
}

public void unrelateAcrossR9From(ExternalEntityInModel_c target)
{
  if (target != null) {
    target.unrelateAcrossR9From(this, true) ;
  }
}

public void unrelateAcrossR9From(ExternalEntityInModel_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR9From(this, notifyChanges) ;
  }
}

public void clearBackPointerR9To(ExternalEntityInModel_c target)
{
  synchronized (backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9) {
	    backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9.remove(target);
	}
}

public static ExternalEntity_c getOneS_EEOnR9(ExternalEntityInModel_c [] targets)
{
    return getOneS_EEOnR9(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR9(ExternalEntityInModel_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEOnR9(targets, test, true);
}

public static ExternalEntity_c getOneS_EEOnR9(ExternalEntityInModel_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntity_c candidate_val = getOneS_EEOnR9(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEOnR9(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR9(ExternalEntityInModel_c target)
{
	return getOneS_EEOnR9(target, true);
}
public static ExternalEntity_c getOneS_EEOnR9(ExternalEntityInModel_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsAPresenceInSubsystemModelOfExternalEntity ;
  } else {
    return null;
  }
}

public static ExternalEntity_c [] getManyS_EEsOnR9(ExternalEntityInModel_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEsOnR9(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR9(ExternalEntityInModel_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntity_c[0];
  
  
  LinkedHashSet<ExternalEntity_c> elementsSet = new LinkedHashSet<ExternalEntity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsAPresenceInSubsystemModelOfExternalEntity == null)
	  targets[i].loadProxy();
    ExternalEntity_c associate = targets[i].IsAPresenceInSubsystemModelOfExternalEntity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntity_c[] result = new ExternalEntity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntity_c [] getManyS_EEsOnR9(ExternalEntityInModel_c [] targets)
{
  return getManyS_EEsOnR9(targets, null);
}

public static ExternalEntity_c [] getManyS_EEsOnR9(ExternalEntityInModel_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityInModel_c [] targetArray = new ExternalEntityInModel_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR9(targetArray, test, loadComponent);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
    return result ;
  }
  
}

public static ExternalEntity_c [] getManyS_EEsOnR9(ExternalEntityInModel_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEsOnR9(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR9(ExternalEntityInModel_c target)
{
    return getManyS_EEsOnR9(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR9(ExternalEntityInModel_c target, boolean loadComponent)
{
    return getManyS_EEsOnR9(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ExternalEntityEventDataItem_c> backPointer_CanAsynchronouslyCommunicateViaExternalEntityEventDataItemCanAsynchronouslyCommunicateVia_R12 = new ArrayList<ExternalEntityEventDataItem_c>();

public void setExternalEntityEventDataItemOrderInChildListR12(ExternalEntityEventDataItem_c target, int index) {
	unrelateAcrossR12From(target);
	ExternalEntityEventDataItem_c[] elements = ExternalEntityEventDataItem_c.getManyS_EEEDIsOnR12(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR12From((ExternalEntityEventDataItem_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR12To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR12To((ExternalEntityEventDataItem_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR12To(ExternalEntityEventDataItem_c target)
{
  if (target != null) {
    target.relateAcrossR12To(this, true) ;
  }
}

public void relateAcrossR12To(ExternalEntityEventDataItem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR12To(this, notifyChanges) ;
  }
}

public void setBackPointerR12To(ExternalEntityEventDataItem_c target)
{
  	synchronized (backPointer_CanAsynchronouslyCommunicateViaExternalEntityEventDataItemCanAsynchronouslyCommunicateVia_R12) {
		backPointer_CanAsynchronouslyCommunicateViaExternalEntityEventDataItemCanAsynchronouslyCommunicateVia_R12.add(target);
	}
}

public void unrelateAcrossR12From(ExternalEntityEventDataItem_c target)
{
  if (target != null) {
    target.unrelateAcrossR12From(this, true) ;
  }
}

public void unrelateAcrossR12From(ExternalEntityEventDataItem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR12From(this, notifyChanges) ;
  }
}

public void clearBackPointerR12To(ExternalEntityEventDataItem_c target)
{
  synchronized (backPointer_CanAsynchronouslyCommunicateViaExternalEntityEventDataItemCanAsynchronouslyCommunicateVia_R12) {
	    backPointer_CanAsynchronouslyCommunicateViaExternalEntityEventDataItemCanAsynchronouslyCommunicateVia_R12.remove(target);
	}
}

public static ExternalEntity_c getOneS_EEOnR12(ExternalEntityEventDataItem_c [] targets)
{
    return getOneS_EEOnR12(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR12(ExternalEntityEventDataItem_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEOnR12(targets, test, true);
}

public static ExternalEntity_c getOneS_EEOnR12(ExternalEntityEventDataItem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntity_c candidate_val = getOneS_EEOnR12(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEOnR12(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR12(ExternalEntityEventDataItem_c target)
{
	return getOneS_EEOnR12(target, true);
}
public static ExternalEntity_c getOneS_EEOnR12(ExternalEntityEventDataItem_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsDataForEventsOfExternalEntity ;
  } else {
    return null;
  }
}

public static ExternalEntity_c [] getManyS_EEsOnR12(ExternalEntityEventDataItem_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEsOnR12(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR12(ExternalEntityEventDataItem_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntity_c[0];
  
  
  LinkedHashSet<ExternalEntity_c> elementsSet = new LinkedHashSet<ExternalEntity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsDataForEventsOfExternalEntity == null)
	  targets[i].loadProxy();
    ExternalEntity_c associate = targets[i].IsDataForEventsOfExternalEntity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntity_c[] result = new ExternalEntity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntity_c [] getManyS_EEsOnR12(ExternalEntityEventDataItem_c [] targets)
{
  return getManyS_EEsOnR12(targets, null);
}

public static ExternalEntity_c [] getManyS_EEsOnR12(ExternalEntityEventDataItem_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityEventDataItem_c [] targetArray = new ExternalEntityEventDataItem_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR12(targetArray, test, loadComponent);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
    return result ;
  }
  
}

public static ExternalEntity_c [] getManyS_EEsOnR12(ExternalEntityEventDataItem_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEsOnR12(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR12(ExternalEntityEventDataItem_c target)
{
    return getManyS_EEsOnR12(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR12(ExternalEntityEventDataItem_c target, boolean loadComponent)
{
    return getManyS_EEsOnR12(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ExternalEntityEvent_c> backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10 = new ArrayList<ExternalEntityEvent_c>();

public void setExternalEntityEventOrderInChildListR10(ExternalEntityEvent_c target, int index) {
	unrelateAcrossR10From(target);
	ExternalEntityEvent_c[] elements = ExternalEntityEvent_c.getManyS_EEEVTsOnR10(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR10From((ExternalEntityEvent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR10To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR10To((ExternalEntityEvent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR10To(ExternalEntityEvent_c target)
{
  if (target != null) {
    target.relateAcrossR10To(this, true) ;
  }
}

public void relateAcrossR10To(ExternalEntityEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR10To(this, notifyChanges) ;
  }
}

public void setBackPointerR10To(ExternalEntityEvent_c target)
{
  	synchronized (backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10) {
		backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10.add(target);
	}
}

public void unrelateAcrossR10From(ExternalEntityEvent_c target)
{
  if (target != null) {
    target.unrelateAcrossR10From(this, true) ;
  }
}

public void unrelateAcrossR10From(ExternalEntityEvent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR10From(this, notifyChanges) ;
  }
}

public void clearBackPointerR10To(ExternalEntityEvent_c target)
{
  synchronized (backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10) {
	    backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10.remove(target);
	}
}

public static ExternalEntity_c getOneS_EEOnR10(ExternalEntityEvent_c [] targets)
{
    return getOneS_EEOnR10(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR10(ExternalEntityEvent_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEOnR10(targets, test, true);
}

public static ExternalEntity_c getOneS_EEOnR10(ExternalEntityEvent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntity_c candidate_val = getOneS_EEOnR10(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEOnR10(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR10(ExternalEntityEvent_c target)
{
	return getOneS_EEOnR10(target, true);
}
public static ExternalEntity_c getOneS_EEOnR10(ExternalEntityEvent_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsVehicleOfCommunicationForExternalEntity ;
  } else {
    return null;
  }
}

public static ExternalEntity_c [] getManyS_EEsOnR10(ExternalEntityEvent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEsOnR10(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR10(ExternalEntityEvent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntity_c[0];
  
  
  LinkedHashSet<ExternalEntity_c> elementsSet = new LinkedHashSet<ExternalEntity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsVehicleOfCommunicationForExternalEntity == null)
	  targets[i].loadProxy();
    ExternalEntity_c associate = targets[i].IsVehicleOfCommunicationForExternalEntity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntity_c[] result = new ExternalEntity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntity_c [] getManyS_EEsOnR10(ExternalEntityEvent_c [] targets)
{
  return getManyS_EEsOnR10(targets, null);
}

public static ExternalEntity_c [] getManyS_EEsOnR10(ExternalEntityEvent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityEvent_c [] targetArray = new ExternalEntityEvent_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR10(targetArray, test, loadComponent);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
    return result ;
  }
  
}

public static ExternalEntity_c [] getManyS_EEsOnR10(ExternalEntityEvent_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEsOnR10(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR10(ExternalEntityEvent_c target)
{
    return getManyS_EEsOnR10(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR10(ExternalEntityEvent_c target, boolean loadComponent)
{
    return getManyS_EEsOnR10(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ExternalEntityDataItem_c> backPointer_CanBeAccessedSynchronouslyViaExternalEntityDataItemCanBeAccessedSynchronouslyVia_R11 = new ArrayList<ExternalEntityDataItem_c>();

public void setExternalEntityDataItemOrderInChildListR11(ExternalEntityDataItem_c target, int index) {
	unrelateAcrossR11From(target);
	ExternalEntityDataItem_c[] elements = ExternalEntityDataItem_c.getManyS_EEDIsOnR11(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR11From((ExternalEntityDataItem_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR11To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR11To((ExternalEntityDataItem_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR11To(ExternalEntityDataItem_c target)
{
  if (target != null) {
    target.relateAcrossR11To(this, true) ;
  }
}

public void relateAcrossR11To(ExternalEntityDataItem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR11To(this, notifyChanges) ;
  }
}

public void setBackPointerR11To(ExternalEntityDataItem_c target)
{
  	synchronized (backPointer_CanBeAccessedSynchronouslyViaExternalEntityDataItemCanBeAccessedSynchronouslyVia_R11) {
		backPointer_CanBeAccessedSynchronouslyViaExternalEntityDataItemCanBeAccessedSynchronouslyVia_R11.add(target);
	}
}

public void unrelateAcrossR11From(ExternalEntityDataItem_c target)
{
  if (target != null) {
    target.unrelateAcrossR11From(this, true) ;
  }
}

public void unrelateAcrossR11From(ExternalEntityDataItem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR11From(this, notifyChanges) ;
  }
}

public void clearBackPointerR11To(ExternalEntityDataItem_c target)
{
  synchronized (backPointer_CanBeAccessedSynchronouslyViaExternalEntityDataItemCanBeAccessedSynchronouslyVia_R11) {
	    backPointer_CanBeAccessedSynchronouslyViaExternalEntityDataItemCanBeAccessedSynchronouslyVia_R11.remove(target);
	}
}

public static ExternalEntity_c getOneS_EEOnR11(ExternalEntityDataItem_c [] targets)
{
    return getOneS_EEOnR11(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR11(ExternalEntityDataItem_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEOnR11(targets, test, true);
}

public static ExternalEntity_c getOneS_EEOnR11(ExternalEntityDataItem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntity_c candidate_val = getOneS_EEOnR11(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEOnR11(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR11(ExternalEntityDataItem_c target)
{
	return getOneS_EEOnR11(target, true);
}
public static ExternalEntity_c getOneS_EEOnR11(ExternalEntityDataItem_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsDataForExternalEntity ;
  } else {
    return null;
  }
}

public static ExternalEntity_c [] getManyS_EEsOnR11(ExternalEntityDataItem_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEsOnR11(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR11(ExternalEntityDataItem_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntity_c[0];
  
  
  LinkedHashSet<ExternalEntity_c> elementsSet = new LinkedHashSet<ExternalEntity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsDataForExternalEntity == null)
	  targets[i].loadProxy();
    ExternalEntity_c associate = targets[i].IsDataForExternalEntity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntity_c[] result = new ExternalEntity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntity_c [] getManyS_EEsOnR11(ExternalEntityDataItem_c [] targets)
{
  return getManyS_EEsOnR11(targets, null);
}

public static ExternalEntity_c [] getManyS_EEsOnR11(ExternalEntityDataItem_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityDataItem_c [] targetArray = new ExternalEntityDataItem_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR11(targetArray, test, loadComponent);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
    return result ;
  }
  
}

public static ExternalEntity_c [] getManyS_EEsOnR11(ExternalEntityDataItem_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEsOnR11(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR11(ExternalEntityDataItem_c target)
{
    return getManyS_EEsOnR11(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR11(ExternalEntityDataItem_c target, boolean loadComponent)
{
    return getManyS_EEsOnR11(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ExternalEntityParticipant_c> backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933 = new ArrayList<ExternalEntityParticipant_c>();

public void setExternalEntityParticipantOrderInChildListR933(ExternalEntityParticipant_c target, int index) {
	unrelateAcrossR933From(target);
	ExternalEntityParticipant_c[] elements = ExternalEntityParticipant_c.getManySQ_EEPsOnR933(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR933From((ExternalEntityParticipant_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR933To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR933To((ExternalEntityParticipant_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR933To(ExternalEntityParticipant_c target)
{
  if (target != null) {
    target.relateAcrossR933To(this, true) ;
  }
}

public void relateAcrossR933To(ExternalEntityParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR933To(this, notifyChanges) ;
  }
}

public void setBackPointerR933To(ExternalEntityParticipant_c target)
{
  	synchronized (backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933) {
		backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933.add(target);
	}
}

public void unrelateAcrossR933From(ExternalEntityParticipant_c target)
{
  if (target != null) {
    target.unrelateAcrossR933From(this, true) ;
  }
}

public void unrelateAcrossR933From(ExternalEntityParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR933From(this, notifyChanges) ;
  }
}

public void clearBackPointerR933To(ExternalEntityParticipant_c target)
{
  synchronized (backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933) {
	    backPointer_RepresentsParticipantOfExternalEntityParticipantRepresentsParticipantOf_R933.remove(target);
	}
}

public static ExternalEntity_c getOneS_EEOnR933(ExternalEntityParticipant_c [] targets)
{
    return getOneS_EEOnR933(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR933(ExternalEntityParticipant_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEOnR933(targets, test, true);
}

public static ExternalEntity_c getOneS_EEOnR933(ExternalEntityParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntity_c candidate_val = getOneS_EEOnR933(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEOnR933(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR933(ExternalEntityParticipant_c target)
{
	return getOneS_EEOnR933(target, true);
}
public static ExternalEntity_c getOneS_EEOnR933(ExternalEntityParticipant_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.RepresentsExternalEntity != null){
		target.RepresentsExternalEntity.loadProxy();
	}
	}
    return target.RepresentsExternalEntity ;
  } else {
    return null;
  }
}

public static ExternalEntity_c [] getManyS_EEsOnR933(ExternalEntityParticipant_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEsOnR933(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR933(ExternalEntityParticipant_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntity_c[0];
  
  
  LinkedHashSet<ExternalEntity_c> elementsSet = new LinkedHashSet<ExternalEntity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RepresentsExternalEntity == null)
	  targets[i].loadProxy();
    ExternalEntity_c associate = targets[i].RepresentsExternalEntity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ExternalEntity_c[] result = new ExternalEntity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntity_c [] getManyS_EEsOnR933(ExternalEntityParticipant_c [] targets)
{
  return getManyS_EEsOnR933(targets, null);
}

public static ExternalEntity_c [] getManyS_EEsOnR933(ExternalEntityParticipant_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityParticipant_c [] targetArray = new ExternalEntityParticipant_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR933(targetArray, test, loadComponent);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
    return result ;
  }
  
}

public static ExternalEntity_c [] getManyS_EEsOnR933(ExternalEntityParticipant_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEsOnR933(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR933(ExternalEntityParticipant_c target)
{
    return getManyS_EEsOnR933(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR933(ExternalEntityParticipant_c target, boolean loadComponent)
{
    return getManyS_EEsOnR933(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Bridge_c> backPointer_UsesBridgeUses_R19 = new ArrayList<Bridge_c>();

public void setBridgeOrderInChildListR19(Bridge_c target, int index) {
	unrelateAcrossR19From(target);
	Bridge_c[] elements = Bridge_c.getManyS_BRGsOnR19(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR19From((Bridge_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR19To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR19To((Bridge_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR19To(Bridge_c target)
{
  if (target != null) {
    target.relateAcrossR19To(this, true) ;
  }
}

public void relateAcrossR19To(Bridge_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR19To(this, notifyChanges) ;
  }
}

public void setBackPointerR19To(Bridge_c target)
{
  	synchronized (backPointer_UsesBridgeUses_R19) {
		backPointer_UsesBridgeUses_R19.add(target);
	}
}

public void unrelateAcrossR19From(Bridge_c target)
{
  if (target != null) {
    target.unrelateAcrossR19From(this, true) ;
  }
}

public void unrelateAcrossR19From(Bridge_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR19From(this, notifyChanges) ;
  }
}

public void clearBackPointerR19To(Bridge_c target)
{
  synchronized (backPointer_UsesBridgeUses_R19) {
	    backPointer_UsesBridgeUses_R19.remove(target);
	}
}

public static ExternalEntity_c getOneS_EEOnR19(Bridge_c [] targets)
{
    return getOneS_EEOnR19(targets, null);
}

public static ExternalEntity_c getOneS_EEOnR19(Bridge_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEOnR19(targets, test, true);
}

public static ExternalEntity_c getOneS_EEOnR19(Bridge_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntity_c candidate_val = getOneS_EEOnR19(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEOnR19(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntity_c getOneS_EEOnR19(Bridge_c target)
{
	return getOneS_EEOnR19(target, true);
}
public static ExternalEntity_c getOneS_EEOnR19(Bridge_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ProvidesAccessToExternalEntity ;
  } else {
    return null;
  }
}

public static ExternalEntity_c [] getManyS_EEsOnR19(Bridge_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEsOnR19(targets, test, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR19(Bridge_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntity_c[0];
  
  
  LinkedHashSet<ExternalEntity_c> elementsSet = new LinkedHashSet<ExternalEntity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ProvidesAccessToExternalEntity == null)
	  targets[i].loadProxy();
    ExternalEntity_c associate = targets[i].ProvidesAccessToExternalEntity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntity_c[] result = new ExternalEntity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntity_c [] getManyS_EEsOnR19(Bridge_c [] targets)
{
  return getManyS_EEsOnR19(targets, null);
}

public static ExternalEntity_c [] getManyS_EEsOnR19(Bridge_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Bridge_c [] targetArray = new Bridge_c[1];
    targetArray[0] = target;
    return getManyS_EEsOnR19(targetArray, test, loadComponent);
  } else {
    ExternalEntity_c [] result = new ExternalEntity_c [0] ;
    return result ;
  }
  
}

public static ExternalEntity_c [] getManyS_EEsOnR19(Bridge_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEsOnR19(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR19(Bridge_c target)
{
    return getManyS_EEsOnR19(target, null, true);
}

public static ExternalEntity_c [] getManyS_EEsOnR19(Bridge_c target, boolean loadComponent)
{
    return getManyS_EEsOnR19(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R8001
      PackageableElement_c relInst56547 = (PackageableElement_c) baseRoot.getInstanceList(PackageableElement_c.class).get(new Object[] {m_ee_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56547 == null) {
      			relInst56547 = (PackageableElement_c) Ooaofooa.getDefaultInstance().getInstanceList(PackageableElement_c.class).get(new Object[] {m_ee_id});
      		}
			if (relInst56547 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56547 = (PackageableElement_c) roots[i].getInstanceList(PackageableElement_c.class).get(new Object[] {m_ee_id});
					if (relInst56547 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56547 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56547) && !isProxy())) {
	      relInst56547.relateAcrossR8001To(this, notifyChanges);
	  }
	  }
	          

	if (InteractsWithDomain == null) {          
      // R8
      Domain_c relInst56548 = (Domain_c) baseRoot.getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56548 == null) {
      			relInst56548 = (Domain_c) Ooaofooa.getDefaultInstance().getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
      		}
			if (relInst56548 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56548 = (Domain_c) roots[i].getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
					if (relInst56548 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56548 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56548) && !isProxy())) {
	      relInst56548.relateAcrossR8To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R8001
      // PE_PE
		  inst=IsSupertypePackageableElement;
			unrelateAcrossR8001From(IsSupertypePackageableElement, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R8
      // S_DOM
		  inst=InteractsWithDomain;
			unrelateAcrossR8From(InteractsWithDomain, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ExternalEntity_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ExternalEntity_c inst = (ExternalEntity_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ExternalEntity_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ExternalEntity_c ExternalEntityInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ExternalEntity_c result=findExternalEntityInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,ExternalEntity_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findExternalEntityInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static ExternalEntity_c findExternalEntityInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ExternalEntity_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ExternalEntity_c x = (ExternalEntity_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static ExternalEntity_c ExternalEntityInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ExternalEntityInstance(modelRoot,test,true);
  }
  
  public static ExternalEntity_c ExternalEntityInstance(ModelRoot modelRoot)
  {
	 return ExternalEntityInstance(modelRoot,null,true);
  }

  public static ExternalEntity_c [] ExternalEntityInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, ExternalEntity_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(ExternalEntity_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ExternalEntity_c x = (ExternalEntity_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ExternalEntity_c[] ret_set = new ExternalEntity_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ExternalEntity_c[0];
			}		
		} 
  }
  public static ExternalEntity_c [] ExternalEntityInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ExternalEntityInstances(modelRoot,test,true);
  }
  public static ExternalEntity_c [] ExternalEntityInstances(ModelRoot modelRoot)
  {
	return ExternalEntityInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the External Entity.dispose call: ";
	PackageableElement_c testR8001Inst16 = PackageableElement_c.getOnePE_PEOnR8001(this, false);

	if ( testR8001Inst16 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "8001 ";
	}
 	ExternalEntityInPackage_c testR33Inst = ExternalEntityInPackage_c.getOneS_EEIPOnR33(this, false);

 	if ( testR33Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "33 ";
 	}
	ExternalEntityInModel_c testR9Inst = ExternalEntityInModel_c.getOneS_EEMOnR9(this, false);

	if ( testR9Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "9 ";	
	}
	ExternalEntityEventDataItem_c testR12Inst = ExternalEntityEventDataItem_c.getOneS_EEEDIOnR12(this, false);

	if ( testR12Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "12 ";	
	}
	ExternalEntityEvent_c testR10Inst = ExternalEntityEvent_c.getOneS_EEEVTOnR10(this, false);

	if ( testR10Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "10 ";	
	}
	ExternalEntityDataItem_c testR11Inst = ExternalEntityDataItem_c.getOneS_EEDIOnR11(this, false);

	if ( testR11Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "11 ";	
	}
	ExternalEntityParticipant_c testR933Inst = ExternalEntityParticipant_c.getOneSQ_EEPOnR933(this, false);

	if ( testR933Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "933 ";	
	}
	Domain_c testR8Inst = Domain_c.getOneS_DOMOnR8(this, false);

	if ( testR8Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "8 ";
	}
	Bridge_c testR19Inst = Bridge_c.getOneS_BRGOnR19(this, false);

	if ( testR19Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "19 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "External Entity", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("dom_id")){
         return true;
      }
      if(attributeName.equals("ee_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getEe_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getEe_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getKey_lett()
  {
    return m_key_lett ;
  }


  public void setKey_lett(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_key_lett)){
	        return;
	    }
	}else if(m_key_lett != null){
	    if(m_key_lett.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Key_lett", m_key_lett, newValue,true); 
   m_key_lett = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDom_idLongBased()
  {
    if ( InteractsWithDomain != null )
    {
      return InteractsWithDomain.getDom_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDom_id()
  {
    if ( InteractsWithDomain != null )
    {
      return InteractsWithDomain.getDom_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDom_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dom_id) )
      return m_dom_id;
    else
      return getDom_id();
  }
  
  public void setDom_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dom_id)){
	        return;
	    }
	}else if(m_dom_id != null){
	    if(m_dom_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dom_id", m_dom_id, newValue,true); 
   m_dom_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getEe_idLongBased()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getEe_id()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_id();
    }
    return m_ee_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypePackageableElement != null );
 
 }                  

  public java.util.UUID getEe_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ee_id) )
      return m_ee_id;
    else
      return getEe_id();
  }
  
  public void setEe_id(java.util.UUID newValue)
  {
   m_ee_id = IdAssigner.preprocessUUID(newValue);
  }
  public String getRealized_class_path()
  {
    return m_realized_class_path ;
  }


  public void setRealized_class_path(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_realized_class_path)){
	        return;
	    }
	}else if(m_realized_class_path != null){
	    if(m_realized_class_path.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Realized_class_path", m_realized_class_path, newValue,true); 
   m_realized_class_path = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getLabel()
  {
ModelRoot modelRoot = getModelRoot();
String       v_extension = "" ;


if ( (getIsrealized()) )
{

if ( (! getRealized_class_path().equals("")) )
{

v_extension = " realized by " + Util_c.Getlastsegmentforpath(			    
getRealized_class_path()) ;



}


}

return getName() + v_extension;



  }


  public boolean getIsrealized()
  {
    return m_isrealized ;
  }


  public void setIsrealized(boolean newValue)
  {
    if(m_isrealized == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Isrealized", new Boolean(m_isrealized), new Boolean(newValue),true);

   m_isrealized = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "External Entity", //$NON-NLS-1$
	  " Operation entered: External Entity::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ExternalEntity_c [] objs = ExternalEntity_c.ExternalEntityInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "External Entity", //$NON-NLS-1$
	  " Operation entered: External Entity::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ExternalEntity_c_test56550_c implements ClassQueryInterface_c
    {
	  ExternalEntity_c_test56550_c( java.util.UUID            p56551 ) {
	  m_p56551 = p56551;
	  }
	  private java.util.UUID             m_p56551; 
	  public boolean evaluate (Object candidate)
	  {
	      ExternalEntity_c selected = (ExternalEntity_c) candidate;
	      boolean retval = false;
	      retval = (selected.getEe_id().equals(m_p56551));
	      return retval;
	  }
    }

    ExternalEntity_c [] objs56549 = 
    ExternalEntity_c.ExternalEntityInstances(modelRoot, new ExternalEntity_c_test56550_c(getEe_id())) ;

    if ( (  (objs56549.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity", //$NON-NLS-1$
           "Consistency: Object: External Entity: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56549.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56549.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56549.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity", //$NON-NLS-1$
           "Consistency: Object: External Entity: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56549.length )  + " EE_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56549.length )  + " EE_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // External Entity is a referring class in association: rel.Numb = 8
          // The participating class is: Domain
    class Domain_c_test56555_c implements ClassQueryInterface_c
    {
	  Domain_c_test56555_c( java.util.UUID            p56556 ) {
	  m_p56556 = p56556;
	  }
	  private java.util.UUID             m_p56556; 
	  public boolean evaluate (Object candidate)
	  {
	      Domain_c selected = (Domain_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDom_id().equals(m_p56556));
	      return retval;
	  }
    }

    Domain_c [] objs56554 = 
    Domain_c.DomainInstances(modelRoot, new Domain_c_test56555_c(getDom_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56554.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity", //$NON-NLS-1$
           "Consistency: Object: External Entity: Association: 8: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56554.length )  + " Dom_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity: Association: 8: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56554.length )  + " Dom_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // External Entity is a subtype in association: rel.Numb = 8001
          // The supertype class is: Packageable Element
         //    Note: The consistency test for this supertype has been removed 
         //          until generic package _migration_ is complete.
          // Associated Other Side: rel.Numb = 33
            // Link Object: External Entity in Package
    class ExternalEntityInPackage_c_test56560_c implements ClassQueryInterface_c
    {
	  ExternalEntityInPackage_c_test56560_c( java.util.UUID            p56561 ) {
	  m_p56561 = p56561;
	  }
	  private java.util.UUID             m_p56561; 
	  public boolean evaluate (Object candidate)
	  {
	      ExternalEntityInPackage_c selected = (ExternalEntityInPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getEe_id().equals(m_p56561));
	      return retval;
	  }
    }

    ExternalEntityInPackage_c [] objs56562 = 
    ExternalEntityInPackage_c.ExternalEntityInPackageInstances(modelRoot, new ExternalEntityInPackage_c_test56560_c(getEe_id())) ;

    if ( (  (objs56562.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity", //$NON-NLS-1$
           "Consistency: Object: External Entity: Association: 33: Cardinality of a link is equal to zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56562.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity: Association: 33: Cardinality of a link is equal to zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56562.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56562.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity", //$NON-NLS-1$
           "Consistency: Object: External Entity: Association: 33: Cardinality of a link is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56562.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity: Association: 33: Cardinality of a link is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56562.length )  , e); 
      }
      retval = false;

    }

          // External Entity is a participating class in association: rel.Numb = 9
             // Object: External Entity in Model
          // External Entity is a participating class in association: rel.Numb = 12
             // Object: External Entity Event Data Item
          // External Entity is a participating class in association: rel.Numb = 10
             // Object: External Entity Event
          // External Entity is a participating class in association: rel.Numb = 11
             // Object: External Entity Data Item
          // External Entity is a participating class in association: rel.Numb = 933
             // Object: External Entity Participant
          // External Entity is a participating class in association: rel.Numb = 19
             // Object: Bridge
    return retval;
  }


  // declare transform functions
  public  int          Get_compartments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Get_compartments") ; 
               final ModelRoot modelRoot = getModelRoot();
return 3;



   } // End get_compartments
  public  int  Get_style()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.Box;



   } // End get_style
  public  String       Get_compartment_text(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Get_compartment_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


if ( (p_Comp_num == 1) )
{

if ( (p_Ent_num == 1) )
{

if ( (p_At == Justification_c.Center_in_X) )
{

v_result = "«external entity»" ;


v_result = v_result + Gd_c.Newline() ;


v_result = v_result + getLabel() ;



}


}


}

else if ( (p_Comp_num == 2) )
{

if ( (p_At == Justification_c.Left) )
{

int          v_cursor = 1 ;


ExternalEntityDataItem_c [] v_eedis = ExternalEntityDataItem_c.getManyS_EEDIsOnR11(this);


ExternalEntityDataItem_c  v_eedi = null;
for ( int i55016 = 0; i55016 < v_eedis.length; i55016++)
{
  v_eedi = v_eedis[i55016] ;

if ( (v_cursor == p_Ent_num) )
{

v_result = v_eedi.getName() + " : " ;


DataType_c v_ddt = DataType_c.getOneS_DTOnR15(v_eedi);


if ( (  (v_ddt != null)) )
{

v_result = v_result + v_ddt.getName() ;



}

else
{

v_result = v_result + Ooaofooa.Getorphanedelementname(modelRoot) ;



}

break;



}

v_cursor = v_cursor + 1 ;



}


}


}

else if ( (p_Comp_num == 3) )
{

if ( (p_At == Justification_c.Left) )
{

int          v_cursor = 1 ;


Bridge_c [] v_brs = Bridge_c.getManyS_BRGsOnR19(this);


if ( (  (v_brs.length != 0) && p_Ent_num == 1) )
{

v_result = "«operation»" ;


v_result = v_result + Gd_c.Newline() ;



}

Bridge_c  v_br = null;
for ( int i55017 = 0; i55017 < v_brs.length; i55017++)
{
  v_br = v_brs[i55017] ;

if ( (v_cursor == p_Ent_num) )
{

v_result = v_result + v_br.getName() ;


  class BridgeParameter_test55719_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		BridgeParameter_c selected = (BridgeParameter_c)candidate;
		return (selected.getPrevious_bparm_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
BridgeParameter_c v_bparm = BridgeParameter_c.getOneS_BPARMOnR21(v_br, new BridgeParameter_test55719_c());


if ( (  (v_bparm != null)) )
{

v_result = v_result + "(" ;


String       v_parm_separator = "" ;


while ( (  (v_bparm != null)) )
{

v_result = v_result + v_parm_separator ;


v_result = v_result + v_bparm.getName() ;


v_result = v_result + v_bparm.getDimensions() ;


v_result = v_result + " : " ;


DataType_c v_pdt = DataType_c.getOneS_DTOnR22(v_bparm);


if ( (  (v_pdt != null)) )
{

v_result = v_result + v_pdt.getName() ;



}

else
{

v_result = v_result + Ooaofooa.Getorphanedelementname(modelRoot) ;



}

v_parm_separator = ", " ;


v_bparm = BridgeParameter_c.getOneS_BPARMOnR55Precedes(v_bparm);



}

v_result = v_result + ")" ;



}

break;



}

v_cursor = v_cursor + 1 ;



}

v_result = v_result + " : " ;


DataType_c v_rt = DataType_c.getOneS_DTOnR20(v_br);


if ( (  (v_rt != null)) )
{

v_result = v_result + v_rt.getName() ;



}

else
{

v_result = v_result + Ooaofooa.Getorphanedelementname(modelRoot) ;



}

if ( (  (v_rt != null) && ! v_rt.getName().equals("void")) )
{

v_result = v_result + v_br.getReturn_dimensions() ;



}


}


}

return v_result;



   } // End get_compartment_text
  public  int          Get_entries(final int          p_Comp_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Get_entries") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Comp_num == 1) )
{

return 1;



}

else if ( (p_Comp_num == 2) )
{

ExternalEntityDataItem_c [] v_eedis = ExternalEntityDataItem_c.getManyS_EEDIsOnR11(this);


return   (v_eedis.length);



}

else if ( (p_Comp_num == 3) )
{

Bridge_c [] v_brs = Bridge_c.getManyS_BRGsOnR19(this);


return   (v_brs.length);



}

else
{

return 0;



}


   } // End get_entries
  public  int  Get_text_style(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Get_text_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.None;



   } // End get_text_style
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_name = Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed External Entity"			    
,Converttoinstance()) ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setName( v_success) ;


setIsrealized( true) ;



}

else
{

Dispose() ;



}


   } // End initialize
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


if ( (  (v_pe != null)) )
{

if (v_pe != null) {
v_pe.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


return ;



}

ExternalEntityDataItem_c [] v_eedis = ExternalEntityDataItem_c.getManyS_EEDIsOnR11(this);


ExternalEntityDataItem_c  v_eedi = null;
for ( int i55018 = 0; i55018 < v_eedis.length; i55018++)
{
  v_eedi = v_eedis[i55018] ;

if (v_eedi != null) {
v_eedi.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Bridge_c [] v_brgs = Bridge_c.getManyS_BRGsOnR19(this);


Bridge_c  v_brg = null;
for ( int i55019 = 0; i55019 < v_brgs.length; i55019++)
{
  v_brg = v_brgs[i55019] ;

if (v_brg != null) {
v_brg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Domain_c v_dom = Domain_c.getOneS_DOMOnR8(this);


if ( (  (v_dom != null)) )
{

this.unrelateAcrossR8From(v_dom);



}

ExternalEntityInPackage_c v_eeip = ExternalEntityInPackage_c.getOneS_EEIPOnR33(this);


if ( (  (v_eeip != null)) )
{

ExternalEntityPackage_c v_eepk = ExternalEntityPackage_c.getOneS_EEPKOnR33(v_eeip);


if (v_eeip != null) {
v_eeip.unrelateAcrossR33From( this ) ; v_eeip.unrelateAcrossR33From( v_eepk ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_eeip != null) {
// get the location of this element in the instance list
// before deleting
if ( v_eeip.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_eeip));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


ExternalEntityInModel_c [] v_eems = ExternalEntityInModel_c.getManyS_EEMsOnR9(this);


ExternalEntityInModel_c  v_eem = null;
for ( int i55020 = 0; i55020 < v_eems.length; i55020++)
{
  v_eem = v_eems[i55020] ;

if (v_eem != null) {
v_eem.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

ExternalEntityEvent_c [] v_eeevts = ExternalEntityEvent_c.getManyS_EEEVTsOnR10(this);


ExternalEntityEvent_c  v_eeevt = null;
for ( int i55021 = 0; i55021 < v_eeevts.length; i55021++)
{
  v_eeevt = v_eeevts[i55021] ;

if (v_eeevt != null) {
v_eeevt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ExternalEntityEventDataItem_c [] v_eeedis = ExternalEntityEventDataItem_c.getManyS_EEEDIsOnR12(this);


ExternalEntityEventDataItem_c  v_eeedi = null;
for ( int i55022 = 0; i55022 < v_eeedis.length; i55022++)
{
  v_eeedi = v_eeedis[i55022] ;

if (v_eeedi != null) {
v_eeedi.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ExternalEntityParticipant_c [] v_eeps = ExternalEntityParticipant_c.getManySQ_EEPsOnR933(this);


ExternalEntityParticipant_c  v_eep = null;
for ( int i55023 = 0; i55023 < v_eeps.length; i55023++)
{
  v_eep = v_eeps[i55023] ;

if (v_eep != null) {
v_eep.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Newbridgeoperation()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Newbridgeoperation") ; 
               final ModelRoot modelRoot = getModelRoot();
Bridge_c v_brg = new Bridge_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_brg));


  this.relateAcrossR19To(v_brg);


if (v_brg != null) {
v_brg.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newBridgeOperation
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getEe_id();



   } // End get_ooa_id
  public  String       Getpath()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


String       v_result = "" ;


if ( (v_isInGenericPackage) )
{

if ( (  (v_package != null)) )
{

v_result = v_package.Getpath(			    
getName()) ;



}

else
{

v_result = v_component.Getpath(			    
true			    
,getName()) ;



}


}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR8(this);


ExternalEntityPackage_c v_epkg = ExternalEntityPackage_c.getOneS_EEPKOnR33(ExternalEntityInPackage_c.getOneS_EEIPOnR33(this));


v_result = v_epkg.getName() ;


ExternalEntityPackage_c v_epip = ExternalEntityPackage_c.getOneS_EEPKOnR34(EePackageInPackage_c.getOneS_EEPIPOnR35(v_epkg));


while ( (  (v_epip != null)) )
{

v_result = v_epip.getName() + "::" + v_result ;


v_epip = ExternalEntityPackage_c.getOneS_EEPKOnR34(EePackageInPackage_c.getOneS_EEPIPOnR35(v_epip));



}

v_result = v_domain.getName() + "::" + v_result + "::" + getName() ;



}

return v_result;



   } // End getPath
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  java.util.UUID         Getcontainingcomponentid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Getcontainingcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_domain = Domain_c.getOneS_DOMOnR8(this);


boolean      v_isInGenericPackage =   (v_domain == null) ;


if ( v_isInGenericPackage )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(this));


if (   (v_package != null) )
{

return v_package.Getcontainingcomponentid();



}

if (   (v_component != null) )
{

return v_component.getId();



}

User_c.Logerror(			    
"External Entity has no parent in External Entity.getContainingComponentId()"			    
,Getpath() ) ;


return Gd_c.Null_unique_id();



}

return v_domain.Getcontainingcomponentid();



   } // End getContainingComponentId
  public  java.util.UUID         Getcontainerid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Getcontainerid") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(this));


if (   (v_component != null) )
{

return v_component.getId();



}

else
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


if (   (v_package != null) )
{

return v_package.getPackage_id();



}


}

return Gd_c.Null_unique_id();



   } // End getContainerId
  public  void Pastebridge(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity", " Operation entered: ExternalEntity::Pastebridge") ; 
               final ModelRoot modelRoot = getModelRoot();
Bridge_c v_operation = (Bridge_c) modelRoot.getInstanceList(Bridge_c.class).getGlobal(null, p_Id);


if ( (  (v_operation != null)) )
{

ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR19(v_operation);


if ( (  (v_ee != null)) )
{

if (v_operation != null) {
v_operation.unrelateAcrossR19From(v_ee);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_operation != null) {
  v_operation.relateAcrossR19To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_operation != null) {
  v_operation.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_operation.Converttoinstance()			    
,v_operation.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


   } // End pasteBridge

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end External Entity
