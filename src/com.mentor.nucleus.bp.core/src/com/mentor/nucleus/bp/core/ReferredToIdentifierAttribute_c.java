      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ReferredToIdentifierAttribute_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_REFERRED_TO_IDENTIFIER_ATTRIBUTE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ReferredToIdentifierAttribute_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ReferredToIdentifierAttribute_c(ModelRoot modelRoot,
       java.util.UUID         p_m_attr_id,
       java.util.UUID         p_m_obj_id,
       int          p_m_oid_id,
       java.util.UUID         p_m_rel_id,
       java.util.UUID         p_m_oir_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_attr_id = IdAssigner.preprocessUUID(p_m_attr_id);
       m_oid_id = p_m_oid_id;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_oir_id = IdAssigner.preprocessUUID(p_m_oir_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);
        
    Object [] key = {m_attr_id,m_oir_id,new UUID(0, new Long(m_oid_id)),m_obj_id,m_rel_id};
    addInstanceToMap(key);
  }
  static public ReferredToIdentifierAttribute_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_attr_id,
       java.util.UUID         p_m_obj_id,
       int          p_m_oid_id,
       java.util.UUID         p_m_rel_id,
       java.util.UUID         p_m_oir_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ReferredToIdentifierAttribute_c.class);
      ReferredToIdentifierAttribute_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_attr_id,p_m_oir_id,new UUID(0, new Long(p_m_oid_id)),p_m_obj_id,p_m_rel_id};
          new_inst = (ReferredToIdentifierAttribute_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_attr_id = IdAssigner.preprocessUUID(p_m_attr_id);
       new_inst.m_oid_id = p_m_oid_id;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_oir_id = IdAssigner.preprocessUUID(p_m_oir_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ReferredToIdentifierAttribute_c(modelRoot,
p_m_attr_id,
p_m_obj_id,
p_m_oid_id,
p_m_rel_id,
p_m_oir_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ReferredToIdentifierAttribute_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_attr_id,
       java.util.UUID         p_m_obj_id,
       int          p_m_oid_id,
       java.util.UUID         p_m_rel_id,
       java.util.UUID         p_m_oir_id){
    InstanceList instances = modelRoot.getInstanceList(ReferredToIdentifierAttribute_c.class);
    ReferredToIdentifierAttribute_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_attr_id
        ,
        p_m_oir_id
        ,
        new UUID(0, new Long(p_m_oid_id))
        ,
        p_m_obj_id
        ,
        p_m_rel_id
            };
        source = (ReferredToIdentifierAttribute_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_attr_id = IdAssigner.preprocessUUID(p_m_attr_id);
       source.m_oid_id = p_m_oid_id;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_oir_id = IdAssigner.preprocessUUID(p_m_oir_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_rel_id = IdAssigner.preprocessUUID(p_m_rel_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    ReferredToIdentifierAttribute_c new_inst = new ReferredToIdentifierAttribute_c(modelRoot,
p_m_attr_id,
p_m_obj_id,
p_m_oid_id,
p_m_rel_id,
p_m_oir_id
);
    return new_inst;
  }
  public ReferredToIdentifierAttribute_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_attr_id = IdAssigner.NULL_UUID;   
     m_oir_id = IdAssigner.NULL_UUID;   
     m_obj_id = IdAssigner.NULL_UUID;   
     m_rel_id = IdAssigner.NULL_UUID;   
    Object [] key = {m_attr_id,m_oir_id,new UUID(0, new Long(m_oid_id)),m_obj_id,m_rel_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_attr_id,m_oir_id,new UUID(0, new Long(m_oid_id)),m_obj_id,m_rel_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_attr_id !=  p_newKey ){
	
		m_attr_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof ReferredToIdentifierAttribute_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ReferredToIdentifierAttribute_c)) {
           return false;
       }
       
       ReferredToIdentifierAttribute_c me = (ReferredToIdentifierAttribute_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getAttr_id()) || IdAssigner.NULL_UUID.equals(((ReferredToIdentifierAttribute_c)elem).getAttr_id())) && this != elem)) {
      	return false;
      }
      if (!getAttr_id().equals(((ReferredToIdentifierAttribute_c)elem).getAttr_id())) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getOir_id()) || IdAssigner.NULL_UUID.equals(((ReferredToIdentifierAttribute_c)elem).getOir_id())) && this != elem)) {
      	return false;
      }
      if (!getOir_id().equals(((ReferredToIdentifierAttribute_c)elem).getOir_id())) return false;
      if (getOid_id() != ((ReferredToIdentifierAttribute_c)elem).getOid_id()) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getObj_id()) || IdAssigner.NULL_UUID.equals(((ReferredToIdentifierAttribute_c)elem).getObj_id())) && this != elem)) {
      	return false;
      }
      if (!getObj_id().equals(((ReferredToIdentifierAttribute_c)elem).getObj_id())) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getRel_id()) || IdAssigner.NULL_UUID.equals(((ReferredToIdentifierAttribute_c)elem).getRel_id())) && this != elem)) {
      	return false;
      }
      if (!getRel_id().equals(((ReferredToIdentifierAttribute_c)elem).getRel_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ReferredToIdentifierAttribute_c)) {
           return false;
       }
       
       ReferredToIdentifierAttribute_c me = (ReferredToIdentifierAttribute_c)elem;
      if (!getAttr_idCachedValue().equals(((ReferredToIdentifierAttribute_c)elem).getAttr_idCachedValue())) return false;
      if (!getOir_idCachedValue().equals(((ReferredToIdentifierAttribute_c)elem).getOir_idCachedValue())) return false;
      if (getOid_idCachedValue() != ((ReferredToIdentifierAttribute_c)elem).getOid_idCachedValue()) return false;
      if (!getObj_idCachedValue().equals(((ReferredToIdentifierAttribute_c)elem).getObj_idCachedValue())) return false;
      if (!getRel_idCachedValue().equals(((ReferredToIdentifierAttribute_c)elem).getRel_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_attr_id ;
  private int          m_oid_id ;
  private java.util.UUID         m_oir_id ;
  private java.util.UUID         m_obj_id ;
  private java.util.UUID         m_rel_id ;
      
// declare association references from this class
  
  
    
// referring navigation

ClassIdentifierAttribute_c IsIdentifiedInThisAssociationByClassIdentifierAttribute ;
public void relateAcrossR110To(ClassIdentifierAttribute_c target)
{
	relateAcrossR110To(target, true);
}
public void relateAcrossR110To(ClassIdentifierAttribute_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsIdentifiedInThisAssociationByClassIdentifierAttribute) return;  // already related

    if ( IsIdentifiedInThisAssociationByClassIdentifierAttribute != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsIdentifiedInThisAssociationByClassIdentifierAttribute != null) {
        UmlProblem.removeXtUMLProblem(this, IsIdentifiedInThisAssociationByClassIdentifierAttribute);
    
        IsIdentifiedInThisAssociationByClassIdentifierAttribute.clearBackPointerR110To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ReferredToIdentifierAttribute_c.relateAcrossR110To(ClassIdentifierAttribute_c target)", 
			"Relate performed across R110 from Referred To Identifier Attribute to Class Identifier Attribute without unrelate of prior instance.");  
		}
    }
                
    	IsIdentifiedInThisAssociationByClassIdentifierAttribute = target ;
        if(IdAssigner.NULL_UUID.equals(target.getAttr_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_attr_id = target.getAttr_idCachedValue();
        }
        if(IdAssigner.NULL_UUID.equals(target.getObj_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_obj_id = target.getObj_idCachedValue();
        }
        if(target.getOid_id() == 0)
        {
            // do not update cached value
        } else {
          // update cached value
          m_oid_id = target.getOid_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR110To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "110", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR110From(ClassIdentifierAttribute_c target)
{
	unrelateAcrossR110From(target, true);
}
public void unrelateAcrossR110From(ClassIdentifierAttribute_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsIdentifiedInThisAssociationByClassIdentifierAttribute == null) return;  // already unrelated
	
	if (target != IsIdentifiedInThisAssociationByClassIdentifierAttribute) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R110", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR110To(this);
    }
    

      if(IsIdentifiedInThisAssociationByClassIdentifierAttribute != null) {
      
        m_attr_id = IsIdentifiedInThisAssociationByClassIdentifierAttribute.getAttr_id();
        if(IdAssigner.NULL_UUID.equals(m_attr_id))
        {
          m_attr_id = IsIdentifiedInThisAssociationByClassIdentifierAttribute.getAttr_idCachedValue();
        }       
        m_obj_id = IsIdentifiedInThisAssociationByClassIdentifierAttribute.getObj_id();
        if(IdAssigner.NULL_UUID.equals(m_obj_id))
        {
          m_obj_id = IsIdentifiedInThisAssociationByClassIdentifierAttribute.getObj_idCachedValue();
        }       
        m_oid_id = IsIdentifiedInThisAssociationByClassIdentifierAttribute.getOid_id();
        if(m_oid_id == 0)
        {
          m_oid_id = IsIdentifiedInThisAssociationByClassIdentifierAttribute.getOid_idCachedValue();
        }       
        IsIdentifiedInThisAssociationByClassIdentifierAttribute = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "110", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}


    
// referring navigation

ReferredToClassInAssoc_c IdentifiesForThisAssociationReferredToClassInAssoc ;
public void relateAcrossR110To(ReferredToClassInAssoc_c target)
{
	relateAcrossR110To(target, true);
}
public void relateAcrossR110To(ReferredToClassInAssoc_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IdentifiesForThisAssociationReferredToClassInAssoc) return;  // already related

    if ( IdentifiesForThisAssociationReferredToClassInAssoc != target ) {
    
    Object oldKey = getInstanceKey();

    if (IdentifiesForThisAssociationReferredToClassInAssoc != null) {
        UmlProblem.removeXtUMLProblem(this, IdentifiesForThisAssociationReferredToClassInAssoc);
    
        IdentifiesForThisAssociationReferredToClassInAssoc.clearBackPointerR110To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ReferredToIdentifierAttribute_c.relateAcrossR110To(ReferredToClassInAssoc_c target)", 
			"Relate performed across R110 from Referred To Identifier Attribute to Referred To Class in Assoc without unrelate of prior instance.");  
		}
    }
                
    	IdentifiesForThisAssociationReferredToClassInAssoc = target ;
        if(IdAssigner.NULL_UUID.equals(target.getOir_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_oir_id = target.getOir_idCachedValue();
        }
        if(IdAssigner.NULL_UUID.equals(target.getObj_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_obj_id = target.getObj_idCachedValue();
        }
        if(IdAssigner.NULL_UUID.equals(target.getRel_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_rel_id = target.getRel_idCachedValue();
        }
        if(target.getOid_id() == 0)
        {
            // do not update cached value
        } else {
          // update cached value
          m_oid_id = target.getOid_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR110To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "110", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR110From(ReferredToClassInAssoc_c target)
{
	unrelateAcrossR110From(target, true);
}
public void unrelateAcrossR110From(ReferredToClassInAssoc_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IdentifiesForThisAssociationReferredToClassInAssoc == null) return;  // already unrelated
	
	if (target != IdentifiesForThisAssociationReferredToClassInAssoc) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R110", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR110To(this);
    }
    

      if(IdentifiesForThisAssociationReferredToClassInAssoc != null) {
      
        m_oir_id = IdentifiesForThisAssociationReferredToClassInAssoc.getOir_id();
        if(IdAssigner.NULL_UUID.equals(m_oir_id))
        {
          m_oir_id = IdentifiesForThisAssociationReferredToClassInAssoc.getOir_idCachedValue();
        }       
        m_obj_id = IdentifiesForThisAssociationReferredToClassInAssoc.getObj_id();
        if(IdAssigner.NULL_UUID.equals(m_obj_id))
        {
          m_obj_id = IdentifiesForThisAssociationReferredToClassInAssoc.getObj_idCachedValue();
        }       
        m_rel_id = IdentifiesForThisAssociationReferredToClassInAssoc.getRel_id();
        if(IdAssigner.NULL_UUID.equals(m_rel_id))
        {
          m_rel_id = IdentifiesForThisAssociationReferredToClassInAssoc.getRel_idCachedValue();
        }       
        m_oid_id = IdentifiesForThisAssociationReferredToClassInAssoc.getOid_id();
        if(m_oid_id == 0)
        {
          m_oid_id = IdentifiesForThisAssociationReferredToClassInAssoc.getOid_idCachedValue();
        }       
        IdentifiesForThisAssociationReferredToClassInAssoc = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "110", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ClassIdentifierAttribute_c [] targets)
{
    return getOneO_RTIDAOnR110(targets, null);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ClassIdentifierAttribute_c [] targets, ClassQueryInterface_c test)
{
    ReferredToIdentifierAttribute_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneO_RTIDAOnR110(targets[i], test);
        }
    }

    return ret_val;
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ClassIdentifierAttribute_c target)
{
  return getOneO_RTIDAOnR110(target, null);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ClassIdentifierAttribute_c target, boolean loadComponent)
{
    return getOneO_RTIDAOnR110(target.getModelRoot(), target, null, loadComponent);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ClassIdentifierAttribute_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneO_RTIDAOnR110(target.getModelRoot(), target, test);
  }
  return null;
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ModelRoot modelRoot, ClassIdentifierAttribute_c target, ClassQueryInterface_c test)
{
	return getOneO_RTIDAOnR110(modelRoot, target, test, true);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ModelRoot modelRoot, ClassIdentifierAttribute_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  ReferredToIdentifierAttribute_c result = null;
  
  result=find_getOneO_RTIDAOnR110(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,ReferredToIdentifierAttribute_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneO_RTIDAOnR110(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static ReferredToIdentifierAttribute_c find_getOneO_RTIDAOnR110(ModelRoot modelRoot, ClassIdentifierAttribute_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110) {
	    for ( int i = 0; i < target.backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110.size(); ++i ) {
	      ReferredToIdentifierAttribute_c source = (ReferredToIdentifierAttribute_c)target.backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ClassIdentifierAttribute_c [] targets)
{
  return getManyO_RTIDAsOnR110(targets, null);
}
public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ClassIdentifierAttribute_c [] targets, boolean loadComponent)
{
  return getManyO_RTIDAsOnR110(targets, null, loadComponent);
}
public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ClassIdentifierAttribute_c [] targets, ClassQueryInterface_c test)
{
	return getManyO_RTIDAsOnR110(targets, test, true);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ClassIdentifierAttribute_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ReferredToIdentifierAttribute_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ReferredToIdentifierAttribute_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(ReferredToIdentifierAttribute_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110) {
	    for (int j = 0; j < targets[i].backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110.size(); ++j) {
	      ReferredToIdentifierAttribute_c source = (ReferredToIdentifierAttribute_c)targets[i].backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ReferredToIdentifierAttribute_c[] ret_set = new ReferredToIdentifierAttribute_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ReferredToIdentifierAttribute_c[0];
  }
  }

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ClassIdentifierAttribute_c target)
{
  return getManyO_RTIDAsOnR110(target, null);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ClassIdentifierAttribute_c target, boolean loadComponent)
{
  return getManyO_RTIDAsOnR110(target, null, loadComponent);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ClassIdentifierAttribute_c target, ClassQueryInterface_c test)
{
	return getManyO_RTIDAsOnR110(target, test, true);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ClassIdentifierAttribute_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ReferredToIdentifierAttribute_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ReferredToIdentifierAttribute_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110) {
    for (int i = 0; i < target.backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110.size(); ++i) {
      ReferredToIdentifierAttribute_c source = (ReferredToIdentifierAttribute_c)target.backPointer_IdentifiesForThisAssociationReferredToIdentifierAttributeIdentifiesForThisAssociation_R110.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ReferredToIdentifierAttribute_c[] ret_set = new ReferredToIdentifierAttribute_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ReferredToIdentifierAttribute_c[0];
	}
  }

  
    
      
public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ReferredToClassInAssoc_c [] targets)
{
    return getOneO_RTIDAOnR110(targets, null);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ReferredToClassInAssoc_c [] targets, ClassQueryInterface_c test)
{
    ReferredToIdentifierAttribute_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneO_RTIDAOnR110(targets[i], test);
        }
    }

    return ret_val;
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ReferredToClassInAssoc_c target)
{
  return getOneO_RTIDAOnR110(target, null);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ReferredToClassInAssoc_c target, boolean loadComponent)
{
    return getOneO_RTIDAOnR110(target.getModelRoot(), target, null, loadComponent);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ReferredToClassInAssoc_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneO_RTIDAOnR110(target.getModelRoot(), target, test);
  }
  return null;
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ModelRoot modelRoot, ReferredToClassInAssoc_c target, ClassQueryInterface_c test)
{
	return getOneO_RTIDAOnR110(modelRoot, target, test, true);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR110(ModelRoot modelRoot, ReferredToClassInAssoc_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  ReferredToIdentifierAttribute_c result = null;
  
  result=find_getOneO_RTIDAOnR110(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,ReferredToIdentifierAttribute_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneO_RTIDAOnR110(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static ReferredToIdentifierAttribute_c find_getOneO_RTIDAOnR110(ModelRoot modelRoot, ReferredToClassInAssoc_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110) {
	    for ( int i = 0; i < target.backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110.size(); ++i ) {
	      ReferredToIdentifierAttribute_c source = (ReferredToIdentifierAttribute_c)target.backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ReferredToClassInAssoc_c [] targets)
{
  return getManyO_RTIDAsOnR110(targets, null);
}
public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ReferredToClassInAssoc_c [] targets, boolean loadComponent)
{
  return getManyO_RTIDAsOnR110(targets, null, loadComponent);
}
public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ReferredToClassInAssoc_c [] targets, ClassQueryInterface_c test)
{
	return getManyO_RTIDAsOnR110(targets, test, true);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ReferredToClassInAssoc_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ReferredToIdentifierAttribute_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ReferredToIdentifierAttribute_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(ReferredToIdentifierAttribute_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110) {
	    for (int j = 0; j < targets[i].backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110.size(); ++j) {
	      ReferredToIdentifierAttribute_c source = (ReferredToIdentifierAttribute_c)targets[i].backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ReferredToIdentifierAttribute_c[] ret_set = new ReferredToIdentifierAttribute_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ReferredToIdentifierAttribute_c[0];
  }
  }

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ReferredToClassInAssoc_c target)
{
  return getManyO_RTIDAsOnR110(target, null);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ReferredToClassInAssoc_c target, boolean loadComponent)
{
  return getManyO_RTIDAsOnR110(target, null, loadComponent);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ReferredToClassInAssoc_c target, ClassQueryInterface_c test)
{
	return getManyO_RTIDAsOnR110(target, test, true);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR110(ReferredToClassInAssoc_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ReferredToIdentifierAttribute_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ReferredToIdentifierAttribute_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110) {
    for (int i = 0; i < target.backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110.size(); ++i) {
      ReferredToIdentifierAttribute_c source = (ReferredToIdentifierAttribute_c)target.backPointer_IsIdentifiedInThisAssociationByReferredToIdentifierAttributeIsIdentifiedInThisAssociationBy_R110.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ReferredToIdentifierAttribute_c[] ret_set = new ReferredToIdentifierAttribute_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ReferredToIdentifierAttribute_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<AttributeReferenceInClass_c> backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111 = new ArrayList<AttributeReferenceInClass_c>();

public void setAttributeReferenceInClassOrderInChildListR111(AttributeReferenceInClass_c target, int index) {
	unrelateAcrossR111From(target);
	AttributeReferenceInClass_c[] elements = AttributeReferenceInClass_c.getManyO_REFsOnR111(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR111From((AttributeReferenceInClass_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR111To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR111To((AttributeReferenceInClass_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR111To(AttributeReferenceInClass_c target)
{
  if (target != null) {
    target.relateAcrossR111To(this, true) ;
  }
}

public void relateAcrossR111To(AttributeReferenceInClass_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR111To(this, notifyChanges) ;
  }
}

public void setBackPointerR111To(AttributeReferenceInClass_c target)
{
  	synchronized (backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111) {
		backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111.add(target);
	}
}

public void unrelateAcrossR111From(AttributeReferenceInClass_c target)
{
  if (target != null) {
    target.unrelateAcrossR111From(this, true) ;
  }
}

public void unrelateAcrossR111From(AttributeReferenceInClass_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR111From(this, notifyChanges) ;
  }
}

public void clearBackPointerR111To(AttributeReferenceInClass_c target)
{
  synchronized (backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111) {
	    backPointer_IsUsedToReferClassByAttributeReferenceInClassIsUsedToReferClassBy_R111.remove(target);
	}
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR111(AttributeReferenceInClass_c [] targets)
{
    return getOneO_RTIDAOnR111(targets, null);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR111(AttributeReferenceInClass_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_RTIDAOnR111(targets, test, true);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR111(AttributeReferenceInClass_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ReferredToIdentifierAttribute_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ReferredToIdentifierAttribute_c candidate_val = getOneO_RTIDAOnR111(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_RTIDAOnR111(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR111(AttributeReferenceInClass_c target)
{
	return getOneO_RTIDAOnR111(target, true);
}
public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR111(AttributeReferenceInClass_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.RefersAcrossAssociationViaReferredToIdentifierAttribute != null){
		target.RefersAcrossAssociationViaReferredToIdentifierAttribute.loadProxy();
	}
	}
    return target.RefersAcrossAssociationViaReferredToIdentifierAttribute ;
  } else {
    return null;
  }
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(AttributeReferenceInClass_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_RTIDAsOnR111(targets, test, true);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(AttributeReferenceInClass_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ReferredToIdentifierAttribute_c[0];
  
  
  LinkedHashSet<ReferredToIdentifierAttribute_c> elementsSet = new LinkedHashSet<ReferredToIdentifierAttribute_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RefersAcrossAssociationViaReferredToIdentifierAttribute == null)
	  targets[i].loadProxy();
    ReferredToIdentifierAttribute_c associate = targets[i].RefersAcrossAssociationViaReferredToIdentifierAttribute;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ReferredToIdentifierAttribute_c[] result = new ReferredToIdentifierAttribute_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(AttributeReferenceInClass_c [] targets)
{
  return getManyO_RTIDAsOnR111(targets, null);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(AttributeReferenceInClass_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    AttributeReferenceInClass_c [] targetArray = new AttributeReferenceInClass_c[1];
    targetArray[0] = target;
    return getManyO_RTIDAsOnR111(targetArray, test, loadComponent);
  } else {
    ReferredToIdentifierAttribute_c [] result = new ReferredToIdentifierAttribute_c [0] ;
    return result ;
  }
  
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(AttributeReferenceInClass_c target,
    ClassQueryInterface_c test)
{
    return getManyO_RTIDAsOnR111(target, null, true);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(AttributeReferenceInClass_c target)
{
    return getManyO_RTIDAsOnR111(target, null, true);
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(AttributeReferenceInClass_c target, boolean loadComponent)
{
    return getManyO_RTIDAsOnR111(target, null, loadComponent);
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR111(ReferringClassInAssoc_c target)
{
  return ReferredToIdentifierAttribute_c.getOneO_RTIDAOnR111(AttributeReferenceInClass_c.getOneO_REFOnR111(target)) ;
}

public static ReferredToIdentifierAttribute_c getOneO_RTIDAOnR111(ReferringClassInAssoc_c target,
    ClassQueryInterface_c test)
{
  return ReferredToIdentifierAttribute_c.getOneO_RTIDAOnR111(AttributeReferenceInClass_c.getManyO_REFsOnR111(target), test) ;
}

public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(ReferringClassInAssoc_c target,
    ClassQueryInterface_c test)
{
	return getManyO_RTIDAsOnR111(target, test, true);
}
public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(ReferringClassInAssoc_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  AttributeReferenceInClass_c [] associators = AttributeReferenceInClass_c.getManyO_REFsOnR111(target, loadComponent) ;
    return ReferredToIdentifierAttribute_c.getManyO_RTIDAsOnR111(associators, test, loadComponent) ;
}
public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(ReferringClassInAssoc_c target)
{
    return getManyO_RTIDAsOnR111(target, null, true);
}
public static ReferredToIdentifierAttribute_c [] getManyO_RTIDAsOnR111(ReferringClassInAssoc_c target, boolean loadComponent)
{
    return getManyO_RTIDAsOnR111(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R110
	  instances = baseRoot.getInstanceList(ReferredToClassInAssoc_c.class);
      ReferredToClassInAssoc_c relInst38576 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           ReferredToClassInAssoc_c source = (ReferredToClassInAssoc_c)cursor.next() ;
           if (     source.getOid_idCachedValue() == m_oid_id && 
     source.getOir_idCachedValue().equals(m_oir_id) && 
     source.getObj_idCachedValue().equals(m_obj_id) && 
     source.getRel_idCachedValue().equals(m_rel_id) 		){
  		relInst38576 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst38576 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38576) && !isProxy())) {
	      relInst38576.relateAcrossR110To(this, notifyChanges);
	  }
	  }
	          
      ClassIdentifierAttribute_c relInst38577 = (ClassIdentifierAttribute_c) baseRoot.getInstanceList(ClassIdentifierAttribute_c.class).get(new Object[] {m_attr_id,new UUID(0, new Long(m_oid_id)),m_obj_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38577 == null) {
      			relInst38577 = (ClassIdentifierAttribute_c) Ooaofooa.getDefaultInstance().getInstanceList(ClassIdentifierAttribute_c.class).get(new Object[] {m_attr_id,new UUID(0, new Long(m_oid_id)),m_obj_id});
      		}
			if (relInst38577 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38577 = (ClassIdentifierAttribute_c) roots[i].getInstanceList(ClassIdentifierAttribute_c.class).get(new Object[] {m_attr_id,new UUID(0, new Long(m_oid_id)),m_obj_id});
					if (relInst38577 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38577 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38577) && !isProxy())) {
	      relInst38577.relateAcrossR110To(this, notifyChanges);
	  }
	  }
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R110
      // R_RTO
		  inst=IdentifiesForThisAssociationReferredToClassInAssoc;
			unrelateAcrossR110From(IdentifiesForThisAssociationReferredToClassInAssoc, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // O_OIDA
		  inst=IsIdentifiedInThisAssociationByClassIdentifierAttribute;
			unrelateAcrossR110From(IsIdentifiedInThisAssociationByClassIdentifierAttribute, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ReferredToIdentifierAttribute_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ReferredToIdentifierAttribute_c inst = (ReferredToIdentifierAttribute_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ReferredToIdentifierAttribute_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ReferredToIdentifierAttribute_c ReferredToIdentifierAttributeInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ReferredToIdentifierAttribute_c result=findReferredToIdentifierAttributeInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,ReferredToIdentifierAttribute_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findReferredToIdentifierAttributeInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static ReferredToIdentifierAttribute_c findReferredToIdentifierAttributeInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ReferredToIdentifierAttribute_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ReferredToIdentifierAttribute_c x = (ReferredToIdentifierAttribute_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static ReferredToIdentifierAttribute_c ReferredToIdentifierAttributeInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ReferredToIdentifierAttributeInstance(modelRoot,test,true);
  }
  
  public static ReferredToIdentifierAttribute_c ReferredToIdentifierAttributeInstance(ModelRoot modelRoot)
  {
	 return ReferredToIdentifierAttributeInstance(modelRoot,null,true);
  }

  public static ReferredToIdentifierAttribute_c [] ReferredToIdentifierAttributeInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, ReferredToIdentifierAttribute_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(ReferredToIdentifierAttribute_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ReferredToIdentifierAttribute_c x = (ReferredToIdentifierAttribute_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ReferredToIdentifierAttribute_c[] ret_set = new ReferredToIdentifierAttribute_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ReferredToIdentifierAttribute_c[0];
			}		
		} 
  }
  public static ReferredToIdentifierAttribute_c [] ReferredToIdentifierAttributeInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ReferredToIdentifierAttributeInstances(modelRoot,test,true);
  }
  public static ReferredToIdentifierAttribute_c [] ReferredToIdentifierAttributeInstances(ModelRoot modelRoot)
  {
	return ReferredToIdentifierAttributeInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Referred To Identifier Attribute.dispose call: ";
	ReferredToClassInAssoc_c testR110Inst = ReferredToClassInAssoc_c.getOneR_RTOOnR110(this, false);

	if ( testR110Inst != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "110 ";	
 	}

   ClassIdentifierAttribute_c testR110InstOth = ClassIdentifierAttribute_c.getOneO_OIDAOnR110(this, false);

   if ( testR110InstOth != null )
   {
   delete_error = true;
   errorMsg = errorMsg + "110 ";   
	}		    
 	AttributeReferenceInClass_c testR111Inst = AttributeReferenceInClass_c.getOneO_REFOnR111(this, false);

 	if ( testR111Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "111 ";
 	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Referred To Identifier Attribute", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("attr_id")){
         return true;
      }
      if(attributeName.equals("oir_id")){
         return true;
      }
      if(attributeName.equals("obj_id")){
         return true;
      }
      if(attributeName.equals("rel_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getAttr_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getAttr_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    tempID= getOir_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getOir_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    longID= getOid_id();
    
        if(longID == -1)
	      longID=getOid_idCachedValue(); 
	      result.append(longID+"_");
    tempID= getObj_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getObj_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    tempID= getRel_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getRel_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getAttr_idLongBased()
  {
    if ( IsIdentifiedInThisAssociationByClassIdentifierAttribute != null )
    {
      return IsIdentifiedInThisAssociationByClassIdentifierAttribute.getAttr_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getAttr_id()
  {
    if ( IsIdentifiedInThisAssociationByClassIdentifierAttribute != null )
    {
      return IsIdentifiedInThisAssociationByClassIdentifierAttribute.getAttr_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getAttr_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_attr_id) )
      return m_attr_id;
    else
      return getAttr_id();
  }
  
  public void setAttr_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_attr_id)){
	        return;
	    }
	}else if(m_attr_id != null){
	    if(m_attr_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Attr_id", m_attr_id, newValue,true); 
   m_attr_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getOid_id()
  {
    if ( IdentifiesForThisAssociationReferredToClassInAssoc != null )
    {
      return IdentifiesForThisAssociationReferredToClassInAssoc.getOid_id();
    }
    if ( IsIdentifiedInThisAssociationByClassIdentifierAttribute != null )
    {
      return IsIdentifiedInThisAssociationByClassIdentifierAttribute.getOid_id();
    }
    return 0;
  }


  public int getOid_idCachedValue()
  {
      return m_oid_id;
  }
  
  public long getOir_idLongBased()
  {
    if ( IdentifiesForThisAssociationReferredToClassInAssoc != null )
    {
      return IdentifiesForThisAssociationReferredToClassInAssoc.getOir_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getOir_id()
  {
    if ( IdentifiesForThisAssociationReferredToClassInAssoc != null )
    {
      return IdentifiesForThisAssociationReferredToClassInAssoc.getOir_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getOir_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_oir_id) )
      return m_oir_id;
    else
      return getOir_id();
  }
  
  public void setOir_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_oir_id)){
	        return;
	    }
	}else if(m_oir_id != null){
	    if(m_oir_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Oir_id", m_oir_id, newValue,true); 
   m_oir_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getObj_idLongBased()
  {
    if ( IsIdentifiedInThisAssociationByClassIdentifierAttribute != null )
    {
      return IsIdentifiedInThisAssociationByClassIdentifierAttribute.getObj_idLongBased();
    }
    if ( IdentifiesForThisAssociationReferredToClassInAssoc != null )
    {
      return IdentifiesForThisAssociationReferredToClassInAssoc.getObj_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getObj_id()
  {
    if ( IsIdentifiedInThisAssociationByClassIdentifierAttribute != null )
    {
      return IsIdentifiedInThisAssociationByClassIdentifierAttribute.getObj_id();
    }
    if ( IdentifiesForThisAssociationReferredToClassInAssoc != null )
    {
      return IdentifiesForThisAssociationReferredToClassInAssoc.getObj_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getObj_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_obj_id) )
      return m_obj_id;
    else
      return getObj_id();
  }
  
  public long getRel_idLongBased()
  {
    if ( IdentifiesForThisAssociationReferredToClassInAssoc != null )
    {
      return IdentifiesForThisAssociationReferredToClassInAssoc.getRel_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getRel_id()
  {
    if ( IdentifiesForThisAssociationReferredToClassInAssoc != null )
    {
      return IdentifiesForThisAssociationReferredToClassInAssoc.getRel_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getRel_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_rel_id) )
      return m_rel_id;
    else
      return getRel_id();
  }
  
  public void setRel_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_rel_id)){
	        return;
	    }
	}else if(m_rel_id != null){
	    if(m_rel_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Rel_id", m_rel_id, newValue,true); 
   m_rel_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Referred To Identifier Attribute", //$NON-NLS-1$
	  " Operation entered: Referred To Identifier Attribute::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ReferredToIdentifierAttribute_c [] objs = ReferredToIdentifierAttribute_c.ReferredToIdentifierAttributeInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Referred To Identifier Attribute", //$NON-NLS-1$
	  " Operation entered: Referred To Identifier Attribute::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ReferredToIdentifierAttribute_c_test38579_c implements ClassQueryInterface_c
    {
	  ReferredToIdentifierAttribute_c_test38579_c( java.util.UUID            p38580, java.util.UUID            p38581, int             p38582, java.util.UUID            p38583, java.util.UUID            p38584 ) {
	                      m_p38580 = p38580; 
m_p38581 = p38581; 
m_p38582 = p38582; 
m_p38583 = p38583; 
m_p38584 = p38584;
	  }
	  private java.util.UUID             m_p38580; private java.util.UUID             m_p38581; private int              m_p38582; private java.util.UUID             m_p38583; private java.util.UUID             m_p38584; 
	  public boolean evaluate (Object candidate)
	  {
	      ReferredToIdentifierAttribute_c selected = (ReferredToIdentifierAttribute_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAttr_id().equals(m_p38580)) & (selected.getOir_id().equals(m_p38581)) & (selected.getOid_id() == (m_p38582)) & (selected.getObj_id().equals(m_p38583)) & (selected.getRel_id().equals(m_p38584));
	      return retval;
	  }
    }

    ReferredToIdentifierAttribute_c [] objs38578 = 
    ReferredToIdentifierAttribute_c.ReferredToIdentifierAttributeInstances(modelRoot, new ReferredToIdentifierAttribute_c_test38579_c(getAttr_id(), getOir_id(), getOid_id(), getObj_id(), getRel_id())) ;

    if ( (  (objs38578.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Referred To Identifier Attribute", //$NON-NLS-1$
           "Consistency: Object: Referred To Identifier Attribute: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38578.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Referred To Identifier Attribute: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38578.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs38578.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Referred To Identifier Attribute", //$NON-NLS-1$
           "Consistency: Object: Referred To Identifier Attribute: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38578.length )  + " Attr_ID: " + "Not Printable"  + " OIR_ID: " + "Not Printable"  + " Oid_ID: " + Integer.toString(getOid_id())  + " Obj_ID: " + "Not Printable"  + " Rel_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Referred To Identifier Attribute: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38578.length )  + " Attr_ID: " + "Not Printable"  + " OIR_ID: " + "Not Printable"  + " Oid_ID: " + Integer.toString(getOid_id())  + " Obj_ID: " + "Not Printable"  + " Rel_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Referred To Identifier Attribute is a link class in association: rel.Numb = 110
            // Other side
          // The other side class in the association is: Class Identifier Attribute
    class ClassIdentifierAttribute_c_test38588_c implements ClassQueryInterface_c
    {
	  ClassIdentifierAttribute_c_test38588_c( java.util.UUID            p38589, int             p38590, java.util.UUID            p38591 ) {
	            m_p38589 = p38589; 
m_p38590 = p38590; 
m_p38591 = p38591;
	  }
	  private java.util.UUID             m_p38589; private int              m_p38590; private java.util.UUID             m_p38591; 
	  public boolean evaluate (Object candidate)
	  {
	      ClassIdentifierAttribute_c selected = (ClassIdentifierAttribute_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAttr_id().equals(m_p38589)) & (selected.getOid_id() == (m_p38590)) & (selected.getObj_id().equals(m_p38591));
	      return retval;
	  }
    }

    ClassIdentifierAttribute_c [] objs38587 = 
    ClassIdentifierAttribute_c.ClassIdentifierAttributeInstances(modelRoot, new ClassIdentifierAttribute_c_test38588_c(getAttr_id(), getOid_id(), getObj_id())) ;

          // The other side class is unconditional
    if ( (  (objs38587.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Referred To Identifier Attribute", //$NON-NLS-1$
           "Consistency: Object: Referred To Identifier Attribute: Association: 110: Cardinality of unconditional other side of link is equal to zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38587.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Referred To Identifier Attribute: Association: 110: Cardinality of unconditional other side of link is equal to zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38587.length )  , e); 
      }
      retval = false;

    }

          // Associated Other Side: rel.Numb = 111
            // Link Object: Attribute Reference in Class
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Referred To Identifier Attribute", " Operation entered: ReferredToIdentifierAttribute::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
AttributeReferenceInClass_c [] v_refs = AttributeReferenceInClass_c.getManyO_REFsOnR111(this);


AttributeReferenceInClass_c  v_ref = null;
for ( int i37057 = 0; i37057 < v_refs.length; i37057++)
{
  v_ref = v_refs[i37057] ;

if (v_ref != null) {
v_ref.Migraterefattrordispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ClassIdentifierAttribute_c v_oida = ClassIdentifierAttribute_c.getOneO_OIDAOnR110(this);


ReferredToClassInAssoc_c v_rto = ReferredToClassInAssoc_c.getOneR_RTOOnR110(this);


unrelateAcrossR110From( v_oida ) ; unrelateAcrossR110From( v_rto ) ;


if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  String       Get_name()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Referred To Identifier Attribute", " Operation entered: ReferredToIdentifierAttribute::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassIdentifierAttribute_c v_cia = ClassIdentifierAttribute_c.getOneO_OIDAOnR110(this);


Association_c v_assoc = Association_c.getOneR_RELOnR201(ClassInAssociation_c.getOneR_OIROnR203(ReferredToClassInAssoc_c.getOneR_RTOOnR110(this)));


String       v_result = v_cia.getLocalattributename() + " {R" ;


v_result = v_result + Gd_c.Int_to_string(			    
v_assoc.getNumb()) ;


v_result = v_result + "}" ;


return v_result;



   } // End get_name

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Referred To Identifier Attribute
