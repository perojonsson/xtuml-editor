      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.PackageableElement_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_PACKAGEABLE_ELEMENT extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class PackageableElement_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public PackageableElement_c(ModelRoot modelRoot,
       java.util.UUID         p_m_element_id,
       int  p_m_visibility,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_component_id,
       int  p_m_type)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_element_id = IdAssigner.preprocessUUID(p_m_element_id);
       //extract 28 bit value only            
       m_element_idLongBased = 0xfffffff & p_m_element_id.getLeastSignificantBits();
       m_visibility = p_m_visibility;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
       m_type = p_m_type;
        
    setUniqueId(m_element_id);
    Object [] key = {m_element_id};
    addInstanceToMap(key);
  }
  static public PackageableElement_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_element_id,
       int  p_m_visibility,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_component_id,
       int  p_m_type, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(PackageableElement_c.class);
      PackageableElement_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_element_id};
          new_inst = (PackageableElement_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_element_id = IdAssigner.preprocessUUID(p_m_element_id);
       //extract 28 bit value only            
       new_inst.m_element_idLongBased = 0xfffffff & p_m_element_id.getLeastSignificantBits();
       new_inst.m_visibility = p_m_visibility;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
       new_inst.m_type = p_m_type;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new PackageableElement_c(modelRoot,
p_m_element_id,
p_m_visibility,
p_m_package_id,
p_m_component_id,
p_m_type
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public PackageableElement_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_element_id,
       int  p_m_visibility,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_component_id,
       int  p_m_type){
    InstanceList instances = modelRoot.getInstanceList(PackageableElement_c.class);
    PackageableElement_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_element_id
            };
        source = (PackageableElement_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_element_id = IdAssigner.preprocessUUID(p_m_element_id);
       //extract 28 bit value only            
       source.m_element_idLongBased = 0xfffffff & p_m_element_id.getLeastSignificantBits();
       source.m_visibility = p_m_visibility;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
       source.m_type = p_m_type;
        
           return source ;
        }
      }
      // there is no instance matching the id
    PackageableElement_c new_inst = new PackageableElement_c(modelRoot,
p_m_element_id,
p_m_visibility,
p_m_package_id,
p_m_component_id,
p_m_type
);
    return new_inst;
  }
  public PackageableElement_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_element_id = idAssigner.createUUID();
     m_visibility = Visibility_c.OOA_UNINITIALIZED_ENUM;
     m_package_id = IdAssigner.NULL_UUID;   
     m_component_id = IdAssigner.NULL_UUID;   
     m_type = Elementtypeconstants_c.OOA_UNINITIALIZED_ENUM;
    setUniqueId(m_element_id);
    Object [] key = {m_element_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_element_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_element_id !=  p_newKey ){
	
		m_element_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof PackageableElement_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof PackageableElement_c)) {
           return false;
       }
       
       PackageableElement_c me = (PackageableElement_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getElement_id()) || IdAssigner.NULL_UUID.equals(((PackageableElement_c)elem).getElement_id())) && this != elem)) {
      	return false;
      }
      if (!getElement_id().equals(((PackageableElement_c)elem).getElement_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof PackageableElement_c)) {
           return false;
       }
       
       PackageableElement_c me = (PackageableElement_c)elem;
      if (!getElement_id().equals(((PackageableElement_c)elem).getElement_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_element_id ;
  private long m_element_idLongBased ;
  private int  m_visibility ;
  private java.util.UUID         m_package_id ;
  private java.util.UUID         m_component_id ;
  private int  m_type ;
      
// declare association references from this class
  
  
    
// referring navigation

Package_c ContainedByPackage ;
public void relateAcrossR8000To(Package_c target)
{
	relateAcrossR8000To(target, true);
}
public void relateAcrossR8000To(Package_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ContainedByPackage) return;  // already related

    if ( ContainedByPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (ContainedByPackage != null) {
        UmlProblem.removeXtUMLProblem(this, ContainedByPackage);
    
        ContainedByPackage.clearBackPointerR8000To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"PackageableElement_c.relateAcrossR8000To(Package_c target)", 
			"Relate performed across R8000 from Packageable Element to Package without unrelate of prior instance.");  
		}
    }
                
    	ContainedByPackage = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8000To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8000", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8000From(Package_c target)
{
	unrelateAcrossR8000From(target, true);
}
public void unrelateAcrossR8000From(Package_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ContainedByPackage == null) return;  // already unrelated
	
	if (target != ContainedByPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8000", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8000To(this);
    }
    

      if(ContainedByPackage != null) {
      
        m_package_id = ContainedByPackage.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_package_id))
        {
          m_package_id = ContainedByPackage.getPackage_idCachedValue();
        }       
        ContainedByPackage = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8000", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static PackageableElement_c getOnePE_PEOnR8000(Package_c [] targets)
{
    return getOnePE_PEOnR8000(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8000(Package_c [] targets, ClassQueryInterface_c test)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOnePE_PEOnR8000(targets[i], test);
        }
    }

    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8000(Package_c target)
{
  return getOnePE_PEOnR8000(target, null);
}

public static PackageableElement_c getOnePE_PEOnR8000(Package_c target, boolean loadComponent)
{
    return getOnePE_PEOnR8000(target.getModelRoot(), target, null, loadComponent);
}

public static PackageableElement_c getOnePE_PEOnR8000(Package_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOnePE_PEOnR8000(target.getModelRoot(), target, test);
  }
  return null;
}

public static PackageableElement_c getOnePE_PEOnR8000(ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test)
{
	return getOnePE_PEOnR8000(modelRoot, target, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8000(ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  PackageableElement_c result = null;
  
  result=find_getOnePE_PEOnR8000(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,PackageableElement_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOnePE_PEOnR8000(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static PackageableElement_c find_getOnePE_PEOnR8000(ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsPackageableElementContains_R8000) {
	    for ( int i = 0; i < target.backPointer_ContainsPackageableElementContains_R8000.size(); ++i ) {
	      PackageableElement_c source = (PackageableElement_c)target.backPointer_ContainsPackageableElementContains_R8000.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static PackageableElement_c [] getManyPE_PEsOnR8000(Package_c [] targets)
{
  return getManyPE_PEsOnR8000(targets, null);
}
public static PackageableElement_c [] getManyPE_PEsOnR8000(Package_c [] targets, boolean loadComponent)
{
  return getManyPE_PEsOnR8000(targets, null, loadComponent);
}
public static PackageableElement_c [] getManyPE_PEsOnR8000(Package_c [] targets, ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8000(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8000(Package_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new PackageableElement_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, PackageableElement_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(PackageableElement_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsPackageableElementContains_R8000) {
	    for (int j = 0; j < targets[i].backPointer_ContainsPackageableElementContains_R8000.size(); ++j) {
	      PackageableElement_c source = (PackageableElement_c)targets[i].backPointer_ContainsPackageableElementContains_R8000.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	PackageableElement_c[] ret_set = new PackageableElement_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new PackageableElement_c[0];
  }
  }

public static PackageableElement_c [] getManyPE_PEsOnR8000(Package_c target)
{
  return getManyPE_PEsOnR8000(target, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8000(Package_c target, boolean loadComponent)
{
  return getManyPE_PEsOnR8000(target, null, loadComponent);
}

public static PackageableElement_c [] getManyPE_PEsOnR8000(Package_c target, ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8000(target, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8000(Package_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new PackageableElement_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, PackageableElement_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsPackageableElementContains_R8000) {
    for (int i = 0; i < target.backPointer_ContainsPackageableElementContains_R8000.size(); ++i) {
      PackageableElement_c source = (PackageableElement_c)target.backPointer_ContainsPackageableElementContains_R8000.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		PackageableElement_c[] ret_set = new PackageableElement_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new PackageableElement_c[0];
	}
  }


  
    
// referring navigation

Component_c ContainedInComponent ;
public void relateAcrossR8003To(Component_c target)
{
	relateAcrossR8003To(target, true);
}
public void relateAcrossR8003To(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ContainedInComponent) return;  // already related

    if ( ContainedInComponent != target ) {
    
    Object oldKey = getInstanceKey();

    if (ContainedInComponent != null) {
        UmlProblem.removeXtUMLProblem(this, ContainedInComponent);
    
        ContainedInComponent.clearBackPointerR8003To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"PackageableElement_c.relateAcrossR8003To(Component_c target)", 
			"Relate performed across R8003 from Packageable Element to Component without unrelate of prior instance.");  
		}
    }
                
    	ContainedInComponent = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8003To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8003", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8003From(Component_c target)
{
	unrelateAcrossR8003From(target, true);
}
public void unrelateAcrossR8003From(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ContainedInComponent == null) return;  // already unrelated
	
	if (target != ContainedInComponent) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8003", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8003To(this);
    }
    

      if(ContainedInComponent != null) {
      
        m_component_id = ContainedInComponent.getId();
        if(IdAssigner.NULL_UUID.equals(m_component_id))
        {
          m_component_id = ContainedInComponent.getIdCachedValue();
        }       
        ContainedInComponent = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8003", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static PackageableElement_c getOnePE_PEOnR8003(Component_c [] targets)
{
    return getOnePE_PEOnR8003(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8003(Component_c [] targets, ClassQueryInterface_c test)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOnePE_PEOnR8003(targets[i], test);
        }
    }

    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8003(Component_c target)
{
  return getOnePE_PEOnR8003(target, null);
}

public static PackageableElement_c getOnePE_PEOnR8003(Component_c target, boolean loadComponent)
{
    return getOnePE_PEOnR8003(target.getModelRoot(), target, null, loadComponent);
}

public static PackageableElement_c getOnePE_PEOnR8003(Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOnePE_PEOnR8003(target.getModelRoot(), target, test);
  }
  return null;
}

public static PackageableElement_c getOnePE_PEOnR8003(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
	return getOnePE_PEOnR8003(modelRoot, target, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8003(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  PackageableElement_c result = null;
  
  result=find_getOnePE_PEOnR8003(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,PackageableElement_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOnePE_PEOnR8003(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static PackageableElement_c find_getOnePE_PEOnR8003(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsPackageableElementContains_R8003) {
	    for ( int i = 0; i < target.backPointer_ContainsPackageableElementContains_R8003.size(); ++i ) {
	      PackageableElement_c source = (PackageableElement_c)target.backPointer_ContainsPackageableElementContains_R8003.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static PackageableElement_c [] getManyPE_PEsOnR8003(Component_c [] targets)
{
  return getManyPE_PEsOnR8003(targets, null);
}
public static PackageableElement_c [] getManyPE_PEsOnR8003(Component_c [] targets, boolean loadComponent)
{
  return getManyPE_PEsOnR8003(targets, null, loadComponent);
}
public static PackageableElement_c [] getManyPE_PEsOnR8003(Component_c [] targets, ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8003(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8003(Component_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new PackageableElement_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, PackageableElement_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(PackageableElement_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsPackageableElementContains_R8003) {
	    for (int j = 0; j < targets[i].backPointer_ContainsPackageableElementContains_R8003.size(); ++j) {
	      PackageableElement_c source = (PackageableElement_c)targets[i].backPointer_ContainsPackageableElementContains_R8003.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	PackageableElement_c[] ret_set = new PackageableElement_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new PackageableElement_c[0];
  }
  }

public static PackageableElement_c [] getManyPE_PEsOnR8003(Component_c target)
{
  return getManyPE_PEsOnR8003(target, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8003(Component_c target, boolean loadComponent)
{
  return getManyPE_PEsOnR8003(target, null, loadComponent);
}

public static PackageableElement_c [] getManyPE_PEsOnR8003(Component_c target, ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8003(target, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8003(Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new PackageableElement_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, PackageableElement_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsPackageableElementContains_R8003) {
    for (int i = 0; i < target.backPointer_ContainsPackageableElementContains_R8003.size(); ++i) {
      PackageableElement_c source = (PackageableElement_c)target.backPointer_ContainsPackageableElementContains_R8003.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		PackageableElement_c[] ret_set = new PackageableElement_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new PackageableElement_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

UseCaseAssociation_c backPointer_IsSubtypeUseCaseAssociationIsSubtype_R8001;

public void setUseCaseAssociationOrderInChildListR8001(UseCaseAssociation_c target, int index) {
	unrelateAcrossR8001From(target);
	UseCaseAssociation_c[] elements = UseCaseAssociation_c.getManyUC_UCAsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((UseCaseAssociation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((UseCaseAssociation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(UseCaseAssociation_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(UseCaseAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(UseCaseAssociation_c target)
{
    backPointer_IsSubtypeUseCaseAssociationIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(UseCaseAssociation_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(UseCaseAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(UseCaseAssociation_c target)
{
	if (target == backPointer_IsSubtypeUseCaseAssociationIsSubtype_R8001) {
		backPointer_IsSubtypeUseCaseAssociationIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(UseCaseAssociation_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(UseCaseAssociation_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(UseCaseAssociation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(UseCaseAssociation_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(UseCaseAssociation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(UseCaseAssociation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(UseCaseAssociation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(UseCaseAssociation_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(UseCaseAssociation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    UseCaseAssociation_c [] targetArray = new UseCaseAssociation_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(UseCaseAssociation_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(UseCaseAssociation_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(UseCaseAssociation_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

DataType_c backPointer_IsSubtypeDataTypeIsSubtype_R8001;

public void setDataTypeOrderInChildListR8001(DataType_c target, int index) {
	unrelateAcrossR8001From(target);
	DataType_c[] elements = DataType_c.getManyS_DTsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((DataType_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((DataType_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(DataType_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(DataType_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(DataType_c target)
{
    backPointer_IsSubtypeDataTypeIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(DataType_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(DataType_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(DataType_c target)
{
	if (target == backPointer_IsSubtypeDataTypeIsSubtype_R8001) {
		backPointer_IsSubtypeDataTypeIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(DataType_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(DataType_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(DataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(DataType_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(DataType_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(DataType_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(DataType_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(DataType_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(DataType_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    DataType_c [] targetArray = new DataType_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(DataType_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(DataType_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(DataType_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

InteractionParticipant_c backPointer_IsSubtypeInteractionParticipantIsSubtype_R8001;

public void setInteractionParticipantOrderInChildListR8001(InteractionParticipant_c target, int index) {
	unrelateAcrossR8001From(target);
	InteractionParticipant_c[] elements = InteractionParticipant_c.getManySQ_PsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((InteractionParticipant_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((InteractionParticipant_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(InteractionParticipant_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(InteractionParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(InteractionParticipant_c target)
{
    backPointer_IsSubtypeInteractionParticipantIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(InteractionParticipant_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(InteractionParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(InteractionParticipant_c target)
{
	if (target == backPointer_IsSubtypeInteractionParticipantIsSubtype_R8001) {
		backPointer_IsSubtypeInteractionParticipantIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(InteractionParticipant_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(InteractionParticipant_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(InteractionParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(InteractionParticipant_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(InteractionParticipant_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(InteractionParticipant_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(InteractionParticipant_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(InteractionParticipant_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(InteractionParticipant_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    InteractionParticipant_c [] targetArray = new InteractionParticipant_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(InteractionParticipant_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(InteractionParticipant_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(InteractionParticipant_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

ActivityNode_c backPointer_IsSubtypeActivityNodeIsSubtype_R8001;

public void setActivityNodeOrderInChildListR8001(ActivityNode_c target, int index) {
	unrelateAcrossR8001From(target);
	ActivityNode_c[] elements = ActivityNode_c.getManyA_NsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((ActivityNode_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((ActivityNode_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(ActivityNode_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(ActivityNode_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(ActivityNode_c target)
{
    backPointer_IsSubtypeActivityNodeIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(ActivityNode_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(ActivityNode_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(ActivityNode_c target)
{
	if (target == backPointer_IsSubtypeActivityNodeIsSubtype_R8001) {
		backPointer_IsSubtypeActivityNodeIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityNode_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityNode_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityNode_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityNode_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(ActivityNode_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityNode_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityNode_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityNode_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityNode_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ActivityNode_c [] targetArray = new ActivityNode_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityNode_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityNode_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityNode_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

ModelClass_c backPointer_IsSubtypeModelClassIsSubtype_R8001;

public void setModelClassOrderInChildListR8001(ModelClass_c target, int index) {
	unrelateAcrossR8001From(target);
	ModelClass_c[] elements = ModelClass_c.getManyO_OBJsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((ModelClass_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((ModelClass_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(ModelClass_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(ModelClass_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(ModelClass_c target)
{
    backPointer_IsSubtypeModelClassIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(ModelClass_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(ModelClass_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(ModelClass_c target)
{
	if (target == backPointer_IsSubtypeModelClassIsSubtype_R8001) {
		backPointer_IsSubtypeModelClassIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(ModelClass_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(ModelClass_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(ModelClass_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(ModelClass_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(ModelClass_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ModelClass_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ModelClass_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ModelClass_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ModelClass_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ModelClass_c [] targetArray = new ModelClass_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ModelClass_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ModelClass_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ModelClass_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

Component_c backPointer_IsSubtypeComponentIsSubtype_R8001;

public void setComponentOrderInChildListR8001(Component_c target, int index) {
	unrelateAcrossR8001From(target);
	Component_c[] elements = Component_c.getManyC_CsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((Component_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((Component_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(Component_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(Component_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(Component_c target)
{
    backPointer_IsSubtypeComponentIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(Component_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(Component_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(Component_c target)
{
	if (target == backPointer_IsSubtypeComponentIsSubtype_R8001) {
		backPointer_IsSubtypeComponentIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(Component_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(Component_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(Component_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(Component_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(Component_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Component_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Component_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Component_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Component_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Component_c [] targetArray = new Component_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Component_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Component_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Component_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

ComponentReference_c backPointer_IsSubtypeComponentReferenceIsSubtype_R8001;

public void setComponentReferenceOrderInChildListR8001(ComponentReference_c target, int index) {
	unrelateAcrossR8001From(target);
	ComponentReference_c[] elements = ComponentReference_c.getManyCL_ICsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((ComponentReference_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((ComponentReference_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(ComponentReference_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(ComponentReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(ComponentReference_c target)
{
    backPointer_IsSubtypeComponentReferenceIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(ComponentReference_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(ComponentReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(ComponentReference_c target)
{
	if (target == backPointer_IsSubtypeComponentReferenceIsSubtype_R8001) {
		backPointer_IsSubtypeComponentReferenceIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(ComponentReference_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(ComponentReference_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(ComponentReference_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(ComponentReference_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(ComponentReference_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ComponentReference_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ComponentReference_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ComponentReference_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ComponentReference_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ComponentReference_c [] targetArray = new ComponentReference_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ComponentReference_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ComponentReference_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ComponentReference_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

Interface_c backPointer_IsSubtypeInterfaceIsSubtype_R8001;

public void setInterfaceOrderInChildListR8001(Interface_c target, int index) {
	unrelateAcrossR8001From(target);
	Interface_c[] elements = Interface_c.getManyC_IsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((Interface_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((Interface_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(Interface_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(Interface_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(Interface_c target)
{
    backPointer_IsSubtypeInterfaceIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(Interface_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(Interface_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(Interface_c target)
{
	if (target == backPointer_IsSubtypeInterfaceIsSubtype_R8001) {
		backPointer_IsSubtypeInterfaceIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(Interface_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(Interface_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(Interface_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(Interface_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(Interface_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Interface_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Interface_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Interface_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Interface_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Interface_c [] targetArray = new Interface_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Interface_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Interface_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Interface_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

Package_c backPointer_IsSubtypePackageIsSubtype_R8001;

public void setPackageOrderInChildListR8001(Package_c target, int index) {
	unrelateAcrossR8001From(target);
	Package_c[] elements = Package_c.getManyEP_PKGsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((Package_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((Package_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(Package_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(Package_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(Package_c target)
{
    backPointer_IsSubtypePackageIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(Package_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(Package_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(Package_c target)
{
	if (target == backPointer_IsSubtypePackageIsSubtype_R8001) {
		backPointer_IsSubtypePackageIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(Package_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(Package_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(Package_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(Package_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(Package_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Package_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Package_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Package_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Package_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Package_c [] targetArray = new Package_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Package_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Package_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Package_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

ConstantSpecification_c backPointer_IsSubtypeConstantSpecificationIsSubtype_R8001;

public void setConstantSpecificationOrderInChildListR8001(ConstantSpecification_c target, int index) {
	unrelateAcrossR8001From(target);
	ConstantSpecification_c[] elements = ConstantSpecification_c.getManyCNST_CSPsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((ConstantSpecification_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((ConstantSpecification_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(ConstantSpecification_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(ConstantSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(ConstantSpecification_c target)
{
    backPointer_IsSubtypeConstantSpecificationIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(ConstantSpecification_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(ConstantSpecification_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(ConstantSpecification_c target)
{
	if (target == backPointer_IsSubtypeConstantSpecificationIsSubtype_R8001) {
		backPointer_IsSubtypeConstantSpecificationIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(ConstantSpecification_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(ConstantSpecification_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(ConstantSpecification_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(ConstantSpecification_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(ConstantSpecification_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ConstantSpecification_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ConstantSpecification_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ConstantSpecification_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ConstantSpecification_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ConstantSpecification_c [] targetArray = new ConstantSpecification_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ConstantSpecification_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ConstantSpecification_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ConstantSpecification_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

ActivityPartition_c backPointer_IsSubtypeActivityPartitionIsSubtype_R8001;

public void setActivityPartitionOrderInChildListR8001(ActivityPartition_c target, int index) {
	unrelateAcrossR8001From(target);
	ActivityPartition_c[] elements = ActivityPartition_c.getManyA_APsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((ActivityPartition_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((ActivityPartition_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(ActivityPartition_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(ActivityPartition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(ActivityPartition_c target)
{
    backPointer_IsSubtypeActivityPartitionIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(ActivityPartition_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(ActivityPartition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(ActivityPartition_c target)
{
	if (target == backPointer_IsSubtypeActivityPartitionIsSubtype_R8001) {
		backPointer_IsSubtypeActivityPartitionIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityPartition_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityPartition_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityPartition_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityPartition_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(ActivityPartition_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityPartition_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityPartition_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityPartition_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityPartition_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ActivityPartition_c [] targetArray = new ActivityPartition_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityPartition_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityPartition_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityPartition_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

ActivityEdge_c backPointer_IsSubtypeActivityEdgeIsSubtype_R8001;

public void setActivityEdgeOrderInChildListR8001(ActivityEdge_c target, int index) {
	unrelateAcrossR8001From(target);
	ActivityEdge_c[] elements = ActivityEdge_c.getManyA_EsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((ActivityEdge_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((ActivityEdge_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(ActivityEdge_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(ActivityEdge_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(ActivityEdge_c target)
{
    backPointer_IsSubtypeActivityEdgeIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(ActivityEdge_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(ActivityEdge_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(ActivityEdge_c target)
{
	if (target == backPointer_IsSubtypeActivityEdgeIsSubtype_R8001) {
		backPointer_IsSubtypeActivityEdgeIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityEdge_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityEdge_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityEdge_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(ActivityEdge_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(ActivityEdge_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityEdge_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityEdge_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityEdge_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityEdge_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ActivityEdge_c [] targetArray = new ActivityEdge_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityEdge_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityEdge_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ActivityEdge_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

Message_c backPointer_IsSubtypeMessageIsSubtype_R8001;

public void setMessageOrderInChildListR8001(Message_c target, int index) {
	unrelateAcrossR8001From(target);
	Message_c[] elements = Message_c.getManyMSG_MsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((Message_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((Message_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(Message_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(Message_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(Message_c target)
{
    backPointer_IsSubtypeMessageIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(Message_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(Message_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(Message_c target)
{
	if (target == backPointer_IsSubtypeMessageIsSubtype_R8001) {
		backPointer_IsSubtypeMessageIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(Message_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(Message_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(Message_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(Message_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(Message_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Message_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Message_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Message_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Message_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Message_c [] targetArray = new Message_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Message_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Message_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Message_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

ImportedClass_c backPointer_IsSubtypeImportedClassIsSubtype_R8001;

public void setImportedClassOrderInChildListR8001(ImportedClass_c target, int index) {
	unrelateAcrossR8001From(target);
	ImportedClass_c[] elements = ImportedClass_c.getManyO_IOBJsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((ImportedClass_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((ImportedClass_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(ImportedClass_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(ImportedClass_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(ImportedClass_c target)
{
    backPointer_IsSubtypeImportedClassIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(ImportedClass_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(ImportedClass_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(ImportedClass_c target)
{
	if (target == backPointer_IsSubtypeImportedClassIsSubtype_R8001) {
		backPointer_IsSubtypeImportedClassIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(ImportedClass_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(ImportedClass_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(ImportedClass_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(ImportedClass_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(ImportedClass_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ImportedClass_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ImportedClass_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ImportedClass_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ImportedClass_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ImportedClass_c [] targetArray = new ImportedClass_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ImportedClass_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ImportedClass_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ImportedClass_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

Association_c backPointer_IsSubtypeAssociationIsSubtype_R8001;

public void setAssociationOrderInChildListR8001(Association_c target, int index) {
	unrelateAcrossR8001From(target);
	Association_c[] elements = Association_c.getManyR_RELsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((Association_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((Association_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(Association_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(Association_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(Association_c target)
{
    backPointer_IsSubtypeAssociationIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(Association_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(Association_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(Association_c target)
{
	if (target == backPointer_IsSubtypeAssociationIsSubtype_R8001) {
		backPointer_IsSubtypeAssociationIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(Association_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(Association_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(Association_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(Association_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(Association_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Association_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Association_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Association_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Association_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Association_c [] targetArray = new Association_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Association_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Association_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Association_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

ExternalEntity_c backPointer_IsSubtypeExternalEntityIsSubtype_R8001;

public void setExternalEntityOrderInChildListR8001(ExternalEntity_c target, int index) {
	unrelateAcrossR8001From(target);
	ExternalEntity_c[] elements = ExternalEntity_c.getManyS_EEsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((ExternalEntity_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((ExternalEntity_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(ExternalEntity_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(ExternalEntity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(ExternalEntity_c target)
{
    backPointer_IsSubtypeExternalEntityIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(ExternalEntity_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(ExternalEntity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(ExternalEntity_c target)
{
	if (target == backPointer_IsSubtypeExternalEntityIsSubtype_R8001) {
		backPointer_IsSubtypeExternalEntityIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(ExternalEntity_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(ExternalEntity_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(ExternalEntity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(ExternalEntity_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(ExternalEntity_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ExternalEntity_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ExternalEntity_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ExternalEntity_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ExternalEntity_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntity_c [] targetArray = new ExternalEntity_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ExternalEntity_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ExternalEntity_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(ExternalEntity_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

Function_c backPointer_IsSubtypeFunctionIsSubtype_R8001;

public void setFunctionOrderInChildListR8001(Function_c target, int index) {
	unrelateAcrossR8001From(target);
	Function_c[] elements = Function_c.getManyS_SYNCsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((Function_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((Function_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(Function_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(Function_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(Function_c target)
{
    backPointer_IsSubtypeFunctionIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(Function_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(Function_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(Function_c target)
{
	if (target == backPointer_IsSubtypeFunctionIsSubtype_R8001) {
		backPointer_IsSubtypeFunctionIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(Function_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(Function_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(Function_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(Function_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(Function_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Function_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Function_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Function_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Function_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Function_c [] targetArray = new Function_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Function_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Function_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Function_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

Satisfaction_c backPointer_IsSubtypeSatisfactionIsSubtype_R8001;

public void setSatisfactionOrderInChildListR8001(Satisfaction_c target, int index) {
	unrelateAcrossR8001From(target);
	Satisfaction_c[] elements = Satisfaction_c.getManyC_SFsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((Satisfaction_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((Satisfaction_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(Satisfaction_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(Satisfaction_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(Satisfaction_c target)
{
    backPointer_IsSubtypeSatisfactionIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(Satisfaction_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(Satisfaction_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(Satisfaction_c target)
{
	if (target == backPointer_IsSubtypeSatisfactionIsSubtype_R8001) {
		backPointer_IsSubtypeSatisfactionIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(Satisfaction_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(Satisfaction_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(Satisfaction_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(Satisfaction_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(Satisfaction_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Satisfaction_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Satisfaction_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Satisfaction_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Satisfaction_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Satisfaction_c [] targetArray = new Satisfaction_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Satisfaction_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Satisfaction_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Satisfaction_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}

  
  
  
// referred to navigation

Delegation_c backPointer_IsSubtypeDelegationIsSubtype_R8001;

public void setDelegationOrderInChildListR8001(Delegation_c target, int index) {
	unrelateAcrossR8001From(target);
	Delegation_c[] elements = Delegation_c.getManyC_DGsOnR8001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8001From((Delegation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8001To((Delegation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8001To(Delegation_c target)
{
  if (target != null) {
    target.relateAcrossR8001To(this, true) ;
  }
}

public void relateAcrossR8001To(Delegation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8001To(this, notifyChanges) ;
  }
}

public void setBackPointerR8001To(Delegation_c target)
{
    backPointer_IsSubtypeDelegationIsSubtype_R8001 = target;
}

public void unrelateAcrossR8001From(Delegation_c target)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, true) ;
  }
}

public void unrelateAcrossR8001From(Delegation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8001To(Delegation_c target)
{
	if (target == backPointer_IsSubtypeDelegationIsSubtype_R8001) {
		backPointer_IsSubtypeDelegationIsSubtype_R8001 = null;
	}
}

public static PackageableElement_c getOnePE_PEOnR8001(Delegation_c [] targets)
{
    return getOnePE_PEOnR8001(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8001(Delegation_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8001(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8001(Delegation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8001(Delegation_c target)
{
	return getOnePE_PEOnR8001(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8001(Delegation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsSupertypePackageableElement != null){
		target.IsSupertypePackageableElement.loadProxy();
	}
	}
    return target.IsSupertypePackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Delegation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8001(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Delegation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypePackageableElement == null)
	  targets[i].loadProxy();
    PackageableElement_c associate = targets[i].IsSupertypePackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Delegation_c [] targets)
{
  return getManyPE_PEsOnR8001(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Delegation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Delegation_c [] targetArray = new Delegation_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8001(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Delegation_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Delegation_c target)
{
    return getManyPE_PEsOnR8001(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8001(Delegation_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8001(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ElementVisibility_c> backPointer_IsVisibleToElementsInElementVisibilityIsVisibleToElementsIn_R8002 = new ArrayList<ElementVisibility_c>();

public void setElementVisibilityOrderInChildListR8002(ElementVisibility_c target, int index) {
	unrelateAcrossR8002From(target);
	ElementVisibility_c[] elements = ElementVisibility_c.getManyPE_VISsOnR8002(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8002From((ElementVisibility_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8002To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8002To((ElementVisibility_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8002To(ElementVisibility_c target)
{
  if (target != null) {
    target.relateAcrossR8002To(this, true) ;
  }
}

public void relateAcrossR8002To(ElementVisibility_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8002To(this, notifyChanges) ;
  }
}

public void setBackPointerR8002To(ElementVisibility_c target)
{
  	synchronized (backPointer_IsVisibleToElementsInElementVisibilityIsVisibleToElementsIn_R8002) {
		backPointer_IsVisibleToElementsInElementVisibilityIsVisibleToElementsIn_R8002.add(target);
	}
}

public void unrelateAcrossR8002From(ElementVisibility_c target)
{
  if (target != null) {
    target.unrelateAcrossR8002From(this, true) ;
  }
}

public void unrelateAcrossR8002From(ElementVisibility_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8002From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8002To(ElementVisibility_c target)
{
  synchronized (backPointer_IsVisibleToElementsInElementVisibilityIsVisibleToElementsIn_R8002) {
	    backPointer_IsVisibleToElementsInElementVisibilityIsVisibleToElementsIn_R8002.remove(target);
	}
}

public static PackageableElement_c getOnePE_PEOnR8002(ElementVisibility_c [] targets)
{
    return getOnePE_PEOnR8002(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8002(ElementVisibility_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8002(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8002(ElementVisibility_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8002(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8002(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8002(ElementVisibility_c target)
{
	return getOnePE_PEOnR8002(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8002(ElementVisibility_c target, boolean loadComponent)
{
  if (target != null) {
    return target.HasVisibilityOfPackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8002(ElementVisibility_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8002(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8002(ElementVisibility_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
    PackageableElement_c associate = targets[i].HasVisibilityOfPackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8002(ElementVisibility_c [] targets)
{
  return getManyPE_PEsOnR8002(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8002(ElementVisibility_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ElementVisibility_c [] targetArray = new ElementVisibility_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8002(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8002(ElementVisibility_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8002(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8002(ElementVisibility_c target)
{
    return getManyPE_PEsOnR8002(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8002(ElementVisibility_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8002(target, null, loadComponent);
}

public static PackageableElement_c getOnePE_PEOnR8002(Package_c target)
{
  return PackageableElement_c.getOnePE_PEOnR8002(ElementVisibility_c.getOnePE_VISOnR8002(target)) ;
}

public static PackageableElement_c getOnePE_PEOnR8002(Package_c target,
    ClassQueryInterface_c test)
{
  return PackageableElement_c.getOnePE_PEOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(target), test) ;
}

public static PackageableElement_c [] getManyPE_PEsOnR8002(Package_c target,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8002(target, test, true);
}
public static PackageableElement_c [] getManyPE_PEsOnR8002(Package_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  ElementVisibility_c [] associators = ElementVisibility_c.getManyPE_VISsOnR8002(target, loadComponent) ;
    return PackageableElement_c.getManyPE_PEsOnR8002(associators, test, loadComponent) ;
}
public static PackageableElement_c [] getManyPE_PEsOnR8002(Package_c target)
{
    return getManyPE_PEsOnR8002(target, null, true);
}
public static PackageableElement_c [] getManyPE_PEsOnR8002(Package_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8002(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ComponentVisibility_c> backPointer_IsVisibleToComponentVisibilityIsVisibleTo_R8004 = new ArrayList<ComponentVisibility_c>();

public void setComponentVisibilityOrderInChildListR8004(ComponentVisibility_c target, int index) {
	unrelateAcrossR8004From(target);
	ComponentVisibility_c[] elements = ComponentVisibility_c.getManyPE_CVSsOnR8004(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR8004From((ComponentVisibility_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR8004To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR8004To((ComponentVisibility_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR8004To(ComponentVisibility_c target)
{
  if (target != null) {
    target.relateAcrossR8004To(this, true) ;
  }
}

public void relateAcrossR8004To(ComponentVisibility_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR8004To(this, notifyChanges) ;
  }
}

public void setBackPointerR8004To(ComponentVisibility_c target)
{
  	synchronized (backPointer_IsVisibleToComponentVisibilityIsVisibleTo_R8004) {
		backPointer_IsVisibleToComponentVisibilityIsVisibleTo_R8004.add(target);
	}
}

public void unrelateAcrossR8004From(ComponentVisibility_c target)
{
  if (target != null) {
    target.unrelateAcrossR8004From(this, true) ;
  }
}

public void unrelateAcrossR8004From(ComponentVisibility_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR8004From(this, notifyChanges) ;
  }
}

public void clearBackPointerR8004To(ComponentVisibility_c target)
{
  synchronized (backPointer_IsVisibleToComponentVisibilityIsVisibleTo_R8004) {
	    backPointer_IsVisibleToComponentVisibilityIsVisibleTo_R8004.remove(target);
	}
}

public static PackageableElement_c getOnePE_PEOnR8004(ComponentVisibility_c [] targets)
{
    return getOnePE_PEOnR8004(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR8004(ComponentVisibility_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR8004(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR8004(ComponentVisibility_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR8004(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR8004(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR8004(ComponentVisibility_c target)
{
	return getOnePE_PEOnR8004(target, true);
}
public static PackageableElement_c getOnePE_PEOnR8004(ComponentVisibility_c target, boolean loadComponent)
{
  if (target != null) {
    return target.HasVisibilityOfPackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR8004(ComponentVisibility_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8004(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8004(ComponentVisibility_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
    PackageableElement_c associate = targets[i].HasVisibilityOfPackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR8004(ComponentVisibility_c [] targets)
{
  return getManyPE_PEsOnR8004(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR8004(ComponentVisibility_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ComponentVisibility_c [] targetArray = new ComponentVisibility_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR8004(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR8004(ComponentVisibility_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR8004(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8004(ComponentVisibility_c target)
{
    return getManyPE_PEsOnR8004(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR8004(ComponentVisibility_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8004(target, null, loadComponent);
}

public static PackageableElement_c getOnePE_PEOnR8004(Component_c target)
{
  return PackageableElement_c.getOnePE_PEOnR8004(ComponentVisibility_c.getOnePE_CVSOnR8004(target)) ;
}

public static PackageableElement_c getOnePE_PEOnR8004(Component_c target,
    ClassQueryInterface_c test)
{
  return PackageableElement_c.getOnePE_PEOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(target), test) ;
}

public static PackageableElement_c [] getManyPE_PEsOnR8004(Component_c target,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR8004(target, test, true);
}
public static PackageableElement_c [] getManyPE_PEsOnR8004(Component_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  ComponentVisibility_c [] associators = ComponentVisibility_c.getManyPE_CVSsOnR8004(target, loadComponent) ;
    return PackageableElement_c.getManyPE_PEsOnR8004(associators, test, loadComponent) ;
}
public static PackageableElement_c [] getManyPE_PEsOnR8004(Component_c target)
{
    return getManyPE_PEsOnR8004(target, null, true);
}
public static PackageableElement_c [] getManyPE_PEsOnR8004(Component_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR8004(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<GlobalElementInSystem_c> backPointer_GlobalElementInSystem_R9100 = new ArrayList<GlobalElementInSystem_c>();

public void setGlobalElementInSystemOrderInChildListR9100(GlobalElementInSystem_c target, int index) {
	unrelateAcrossR9100From(target);
	GlobalElementInSystem_c[] elements = GlobalElementInSystem_c.getManyG_EISsOnR9100(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR9100From((GlobalElementInSystem_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR9100To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR9100To((GlobalElementInSystem_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR9100To(GlobalElementInSystem_c target)
{
  if (target != null) {
    target.relateAcrossR9100To(this, true) ;
  }
}

public void relateAcrossR9100To(GlobalElementInSystem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR9100To(this, notifyChanges) ;
  }
}

public void setBackPointerR9100To(GlobalElementInSystem_c target)
{
  	synchronized (backPointer_GlobalElementInSystem_R9100) {
		backPointer_GlobalElementInSystem_R9100.add(target);
	}
}

public void unrelateAcrossR9100From(GlobalElementInSystem_c target)
{
  if (target != null) {
    target.unrelateAcrossR9100From(this, true) ;
  }
}

public void unrelateAcrossR9100From(GlobalElementInSystem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR9100From(this, notifyChanges) ;
  }
}

public void clearBackPointerR9100To(GlobalElementInSystem_c target)
{
  synchronized (backPointer_GlobalElementInSystem_R9100) {
	    backPointer_GlobalElementInSystem_R9100.remove(target);
	}
}

public static PackageableElement_c getOnePE_PEOnR9100(GlobalElementInSystem_c [] targets)
{
    return getOnePE_PEOnR9100(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR9100(GlobalElementInSystem_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR9100(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR9100(GlobalElementInSystem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR9100(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR9100(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR9100(GlobalElementInSystem_c target)
{
	return getOnePE_PEOnR9100(target, true);
}
public static PackageableElement_c getOnePE_PEOnR9100(GlobalElementInSystem_c target, boolean loadComponent)
{
  if (target != null) {
    return target.PackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR9100(GlobalElementInSystem_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR9100(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR9100(GlobalElementInSystem_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
    PackageableElement_c associate = targets[i].PackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR9100(GlobalElementInSystem_c [] targets)
{
  return getManyPE_PEsOnR9100(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR9100(GlobalElementInSystem_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    GlobalElementInSystem_c [] targetArray = new GlobalElementInSystem_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR9100(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR9100(GlobalElementInSystem_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR9100(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR9100(GlobalElementInSystem_c target)
{
    return getManyPE_PEsOnR9100(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR9100(GlobalElementInSystem_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR9100(target, null, loadComponent);
}

public static PackageableElement_c getOnePE_PEOnR9100(SystemModel_c target)
{
  return PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getOneG_EISOnR9100(target)) ;
}

public static PackageableElement_c getOnePE_PEOnR9100(SystemModel_c target,
    ClassQueryInterface_c test)
{
  return PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(target), test) ;
}

public static PackageableElement_c [] getManyPE_PEsOnR9100(SystemModel_c target,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR9100(target, test, true);
}
public static PackageableElement_c [] getManyPE_PEsOnR9100(SystemModel_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  GlobalElementInSystem_c [] associators = GlobalElementInSystem_c.getManyG_EISsOnR9100(target, loadComponent) ;
    return PackageableElement_c.getManyPE_PEsOnR9100(associators, test, loadComponent) ;
}
public static PackageableElement_c [] getManyPE_PEsOnR9100(SystemModel_c target)
{
    return getManyPE_PEsOnR9100(target, null, true);
}
public static PackageableElement_c [] getManyPE_PEsOnR9100(SystemModel_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR9100(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<BodyInElement_c> backPointer_HasDeclaredBodyInElementHasDeclared_R640 = new ArrayList<BodyInElement_c>();

public void setBodyInElementOrderInChildListR640(BodyInElement_c target, int index) {
	unrelateAcrossR640From(target);
	BodyInElement_c[] elements = BodyInElement_c.getManyACT_BIEsOnR640(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR640From((BodyInElement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR640To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR640To((BodyInElement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR640To(BodyInElement_c target)
{
  if (target != null) {
    target.relateAcrossR640To(this, true) ;
  }
}

public void relateAcrossR640To(BodyInElement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR640To(this, notifyChanges) ;
  }
}

public void setBackPointerR640To(BodyInElement_c target)
{
  	synchronized (backPointer_HasDeclaredBodyInElementHasDeclared_R640) {
		backPointer_HasDeclaredBodyInElementHasDeclared_R640.add(target);
	}
}

public void unrelateAcrossR640From(BodyInElement_c target)
{
  if (target != null) {
    target.unrelateAcrossR640From(this, true) ;
  }
}

public void unrelateAcrossR640From(BodyInElement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR640From(this, notifyChanges) ;
  }
}

public void clearBackPointerR640To(BodyInElement_c target)
{
  synchronized (backPointer_HasDeclaredBodyInElementHasDeclared_R640) {
	    backPointer_HasDeclaredBodyInElementHasDeclared_R640.remove(target);
	}
}

public static PackageableElement_c getOnePE_PEOnR640(BodyInElement_c [] targets)
{
    return getOnePE_PEOnR640(targets, null);
}

public static PackageableElement_c getOnePE_PEOnR640(BodyInElement_c [] targets, ClassQueryInterface_c test)
{
    return getOnePE_PEOnR640(targets, test, true);
}

public static PackageableElement_c getOnePE_PEOnR640(BodyInElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    PackageableElement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             PackageableElement_c candidate_val = getOnePE_PEOnR640(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOnePE_PEOnR640(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static PackageableElement_c getOnePE_PEOnR640(BodyInElement_c target)
{
	return getOnePE_PEOnR640(target, true);
}
public static PackageableElement_c getOnePE_PEOnR640(BodyInElement_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsDeclaredInPackageableElement ;
  } else {
    return null;
  }
}

public static PackageableElement_c [] getManyPE_PEsOnR640(BodyInElement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyPE_PEsOnR640(targets, test, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR640(BodyInElement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new PackageableElement_c[0];
  
  
  LinkedHashSet<PackageableElement_c> elementsSet = new LinkedHashSet<PackageableElement_c>();
  for (int i = 0; i < targets.length; i++) {
    PackageableElement_c associate = targets[i].IsDeclaredInPackageableElement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  PackageableElement_c[] result = new PackageableElement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static PackageableElement_c [] getManyPE_PEsOnR640(BodyInElement_c [] targets)
{
  return getManyPE_PEsOnR640(targets, null);
}

public static PackageableElement_c [] getManyPE_PEsOnR640(BodyInElement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BodyInElement_c [] targetArray = new BodyInElement_c[1];
    targetArray[0] = target;
    return getManyPE_PEsOnR640(targetArray, test, loadComponent);
  } else {
    PackageableElement_c [] result = new PackageableElement_c [0] ;
    return result ;
  }
  
}

public static PackageableElement_c [] getManyPE_PEsOnR640(BodyInElement_c target,
    ClassQueryInterface_c test)
{
    return getManyPE_PEsOnR640(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR640(BodyInElement_c target)
{
    return getManyPE_PEsOnR640(target, null, true);
}

public static PackageableElement_c [] getManyPE_PEsOnR640(BodyInElement_c target, boolean loadComponent)
{
    return getManyPE_PEsOnR640(target, null, loadComponent);
}

public static PackageableElement_c getOnePE_PEOnR640(Body_c target)
{
  return PackageableElement_c.getOnePE_PEOnR640(BodyInElement_c.getOneACT_BIEOnR640(target)) ;
}

public static PackageableElement_c getOnePE_PEOnR640(Body_c target,
    ClassQueryInterface_c test)
{
  return PackageableElement_c.getOnePE_PEOnR640(BodyInElement_c.getManyACT_BIEsOnR640(target), test) ;
}



      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (ContainedByPackage == null) {          
      // R8000
      Package_c relInst39871 = (Package_c) baseRoot.getInstanceList(Package_c.class).get(new Object[] {m_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39871 == null) {
      			relInst39871 = (Package_c) Ooaofooa.getDefaultInstance().getInstanceList(Package_c.class).get(new Object[] {m_package_id});
      		}
			if (relInst39871 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39871 = (Package_c) roots[i].getInstanceList(Package_c.class).get(new Object[] {m_package_id});
					if (relInst39871 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39871 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39871) && !isProxy())) {
	      relInst39871.relateAcrossR8000To(this, notifyChanges);
	  }
	  }
	}
	          

	if (ContainedInComponent == null) {          
      // R8003
      Component_c relInst39872 = (Component_c) baseRoot.getInstanceList(Component_c.class).get(new Object[] {m_component_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst39872 == null) {
      			relInst39872 = (Component_c) Ooaofooa.getDefaultInstance().getInstanceList(Component_c.class).get(new Object[] {m_component_id});
      		}
			if (relInst39872 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst39872 = (Component_c) roots[i].getInstanceList(Component_c.class).get(new Object[] {m_component_id});
					if (relInst39872 != null)
						break;
				}
			}
			//synchronized
      if ( relInst39872 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst39872) && !isProxy())) {
	      relInst39872.relateAcrossR8003To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R8000
      // EP_PKG
		  inst=ContainedByPackage;
			unrelateAcrossR8000From(ContainedByPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R8003
      // C_C
		  inst=ContainedInComponent;
			unrelateAcrossR8003From(ContainedInComponent, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(PackageableElement_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final PackageableElement_c inst = (PackageableElement_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(PackageableElement_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static PackageableElement_c PackageableElementInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		PackageableElement_c result=findPackageableElementInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,PackageableElement_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findPackageableElementInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static PackageableElement_c findPackageableElementInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(PackageableElement_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				PackageableElement_c x = (PackageableElement_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static PackageableElement_c PackageableElementInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return PackageableElementInstance(modelRoot,test,true);
  }
  
  public static PackageableElement_c PackageableElementInstance(ModelRoot modelRoot)
  {
	 return PackageableElementInstance(modelRoot,null,true);
  }

  public static PackageableElement_c [] PackageableElementInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, PackageableElement_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(PackageableElement_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					PackageableElement_c x = (PackageableElement_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				PackageableElement_c[] ret_set = new PackageableElement_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new PackageableElement_c[0];
			}		
		} 
  }
  public static PackageableElement_c [] PackageableElementInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  PackageableElementInstances(modelRoot,test,true);
  }
  public static PackageableElement_c [] PackageableElementInstances(ModelRoot modelRoot)
  {
	return PackageableElementInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Packageable Element.dispose call: ";
	UseCaseAssociation_c testR8001Inst1 = UseCaseAssociation_c.getOneUC_UCAOnR8001(this, false);

	if ( testR8001Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	DataType_c testR8001Inst2 = DataType_c.getOneS_DTOnR8001(this, false);

	if ( testR8001Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	InteractionParticipant_c testR8001Inst3 = InteractionParticipant_c.getOneSQ_POnR8001(this, false);

	if ( testR8001Inst3 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	ActivityNode_c testR8001Inst4 = ActivityNode_c.getOneA_NOnR8001(this, false);

	if ( testR8001Inst4 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	ModelClass_c testR8001Inst5 = ModelClass_c.getOneO_OBJOnR8001(this, false);

	if ( testR8001Inst5 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Component_c testR8001Inst6 = Component_c.getOneC_COnR8001(this, false);

	if ( testR8001Inst6 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	ComponentReference_c testR8001Inst7 = ComponentReference_c.getOneCL_ICOnR8001(this, false);

	if ( testR8001Inst7 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Interface_c testR8001Inst8 = Interface_c.getOneC_IOnR8001(this, false);

	if ( testR8001Inst8 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Package_c testR8001Inst9 = Package_c.getOneEP_PKGOnR8001(this, false);

	if ( testR8001Inst9 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	ConstantSpecification_c testR8001Inst10 = ConstantSpecification_c.getOneCNST_CSPOnR8001(this, false);

	if ( testR8001Inst10 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	ActivityPartition_c testR8001Inst11 = ActivityPartition_c.getOneA_APOnR8001(this, false);

	if ( testR8001Inst11 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	ActivityEdge_c testR8001Inst12 = ActivityEdge_c.getOneA_EOnR8001(this, false);

	if ( testR8001Inst12 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Message_c testR8001Inst13 = Message_c.getOneMSG_MOnR8001(this, false);

	if ( testR8001Inst13 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	ImportedClass_c testR8001Inst14 = ImportedClass_c.getOneO_IOBJOnR8001(this, false);

	if ( testR8001Inst14 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Association_c testR8001Inst15 = Association_c.getOneR_RELOnR8001(this, false);

	if ( testR8001Inst15 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	ExternalEntity_c testR8001Inst16 = ExternalEntity_c.getOneS_EEOnR8001(this, false);

	if ( testR8001Inst16 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Function_c testR8001Inst17 = Function_c.getOneS_SYNCOnR8001(this, false);

	if ( testR8001Inst17 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Satisfaction_c testR8001Inst18 = Satisfaction_c.getOneC_SFOnR8001(this, false);

	if ( testR8001Inst18 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Delegation_c testR8001Inst19 = Delegation_c.getOneC_DGOnR8001(this, false);

	if ( testR8001Inst19 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "8001 ";
	}
	Package_c testR8000Inst = Package_c.getOneEP_PKGOnR8000(this, false);

	if ( testR8000Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "8000 ";
	}
	ElementVisibility_c testR8002Inst = ElementVisibility_c.getOnePE_VISOnR8002(this, false);

	if ( testR8002Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "8002 ";
	}
	Component_c testR8003Inst = Component_c.getOneC_COnR8003(this, false);

	if ( testR8003Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "8003 ";
	}
 	ComponentVisibility_c testR8004Inst = ComponentVisibility_c.getOnePE_CVSOnR8004(this, false);

 	if ( testR8004Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "8004 ";
 	}
	GlobalElementInSystem_c testR9100Inst = GlobalElementInSystem_c.getOneG_EISOnR9100(this, false);

	if ( testR9100Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "9100 ";
	}
 	BodyInElement_c testR640Inst = BodyInElement_c.getOneACT_BIEOnR640(this, false);

 	if ( testR640Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "640 ";
 	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Packageable Element", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("element_id")){
         return true;
      }
      if(attributeName.equals("package_id")){
         return true;
      }
      if(attributeName.equals("component_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getElement_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getElement_idLongBased()
  {
    if(m_element_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_element_id)){
    	return 0xfffffff & m_element_id.getLeastSignificantBits();
    }
    return m_element_idLongBased ;
  }
  public java.util.UUID getElement_id()
  {
    return m_element_id ;
  }


  public void setElement_id(java.util.UUID newValue)
  {
   m_element_id = IdAssigner.preprocessUUID(newValue);
  }
  public int getVisibility()
  {
    return m_visibility ;
  }


  public void setVisibility(int newValue)
  {
    if(m_visibility == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Visibility", new Integer(m_visibility), new Integer(newValue),true);

   m_visibility = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPackage_idLongBased()
  {
    if ( ContainedByPackage != null )
    {
      return ContainedByPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPackage_id()
  {
    if ( ContainedByPackage != null )
    {
      return ContainedByPackage.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getPackage_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_package_id) )
      return m_package_id;
    else
      return getPackage_id();
  }
  
  public void setPackage_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_package_id)){
	        return;
	    }
	}else if(m_package_id != null){
	    if(m_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Package_id", m_package_id, newValue,true); 
   m_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getComponent_idLongBased()
  {
    if ( ContainedInComponent != null )
    {
      return ContainedInComponent.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_id()
  {
    if ( ContainedInComponent != null )
    {
      return ContainedInComponent.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_id) )
      return m_component_id;
    else
      return getComponent_id();
  }
  
  public void setComponent_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_id)){
	        return;
	    }
	}else if(m_component_id != null){
	    if(m_component_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_id", m_component_id, newValue,true); 
   m_component_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getType()
  {
    return m_type ;
  }


  public void setType(int newValue)
  {
    if(m_type == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Type", new Integer(m_type), new Integer(newValue),true);

   m_type = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Packageable Element", //$NON-NLS-1$
	  " Operation entered: Packageable Element::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     PackageableElement_c [] objs = PackageableElement_c.PackageableElementInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Packageable Element", //$NON-NLS-1$
	  " Operation entered: Packageable Element::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class PackageableElement_c_test39874_c implements ClassQueryInterface_c
    {
	  PackageableElement_c_test39874_c( java.util.UUID            p39875 ) {
	  m_p39875 = p39875;
	  }
	  private java.util.UUID             m_p39875; 
	  public boolean evaluate (Object candidate)
	  {
	      PackageableElement_c selected = (PackageableElement_c) candidate;
	      boolean retval = false;
	      retval = (selected.getElement_id().equals(m_p39875));
	      return retval;
	  }
    }

    PackageableElement_c [] objs39873 = 
    PackageableElement_c.PackageableElementInstances(modelRoot, new PackageableElement_c_test39874_c(getElement_id())) ;

    if ( (  (objs39873.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Packageable Element", //$NON-NLS-1$
           "Consistency: Object: Packageable Element: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs39873.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Packageable Element: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39873.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs39873.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Packageable Element", //$NON-NLS-1$
           "Consistency: Object: Packageable Element: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39873.length )  + " Element_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Packageable Element: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39873.length )  + " Element_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Packageable Element is a referring class in association: rel.Numb = 8000
          // The participating class is: Package
    class Package_c_test39879_c implements ClassQueryInterface_c
    {
	  Package_c_test39879_c( java.util.UUID            p39880 ) {
	  m_p39880 = p39880;
	  }
	  private java.util.UUID             m_p39880; 
	  public boolean evaluate (Object candidate)
	  {
	      Package_c selected = (Package_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p39880));
	      return retval;
	  }
    }

    Package_c [] objs39878 = 
    Package_c.PackageInstances(modelRoot, new Package_c_test39879_c(getPackage_id())) ;

    if ( (  (objs39878.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Packageable Element", //$NON-NLS-1$
           "Consistency: Object: Packageable Element: Association: 8000: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39878.length )  + " Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Packageable Element: Association: 8000: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39878.length )  + " Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Packageable Element is a referring class in association: rel.Numb = 8003
          // The participating class is: Component
    class Component_c_test39882_c implements ClassQueryInterface_c
    {
	  Component_c_test39882_c( java.util.UUID            p39883 ) {
	  m_p39883 = p39883;
	  }
	  private java.util.UUID             m_p39883; 
	  public boolean evaluate (Object candidate)
	  {
	      Component_c selected = (Component_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39883));
	      return retval;
	  }
    }

    Component_c [] objs39881 = 
    Component_c.ComponentInstances(modelRoot, new Component_c_test39882_c(getComponent_id())) ;

    if ( (  (objs39881.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Packageable Element", //$NON-NLS-1$
           "Consistency: Object: Packageable Element: Association: 8003: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs39881.length )  + " Component_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Packageable Element: Association: 8003: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39881.length )  + " Component_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Supertype: rel.Numb = 8001
    int objs39884 = 0;
            // Subtype Object: Use Case Association
    class UseCaseAssociation_c_test39885_c implements ClassQueryInterface_c
    {
	  UseCaseAssociation_c_test39885_c( java.util.UUID            p39886 ) {
	  m_p39886 = p39886;
	  }
	  private java.util.UUID             m_p39886; 
	  public boolean evaluate (Object candidate)
	  {
	      UseCaseAssociation_c selected = (UseCaseAssociation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAssoc_id().equals(m_p39886));
	      return retval;
	  }
    }

    UseCaseAssociation_c [] objs39887 = 
    UseCaseAssociation_c.UseCaseAssociationInstances(modelRoot, new UseCaseAssociation_c_test39885_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39887.length;
            // Subtype Object: Data Type
    class DataType_c_test39888_c implements ClassQueryInterface_c
    {
	  DataType_c_test39888_c( java.util.UUID            p39889 ) {
	  m_p39889 = p39889;
	  }
	  private java.util.UUID             m_p39889; 
	  public boolean evaluate (Object candidate)
	  {
	      DataType_c selected = (DataType_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p39889));
	      return retval;
	  }
    }

    DataType_c [] objs39890 = 
    DataType_c.DataTypeInstances(modelRoot, new DataType_c_test39888_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39890.length;
            // Subtype Object: Interaction Participant
    class InteractionParticipant_c_test39891_c implements ClassQueryInterface_c
    {
	  InteractionParticipant_c_test39891_c( java.util.UUID            p39892 ) {
	  m_p39892 = p39892;
	  }
	  private java.util.UUID             m_p39892; 
	  public boolean evaluate (Object candidate)
	  {
	      InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPart_id().equals(m_p39892));
	      return retval;
	  }
    }

    InteractionParticipant_c [] objs39893 = 
    InteractionParticipant_c.InteractionParticipantInstances(modelRoot, new InteractionParticipant_c_test39891_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39893.length;
            // Subtype Object: Activity Node
    class ActivityNode_c_test39894_c implements ClassQueryInterface_c
    {
	  ActivityNode_c_test39894_c( java.util.UUID            p39895 ) {
	  m_p39895 = p39895;
	  }
	  private java.util.UUID             m_p39895; 
	  public boolean evaluate (Object candidate)
	  {
	      ActivityNode_c selected = (ActivityNode_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39895));
	      return retval;
	  }
    }

    ActivityNode_c [] objs39896 = 
    ActivityNode_c.ActivityNodeInstances(modelRoot, new ActivityNode_c_test39894_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39896.length;
            // Subtype Object: Model Class
    class ModelClass_c_test39897_c implements ClassQueryInterface_c
    {
	  ModelClass_c_test39897_c( java.util.UUID            p39898 ) {
	  m_p39898 = p39898;
	  }
	  private java.util.UUID             m_p39898; 
	  public boolean evaluate (Object candidate)
	  {
	      ModelClass_c selected = (ModelClass_c) candidate;
	      boolean retval = false;
	      retval = (selected.getObj_id().equals(m_p39898));
	      return retval;
	  }
    }

    ModelClass_c [] objs39899 = 
    ModelClass_c.ModelClassInstances(modelRoot, new ModelClass_c_test39897_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39899.length;
            // Subtype Object: Component
    class Component_c_test39900_c implements ClassQueryInterface_c
    {
	  Component_c_test39900_c( java.util.UUID            p39901 ) {
	  m_p39901 = p39901;
	  }
	  private java.util.UUID             m_p39901; 
	  public boolean evaluate (Object candidate)
	  {
	      Component_c selected = (Component_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39901));
	      return retval;
	  }
    }

    Component_c [] objs39902 = 
    Component_c.ComponentInstances(modelRoot, new Component_c_test39900_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39902.length;
            // Subtype Object: Component Reference
    class ComponentReference_c_test39903_c implements ClassQueryInterface_c
    {
	  ComponentReference_c_test39903_c( java.util.UUID            p39904 ) {
	  m_p39904 = p39904;
	  }
	  private java.util.UUID             m_p39904; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentReference_c selected = (ComponentReference_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39904));
	      return retval;
	  }
    }

    ComponentReference_c [] objs39905 = 
    ComponentReference_c.ComponentReferenceInstances(modelRoot, new ComponentReference_c_test39903_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39905.length;
            // Subtype Object: Interface
    class Interface_c_test39906_c implements ClassQueryInterface_c
    {
	  Interface_c_test39906_c( java.util.UUID            p39907 ) {
	  m_p39907 = p39907;
	  }
	  private java.util.UUID             m_p39907; 
	  public boolean evaluate (Object candidate)
	  {
	      Interface_c selected = (Interface_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39907));
	      return retval;
	  }
    }

    Interface_c [] objs39908 = 
    Interface_c.InterfaceInstances(modelRoot, new Interface_c_test39906_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39908.length;
            // Subtype Object: Package
    class Package_c_test39909_c implements ClassQueryInterface_c
    {
	  Package_c_test39909_c( java.util.UUID            p39910 ) {
	  m_p39910 = p39910;
	  }
	  private java.util.UUID             m_p39910; 
	  public boolean evaluate (Object candidate)
	  {
	      Package_c selected = (Package_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p39910));
	      return retval;
	  }
    }

    Package_c [] objs39911 = 
    Package_c.PackageInstances(modelRoot, new Package_c_test39909_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39911.length;
            // Subtype Object: Constant Specification
    class ConstantSpecification_c_test39912_c implements ClassQueryInterface_c
    {
	  ConstantSpecification_c_test39912_c( java.util.UUID            p39913 ) {
	  m_p39913 = p39913;
	  }
	  private java.util.UUID             m_p39913; 
	  public boolean evaluate (Object candidate)
	  {
	      ConstantSpecification_c selected = (ConstantSpecification_c) candidate;
	      boolean retval = false;
	      retval = (selected.getConstant_spec_id().equals(m_p39913));
	      return retval;
	  }
    }

    ConstantSpecification_c [] objs39914 = 
    ConstantSpecification_c.ConstantSpecificationInstances(modelRoot, new ConstantSpecification_c_test39912_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39914.length;
            // Subtype Object: Activity Partition
    class ActivityPartition_c_test39915_c implements ClassQueryInterface_c
    {
	  ActivityPartition_c_test39915_c( java.util.UUID            p39916 ) {
	  m_p39916 = p39916;
	  }
	  private java.util.UUID             m_p39916; 
	  public boolean evaluate (Object candidate)
	  {
	      ActivityPartition_c selected = (ActivityPartition_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39916));
	      return retval;
	  }
    }

    ActivityPartition_c [] objs39917 = 
    ActivityPartition_c.ActivityPartitionInstances(modelRoot, new ActivityPartition_c_test39915_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39917.length;
            // Subtype Object: Activity Edge
    class ActivityEdge_c_test39918_c implements ClassQueryInterface_c
    {
	  ActivityEdge_c_test39918_c( java.util.UUID            p39919 ) {
	  m_p39919 = p39919;
	  }
	  private java.util.UUID             m_p39919; 
	  public boolean evaluate (Object candidate)
	  {
	      ActivityEdge_c selected = (ActivityEdge_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39919));
	      return retval;
	  }
    }

    ActivityEdge_c [] objs39920 = 
    ActivityEdge_c.ActivityEdgeInstances(modelRoot, new ActivityEdge_c_test39918_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39920.length;
            // Subtype Object: Message
    class Message_c_test39921_c implements ClassQueryInterface_c
    {
	  Message_c_test39921_c( java.util.UUID            p39922 ) {
	  m_p39922 = p39922;
	  }
	  private java.util.UUID             m_p39922; 
	  public boolean evaluate (Object candidate)
	  {
	      Message_c selected = (Message_c) candidate;
	      boolean retval = false;
	      retval = (selected.getMsg_id().equals(m_p39922));
	      return retval;
	  }
    }

    Message_c [] objs39923 = 
    Message_c.MessageInstances(modelRoot, new Message_c_test39921_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39923.length;
            // Subtype Object: Imported Class
    class ImportedClass_c_test39924_c implements ClassQueryInterface_c
    {
	  ImportedClass_c_test39924_c( java.util.UUID            p39925 ) {
	  m_p39925 = p39925;
	  }
	  private java.util.UUID             m_p39925; 
	  public boolean evaluate (Object candidate)
	  {
	      ImportedClass_c selected = (ImportedClass_c) candidate;
	      boolean retval = false;
	      retval = (selected.getIobj_id().equals(m_p39925));
	      return retval;
	  }
    }

    ImportedClass_c [] objs39926 = 
    ImportedClass_c.ImportedClassInstances(modelRoot, new ImportedClass_c_test39924_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39926.length;
            // Subtype Object: Association
    class Association_c_test39927_c implements ClassQueryInterface_c
    {
	  Association_c_test39927_c( java.util.UUID            p39928 ) {
	  m_p39928 = p39928;
	  }
	  private java.util.UUID             m_p39928; 
	  public boolean evaluate (Object candidate)
	  {
	      Association_c selected = (Association_c) candidate;
	      boolean retval = false;
	      retval = (selected.getRel_id().equals(m_p39928));
	      return retval;
	  }
    }

    Association_c [] objs39929 = 
    Association_c.AssociationInstances(modelRoot, new Association_c_test39927_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39929.length;
            // Subtype Object: External Entity
    class ExternalEntity_c_test39930_c implements ClassQueryInterface_c
    {
	  ExternalEntity_c_test39930_c( java.util.UUID            p39931 ) {
	  m_p39931 = p39931;
	  }
	  private java.util.UUID             m_p39931; 
	  public boolean evaluate (Object candidate)
	  {
	      ExternalEntity_c selected = (ExternalEntity_c) candidate;
	      boolean retval = false;
	      retval = (selected.getEe_id().equals(m_p39931));
	      return retval;
	  }
    }

    ExternalEntity_c [] objs39932 = 
    ExternalEntity_c.ExternalEntityInstances(modelRoot, new ExternalEntity_c_test39930_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39932.length;
            // Subtype Object: Function
    class Function_c_test39933_c implements ClassQueryInterface_c
    {
	  Function_c_test39933_c( java.util.UUID            p39934 ) {
	  m_p39934 = p39934;
	  }
	  private java.util.UUID             m_p39934; 
	  public boolean evaluate (Object candidate)
	  {
	      Function_c selected = (Function_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSync_id().equals(m_p39934));
	      return retval;
	  }
    }

    Function_c [] objs39935 = 
    Function_c.FunctionInstances(modelRoot, new Function_c_test39933_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39935.length;
            // Subtype Object: Satisfaction
    class Satisfaction_c_test39936_c implements ClassQueryInterface_c
    {
	  Satisfaction_c_test39936_c( java.util.UUID            p39937 ) {
	  m_p39937 = p39937;
	  }
	  private java.util.UUID             m_p39937; 
	  public boolean evaluate (Object candidate)
	  {
	      Satisfaction_c selected = (Satisfaction_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39937));
	      return retval;
	  }
    }

    Satisfaction_c [] objs39938 = 
    Satisfaction_c.SatisfactionInstances(modelRoot, new Satisfaction_c_test39936_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39938.length;
            // Subtype Object: Delegation
    class Delegation_c_test39939_c implements ClassQueryInterface_c
    {
	  Delegation_c_test39939_c( java.util.UUID            p39940 ) {
	  m_p39940 = p39940;
	  }
	  private java.util.UUID             m_p39940; 
	  public boolean evaluate (Object candidate)
	  {
	      Delegation_c selected = (Delegation_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p39940));
	      return retval;
	  }
    }

    Delegation_c [] objs39941 = 
    Delegation_c.DelegationInstances(modelRoot, new Delegation_c_test39939_c(getElement_id())) ;
 
    objs39884 = objs39884 + objs39941.length;
    if ( objs39884 != 1 )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Packageable Element", //$NON-NLS-1$
           "Consistency: Object: Packageable Element: Association: 8001: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs39884 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Packageable Element: Association: 8001: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs39884 )  , e); 
      }
      retval = false;

    }

          // Associated One Side: rel.Numb = 8002
            // Link Object: Element Visibility
            // Other Side Class: Package
          // Associated Other Side: rel.Numb = 8004
            // Link Object: Component Visibility
          // Associated One Side: rel.Numb = 9100
            // Link Object: Global Element in System
            // Other Side Class: System Model
          // Associated Other Side: rel.Numb = 640
            // Link Object: Body in Element
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
ElementVisibility_c [] v_ele_vis_links = ElementVisibility_c.getManyPE_VISsOnR8002(this);


ElementVisibility_c  v_ele_vis_link = null;
for ( int i37242 = 0; i37242 < v_ele_vis_links.length; i37242++)
{
  v_ele_vis_link = v_ele_vis_links[i37242] ;

Package_c v_pkg = Package_c.getOneEP_PKGOnR8002(v_ele_vis_link);


if (v_ele_vis_link != null) {
v_ele_vis_link.unrelateAcrossR8002From( this ) ; v_ele_vis_link.unrelateAcrossR8002From( v_pkg ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


SearchResultSet_c v_searchResultset = SearchResultSet_c.getOnePE_SRSOnR8006(v_ele_vis_link);


if (v_ele_vis_link != null) {
v_ele_vis_link.unrelateAcrossR8006From(v_searchResultset);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_ele_vis_link != null) {
// get the location of this element in the instance list
// before deleting
if ( v_ele_vis_link.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_ele_vis_link));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

ComponentVisibility_c [] v_com_vis_links = ComponentVisibility_c.getManyPE_CVSsOnR8004(this);


ComponentVisibility_c  v_com_vis_link = null;
for ( int i37243 = 0; i37243 < v_com_vis_links.length; i37243++)
{
  v_com_vis_link = v_com_vis_links[i37243] ;

Component_c v_component = Component_c.getOneC_COnR8004(v_com_vis_link);


if (v_com_vis_link != null) {
v_com_vis_link.unrelateAcrossR8004From( this ) ; v_com_vis_link.unrelateAcrossR8004From( v_component ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_com_vis_link != null) {
// get the location of this element in the instance list
// before deleting
if ( v_com_vis_link.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_com_vis_link));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

ModelClass_c v_modelClass = ModelClass_c.getOneO_OBJOnR8001(this);


if (   (v_modelClass != null) )
{

if (v_modelClass != null) {
v_modelClass.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_modelClass != null) {
v_modelClass.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

DataType_c v_dt = DataType_c.getOneS_DTOnR8001(this);


if (   (v_dt != null) )
{

if (v_dt != null) {
v_dt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

InteractionParticipant_c v_intPart = InteractionParticipant_c.getOneSQ_POnR8001(this);


if (   (v_intPart != null) )
{

if (v_intPart != null) {
v_intPart.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_intPart != null) {
v_intPart.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

UseCaseAssociation_c v_ucAssoc = UseCaseAssociation_c.getOneUC_UCAOnR8001(this);


if (   (v_ucAssoc != null) )
{

if (v_ucAssoc != null) {
v_ucAssoc.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_ucAssoc != null) {
v_ucAssoc.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR8001(this);


if (   (v_actNode != null) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_actNode != null) {
v_actNode.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Component_c v_comp = Component_c.getOneC_COnR8001(this);


if (   (v_comp != null) )
{

if (v_comp != null) {
v_comp.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_comp != null) {
v_comp.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ComponentReference_c v_ic = ComponentReference_c.getOneCL_ICOnR8001(this);


if (   (v_ic != null) )
{

if (v_ic != null) {
v_ic.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_ic != null) {
v_ic.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Interface_c v_interface = Interface_c.getOneC_IOnR8001(this);


if (   (v_interface != null) )
{

if (v_interface != null) {
v_interface.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_interface != null) {
v_interface.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Package_c v_pkg = Package_c.getOneEP_PKGOnR8001(this);


if (   (v_pkg != null) )
{

if (v_pkg != null) {
v_pkg.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_pkg != null) {
v_pkg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ConstantSpecification_c v_csp = ConstantSpecification_c.getOneCNST_CSPOnR8001(this);


if (   (v_csp != null) )
{

if (v_csp != null) {
v_csp.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_csp != null) {
v_csp.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ActivityPartition_c v_ap = ActivityPartition_c.getOneA_APOnR8001(this);


if (   (v_ap != null) )
{

if (v_ap != null) {
v_ap.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_ap != null) {
v_ap.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ActivityEdge_c v_edge = ActivityEdge_c.getOneA_EOnR8001(this);


if (   (v_edge != null) )
{

if (v_edge != null) {
v_edge.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_edge != null) {
v_edge.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Message_c v_msg = Message_c.getOneMSG_MOnR8001(this);


if (   (v_msg != null) )
{

if (v_msg != null) {
v_msg.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_msg != null) {
v_msg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Association_c v_rel = Association_c.getOneR_RELOnR8001(this);


if (   (v_rel != null) )
{

if (v_rel != null) {
v_rel.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_rel != null) {
v_rel.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ImportedClass_c v_icomp = ImportedClass_c.getOneO_IOBJOnR8001(this);


if (   (v_icomp != null) )
{

if (v_icomp != null) {
v_icomp.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_icomp != null) {
v_icomp.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Function_c v_sync = Function_c.getOneS_SYNCOnR8001(this);


if (   (v_sync != null) )
{

if (v_sync != null) {
v_sync.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_sync != null) {
v_sync.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR8001(this);


if (   (v_ee != null) )
{

if (v_ee != null) {
v_ee.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_ee != null) {
v_ee.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Satisfaction_c v_sat = Satisfaction_c.getOneC_SFOnR8001(this);


if (   (v_sat != null) )
{

if (v_sat != null) {
v_sat.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_sat != null) {
v_sat.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Delegation_c v_delg = Delegation_c.getOneC_DGOnR8001(this);


if (   (v_delg != null) )
{

if (v_delg != null) {
v_delg.unrelateAcrossR8001From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_delg != null) {
v_delg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

BodyInElement_c [] v_bodyInElements = BodyInElement_c.getManyACT_BIEsOnR640(this);


BodyInElement_c  v_bie = null;
for ( int i37244 = 0; i37244 < v_bodyInElements.length; i37244++)
{
  v_bie = v_bodyInElements[i37244] ;

Body_c v_body = Body_c.getOneACT_ACTOnR640(v_bie);


if (v_bie != null) {
v_bie.unrelateAcrossR640From( this ) ; v_bie.unrelateAcrossR640From( v_body ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_bie != null) {
v_bie.delete() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


if (   (v_package != null) )
{

this.unrelateAcrossR8000From(v_package);



}

Component_c v_component = Component_c.getOneC_COnR8003(this);


if ( (  (v_component != null)) )
{

this.unrelateAcrossR8003From(v_component);



}

GlobalElementInSystem_c [] v_elemInSystems = GlobalElementInSystem_c.getManyG_EISsOnR9100(this);


GlobalElementInSystem_c  v_elemInSystem = null;
for ( int i37245 = 0; i37245 < v_elemInSystems.length; i37245++)
{
  v_elemInSystem = v_elemInSystems[i37245] ;

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR9100(v_elemInSystem);


if (v_elemInSystem != null) {
v_elemInSystem.unrelateAcrossR9100From( this ) ; v_elemInSystem.unrelateAcrossR9100From( v_system ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_elemInSystem != null) {
// get the location of this element in the instance list
// before deleting
if ( v_elemInSystem.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_elemInSystem));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Collectvisibleelementsforname(final boolean      p_Collectglobally,final java.util.UUID         p_Delegatingpkgid,final boolean      p_Descending,final String       p_Name,final java.util.UUID         p_Originatingcontainerid,final int  p_Type)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Collectvisibleelementsforname") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( p_Type == getType() )
{

boolean      v_visible = false ;


if ( p_Type == Elementtypeconstants_c.DATATYPE )
{

DataType_c v_dt = DataType_c.getOneS_DTOnR8001(this);


if (   (v_dt != null) && (p_Name.equals("") || v_dt.getName().equals(p_Name)) )
{

v_visible = true ;



}


}

else if ( p_Type == Elementtypeconstants_c.CONSTANT )
{

ConstantSpecification_c v_cnst = ConstantSpecification_c.getOneCNST_CSPOnR8001(this);


if (   (v_cnst != null) )
{

v_visible = true ;



}


}

else if ( p_Type == Elementtypeconstants_c.CLASS )
{

ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR8001(this);


if (   (v_clazz != null) && (p_Name.equals("") || v_clazz.getKey_lett().equals(p_Name)) )
{

v_visible = true ;



}


}

else if ( p_Type == Elementtypeconstants_c.INTERFACE )
{

Interface_c v_ifc = Interface_c.getOneC_IOnR8001(this);


if (   (v_ifc != null) && (p_Name.equals("") || v_ifc.getName().equals(p_Name)) )
{

v_visible = true ;



}


}

else if ( p_Type == Elementtypeconstants_c.FUNCTION )
{

Function_c v_fn = Function_c.getOneS_SYNCOnR8001(this);


if (   (v_fn != null) && (p_Name.equals("") || v_fn.getName().equals(p_Name)) )
{

v_visible = true ;



}


}

else if ( p_Type == Elementtypeconstants_c.COMPONENT )
{

Component_c v_comp = Component_c.getOneC_COnR8001(this);


if (   (v_comp != null) && (p_Name.equals("") || v_comp.getName().equals(p_Name)) )
{

v_visible = true ;



}


}

else if ( p_Type == Elementtypeconstants_c.EE )
{

ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR8001(this);


if (   (v_ee != null) && (p_Name.equals("") || v_ee.getKey_lett().equals(p_Name)) )
{

v_visible = true ;



}


}

else if ( p_Type == Elementtypeconstants_c.ASSOCIATION )
{

Association_c v_rel = Association_c.getOneR_RELOnR8001(this);


if (   (v_rel != null) && (p_Name.equals("") || v_rel.getNumb() == Os_c.Convert_relationship_string(			    
p_Name)) )
{

v_visible = true ;



}


}

else if ( p_Type == Elementtypeconstants_c.PACKAGE )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8001(this);


if (   (v_package != null) && (p_Name.equals("") || v_package.getName().equals(p_Name)) )
{

v_visible = true ;



}


}

if ( v_visible )
{

Package_c v_package = (Package_c) modelRoot.getInstanceList(Package_c.class).getGlobal(null, p_Originatingcontainerid);


PackageableElement_c v_packageableElement = PackageableElement_c.getOnePE_PEOnR8001(v_package);


if ( (  (v_package == null)) )
{

v_packageableElement = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, p_Originatingcontainerid);


v_package = Package_c.getOneEP_PKGOnR8001(v_packageableElement);



}

if (   (v_package != null) )
{

  class SearchResultSet_test37684_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals(p_Name) && selected.getType() == p_Type ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37684_c());


ElementVisibility_c v_visibility = new ElementVisibility_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_visibility));


if (v_visibility != null) {
  v_visibility.relateAcrossR8002To( this ) ;   v_visibility.relateAcrossR8002To( v_package ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_visibility != null) {
  v_visibility.relateAcrossR8006To(v_resultSet);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

Component_c v_originatingComp = Component_c.getOneC_COnR8001(v_packageableElement);


if (   (v_originatingComp != null) )
{

  class ComponentResultSet_test37685_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals(p_Name) && selected.getType() == p_Type ;
	}
  }
ComponentResultSet_c v_resultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_originatingComp, new ComponentResultSet_test37685_c());


ComponentVisibility_c v_visibility = new ComponentVisibility_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_visibility));


if (v_visibility != null) {
  v_visibility.relateAcrossR8004To( this ) ;   v_visibility.relateAcrossR8004To( v_originatingComp ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_visibility != null) {
  v_visibility.relateAcrossR8008To(v_resultSet);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


}

if ( getType() == Elementtypeconstants_c.PACKAGE )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8001(this);


if (   (v_package != null) && ! getElement_id().equals(p_Delegatingpkgid) )
{

if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
p_Collectglobally			    
,Gd_c.Null_unique_id()			    
,p_Descending			    
,p_Name			    
,p_Originatingcontainerid			    
,p_Type ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End collectVisibleElementsForName
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
setVisibility( Visibility_c.Public) ;



   } // End initialize
  public  String       Getqualifiedname()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Getqualifiedname") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


if (   (v_package != null) )
{

v_result = v_package.Getqualifiedname() ;



}

else
{

Component_c v_comp = Component_c.getOneC_COnR8003(this);


if (   (v_comp != null) )
{

v_result = v_comp.Getqualifiedname() ;



}


}

if ( ! v_result.equals("") )
{

v_result = v_result + "::" ;



}

v_result = v_result + Getlocalname() ;


return v_result;



   } // End getQualifiedName
  public  String       Getlocalname()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Getlocalname") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(this);


if (   (v_dt != null) )
{

return v_dt.getName();



}

ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR8001(this);


if (   (v_clazz != null) )
{

return v_clazz.getName();



}

Package_c v_package = Package_c.getOneEP_PKGOnR8001(this);


if (   (v_package != null) )
{

return v_package.getName();



}

Interface_c v_interface = Interface_c.getOneC_IOnR8001(this);


if (   (v_interface != null) )
{

return v_interface.getName();



}

Component_c v_component = Component_c.getOneC_COnR8001(this);


if (   (v_component != null) )
{

return v_component.getName();



}

Association_c v_assoc = Association_c.getOneR_RELOnR8001(this);


if (   (v_assoc != null) )
{

return Gd_c.Int_to_string(			    
v_assoc.getNumb());



}

Function_c v_func = Function_c.getOneS_SYNCOnR8001(this);


if (   (v_func != null) )
{

return v_func.getName();



}

ComponentReference_c v_iComp = ComponentReference_c.getOneCL_ICOnR8001(this);


if (   (v_iComp != null) )
{

return v_iComp.getName();



}

ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR8001(this);


if (   (v_ee != null) )
{

return v_ee.getName();



}

return "";



   } // End getLocalName
  public  boolean      Isallowedtype(final boolean      p_Isreturntype,final String       p_Typename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Isallowedtype") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


  class SearchResultSet_test37686_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37686_c());


  class DataType_test37687_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals(p_Typename) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet)), new DataType_test37687_c());


if (   (v_package == null) )
{

Component_c v_component = Component_c.getOneC_COnR8003(this);


  class ComponentResultSet_test37688_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37688_c());


  class DataType_test37689_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals(p_Typename) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet)), new DataType_test37689_c());



}

if (   (v_dt != null) )
{

if ( p_Isreturntype && p_Typename.equals("void") )
{

return true;



}

else
{

return v_dt.Iscommonallowedtype();



}


}

return false;



   } // End isAllowedType
  public  java.util.UUID         Resolvedatatyperelativetoself(final String       p_Default_name,final String       p_Expected_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Resolvedatatyperelativetoself") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,p_Expected_name			    
,v_component.getId()			    
,Elementtypeconstants_c.DATATYPE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,p_Expected_name			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.DATATYPE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

  class ComponentResultSet_test37690_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals(p_Expected_name) && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_resultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37690_c());


PackageableElement_c [] v_results = PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_resultSet));


if (   (v_package != null) )
{

  class SearchResultSet_test37691_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals(p_Expected_name) && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_pkgResultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37691_c());


v_results = PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_pkgResultSet));



}

DataType_c v_resolvedDt = DataType_c.getOneS_DTOnR8001(v_results);


if (   (v_results.length) == 0 )
{

if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,p_Default_name			    
,v_component.getId()			    
,Elementtypeconstants_c.DATATYPE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,p_Default_name			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.DATATYPE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

  class ComponentResultSet_test37692_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals(p_Default_name) && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
v_resultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37692_c());


v_results = PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_resultSet));


if (   (v_package != null) )
{

  class SearchResultSet_test37693_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals(p_Default_name) && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_pkgResultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37693_c());


v_results = PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_pkgResultSet));



}

v_resolvedDt = DataType_c.getOneS_DTOnR8001(v_results);



}

if ( (  (v_resolvedDt != null)) )
{

return v_resolvedDt.getDt_id();



}

User_c.Logerror(			    
"Unable to resolve any data type."			    
,"" ) ;


return Gd_c.Null_unique_id();



   } // End resolveDataTypeRelativeToSelf
  public  boolean      Canrefertodatatype(final java.util.UUID         p_Dtid,final String       p_Dtname)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Canrefertodatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,p_Dtname			    
,v_component.getId()			    
,Elementtypeconstants_c.DATATYPE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,p_Dtname			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.DATATYPE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

  class SearchResultSet_test37694_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals(p_Dtname) && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37694_c());


  class DataType_test37695_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Dtid) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet)), new DataType_test37695_c());


if (   (v_component != null) )
{

  class ComponentResultSet_test37696_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals(p_Dtname) && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37696_c());


  class DataType_test37697_c implements ClassQueryInterface_c
  {
	DataType_test37697_c( java.util.UUID         p37698 ) {
		m_p37698 = p37698;
	}
	private java.util.UUID         m_p37698;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p37698) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet)), new DataType_test37697_c(v_dt.getDt_id()));



}

if ( (  (v_dt != null)) )
{

return true;



}

return false;



   } // End canReferToDataType
  public  String       Getvisibilityadornment()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Getvisibilityadornment") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


SystemModel_c v_sys = SystemModel_c.getOneS_SYSOnR1401(Package_c.getOneEP_PKGOnR8001(this));


String       v_result = "" ;


if ( ((  (v_package != null) ||   (v_component != null)) || (  (v_sys != null) && v_sys.getUseglobals() == true)) )
{

if ( getVisibility() == Visibility_c.Public )
{

v_result = "+" ;



}

else if ( getVisibility() == Visibility_c.Protected )
{

v_result = "#" ;



}

else if ( getVisibility() == Visibility_c.Private )
{

v_result = "-" ;



}


}

return v_result;



   } // End getVisibilityAdornment
  public  int  Getvisibilityvalue()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Getvisibilityvalue") ; 
               final ModelRoot modelRoot = getModelRoot();
InstanceReferenceDataType_c v_irdt = InstanceReferenceDataType_c.getOneS_IRDTOnR17(DataType_c.getOneS_DTOnR8001(this));


if ( (  (v_irdt != null)) )
{

PackageableElement_c v_classPE = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR123(v_irdt));


return v_classPE.getVisibility();



}

return getVisibility();



   } // End getVisibilityValue
  public  void Resolvecomponentrelativetoself(final String       p_Expected_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Resolvecomponentrelativetoself") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,p_Expected_name			    
,v_component.getId()			    
,Elementtypeconstants_c.COMPONENT ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,p_Expected_name			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.COMPONENT ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End resolveComponentRelativeToSelf
  public  void Resolveinterfacerelativetoself(final String       p_Expected_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Resolveinterfacerelativetoself") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,p_Expected_name			    
,v_component.getId()			    
,Elementtypeconstants_c.INTERFACE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,p_Expected_name			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.INTERFACE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End resolveInterfaceRelativeToSelf
  public  java.util.UUID         Resolvepackagerelativetoself(final String       p_Expected_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Resolvepackagerelativetoself") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,p_Expected_name			    
,v_component.getId()			    
,Elementtypeconstants_c.PACKAGE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,p_Expected_name			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.PACKAGE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

  class ComponentResultSet_test37699_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals(p_Expected_name) && selected.getType() == Elementtypeconstants_c.PACKAGE ;
	}
  }
ComponentResultSet_c v_resultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37699_c());


PackageableElement_c [] v_results = PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_resultSet));


if (   (v_package != null) )
{

  class SearchResultSet_test37700_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals(p_Expected_name) && selected.getType() == Elementtypeconstants_c.PACKAGE ;
	}
  }
SearchResultSet_c v_pkgResultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37700_c());


v_results = PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_pkgResultSet));



}

Package_c v_resolvedPkg = Package_c.getOneEP_PKGOnR8001(v_results);


if ( (  (v_resolvedPkg != null)) )
{

return v_resolvedPkg.getPackage_id();



}

return Gd_c.Null_unique_id();



   } // End resolvePackageRelativeToSelf
  public  void Resolveclassrelativetoself(final String       p_Expected_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Resolveclassrelativetoself") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,p_Expected_name			    
,v_component.getId()			    
,Elementtypeconstants_c.CLASS ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,p_Expected_name			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.CLASS ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End resolveClassRelativeToSelf
  public  void Resolveeerelativetoself(final String       p_Expected_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Resolveeerelativetoself") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,p_Expected_name			    
,v_component.getId()			    
,Elementtypeconstants_c.EE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,p_Expected_name			    
,v_package.getPackage_id()			    
,Elementtypeconstants_c.EE ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End resolveEERelativeToSelf
  public  boolean      Iselementvisibletoself(final java.util.UUID         p_Elementid,final int  p_Type)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Packageable Element", " Operation entered: PackageableElement::Iselementvisibletoself") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(this);


Component_c v_component = Component_c.getOneC_COnR8003(this);


if (   (v_component != null) )
{

if (v_component != null) {
v_component.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_component != null) {
v_component.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,""			    
,v_component.getId()			    
,p_Type ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_package != null) {
v_package.Clearscope() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_package != null) {
v_package.Collectvisibleelementsforname(			    
true			    
,Gd_c.Null_unique_id()			    
,false			    
,""			    
,v_package.getPackage_id()			    
,p_Type ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

  class ComponentResultSet_test37701_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getType() == p_Type ;
	}
  }
ComponentResultSet_c v_resultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37701_c());


PackageableElement_c [] v_results = PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_resultSet));


if (   (v_package != null) )
{

  class SearchResultSet_test37702_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getType() == p_Type ;
	}
  }
SearchResultSet_c v_pkgResultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37702_c());


v_results = PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_pkgResultSet));



}

PackageableElement_c  v_result = null;
for ( int i37246 = 0; i37246 < v_results.length; i37246++)
{
  v_result = v_results[i37246] ;

if ( (v_result.getElement_id().equals(p_Elementid)) )
{

return true;



}


}

return false;



   } // End isElementVisibleToSelf

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Packageable Element
