package com.mentor.nucleus.bp.core.ui;
//======================================================================
//
// File: com/mentor/nucleus/bp/core/ui/DeleteAction.java
//
// WARNING:      Do not edit this generated file
// Generated by: arc/create_global_action.inc
// Version:      $Revision: 1.38 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//======================================================================
//
// This class is the main BridgePoint entry point for the retargetable
// action, delete.
//
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.HashSet;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IWorkspaceRunnable;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.jface.action.Action;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.swt.custom.BusyIndicator;
import org.eclipse.ui.actions.ActionFactory;
import com.mentor.nucleus.bp.core.util.OoaofgraphicsUtil;
import org.eclipse.core.resources.IResource;
import org.eclipse.ui.actions.DeleteResourceAction;
import org.eclipse.ui.PlatformUI;
import com.mentor.nucleus.bp.core.common.ModelRoot;

import com.mentor.nucleus.bp.core.*;
import com.mentor.nucleus.bp.core.common.*;
import com.mentor.nucleus.bp.core.util.TransactionUtil;

public class DeleteAction extends Action {
	public DeleteAction(ImageDescriptor icon) {
		super(ActionFactory.DELETE.getId());
		setText("Delete");
		setToolTipText("Delete this model Element");
		setImageDescriptor(icon);
	}
	private boolean fStartTransaction = true;

	public void setStartTransaction(boolean value) {
		fStartTransaction = value;
	}
	public void run() {
		final IStructuredSelection selection = Selection.getInstance()
				.getStructuredSelection();

		// If there are domains in the selection, then an additional
		// PRE_DELETE event will be sent by the resource change listener
		// when the file deletion is noticed
		final Ooaofooa defRoot = Ooaofooa.getDefaultInstance();
		defRoot.fireModelElementAboutToBeDeleted(defRoot);

		BusyIndicator.showWhile(null, new Runnable() {
			public void run() {
				if (!TransactionUtil
						.modifySelectedResources(
								"Confirm Element Deletion",
								"One or more of the selected elements are read only.  Do you still wish to delete them?"))
					return;
				TransactionUtil.TransactionGroup transactionGroup = null;
				if (fStartTransaction) {
					transactionGroup = TransactionUtil
							.startTransactionsOnSelectedModelRoots("Delete model element instance(s)");
				}

				try {
					Ooaofooa.beginSaveOperation();
					// only respond to DELETE events
					int old_val = Ooaofooa.Enablemodelchangelistenersfor(
							defRoot, Modeleventnotification_c.DELTA_DELETE,
							Modeleventnotification_c.MODEL_ELEMENT_CHANGED);
					try {
						deleteSelection(selection);
					} finally {
						Ooaofooa.Enablemodelchangelistenersfor(defRoot,
								old_val, old_val);
					}

					// Remove deleted items from selection.  This prevents problems
					// when the Properties view refreshes.
					Selection.getInstance().clear();
					// Restore any elements that were not deleted.
					Iterator it = selection.iterator();
					while (it.hasNext()) {
						Object next = it.next();
						if (next instanceof NonRootModelElement) {
							NonRootModelElement elem = (NonRootModelElement) next;
							if (!elem.isOrphaned()) {
								Selection.getInstance().addToSelection(elem);
							}
						}
					}
					// catch all exceptions and cancel the transactions
				} catch (Exception e) {
					if (fStartTransaction) {
						TransactionUtil.cancelTransactions(transactionGroup, e);
					}
					CorePlugin.logError(
							"Transaction: Delete instance(s) failed", e);//$NON-NLS-1$
				} finally {
					Ooaofooa.endSaveOperation();
				}

				if (fStartTransaction) {
					TransactionUtil.endTransactions(transactionGroup);
				}

			}
		});

	}
	public void deleteSelection(IStructuredSelection selection) {
		S_SYS_Delete(selection);
		S_DOM_Delete(selection);
		CL_IC_Delete(selection);
		CP_CP_Delete(selection);
		IP_IP_Delete(selection);
		C_C_Delete(selection);
		C_I_Delete(selection);
		C_P_Delete(selection);
		C_R_Delete(selection);
		C_PO_Delete(selection);
		C_AS_Delete(selection);
		C_IO_Delete(selection);
		C_PP_Delete(selection);
		C_DG_Delete(selection);
		SQ_S_Delete(selection);
		SQ_CP_Delete(selection);
		MSG_A_Delete(selection);
		SQ_COP_Delete(selection);
		SQ_AV_Delete(selection);
		SQ_CPA_Delete(selection);
		SQ_EEP_Delete(selection);
		SQ_FPP_Delete(selection);
		SQ_CIP_Delete(selection);
		SQ_LS_Delete(selection);
		MSG_R_Delete(selection);
		MSG_SM_Delete(selection);
		MSG_AM_Delete(selection);
		SQ_TM_Delete(selection);
		SQ_TS_Delete(selection);
		SQ_AP_Delete(selection);
		SQ_PP_Delete(selection);
		S_DPK_Delete(selection);
		S_UDT_Delete(selection);
		S_EDT_Delete(selection);
		S_ENUM_Delete(selection);
		CNST_CSP_Delete(selection);
		CNST_LSC_Delete(selection);
		S_FPK_Delete(selection);
		S_SYNC_Delete(selection);
		S_SPARM_Delete(selection);
		S_EEPK_Delete(selection);
		S_EE_Delete(selection);
		S_BRG_Delete(selection);
		S_BPARM_Delete(selection);
		S_SS_Delete(selection);
		O_OBJ_Delete(selection);
		O_ATTR_Delete(selection);
		O_TFR_Delete(selection);
		O_TPARM_Delete(selection);
		SM_ISM_Delete(selection);
		SM_NLEVT_Delete(selection);
		SM_EVT_Delete(selection);
		SM_EVTDI_Delete(selection);
		SM_ASM_Delete(selection);
		SM_STATE_Delete(selection);
		O_IOBJ_Delete(selection);
		R_REL_Delete(selection);
		SM_TXN_Delete(selection);
		SM_CRTXN_Delete(selection);
		R_ASSR_Delete(selection);
		R_SUB_Delete(selection);
		COMM_COMM_Delete(selection);
		COMM_LNK_Delete(selection);
		UC_UCC_Delete(selection);
		IA_UCP_Delete(selection);
		UC_BA_Delete(selection);
		UC_G_Delete(selection);
		UC_I_Delete(selection);
		UC_E_Delete(selection);
		A_A_Delete(selection);
		A_FJ_Delete(selection);
		A_INI_Delete(selection);
		A_E_Delete(selection);
		A_AF_Delete(selection);
		A_FF_Delete(selection);
		A_GA_Delete(selection);
		A_DM_Delete(selection);
		A_OBJ_Delete(selection);
		A_AEA_Delete(selection);
		A_ATE_Delete(selection);
		A_SS_Delete(selection);
		A_AP_Delete(selection);
		S_SDT_Delete(selection);
		S_MBR_Delete(selection);
		EP_PKG_Delete(selection);
		SPR_RO_Delete(selection);
		SPR_RS_Delete(selection);
		SPR_PO_Delete(selection);
		SPR_PS_Delete(selection);
	}
	private void S_SYS_Delete(IStructuredSelection selection) {
		int SystemModelcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof SystemModel_c) {
				SystemModelcount++;
			}
		}
		SystemModel_c[] systems = new SystemModel_c[SystemModelcount];
		SystemModelcount = 0;

		// Assign the context selection variables with the action context
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof SystemModel_c) {
				systems[SystemModelcount] = ((SystemModel_c) context);
				SystemModelcount++;
			}
		}
		if (SystemModelcount > 0) {
			DeleteResourceAction dra = new DeleteResourceAction(PlatformUI
					.getWorkbench().getActiveWorkbenchWindow().getShell());
			dra.selectionChanged(new StructuredSelection(systems));
			dra.run();
		}

	}
	private void S_DOM_Delete(IStructuredSelection selection) {
		int Domaincount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Domain_c) {
				Domaincount++;
			}
		}
		if (Domaincount == 0)
			return;
		Domain_c[] v_doms = new Domain_c[Domaincount];
		Domaincount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Domain_c) {
				v_doms[Domaincount] = (Domain_c) context;
				Domaincount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Domain_c v_dom = null;
		for (int i9600 = 0; i9600 < v_doms.length; i9600++) {
			v_dom = v_doms[i9600];

			if (v_dom != null) {
				v_dom.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void CL_IC_Delete(IStructuredSelection selection) {
		int ComponentReferencecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ComponentReference_c) {
				ComponentReferencecount++;
			}
		}
		if (ComponentReferencecount == 0)
			return;
		ComponentReference_c[] v_imports = new ComponentReference_c[ComponentReferencecount];
		ComponentReferencecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ComponentReference_c) {
				v_imports[ComponentReferencecount] = (ComponentReference_c) context;
				ComponentReferencecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ComponentReference_c v_import = null;
		for (int i9677 = 0; i9677 < v_imports.length; i9677++) {
			v_import = v_imports[i9677];

			if (v_import != null) {
				v_import.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void CP_CP_Delete(IStructuredSelection selection) {
		int ComponentPackagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ComponentPackage_c) {
				ComponentPackagecount++;
			}
		}
		if (ComponentPackagecount == 0)
			return;
		ComponentPackage_c[] v_packages = new ComponentPackage_c[ComponentPackagecount];
		ComponentPackagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ComponentPackage_c) {
				v_packages[ComponentPackagecount] = (ComponentPackage_c) context;
				ComponentPackagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ComponentPackage_c v_package = null;
		for (int i9683 = 0; i9683 < v_packages.length; i9683++) {
			v_package = v_packages[i9683];

			if (v_package != null) {
				v_package.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void IP_IP_Delete(IStructuredSelection selection) {
		int InterfacePackagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InterfacePackage_c) {
				InterfacePackagecount++;
			}
		}
		if (InterfacePackagecount == 0)
			return;
		InterfacePackage_c[] v_diagrams = new InterfacePackage_c[InterfacePackagecount];
		InterfacePackagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InterfacePackage_c) {
				v_diagrams[InterfacePackagecount] = (InterfacePackage_c) context;
				InterfacePackagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		InterfacePackage_c v_diagram = null;
		for (int i9670 = 0; i9670 < v_diagrams.length; i9670++) {
			v_diagram = v_diagrams[i9670];

			if (v_diagram != null) {
				v_diagram.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_C_Delete(IStructuredSelection selection) {
		int Componentcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Component_c) {
				Componentcount++;
			}
		}
		if (Componentcount == 0)
			return;
		Component_c[] v_comps = new Component_c[Componentcount];
		Componentcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Component_c) {
				v_comps[Componentcount] = (Component_c) context;
				Componentcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Component_c v_comp = null;
		for (int i9671 = 0; i9671 < v_comps.length; i9671++) {
			v_comp = v_comps[i9671];

			if (v_comp != null) {
				v_comp.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_I_Delete(IStructuredSelection selection) {
		int Interfacecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Interface_c) {
				Interfacecount++;
			}
		}
		if (Interfacecount == 0)
			return;
		Interface_c[] v_interfaces = new Interface_c[Interfacecount];
		Interfacecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Interface_c) {
				v_interfaces[Interfacecount] = (Interface_c) context;
				Interfacecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Interface_c v_i = null;
		for (int i9672 = 0; i9672 < v_interfaces.length; i9672++) {
			v_i = v_interfaces[i9672];

			if (v_i != null) {
				v_i.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_P_Delete(IStructuredSelection selection) {
		int Provisioncount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Provision_c) {
				Provisioncount++;
			}
		}
		if (Provisioncount == 0)
			return;
		Provision_c[] v_provisions = new Provision_c[Provisioncount];
		Provisioncount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Provision_c) {
				v_provisions[Provisioncount] = (Provision_c) context;
				Provisioncount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Provision_c v_provision = null;
		for (int i9673 = 0; i9673 < v_provisions.length; i9673++) {
			v_provision = v_provisions[i9673];

			if (v_provision != null) {
				v_provision.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_R_Delete(IStructuredSelection selection) {
		int Requirementcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Requirement_c) {
				Requirementcount++;
			}
		}
		if (Requirementcount == 0)
			return;
		Requirement_c[] v_reqs = new Requirement_c[Requirementcount];
		Requirementcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Requirement_c) {
				v_reqs[Requirementcount] = (Requirement_c) context;
				Requirementcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Requirement_c v_req = null;
		for (int i9674 = 0; i9674 < v_reqs.length; i9674++) {
			v_req = v_reqs[i9674];

			if (v_req != null) {
				v_req.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_PO_Delete(IStructuredSelection selection) {
		int Portcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Port_c) {
				Portcount++;
			}
		}
		if (Portcount == 0)
			return;
		Port_c[] v_ports = new Port_c[Portcount];
		Portcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Port_c) {
				v_ports[Portcount] = (Port_c) context;
				Portcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Port_c v_port = null;
		for (int i9685 = 0; i9685 < v_ports.length; i9685++) {
			v_port = v_ports[i9685];

			if (v_port != null) {
				v_port.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_AS_Delete(IStructuredSelection selection) {
		int InterfaceSignalcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InterfaceSignal_c) {
				InterfaceSignalcount++;
			}
		}
		if (InterfaceSignalcount == 0)
			return;
		InterfaceSignal_c[] v_signals = new InterfaceSignal_c[InterfaceSignalcount];
		InterfaceSignalcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InterfaceSignal_c) {
				v_signals[InterfaceSignalcount] = (InterfaceSignal_c) context;
				InterfaceSignalcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		InterfaceSignal_c v_signal = null;
		for (int i9675 = 0; i9675 < v_signals.length; i9675++) {
			v_signal = v_signals[i9675];

			if (v_signal != null) {
				v_signal.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_IO_Delete(IStructuredSelection selection) {
		int InterfaceOperationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InterfaceOperation_c) {
				InterfaceOperationcount++;
			}
		}
		if (InterfaceOperationcount == 0)
			return;
		InterfaceOperation_c[] v_ops = new InterfaceOperation_c[InterfaceOperationcount];
		InterfaceOperationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InterfaceOperation_c) {
				v_ops[InterfaceOperationcount] = (InterfaceOperation_c) context;
				InterfaceOperationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		InterfaceOperation_c v_op = null;
		for (int i9678 = 0; i9678 < v_ops.length; i9678++) {
			v_op = v_ops[i9678];

			if (v_op != null) {
				v_op.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_PP_Delete(IStructuredSelection selection) {
		int PropertyParametercount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof PropertyParameter_c) {
				PropertyParametercount++;
			}
		}
		if (PropertyParametercount == 0)
			return;
		PropertyParameter_c[] v_parms = new PropertyParameter_c[PropertyParametercount];
		PropertyParametercount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof PropertyParameter_c) {
				v_parms[PropertyParametercount] = (PropertyParameter_c) context;
				PropertyParametercount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		PropertyParameter_c v_parm = null;
		for (int i9676 = 0; i9676 < v_parms.length; i9676++) {
			v_parm = v_parms[i9676];

			if (v_parm != null) {
				v_parm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void C_DG_Delete(IStructuredSelection selection) {
		int Delegationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Delegation_c) {
				Delegationcount++;
			}
		}
		if (Delegationcount == 0)
			return;
		Delegation_c[] v_delegations = new Delegation_c[Delegationcount];
		Delegationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Delegation_c) {
				v_delegations[Delegationcount] = (Delegation_c) context;
				Delegationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Delegation_c v_delegation = null;
		for (int i9684 = 0; i9684 < v_delegations.length; i9684++) {
			v_delegation = v_delegations[i9684];

			if (v_delegation != null) {
				v_delegation.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_S_Delete(IStructuredSelection selection) {
		int Sequencecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Sequence_c) {
				Sequencecount++;
			}
		}
		if (Sequencecount == 0)
			return;
		Sequence_c[] v_sequences = new Sequence_c[Sequencecount];
		Sequencecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Sequence_c) {
				v_sequences[Sequencecount] = (Sequence_c) context;
				Sequencecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Sequence_c v_sequence = null;
		for (int i9632 = 0; i9632 < v_sequences.length; i9632++) {
			v_sequence = v_sequences[i9632];

			if (v_sequence != null) {
				v_sequence.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_CP_Delete(IStructuredSelection selection) {
		int ClassParticipantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassParticipant_c) {
				ClassParticipantcount++;
			}
		}
		if (ClassParticipantcount == 0)
			return;
		ClassParticipant_c[] v_participants = new ClassParticipant_c[ClassParticipantcount];
		ClassParticipantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassParticipant_c) {
				v_participants[ClassParticipantcount] = (ClassParticipant_c) context;
				ClassParticipantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ClassParticipant_c v_participant = null;
		for (int i9634 = 0; i9634 < v_participants.length; i9634++) {
			v_participant = v_participants[i9634];

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void MSG_A_Delete(IStructuredSelection selection) {
		int MessageArgumentcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof MessageArgument_c) {
				MessageArgumentcount++;
			}
		}
		if (MessageArgumentcount == 0)
			return;
		MessageArgument_c[] v_arguments = new MessageArgument_c[MessageArgumentcount];
		MessageArgumentcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof MessageArgument_c) {
				v_arguments[MessageArgumentcount] = (MessageArgument_c) context;
				MessageArgumentcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		MessageArgument_c v_argument = null;
		for (int i9646 = 0; i9646 < v_arguments.length; i9646++) {
			v_argument = v_arguments[i9646];

			if (v_argument != null) {
				v_argument.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_COP_Delete(IStructuredSelection selection) {
		int ComponentParticipantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ComponentParticipant_c) {
				ComponentParticipantcount++;
			}
		}
		if (ComponentParticipantcount == 0)
			return;
		ComponentParticipant_c[] v_comps = new ComponentParticipant_c[ComponentParticipantcount];
		ComponentParticipantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ComponentParticipant_c) {
				v_comps[ComponentParticipantcount] = (ComponentParticipant_c) context;
				ComponentParticipantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ComponentParticipant_c v_comp = null;
		for (int i9686 = 0; i9686 < v_comps.length; i9686++) {
			v_comp = v_comps[i9686];

			if (v_comp != null) {
				v_comp.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_AV_Delete(IStructuredSelection selection) {
		int InstanceAttributeValuecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InstanceAttributeValue_c) {
				InstanceAttributeValuecount++;
			}
		}
		if (InstanceAttributeValuecount == 0)
			return;
		InstanceAttributeValue_c[] v_avs = new InstanceAttributeValue_c[InstanceAttributeValuecount];
		InstanceAttributeValuecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InstanceAttributeValue_c) {
				v_avs[InstanceAttributeValuecount] = (InstanceAttributeValue_c) context;
				InstanceAttributeValuecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		InstanceAttributeValue_c v_av = null;
		for (int i9641 = 0; i9641 < v_avs.length; i9641++) {
			v_av = v_avs[i9641];

			if (v_av != null) {
				v_av.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_CPA_Delete(IStructuredSelection selection) {
		int ClassParticipantAttributecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassParticipantAttribute_c) {
				ClassParticipantAttributecount++;
			}
		}
		if (ClassParticipantAttributecount == 0)
			return;
		ClassParticipantAttribute_c[] v_attrs = new ClassParticipantAttribute_c[ClassParticipantAttributecount];
		ClassParticipantAttributecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassParticipantAttribute_c) {
				v_attrs[ClassParticipantAttributecount] = (ClassParticipantAttribute_c) context;
				ClassParticipantAttributecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ClassParticipantAttribute_c v_attr = null;
		for (int i9640 = 0; i9640 < v_attrs.length; i9640++) {
			v_attr = v_attrs[i9640];

			if (v_attr != null) {
				v_attr.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_EEP_Delete(IStructuredSelection selection) {
		int ExternalEntityParticipantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ExternalEntityParticipant_c) {
				ExternalEntityParticipantcount++;
			}
		}
		if (ExternalEntityParticipantcount == 0)
			return;
		ExternalEntityParticipant_c[] v_participants = new ExternalEntityParticipant_c[ExternalEntityParticipantcount];
		ExternalEntityParticipantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ExternalEntityParticipant_c) {
				v_participants[ExternalEntityParticipantcount] = (ExternalEntityParticipant_c) context;
				ExternalEntityParticipantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ExternalEntityParticipant_c v_participant = null;
		for (int i9633 = 0; i9633 < v_participants.length; i9633++) {
			v_participant = v_participants[i9633];

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_FPP_Delete(IStructuredSelection selection) {
		int FunctionPackageParticipantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof FunctionPackageParticipant_c) {
				FunctionPackageParticipantcount++;
			}
		}
		if (FunctionPackageParticipantcount == 0)
			return;
		FunctionPackageParticipant_c[] v_participants = new FunctionPackageParticipant_c[FunctionPackageParticipantcount];
		FunctionPackageParticipantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof FunctionPackageParticipant_c) {
				v_participants[FunctionPackageParticipantcount] = (FunctionPackageParticipant_c) context;
				FunctionPackageParticipantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		FunctionPackageParticipant_c v_participant = null;
		for (int i9635 = 0; i9635 < v_participants.length; i9635++) {
			v_participant = v_participants[i9635];

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_CIP_Delete(IStructuredSelection selection) {
		int ClassInstanceParticipantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassInstanceParticipant_c) {
				ClassInstanceParticipantcount++;
			}
		}
		if (ClassInstanceParticipantcount == 0)
			return;
		ClassInstanceParticipant_c[] v_participants = new ClassInstanceParticipant_c[ClassInstanceParticipantcount];
		ClassInstanceParticipantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassInstanceParticipant_c) {
				v_participants[ClassInstanceParticipantcount] = (ClassInstanceParticipant_c) context;
				ClassInstanceParticipantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ClassInstanceParticipant_c v_participant = null;
		for (int i9636 = 0; i9636 < v_participants.length; i9636++) {
			v_participant = v_participants[i9636];

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_LS_Delete(IStructuredSelection selection) {
		int Lifespancount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Lifespan_c) {
				Lifespancount++;
			}
		}
		if (Lifespancount == 0)
			return;
		Lifespan_c[] v_participants = new Lifespan_c[Lifespancount];
		Lifespancount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Lifespan_c) {
				v_participants[Lifespancount] = (Lifespan_c) context;
				Lifespancount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Lifespan_c v_participant = null;
		for (int i9639 = 0; i9639 < v_participants.length; i9639++) {
			v_participant = v_participants[i9639];

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void MSG_R_Delete(IStructuredSelection selection) {
		int ReturnMessagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ReturnMessage_c) {
				ReturnMessagecount++;
			}
		}
		if (ReturnMessagecount == 0)
			return;
		ReturnMessage_c[] v_messages = new ReturnMessage_c[ReturnMessagecount];
		ReturnMessagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ReturnMessage_c) {
				v_messages[ReturnMessagecount] = (ReturnMessage_c) context;
				ReturnMessagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ReturnMessage_c v_message = null;
		for (int i9645 = 0; i9645 < v_messages.length; i9645++) {
			v_message = v_messages[i9645];

			if (v_message != null) {
				v_message.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void MSG_SM_Delete(IStructuredSelection selection) {
		int SynchronousMessagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof SynchronousMessage_c) {
				SynchronousMessagecount++;
			}
		}
		if (SynchronousMessagecount == 0)
			return;
		SynchronousMessage_c[] v_messages = new SynchronousMessage_c[SynchronousMessagecount];
		SynchronousMessagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof SynchronousMessage_c) {
				v_messages[SynchronousMessagecount] = (SynchronousMessage_c) context;
				SynchronousMessagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		SynchronousMessage_c v_message = null;
		for (int i9643 = 0; i9643 < v_messages.length; i9643++) {
			v_message = v_messages[i9643];

			if (v_message != null) {
				v_message.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void MSG_AM_Delete(IStructuredSelection selection) {
		int AsynchronousMessagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof AsynchronousMessage_c) {
				AsynchronousMessagecount++;
			}
		}
		if (AsynchronousMessagecount == 0)
			return;
		AsynchronousMessage_c[] v_messages = new AsynchronousMessage_c[AsynchronousMessagecount];
		AsynchronousMessagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof AsynchronousMessage_c) {
				v_messages[AsynchronousMessagecount] = (AsynchronousMessage_c) context;
				AsynchronousMessagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		AsynchronousMessage_c v_message = null;
		for (int i9644 = 0; i9644 < v_messages.length; i9644++) {
			v_message = v_messages[i9644];

			if (v_message != null) {
				v_message.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_TM_Delete(IStructuredSelection selection) {
		int TimingMarkcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof TimingMark_c) {
				TimingMarkcount++;
			}
		}
		if (TimingMarkcount == 0)
			return;
		TimingMark_c[] v_marks = new TimingMark_c[TimingMarkcount];
		TimingMarkcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof TimingMark_c) {
				v_marks[TimingMarkcount] = (TimingMark_c) context;
				TimingMarkcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		TimingMark_c v_mark = null;
		for (int i9637 = 0; i9637 < v_marks.length; i9637++) {
			v_mark = v_marks[i9637];

			if (v_mark != null) {
				v_mark.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_TS_Delete(IStructuredSelection selection) {
		int TimeSpancount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof TimeSpan_c) {
				TimeSpancount++;
			}
		}
		if (TimeSpancount == 0)
			return;
		TimeSpan_c[] v_spans = new TimeSpan_c[TimeSpancount];
		TimeSpancount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof TimeSpan_c) {
				v_spans[TimeSpancount] = (TimeSpan_c) context;
				TimeSpancount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		TimeSpan_c v_span = null;
		for (int i9638 = 0; i9638 < v_spans.length; i9638++) {
			v_span = v_spans[i9638];

			if (v_span != null) {
				v_span.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_AP_Delete(IStructuredSelection selection) {
		int ActorParticipantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActorParticipant_c) {
				ActorParticipantcount++;
			}
		}
		if (ActorParticipantcount == 0)
			return;
		ActorParticipant_c[] v_aps = new ActorParticipant_c[ActorParticipantcount];
		ActorParticipantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActorParticipant_c) {
				v_aps[ActorParticipantcount] = (ActorParticipant_c) context;
				ActorParticipantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ActorParticipant_c v_ap = null;
		for (int i9642 = 0; i9642 < v_aps.length; i9642++) {
			v_ap = v_aps[i9642];

			if (v_ap != null) {
				v_ap.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SQ_PP_Delete(IStructuredSelection selection) {
		int PackageParticipantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof PackageParticipant_c) {
				PackageParticipantcount++;
			}
		}
		if (PackageParticipantcount == 0)
			return;
		PackageParticipant_c[] v_participants = new PackageParticipant_c[PackageParticipantcount];
		PackageParticipantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof PackageParticipant_c) {
				v_participants[PackageParticipantcount] = (PackageParticipant_c) context;
				PackageParticipantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		PackageParticipant_c v_participant = null;
		for (int i9694 = 0; i9694 < v_participants.length; i9694++) {
			v_participant = v_participants[i9694];

			if (v_participant != null) {
				v_participant.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_DPK_Delete(IStructuredSelection selection) {
		int DataTypePackagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof DataTypePackage_c) {
				DataTypePackagecount++;
			}
		}
		if (DataTypePackagecount == 0)
			return;
		DataTypePackage_c[] v_dPkgs = new DataTypePackage_c[DataTypePackagecount];
		DataTypePackagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof DataTypePackage_c) {
				v_dPkgs[DataTypePackagecount] = (DataTypePackage_c) context;
				DataTypePackagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		DataTypePackage_c v_dPkg = null;
		for (int i9608 = 0; i9608 < v_dPkgs.length; i9608++) {
			v_dPkg = v_dPkgs[i9608];

			if (v_dPkg != null) {
				v_dPkg.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_UDT_Delete(IStructuredSelection selection) {
		int UserDataTypecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof UserDataType_c) {
				UserDataTypecount++;
			}
		}
		if (UserDataTypecount == 0)
			return;
		UserDataType_c[] v_udts = new UserDataType_c[UserDataTypecount];
		UserDataTypecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof UserDataType_c) {
				v_udts[UserDataTypecount] = (UserDataType_c) context;
				UserDataTypecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		UserDataType_c v_udt = null;
		for (int i9610 = 0; i9610 < v_udts.length; i9610++) {
			v_udt = v_udts[i9610];

			DataType_c v_dt = DataType_c.getOneS_DTOnR17(v_udt);

			if (v_dt != null) {
				v_dt.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_EDT_Delete(IStructuredSelection selection) {
		int EnumerationDataTypecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof EnumerationDataType_c) {
				EnumerationDataTypecount++;
			}
		}
		if (EnumerationDataTypecount == 0)
			return;
		EnumerationDataType_c[] v_edts = new EnumerationDataType_c[EnumerationDataTypecount];
		EnumerationDataTypecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof EnumerationDataType_c) {
				v_edts[EnumerationDataTypecount] = (EnumerationDataType_c) context;
				EnumerationDataTypecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		EnumerationDataType_c v_edt = null;
		for (int i9611 = 0; i9611 < v_edts.length; i9611++) {
			v_edt = v_edts[i9611];

			DataType_c v_dt = DataType_c.getOneS_DTOnR17(v_edt);

			if (v_dt != null) {
				v_dt.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_ENUM_Delete(IStructuredSelection selection) {
		int Enumeratorcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Enumerator_c) {
				Enumeratorcount++;
			}
		}
		if (Enumeratorcount == 0)
			return;
		Enumerator_c[] v_eNums = new Enumerator_c[Enumeratorcount];
		Enumeratorcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Enumerator_c) {
				v_eNums[Enumeratorcount] = (Enumerator_c) context;
				Enumeratorcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Enumerator_c v_eNum = null;
		for (int i9612 = 0; i9612 < v_eNums.length; i9612++) {
			v_eNum = v_eNums[i9612];

			if (v_eNum != null) {
				v_eNum.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void CNST_CSP_Delete(IStructuredSelection selection) {
		int ConstantSpecificationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ConstantSpecification_c) {
				ConstantSpecificationcount++;
			}
		}
		if (ConstantSpecificationcount == 0)
			return;
		ConstantSpecification_c[] v_csps = new ConstantSpecification_c[ConstantSpecificationcount];
		ConstantSpecificationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ConstantSpecification_c) {
				v_csps[ConstantSpecificationcount] = (ConstantSpecification_c) context;
				ConstantSpecificationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ConstantSpecification_c v_csp = null;
		for (int i9688 = 0; i9688 < v_csps.length; i9688++) {
			v_csp = v_csps[i9688];

			if (v_csp != null) {
				v_csp.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void CNST_LSC_Delete(IStructuredSelection selection) {
		int LiteralSymbolicConstantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof LiteralSymbolicConstant_c) {
				LiteralSymbolicConstantcount++;
			}
		}
		if (LiteralSymbolicConstantcount == 0)
			return;
		LiteralSymbolicConstant_c[] v_lscs = new LiteralSymbolicConstant_c[LiteralSymbolicConstantcount];
		LiteralSymbolicConstantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof LiteralSymbolicConstant_c) {
				v_lscs[LiteralSymbolicConstantcount] = (LiteralSymbolicConstant_c) context;
				LiteralSymbolicConstantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		LiteralSymbolicConstant_c v_lsc = null;
		for (int i9689 = 0; i9689 < v_lscs.length; i9689++) {
			v_lsc = v_lscs[i9689];

			SymbolicConstant_c v_syc = SymbolicConstant_c
					.getOneCNST_SYCOnR1502(LeafSymbolicConstant_c
							.getOneCNST_LFSCOnR1503(v_lsc));

			if (v_syc != null) {
				v_syc.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_FPK_Delete(IStructuredSelection selection) {
		int FunctionPackagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof FunctionPackage_c) {
				FunctionPackagecount++;
			}
		}
		if (FunctionPackagecount == 0)
			return;
		FunctionPackage_c[] v_fPkgs = new FunctionPackage_c[FunctionPackagecount];
		FunctionPackagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof FunctionPackage_c) {
				v_fPkgs[FunctionPackagecount] = (FunctionPackage_c) context;
				FunctionPackagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		FunctionPackage_c v_fPkg = null;
		for (int i9607 = 0; i9607 < v_fPkgs.length; i9607++) {
			v_fPkg = v_fPkgs[i9607];

			if (v_fPkg != null) {
				v_fPkg.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_SYNC_Delete(IStructuredSelection selection) {
		int Functioncount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Function_c) {
				Functioncount++;
			}
		}
		if (Functioncount == 0)
			return;
		Function_c[] v_fns = new Function_c[Functioncount];
		Functioncount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Function_c) {
				v_fns[Functioncount] = (Function_c) context;
				Functioncount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Function_c v_fn = null;
		for (int i9602 = 0; i9602 < v_fns.length; i9602++) {
			v_fn = v_fns[i9602];

			if (v_fn != null) {
				v_fn.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_SPARM_Delete(IStructuredSelection selection) {
		int FunctionParametercount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof FunctionParameter_c) {
				FunctionParametercount++;
			}
		}
		if (FunctionParametercount == 0)
			return;
		FunctionParameter_c[] v_fps = new FunctionParameter_c[FunctionParametercount];
		FunctionParametercount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof FunctionParameter_c) {
				v_fps[FunctionParametercount] = (FunctionParameter_c) context;
				FunctionParametercount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		FunctionParameter_c v_fp = null;
		for (int i9603 = 0; i9603 < v_fps.length; i9603++) {
			v_fp = v_fps[i9603];

			if (v_fp != null) {
				v_fp.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_EEPK_Delete(IStructuredSelection selection) {
		int ExternalEntityPackagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ExternalEntityPackage_c) {
				ExternalEntityPackagecount++;
			}
		}
		if (ExternalEntityPackagecount == 0)
			return;
		ExternalEntityPackage_c[] v_ePkgs = new ExternalEntityPackage_c[ExternalEntityPackagecount];
		ExternalEntityPackagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ExternalEntityPackage_c) {
				v_ePkgs[ExternalEntityPackagecount] = (ExternalEntityPackage_c) context;
				ExternalEntityPackagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ExternalEntityPackage_c v_ePkg = null;
		for (int i9609 = 0; i9609 < v_ePkgs.length; i9609++) {
			v_ePkg = v_ePkgs[i9609];

			if (v_ePkg != null) {
				v_ePkg.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_EE_Delete(IStructuredSelection selection) {
		int ExternalEntitycount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ExternalEntity_c) {
				ExternalEntitycount++;
			}
		}
		if (ExternalEntitycount == 0)
			return;
		ExternalEntity_c[] v_ees = new ExternalEntity_c[ExternalEntitycount];
		ExternalEntitycount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ExternalEntity_c) {
				v_ees[ExternalEntitycount] = (ExternalEntity_c) context;
				ExternalEntitycount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ExternalEntity_c v_ee = null;
		for (int i9613 = 0; i9613 < v_ees.length; i9613++) {
			v_ee = v_ees[i9613];

			if (v_ee != null) {
				v_ee.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_BRG_Delete(IStructuredSelection selection) {
		int Bridgecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Bridge_c) {
				Bridgecount++;
			}
		}
		if (Bridgecount == 0)
			return;
		Bridge_c[] v_brgs = new Bridge_c[Bridgecount];
		Bridgecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Bridge_c) {
				v_brgs[Bridgecount] = (Bridge_c) context;
				Bridgecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Bridge_c v_brg = null;
		for (int i9614 = 0; i9614 < v_brgs.length; i9614++) {
			v_brg = v_brgs[i9614];

			if (v_brg != null) {
				v_brg.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_BPARM_Delete(IStructuredSelection selection) {
		int BridgeParametercount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof BridgeParameter_c) {
				BridgeParametercount++;
			}
		}
		if (BridgeParametercount == 0)
			return;
		BridgeParameter_c[] v_bparms = new BridgeParameter_c[BridgeParametercount];
		BridgeParametercount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof BridgeParameter_c) {
				v_bparms[BridgeParametercount] = (BridgeParameter_c) context;
				BridgeParametercount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		BridgeParameter_c v_bparm = null;
		for (int i9615 = 0; i9615 < v_bparms.length; i9615++) {
			v_bparm = v_bparms[i9615];

			if (v_bparm != null) {
				v_bparm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_SS_Delete(IStructuredSelection selection) {
		int Subsystemcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Subsystem_c) {
				Subsystemcount++;
			}
		}
		if (Subsystemcount == 0)
			return;
		Subsystem_c[] v_sss = new Subsystem_c[Subsystemcount];
		Subsystemcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Subsystem_c) {
				v_sss[Subsystemcount] = (Subsystem_c) context;
				Subsystemcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Subsystem_c v_ss = null;
		for (int i9601 = 0; i9601 < v_sss.length; i9601++) {
			v_ss = v_sss[i9601];

			if (v_ss != null) {
				v_ss.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void O_OBJ_Delete(IStructuredSelection selection) {
		int ModelClasscount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ModelClass_c) {
				ModelClasscount++;
			}
		}
		if (ModelClasscount == 0)
			return;
		ModelClass_c[] v_classes = new ModelClass_c[ModelClasscount];
		ModelClasscount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ModelClass_c) {
				v_classes[ModelClasscount] = (ModelClass_c) context;
				ModelClasscount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ModelClass_c v_clazz = null;
		for (int i9604 = 0; i9604 < v_classes.length; i9604++) {
			v_clazz = v_classes[i9604];

			if (v_clazz != null) {
				v_clazz.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void O_ATTR_Delete(IStructuredSelection selection) {
		int Attributecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Attribute_c) {
				Attributecount++;
			}
		}
		if (Attributecount == 0)
			return;
		Attribute_c[] v_attrs = new Attribute_c[Attributecount];
		Attributecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Attribute_c) {
				v_attrs[Attributecount] = (Attribute_c) context;
				Attributecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ReferentialAttribute_c[] v_ref_attr_set = ReferentialAttribute_c
				.getManyO_RATTRsOnR106(v_attrs);

		boolean v_delete_allowed = true;

		ReferentialAttribute_c v_ref_attr = null;
		for (int i9616 = 0; i9616 < v_ref_attr_set.length; i9616++) {
			v_ref_attr = v_ref_attr_set[i9616];

			if ((!v_ref_attr.Isorphaned())) {

				v_delete_allowed = false;

				break;

			}

		}

		if ((!v_delete_allowed)) {

			User_c.Warning("Operation not allowed. Referential attributes are deleted by unformalizing or deleting their association.");

		}

		else {

			ClassIdentifier_c[] v_identifiers = ClassIdentifier_c
					.getManyO_IDsOnR105(ClassIdentifierAttribute_c
							.getManyO_OIDAsOnR105(v_attrs));

			ClassIdentifier_c v_identifier = null;
			for (int i9617 = 0; i9617 < v_identifiers.length; i9617++) {
				v_identifier = v_identifiers[i9617];

				ReferredToClassInAssoc_c[] v_references = ReferredToClassInAssoc_c
						.getManyR_RTOsOnR109(v_identifier);

				if (((v_references.length != 0))) {

					Attribute_c[] v_members = Attribute_c
							.getManyO_ATTRsOnR105(v_identifier);

					boolean v_found = false;

					Attribute_c v_member = null;
					for (int i9618 = 0; i9618 < v_members.length; i9618++) {
						v_member = v_members[i9618];

						Attribute_c v_toDelete = null;
						for (int i9619 = 0; i9619 < v_attrs.length; i9619++) {
							v_toDelete = v_attrs[i9619];

							if ((v_member == v_toDelete)) {

								v_found = true;

								break;

							}

						}

					}

					if ((v_found)) {

						v_delete_allowed = false;

						User_c.Warning("Operation not allowed.  The attribute is being used to formalize one or more associations.");

						break;

					}

				}

			}

		}

		if ((v_delete_allowed)) {

			Attribute_c v_attr = null;
			for (int i9620 = 0; i9620 < v_attrs.length; i9620++) {
				v_attr = v_attrs[i9620];

				if (v_attr != null) {
					v_attr.Dispose();
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void O_TFR_Delete(IStructuredSelection selection) {
		int Operationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Operation_c) {
				Operationcount++;
			}
		}
		if (Operationcount == 0)
			return;
		Operation_c[] v_ops = new Operation_c[Operationcount];
		Operationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Operation_c) {
				v_ops[Operationcount] = (Operation_c) context;
				Operationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Operation_c v_op = null;
		for (int i9605 = 0; i9605 < v_ops.length; i9605++) {
			v_op = v_ops[i9605];

			if (v_op != null) {
				v_op.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void O_TPARM_Delete(IStructuredSelection selection) {
		int OperationParametercount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof OperationParameter_c) {
				OperationParametercount++;
			}
		}
		if (OperationParametercount == 0)
			return;
		OperationParameter_c[] v_tparms = new OperationParameter_c[OperationParametercount];
		OperationParametercount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof OperationParameter_c) {
				v_tparms[OperationParametercount] = (OperationParameter_c) context;
				OperationParametercount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		OperationParameter_c v_tparm = null;
		for (int i9606 = 0; i9606 < v_tparms.length; i9606++) {
			v_tparm = v_tparms[i9606];

			if (v_tparm != null) {
				v_tparm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SM_ISM_Delete(IStructuredSelection selection) {
		int InstanceStateMachinecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InstanceStateMachine_c) {
				InstanceStateMachinecount++;
			}
		}
		if (InstanceStateMachinecount == 0)
			return;
		InstanceStateMachine_c[] v_isms = new InstanceStateMachine_c[InstanceStateMachinecount];
		InstanceStateMachinecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InstanceStateMachine_c) {
				v_isms[InstanceStateMachinecount] = (InstanceStateMachine_c) context;
				InstanceStateMachinecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		InstanceStateMachine_c v_ism = null;
		for (int i9621 = 0; i9621 < v_isms.length; i9621++) {
			v_ism = v_isms[i9621];

			StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR517(v_ism);

			if (v_sm != null) {
				v_sm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SM_NLEVT_Delete(IStructuredSelection selection) {
		int NonLocalEventcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof NonLocalEvent_c) {
				NonLocalEventcount++;
			}
		}
		if (NonLocalEventcount == 0)
			return;
		NonLocalEvent_c[] v_evts = new NonLocalEvent_c[NonLocalEventcount];
		NonLocalEventcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof NonLocalEvent_c) {
				v_evts[NonLocalEventcount] = (NonLocalEvent_c) context;
				NonLocalEventcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		NonLocalEvent_c v_nlevt = null;
		for (int i9682 = 0; i9682 < v_evts.length; i9682++) {
			v_nlevt = v_evts[i9682];

			StateMachineEvent_c v_evt = StateMachineEvent_c
					.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR526(v_nlevt));

			if (v_evt != null) {
				v_evt.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SM_EVT_Delete(IStructuredSelection selection) {
		int StateMachineEventcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StateMachineEvent_c) {
				StateMachineEventcount++;
			}
		}
		if (StateMachineEventcount == 0)
			return;
		StateMachineEvent_c[] v_evts = new StateMachineEvent_c[StateMachineEventcount];
		StateMachineEventcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StateMachineEvent_c) {
				v_evts[StateMachineEventcount] = (StateMachineEvent_c) context;
				StateMachineEventcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		StateMachineEvent_c v_evt = null;
		for (int i9623 = 0; i9623 < v_evts.length; i9623++) {
			v_evt = v_evts[i9623];

			if (v_evt != null) {
				v_evt.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SM_EVTDI_Delete(IStructuredSelection selection) {
		int StateMachineEventDataItemcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StateMachineEventDataItem_c) {
				StateMachineEventDataItemcount++;
			}
		}
		if (StateMachineEventDataItemcount == 0)
			return;
		StateMachineEventDataItem_c[] v_evtdis = new StateMachineEventDataItem_c[StateMachineEventDataItemcount];
		StateMachineEventDataItemcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StateMachineEventDataItem_c) {
				v_evtdis[StateMachineEventDataItemcount] = (StateMachineEventDataItem_c) context;
				StateMachineEventDataItemcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		StateMachineEventDataItem_c v_evtdi = null;
		for (int i9625 = 0; i9625 < v_evtdis.length; i9625++) {
			v_evtdi = v_evtdis[i9625];

			if (v_evtdi != null) {
				v_evtdi.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SM_ASM_Delete(IStructuredSelection selection) {
		int ClassStateMachinecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassStateMachine_c) {
				ClassStateMachinecount++;
			}
		}
		if (ClassStateMachinecount == 0)
			return;
		ClassStateMachine_c[] v_asms = new ClassStateMachine_c[ClassStateMachinecount];
		ClassStateMachinecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassStateMachine_c) {
				v_asms[ClassStateMachinecount] = (ClassStateMachine_c) context;
				ClassStateMachinecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ClassStateMachine_c v_asm = null;
		for (int i9626 = 0; i9626 < v_asms.length; i9626++) {
			v_asm = v_asms[i9626];

			StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR517(v_asm);

			if (v_sm != null) {
				v_sm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SM_STATE_Delete(IStructuredSelection selection) {
		int StateMachineStatecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StateMachineState_c) {
				StateMachineStatecount++;
			}
		}
		if (StateMachineStatecount == 0)
			return;
		StateMachineState_c[] v_smstates = new StateMachineState_c[StateMachineStatecount];
		StateMachineStatecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StateMachineState_c) {
				v_smstates[StateMachineStatecount] = (StateMachineState_c) context;
				StateMachineStatecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		StateMachineState_c v_smstate = null;
		for (int i9622 = 0; i9622 < v_smstates.length; i9622++) {
			v_smstate = v_smstates[i9622];

			if (v_smstate != null) {
				v_smstate.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void O_IOBJ_Delete(IStructuredSelection selection) {
		int ImportedClasscount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ImportedClass_c) {
				ImportedClasscount++;
			}
		}
		if (ImportedClasscount == 0)
			return;
		ImportedClass_c[] v_classes = new ImportedClass_c[ImportedClasscount];
		ImportedClasscount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ImportedClass_c) {
				v_classes[ImportedClasscount] = (ImportedClass_c) context;
				ImportedClasscount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ImportedClass_c v_clazz = null;
		for (int i9627 = 0; i9627 < v_classes.length; i9627++) {
			v_clazz = v_classes[i9627];

			if (v_clazz != null) {
				v_clazz.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void R_REL_Delete(IStructuredSelection selection) {
		int Associationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Association_c) {
				Associationcount++;
			}
		}
		if (Associationcount == 0)
			return;
		Association_c[] v_rels = new Association_c[Associationcount];
		Associationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Association_c) {
				v_rels[Associationcount] = (Association_c) context;
				Associationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Association_c v_rel = null;
		for (int i9628 = 0; i9628 < v_rels.length; i9628++) {
			v_rel = v_rels[i9628];

			if (v_rel != null) {
				v_rel.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SM_TXN_Delete(IStructuredSelection selection) {
		int Transitioncount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Transition_c) {
				Transitioncount++;
			}
		}
		if (Transitioncount == 0)
			return;
		Transition_c[] v_trans = new Transition_c[Transitioncount];
		Transitioncount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Transition_c) {
				v_trans[Transitioncount] = (Transition_c) context;
				Transitioncount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Transition_c v_tran = null;
		for (int i9629 = 0; i9629 < v_trans.length; i9629++) {
			v_tran = v_trans[i9629];

			if (v_tran != null) {
				v_tran.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SM_CRTXN_Delete(IStructuredSelection selection) {
		int CreationTransitioncount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof CreationTransition_c) {
				CreationTransitioncount++;
			}
		}
		if (CreationTransitioncount == 0)
			return;
		CreationTransition_c[] v_ctrans = new CreationTransition_c[CreationTransitioncount];
		CreationTransitioncount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof CreationTransition_c) {
				v_ctrans[CreationTransitioncount] = (CreationTransition_c) context;
				CreationTransitioncount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		CreationTransition_c v_ctran = null;
		for (int i9681 = 0; i9681 < v_ctrans.length; i9681++) {
			v_ctran = v_ctrans[i9681];

			Transition_c v_transition = Transition_c
					.getOneSM_TXNOnR507(v_ctran);

			if (((v_transition != null))) {

				if (v_transition != null) {
					v_transition.Dispose();
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void R_ASSR_Delete(IStructuredSelection selection) {
		int ClassAsLinkcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassAsLink_c) {
				ClassAsLinkcount++;
			}
		}
		if (ClassAsLinkcount == 0)
			return;
		ClassAsLink_c[] v_links = new ClassAsLink_c[ClassAsLinkcount];
		ClassAsLinkcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassAsLink_c) {
				v_links[ClassAsLinkcount] = (ClassAsLink_c) context;
				ClassAsLinkcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ClassAsLink_c v_link = null;
		for (int i9630 = 0; i9630 < v_links.length; i9630++) {
			v_link = v_links[i9630];

			ClassInAssociation_c v_cia = ClassInAssociation_c
					.getOneR_OIROnR203(ReferringClassInAssoc_c
							.getOneR_RGOOnR205(v_link));

			if (((v_cia != null))) {

				if (v_cia != null) {
					v_cia.Dispose();
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void R_SUB_Delete(IStructuredSelection selection) {
		int ClassAsSubtypecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassAsSubtype_c) {
				ClassAsSubtypecount++;
			}
		}
		if (ClassAsSubtypecount == 0)
			return;
		ClassAsSubtype_c[] v_subs = new ClassAsSubtype_c[ClassAsSubtypecount];
		ClassAsSubtypecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ClassAsSubtype_c) {
				v_subs[ClassAsSubtypecount] = (ClassAsSubtype_c) context;
				ClassAsSubtypecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ClassAsSubtype_c v_sub = null;
		for (int i9631 = 0; i9631 < v_subs.length; i9631++) {
			v_sub = v_subs[i9631];

			ClassInAssociation_c v_cia = ClassInAssociation_c
					.getOneR_OIROnR203(ReferringClassInAssoc_c
							.getOneR_RGOOnR205(v_sub));

			if (((v_cia != null))) {

				if (v_cia != null) {
					v_cia.Dispose();
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin
							.logError(
									"Attempted to call an operation on a null instance.",
									t);
				}

			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void COMM_COMM_Delete(IStructuredSelection selection) {
		int Communicationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Communication_c) {
				Communicationcount++;
			}
		}
		if (Communicationcount == 0)
			return;
		Communication_c[] v_comms = new Communication_c[Communicationcount];
		Communicationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Communication_c) {
				v_comms[Communicationcount] = (Communication_c) context;
				Communicationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Communication_c v_comm = null;
		for (int i9647 = 0; i9647 < v_comms.length; i9647++) {
			v_comm = v_comms[i9647];

			if (v_comm != null) {
				v_comm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void COMM_LNK_Delete(IStructuredSelection selection) {
		int CommunicationLinkcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof CommunicationLink_c) {
				CommunicationLinkcount++;
			}
		}
		if (CommunicationLinkcount == 0)
			return;
		CommunicationLink_c[] v_links = new CommunicationLink_c[CommunicationLinkcount];
		CommunicationLinkcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof CommunicationLink_c) {
				v_links[CommunicationLinkcount] = (CommunicationLink_c) context;
				CommunicationLinkcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		CommunicationLink_c v_link = null;
		for (int i9648 = 0; i9648 < v_links.length; i9648++) {
			v_link = v_links[i9648];

			if (v_link != null) {
				v_link.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void UC_UCC_Delete(IStructuredSelection selection) {
		int UseCaseDiagramcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof UseCaseDiagram_c) {
				UseCaseDiagramcount++;
			}
		}
		if (UseCaseDiagramcount == 0)
			return;
		UseCaseDiagram_c[] v_uccs = new UseCaseDiagram_c[UseCaseDiagramcount];
		UseCaseDiagramcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof UseCaseDiagram_c) {
				v_uccs[UseCaseDiagramcount] = (UseCaseDiagram_c) context;
				UseCaseDiagramcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		UseCaseDiagram_c v_ucc = null;
		for (int i9651 = 0; i9651 < v_uccs.length; i9651++) {
			v_ucc = v_uccs[i9651];

			if (v_ucc != null) {
				v_ucc.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void IA_UCP_Delete(IStructuredSelection selection) {
		int UseCaseParticipantcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof UseCaseParticipant_c) {
				UseCaseParticipantcount++;
			}
		}
		if (UseCaseParticipantcount == 0)
			return;
		UseCaseParticipant_c[] v_ucs = new UseCaseParticipant_c[UseCaseParticipantcount];
		UseCaseParticipantcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof UseCaseParticipant_c) {
				v_ucs[UseCaseParticipantcount] = (UseCaseParticipant_c) context;
				UseCaseParticipantcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		UseCaseParticipant_c v_uc = null;
		for (int i9652 = 0; i9652 < v_ucs.length; i9652++) {
			v_uc = v_ucs[i9652];

			if (v_uc != null) {
				v_uc.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void UC_BA_Delete(IStructuredSelection selection) {
		int BinaryAssociationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof BinaryAssociation_c) {
				BinaryAssociationcount++;
			}
		}
		if (BinaryAssociationcount == 0)
			return;
		BinaryAssociation_c[] v_bas = new BinaryAssociation_c[BinaryAssociationcount];
		BinaryAssociationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof BinaryAssociation_c) {
				v_bas[BinaryAssociationcount] = (BinaryAssociation_c) context;
				BinaryAssociationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		BinaryAssociation_c v_ba = null;
		for (int i9653 = 0; i9653 < v_bas.length; i9653++) {
			v_ba = v_bas[i9653];

			if (v_ba != null) {
				v_ba.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void UC_G_Delete(IStructuredSelection selection) {
		int Generalizationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Generalization_c) {
				Generalizationcount++;
			}
		}
		if (Generalizationcount == 0)
			return;
		Generalization_c[] v_gens = new Generalization_c[Generalizationcount];
		Generalizationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Generalization_c) {
				v_gens[Generalizationcount] = (Generalization_c) context;
				Generalizationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Generalization_c v_gen = null;
		for (int i9654 = 0; i9654 < v_gens.length; i9654++) {
			v_gen = v_gens[i9654];

			if (v_gen != null) {
				v_gen.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void UC_I_Delete(IStructuredSelection selection) {
		int Includecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Include_c) {
				Includecount++;
			}
		}
		if (Includecount == 0)
			return;
		Include_c[] v_incs = new Include_c[Includecount];
		Includecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Include_c) {
				v_incs[Includecount] = (Include_c) context;
				Includecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Include_c v_inc = null;
		for (int i9655 = 0; i9655 < v_incs.length; i9655++) {
			v_inc = v_incs[i9655];

			if (v_inc != null) {
				v_inc.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void UC_E_Delete(IStructuredSelection selection) {
		int Extendcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Extend_c) {
				Extendcount++;
			}
		}
		if (Extendcount == 0)
			return;
		Extend_c[] v_exts = new Extend_c[Extendcount];
		Extendcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Extend_c) {
				v_exts[Extendcount] = (Extend_c) context;
				Extendcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Extend_c v_ext = null;
		for (int i9656 = 0; i9656 < v_exts.length; i9656++) {
			v_ext = v_exts[i9656];

			if (v_ext != null) {
				v_ext.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_A_Delete(IStructuredSelection selection) {
		int Activitycount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Activity_c) {
				Activitycount++;
			}
		}
		if (Activitycount == 0)
			return;
		Activity_c[] v_acts = new Activity_c[Activitycount];
		Activitycount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Activity_c) {
				v_acts[Activitycount] = (Activity_c) context;
				Activitycount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Activity_c v_act = null;
		for (int i9657 = 0; i9657 < v_acts.length; i9657++) {
			v_act = v_acts[i9657];

			if (v_act != null) {
				v_act.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_FJ_Delete(IStructuredSelection selection) {
		int ForkJoinNodecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ForkJoinNode_c) {
				ForkJoinNodecount++;
			}
		}
		if (ForkJoinNodecount == 0)
			return;
		ForkJoinNode_c[] v_fjs = new ForkJoinNode_c[ForkJoinNodecount];
		ForkJoinNodecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ForkJoinNode_c) {
				v_fjs[ForkJoinNodecount] = (ForkJoinNode_c) context;
				ForkJoinNodecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ForkJoinNode_c v_fj = null;
		for (int i9658 = 0; i9658 < v_fjs.length; i9658++) {
			v_fj = v_fjs[i9658];

			if (v_fj != null) {
				v_fj.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_INI_Delete(IStructuredSelection selection) {
		int InitialNodecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InitialNode_c) {
				InitialNodecount++;
			}
		}
		if (InitialNodecount == 0)
			return;
		InitialNode_c[] v_inis = new InitialNode_c[InitialNodecount];
		InitialNodecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof InitialNode_c) {
				v_inis[InitialNodecount] = (InitialNode_c) context;
				InitialNodecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		InitialNode_c v_ini = null;
		for (int i9659 = 0; i9659 < v_inis.length; i9659++) {
			v_ini = v_inis[i9659];

			if (v_ini != null) {
				v_ini.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_E_Delete(IStructuredSelection selection) {
		int ActivityEdgecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActivityEdge_c) {
				ActivityEdgecount++;
			}
		}
		if (ActivityEdgecount == 0)
			return;
		ActivityEdge_c[] v_aes = new ActivityEdge_c[ActivityEdgecount];
		ActivityEdgecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActivityEdge_c) {
				v_aes[ActivityEdgecount] = (ActivityEdge_c) context;
				ActivityEdgecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ActivityEdge_c v_ae = null;
		for (int i9660 = 0; i9660 < v_aes.length; i9660++) {
			v_ae = v_aes[i9660];

			if (v_ae != null) {
				v_ae.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_AF_Delete(IStructuredSelection selection) {
		int ActivityFinalNodecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActivityFinalNode_c) {
				ActivityFinalNodecount++;
			}
		}
		if (ActivityFinalNodecount == 0)
			return;
		ActivityFinalNode_c[] v_afs = new ActivityFinalNode_c[ActivityFinalNodecount];
		ActivityFinalNodecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActivityFinalNode_c) {
				v_afs[ActivityFinalNodecount] = (ActivityFinalNode_c) context;
				ActivityFinalNodecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ActivityFinalNode_c v_af = null;
		for (int i9661 = 0; i9661 < v_afs.length; i9661++) {
			v_af = v_afs[i9661];

			if (v_af != null) {
				v_af.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_FF_Delete(IStructuredSelection selection) {
		int FlowFinalNodecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof FlowFinalNode_c) {
				FlowFinalNodecount++;
			}
		}
		if (FlowFinalNodecount == 0)
			return;
		FlowFinalNode_c[] v_ffs = new FlowFinalNode_c[FlowFinalNodecount];
		FlowFinalNodecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof FlowFinalNode_c) {
				v_ffs[FlowFinalNodecount] = (FlowFinalNode_c) context;
				FlowFinalNodecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		FlowFinalNode_c v_ff = null;
		for (int i9662 = 0; i9662 < v_ffs.length; i9662++) {
			v_ff = v_ffs[i9662];

			if (v_ff != null) {
				v_ff.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_GA_Delete(IStructuredSelection selection) {
		int ActivityDiagramActioncount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActivityDiagramAction_c) {
				ActivityDiagramActioncount++;
			}
		}
		if (ActivityDiagramActioncount == 0)
			return;
		ActivityDiagramAction_c[] v_gas = new ActivityDiagramAction_c[ActivityDiagramActioncount];
		ActivityDiagramActioncount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActivityDiagramAction_c) {
				v_gas[ActivityDiagramActioncount] = (ActivityDiagramAction_c) context;
				ActivityDiagramActioncount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ActivityDiagramAction_c v_ga = null;
		for (int i9663 = 0; i9663 < v_gas.length; i9663++) {
			v_ga = v_gas[i9663];

			if (v_ga != null) {
				v_ga.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_DM_Delete(IStructuredSelection selection) {
		int DecisionMergeNodecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof DecisionMergeNode_c) {
				DecisionMergeNodecount++;
			}
		}
		if (DecisionMergeNodecount == 0)
			return;
		DecisionMergeNode_c[] v_dms = new DecisionMergeNode_c[DecisionMergeNodecount];
		DecisionMergeNodecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof DecisionMergeNode_c) {
				v_dms[DecisionMergeNodecount] = (DecisionMergeNode_c) context;
				DecisionMergeNodecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		DecisionMergeNode_c v_dm = null;
		for (int i9664 = 0; i9664 < v_dms.length; i9664++) {
			v_dm = v_dms[i9664];

			if (v_dm != null) {
				v_dm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_OBJ_Delete(IStructuredSelection selection) {
		int ObjectNodecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ObjectNode_c) {
				ObjectNodecount++;
			}
		}
		if (ObjectNodecount == 0)
			return;
		ObjectNode_c[] v_objs = new ObjectNode_c[ObjectNodecount];
		ObjectNodecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ObjectNode_c) {
				v_objs[ObjectNodecount] = (ObjectNode_c) context;
				ObjectNodecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ObjectNode_c v_obj = null;
		for (int i9665 = 0; i9665 < v_objs.length; i9665++) {
			v_obj = v_objs[i9665];

			if (v_obj != null) {
				v_obj.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_AEA_Delete(IStructuredSelection selection) {
		int AcceptEventActioncount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof AcceptEventAction_c) {
				AcceptEventActioncount++;
			}
		}
		if (AcceptEventActioncount == 0)
			return;
		AcceptEventAction_c[] v_aeas = new AcceptEventAction_c[AcceptEventActioncount];
		AcceptEventActioncount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof AcceptEventAction_c) {
				v_aeas[AcceptEventActioncount] = (AcceptEventAction_c) context;
				AcceptEventActioncount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		AcceptEventAction_c v_aea = null;
		for (int i9666 = 0; i9666 < v_aeas.length; i9666++) {
			v_aea = v_aeas[i9666];

			if (v_aea != null) {
				v_aea.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_ATE_Delete(IStructuredSelection selection) {
		int AcceptTimeEventActioncount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof AcceptTimeEventAction_c) {
				AcceptTimeEventActioncount++;
			}
		}
		if (AcceptTimeEventActioncount == 0)
			return;
		AcceptTimeEventAction_c[] v_ates = new AcceptTimeEventAction_c[AcceptTimeEventActioncount];
		AcceptTimeEventActioncount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof AcceptTimeEventAction_c) {
				v_ates[AcceptTimeEventActioncount] = (AcceptTimeEventAction_c) context;
				AcceptTimeEventActioncount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		AcceptTimeEventAction_c v_ate = null;
		for (int i9669 = 0; i9669 < v_ates.length; i9669++) {
			v_ate = v_ates[i9669];

			if (v_ate != null) {
				v_ate.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_SS_Delete(IStructuredSelection selection) {
		int SendSignalcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof SendSignal_c) {
				SendSignalcount++;
			}
		}
		if (SendSignalcount == 0)
			return;
		SendSignal_c[] v_sss = new SendSignal_c[SendSignalcount];
		SendSignalcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof SendSignal_c) {
				v_sss[SendSignalcount] = (SendSignal_c) context;
				SendSignalcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		SendSignal_c v_ss = null;
		for (int i9667 = 0; i9667 < v_sss.length; i9667++) {
			v_ss = v_sss[i9667];

			if (v_ss != null) {
				v_ss.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void A_AP_Delete(IStructuredSelection selection) {
		int ActivityPartitioncount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActivityPartition_c) {
				ActivityPartitioncount++;
			}
		}
		if (ActivityPartitioncount == 0)
			return;
		ActivityPartition_c[] v_aps = new ActivityPartition_c[ActivityPartitioncount];
		ActivityPartitioncount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ActivityPartition_c) {
				v_aps[ActivityPartitioncount] = (ActivityPartition_c) context;
				ActivityPartitioncount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ActivityPartition_c v_ap = null;
		for (int i9668 = 0; i9668 < v_aps.length; i9668++) {
			v_ap = v_aps[i9668];

			if (v_ap != null) {
				v_ap.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_SDT_Delete(IStructuredSelection selection) {
		int StructuredDataTypecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StructuredDataType_c) {
				StructuredDataTypecount++;
			}
		}
		if (StructuredDataTypecount == 0)
			return;
		StructuredDataType_c[] v_sdts = new StructuredDataType_c[StructuredDataTypecount];
		StructuredDataTypecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StructuredDataType_c) {
				v_sdts[StructuredDataTypecount] = (StructuredDataType_c) context;
				StructuredDataTypecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		StructuredDataType_c v_sdt = null;
		for (int i9679 = 0; i9679 < v_sdts.length; i9679++) {
			v_sdt = v_sdts[i9679];

			DataType_c v_dt = DataType_c.getOneS_DTOnR17(v_sdt);

			if (v_dt != null) {
				v_dt.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void S_MBR_Delete(IStructuredSelection selection) {
		int StructureMembercount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StructureMember_c) {
				StructureMembercount++;
			}
		}
		if (StructureMembercount == 0)
			return;
		StructureMember_c[] v_members = new StructureMember_c[StructureMembercount];
		StructureMembercount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof StructureMember_c) {
				v_members[StructureMembercount] = (StructureMember_c) context;
				StructureMembercount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		StructureMember_c v_member = null;
		for (int i9680 = 0; i9680 < v_members.length; i9680++) {
			v_member = v_members[i9680];

			if (v_member != null) {
				v_member.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void EP_PKG_Delete(IStructuredSelection selection) {
		int Packagecount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Package_c) {
				Packagecount++;
			}
		}
		if (Packagecount == 0)
			return;
		Package_c[] v_packages = new Package_c[Packagecount];
		Packagecount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof Package_c) {
				v_packages[Packagecount] = (Package_c) context;
				Packagecount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		Package_c v_package = null;
		for (int i9687 = 0; i9687 < v_packages.length; i9687++) {
			v_package = v_packages[i9687];

			if (v_package != null) {
				v_package.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SPR_RO_Delete(IStructuredSelection selection) {
		int RequiredOperationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof RequiredOperation_c) {
				RequiredOperationcount++;
			}
		}
		if (RequiredOperationcount == 0)
			return;
		RequiredOperation_c[] v_requiredOperations = new RequiredOperation_c[RequiredOperationcount];
		RequiredOperationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof RequiredOperation_c) {
				v_requiredOperations[RequiredOperationcount] = (RequiredOperation_c) context;
				RequiredOperationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		RequiredOperation_c v_operation = null;
		for (int i9698 = 0; i9698 < v_requiredOperations.length; i9698++) {
			v_operation = v_requiredOperations[i9698];

			if (v_operation != null) {
				v_operation.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SPR_RS_Delete(IStructuredSelection selection) {
		int RequiredSignalcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof RequiredSignal_c) {
				RequiredSignalcount++;
			}
		}
		if (RequiredSignalcount == 0)
			return;
		RequiredSignal_c[] v_requiredSignals = new RequiredSignal_c[RequiredSignalcount];
		RequiredSignalcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof RequiredSignal_c) {
				v_requiredSignals[RequiredSignalcount] = (RequiredSignal_c) context;
				RequiredSignalcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		RequiredSignal_c v_signal = null;
		for (int i9697 = 0; i9697 < v_requiredSignals.length; i9697++) {
			v_signal = v_requiredSignals[i9697];

			if (v_signal != null) {
				v_signal.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SPR_PO_Delete(IStructuredSelection selection) {
		int ProvidedOperationcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ProvidedOperation_c) {
				ProvidedOperationcount++;
			}
		}
		if (ProvidedOperationcount == 0)
			return;
		ProvidedOperation_c[] v_providedOperations = new ProvidedOperation_c[ProvidedOperationcount];
		ProvidedOperationcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ProvidedOperation_c) {
				v_providedOperations[ProvidedOperationcount] = (ProvidedOperation_c) context;
				ProvidedOperationcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ProvidedOperation_c v_operation = null;
		for (int i9696 = 0; i9696 < v_providedOperations.length; i9696++) {
			v_operation = v_providedOperations[i9696];

			if (v_operation != null) {
				v_operation.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}
	private void SPR_PS_Delete(IStructuredSelection selection) {
		int ProvidedSignalcount = 0;
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ProvidedSignal_c) {
				ProvidedSignalcount++;
			}
		}
		if (ProvidedSignalcount == 0)
			return;
		ProvidedSignal_c[] v_providedSignals = new ProvidedSignal_c[ProvidedSignalcount];
		ProvidedSignalcount = 0;
		// Assign the context selection variables with the action context 
		for (Iterator iterator = selection.iterator(); iterator.hasNext();) {
			Object context = iterator.next();
			if (context instanceof ProvidedSignal_c) {
				v_providedSignals[ProvidedSignalcount] = (ProvidedSignal_c) context;
				ProvidedSignalcount++;
			}
		}

		// Ensure that actions take place between Verifier Activity executions
		Ooaofooa.beginSaveOperation();
		ProvidedSignal_c v_signal = null;
		for (int i9695 = 0; i9695 < v_providedSignals.length; i9695++) {
			v_signal = v_providedSignals[i9695];

			if (v_signal != null) {
				v_signal.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		// end critical section
		Ooaofooa.endSaveOperation();

	}

	static public boolean canDeleteAction() {
		PersistenceManager pm = PersistenceManager.getDefaultInstance();
		PersistableModelComponent component = null;
		boolean result = false;
		final IStructuredSelection structuredSelection = Selection
				.getInstance().getStructuredSelection();
		for (Iterator iterator = structuredSelection.iterator(); iterator
				.hasNext();) {
			Object context = iterator.next();
			component = pm.findElementComponent((NonRootModelElement) context,
					false);
			if (context instanceof SystemModel_c) {
				result = true;
			} else if (context instanceof Domain_c) {
				result = true;
			} else if (context instanceof ComponentReference_c) {
				result = true;
			} else if (context instanceof ComponentPackage_c) {
				result = true;
			} else if (context instanceof InterfacePackage_c) {
				result = true;
			} else if (context instanceof Component_c) {
				result = true;
			} else if (context instanceof Interface_c) {
				result = true;
			} else if (context instanceof Provision_c) {
				result = true;
			} else if (context instanceof Requirement_c) {
				result = true;
			} else if (context instanceof Port_c) {
				result = true;
			} else if (context instanceof InterfaceSignal_c) {
				result = true;
			} else if (context instanceof InterfaceOperation_c) {
				result = true;
			} else if (context instanceof PropertyParameter_c) {
				result = true;
			} else if (context instanceof Delegation_c) {
				result = true;
			} else if (context instanceof Sequence_c) {
				result = true;
			} else if (context instanceof ClassParticipant_c) {
				result = true;
			} else if (context instanceof MessageArgument_c) {
				result = ((MessageArgument_c) context).Candelete();
			} else if (context instanceof ComponentParticipant_c) {
				result = true;
			} else if (context instanceof InstanceAttributeValue_c) {
				result = ((InstanceAttributeValue_c) context).Candelete();
			} else if (context instanceof ClassParticipantAttribute_c) {
				result = true;
			} else if (context instanceof ExternalEntityParticipant_c) {
				result = true;
			} else if (context instanceof FunctionPackageParticipant_c) {
				result = true;
			} else if (context instanceof ClassInstanceParticipant_c) {
				result = true;
			} else if (context instanceof Lifespan_c) {
				result = true;
			} else if (context instanceof ReturnMessage_c) {
				result = true;
			} else if (context instanceof SynchronousMessage_c) {
				result = true;
			} else if (context instanceof AsynchronousMessage_c) {
				result = true;
			} else if (context instanceof TimingMark_c) {
				result = true;
			} else if (context instanceof TimeSpan_c) {
				result = true;
			} else if (context instanceof ActorParticipant_c) {
				result = true;
			} else if (context instanceof PackageParticipant_c) {
				result = true;
			} else if (context instanceof DataTypePackage_c) {
				result = ((DataTypePackage_c) context).Candelete();
			} else if (context instanceof UserDataType_c) {
				result = ((UserDataType_c) context).Candelete();
			} else if (context instanceof EnumerationDataType_c) {
				result = true;
			} else if (context instanceof Enumerator_c) {
				result = true;
			} else if (context instanceof ConstantSpecification_c) {
				result = true;
			} else if (context instanceof LiteralSymbolicConstant_c) {
				result = true;
			} else if (context instanceof FunctionPackage_c) {
				result = true;
			} else if (context instanceof Function_c) {
				result = true;
			} else if (context instanceof FunctionParameter_c) {
				result = true;
			} else if (context instanceof ExternalEntityPackage_c) {
				result = true;
			} else if (context instanceof ExternalEntity_c) {
				result = true;
			} else if (context instanceof Bridge_c) {
				result = true;
			} else if (context instanceof BridgeParameter_c) {
				result = true;
			} else if (context instanceof Subsystem_c) {
				result = true;
			} else if (context instanceof ModelClass_c) {
				result = true;
			} else if (context instanceof Attribute_c) {
				result = ((Attribute_c) context).Candelete();
			} else if (context instanceof Operation_c) {
				result = true;
			} else if (context instanceof OperationParameter_c) {
				result = true;
			} else if (context instanceof InstanceStateMachine_c) {
				result = true;
			} else if (context instanceof NonLocalEvent_c) {
				result = true;
			} else if (context instanceof StateMachineEvent_c) {
				result = true;
			} else if (context instanceof StateMachineEventDataItem_c) {
				result = true;
			} else if (context instanceof ClassStateMachine_c) {
				result = true;
			} else if (context instanceof StateMachineState_c) {
				result = true;
			} else if (context instanceof ImportedClass_c) {
				result = true;
			} else if (context instanceof Association_c) {
				result = true;
			} else if (context instanceof Transition_c) {
				result = true;
			} else if (context instanceof CreationTransition_c) {
				result = true;
			} else if (context instanceof ClassAsLink_c) {
				result = true;
			} else if (context instanceof ClassAsSubtype_c) {
				result = true;
			} else if (context instanceof Communication_c) {
				result = true;
			} else if (context instanceof CommunicationLink_c) {
				result = true;
			} else if (context instanceof UseCaseDiagram_c) {
				result = true;
			} else if (context instanceof UseCaseParticipant_c) {
				result = true;
			} else if (context instanceof BinaryAssociation_c) {
				result = true;
			} else if (context instanceof Generalization_c) {
				result = true;
			} else if (context instanceof Include_c) {
				result = true;
			} else if (context instanceof Extend_c) {
				result = true;
			} else if (context instanceof Activity_c) {
				result = true;
			} else if (context instanceof ForkJoinNode_c) {
				result = true;
			} else if (context instanceof InitialNode_c) {
				result = true;
			} else if (context instanceof ActivityEdge_c) {
				result = true;
			} else if (context instanceof ActivityFinalNode_c) {
				result = true;
			} else if (context instanceof FlowFinalNode_c) {
				result = true;
			} else if (context instanceof ActivityDiagramAction_c) {
				result = true;
			} else if (context instanceof DecisionMergeNode_c) {
				result = true;
			} else if (context instanceof ObjectNode_c) {
				result = true;
			} else if (context instanceof AcceptEventAction_c) {
				result = true;
			} else if (context instanceof AcceptTimeEventAction_c) {
				result = true;
			} else if (context instanceof SendSignal_c) {
				result = true;
			} else if (context instanceof ActivityPartition_c) {
				result = true;
			} else if (context instanceof StructuredDataType_c) {
				result = true;
			} else if (context instanceof StructureMember_c) {
				result = true;
			} else if (context instanceof Package_c) {
				result = true;
			} else if (context instanceof RequiredOperation_c) {
				result = true;
			} else if (context instanceof RequiredSignal_c) {
				result = true;
			} else if (context instanceof ProvidedOperation_c) {
				result = true;
			} else if (context instanceof ProvidedSignal_c) {
				result = true;
			} else {
				result = false;
				break;
			}
		}
		return result;
	}

} // end DeleteAction

