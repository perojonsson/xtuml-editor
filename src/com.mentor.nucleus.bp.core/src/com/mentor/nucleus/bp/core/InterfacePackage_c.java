      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.InterfacePackage_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_INTERFACE_PACKAGE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class InterfacePackage_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public InterfacePackage_c(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_parent_package_id,
       java.util.UUID         p_m_direct_sys_id,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_id,
       java.util.UUID         p_m_component_package_id,
       String       p_m_name,
       String       p_m_descrip)
  {
    super(modelRoot);
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_direct_sys_id = IdAssigner.preprocessUUID(p_m_direct_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_parent_package_id = IdAssigner.preprocessUUID(p_m_parent_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
    setUniqueId(m_package_id);
    Object [] key = {m_package_id};
    addInstanceToMap(key);
  }
  static public InterfacePackage_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_parent_package_id,
       java.util.UUID         p_m_direct_sys_id,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_id,
       java.util.UUID         p_m_component_package_id,
       String       p_m_name,
       String       p_m_descrip, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);
      InterfacePackage_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_package_id};
          new_inst = (InterfacePackage_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_direct_sys_id = IdAssigner.preprocessUUID(p_m_direct_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_parent_package_id = IdAssigner.preprocessUUID(p_m_parent_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new InterfacePackage_c(modelRoot,
p_m_package_id,
p_m_parent_package_id,
p_m_direct_sys_id,
p_m_sys_id,
p_m_component_id,
p_m_component_package_id,
p_m_name,
p_m_descrip
);
		new_inst.m_contentPath = contentPath;
    new_inst.setComponent(null);
	}
    return new_inst;
  }

  static public InterfacePackage_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       java.util.UUID         p_m_parent_package_id,
       java.util.UUID         p_m_direct_sys_id,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_id,
       java.util.UUID         p_m_component_package_id,
       String       p_m_name,
       String       p_m_descrip){
    InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);
    InterfacePackage_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_package_id
            };
        source = (InterfacePackage_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_direct_sys_id = IdAssigner.preprocessUUID(p_m_direct_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_parent_package_id = IdAssigner.preprocessUUID(p_m_parent_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    InterfacePackage_c new_inst = new InterfacePackage_c(modelRoot,
p_m_package_id,
p_m_parent_package_id,
p_m_direct_sys_id,
p_m_sys_id,
p_m_component_id,
p_m_component_package_id,
p_m_name,
p_m_descrip
);
    return new_inst;
  }
  public InterfacePackage_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_name = "";   
     m_descrip = "";   
     m_direct_sys_id = IdAssigner.NULL_UUID;   
     m_sys_id = IdAssigner.NULL_UUID;   
     m_package_id = idAssigner.createUUID();
     m_component_package_id = IdAssigner.NULL_UUID;   
     m_parent_package_id = IdAssigner.NULL_UUID;   
     m_component_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_package_id);
    Object [] key = {m_package_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_package_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_package_id !=  p_newKey ){
	
		m_package_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof InterfacePackage_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof InterfacePackage_c)) {
           return false;
       }
       
       InterfacePackage_c me = (InterfacePackage_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getPackage_id()) || IdAssigner.NULL_UUID.equals(((InterfacePackage_c)elem).getPackage_id())) && this != elem)) {
      	return false;
      }
      if (!getPackage_id().equals(((InterfacePackage_c)elem).getPackage_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof InterfacePackage_c)) {
           return false;
       }
       
       InterfacePackage_c me = (InterfacePackage_c)elem;
      if (!getPackage_idCachedValue().equals(((InterfacePackage_c)elem).getPackage_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private String       m_name ;
  private String       m_descrip ;
  private java.util.UUID         m_direct_sys_id ;
  private java.util.UUID         m_sys_id ;
  private java.util.UUID         m_package_id ;
  private java.util.UUID         m_component_package_id ;
  private java.util.UUID         m_parent_package_id ;
  private java.util.UUID         m_component_id ;
      
// declare association references from this class
  
  
    
// referring navigation

SpecificationPackage_c IsSupertypeSpecificationPackage ;
public void relateAcrossR1402To(SpecificationPackage_c target)
{
	relateAcrossR1402To(target, true);
}
public void relateAcrossR1402To(SpecificationPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypeSpecificationPackage) return;  // already related

    if ( IsSupertypeSpecificationPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypeSpecificationPackage != null) {
    
        IsSupertypeSpecificationPackage.clearBackPointerR1402To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfacePackage_c.relateAcrossR1402To(SpecificationPackage_c target)", 
			"Relate performed across R1402 from Interface Package to Specification Package without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypeSpecificationPackage = target ;
        m_package_id = target.getPackage_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1402To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1402", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1402From(SpecificationPackage_c target)
{
	unrelateAcrossR1402From(target, true);
}
public void unrelateAcrossR1402From(SpecificationPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypeSpecificationPackage == null) return;  // already unrelated
	
	if (target != IsSupertypeSpecificationPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1402", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1402To(this);
    }
    

      if(IsSupertypeSpecificationPackage != null) {
      
        m_package_id = IsSupertypeSpecificationPackage.getPackage_id();
        IsSupertypeSpecificationPackage = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1402", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfacePackage_c getOneIP_IPOnR1402(SpecificationPackage_c [] targets)
{
    return getOneIP_IPOnR1402(targets, null);
}

public static InterfacePackage_c getOneIP_IPOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test)
{
    InterfacePackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneIP_IPOnR1402(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfacePackage_c getOneIP_IPOnR1402(SpecificationPackage_c target)
{
  return getOneIP_IPOnR1402(target, null);
}

public static InterfacePackage_c getOneIP_IPOnR1402(SpecificationPackage_c target, boolean loadComponent)
{
    return getOneIP_IPOnR1402(target.getModelRoot(), target, null, loadComponent);
}

public static InterfacePackage_c getOneIP_IPOnR1402(SpecificationPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneIP_IPOnR1402(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfacePackage_c getOneIP_IPOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test)
{
	return getOneIP_IPOnR1402(modelRoot, target, test, true);
}

public static InterfacePackage_c getOneIP_IPOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneIP_IPOnR1402(modelRoot,target,test);
}
private static InterfacePackage_c find_getOneIP_IPOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    InterfacePackage_c source = (InterfacePackage_c)target.backPointer_IsSubtypeInterfacePackageIsSubtype_R1402;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static InterfacePackage_c [] getManyIP_IPsOnR1402(SpecificationPackage_c [] targets)
{
  return getManyIP_IPsOnR1402(targets, null);
}
public static InterfacePackage_c [] getManyIP_IPsOnR1402(SpecificationPackage_c [] targets, boolean loadComponent)
{
  return getManyIP_IPsOnR1402(targets, null, loadComponent);
}
public static InterfacePackage_c [] getManyIP_IPsOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR1402(targets, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfacePackage_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      InterfacePackage_c source = (InterfacePackage_c)targets[i].backPointer_IsSubtypeInterfacePackageIsSubtype_R1402;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfacePackage_c[0];
  }
  }

public static InterfacePackage_c [] getManyIP_IPsOnR1402(SpecificationPackage_c target)
{
  if (target != null) {
    SpecificationPackage_c [] targetArray = new SpecificationPackage_c[1];
    targetArray[0] = target;
    return getManyIP_IPsOnR1402(targetArray);
  } else {
    InterfacePackage_c [] result = new InterfacePackage_c [0] ;
  return result ;
}
}

public static InterfacePackage_c [] getManyIP_IPsOnR1402(SpecificationPackage_c target, boolean loadComponent)
{
  if (target != null) {
    SpecificationPackage_c [] targetArray = new SpecificationPackage_c[1];
    targetArray[0] = target;
    return getManyIP_IPsOnR1402(targetArray, loadComponent);
  } else {
    InterfacePackage_c [] result = new InterfacePackage_c [0] ;
  return result ;
}
}



  
    
// referring navigation

InterfacePackageInInterfacePackage_c MayBeShownInInterfacePackageInInterfacePackage ;
public void relateAcrossR4301To(InterfacePackageInInterfacePackage_c target)
{
	relateAcrossR4301To(target, true);
}
public void relateAcrossR4301To(InterfacePackageInInterfacePackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == MayBeShownInInterfacePackageInInterfacePackage) return;  // already related

    if ( MayBeShownInInterfacePackageInInterfacePackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (MayBeShownInInterfacePackageInInterfacePackage != null) {
        UmlProblem.removeXtUMLProblem(this, MayBeShownInInterfacePackageInInterfacePackage);
    
        MayBeShownInInterfacePackageInInterfacePackage.clearBackPointerR4301To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfacePackage_c.relateAcrossR4301To(InterfacePackageInInterfacePackage_c target)", 
			"Relate performed across R4301 from Interface Package to Interface Package in Interface Package without unrelate of prior instance.");  
		}
    }
                
    	MayBeShownInInterfacePackageInInterfacePackage = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_parent_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4301To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4301", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4301From(InterfacePackageInInterfacePackage_c target)
{
	unrelateAcrossR4301From(target, true);
}
public void unrelateAcrossR4301From(InterfacePackageInInterfacePackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (MayBeShownInInterfacePackageInInterfacePackage == null) return;  // already unrelated
	
	if (target != MayBeShownInInterfacePackageInInterfacePackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4301", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4301To(this);
    }
    

      if(MayBeShownInInterfacePackageInInterfacePackage != null) {
      
        m_parent_package_id = MayBeShownInInterfacePackageInInterfacePackage.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_parent_package_id))
        {
          m_parent_package_id = MayBeShownInInterfacePackageInInterfacePackage.getPackage_idCachedValue();
        }       
        MayBeShownInInterfacePackageInInterfacePackage = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4301", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfacePackage_c getOneIP_IPOnR4301(InterfacePackageInInterfacePackage_c [] targets)
{
    return getOneIP_IPOnR4301(targets, null);
}

public static InterfacePackage_c getOneIP_IPOnR4301(InterfacePackageInInterfacePackage_c [] targets, ClassQueryInterface_c test)
{
    InterfacePackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneIP_IPOnR4301(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfacePackage_c getOneIP_IPOnR4301(InterfacePackageInInterfacePackage_c target)
{
  return getOneIP_IPOnR4301(target, null);
}

public static InterfacePackage_c getOneIP_IPOnR4301(InterfacePackageInInterfacePackage_c target, boolean loadComponent)
{
    return getOneIP_IPOnR4301(target.getModelRoot(), target, null, loadComponent);
}

public static InterfacePackage_c getOneIP_IPOnR4301(InterfacePackageInInterfacePackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneIP_IPOnR4301(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfacePackage_c getOneIP_IPOnR4301(ModelRoot modelRoot, InterfacePackageInInterfacePackage_c target, ClassQueryInterface_c test)
{
	return getOneIP_IPOnR4301(modelRoot, target, test, true);
}

public static InterfacePackage_c getOneIP_IPOnR4301(ModelRoot modelRoot, InterfacePackageInInterfacePackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  InterfacePackage_c result = null;
  
  result=find_getOneIP_IPOnR4301(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,InterfacePackage_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneIP_IPOnR4301(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static InterfacePackage_c find_getOneIP_IPOnR4301(ModelRoot modelRoot, InterfacePackageInInterfacePackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_HasChildrenInterfacePackageHasChildren_R4301) {
	    for ( int i = 0; i < target.backPointer_HasChildrenInterfacePackageHasChildren_R4301.size(); ++i ) {
	      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_HasChildrenInterfacePackageHasChildren_R4301.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static InterfacePackage_c [] getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c [] targets)
{
  return getManyIP_IPsOnR4301(targets, null);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c [] targets, boolean loadComponent)
{
  return getManyIP_IPsOnR4301(targets, null, loadComponent);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c [] targets, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4301(targets, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfacePackage_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, InterfacePackage_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_HasChildrenInterfacePackageHasChildren_R4301) {
	    for (int j = 0; j < targets[i].backPointer_HasChildrenInterfacePackageHasChildren_R4301.size(); ++j) {
	      InterfacePackage_c source = (InterfacePackage_c)targets[i].backPointer_HasChildrenInterfacePackageHasChildren_R4301.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfacePackage_c[0];
  }
  }

public static InterfacePackage_c [] getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c target)
{
  return getManyIP_IPsOnR4301(target, null);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c target, boolean loadComponent)
{
  return getManyIP_IPsOnR4301(target, null, loadComponent);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c target, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4301(target, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new InterfacePackage_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, InterfacePackage_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_HasChildrenInterfacePackageHasChildren_R4301) {
    for (int i = 0; i < target.backPointer_HasChildrenInterfacePackageHasChildren_R4301.size(); ++i) {
      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_HasChildrenInterfacePackageHasChildren_R4301.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new InterfacePackage_c[0];
	}
  }


  
    
// referring navigation

SystemModel_c MayBeShownInSystemModel ;
public void relateAcrossR4302To(SystemModel_c target)
{
	relateAcrossR4302To(target, true);
}
public void relateAcrossR4302To(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == MayBeShownInSystemModel) return;  // already related

    if ( MayBeShownInSystemModel != target ) {
    
    Object oldKey = getInstanceKey();

    if (MayBeShownInSystemModel != null) {
        UmlProblem.removeXtUMLProblem(this, MayBeShownInSystemModel);
    
        MayBeShownInSystemModel.clearBackPointerR4302To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfacePackage_c.relateAcrossR4302To(SystemModel_c target)", 
			"Relate performed across R4302 from Interface Package to System Model without unrelate of prior instance.");  
		}
    }
                
    	MayBeShownInSystemModel = target ;
        m_direct_sys_id = target.getSys_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4302To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4302", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4302From(SystemModel_c target)
{
	unrelateAcrossR4302From(target, true);
}
public void unrelateAcrossR4302From(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (MayBeShownInSystemModel == null) return;  // already unrelated
	
	if (target != MayBeShownInSystemModel) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4302", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4302To(this);
    }
    

      if(MayBeShownInSystemModel != null) {
      
        m_direct_sys_id = MayBeShownInSystemModel.getSys_id();
        MayBeShownInSystemModel = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4302", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfacePackage_c getOneIP_IPOnR4302(SystemModel_c [] targets)
{
    return getOneIP_IPOnR4302(targets, null);
}

public static InterfacePackage_c getOneIP_IPOnR4302(SystemModel_c [] targets, ClassQueryInterface_c test)
{
    InterfacePackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneIP_IPOnR4302(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfacePackage_c getOneIP_IPOnR4302(SystemModel_c target)
{
  return getOneIP_IPOnR4302(target, null);
}

public static InterfacePackage_c getOneIP_IPOnR4302(SystemModel_c target, boolean loadComponent)
{
    return getOneIP_IPOnR4302(target.getModelRoot(), target, null, loadComponent);
}

public static InterfacePackage_c getOneIP_IPOnR4302(SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneIP_IPOnR4302(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfacePackage_c getOneIP_IPOnR4302(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
	return getOneIP_IPOnR4302(modelRoot, target, test, true);
}

public static InterfacePackage_c getOneIP_IPOnR4302(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  InterfacePackage_c result = null;
  
  result=find_getOneIP_IPOnR4302(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,InterfacePackage_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneIP_IPOnR4302(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static InterfacePackage_c find_getOneIP_IPOnR4302(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanShowInterfacePackageCanShow_R4302) {
	    for ( int i = 0; i < target.backPointer_CanShowInterfacePackageCanShow_R4302.size(); ++i ) {
	      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_CanShowInterfacePackageCanShow_R4302.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static InterfacePackage_c [] getManyIP_IPsOnR4302(SystemModel_c [] targets)
{
  return getManyIP_IPsOnR4302(targets, null);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4302(SystemModel_c [] targets, boolean loadComponent)
{
  return getManyIP_IPsOnR4302(targets, null, loadComponent);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4302(SystemModel_c [] targets, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4302(targets, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4302(SystemModel_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfacePackage_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, InterfacePackage_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanShowInterfacePackageCanShow_R4302) {
	    for (int j = 0; j < targets[i].backPointer_CanShowInterfacePackageCanShow_R4302.size(); ++j) {
	      InterfacePackage_c source = (InterfacePackage_c)targets[i].backPointer_CanShowInterfacePackageCanShow_R4302.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfacePackage_c[0];
  }
  }

public static InterfacePackage_c [] getManyIP_IPsOnR4302(SystemModel_c target)
{
  return getManyIP_IPsOnR4302(target, null);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4302(SystemModel_c target, boolean loadComponent)
{
  return getManyIP_IPsOnR4302(target, null, loadComponent);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4302(SystemModel_c target, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4302(target, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4302(SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new InterfacePackage_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, InterfacePackage_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_CanShowInterfacePackageCanShow_R4302) {
    for (int i = 0; i < target.backPointer_CanShowInterfacePackageCanShow_R4302.size(); ++i) {
      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_CanShowInterfacePackageCanShow_R4302.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new InterfacePackage_c[0];
	}
  }


  
    
// referring navigation

SystemModel_c SystemModel ;
public void relateAcrossR4304To(SystemModel_c target)
{
	relateAcrossR4304To(target, true);
}
public void relateAcrossR4304To(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == SystemModel) return;  // already related

    if ( SystemModel != target ) {
    
    Object oldKey = getInstanceKey();

    if (SystemModel != null) {
        UmlProblem.removeXtUMLProblem(this, SystemModel);
    
        SystemModel.clearBackPointerR4304To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfacePackage_c.relateAcrossR4304To(SystemModel_c target)", 
			"Relate performed across R4304 from Interface Package to System Model without unrelate of prior instance.");  
		}
    }
                
    	SystemModel = target ;
        m_sys_id = target.getSys_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4304To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4304", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4304From(SystemModel_c target)
{
	unrelateAcrossR4304From(target, true);
}
public void unrelateAcrossR4304From(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (SystemModel == null) return;  // already unrelated
	
	if (target != SystemModel) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4304", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4304To(this);
    }
    

      if(SystemModel != null) {
      
        m_sys_id = SystemModel.getSys_id();
        SystemModel = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4304", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfacePackage_c getOneIP_IPOnR4304(SystemModel_c [] targets)
{
    return getOneIP_IPOnR4304(targets, null);
}

public static InterfacePackage_c getOneIP_IPOnR4304(SystemModel_c [] targets, ClassQueryInterface_c test)
{
    InterfacePackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneIP_IPOnR4304(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfacePackage_c getOneIP_IPOnR4304(SystemModel_c target)
{
  return getOneIP_IPOnR4304(target, null);
}

public static InterfacePackage_c getOneIP_IPOnR4304(SystemModel_c target, boolean loadComponent)
{
    return getOneIP_IPOnR4304(target.getModelRoot(), target, null, loadComponent);
}

public static InterfacePackage_c getOneIP_IPOnR4304(SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneIP_IPOnR4304(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfacePackage_c getOneIP_IPOnR4304(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
	return getOneIP_IPOnR4304(modelRoot, target, test, true);
}

public static InterfacePackage_c getOneIP_IPOnR4304(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  InterfacePackage_c result = null;
  
  result=find_getOneIP_IPOnR4304(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,InterfacePackage_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneIP_IPOnR4304(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static InterfacePackage_c find_getOneIP_IPOnR4304(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_InterfacePackage_R4304) {
	    for ( int i = 0; i < target.backPointer_InterfacePackage_R4304.size(); ++i ) {
	      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_InterfacePackage_R4304.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static InterfacePackage_c [] getManyIP_IPsOnR4304(SystemModel_c [] targets)
{
  return getManyIP_IPsOnR4304(targets, null);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4304(SystemModel_c [] targets, boolean loadComponent)
{
  return getManyIP_IPsOnR4304(targets, null, loadComponent);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4304(SystemModel_c [] targets, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4304(targets, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4304(SystemModel_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfacePackage_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, InterfacePackage_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_InterfacePackage_R4304) {
	    for (int j = 0; j < targets[i].backPointer_InterfacePackage_R4304.size(); ++j) {
	      InterfacePackage_c source = (InterfacePackage_c)targets[i].backPointer_InterfacePackage_R4304.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfacePackage_c[0];
  }
  }

public static InterfacePackage_c [] getManyIP_IPsOnR4304(SystemModel_c target)
{
  return getManyIP_IPsOnR4304(target, null);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4304(SystemModel_c target, boolean loadComponent)
{
  return getManyIP_IPsOnR4304(target, null, loadComponent);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4304(SystemModel_c target, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4304(target, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4304(SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new InterfacePackage_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, InterfacePackage_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_InterfacePackage_R4304) {
    for (int i = 0; i < target.backPointer_InterfacePackage_R4304.size(); ++i) {
      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_InterfacePackage_R4304.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new InterfacePackage_c[0];
	}
  }


  
    
// referring navigation

ComponentPackage_c MayExistInComponentPackage ;
public void relateAcrossR4607To(ComponentPackage_c target)
{
	relateAcrossR4607To(target, true);
}
public void relateAcrossR4607To(ComponentPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == MayExistInComponentPackage) return;  // already related

    if ( MayExistInComponentPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (MayExistInComponentPackage != null) {
        UmlProblem.removeXtUMLProblem(this, MayExistInComponentPackage);
    
        MayExistInComponentPackage.clearBackPointerR4607To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfacePackage_c.relateAcrossR4607To(ComponentPackage_c target)", 
			"Relate performed across R4607 from Interface Package to Component Package without unrelate of prior instance.");  
		}
    }
                
    	MayExistInComponentPackage = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4607To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4607", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4607From(ComponentPackage_c target)
{
	unrelateAcrossR4607From(target, true);
}
public void unrelateAcrossR4607From(ComponentPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (MayExistInComponentPackage == null) return;  // already unrelated
	
	if (target != MayExistInComponentPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4607", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4607To(this);
    }
    

      if(MayExistInComponentPackage != null) {
      
        m_component_package_id = MayExistInComponentPackage.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_component_package_id))
        {
          m_component_package_id = MayExistInComponentPackage.getPackage_idCachedValue();
        }       
        MayExistInComponentPackage = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4607", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfacePackage_c getOneIP_IPOnR4607(ComponentPackage_c [] targets)
{
    return getOneIP_IPOnR4607(targets, null);
}

public static InterfacePackage_c getOneIP_IPOnR4607(ComponentPackage_c [] targets, ClassQueryInterface_c test)
{
    InterfacePackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneIP_IPOnR4607(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfacePackage_c getOneIP_IPOnR4607(ComponentPackage_c target)
{
  return getOneIP_IPOnR4607(target, null);
}

public static InterfacePackage_c getOneIP_IPOnR4607(ComponentPackage_c target, boolean loadComponent)
{
    return getOneIP_IPOnR4607(target.getModelRoot(), target, null, loadComponent);
}

public static InterfacePackage_c getOneIP_IPOnR4607(ComponentPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneIP_IPOnR4607(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfacePackage_c getOneIP_IPOnR4607(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test)
{
	return getOneIP_IPOnR4607(modelRoot, target, test, true);
}

public static InterfacePackage_c getOneIP_IPOnR4607(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  InterfacePackage_c result = null;
  
  result=find_getOneIP_IPOnR4607(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,InterfacePackage_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneIP_IPOnR4607(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static InterfacePackage_c find_getOneIP_IPOnR4607(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_MayContainInterfacePackageMayContain_R4607) {
	    for ( int i = 0; i < target.backPointer_MayContainInterfacePackageMayContain_R4607.size(); ++i ) {
	      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_MayContainInterfacePackageMayContain_R4607.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static InterfacePackage_c [] getManyIP_IPsOnR4607(ComponentPackage_c [] targets)
{
  return getManyIP_IPsOnR4607(targets, null);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4607(ComponentPackage_c [] targets, boolean loadComponent)
{
  return getManyIP_IPsOnR4607(targets, null, loadComponent);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4607(ComponentPackage_c [] targets, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4607(targets, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4607(ComponentPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfacePackage_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, InterfacePackage_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_MayContainInterfacePackageMayContain_R4607) {
	    for (int j = 0; j < targets[i].backPointer_MayContainInterfacePackageMayContain_R4607.size(); ++j) {
	      InterfacePackage_c source = (InterfacePackage_c)targets[i].backPointer_MayContainInterfacePackageMayContain_R4607.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfacePackage_c[0];
  }
  }

public static InterfacePackage_c [] getManyIP_IPsOnR4607(ComponentPackage_c target)
{
  return getManyIP_IPsOnR4607(target, null);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4607(ComponentPackage_c target, boolean loadComponent)
{
  return getManyIP_IPsOnR4607(target, null, loadComponent);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4607(ComponentPackage_c target, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4607(target, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4607(ComponentPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new InterfacePackage_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, InterfacePackage_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_MayContainInterfacePackageMayContain_R4607) {
    for (int i = 0; i < target.backPointer_MayContainInterfacePackageMayContain_R4607.size(); ++i) {
      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_MayContainInterfacePackageMayContain_R4607.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new InterfacePackage_c[0];
	}
  }


  
    
// referring navigation

Component_c MayBeContainedInComponent ;
public void relateAcrossR4206To(Component_c target)
{
	relateAcrossR4206To(target, true);
}
public void relateAcrossR4206To(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == MayBeContainedInComponent) return;  // already related

    if ( MayBeContainedInComponent != target ) {
    
    Object oldKey = getInstanceKey();

    if (MayBeContainedInComponent != null) {
        UmlProblem.removeXtUMLProblem(this, MayBeContainedInComponent);
    
        MayBeContainedInComponent.clearBackPointerR4206To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"InterfacePackage_c.relateAcrossR4206To(Component_c target)", 
			"Relate performed across R4206 from Interface Package to Component without unrelate of prior instance.");  
		}
    }
                
    	MayBeContainedInComponent = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR4206To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "4206", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR4206From(Component_c target)
{
	unrelateAcrossR4206From(target, true);
}
public void unrelateAcrossR4206From(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (MayBeContainedInComponent == null) return;  // already unrelated
	
	if (target != MayBeContainedInComponent) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R4206", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR4206To(this);
    }
    

      if(MayBeContainedInComponent != null) {
      
        m_component_id = MayBeContainedInComponent.getId();
        if(IdAssigner.NULL_UUID.equals(m_component_id))
        {
          m_component_id = MayBeContainedInComponent.getIdCachedValue();
        }       
        MayBeContainedInComponent = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "4206", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static InterfacePackage_c getOneIP_IPOnR4206(Component_c [] targets)
{
    return getOneIP_IPOnR4206(targets, null);
}

public static InterfacePackage_c getOneIP_IPOnR4206(Component_c [] targets, ClassQueryInterface_c test)
{
    InterfacePackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneIP_IPOnR4206(targets[i], test);
        }
    }

    return ret_val;
}

public static InterfacePackage_c getOneIP_IPOnR4206(Component_c target)
{
  return getOneIP_IPOnR4206(target, null);
}

public static InterfacePackage_c getOneIP_IPOnR4206(Component_c target, boolean loadComponent)
{
    return getOneIP_IPOnR4206(target.getModelRoot(), target, null, loadComponent);
}

public static InterfacePackage_c getOneIP_IPOnR4206(Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneIP_IPOnR4206(target.getModelRoot(), target, test);
  }
  return null;
}

public static InterfacePackage_c getOneIP_IPOnR4206(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
	return getOneIP_IPOnR4206(modelRoot, target, test, true);
}

public static InterfacePackage_c getOneIP_IPOnR4206(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  InterfacePackage_c result = null;
  
  result=find_getOneIP_IPOnR4206(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,InterfacePackage_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneIP_IPOnR4206(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static InterfacePackage_c find_getOneIP_IPOnR4206(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_MayContainInterfacePackageMayContain_R4206) {
	    for ( int i = 0; i < target.backPointer_MayContainInterfacePackageMayContain_R4206.size(); ++i ) {
	      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_MayContainInterfacePackageMayContain_R4206.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static InterfacePackage_c [] getManyIP_IPsOnR4206(Component_c [] targets)
{
  return getManyIP_IPsOnR4206(targets, null);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4206(Component_c [] targets, boolean loadComponent)
{
  return getManyIP_IPsOnR4206(targets, null, loadComponent);
}
public static InterfacePackage_c [] getManyIP_IPsOnR4206(Component_c [] targets, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4206(targets, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4206(Component_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new InterfacePackage_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, InterfacePackage_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_MayContainInterfacePackageMayContain_R4206) {
	    for (int j = 0; j < targets[i].backPointer_MayContainInterfacePackageMayContain_R4206.size(); ++j) {
	      InterfacePackage_c source = (InterfacePackage_c)targets[i].backPointer_MayContainInterfacePackageMayContain_R4206.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new InterfacePackage_c[0];
  }
  }

public static InterfacePackage_c [] getManyIP_IPsOnR4206(Component_c target)
{
  return getManyIP_IPsOnR4206(target, null);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4206(Component_c target, boolean loadComponent)
{
  return getManyIP_IPsOnR4206(target, null, loadComponent);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4206(Component_c target, ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4206(target, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4206(Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new InterfacePackage_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, InterfacePackage_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_MayContainInterfacePackageMayContain_R4206) {
    for (int i = 0; i < target.backPointer_MayContainInterfacePackageMayContain_R4206.size(); ++i) {
      InterfacePackage_c source = (InterfacePackage_c)target.backPointer_MayContainInterfacePackageMayContain_R4206.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new InterfacePackage_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

InterfacePackageInInterfacePackage_c backPointer_MayContainInterfacePackageInInterfacePackageMayContain_R4300;

public void setInterfacePackageInInterfacePackageOrderInChildListR4300(InterfacePackageInInterfacePackage_c target, int index) {
	unrelateAcrossR4300From(target);
	InterfacePackageInInterfacePackage_c[] elements = InterfacePackageInInterfacePackage_c.getManyIP_IPINIPsOnR4300(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR4300From((InterfacePackageInInterfacePackage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR4300To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR4300To((InterfacePackageInInterfacePackage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR4300To(InterfacePackageInInterfacePackage_c target)
{
  if (target != null) {
    target.relateAcrossR4300To(this, true) ;
  }
}

public void relateAcrossR4300To(InterfacePackageInInterfacePackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR4300To(this, notifyChanges) ;
  }
}

public void setBackPointerR4300To(InterfacePackageInInterfacePackage_c target)
{
    backPointer_MayContainInterfacePackageInInterfacePackageMayContain_R4300 = target;
}

public void unrelateAcrossR4300From(InterfacePackageInInterfacePackage_c target)
{
  if (target != null) {
    target.unrelateAcrossR4300From(this, true) ;
  }
}

public void unrelateAcrossR4300From(InterfacePackageInInterfacePackage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR4300From(this, notifyChanges) ;
  }
}

public void clearBackPointerR4300To(InterfacePackageInInterfacePackage_c target)
{
	if (target == backPointer_MayContainInterfacePackageInInterfacePackageMayContain_R4300) {
		backPointer_MayContainInterfacePackageInInterfacePackageMayContain_R4300 = null;
	}
}

public static InterfacePackage_c getOneIP_IPOnR4300(InterfacePackageInInterfacePackage_c [] targets)
{
    return getOneIP_IPOnR4300(targets, null);
}

public static InterfacePackage_c getOneIP_IPOnR4300(InterfacePackageInInterfacePackage_c [] targets, ClassQueryInterface_c test)
{
    return getOneIP_IPOnR4300(targets, test, true);
}

public static InterfacePackage_c getOneIP_IPOnR4300(InterfacePackageInInterfacePackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    InterfacePackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             InterfacePackage_c candidate_val = getOneIP_IPOnR4300(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneIP_IPOnR4300(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static InterfacePackage_c getOneIP_IPOnR4300(InterfacePackageInInterfacePackage_c target)
{
	return getOneIP_IPOnR4300(target, true);
}
public static InterfacePackage_c getOneIP_IPOnR4300(InterfacePackageInInterfacePackage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.CanBeShownInInterfacePackage ;
  } else {
    return null;
  }
}

public static InterfacePackage_c [] getManyIP_IPsOnR4300(InterfacePackageInInterfacePackage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4300(targets, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4300(InterfacePackageInInterfacePackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new InterfacePackage_c[0];
  
  
  LinkedHashSet<InterfacePackage_c> elementsSet = new LinkedHashSet<InterfacePackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].CanBeShownInInterfacePackage == null)
	  targets[i].loadProxy();
    InterfacePackage_c associate = targets[i].CanBeShownInInterfacePackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  InterfacePackage_c[] result = new InterfacePackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static InterfacePackage_c [] getManyIP_IPsOnR4300(InterfacePackageInInterfacePackage_c [] targets)
{
  return getManyIP_IPsOnR4300(targets, null);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4300(InterfacePackageInInterfacePackage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    InterfacePackageInInterfacePackage_c [] targetArray = new InterfacePackageInInterfacePackage_c[1];
    targetArray[0] = target;
    return getManyIP_IPsOnR4300(targetArray, test, loadComponent);
  } else {
    InterfacePackage_c [] result = new InterfacePackage_c [0] ;
    return result ;
  }
  
}

public static InterfacePackage_c [] getManyIP_IPsOnR4300(InterfacePackageInInterfacePackage_c target,
    ClassQueryInterface_c test)
{
    return getManyIP_IPsOnR4300(target, null, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4300(InterfacePackageInInterfacePackage_c target)
{
    return getManyIP_IPsOnR4300(target, null, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4300(InterfacePackageInInterfacePackage_c target, boolean loadComponent)
{
    return getManyIP_IPsOnR4300(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Interface_c> backPointer_ContainsInterfaceContains_R4303 = new ArrayList<Interface_c>();

public void setInterfaceOrderInChildListR4303(Interface_c target, int index) {
	unrelateAcrossR4303From(target);
	Interface_c[] elements = Interface_c.getManyC_IsOnR4303(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR4303From((Interface_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR4303To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR4303To((Interface_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR4303To(Interface_c target)
{
  if (target != null) {
    target.relateAcrossR4303To(this, true) ;
  }
}

public void relateAcrossR4303To(Interface_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR4303To(this, notifyChanges) ;
  }
}

public void setBackPointerR4303To(Interface_c target)
{
  	synchronized (backPointer_ContainsInterfaceContains_R4303) {
		backPointer_ContainsInterfaceContains_R4303.add(target);
	}
}

public void unrelateAcrossR4303From(Interface_c target)
{
  if (target != null) {
    target.unrelateAcrossR4303From(this, true) ;
  }
}

public void unrelateAcrossR4303From(Interface_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR4303From(this, notifyChanges) ;
  }
}

public void clearBackPointerR4303To(Interface_c target)
{
  synchronized (backPointer_ContainsInterfaceContains_R4303) {
	    backPointer_ContainsInterfaceContains_R4303.remove(target);
	}
}

public static InterfacePackage_c getOneIP_IPOnR4303(Interface_c [] targets)
{
    return getOneIP_IPOnR4303(targets, null);
}

public static InterfacePackage_c getOneIP_IPOnR4303(Interface_c [] targets, ClassQueryInterface_c test)
{
    return getOneIP_IPOnR4303(targets, test, true);
}

public static InterfacePackage_c getOneIP_IPOnR4303(Interface_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    InterfacePackage_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             InterfacePackage_c candidate_val = getOneIP_IPOnR4303(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneIP_IPOnR4303(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static InterfacePackage_c getOneIP_IPOnR4303(Interface_c target)
{
	return getOneIP_IPOnR4303(target, true);
}
public static InterfacePackage_c getOneIP_IPOnR4303(Interface_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.InterfacePackage != null){
		target.InterfacePackage.loadProxy();
	}
	}
    return target.InterfacePackage ;
  } else {
    return null;
  }
}

public static InterfacePackage_c [] getManyIP_IPsOnR4303(Interface_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyIP_IPsOnR4303(targets, test, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4303(Interface_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new InterfacePackage_c[0];
  
  
  LinkedHashSet<InterfacePackage_c> elementsSet = new LinkedHashSet<InterfacePackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].InterfacePackage == null)
	  targets[i].loadProxy();
    InterfacePackage_c associate = targets[i].InterfacePackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  InterfacePackage_c[] result = new InterfacePackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static InterfacePackage_c [] getManyIP_IPsOnR4303(Interface_c [] targets)
{
  return getManyIP_IPsOnR4303(targets, null);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4303(Interface_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Interface_c [] targetArray = new Interface_c[1];
    targetArray[0] = target;
    return getManyIP_IPsOnR4303(targetArray, test, loadComponent);
  } else {
    InterfacePackage_c [] result = new InterfacePackage_c [0] ;
    return result ;
  }
  
}

public static InterfacePackage_c [] getManyIP_IPsOnR4303(Interface_c target,
    ClassQueryInterface_c test)
{
    return getManyIP_IPsOnR4303(target, null, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4303(Interface_c target)
{
    return getManyIP_IPsOnR4303(target, null, true);
}

public static InterfacePackage_c [] getManyIP_IPsOnR4303(Interface_c target, boolean loadComponent)
{
    return getManyIP_IPsOnR4303(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R1402
      SpecificationPackage_c relInst40394 = (SpecificationPackage_c) baseRoot.getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40394 == null) {
      			relInst40394 = (SpecificationPackage_c) Ooaofooa.getDefaultInstance().getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
      		}
			if (relInst40394 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40394 = (SpecificationPackage_c) roots[i].getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
					if (relInst40394 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40394 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40394) && !isProxy())) {
	      relInst40394.relateAcrossR1402To(this, notifyChanges);
	  }
	  }
	          

	if (MayBeShownInInterfacePackageInInterfacePackage == null) {          
      // R4301
      InterfacePackageInInterfacePackage_c relInst40395 = (InterfacePackageInInterfacePackage_c) baseRoot.getInstanceList(InterfacePackageInInterfacePackage_c.class).get(new Object[] {m_parent_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40395 == null) {
      			relInst40395 = (InterfacePackageInInterfacePackage_c) Ooaofooa.getDefaultInstance().getInstanceList(InterfacePackageInInterfacePackage_c.class).get(new Object[] {m_parent_package_id});
      		}
			if (relInst40395 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40395 = (InterfacePackageInInterfacePackage_c) roots[i].getInstanceList(InterfacePackageInInterfacePackage_c.class).get(new Object[] {m_parent_package_id});
					if (relInst40395 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40395 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40395) && !isProxy())) {
	      relInst40395.relateAcrossR4301To(this, notifyChanges);
	  }
	  }
	}
	          

	if (MayBeShownInSystemModel == null) {          
      // R4302
      baseRoot = Ooaofooa.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
      SystemModel_c relInst40396 = (SystemModel_c) baseRoot.getInstanceList(SystemModel_c.class).get(new Object[] {m_direct_sys_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40396 == null) {
      			relInst40396 = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(new Object[] {m_direct_sys_id});
      		}
			if (relInst40396 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40396 = (SystemModel_c) roots[i].getInstanceList(SystemModel_c.class).get(new Object[] {m_direct_sys_id});
					if (relInst40396 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40396 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40396) && !isProxy())) {
	      relInst40396.relateAcrossR4302To(this, notifyChanges);
	  }
	      // set the root in the Domain's model root, not the System Model's
	      // modelRoot is the SystemModel's root when we are loading a Domain proxy
	      ((Ooaofooa)getModelRoot()).setRoot(relInst40396);
	  }
          baseRoot = modelRoot;
	}
	          

	if (SystemModel == null) {          
      // R4304
      baseRoot = Ooaofooa.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
      SystemModel_c relInst40397 = (SystemModel_c) baseRoot.getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40397 == null) {
      			relInst40397 = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
      		}
			if (relInst40397 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40397 = (SystemModel_c) roots[i].getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
					if (relInst40397 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40397 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40397) && !isProxy())) {
	      relInst40397.relateAcrossR4304To(this, notifyChanges);
	  }
	      // set the root in the Domain's model root, not the System Model's
	      // modelRoot is the SystemModel's root when we are loading a Domain proxy
	      ((Ooaofooa)getModelRoot()).setRoot(relInst40397);
	  }
          baseRoot = modelRoot;
	}
	          

	if (MayExistInComponentPackage == null) {          
      // R4607
      ComponentPackage_c relInst40398 = (ComponentPackage_c) baseRoot.getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40398 == null) {
      			relInst40398 = (ComponentPackage_c) Ooaofooa.getDefaultInstance().getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
      		}
			if (relInst40398 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40398 = (ComponentPackage_c) roots[i].getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
					if (relInst40398 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40398 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40398) && !isProxy())) {
	      relInst40398.relateAcrossR4607To(this, notifyChanges);
	  }
	  }
	}
	          

	if (MayBeContainedInComponent == null) {          
      // R4206
      Component_c relInst40399 = (Component_c) baseRoot.getInstanceList(Component_c.class).get(new Object[] {m_component_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40399 == null) {
      			relInst40399 = (Component_c) Ooaofooa.getDefaultInstance().getInstanceList(Component_c.class).get(new Object[] {m_component_id});
      		}
			if (relInst40399 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40399 = (Component_c) roots[i].getInstanceList(Component_c.class).get(new Object[] {m_component_id});
					if (relInst40399 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40399 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40399) && !isProxy())) {
	      relInst40399.relateAcrossR4206To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R1402
      // EP_SPKG
		  inst=IsSupertypeSpecificationPackage;
			unrelateAcrossR1402From(IsSupertypeSpecificationPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4301
      // IP_IPINIP
		  inst=MayBeShownInInterfacePackageInInterfacePackage;
			unrelateAcrossR4301From(MayBeShownInInterfacePackageInInterfacePackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4302
      // S_SYS
		  inst=MayBeShownInSystemModel;
			unrelateAcrossR4302From(MayBeShownInSystemModel, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4304
      // S_SYS
		  inst=SystemModel;
			unrelateAcrossR4304From(SystemModel, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4607
      // CP_CP
		  inst=MayExistInComponentPackage;
			unrelateAcrossR4607From(MayExistInComponentPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R4206
      // C_C
		  inst=MayBeContainedInComponent;
			unrelateAcrossR4206From(MayBeContainedInComponent, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final InterfacePackage_c inst = (InterfacePackage_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static InterfacePackage_c InterfacePackageInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		InterfacePackage_c result=findInterfacePackageInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,InterfacePackage_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findInterfacePackageInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static InterfacePackage_c findInterfacePackageInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				InterfacePackage_c x = (InterfacePackage_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static InterfacePackage_c InterfacePackageInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return InterfacePackageInstance(modelRoot,test,true);
  }
  
  public static InterfacePackage_c InterfacePackageInstance(ModelRoot modelRoot)
  {
	 return InterfacePackageInstance(modelRoot,null,true);
  }

  public static InterfacePackage_c [] InterfacePackageInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, InterfacePackage_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(InterfacePackage_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					InterfacePackage_c x = (InterfacePackage_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				InterfacePackage_c[] ret_set = new InterfacePackage_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new InterfacePackage_c[0];
			}		
		} 
  }
  public static InterfacePackage_c [] InterfacePackageInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  InterfacePackageInstances(modelRoot,test,true);
  }
  public static InterfacePackage_c [] InterfacePackageInstances(ModelRoot modelRoot)
  {
	return InterfacePackageInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Interface Package.dispose call: ";
	SpecificationPackage_c testR1402Inst6 = SpecificationPackage_c.getOneEP_SPKGOnR1402(this, false);

	if ( testR1402Inst6 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "1402 ";
	}
	InterfacePackageInInterfacePackage_c testR4300Inst = InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4300(this, false);

	if ( testR4300Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "4300 ";	
	}
	InterfacePackageInInterfacePackage_c testR4301Inst = InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4301(this, false);

	if ( testR4301Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4301 ";
	}
	SystemModel_c testR4302Inst = SystemModel_c.getOneS_SYSOnR4302(this, false);

	if ( testR4302Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4302 ";
	}
	Interface_c testR4303Inst = Interface_c.getOneC_IOnR4303(this, false);

	if ( testR4303Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "4303 ";	
	}
	SystemModel_c testR4304Inst = SystemModel_c.getOneS_SYSOnR4304(this, false);

	if ( testR4304Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4304 ";
	}
	ComponentPackage_c testR4607Inst = ComponentPackage_c.getOneCP_CPOnR4607(this, false);

	if ( testR4607Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4607 ";
	}
	Component_c testR4206Inst = Component_c.getOneC_COnR4206(this, false);

	if ( testR4206Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "4206 ";
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Interface Package", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("direct_sys_id")){
         return true;
      }
      if(attributeName.equals("sys_id")){
         return true;
      }
      if(attributeName.equals("package_id")){
         return true;
      }
      if(attributeName.equals("component_package_id")){
         return true;
      }
      if(attributeName.equals("parent_package_id")){
         return true;
      }
      if(attributeName.equals("component_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getPackage_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getPackage_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDirect_sys_idLongBased()
  {
    if ( MayBeShownInSystemModel != null )
    {
      return MayBeShownInSystemModel.getSys_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDirect_sys_id()
  {
    if ( MayBeShownInSystemModel != null )
    {
      return MayBeShownInSystemModel.getSys_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDirect_sys_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_direct_sys_id) )
      return m_direct_sys_id;
    else
      return getDirect_sys_id();
  }
  
  public void setDirect_sys_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_direct_sys_id)){
	        return;
	    }
	}else if(m_direct_sys_id != null){
	    if(m_direct_sys_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Direct_sys_id", m_direct_sys_id, newValue,true); 
   m_direct_sys_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSys_idLongBased()
  {
    if ( SystemModel != null )
    {
      return SystemModel.getSys_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSys_id()
  {
    if ( SystemModel != null )
    {
      return SystemModel.getSys_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSys_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sys_id) )
      return m_sys_id;
    else
      return getSys_id();
  }
  
  public void setSys_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_sys_id)){
	        return;
	    }
	}else if(m_sys_id != null){
	    if(m_sys_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Sys_id", m_sys_id, newValue,true); 
   m_sys_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPackage_idLongBased()
  {
    if ( IsSupertypeSpecificationPackage != null )
    {
      return IsSupertypeSpecificationPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPackage_id()
  {
    if ( IsSupertypeSpecificationPackage != null )
    {
      return IsSupertypeSpecificationPackage.getPackage_id();
    }
    return m_package_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypeSpecificationPackage != null );
 
 }                  

  public java.util.UUID getPackage_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_package_id) )
      return m_package_id;
    else
      return getPackage_id();
  }
  
  public void setPackage_id(java.util.UUID newValue)
  {
   m_package_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getComponent_package_idLongBased()
  {
    if ( MayExistInComponentPackage != null )
    {
      return MayExistInComponentPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_package_id()
  {
    if ( MayExistInComponentPackage != null )
    {
      return MayExistInComponentPackage.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_package_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_package_id) )
      return m_component_package_id;
    else
      return getComponent_package_id();
  }
  
  public void setComponent_package_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_package_id)){
	        return;
	    }
	}else if(m_component_package_id != null){
	    if(m_component_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_package_id", m_component_package_id, newValue,true); 
   m_component_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getParent_package_idLongBased()
  {
    if ( MayBeShownInInterfacePackageInInterfacePackage != null )
    {
      return MayBeShownInInterfacePackageInInterfacePackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getParent_package_id()
  {
    if ( MayBeShownInInterfacePackageInInterfacePackage != null )
    {
      return MayBeShownInInterfacePackageInInterfacePackage.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getParent_package_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_parent_package_id) )
      return m_parent_package_id;
    else
      return getParent_package_id();
  }
  
  public void setParent_package_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_parent_package_id)){
	        return;
	    }
	}else if(m_parent_package_id != null){
	    if(m_parent_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Parent_package_id", m_parent_package_id, newValue,true); 
   m_parent_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getComponent_idLongBased()
  {
    if ( MayBeContainedInComponent != null )
    {
      return MayBeContainedInComponent.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_id()
  {
    if ( MayBeContainedInComponent != null )
    {
      return MayBeContainedInComponent.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_id) )
      return m_component_id;
    else
      return getComponent_id();
  }
  
  public void setComponent_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_id)){
	        return;
	    }
	}else if(m_component_id != null){
	    if(m_component_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_id", m_component_id, newValue,true); 
   m_component_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Interface Package", //$NON-NLS-1$
	  " Operation entered: Interface Package::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     InterfacePackage_c [] objs = InterfacePackage_c.InterfacePackageInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Interface Package", //$NON-NLS-1$
	  " Operation entered: Interface Package::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class InterfacePackage_c_test40401_c implements ClassQueryInterface_c
    {
	  InterfacePackage_c_test40401_c( java.util.UUID            p40402 ) {
	  m_p40402 = p40402;
	  }
	  private java.util.UUID             m_p40402; 
	  public boolean evaluate (Object candidate)
	  {
	      InterfacePackage_c selected = (InterfacePackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p40402));
	      return retval;
	  }
    }

    InterfacePackage_c [] objs40400 = 
    InterfacePackage_c.InterfacePackageInstances(modelRoot, new InterfacePackage_c_test40401_c(getPackage_id())) ;

    if ( (  (objs40400.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40400.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40400.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs40400.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40400.length )  + " Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40400.length )  + " Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Interface Package is a referring class in association: rel.Numb = 4302
          // The participating class is: System Model
    class SystemModel_c_test40406_c implements ClassQueryInterface_c
    {
	  SystemModel_c_test40406_c( java.util.UUID            p40407 ) {
	  m_p40407 = p40407;
	  }
	  private java.util.UUID             m_p40407; 
	  public boolean evaluate (Object candidate)
	  {
	      SystemModel_c selected = (SystemModel_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSys_id().equals(m_p40407));
	      return retval;
	  }
    }

    SystemModel_c [] objs40405 = 
    SystemModel_c.SystemModelInstances(Ooaofooa.getDefaultInstance(), new SystemModel_c_test40406_c(getDirect_sys_id())) ;

    if ( (  (objs40405.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Association: 4302: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40405.length )  + " Direct_Sys_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Association: 4302: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40405.length )  + " Direct_Sys_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Interface Package is a referring class in association: rel.Numb = 4304
          // The participating class is: System Model
    class SystemModel_c_test40409_c implements ClassQueryInterface_c
    {
	  SystemModel_c_test40409_c( java.util.UUID            p40410 ) {
	  m_p40410 = p40410;
	  }
	  private java.util.UUID             m_p40410; 
	  public boolean evaluate (Object candidate)
	  {
	      SystemModel_c selected = (SystemModel_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSys_id().equals(m_p40410));
	      return retval;
	  }
    }

    SystemModel_c [] objs40408 = 
    SystemModel_c.SystemModelInstances(Ooaofooa.getDefaultInstance(), new SystemModel_c_test40409_c(getSys_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs40408.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Association: 4304: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40408.length )  + " Sys_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Association: 4304: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40408.length )  + " Sys_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Interface Package is a subtype in association: rel.Numb = 1402
          // The supertype class is: Specification Package
    class SpecificationPackage_c_test40412_c implements ClassQueryInterface_c
    {
	  SpecificationPackage_c_test40412_c( java.util.UUID            p40413 ) {
	  m_p40413 = p40413;
	  }
	  private java.util.UUID             m_p40413; 
	  public boolean evaluate (Object candidate)
	  {
	      SpecificationPackage_c selected = (SpecificationPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p40413));
	      return retval;
	  }
    }

    SpecificationPackage_c [] objs40411 = 
    SpecificationPackage_c.SpecificationPackageInstances(modelRoot, new SpecificationPackage_c_test40412_c(getPackage_id())) ;

    if ( (  (objs40411.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Association: 1402: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40411.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Association: 1402: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40411.length )  , e); 
      }
      retval = false;

    }

          // Interface Package is a referring class in association: rel.Numb = 4607
          // The participating class is: Component Package
    class ComponentPackage_c_test40415_c implements ClassQueryInterface_c
    {
	  ComponentPackage_c_test40415_c( java.util.UUID            p40416 ) {
	  m_p40416 = p40416;
	  }
	  private java.util.UUID             m_p40416; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentPackage_c selected = (ComponentPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p40416));
	      return retval;
	  }
    }

    ComponentPackage_c [] objs40414 = 
    ComponentPackage_c.ComponentPackageInstances(modelRoot, new ComponentPackage_c_test40415_c(getComponent_package_id())) ;

    if ( (  (objs40414.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Association: 4607: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40414.length )  + " Component_Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Association: 4607: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40414.length )  + " Component_Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Interface Package is a referring class in association: rel.Numb = 4301
          // The participating class is: Interface Package in Interface Package
    class InterfacePackageInInterfacePackage_c_test40418_c implements ClassQueryInterface_c
    {
	  InterfacePackageInInterfacePackage_c_test40418_c( java.util.UUID            p40419 ) {
	  m_p40419 = p40419;
	  }
	  private java.util.UUID             m_p40419; 
	  public boolean evaluate (Object candidate)
	  {
	      InterfacePackageInInterfacePackage_c selected = (InterfacePackageInInterfacePackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p40419));
	      return retval;
	  }
    }

    InterfacePackageInInterfacePackage_c [] objs40417 = 
    InterfacePackageInInterfacePackage_c.InterfacePackageInInterfacePackageInstances(modelRoot, new InterfacePackageInInterfacePackage_c_test40418_c(getParent_package_id())) ;

    if ( (  (objs40417.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Association: 4301: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40417.length )  + " Parent_Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Association: 4301: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40417.length )  + " Parent_Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Interface Package is a referring class in association: rel.Numb = 4206
          // The participating class is: Component
    class Component_c_test40421_c implements ClassQueryInterface_c
    {
	  Component_c_test40421_c( java.util.UUID            p40422 ) {
	  m_p40422 = p40422;
	  }
	  private java.util.UUID             m_p40422; 
	  public boolean evaluate (Object candidate)
	  {
	      Component_c selected = (Component_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p40422));
	      return retval;
	  }
    }

    Component_c [] objs40420 = 
    Component_c.ComponentInstances(modelRoot, new Component_c_test40421_c(getComponent_id())) ;

    if ( (  (objs40420.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Association: 4206: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40420.length )  + " Component_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Association: 4206: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40420.length )  + " Component_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Interface Package is a participating class in association: rel.Numb = 4300
             // Object: Interface Package in Interface Package
    class InterfacePackageInInterfacePackage_c_test40424_c implements ClassQueryInterface_c
    {
	  InterfacePackageInInterfacePackage_c_test40424_c( java.util.UUID            p40425 ) {
	  m_p40425 = p40425;
	  }
	  private java.util.UUID             m_p40425; 
	  public boolean evaluate (Object candidate)
	  {
	      InterfacePackageInInterfacePackage_c selected = (InterfacePackageInInterfacePackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p40425));
	      return retval;
	  }
    }

    InterfacePackageInInterfacePackage_c [] objs40423 = 
    InterfacePackageInInterfacePackage_c.InterfacePackageInInterfacePackageInstances(modelRoot, new InterfacePackageInInterfacePackage_c_test40424_c(getPackage_id())) ;

    if ( (  (objs40423.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Interface Package", //$NON-NLS-1$
           "Consistency: Object: Interface Package: Association: 4300: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40423.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Interface Package: Association: 4300: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40423.length )  , e); 
      }
      retval = false;

    }

          // Interface Package is a participating class in association: rel.Numb = 4303
             // Object: Interface
    return retval;
  }


  // declare transform functions
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
setName( Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Interface Package"			    
,Converttoinstance())) ;



   } // End initialize
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Converttoinstance") ; 
return this;
   } // End convertToInstance
  public  String       Get_compartment_text(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Get_compartment_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


if ( (p_At == Justification_c.Center_in_X) )
{

v_result = "«interface»" ;



}

else if ( (p_At == Justification_c.Center) )
{

v_result = getName() ;



}

return v_result;



   } // End get_compartment_text
  public  int          Get_compartments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Get_compartments") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_compartments
  public  int  Get_style()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.Folder;



   } // End get_style
  public  int  Get_text_style(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Get_text_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.None;



   } // End get_text_style
  public  int          Get_entries(final int          p_Comp_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Get_entries") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_entries
  public  void Newinterface()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Newinterface") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_interface = new Interface_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_interface));


if (v_interface != null) {
  v_interface.relateAcrossR4303To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_interface != null) {
v_interface.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newInterface
  public  void Newinterfacepackage()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Newinterfacepackage") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfacePackageInInterfacePackage_c v_idiid = InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4300(this);


if ( (  (v_idiid == null)) )
{

v_idiid = new InterfacePackageInInterfacePackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_idiid));


  this.relateAcrossR4300To(v_idiid);



}

InterfacePackage_c v_interfaceDiagram = new InterfacePackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_interfaceDiagram));


SpecificationPackage_c v_sp = new SpecificationPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sp));


if (v_interfaceDiagram != null) {
  v_interfaceDiagram.relateAcrossR1402To(v_sp);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_idiid != null) {
  v_idiid.relateAcrossR4301To(v_interfaceDiagram);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_interfaceDiagram != null) {
v_interfaceDiagram.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4304(this);


if ( (  (v_system == null)) )
{

v_system = SystemModel_c.getOneS_SYSOnR4302(this);



}

if ( (  (v_system != null)) )
{

if (v_interfaceDiagram != null) {
  v_interfaceDiagram.relateAcrossR4304To(v_system);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End newInterfacePackage
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4302(this);


if ( (  (v_system != null)) )
{

this.unrelateAcrossR4302From(v_system);



}

InterfacePackageInInterfacePackage_c v_did = InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4301(this);


if ( (  (v_did != null)) )
{

this.unrelateAcrossR4301From(v_did);


InterfacePackage_c v_other_child = InterfacePackage_c.getOneIP_IPOnR4301(v_did);


if (   (v_other_child == null) )
{

InterfacePackage_c v_parent = InterfacePackage_c.getOneIP_IPOnR4300(v_did);


if (   (v_parent != null) )
{

if (v_did != null) {
v_did.unrelateAcrossR4300From(v_parent);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_did != null) {
// get the location of this element in the instance list
// before deleting
if ( v_did.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_did));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}


}

v_did = InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4300(this);


InterfacePackage_c [] v_diagrams = InterfacePackage_c.getManyIP_IPsOnR4301(v_did);


InterfacePackage_c  v_diagram = null;
for ( int i37269 = 0; i37269 < v_diagrams.length; i37269++)
{
  v_diagram = v_diagrams[i37269] ;

if (v_diagram != null) {
v_diagram.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4303(this);


Interface_c  v_i = null;
for ( int i37270 = 0; i37270 < v_interfaces.length; i37270++)
{
  v_i = v_interfaces[i37270] ;

if (v_i != null) {
v_i.unrelateAcrossR4303From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_i != null) {
v_i.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

v_system = SystemModel_c.getOneS_SYSOnR4304(this);


if ( (  (v_system != null)) )
{

this.unrelateAcrossR4304From(v_system);



}

Component_c v_component = Component_c.getOneC_COnR4206(this);


if ( (  (v_component != null)) )
{

this.unrelateAcrossR4206From(v_component);



}

ComponentPackage_c v_componentPackage = ComponentPackage_c.getOneCP_CPOnR4607(this);


if ( (  (v_componentPackage != null)) )
{

this.unrelateAcrossR4607From(v_componentPackage);



}

SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}


if ( (  (v_specPkg != null)) )
{

this.unrelateAcrossR1402From(v_specPkg);


if (v_specPkg != null) {
v_specPkg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End dispose
  public  boolean      Ischildpackageof(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Ischildpackageof") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfacePackage_c [] v_childPkgs = InterfacePackage_c.getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c.getManyIP_IPINIPsOnR4300(this));


InterfacePackage_c  v_childPkg = null;
for ( int i37271 = 0; i37271 < v_childPkgs.length; i37271++)
{
  v_childPkg = v_childPkgs[i37271] ;

if ( (v_childPkg.getPackage_id().equals(p_Id)) )
{

return true;



}

else
{

boolean      v_result = v_childPkg.Ischildpackageof(			    
p_Id) ;


if ( (v_result) )
{

return v_result;



}


}


}

return false;



   } // End isChildPackageOf
  public  void Associatepackagewithsystem(final java.util.UUID         p_Sysid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Associatepackagewithsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_system = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(p_Sysid);


if ( (  (v_system != null)) )
{

boolean      v_shouldRelate = true ;


SystemModel_c v_existSystem = SystemModel_c.getOneS_SYSOnR4304(this);


if ( (  (v_existSystem != null)) )
{

if ( (v_system == v_existSystem) )
{

v_shouldRelate = false ;



}


}

if ( (v_shouldRelate) )
{

if ( (  (v_existSystem != null)) )
{

this.unrelateAcrossR4304From(v_existSystem);



}

  this.relateAcrossR4304To(v_system);



}

InterfacePackage_c [] v_childPkgs = InterfacePackage_c.getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c.getManyIP_IPINIPsOnR4300(this));


InterfacePackage_c  v_childPkg = null;
for ( int i37272 = 0; i37272 < v_childPkgs.length; i37272++)
{
  v_childPkg = v_childPkgs[i37272] ;

if (v_childPkg != null) {
v_childPkg.Associatepackagewithsystem(			    
v_system.getSys_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End associatePackageWithSystem
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getPackage_id();



   } // End get_ooa_id
  public  void Associatewithsystem(final java.util.UUID         p_Sysid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Associatewithsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


SystemModel_c v_system = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(p_Sysid);


  this.relateAcrossR4302To(v_system);



   } // End associateWithSystem
  public  void Deassociatefromparent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Deassociatefromparent") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4302(this);


if ( (  (v_system != null)) )
{

this.unrelateAcrossR4302From(v_system);



}

SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


Package_c v_pkg = Package_c.getOneEP_PKGOnR1400(v_specPkg);


if ( (  (v_pkg != null)) )
{

if (v_specPkg != null) {
v_specPkg.unrelateAcrossR1400From(v_pkg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

InterfacePackageInInterfacePackage_c v_ipinip = InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4301(this);


if ( (  (v_ipinip != null)) )
{

InterfacePackage_c v_parent = InterfacePackage_c.getOneIP_IPOnR4300(v_ipinip);


if (v_ipinip != null) {
v_ipinip.unrelateAcrossR4301From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


InterfacePackage_c [] v_otherIps = InterfacePackage_c.getManyIP_IPsOnR4301(v_ipinip);


if ( (  (v_otherIps.length == 0)) )
{

if (v_ipinip != null) {
v_ipinip.unrelateAcrossR4300From(v_parent);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_ipinip != null) {
// get the location of this element in the instance list
// before deleting
if ( v_ipinip.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_ipinip));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}


}

ComponentPackage_c v_componentPackage = ComponentPackage_c.getOneCP_CPOnR4607(this);


if ( (  (v_componentPackage != null)) )
{

this.unrelateAcrossR4607From(v_componentPackage);



}

Component_c v_component = Component_c.getOneC_COnR4206(this);


if ( (  (v_component != null)) )
{

this.unrelateAcrossR4206From(v_component);



}


   } // End deassociateFromParent
  public  void Associatewithpackage(final java.util.UUID         p_Pkgid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Associatewithpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Package_c v_package = (Package_c) modelRoot.getInstanceList(Package_c.class).getGlobal(null, p_Pkgid);


SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


if (v_specPkg != null) {
  v_specPkg.relateAcrossR1400To(v_package);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithPackage
  public  void Associatewithcomponentpackage(final java.util.UUID         p_Cpid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Associatewithcomponentpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


ComponentPackage_c v_cp = (ComponentPackage_c) modelRoot.getInstanceList(ComponentPackage_c.class).getGlobal(null, p_Cpid);


if (v_cp != null) {
  v_cp.relateAcrossR4607To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithComponentPackage
  public  void Associatewithcomponent(final java.util.UUID         p_Compid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Associatewithcomponent") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Component_c v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, p_Compid);


  this.relateAcrossR4206To(v_component);



   } // End associateWithComponent
  public  void Associatewithinterfacepackage(final java.util.UUID         p_Ipid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Associatewithinterfacepackage") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


InterfacePackage_c v_ifacePkg = (InterfacePackage_c) modelRoot.getInstanceList(InterfacePackage_c.class).getGlobal(null, p_Ipid);


InterfacePackageInInterfacePackage_c v_ipinip = InterfacePackageInInterfacePackage_c.getOneIP_IPINIPOnR4300(v_ifacePkg);


if ( (  (v_ipinip == null)) )
{

v_ipinip = new InterfacePackageInInterfacePackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ipinip));


if (v_ipinip != null) {
  v_ipinip.relateAcrossR4300To(v_ifacePkg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_ipinip != null) {
  v_ipinip.relateAcrossR4301To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithInterfacePackage
  public  void Pasteinterfacepackage(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Pasteinterfacepackage") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfacePackage_c v_ifacePkg = (InterfacePackage_c) modelRoot.getInstanceList(InterfacePackage_c.class).getGlobal(null, p_Id);


if ( (  (v_ifacePkg != null)) )
{

if (v_ifacePkg != null) {
  v_ifacePkg.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_ifacePkg.Converttoinstance()			    
,v_ifacePkg.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_ifacePkg != null) {
v_ifacePkg.Associatewithinterfacepackage(			    
getPackage_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4304(this);


if (v_ifacePkg != null) {
v_ifacePkg.Associatepackagewithsystem(			    
v_system.getSys_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteInterfacePackage
  public  int          Getinterfacepckgcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Getinterfacepckgcount") ; 
               final ModelRoot modelRoot = getModelRoot();
InterfacePackage_c [] v_interfacePckgs = InterfacePackage_c.getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c.getManyIP_IPINIPsOnR4300(this));


return   (v_interfacePckgs.length);



   } // End getInterfacePckgCount
  public  java.util.UUID         Getinterfacepckgid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Getinterfacepckgid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


InterfacePackage_c [] v_interfacePckgs = InterfacePackage_c.getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c.getManyIP_IPINIPsOnR4300(this));


int          v_count = -1 ;


InterfacePackage_c  v_interfacePckg = null;
for ( int i37273 = 0; i37273 < v_interfacePckgs.length; i37273++)
{
  v_interfacePckg = v_interfacePckgs[i37273] ;

if ( (  (v_interfacePckg != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_interfacePckg.Get_ooa_id();



}


}

return v_id;



   } // End getInterfacePckgId
  public  int          Getinterfacecount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Getinterfacecount") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4303(this);


return   (v_interfaces.length);



   } // End getInterfaceCount
  public  java.util.UUID         Getinterfaceid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Getinterfaceid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4303(this);


int          v_count = -1 ;


Interface_c  v_interface = null;
for ( int i37274 = 0; i37274 < v_interfaces.length; i37274++)
{
  v_interface = v_interfaces[i37274] ;

if ( (  (v_interface != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_interface.getId();



}


}

return v_id;



   } // End getInterfaceId
  public  void Pasteinterface(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Pasteinterface") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c v_iface = (Interface_c) modelRoot.getInstanceList(Interface_c.class).getGlobal(null, p_Id);


if ( (  (v_iface != null)) )
{

if (v_iface != null) {
  v_iface.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_iface.Converttoinstance()			    
,v_iface.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_iface != null) {
  v_iface.relateAcrossR4303To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteInterface
  public  void Collectreferencesforsynchronization(final Object p_Referencelist,final int  p_Synctype)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Interface Package", " Operation entered: InterfacePackage::Collectreferencesforsynchronization") ; 
               final ModelRoot modelRoot = getModelRoot();
Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4303(this);


Interface_c  v_interface = null;
for ( int i37275 = 0; i37275 < v_interfaces.length; i37275++)
{
  v_interface = v_interfaces[i37275] ;

if (v_interface != null) {
v_interface.Collectreferencesforsynchronization(			    
p_Referencelist			    
,p_Synctype ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

InterfacePackage_c [] v_interfacePkgs = InterfacePackage_c.getManyIP_IPsOnR4301(InterfacePackageInInterfacePackage_c.getManyIP_IPINIPsOnR4300(this));


InterfacePackage_c  v_interfacePkg = null;
for ( int i37276 = 0; i37276 < v_interfacePkgs.length; i37276++)
{
  v_interfacePkg = v_interfacePkgs[i37276] ;

if (v_interfacePkg != null) {
v_interfacePkg.Collectreferencesforsynchronization(			    
p_Referencelist			    
,p_Synctype ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End collectReferencesForSynchronization

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	if (adapter == org.eclipse.core.resources.IResource.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
        	return comp.getFile().getParent();
        }
	}else if(adapter == org.eclipse.core.resources.IFile.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
            return comp.getFile();
        }
	}
	  return null;
  }
} // end Interface Package
