      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Body_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_BODY extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Body_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Body_c(ModelRoot modelRoot,
       java.util.UUID         p_m_action_id,
       String       p_m_type,
       int          p_m_looplevel,
       java.util.UUID         p_m_block_id,
       java.util.UUID         p_m_currentscope_id,
       Object p_m_return_value,
       String       p_m_label,
       java.util.UUID         p_m_parsed_block_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_action_id = IdAssigner.preprocessUUID(p_m_action_id);
       //extract 28 bit value only            
       m_action_idLongBased = 0xfffffff & p_m_action_id.getLeastSignificantBits();
       m_type = p_m_type;
       m_looplevel = p_m_looplevel;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_block_id = IdAssigner.preprocessUUID(p_m_block_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_currentscope_id = IdAssigner.preprocessUUID(p_m_currentscope_id);
       m_return_value = p_m_return_value;
       m_label = p_m_label;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_parsed_block_id = IdAssigner.preprocessUUID(p_m_parsed_block_id);
       // default value for m_returnfound
        
    setUniqueId(m_action_id);
    Object [] key = {m_action_id};
    addInstanceToMap(key);
  }
  static public Body_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_action_id,
       String       p_m_type,
       int          p_m_looplevel,
       java.util.UUID         p_m_block_id,
       java.util.UUID         p_m_currentscope_id,
       Object p_m_return_value,
       String       p_m_label,
       java.util.UUID         p_m_parsed_block_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Body_c.class);
      Body_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_action_id};
          new_inst = (Body_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_action_id = IdAssigner.preprocessUUID(p_m_action_id);
       //extract 28 bit value only            
       new_inst.m_action_idLongBased = 0xfffffff & p_m_action_id.getLeastSignificantBits();
       new_inst.m_type = p_m_type;
       new_inst.m_looplevel = p_m_looplevel;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_block_id = IdAssigner.preprocessUUID(p_m_block_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_currentscope_id = IdAssigner.preprocessUUID(p_m_currentscope_id);
       new_inst.m_return_value = p_m_return_value;
       new_inst.m_label = p_m_label;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_parsed_block_id = IdAssigner.preprocessUUID(p_m_parsed_block_id);
       // default value for m_returnfound
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Body_c(modelRoot,
p_m_action_id,
p_m_type,
p_m_looplevel,
p_m_block_id,
p_m_currentscope_id,
p_m_return_value,
p_m_label,
p_m_parsed_block_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public Body_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_action_id,
       String       p_m_type,
       int          p_m_looplevel,
       java.util.UUID         p_m_block_id,
       java.util.UUID         p_m_currentscope_id,
       Object p_m_return_value,
       String       p_m_label,
       java.util.UUID         p_m_parsed_block_id){
    InstanceList instances = modelRoot.getInstanceList(Body_c.class);
    Body_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_action_id
            };
        source = (Body_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_action_id = IdAssigner.preprocessUUID(p_m_action_id);
       //extract 28 bit value only            
       source.m_action_idLongBased = 0xfffffff & p_m_action_id.getLeastSignificantBits();
       source.m_type = p_m_type;
       source.m_looplevel = p_m_looplevel;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_block_id = IdAssigner.preprocessUUID(p_m_block_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_currentscope_id = IdAssigner.preprocessUUID(p_m_currentscope_id);
       source.m_return_value = p_m_return_value;
       source.m_label = p_m_label;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_parsed_block_id = IdAssigner.preprocessUUID(p_m_parsed_block_id);
       // default value for m_returnfound
        
           return source ;
        }
      }
      // there is no instance matching the id
    Body_c new_inst = new Body_c(modelRoot,
p_m_action_id,
p_m_type,
p_m_looplevel,
p_m_block_id,
p_m_currentscope_id,
p_m_return_value,
p_m_label,
p_m_parsed_block_id
);
    return new_inst;
  }
  public Body_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_action_id = idAssigner.createUUID();
     m_type = "";   
     m_block_id = IdAssigner.NULL_UUID;   
     m_currentscope_id = IdAssigner.NULL_UUID;   
     m_label = "";   
     m_parsed_block_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_action_id);
    Object [] key = {m_action_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_action_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_action_id !=  p_newKey ){
	
		m_action_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Body_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Body_c)) {
           return false;
       }
       
       Body_c me = (Body_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getAction_id()) || IdAssigner.NULL_UUID.equals(((Body_c)elem).getAction_id())) && this != elem)) {
      	return false;
      }
      if (!getAction_id().equals(((Body_c)elem).getAction_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Body_c)) {
           return false;
       }
       
       Body_c me = (Body_c)elem;
      if (!getAction_id().equals(((Body_c)elem).getAction_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_action_id ;
  private long m_action_idLongBased ;
  private String       m_type ;
  private int          m_looplevel ;
  private java.util.UUID         m_block_id ;
  private java.util.UUID         m_currentscope_id ;
  private Object m_return_value ;
  private String       m_label ;
  private java.util.UUID         m_parsed_block_id ;
  private boolean      m_returnfound ;
      
// declare association references from this class
  
  
    
// referring navigation

Block_c HasCommittedOuterBlock ;
public void relateAcrossR666To(Block_c target)
{
	relateAcrossR666To(target, true);
}
public void relateAcrossR666To(Block_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == HasCommittedOuterBlock) return;  // already related

    if ( HasCommittedOuterBlock != target ) {
    
    Object oldKey = getInstanceKey();

    if (HasCommittedOuterBlock != null) {
    
        HasCommittedOuterBlock.clearBackPointerR666To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Body_c.relateAcrossR666To(Block_c target)", 
			"Relate performed across R666 from Body to Block without unrelate of prior instance.");  
		}
    }
                
    	HasCommittedOuterBlock = target ;
        m_block_id = target.getBlock_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR666To(this);
        target.addRef();
    }
}
public void unrelateAcrossR666From(Block_c target)
{
	unrelateAcrossR666From(target, true);
}
public void unrelateAcrossR666From(Block_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (HasCommittedOuterBlock == null) return;  // already unrelated
	
	if (target != HasCommittedOuterBlock) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R666", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR666To(this);
    }
    

      if(HasCommittedOuterBlock != null) {
      
        m_block_id = HasCommittedOuterBlock.getBlock_id();
        HasCommittedOuterBlock = null ;
        target.removeRef();
    }
}

  
    
      
public static Body_c getOneACT_ACTOnR666(Block_c [] targets)
{
    return getOneACT_ACTOnR666(targets, null);
}

public static Body_c getOneACT_ACTOnR666(Block_c [] targets, ClassQueryInterface_c test)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneACT_ACTOnR666(targets[i], test);
        }
    }

    return ret_val;
}

public static Body_c getOneACT_ACTOnR666(Block_c target)
{
  return getOneACT_ACTOnR666(target, null);
}

public static Body_c getOneACT_ACTOnR666(Block_c target, boolean loadComponent)
{
    return getOneACT_ACTOnR666(target.getModelRoot(), target, null, loadComponent);
}

public static Body_c getOneACT_ACTOnR666(Block_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneACT_ACTOnR666(target.getModelRoot(), target, test);
  }
  return null;
}

public static Body_c getOneACT_ACTOnR666(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test)
{
	return getOneACT_ACTOnR666(modelRoot, target, test, true);
}

public static Body_c getOneACT_ACTOnR666(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneACT_ACTOnR666(modelRoot,target,test);
}
private static Body_c find_getOneACT_ACTOnR666(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Body_c source = (Body_c)target.backPointer_IsOuterCommittedLevelOfBodyIsOuterCommittedLevelOf_R666;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Body_c [] getManyACT_ACTsOnR666(Block_c [] targets)
{
  return getManyACT_ACTsOnR666(targets, null);
}
public static Body_c [] getManyACT_ACTsOnR666(Block_c [] targets, boolean loadComponent)
{
  return getManyACT_ACTsOnR666(targets, null, loadComponent);
}
public static Body_c [] getManyACT_ACTsOnR666(Block_c [] targets, ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR666(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR666(Block_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Body_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Body_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Body_c source = (Body_c)targets[i].backPointer_IsOuterCommittedLevelOfBodyIsOuterCommittedLevelOf_R666;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Body_c[] ret_set = new Body_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Body_c[0];
  }
  }

public static Body_c [] getManyACT_ACTsOnR666(Block_c target)
{
  if (target != null) {
    Block_c [] targetArray = new Block_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR666(targetArray);
  } else {
    Body_c [] result = new Body_c [0] ;
  return result ;
}
}

public static Body_c [] getManyACT_ACTsOnR666(Block_c target, boolean loadComponent)
{
  if (target != null) {
    Block_c [] targetArray = new Block_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR666(targetArray, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
  return result ;
}
}



  
    
// referring navigation

Block_c HasCurrentScopeBlock ;
public void relateAcrossR699To(Block_c target)
{
	relateAcrossR699To(target, true);
}
public void relateAcrossR699To(Block_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == HasCurrentScopeBlock) return;  // already related

    if ( HasCurrentScopeBlock != target ) {
    
    Object oldKey = getInstanceKey();

    if (HasCurrentScopeBlock != null) {
    
        HasCurrentScopeBlock.clearBackPointerR699To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Body_c.relateAcrossR699To(Block_c target)", 
			"Relate performed across R699 from Body to Block without unrelate of prior instance.");  
		}
    }
                
    	HasCurrentScopeBlock = target ;
        m_currentscope_id = target.getBlock_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR699To(this);
        target.addRef();
    }
}
public void unrelateAcrossR699From(Block_c target)
{
	unrelateAcrossR699From(target, true);
}
public void unrelateAcrossR699From(Block_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (HasCurrentScopeBlock == null) return;  // already unrelated
	
	if (target != HasCurrentScopeBlock) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R699", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR699To(this);
    }
    

      if(HasCurrentScopeBlock != null) {
      
        m_currentscope_id = HasCurrentScopeBlock.getBlock_id();
        HasCurrentScopeBlock = null ;
        target.removeRef();
    }
}

  
    
      
public static Body_c getOneACT_ACTOnR699(Block_c [] targets)
{
    return getOneACT_ACTOnR699(targets, null);
}

public static Body_c getOneACT_ACTOnR699(Block_c [] targets, ClassQueryInterface_c test)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneACT_ACTOnR699(targets[i], test);
        }
    }

    return ret_val;
}

public static Body_c getOneACT_ACTOnR699(Block_c target)
{
  return getOneACT_ACTOnR699(target, null);
}

public static Body_c getOneACT_ACTOnR699(Block_c target, boolean loadComponent)
{
    return getOneACT_ACTOnR699(target.getModelRoot(), target, null, loadComponent);
}

public static Body_c getOneACT_ACTOnR699(Block_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneACT_ACTOnR699(target.getModelRoot(), target, test);
  }
  return null;
}

public static Body_c getOneACT_ACTOnR699(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test)
{
	return getOneACT_ACTOnR699(modelRoot, target, test, true);
}

public static Body_c getOneACT_ACTOnR699(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneACT_ACTOnR699(modelRoot,target,test);
}
private static Body_c find_getOneACT_ACTOnR699(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Body_c source = (Body_c)target.backPointer_IsCurrentScopeForBodyIsCurrentScopeFor_R699;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Body_c [] getManyACT_ACTsOnR699(Block_c [] targets)
{
  return getManyACT_ACTsOnR699(targets, null);
}
public static Body_c [] getManyACT_ACTsOnR699(Block_c [] targets, boolean loadComponent)
{
  return getManyACT_ACTsOnR699(targets, null, loadComponent);
}
public static Body_c [] getManyACT_ACTsOnR699(Block_c [] targets, ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR699(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR699(Block_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Body_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Body_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Body_c source = (Body_c)targets[i].backPointer_IsCurrentScopeForBodyIsCurrentScopeFor_R699;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Body_c[] ret_set = new Body_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Body_c[0];
  }
  }

public static Body_c [] getManyACT_ACTsOnR699(Block_c target)
{
  if (target != null) {
    Block_c [] targetArray = new Block_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR699(targetArray);
  } else {
    Body_c [] result = new Body_c [0] ;
  return result ;
}
}

public static Body_c [] getManyACT_ACTsOnR699(Block_c target, boolean loadComponent)
{
  if (target != null) {
    Block_c [] targetArray = new Block_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR699(targetArray, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
  return result ;
}
}



  
    
// referring navigation

Block_c HasParsedOuterBlock ;
public void relateAcrossR650To(Block_c target)
{
	relateAcrossR650To(target, true);
}
public void relateAcrossR650To(Block_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == HasParsedOuterBlock) return;  // already related

    if ( HasParsedOuterBlock != target ) {
    
    Object oldKey = getInstanceKey();

    if (HasParsedOuterBlock != null) {
    
        HasParsedOuterBlock.clearBackPointerR650To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Body_c.relateAcrossR650To(Block_c target)", 
			"Relate performed across R650 from Body to Block without unrelate of prior instance.");  
		}
    }
                
    	HasParsedOuterBlock = target ;
        m_parsed_block_id = target.getBlock_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR650To(this);
        target.addRef();
    }
}
public void unrelateAcrossR650From(Block_c target)
{
	unrelateAcrossR650From(target, true);
}
public void unrelateAcrossR650From(Block_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (HasParsedOuterBlock == null) return;  // already unrelated
	
	if (target != HasParsedOuterBlock) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R650", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR650To(this);
    }
    

      if(HasParsedOuterBlock != null) {
      
        m_parsed_block_id = HasParsedOuterBlock.getBlock_id();
        HasParsedOuterBlock = null ;
        target.removeRef();
    }
}

  
    
      
public static Body_c getOneACT_ACTOnR650(Block_c [] targets)
{
    return getOneACT_ACTOnR650(targets, null);
}

public static Body_c getOneACT_ACTOnR650(Block_c [] targets, ClassQueryInterface_c test)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneACT_ACTOnR650(targets[i], test);
        }
    }

    return ret_val;
}

public static Body_c getOneACT_ACTOnR650(Block_c target)
{
  return getOneACT_ACTOnR650(target, null);
}

public static Body_c getOneACT_ACTOnR650(Block_c target, boolean loadComponent)
{
    return getOneACT_ACTOnR650(target.getModelRoot(), target, null, loadComponent);
}

public static Body_c getOneACT_ACTOnR650(Block_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneACT_ACTOnR650(target.getModelRoot(), target, test);
  }
  return null;
}

public static Body_c getOneACT_ACTOnR650(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test)
{
	return getOneACT_ACTOnR650(modelRoot, target, test, true);
}

public static Body_c getOneACT_ACTOnR650(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneACT_ACTOnR650(modelRoot,target,test);
}
private static Body_c find_getOneACT_ACTOnR650(ModelRoot modelRoot, Block_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Body_c source = (Body_c)target.backPointer_IsOuterParseLevelOfBodyIsOuterParseLevelOf_R650;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Body_c [] getManyACT_ACTsOnR650(Block_c [] targets)
{
  return getManyACT_ACTsOnR650(targets, null);
}
public static Body_c [] getManyACT_ACTsOnR650(Block_c [] targets, boolean loadComponent)
{
  return getManyACT_ACTsOnR650(targets, null, loadComponent);
}
public static Body_c [] getManyACT_ACTsOnR650(Block_c [] targets, ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR650(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR650(Block_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Body_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Body_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Body_c source = (Body_c)targets[i].backPointer_IsOuterParseLevelOfBodyIsOuterParseLevelOf_R650;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Body_c[] ret_set = new Body_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Body_c[0];
  }
  }

public static Body_c [] getManyACT_ACTsOnR650(Block_c target)
{
  if (target != null) {
    Block_c [] targetArray = new Block_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR650(targetArray);
  } else {
    Body_c [] result = new Body_c [0] ;
  return result ;
}
}

public static Body_c [] getManyACT_ACTsOnR650(Block_c target, boolean loadComponent)
{
  if (target != null) {
    Block_c [] targetArray = new Block_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR650(targetArray, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<BodyInComponent_c> backPointer_IsDeclaredInBodyInComponentIsDeclaredIn_R694 = new ArrayList<BodyInComponent_c>();

public void setBodyInComponentOrderInChildListR694(BodyInComponent_c target, int index) {
	unrelateAcrossR694From(target);
	BodyInComponent_c[] elements = BodyInComponent_c.getManyACT_BICsOnR694(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR694From((BodyInComponent_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR694To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR694To((BodyInComponent_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR694To(BodyInComponent_c target)
{
  if (target != null) {
    target.relateAcrossR694To(this, true) ;
  }
}

public void relateAcrossR694To(BodyInComponent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR694To(this, notifyChanges) ;
  }
}

public void setBackPointerR694To(BodyInComponent_c target)
{
  	synchronized (backPointer_IsDeclaredInBodyInComponentIsDeclaredIn_R694) {
		backPointer_IsDeclaredInBodyInComponentIsDeclaredIn_R694.add(target);
	}
}

public void unrelateAcrossR694From(BodyInComponent_c target)
{
  if (target != null) {
    target.unrelateAcrossR694From(this, true) ;
  }
}

public void unrelateAcrossR694From(BodyInComponent_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR694From(this, notifyChanges) ;
  }
}

public void clearBackPointerR694To(BodyInComponent_c target)
{
  synchronized (backPointer_IsDeclaredInBodyInComponentIsDeclaredIn_R694) {
	    backPointer_IsDeclaredInBodyInComponentIsDeclaredIn_R694.remove(target);
	}
}

public static Body_c getOneACT_ACTOnR694(BodyInComponent_c [] targets)
{
    return getOneACT_ACTOnR694(targets, null);
}

public static Body_c getOneACT_ACTOnR694(BodyInComponent_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR694(targets, test, true);
}

public static Body_c getOneACT_ACTOnR694(BodyInComponent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR694(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR694(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR694(BodyInComponent_c target)
{
	return getOneACT_ACTOnR694(target, true);
}
public static Body_c getOneACT_ACTOnR694(BodyInComponent_c target, boolean loadComponent)
{
  if (target != null) {
    return target.HasDeclaredBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR694(BodyInComponent_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR694(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR694(BodyInComponent_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].HasDeclaredBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR694(BodyInComponent_c [] targets)
{
  return getManyACT_ACTsOnR694(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR694(BodyInComponent_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BodyInComponent_c [] targetArray = new BodyInComponent_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR694(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR694(BodyInComponent_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR694(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR694(BodyInComponent_c target)
{
    return getManyACT_ACTsOnR694(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR694(BodyInComponent_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR694(target, null, loadComponent);
}

public static Body_c getOneACT_ACTOnR694(Component_c target)
{
  return Body_c.getOneACT_ACTOnR694(BodyInComponent_c.getOneACT_BICOnR694(target)) ;
}

public static Body_c getOneACT_ACTOnR694(Component_c target,
    ClassQueryInterface_c test)
{
  return Body_c.getOneACT_ACTOnR694(BodyInComponent_c.getManyACT_BICsOnR694(target), test) ;
}

public static Body_c [] getManyACT_ACTsOnR694(Component_c target,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR694(target, test, true);
}
public static Body_c [] getManyACT_ACTsOnR694(Component_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  BodyInComponent_c [] associators = BodyInComponent_c.getManyACT_BICsOnR694(target, loadComponent) ;
    return Body_c.getManyACT_ACTsOnR694(associators, test, loadComponent) ;
}
public static Body_c [] getManyACT_ACTsOnR694(Component_c target)
{
    return getManyACT_ACTsOnR694(target, null, true);
}
public static Body_c [] getManyACT_ACTsOnR694(Component_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR694(target, null, loadComponent);
}


    
  
  
// referred to navigation

TransitionActionBody_c backPointer_IsSubtypeTransitionActionBodyIsSubtype_R698;

public void setTransitionActionBodyOrderInChildListR698(TransitionActionBody_c target, int index) {
	unrelateAcrossR698From(target);
	TransitionActionBody_c[] elements = TransitionActionBody_c.getManyACT_TABsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((TransitionActionBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((TransitionActionBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(TransitionActionBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(TransitionActionBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(TransitionActionBody_c target)
{
    backPointer_IsSubtypeTransitionActionBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(TransitionActionBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(TransitionActionBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(TransitionActionBody_c target)
{
	if (target == backPointer_IsSubtypeTransitionActionBodyIsSubtype_R698) {
		backPointer_IsSubtypeTransitionActionBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(TransitionActionBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(TransitionActionBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(TransitionActionBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(TransitionActionBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(TransitionActionBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(TransitionActionBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(TransitionActionBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(TransitionActionBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(TransitionActionBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    TransitionActionBody_c [] targetArray = new TransitionActionBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(TransitionActionBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(TransitionActionBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(TransitionActionBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

StateActionBody_c backPointer_IsSubtypeStateActionBodyIsSubtype_R698;

public void setStateActionBodyOrderInChildListR698(StateActionBody_c target, int index) {
	unrelateAcrossR698From(target);
	StateActionBody_c[] elements = StateActionBody_c.getManyACT_SABsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((StateActionBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((StateActionBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(StateActionBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(StateActionBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(StateActionBody_c target)
{
    backPointer_IsSubtypeStateActionBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(StateActionBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(StateActionBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(StateActionBody_c target)
{
	if (target == backPointer_IsSubtypeStateActionBodyIsSubtype_R698) {
		backPointer_IsSubtypeStateActionBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(StateActionBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(StateActionBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(StateActionBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(StateActionBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(StateActionBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(StateActionBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(StateActionBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(StateActionBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(StateActionBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    StateActionBody_c [] targetArray = new StateActionBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(StateActionBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(StateActionBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(StateActionBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

DerivedAttributeBody_c backPointer_IsSubtypeDerivedAttributeBodyIsSubtype_R698;

public void setDerivedAttributeBodyOrderInChildListR698(DerivedAttributeBody_c target, int index) {
	unrelateAcrossR698From(target);
	DerivedAttributeBody_c[] elements = DerivedAttributeBody_c.getManyACT_DABsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((DerivedAttributeBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((DerivedAttributeBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(DerivedAttributeBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(DerivedAttributeBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(DerivedAttributeBody_c target)
{
    backPointer_IsSubtypeDerivedAttributeBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(DerivedAttributeBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(DerivedAttributeBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(DerivedAttributeBody_c target)
{
	if (target == backPointer_IsSubtypeDerivedAttributeBodyIsSubtype_R698) {
		backPointer_IsSubtypeDerivedAttributeBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(DerivedAttributeBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(DerivedAttributeBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(DerivedAttributeBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(DerivedAttributeBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(DerivedAttributeBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(DerivedAttributeBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(DerivedAttributeBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(DerivedAttributeBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(DerivedAttributeBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    DerivedAttributeBody_c [] targetArray = new DerivedAttributeBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(DerivedAttributeBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(DerivedAttributeBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(DerivedAttributeBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

FunctionBody_c backPointer_IsSubtypeFunctionBodyIsSubtype_R698;

public void setFunctionBodyOrderInChildListR698(FunctionBody_c target, int index) {
	unrelateAcrossR698From(target);
	FunctionBody_c[] elements = FunctionBody_c.getManyACT_FNBsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((FunctionBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((FunctionBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(FunctionBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(FunctionBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(FunctionBody_c target)
{
    backPointer_IsSubtypeFunctionBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(FunctionBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(FunctionBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(FunctionBody_c target)
{
	if (target == backPointer_IsSubtypeFunctionBodyIsSubtype_R698) {
		backPointer_IsSubtypeFunctionBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(FunctionBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(FunctionBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(FunctionBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(FunctionBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(FunctionBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(FunctionBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(FunctionBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(FunctionBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(FunctionBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionBody_c [] targetArray = new FunctionBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(FunctionBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(FunctionBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(FunctionBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

OperationBody_c backPointer_IsSubtypeOperationBodyIsSubtype_R698;

public void setOperationBodyOrderInChildListR698(OperationBody_c target, int index) {
	unrelateAcrossR698From(target);
	OperationBody_c[] elements = OperationBody_c.getManyACT_OPBsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((OperationBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((OperationBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(OperationBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(OperationBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(OperationBody_c target)
{
    backPointer_IsSubtypeOperationBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(OperationBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(OperationBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(OperationBody_c target)
{
	if (target == backPointer_IsSubtypeOperationBodyIsSubtype_R698) {
		backPointer_IsSubtypeOperationBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(OperationBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(OperationBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(OperationBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(OperationBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(OperationBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(OperationBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(OperationBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(OperationBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(OperationBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    OperationBody_c [] targetArray = new OperationBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(OperationBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(OperationBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(OperationBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

BridgeBody_c backPointer_IsSubtypeBridgeBodyIsSubtype_R698;

public void setBridgeBodyOrderInChildListR698(BridgeBody_c target, int index) {
	unrelateAcrossR698From(target);
	BridgeBody_c[] elements = BridgeBody_c.getManyACT_BRBsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((BridgeBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((BridgeBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(BridgeBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(BridgeBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(BridgeBody_c target)
{
    backPointer_IsSubtypeBridgeBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(BridgeBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(BridgeBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(BridgeBody_c target)
{
	if (target == backPointer_IsSubtypeBridgeBodyIsSubtype_R698) {
		backPointer_IsSubtypeBridgeBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(BridgeBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(BridgeBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(BridgeBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(BridgeBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(BridgeBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(BridgeBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(BridgeBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(BridgeBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(BridgeBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BridgeBody_c [] targetArray = new BridgeBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(BridgeBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(BridgeBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(BridgeBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

ProvidedOperationBody_c backPointer_IsSubtypeProvidedOperationBodyIsSubtype_R698;

public void setProvidedOperationBodyOrderInChildListR698(ProvidedOperationBody_c target, int index) {
	unrelateAcrossR698From(target);
	ProvidedOperationBody_c[] elements = ProvidedOperationBody_c.getManyACT_POBsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((ProvidedOperationBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((ProvidedOperationBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(ProvidedOperationBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(ProvidedOperationBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(ProvidedOperationBody_c target)
{
    backPointer_IsSubtypeProvidedOperationBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(ProvidedOperationBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(ProvidedOperationBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(ProvidedOperationBody_c target)
{
	if (target == backPointer_IsSubtypeProvidedOperationBodyIsSubtype_R698) {
		backPointer_IsSubtypeProvidedOperationBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(ProvidedOperationBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(ProvidedOperationBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(ProvidedOperationBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(ProvidedOperationBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(ProvidedOperationBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedOperationBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedOperationBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedOperationBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedOperationBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ProvidedOperationBody_c [] targetArray = new ProvidedOperationBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedOperationBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedOperationBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedOperationBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

ProvidedSignalBody_c backPointer_IsSubtypeProvidedSignalBodyIsSubtype_R698;

public void setProvidedSignalBodyOrderInChildListR698(ProvidedSignalBody_c target, int index) {
	unrelateAcrossR698From(target);
	ProvidedSignalBody_c[] elements = ProvidedSignalBody_c.getManyACT_PSBsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((ProvidedSignalBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((ProvidedSignalBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(ProvidedSignalBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(ProvidedSignalBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(ProvidedSignalBody_c target)
{
    backPointer_IsSubtypeProvidedSignalBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(ProvidedSignalBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(ProvidedSignalBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(ProvidedSignalBody_c target)
{
	if (target == backPointer_IsSubtypeProvidedSignalBodyIsSubtype_R698) {
		backPointer_IsSubtypeProvidedSignalBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(ProvidedSignalBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(ProvidedSignalBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(ProvidedSignalBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(ProvidedSignalBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(ProvidedSignalBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedSignalBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedSignalBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedSignalBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedSignalBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ProvidedSignalBody_c [] targetArray = new ProvidedSignalBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedSignalBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedSignalBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(ProvidedSignalBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

RequiredOperationBody_c backPointer_IsSubtypeRequiredOperationBodyIsSubtype_R698;

public void setRequiredOperationBodyOrderInChildListR698(RequiredOperationBody_c target, int index) {
	unrelateAcrossR698From(target);
	RequiredOperationBody_c[] elements = RequiredOperationBody_c.getManyACT_ROBsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((RequiredOperationBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((RequiredOperationBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(RequiredOperationBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(RequiredOperationBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(RequiredOperationBody_c target)
{
    backPointer_IsSubtypeRequiredOperationBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(RequiredOperationBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(RequiredOperationBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(RequiredOperationBody_c target)
{
	if (target == backPointer_IsSubtypeRequiredOperationBodyIsSubtype_R698) {
		backPointer_IsSubtypeRequiredOperationBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(RequiredOperationBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(RequiredOperationBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(RequiredOperationBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(RequiredOperationBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(RequiredOperationBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredOperationBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredOperationBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredOperationBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredOperationBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    RequiredOperationBody_c [] targetArray = new RequiredOperationBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredOperationBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredOperationBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredOperationBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}

  
  
  
// referred to navigation

RequiredSignalBody_c backPointer_IsSubtypeRequiredSignalBodyIsSubtype_R698;

public void setRequiredSignalBodyOrderInChildListR698(RequiredSignalBody_c target, int index) {
	unrelateAcrossR698From(target);
	RequiredSignalBody_c[] elements = RequiredSignalBody_c.getManyACT_RSBsOnR698(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR698From((RequiredSignalBody_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR698To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR698To((RequiredSignalBody_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR698To(RequiredSignalBody_c target)
{
  if (target != null) {
    target.relateAcrossR698To(this, true) ;
  }
}

public void relateAcrossR698To(RequiredSignalBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR698To(this, notifyChanges) ;
  }
}

public void setBackPointerR698To(RequiredSignalBody_c target)
{
    backPointer_IsSubtypeRequiredSignalBodyIsSubtype_R698 = target;
}

public void unrelateAcrossR698From(RequiredSignalBody_c target)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, true) ;
  }
}

public void unrelateAcrossR698From(RequiredSignalBody_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR698From(this, notifyChanges) ;
  }
}

public void clearBackPointerR698To(RequiredSignalBody_c target)
{
	if (target == backPointer_IsSubtypeRequiredSignalBodyIsSubtype_R698) {
		backPointer_IsSubtypeRequiredSignalBodyIsSubtype_R698 = null;
	}
}

public static Body_c getOneACT_ACTOnR698(RequiredSignalBody_c [] targets)
{
    return getOneACT_ACTOnR698(targets, null);
}

public static Body_c getOneACT_ACTOnR698(RequiredSignalBody_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR698(targets, test, true);
}

public static Body_c getOneACT_ACTOnR698(RequiredSignalBody_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR698(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR698(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR698(RequiredSignalBody_c target)
{
	return getOneACT_ACTOnR698(target, true);
}
public static Body_c getOneACT_ACTOnR698(RequiredSignalBody_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredSignalBody_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR698(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredSignalBody_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsSupertypeBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredSignalBody_c [] targets)
{
  return getManyACT_ACTsOnR698(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredSignalBody_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    RequiredSignalBody_c [] targetArray = new RequiredSignalBody_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR698(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredSignalBody_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredSignalBody_c target)
{
    return getManyACT_ACTsOnR698(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR698(RequiredSignalBody_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR698(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<BodyInElement_c> backPointer_IsDeclaredInBodyInElementIsDeclaredIn_R640 = new ArrayList<BodyInElement_c>();

public void setBodyInElementOrderInChildListR640(BodyInElement_c target, int index) {
	unrelateAcrossR640From(target);
	BodyInElement_c[] elements = BodyInElement_c.getManyACT_BIEsOnR640(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR640From((BodyInElement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR640To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR640To((BodyInElement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR640To(BodyInElement_c target)
{
  if (target != null) {
    target.relateAcrossR640To(this, true) ;
  }
}

public void relateAcrossR640To(BodyInElement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR640To(this, notifyChanges) ;
  }
}

public void setBackPointerR640To(BodyInElement_c target)
{
  	synchronized (backPointer_IsDeclaredInBodyInElementIsDeclaredIn_R640) {
		backPointer_IsDeclaredInBodyInElementIsDeclaredIn_R640.add(target);
	}
}

public void unrelateAcrossR640From(BodyInElement_c target)
{
  if (target != null) {
    target.unrelateAcrossR640From(this, true) ;
  }
}

public void unrelateAcrossR640From(BodyInElement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR640From(this, notifyChanges) ;
  }
}

public void clearBackPointerR640To(BodyInElement_c target)
{
  synchronized (backPointer_IsDeclaredInBodyInElementIsDeclaredIn_R640) {
	    backPointer_IsDeclaredInBodyInElementIsDeclaredIn_R640.remove(target);
	}
}

public static Body_c getOneACT_ACTOnR640(BodyInElement_c [] targets)
{
    return getOneACT_ACTOnR640(targets, null);
}

public static Body_c getOneACT_ACTOnR640(BodyInElement_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR640(targets, test, true);
}

public static Body_c getOneACT_ACTOnR640(BodyInElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR640(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR640(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR640(BodyInElement_c target)
{
	return getOneACT_ACTOnR640(target, true);
}
public static Body_c getOneACT_ACTOnR640(BodyInElement_c target, boolean loadComponent)
{
  if (target != null) {
    return target.HasDeclaredBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR640(BodyInElement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR640(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR640(BodyInElement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].HasDeclaredBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR640(BodyInElement_c [] targets)
{
  return getManyACT_ACTsOnR640(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR640(BodyInElement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    BodyInElement_c [] targetArray = new BodyInElement_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR640(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR640(BodyInElement_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR640(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR640(BodyInElement_c target)
{
    return getManyACT_ACTsOnR640(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR640(BodyInElement_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR640(target, null, loadComponent);
}

public static Body_c getOneACT_ACTOnR640(PackageableElement_c target)
{
  return Body_c.getOneACT_ACTOnR640(BodyInElement_c.getOneACT_BIEOnR640(target)) ;
}

public static Body_c getOneACT_ACTOnR640(PackageableElement_c target,
    ClassQueryInterface_c test)
{
  return Body_c.getOneACT_ACTOnR640(BodyInElement_c.getManyACT_BIEsOnR640(target), test) ;
}

public static Body_c [] getManyACT_ACTsOnR640(PackageableElement_c target,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR640(target, test, true);
}
public static Body_c [] getManyACT_ACTsOnR640(PackageableElement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  BodyInElement_c [] associators = BodyInElement_c.getManyACT_BIEsOnR640(target, loadComponent) ;
    return Body_c.getManyACT_ACTsOnR640(associators, test, loadComponent) ;
}
public static Body_c [] getManyACT_ACTsOnR640(PackageableElement_c target)
{
    return getManyACT_ACTsOnR640(target, null, true);
}
public static Body_c [] getManyACT_ACTsOnR640(PackageableElement_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR640(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Block_c> backPointer_HasCommittedBlockHasCommitted_R601 = new ArrayList<Block_c>();

public void setBlockOrderInChildListR601(Block_c target, int index) {
	unrelateAcrossR601From(target);
	Block_c[] elements = Block_c.getManyACT_BLKsOnR601(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR601From((Block_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR601To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR601To((Block_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR601To(Block_c target)
{
  if (target != null) {
    target.relateAcrossR601To(this, true) ;
  }
}

public void relateAcrossR601To(Block_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR601To(this, notifyChanges) ;
  }
}

public void setBackPointerR601To(Block_c target)
{
  	synchronized (backPointer_HasCommittedBlockHasCommitted_R601) {
		backPointer_HasCommittedBlockHasCommitted_R601.add(target);
	}
}

public void unrelateAcrossR601From(Block_c target)
{
  if (target != null) {
    target.unrelateAcrossR601From(this, true) ;
  }
}

public void unrelateAcrossR601From(Block_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR601From(this, notifyChanges) ;
  }
}

public void clearBackPointerR601To(Block_c target)
{
  synchronized (backPointer_HasCommittedBlockHasCommitted_R601) {
	    backPointer_HasCommittedBlockHasCommitted_R601.remove(target);
	}
}

public static Body_c getOneACT_ACTOnR601(Block_c [] targets)
{
    return getOneACT_ACTOnR601(targets, null);
}

public static Body_c getOneACT_ACTOnR601(Block_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR601(targets, test, true);
}

public static Body_c getOneACT_ACTOnR601(Block_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR601(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR601(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR601(Block_c target)
{
	return getOneACT_ACTOnR601(target, true);
}
public static Body_c getOneACT_ACTOnR601(Block_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsCommittedFromBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR601(Block_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR601(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR601(Block_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsCommittedFromBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR601(Block_c [] targets)
{
  return getManyACT_ACTsOnR601(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR601(Block_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Block_c [] targetArray = new Block_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR601(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR601(Block_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR601(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR601(Block_c target)
{
    return getManyACT_ACTsOnR601(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR601(Block_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR601(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Block_c> backPointer_HasParsedBlockHasParsed_R612 = new ArrayList<Block_c>();

public void setBlockOrderInChildListR612(Block_c target, int index) {
	unrelateAcrossR612From(target);
	Block_c[] elements = Block_c.getManyACT_BLKsOnR612(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR612From((Block_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR612To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR612To((Block_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR612To(Block_c target)
{
  if (target != null) {
    target.relateAcrossR612To(this, true) ;
  }
}

public void relateAcrossR612To(Block_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR612To(this, notifyChanges) ;
  }
}

public void setBackPointerR612To(Block_c target)
{
  	synchronized (backPointer_HasParsedBlockHasParsed_R612) {
		backPointer_HasParsedBlockHasParsed_R612.add(target);
	}
}

public void unrelateAcrossR612From(Block_c target)
{
  if (target != null) {
    target.unrelateAcrossR612From(this, true) ;
  }
}

public void unrelateAcrossR612From(Block_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR612From(this, notifyChanges) ;
  }
}

public void clearBackPointerR612To(Block_c target)
{
  synchronized (backPointer_HasParsedBlockHasParsed_R612) {
	    backPointer_HasParsedBlockHasParsed_R612.remove(target);
	}
}

public static Body_c getOneACT_ACTOnR612(Block_c [] targets)
{
    return getOneACT_ACTOnR612(targets, null);
}

public static Body_c getOneACT_ACTOnR612(Block_c [] targets, ClassQueryInterface_c test)
{
    return getOneACT_ACTOnR612(targets, test, true);
}

public static Body_c getOneACT_ACTOnR612(Block_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Body_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Body_c candidate_val = getOneACT_ACTOnR612(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneACT_ACTOnR612(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Body_c getOneACT_ACTOnR612(Block_c target)
{
	return getOneACT_ACTOnR612(target, true);
}
public static Body_c getOneACT_ACTOnR612(Block_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsParsedFromBody ;
  } else {
    return null;
  }
}

public static Body_c [] getManyACT_ACTsOnR612(Block_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyACT_ACTsOnR612(targets, test, true);
}

public static Body_c [] getManyACT_ACTsOnR612(Block_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Body_c[0];
  
  
  LinkedHashSet<Body_c> elementsSet = new LinkedHashSet<Body_c>();
  for (int i = 0; i < targets.length; i++) {
    Body_c associate = targets[i].IsParsedFromBody;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Body_c[] result = new Body_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Body_c [] getManyACT_ACTsOnR612(Block_c [] targets)
{
  return getManyACT_ACTsOnR612(targets, null);
}

public static Body_c [] getManyACT_ACTsOnR612(Block_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Block_c [] targetArray = new Block_c[1];
    targetArray[0] = target;
    return getManyACT_ACTsOnR612(targetArray, test, loadComponent);
  } else {
    Body_c [] result = new Body_c [0] ;
    return result ;
  }
  
}

public static Body_c [] getManyACT_ACTsOnR612(Block_c target,
    ClassQueryInterface_c test)
{
    return getManyACT_ACTsOnR612(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR612(Block_c target)
{
    return getManyACT_ACTsOnR612(target, null, true);
}

public static Body_c [] getManyACT_ACTsOnR612(Block_c target, boolean loadComponent)
{
    return getManyACT_ACTsOnR612(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (HasCommittedOuterBlock == null) {          
      // R666
      Block_c relInst58022 = (Block_c) baseRoot.getInstanceList(Block_c.class).get(new Object[] {m_block_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58022 == null) {
      			relInst58022 = (Block_c) Ooaofooa.getDefaultInstance().getInstanceList(Block_c.class).get(new Object[] {m_block_id});
      		}
			if (relInst58022 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58022 = (Block_c) roots[i].getInstanceList(Block_c.class).get(new Object[] {m_block_id});
					if (relInst58022 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58022 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58022) && !isProxy())) {
	      relInst58022.relateAcrossR666To(this, notifyChanges);
	  }
	  }
	}
	          

	if (HasCurrentScopeBlock == null) {          
      // R699
      Block_c relInst58023 = (Block_c) baseRoot.getInstanceList(Block_c.class).get(new Object[] {m_currentscope_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58023 == null) {
      			relInst58023 = (Block_c) Ooaofooa.getDefaultInstance().getInstanceList(Block_c.class).get(new Object[] {m_currentscope_id});
      		}
			if (relInst58023 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58023 = (Block_c) roots[i].getInstanceList(Block_c.class).get(new Object[] {m_currentscope_id});
					if (relInst58023 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58023 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58023) && !isProxy())) {
	      relInst58023.relateAcrossR699To(this, notifyChanges);
	  }
	  }
	}
	          

	if (HasParsedOuterBlock == null) {          
      // R650
      Block_c relInst58024 = (Block_c) baseRoot.getInstanceList(Block_c.class).get(new Object[] {m_parsed_block_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58024 == null) {
      			relInst58024 = (Block_c) Ooaofooa.getDefaultInstance().getInstanceList(Block_c.class).get(new Object[] {m_parsed_block_id});
      		}
			if (relInst58024 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58024 = (Block_c) roots[i].getInstanceList(Block_c.class).get(new Object[] {m_parsed_block_id});
					if (relInst58024 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58024 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58024) && !isProxy())) {
	      relInst58024.relateAcrossR650To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R666
      // ACT_BLK
		  inst=HasCommittedOuterBlock;
			unrelateAcrossR666From(HasCommittedOuterBlock, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R699
      // ACT_BLK
		  inst=HasCurrentScopeBlock;
			unrelateAcrossR699From(HasCurrentScopeBlock, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R650
      // ACT_BLK
		  inst=HasParsedOuterBlock;
			unrelateAcrossR650From(HasParsedOuterBlock, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Body_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Body_c inst = (Body_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Body_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Body_c BodyInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Body_c result=findBodyInstance(modelRoot,test,loadComponent);
	  return result;  
  }
private static Body_c findBodyInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Body_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Body_c x = (Body_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					return x;
			}
		}
		}
			return null;
}
  public static Body_c BodyInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return BodyInstance(modelRoot,test,true);
  }
  
  public static Body_c BodyInstance(ModelRoot modelRoot)
  {
	 return BodyInstance(modelRoot,null,true);
  }

  public static Body_c [] BodyInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
		    InstanceList instances = modelRoot.getInstanceList(Body_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Body_c x = (Body_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Body_c[] ret_set = new Body_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Body_c[0];
			}		
		} 
  }
  public static Body_c [] BodyInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  BodyInstances(modelRoot,test,true);
  }
  public static Body_c [] BodyInstances(ModelRoot modelRoot)
  {
	return BodyInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Body.dispose call: ";
 	BodyInComponent_c testR694Inst = BodyInComponent_c.getOneACT_BICOnR694(this, false);

 	if ( testR694Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "694 ";
 	}
	TransitionActionBody_c testR698Inst1 = TransitionActionBody_c.getOneACT_TABOnR698(this, false);

	if ( testR698Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	StateActionBody_c testR698Inst2 = StateActionBody_c.getOneACT_SABOnR698(this, false);

	if ( testR698Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	DerivedAttributeBody_c testR698Inst3 = DerivedAttributeBody_c.getOneACT_DABOnR698(this, false);

	if ( testR698Inst3 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	FunctionBody_c testR698Inst4 = FunctionBody_c.getOneACT_FNBOnR698(this, false);

	if ( testR698Inst4 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	OperationBody_c testR698Inst5 = OperationBody_c.getOneACT_OPBOnR698(this, false);

	if ( testR698Inst5 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	BridgeBody_c testR698Inst6 = BridgeBody_c.getOneACT_BRBOnR698(this, false);

	if ( testR698Inst6 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	ProvidedOperationBody_c testR698Inst7 = ProvidedOperationBody_c.getOneACT_POBOnR698(this, false);

	if ( testR698Inst7 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	ProvidedSignalBody_c testR698Inst8 = ProvidedSignalBody_c.getOneACT_PSBOnR698(this, false);

	if ( testR698Inst8 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	RequiredOperationBody_c testR698Inst9 = RequiredOperationBody_c.getOneACT_ROBOnR698(this, false);

	if ( testR698Inst9 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	RequiredSignalBody_c testR698Inst10 = RequiredSignalBody_c.getOneACT_RSBOnR698(this, false);

	if ( testR698Inst10 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "698 ";
	}
	BodyInElement_c testR640Inst = BodyInElement_c.getOneACT_BIEOnR640(this, false);

	if ( testR640Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "640 ";
	}
	Block_c testR666Inst = Block_c.getOneACT_BLKOnR666(this, false);

	if ( testR666Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "666 ";
	}
	Block_c testR601Inst = Block_c.getOneACT_BLKOnR601(this, false);

	if ( testR601Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "601 ";	
	}
	Block_c testR699Inst = Block_c.getOneACT_BLKOnR699(this, false);

	if ( testR699Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "699 ";
	}
	Block_c testR650Inst = Block_c.getOneACT_BLKOnR650(this, false);

	if ( testR650Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "650 ";
	}
	Block_c testR612Inst = Block_c.getOneACT_BLKOnR612(this, false);

	if ( testR612Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "612 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Body", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("action_id")){
         return true;
      }
      if(attributeName.equals("block_id")){
         return true;
      }
      if(attributeName.equals("currentscope_id")){
         return true;
      }
      if(attributeName.equals("parsed_block_id")){
         return true;
      }
      return false;      
  }      
  // declare attribute accessors
  public long getAction_idLongBased()
  {
    if(m_action_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_action_id)){
    	return 0xfffffff & m_action_id.getLeastSignificantBits();
    }
    return m_action_idLongBased ;
  }
  public java.util.UUID getAction_id()
  {
    return m_action_id ;
  }


  public void setAction_id(java.util.UUID newValue)
  {
   m_action_id = IdAssigner.preprocessUUID(newValue);
  }
  public String getType()
  {
    return m_type ;
  }


  public void setType(String newValue)
  {
   m_type = newValue ;
  }
  public int getLooplevel()
  {
    return m_looplevel ;
  }


  public void setLooplevel(int newValue)
  {
   m_looplevel = newValue ;
  }
  public long getBlock_idLongBased()
  {
    if ( HasCommittedOuterBlock != null )
    {
      return HasCommittedOuterBlock.getBlock_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getBlock_id()
  {
    if ( HasCommittedOuterBlock != null )
    {
      return HasCommittedOuterBlock.getBlock_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getBlock_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_block_id) )
      return m_block_id;
    else
      return getBlock_id();
  }
  
  public void setBlock_id(java.util.UUID newValue)
  {
   m_block_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getCurrentscope_idLongBased()
  {
    if ( HasCurrentScopeBlock != null )
    {
      return HasCurrentScopeBlock.getBlock_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getCurrentscope_id()
  {
    if ( HasCurrentScopeBlock != null )
    {
      return HasCurrentScopeBlock.getBlock_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getCurrentscope_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_currentscope_id) )
      return m_currentscope_id;
    else
      return getCurrentscope_id();
  }
  
  public void setCurrentscope_id(java.util.UUID newValue)
  {
   m_currentscope_id = IdAssigner.preprocessUUID(newValue);
  }
  public Object getReturn_value()
  {
    return m_return_value ;
  }


  public void setReturn_value(Object newValue)
  {
   m_return_value = newValue ;
  }
  public String getLabel()
  {
ModelRoot modelRoot = getModelRoot();
StateActionBody_c v_sab = StateActionBody_c.getOneACT_SABOnR698(this);


TransitionActionBody_c v_tab = TransitionActionBody_c.getOneACT_TABOnR698(this);


DerivedAttributeBody_c v_dab = DerivedAttributeBody_c.getOneACT_DABOnR698(this);


FunctionBody_c v_fnb = FunctionBody_c.getOneACT_FNBOnR698(this);


OperationBody_c v_opb = OperationBody_c.getOneACT_OPBOnR698(this);


BridgeBody_c v_brb = BridgeBody_c.getOneACT_BRBOnR698(this);


ProvidedSignalBody_c v_psb = ProvidedSignalBody_c.getOneACT_PSBOnR698(this);


ProvidedOperationBody_c v_pob = ProvidedOperationBody_c.getOneACT_POBOnR698(this);


RequiredSignalBody_c v_rsb = RequiredSignalBody_c.getOneACT_RSBOnR698(this);


RequiredOperationBody_c v_rob = RequiredOperationBody_c.getOneACT_ROBOnR698(this);


if ( (  (v_sab != null)) )
{

StateMachineState_c v_state = StateMachineState_c.getOneSM_STATEOnR511(MooreActionHome_c.getOneSM_MOAHOnR513(ActionHome_c.getOneSM_AHOnR514(Action_c.getOneSM_ACTOnR691(v_sab))));


ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR501(v_state)));


if ( (  (v_clazz == null)) )
{

v_clazz = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR501(v_state)));



}

return v_clazz.getName() + "::" + v_state.getName();



}

else if (   (v_tab != null) )
{

Transition_c v_txn = Transition_c.getOneSM_TXNOnR530(TransitionActionHome_c.getOneSM_TAHOnR513(ActionHome_c.getOneSM_AHOnR514(Action_c.getOneSM_ACTOnR688(v_tab))));


if ( (  (v_txn != null)) )
{

return v_txn.Get_name();



}

else
{

return "Internal error getting transition name";



}


}

else if ( (  (v_dab != null)) )
{

Attribute_c v_attr = Attribute_c.getOneO_ATTROnR106(BaseAttribute_c.getOneO_BATTROnR107(DerivedBaseAttribute_c.getOneO_DBATTROnR693(v_dab)));


ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR102(v_attr);


return v_clazz.getName() + "::" + v_attr.getName();



}

else if ( (  (v_fnb != null)) )
{

Function_c v_fn = Function_c.getOneS_SYNCOnR695(v_fnb);


return v_fn.getName();



}

else if ( (  (v_opb != null)) )
{

Operation_c v_op = Operation_c.getOneO_TFROnR696(v_opb);


ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR115(v_op);


return v_clazz.getName() + "::" + v_op.getName();



}

else if ( (  (v_brb != null)) )
{

Bridge_c v_brg = Bridge_c.getOneS_BRGOnR697(v_brb);


ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR19(v_brg);


return v_ee.getName() + "::" + v_brg.getName();



}

else if ( (  (v_psb != null)) )
{

ProvidedSignal_c v_proSig = ProvidedSignal_c.getOneSPR_PSOnR686(v_psb);


InterfaceReference_c v_irRef = InterfaceReference_c.getOneC_IROnR4009(Provision_c.getOneC_POnR4501(ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_proSig)));


Port_c v_port = Port_c.getOneC_POOnR4016(v_irRef);


return v_port.getName() + "::" + v_irRef.Interfacename() + "::" + v_proSig.getName();



}

else if ( (  (v_pob != null)) )
{

ProvidedOperation_c v_proOp = ProvidedOperation_c.getOneSPR_POOnR687(v_pob);


InterfaceReference_c v_irRef = InterfaceReference_c.getOneC_IROnR4009(Provision_c.getOneC_POnR4501(ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_proOp)));


Port_c v_port = Port_c.getOneC_POOnR4016(v_irRef);


return v_port.getName() + "::" + v_irRef.Interfacename() + "::" + v_proOp.getName();



}

else if ( (  (v_rsb != null)) )
{

RequiredSignal_c v_reqSig = RequiredSignal_c.getOneSPR_RSOnR684(v_rsb);


InterfaceReference_c v_irRef = InterfaceReference_c.getOneC_IROnR4009(Requirement_c.getOneC_ROnR4500(RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_reqSig)));


Port_c v_port = Port_c.getOneC_POOnR4016(v_irRef);


return v_port.getName() + "::" + v_irRef.Interfacename() + "::" + v_reqSig.getName();



}

else if ( (  (v_rob != null)) )
{

RequiredOperation_c v_reqOp = RequiredOperation_c.getOneSPR_ROOnR685(v_rob);


InterfaceReference_c v_irRef = InterfaceReference_c.getOneC_IROnR4009(Requirement_c.getOneC_ROnR4500(RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_reqOp)));


Port_c v_port = Port_c.getOneC_POOnR4016(v_irRef);


return v_port.getName() + "::" + v_irRef.Interfacename() + "::" + v_reqOp.getName();



}

else
{

return "Error: Unknown Action type.";



}


  }


  public long getParsed_block_idLongBased()
  {
    if ( HasParsedOuterBlock != null )
    {
      return HasParsedOuterBlock.getBlock_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getParsed_block_id()
  {
    if ( HasParsedOuterBlock != null )
    {
      return HasParsedOuterBlock.getBlock_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getParsed_block_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_parsed_block_id) )
      return m_parsed_block_id;
    else
      return getParsed_block_id();
  }
  
  public void setParsed_block_id(java.util.UUID newValue)
  {
   m_parsed_block_id = IdAssigner.preprocessUUID(newValue);
  }
  public boolean getReturnfound()
  {
    return m_returnfound ;
  }


  public void setReturnfound(boolean newValue)
  {
   m_returnfound = newValue ;
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Body", //$NON-NLS-1$
	  " Operation entered: Body::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Body_c [] objs = Body_c.BodyInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Body", //$NON-NLS-1$
	  " Operation entered: Body::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Body_c_test58026_c implements ClassQueryInterface_c
    {
	  Body_c_test58026_c( java.util.UUID            p58027 ) {
	  m_p58027 = p58027;
	  }
	  private java.util.UUID             m_p58027; 
	  public boolean evaluate (Object candidate)
	  {
	      Body_c selected = (Body_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58027));
	      return retval;
	  }
    }

    Body_c [] objs58025 = 
    Body_c.BodyInstances(modelRoot, new Body_c_test58026_c(getAction_id())) ;

    if ( (  (objs58025.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Body", //$NON-NLS-1$
           "Consistency: Object: Body: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs58025.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Body: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58025.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs58025.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Body", //$NON-NLS-1$
           "Consistency: Object: Body: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58025.length )  + " Action_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Body: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58025.length )  + " Action_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Body is a referring class in association: rel.Numb = 666
          // The participating class is: Block
    class Block_c_test58031_c implements ClassQueryInterface_c
    {
	  Block_c_test58031_c( java.util.UUID            p58032 ) {
	  m_p58032 = p58032;
	  }
	  private java.util.UUID             m_p58032; 
	  public boolean evaluate (Object candidate)
	  {
	      Block_c selected = (Block_c) candidate;
	      boolean retval = false;
	      retval = (selected.getBlock_id().equals(m_p58032));
	      return retval;
	  }
    }

    Block_c [] objs58030 = 
    Block_c.BlockInstances(modelRoot, new Block_c_test58031_c(getBlock_id())) ;

    if ( (  (objs58030.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Body", //$NON-NLS-1$
           "Consistency: Object: Body: Association: 666: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58030.length )  + " Block_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Body: Association: 666: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58030.length )  + " Block_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Body is a referring class in association: rel.Numb = 699
          // The participating class is: Block
    class Block_c_test58034_c implements ClassQueryInterface_c
    {
	  Block_c_test58034_c( java.util.UUID            p58035 ) {
	  m_p58035 = p58035;
	  }
	  private java.util.UUID             m_p58035; 
	  public boolean evaluate (Object candidate)
	  {
	      Block_c selected = (Block_c) candidate;
	      boolean retval = false;
	      retval = (selected.getBlock_id().equals(m_p58035));
	      return retval;
	  }
    }

    Block_c [] objs58033 = 
    Block_c.BlockInstances(modelRoot, new Block_c_test58034_c(getCurrentscope_id())) ;

    if ( (  (objs58033.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Body", //$NON-NLS-1$
           "Consistency: Object: Body: Association: 699: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58033.length )  + " CurrentScope_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Body: Association: 699: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58033.length )  + " CurrentScope_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Body is a referring class in association: rel.Numb = 650
          // The participating class is: Block
    class Block_c_test58037_c implements ClassQueryInterface_c
    {
	  Block_c_test58037_c( java.util.UUID            p58038 ) {
	  m_p58038 = p58038;
	  }
	  private java.util.UUID             m_p58038; 
	  public boolean evaluate (Object candidate)
	  {
	      Block_c selected = (Block_c) candidate;
	      boolean retval = false;
	      retval = (selected.getBlock_id().equals(m_p58038));
	      return retval;
	  }
    }

    Block_c [] objs58036 = 
    Block_c.BlockInstances(modelRoot, new Block_c_test58037_c(getParsed_block_id())) ;

    if ( (  (objs58036.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Body", //$NON-NLS-1$
           "Consistency: Object: Body: Association: 650: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58036.length )  + " Parsed_Block_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Body: Association: 650: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58036.length )  + " Parsed_Block_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Associated Other Side: rel.Numb = 694
            // Link Object: Body in Component
          // Supertype: rel.Numb = 698
    int objs58039 = 0;
            // Subtype Object: Transition Action Body
    class TransitionActionBody_c_test58040_c implements ClassQueryInterface_c
    {
	  TransitionActionBody_c_test58040_c( java.util.UUID            p58041 ) {
	  m_p58041 = p58041;
	  }
	  private java.util.UUID             m_p58041; 
	  public boolean evaluate (Object candidate)
	  {
	      TransitionActionBody_c selected = (TransitionActionBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58041));
	      return retval;
	  }
    }

    TransitionActionBody_c [] objs58042 = 
    TransitionActionBody_c.TransitionActionBodyInstances(modelRoot, new TransitionActionBody_c_test58040_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58042.length;
            // Subtype Object: State Action Body
    class StateActionBody_c_test58043_c implements ClassQueryInterface_c
    {
	  StateActionBody_c_test58043_c( java.util.UUID            p58044 ) {
	  m_p58044 = p58044;
	  }
	  private java.util.UUID             m_p58044; 
	  public boolean evaluate (Object candidate)
	  {
	      StateActionBody_c selected = (StateActionBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58044));
	      return retval;
	  }
    }

    StateActionBody_c [] objs58045 = 
    StateActionBody_c.StateActionBodyInstances(modelRoot, new StateActionBody_c_test58043_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58045.length;
            // Subtype Object: Derived Attribute Body
    class DerivedAttributeBody_c_test58046_c implements ClassQueryInterface_c
    {
	  DerivedAttributeBody_c_test58046_c( java.util.UUID            p58047 ) {
	  m_p58047 = p58047;
	  }
	  private java.util.UUID             m_p58047; 
	  public boolean evaluate (Object candidate)
	  {
	      DerivedAttributeBody_c selected = (DerivedAttributeBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58047));
	      return retval;
	  }
    }

    DerivedAttributeBody_c [] objs58048 = 
    DerivedAttributeBody_c.DerivedAttributeBodyInstances(modelRoot, new DerivedAttributeBody_c_test58046_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58048.length;
            // Subtype Object: Function Body
    class FunctionBody_c_test58049_c implements ClassQueryInterface_c
    {
	  FunctionBody_c_test58049_c( java.util.UUID            p58050 ) {
	  m_p58050 = p58050;
	  }
	  private java.util.UUID             m_p58050; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionBody_c selected = (FunctionBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58050));
	      return retval;
	  }
    }

    FunctionBody_c [] objs58051 = 
    FunctionBody_c.FunctionBodyInstances(modelRoot, new FunctionBody_c_test58049_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58051.length;
            // Subtype Object: Operation Body
    class OperationBody_c_test58052_c implements ClassQueryInterface_c
    {
	  OperationBody_c_test58052_c( java.util.UUID            p58053 ) {
	  m_p58053 = p58053;
	  }
	  private java.util.UUID             m_p58053; 
	  public boolean evaluate (Object candidate)
	  {
	      OperationBody_c selected = (OperationBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58053));
	      return retval;
	  }
    }

    OperationBody_c [] objs58054 = 
    OperationBody_c.OperationBodyInstances(modelRoot, new OperationBody_c_test58052_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58054.length;
            // Subtype Object: Bridge Body
    class BridgeBody_c_test58055_c implements ClassQueryInterface_c
    {
	  BridgeBody_c_test58055_c( java.util.UUID            p58056 ) {
	  m_p58056 = p58056;
	  }
	  private java.util.UUID             m_p58056; 
	  public boolean evaluate (Object candidate)
	  {
	      BridgeBody_c selected = (BridgeBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58056));
	      return retval;
	  }
    }

    BridgeBody_c [] objs58057 = 
    BridgeBody_c.BridgeBodyInstances(modelRoot, new BridgeBody_c_test58055_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58057.length;
            // Subtype Object: Provided Operation Body
    class ProvidedOperationBody_c_test58058_c implements ClassQueryInterface_c
    {
	  ProvidedOperationBody_c_test58058_c( java.util.UUID            p58059 ) {
	  m_p58059 = p58059;
	  }
	  private java.util.UUID             m_p58059; 
	  public boolean evaluate (Object candidate)
	  {
	      ProvidedOperationBody_c selected = (ProvidedOperationBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58059));
	      return retval;
	  }
    }

    ProvidedOperationBody_c [] objs58060 = 
    ProvidedOperationBody_c.ProvidedOperationBodyInstances(modelRoot, new ProvidedOperationBody_c_test58058_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58060.length;
            // Subtype Object: Provided Signal Body
    class ProvidedSignalBody_c_test58061_c implements ClassQueryInterface_c
    {
	  ProvidedSignalBody_c_test58061_c( java.util.UUID            p58062 ) {
	  m_p58062 = p58062;
	  }
	  private java.util.UUID             m_p58062; 
	  public boolean evaluate (Object candidate)
	  {
	      ProvidedSignalBody_c selected = (ProvidedSignalBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58062));
	      return retval;
	  }
    }

    ProvidedSignalBody_c [] objs58063 = 
    ProvidedSignalBody_c.ProvidedSignalBodyInstances(modelRoot, new ProvidedSignalBody_c_test58061_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58063.length;
            // Subtype Object: Required Operation Body
    class RequiredOperationBody_c_test58064_c implements ClassQueryInterface_c
    {
	  RequiredOperationBody_c_test58064_c( java.util.UUID            p58065 ) {
	  m_p58065 = p58065;
	  }
	  private java.util.UUID             m_p58065; 
	  public boolean evaluate (Object candidate)
	  {
	      RequiredOperationBody_c selected = (RequiredOperationBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58065));
	      return retval;
	  }
    }

    RequiredOperationBody_c [] objs58066 = 
    RequiredOperationBody_c.RequiredOperationBodyInstances(modelRoot, new RequiredOperationBody_c_test58064_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58066.length;
            // Subtype Object: Required Signal Body
    class RequiredSignalBody_c_test58067_c implements ClassQueryInterface_c
    {
	  RequiredSignalBody_c_test58067_c( java.util.UUID            p58068 ) {
	  m_p58068 = p58068;
	  }
	  private java.util.UUID             m_p58068; 
	  public boolean evaluate (Object candidate)
	  {
	      RequiredSignalBody_c selected = (RequiredSignalBody_c) candidate;
	      boolean retval = false;
	      retval = (selected.getAction_id().equals(m_p58068));
	      return retval;
	  }
    }

    RequiredSignalBody_c [] objs58069 = 
    RequiredSignalBody_c.RequiredSignalBodyInstances(modelRoot, new RequiredSignalBody_c_test58067_c(getAction_id())) ;
 
    objs58039 = objs58039 + objs58069.length;
    if ( objs58039 != 1 )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Body", //$NON-NLS-1$
           "Consistency: Object: Body: Association: 698: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs58039 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Body: Association: 698: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58039 )  , e); 
      }
      retval = false;

    }

          // Associated One Side: rel.Numb = 640
            // Link Object: Body in Element
            // Other Side Class: Packageable Element
          // Body is a participating class in association: rel.Numb = 601
             // Object: Block
          // Body is a participating class in association: rel.Numb = 612
             // Object: Block
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
Clear_blocks() ;


Clear_live_blocks() ;


StateActionBody_c v_sab = StateActionBody_c.getOneACT_SABOnR698(this);


if ( (  (v_sab != null)) )
{

this.unrelateAcrossR698From(v_sab);


if (v_sab != null) {
v_sab.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

TransitionActionBody_c v_tab = TransitionActionBody_c.getOneACT_TABOnR698(this);


if (   (v_tab != null) )
{

this.unrelateAcrossR698From(v_tab);


if (v_tab != null) {
v_tab.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

DerivedAttributeBody_c v_dab = DerivedAttributeBody_c.getOneACT_DABOnR698(this);


if ( (  (v_dab != null)) )
{

this.unrelateAcrossR698From(v_dab);


if (v_dab != null) {
v_dab.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

FunctionBody_c v_fnb = FunctionBody_c.getOneACT_FNBOnR698(this);


if ( (  (v_fnb != null)) )
{

this.unrelateAcrossR698From(v_fnb);


if (v_fnb != null) {
v_fnb.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

OperationBody_c v_opb = OperationBody_c.getOneACT_OPBOnR698(this);


if ( (  (v_opb != null)) )
{

this.unrelateAcrossR698From(v_opb);


if (v_opb != null) {
v_opb.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ProvidedSignalBody_c v_psb = ProvidedSignalBody_c.getOneACT_PSBOnR698(this);


if ( (  (v_psb != null)) )
{

this.unrelateAcrossR698From(v_psb);


if (v_psb != null) {
v_psb.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ProvidedOperationBody_c v_pob = ProvidedOperationBody_c.getOneACT_POBOnR698(this);


if ( (  (v_pob != null)) )
{

this.unrelateAcrossR698From(v_pob);


if (v_pob != null) {
v_pob.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

RequiredSignalBody_c v_rsb = RequiredSignalBody_c.getOneACT_RSBOnR698(this);


if ( (  (v_rsb != null)) )
{

this.unrelateAcrossR698From(v_rsb);


if (v_rsb != null) {
v_rsb.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

RequiredOperationBody_c v_rob = RequiredOperationBody_c.getOneACT_ROBOnR698(this);


if ( (  (v_rob != null)) )
{

this.unrelateAcrossR698From(v_rob);


if (v_rob != null) {
v_rob.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

BridgeBody_c v_brb = BridgeBody_c.getOneACT_BRBOnR698(this);


if ( (  (v_brb != null)) )
{

this.unrelateAcrossR698From(v_brb);


if (v_brb != null) {
v_brb.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Block_c v_blk = Block_c.getOneACT_BLKOnR699(this);


if ( (  (v_blk != null)) )
{

this.unrelateAcrossR699From(v_blk);



}

Component_c v_comp = Component_c.getOneC_COnR694(BodyInComponent_c.getOneACT_BICOnR694(this));


if (   (v_comp != null) )
{

BodyInComponent_c v_bic = BodyInComponent_c.getOneACT_BICOnR694(this);


if (v_bic != null) {
v_bic.unrelateAcrossR694From( this ) ; v_bic.unrelateAcrossR694From( v_comp ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_bic != null) {
v_bic.delete() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR640(BodyInElement_c.getOneACT_BIEOnR640(this));


if (   (v_pe != null) )
{

BodyInElement_c v_bie = BodyInElement_c.getOneACT_BIEOnR640(this);


if (v_bie != null) {
v_bie.unrelateAcrossR640From( this ) ; v_bie.unrelateAcrossR640From( v_pe ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}


if (v_bie != null) {
v_bie.delete() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

delete() ;



   } // End dispose
  public  void Entered_loop()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Entered_loop") ; 
               final ModelRoot modelRoot = getModelRoot();
setLooplevel( getLooplevel() + 1) ;



   } // End entered_loop
  public  void Exitted_loop()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Exitted_loop") ; 
               final ModelRoot modelRoot = getModelRoot();
setLooplevel( getLooplevel() - 1) ;



   } // End exitted_loop
  public  boolean      In_loop()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::In_loop") ; 
               final ModelRoot modelRoot = getModelRoot();
return getLooplevel() > 0;



   } // End in_loop
  public  boolean      Self_is_valid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Self_is_valid") ; 
               final ModelRoot modelRoot = getModelRoot();
Operation_c v_op = Operation_c.getOneO_TFROnR696(OperationBody_c.getOneACT_OPBOnR698(this));


if (   (v_op != null) )
{

if ( v_op.getInstance_based() == Scope_c.Instance )
{

return true;



}


}

else
{

Action_c v_sm_act = Action_c.getOneSM_ACTOnR691(StateActionBody_c.getOneACT_SABOnR698(this));


if (   (v_sm_act == null) )
{

v_sm_act = Action_c.getOneSM_ACTOnR688(TransitionActionBody_c.getOneACT_TABOnR698(this));



}

if (   (v_sm_act != null) )
{

InstanceStateMachine_c v_ism = InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR515(v_sm_act));


if (   (v_ism != null) )
{

return true;



}


}

else
{

DerivedBaseAttribute_c v_dab = DerivedBaseAttribute_c.getOneO_DBATTROnR693(DerivedAttributeBody_c.getOneACT_DABOnR698(this));


if (   (v_dab != null) )
{

return true;



}


}


}

return false;



   } // End self_is_valid
  public  void Clear_blocks()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Clear_blocks") ; 
               final ModelRoot modelRoot = getModelRoot();
setLooplevel( 0) ;


Block_c v_first_block = Block_c.getOneACT_BLKOnR650(this);


if ( (  (v_first_block != null)) )
{

this.unrelateAcrossR650From(v_first_block);



}

Block_c [] v_block_set = Block_c.getManyACT_BLKsOnR612(this);


Block_c  v_block = null;
for ( int i55415 = 0; i55415 < v_block_set.length; i55415++)
{
  v_block = v_block_set[i55415] ;

this.unrelateAcrossR612From(v_block);


if (v_block != null) {
v_block.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End clear_blocks
  public  boolean      Return_is_required()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Return_is_required") ; 
               final ModelRoot modelRoot = getModelRoot();
FunctionBody_c v_fnb = FunctionBody_c.getOneACT_FNBOnR698(this);


if ( (  (v_fnb != null)) )
{

Function_c v_sync = Function_c.getOneS_SYNCOnR695(v_fnb);


DataType_c v_dt = DataType_c.getOneS_DTOnR25(v_sync);


if ( (! v_dt.getName().equals("void")) )
{

return true;



}


}

else
{

OperationBody_c v_opb = OperationBody_c.getOneACT_OPBOnR698(this);


if ( (  (v_opb != null)) )
{

Operation_c v_op = Operation_c.getOneO_TFROnR696(v_opb);


DataType_c v_dt = DataType_c.getOneS_DTOnR116(v_op);


if ( (! v_dt.getName().equals("void")) )
{

return true;



}


}

else
{

BridgeBody_c v_brb = BridgeBody_c.getOneACT_BRBOnR698(this);


if ( (  (v_brb != null)) )
{

Bridge_c v_brg = Bridge_c.getOneS_BRGOnR697(v_brb);


DataType_c v_dt = DataType_c.getOneS_DTOnR20(v_brg);


if ( (! v_dt.getName().equals("void")) )
{

return true;



}


}

else
{

RequiredOperationBody_c v_rqOpB = RequiredOperationBody_c.getOneACT_ROBOnR698(this);


if (   (v_rqOpB != null) )
{

DataType_c v_dt = DataType_c.getOneS_DTOnR4008(InterfaceOperation_c.getOneC_IOOnR4004(ExecutableProperty_c.getOneC_EPOnR4500(RequiredExecutableProperty_c.getOneSPR_REPOnR4502(RequiredOperation_c.getOneSPR_ROOnR685(v_rqOpB)))));


if ( (! v_dt.getName().equals("void")) )
{

return true;



}


}

else
{

ProvidedOperationBody_c v_prOpB = ProvidedOperationBody_c.getOneACT_POBOnR698(this);


if (   (v_prOpB != null) )
{

DataType_c v_dt = DataType_c.getOneS_DTOnR4008(InterfaceOperation_c.getOneC_IOOnR4004(ExecutableProperty_c.getOneC_EPOnR4501(ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(ProvidedOperation_c.getOneSPR_POOnR687(v_prOpB)))));


if ( (! v_dt.getName().equals("void")) )
{

return true;



}


}


}


}


}


}

return false;



   } // End return_is_required
  public  java.util.UUID         Createstackframe(final boolean      p_Enqueue,final java.util.UUID         p_Invoking_stack_frame_or_component_id,final java.util.UUID         p_Stack_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Createstackframe") ; 
               final ModelRoot modelRoot = getModelRoot();
return Gd_c.Null_unique_id();



   } // End createStackFrame
  public  void Deletestackframe(final java.util.UUID         p_Stack_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Deletestackframe") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End deleteStackFrame
  public  java.util.UUID         Createstackframeforbridge(final java.util.UUID         p_Stack_frame_id_caller)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Createstackframeforbridge") ; 
               final ModelRoot modelRoot = getModelRoot();
return Gd_c.Null_unique_id();



   } // End createStackFrameForBridge
  public  void Deletestackframeforbridge(final java.util.UUID         p_Stack_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Deletestackframeforbridge") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End deleteStackFrameForBridge
  public  void Deletestackforbridge(final java.util.UUID         p_Stack_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Deletestackforbridge") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End deleteStackForBridge
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
Block_c v_block = Block_c.getOneACT_BLKOnR666(this);


if ( (  (v_block != null)) )
{

this.unrelateAcrossR666From(v_block);



}

Block_c [] v_blocks = Block_c.getManyACT_BLKsOnR601(this);


for ( int i55416 = 0; i55416 < v_blocks.length; i55416++)
{
  v_block = v_blocks[i55416] ;

this.unrelateAcrossR601From(v_block);


if (v_block != null) {
v_block.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

v_block = Block_c.getOneACT_BLKOnR650(this);


if ( (  (v_block != null)) )
{

this.unrelateAcrossR650From(v_block);


  this.relateAcrossR666To(v_block);



}

v_blocks = Block_c.getManyACT_BLKsOnR612(this);


for ( int i55417 = 0; i55417 < v_blocks.length; i55417++)
{
  v_block = v_blocks[i55417] ;

this.unrelateAcrossR612From(v_block);


  this.relateAcrossR601To(v_block);


if (v_block != null) {
v_block.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End initialize
  public  void Clear_live_blocks()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Clear_live_blocks") ; 
               final ModelRoot modelRoot = getModelRoot();
setLooplevel( 0) ;


Block_c v_first_block = Block_c.getOneACT_BLKOnR666(this);


if ( (  (v_first_block != null)) )
{

this.unrelateAcrossR666From(v_first_block);



}

Block_c [] v_block_set = Block_c.getManyACT_BLKsOnR601(this);


Block_c  v_block = null;
for ( int i55418 = 0; i55418 < v_block_set.length; i55418++)
{
  v_block = v_block_set[i55418] ;

this.unrelateAcrossR601From(v_block);


if (v_block != null) {
v_block.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End clear_live_blocks
  public  void Associatewithowningcomponent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Associatewithowningcomponent") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR694(BodyInComponent_c.getOneACT_BICOnR694(this));


if (   (v_component == null) )
{

java.util.UUID         v_id = Getcontainingcomponentid() ;


v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_id);


if (   (v_component != null) )
{

BodyInComponent_c v_bic = new BodyInComponent_c(modelRoot) ;


if (v_bic != null) {
  v_bic.relateAcrossR694To( this ) ;   v_bic.relateAcrossR694To( v_component ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}


}


   } // End associateWithOwningComponent
  public  java.util.UUID         Createstackforsignal(final java.util.UUID         p_Execution_engine_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Createstackforsignal") ; 
               final ModelRoot modelRoot = getModelRoot();
return Gd_c.Null_unique_id();



   } // End createStackForSignal
  public  java.util.UUID         Createstackframeformessage(final java.util.UUID         p_Stack_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Createstackframeformessage") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_frame_id = Createstackframe(			    
false			    
,Gd_c.Null_unique_id()			    
,p_Stack_id) ;


Startstackframeformessage(			    
v_frame_id ) ;


return v_frame_id;



   } // End createStackFrameForMessage
  public  java.util.UUID         Createstackandframeforsignal(final java.util.UUID         p_Execution_engine_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Createstackandframeforsignal") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_stack_id = Createstackforsignal(			    
p_Execution_engine_id) ;


java.util.UUID         v_frame_id = Createstackframeformessage(			    
v_stack_id) ;


return v_stack_id;



   } // End createStackAndFrameForSignal
  public  java.util.UUID         Getcontainingcomponentid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Getcontainingcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
RequiredSignalBody_c v_rsb = RequiredSignalBody_c.getOneACT_RSBOnR698(this);


RequiredOperationBody_c v_rob = RequiredOperationBody_c.getOneACT_ROBOnR698(this);


ProvidedSignalBody_c v_psb = ProvidedSignalBody_c.getOneACT_PSBOnR698(this);


ProvidedOperationBody_c v_pob = ProvidedOperationBody_c.getOneACT_POBOnR698(this);


TransitionActionBody_c v_tab = TransitionActionBody_c.getOneACT_TABOnR698(this);


StateActionBody_c v_sab = StateActionBody_c.getOneACT_SABOnR698(this);


DerivedAttributeBody_c v_dab = DerivedAttributeBody_c.getOneACT_DABOnR698(this);


FunctionBody_c v_fnb = FunctionBody_c.getOneACT_FNBOnR698(this);


OperationBody_c v_opb = OperationBody_c.getOneACT_OPBOnR698(this);


BridgeBody_c v_brb = BridgeBody_c.getOneACT_BRBOnR698(this);


if ( (  (v_rsb != null)) )
{

return v_rsb.Getcontainingcomponentid();



}

else if ( (  (v_rob != null)) )
{

return v_rob.Getcontainingcomponentid();



}

else if ( (  (v_psb != null)) )
{

return v_psb.Getcontainingcomponentid();



}

else if ( (  (v_pob != null)) )
{

return v_pob.Getcontainingcomponentid();



}

else if ( (  (v_tab != null)) )
{

return v_tab.Getcontainingcomponentid();



}

else if ( (  (v_sab != null)) )
{

return v_sab.Getcontainingcomponentid();



}

else if ( (  (v_dab != null)) )
{

return v_dab.Getcontainingcomponentid();



}

else if ( (  (v_fnb != null)) )
{

return v_fnb.Getcontainingcomponentid();



}

else if ( (  (v_opb != null)) )
{

return v_opb.Getcontainingcomponentid();



}

else if ( (  (v_brb != null)) )
{

return v_brb.Getcontainingcomponentid();



}

return Gd_c.Null_unique_id();



   } // End getContainingComponentId
  public  java.util.UUID         Createstackforbridge()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Createstackforbridge") ; 
               final ModelRoot modelRoot = getModelRoot();
return Gd_c.Null_unique_id();



   } // End createStackForBridge
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  void Startstackframeformessage(final java.util.UUID         p_Stackframe_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Startstackframeformessage") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End startStackFrameForMessage
  public  boolean      Associatewithcontainer()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Associatewithcontainer") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_container = PackageableElement_c.getOnePE_PEOnR640(BodyInElement_c.getOneACT_BIEOnR640(this));


if (   (v_container == null) )
{

java.util.UUID         v_id = Getcontainerid() ;


v_container = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_id);


if (   (v_container != null) )
{

BodyInElement_c v_bie = new BodyInElement_c(modelRoot) ;


if (v_bie != null) {
  v_bie.relateAcrossR640To( this ) ;   v_bie.relateAcrossR640To( v_container ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

else
{

return false;



}


}

return true;



   } // End associateWithContainer
  public  java.util.UUID         Getcontainerid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Getcontainerid") ; 
               final ModelRoot modelRoot = getModelRoot();
RequiredSignalBody_c v_rsb = RequiredSignalBody_c.getOneACT_RSBOnR698(this);


RequiredOperationBody_c v_rob = RequiredOperationBody_c.getOneACT_ROBOnR698(this);


ProvidedSignalBody_c v_psb = ProvidedSignalBody_c.getOneACT_PSBOnR698(this);


ProvidedOperationBody_c v_pob = ProvidedOperationBody_c.getOneACT_POBOnR698(this);


TransitionActionBody_c v_tab = TransitionActionBody_c.getOneACT_TABOnR698(this);


StateActionBody_c v_sab = StateActionBody_c.getOneACT_SABOnR698(this);


DerivedAttributeBody_c v_dab = DerivedAttributeBody_c.getOneACT_DABOnR698(this);


FunctionBody_c v_fnb = FunctionBody_c.getOneACT_FNBOnR698(this);


OperationBody_c v_opb = OperationBody_c.getOneACT_OPBOnR698(this);


BridgeBody_c v_brb = BridgeBody_c.getOneACT_BRBOnR698(this);


if ( (  (v_rsb != null)) )
{

return v_rsb.Getcontainerid();



}

else if ( (  (v_rob != null)) )
{

return v_rob.Getcontainerid();



}

else if ( (  (v_psb != null)) )
{

return v_psb.Getcontainerid();



}

else if ( (  (v_pob != null)) )
{

return v_pob.Getcontainerid();



}

else if ( (  (v_tab != null)) )
{

return v_tab.Getcontainerid();



}

else if ( (  (v_sab != null)) )
{

return v_sab.Getcontainerid();



}

else if ( (  (v_dab != null)) )
{

return v_dab.Getcontainerid();



}

else if ( (  (v_fnb != null)) )
{

return v_fnb.Getcontainerid();



}

else if ( (  (v_opb != null)) )
{

return v_opb.Getcontainerid();



}

else if ( (  (v_brb != null)) )
{

return v_brb.Getcontainerid();



}

return Gd_c.Null_unique_id();



   } // End getContainerId
  public  String       Getpath()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_resultPath = "<Path is not available in getPath()>" ;


FunctionBody_c v_functionBody = FunctionBody_c.getOneACT_FNBOnR698(this);


StateActionBody_c v_stateActionBody = StateActionBody_c.getOneACT_SABOnR698(this);


DerivedAttributeBody_c v_derivedAttributeBody = DerivedAttributeBody_c.getOneACT_DABOnR698(this);


OperationBody_c v_operationBody = OperationBody_c.getOneACT_OPBOnR698(this);


BridgeBody_c v_bridgeBody = BridgeBody_c.getOneACT_BRBOnR698(this);


ProvidedOperationBody_c v_providedOperationBody = ProvidedOperationBody_c.getOneACT_POBOnR698(this);


ProvidedSignalBody_c v_providedSignalBody = ProvidedSignalBody_c.getOneACT_PSBOnR698(this);


RequiredOperationBody_c v_requiredOperationBody = RequiredOperationBody_c.getOneACT_ROBOnR698(this);


RequiredSignalBody_c v_requiredSignalBody = RequiredSignalBody_c.getOneACT_RSBOnR698(this);


TransitionActionBody_c v_transitionActionBody = TransitionActionBody_c.getOneACT_TABOnR698(this);


if ( (  (v_functionBody != null)) )
{

v_resultPath = v_functionBody.Getpath() ;



}

else if ( (  (v_stateActionBody != null)) )
{

v_resultPath = v_stateActionBody.Getpath() ;



}

else if ( (  (v_derivedAttributeBody != null)) )
{

v_resultPath = v_derivedAttributeBody.Getpath() ;



}

else if ( (  (v_operationBody != null)) )
{

v_resultPath = v_operationBody.Getpath() ;



}

else if ( (  (v_bridgeBody != null)) )
{

v_resultPath = v_bridgeBody.Getpath() ;



}

else if ( (  (v_providedOperationBody != null)) )
{

v_resultPath = v_providedOperationBody.Getpath() ;



}

else if ( (  (v_providedSignalBody != null)) )
{

v_resultPath = v_providedSignalBody.Getpath() ;



}

else if ( (  (v_requiredOperationBody != null)) )
{

v_resultPath = v_requiredOperationBody.Getpath() ;



}

else if ( (  (v_requiredSignalBody != null)) )
{

v_resultPath = v_requiredSignalBody.Getpath() ;



}

else if ( (  (v_transitionActionBody != null)) )
{

v_resultPath = v_transitionActionBody.Getpath() ;



}

return v_resultPath;



   } // End getPath
  public  boolean      Isinitialized()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Body", " Operation entered: Body::Isinitialized") ; 
               final ModelRoot modelRoot = getModelRoot();
Block_c v_outerblock = Block_c.getOneACT_BLKOnR666(this);


if ( (  (v_outerblock != null)) )
{

return true;



}

Block_c v_block = Block_c.getOneACT_BLKOnR601(this);


if ( (  (v_block != null)) )
{

return true;



}

return false;



   } // End isInitialized

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Body
