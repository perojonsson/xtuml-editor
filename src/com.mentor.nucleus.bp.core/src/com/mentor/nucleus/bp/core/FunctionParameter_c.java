      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.FunctionParameter_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_FUNCTION_PARAMETER extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class FunctionParameter_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public FunctionParameter_c(ModelRoot modelRoot,
       java.util.UUID         p_m_sparm_id,
       java.util.UUID         p_m_sync_id,
       String       p_m_name,
       java.util.UUID         p_m_dt_id,
       int          p_m_by_ref,
       String       p_m_dimensions,
       java.util.UUID         p_m_previous_sparm_id,
       String       p_m_descrip)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sparm_id = IdAssigner.preprocessUUID(p_m_sparm_id);
       //extract 28 bit value only            
       m_sparm_idLongBased = 0xfffffff & p_m_sparm_id.getLeastSignificantBits();
       m_name = p_m_name;
       m_by_ref = p_m_by_ref;
       m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_previous_sparm_id = IdAssigner.preprocessUUID(p_m_previous_sparm_id);
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sync_id = IdAssigner.preprocessUUID(p_m_sync_id);
        
    setUniqueId(m_sparm_id);
    Object [] key = {m_sparm_id};
    addInstanceToMap(key);
  }
  static public FunctionParameter_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_sparm_id,
       java.util.UUID         p_m_sync_id,
       String       p_m_name,
       java.util.UUID         p_m_dt_id,
       int          p_m_by_ref,
       String       p_m_dimensions,
       java.util.UUID         p_m_previous_sparm_id,
       String       p_m_descrip, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);
      FunctionParameter_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_sparm_id};
          new_inst = (FunctionParameter_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sparm_id = IdAssigner.preprocessUUID(p_m_sparm_id);
       //extract 28 bit value only            
       new_inst.m_sparm_idLongBased = 0xfffffff & p_m_sparm_id.getLeastSignificantBits();
       new_inst.m_name = p_m_name;
       new_inst.m_by_ref = p_m_by_ref;
       new_inst.m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_previous_sparm_id = IdAssigner.preprocessUUID(p_m_previous_sparm_id);
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sync_id = IdAssigner.preprocessUUID(p_m_sync_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new FunctionParameter_c(modelRoot,
p_m_sparm_id,
p_m_sync_id,
p_m_name,
p_m_dt_id,
p_m_by_ref,
p_m_dimensions,
p_m_previous_sparm_id,
p_m_descrip
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public FunctionParameter_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_sparm_id,
       java.util.UUID         p_m_sync_id,
       String       p_m_name,
       java.util.UUID         p_m_dt_id,
       int          p_m_by_ref,
       String       p_m_dimensions,
       java.util.UUID         p_m_previous_sparm_id,
       String       p_m_descrip){
    InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);
    FunctionParameter_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_sparm_id
            };
        source = (FunctionParameter_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sparm_id = IdAssigner.preprocessUUID(p_m_sparm_id);
       //extract 28 bit value only            
       source.m_sparm_idLongBased = 0xfffffff & p_m_sparm_id.getLeastSignificantBits();
       source.m_name = p_m_name;
       source.m_by_ref = p_m_by_ref;
       source.m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_previous_sparm_id = IdAssigner.preprocessUUID(p_m_previous_sparm_id);
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sync_id = IdAssigner.preprocessUUID(p_m_sync_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    FunctionParameter_c new_inst = new FunctionParameter_c(modelRoot,
p_m_sparm_id,
p_m_sync_id,
p_m_name,
p_m_dt_id,
p_m_by_ref,
p_m_dimensions,
p_m_previous_sparm_id,
p_m_descrip
);
    return new_inst;
  }
  public FunctionParameter_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_sparm_id = idAssigner.createUUID();
     m_name = "";   
     m_dimensions = "";   
     m_previous_sparm_id = IdAssigner.NULL_UUID;   
     m_descrip = "";   
     m_dt_id = IdAssigner.NULL_UUID;   
     m_sync_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_sparm_id);
    Object [] key = {m_sparm_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_sparm_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_sparm_id !=  p_newKey ){
	
		m_sparm_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof FunctionParameter_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof FunctionParameter_c)) {
           return false;
       }
       
       FunctionParameter_c me = (FunctionParameter_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getSparm_id()) || IdAssigner.NULL_UUID.equals(((FunctionParameter_c)elem).getSparm_id())) && this != elem)) {
      	return false;
      }
      if (!getSparm_id().equals(((FunctionParameter_c)elem).getSparm_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof FunctionParameter_c)) {
           return false;
       }
       
       FunctionParameter_c me = (FunctionParameter_c)elem;
      if (!getSparm_id().equals(((FunctionParameter_c)elem).getSparm_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_sparm_id ;
  private long m_sparm_idLongBased ;
  private String       m_name ;
  private int          m_by_ref ;
  private String       m_dimensions ;
  private java.util.UUID         m_previous_sparm_id ;
  private String       m_descrip ;
  private java.util.UUID         m_dt_id ;
  private java.util.UUID         m_sync_id ;
      
// declare association references from this class
  
  
    
// referring navigation

Function_c IsDefinedForFunction ;
public void relateAcrossR24To(Function_c target)
{
	relateAcrossR24To(target, true);
}
public void relateAcrossR24To(Function_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsDefinedForFunction) return;  // already related

    if ( IsDefinedForFunction != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsDefinedForFunction != null) {
    
        IsDefinedForFunction.clearBackPointerR24To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"FunctionParameter_c.relateAcrossR24To(Function_c target)", 
			"Relate performed across R24 from Function Parameter to Function without unrelate of prior instance.");  
		}
    }
                
    	IsDefinedForFunction = target ;
        if(IdAssigner.NULL_UUID.equals(target.getSync_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_sync_id = target.getSync_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR24To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "24", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR24From(Function_c target)
{
	unrelateAcrossR24From(target, true);
}
public void unrelateAcrossR24From(Function_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsDefinedForFunction == null) return;  // already unrelated
	
	if (target != IsDefinedForFunction) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R24", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR24To(this);
    }
    

      if(IsDefinedForFunction != null) {
      
        m_sync_id = IsDefinedForFunction.getSync_id();
        if(IdAssigner.NULL_UUID.equals(m_sync_id))
        {
          m_sync_id = IsDefinedForFunction.getSync_idCachedValue();
        }       
        IsDefinedForFunction = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "24", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static FunctionParameter_c getOneS_SPARMOnR24(Function_c [] targets)
{
    return getOneS_SPARMOnR24(targets, null);
}

public static FunctionParameter_c getOneS_SPARMOnR24(Function_c [] targets, ClassQueryInterface_c test)
{
    FunctionParameter_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_SPARMOnR24(targets[i], test);
        }
    }

    return ret_val;
}

public static FunctionParameter_c getOneS_SPARMOnR24(Function_c target)
{
  return getOneS_SPARMOnR24(target, null);
}

public static FunctionParameter_c getOneS_SPARMOnR24(Function_c target, boolean loadComponent)
{
    return getOneS_SPARMOnR24(target.getModelRoot(), target, null, loadComponent);
}

public static FunctionParameter_c getOneS_SPARMOnR24(Function_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_SPARMOnR24(target.getModelRoot(), target, test);
  }
  return null;
}

public static FunctionParameter_c getOneS_SPARMOnR24(ModelRoot modelRoot, Function_c target, ClassQueryInterface_c test)
{
	return getOneS_SPARMOnR24(modelRoot, target, test, true);
}

public static FunctionParameter_c getOneS_SPARMOnR24(ModelRoot modelRoot, Function_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_SPARMOnR24(modelRoot,target,test);
}
private static FunctionParameter_c find_getOneS_SPARMOnR24(ModelRoot modelRoot, Function_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DefinesFunctionParameterDefines_R24) {
	    for ( int i = 0; i < target.backPointer_DefinesFunctionParameterDefines_R24.size(); ++i ) {
	      FunctionParameter_c source = (FunctionParameter_c)target.backPointer_DefinesFunctionParameterDefines_R24.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static FunctionParameter_c [] getManyS_SPARMsOnR24(Function_c [] targets)
{
  return getManyS_SPARMsOnR24(targets, null);
}
public static FunctionParameter_c [] getManyS_SPARMsOnR24(Function_c [] targets, boolean loadComponent)
{
  return getManyS_SPARMsOnR24(targets, null, loadComponent);
}
public static FunctionParameter_c [] getManyS_SPARMsOnR24(Function_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR24(targets, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR24(Function_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new FunctionParameter_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DefinesFunctionParameterDefines_R24) {
	    for (int j = 0; j < targets[i].backPointer_DefinesFunctionParameterDefines_R24.size(); ++j) {
	      FunctionParameter_c source = (FunctionParameter_c)targets[i].backPointer_DefinesFunctionParameterDefines_R24.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	FunctionParameter_c[] ret_set = new FunctionParameter_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new FunctionParameter_c[0];
  }
  }

public static FunctionParameter_c [] getManyS_SPARMsOnR24(Function_c target)
{
  return getManyS_SPARMsOnR24(target, null);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR24(Function_c target, boolean loadComponent)
{
  return getManyS_SPARMsOnR24(target, null, loadComponent);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR24(Function_c target, ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR24(target, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR24(Function_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new FunctionParameter_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_DefinesFunctionParameterDefines_R24) {
    for (int i = 0; i < target.backPointer_DefinesFunctionParameterDefines_R24.size(); ++i) {
      FunctionParameter_c source = (FunctionParameter_c)target.backPointer_DefinesFunctionParameterDefines_R24.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		FunctionParameter_c[] ret_set = new FunctionParameter_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new FunctionParameter_c[0];
	}
  }


  
    
// referring navigation

DataType_c IsTypedByDataType ;
public void relateAcrossR26To(DataType_c target)
{
	relateAcrossR26To(target, true);
}
public void relateAcrossR26To(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsTypedByDataType) return;  // already related

    if ( IsTypedByDataType != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsTypedByDataType != null) {
        UmlProblem.removeXtUMLProblem(this, IsTypedByDataType);
    
        IsTypedByDataType.clearBackPointerR26To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"FunctionParameter_c.relateAcrossR26To(DataType_c target)", 
			"Relate performed across R26 from Function Parameter to Data Type without unrelate of prior instance.");  
		}
    }
                
    	IsTypedByDataType = target ;
        if(IdAssigner.NULL_UUID.equals(target.getDt_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_dt_id = target.getDt_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR26To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "26", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR26From(DataType_c target)
{
	unrelateAcrossR26From(target, true);
}
public void unrelateAcrossR26From(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsTypedByDataType == null) return;  // already unrelated
	
	if (target != IsTypedByDataType) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R26", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR26To(this);
    }
    

      if(IsTypedByDataType != null) {
      
        m_dt_id = IsTypedByDataType.getDt_id();
        if(IdAssigner.NULL_UUID.equals(m_dt_id))
        {
          m_dt_id = IsTypedByDataType.getDt_idCachedValue();
        }       
        IsTypedByDataType = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "26", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static FunctionParameter_c getOneS_SPARMOnR26(DataType_c [] targets)
{
    return getOneS_SPARMOnR26(targets, null);
}

public static FunctionParameter_c getOneS_SPARMOnR26(DataType_c [] targets, ClassQueryInterface_c test)
{
    FunctionParameter_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_SPARMOnR26(targets[i], test);
        }
    }

    return ret_val;
}

public static FunctionParameter_c getOneS_SPARMOnR26(DataType_c target)
{
  return getOneS_SPARMOnR26(target, null);
}

public static FunctionParameter_c getOneS_SPARMOnR26(DataType_c target, boolean loadComponent)
{
    return getOneS_SPARMOnR26(target.getModelRoot(), target, null, loadComponent);
}

public static FunctionParameter_c getOneS_SPARMOnR26(DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_SPARMOnR26(target.getModelRoot(), target, test);
  }
  return null;
}

public static FunctionParameter_c getOneS_SPARMOnR26(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
	return getOneS_SPARMOnR26(modelRoot, target, test, true);
}

public static FunctionParameter_c getOneS_SPARMOnR26(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  FunctionParameter_c result = null;
  
  result=find_getOneS_SPARMOnR26(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,FunctionParameter_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_SPARMOnR26(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static FunctionParameter_c find_getOneS_SPARMOnR26(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26) {
	    for ( int i = 0; i < target.backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26.size(); ++i ) {
	      FunctionParameter_c source = (FunctionParameter_c)target.backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static FunctionParameter_c [] getManyS_SPARMsOnR26(DataType_c [] targets)
{
  return getManyS_SPARMsOnR26(targets, null);
}
public static FunctionParameter_c [] getManyS_SPARMsOnR26(DataType_c [] targets, boolean loadComponent)
{
  return getManyS_SPARMsOnR26(targets, null, loadComponent);
}
public static FunctionParameter_c [] getManyS_SPARMsOnR26(DataType_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR26(targets, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR26(DataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new FunctionParameter_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, FunctionParameter_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26) {
	    for (int j = 0; j < targets[i].backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26.size(); ++j) {
	      FunctionParameter_c source = (FunctionParameter_c)targets[i].backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	FunctionParameter_c[] ret_set = new FunctionParameter_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new FunctionParameter_c[0];
  }
  }

public static FunctionParameter_c [] getManyS_SPARMsOnR26(DataType_c target)
{
  return getManyS_SPARMsOnR26(target, null);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR26(DataType_c target, boolean loadComponent)
{
  return getManyS_SPARMsOnR26(target, null, loadComponent);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR26(DataType_c target, ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR26(target, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR26(DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new FunctionParameter_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, FunctionParameter_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26) {
    for (int i = 0; i < target.backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26.size(); ++i) {
      FunctionParameter_c source = (FunctionParameter_c)target.backPointer_DescribesTypeOfFunctionParameterDescribesTypeOf_R26.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		FunctionParameter_c[] ret_set = new FunctionParameter_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new FunctionParameter_c[0];
	}
  }


  
    
// referring navigation

FunctionParameter_c SucceedsFunctionParameter ;
public void relateAcrossR54ToSucceeds(FunctionParameter_c target)
{
	relateAcrossR54ToSucceeds(target, true);
}
public void relateAcrossR54ToSucceeds(FunctionParameter_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == SucceedsFunctionParameter) return;  // already related

    if ( SucceedsFunctionParameter != target ) {
    
    Object oldKey = getInstanceKey();

    if (SucceedsFunctionParameter != null) {
    
        SucceedsFunctionParameter.clearBackPointerR54ToPrecedes(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"FunctionParameter_c.relateAcrossR54ToSucceeds(FunctionParameter_c target)", 
			"Relate performed across R54 from Function Parameter to Function Parameter without unrelate of prior instance.");  
		}
    }
                
    	SucceedsFunctionParameter = target ;
        m_previous_sparm_id = target.getSparm_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR54ToPrecedes(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "54", "Succeeds");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR54FromSucceeds(FunctionParameter_c target)
{
	unrelateAcrossR54FromSucceeds(target, true);
}
public void unrelateAcrossR54FromSucceeds(FunctionParameter_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (SucceedsFunctionParameter == null) return;  // already unrelated
	
	if (target != SucceedsFunctionParameter) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R54", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR54ToPrecedes(this);
    }
    

      if(SucceedsFunctionParameter != null) {
      
        m_previous_sparm_id = SucceedsFunctionParameter.getSparm_id();
        SucceedsFunctionParameter = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "54", "Succeeds");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static FunctionParameter_c getOneS_SPARMOnR54Precedes(FunctionParameter_c [] targets)
{
    return getOneS_SPARMOnR54Precedes(targets, null);
}

public static FunctionParameter_c getOneS_SPARMOnR54Precedes(FunctionParameter_c [] targets, ClassQueryInterface_c test)
{
    FunctionParameter_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_SPARMOnR54Precedes(targets[i], test);
        }
    }

    return ret_val;
}

public static FunctionParameter_c getOneS_SPARMOnR54Precedes(FunctionParameter_c target)
{
  return getOneS_SPARMOnR54Precedes(target, null);
}

public static FunctionParameter_c getOneS_SPARMOnR54Precedes(FunctionParameter_c target, boolean loadComponent)
{
    return getOneS_SPARMOnR54Precedes(target.getModelRoot(), target, null, loadComponent);
}

public static FunctionParameter_c getOneS_SPARMOnR54Precedes(FunctionParameter_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_SPARMOnR54Precedes(target.getModelRoot(), target, test);
  }
  return null;
}

public static FunctionParameter_c getOneS_SPARMOnR54Precedes(ModelRoot modelRoot, FunctionParameter_c target, ClassQueryInterface_c test)
{
	return getOneS_SPARMOnR54Precedes(modelRoot, target, test, true);
}

public static FunctionParameter_c getOneS_SPARMOnR54Precedes(ModelRoot modelRoot, FunctionParameter_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_SPARMOnR54Precedes(modelRoot,target,test);
}
private static FunctionParameter_c find_getOneS_SPARMOnR54Precedes(ModelRoot modelRoot, FunctionParameter_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    FunctionParameter_c source = (FunctionParameter_c)target.backPointer_PrecedesFunctionParameterPrecedes_R54;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Precedes(FunctionParameter_c [] targets)
{
  return getManyS_SPARMsOnR54Precedes(targets, null);
}
public static FunctionParameter_c [] getManyS_SPARMsOnR54Precedes(FunctionParameter_c [] targets, boolean loadComponent)
{
  return getManyS_SPARMsOnR54Precedes(targets, null, loadComponent);
}
public static FunctionParameter_c [] getManyS_SPARMsOnR54Precedes(FunctionParameter_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR54Precedes(targets, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Precedes(FunctionParameter_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new FunctionParameter_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      FunctionParameter_c source = (FunctionParameter_c)targets[i].backPointer_PrecedesFunctionParameterPrecedes_R54;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	FunctionParameter_c[] ret_set = new FunctionParameter_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new FunctionParameter_c[0];
  }
  }

public static FunctionParameter_c [] getManyS_SPARMsOnR54Precedes(FunctionParameter_c target)
{
  if (target != null) {
    FunctionParameter_c [] targetArray = new FunctionParameter_c[1];
    targetArray[0] = target;
    return getManyS_SPARMsOnR54Precedes(targetArray);
  } else {
    FunctionParameter_c [] result = new FunctionParameter_c [0] ;
  return result ;
}
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Precedes(FunctionParameter_c target, boolean loadComponent)
{
  if (target != null) {
    FunctionParameter_c [] targetArray = new FunctionParameter_c[1];
    targetArray[0] = target;
    return getManyS_SPARMsOnR54Precedes(targetArray, loadComponent);
  } else {
    FunctionParameter_c [] result = new FunctionParameter_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<ParameterValue_c> backPointer_ParameterValue_R832 = new ArrayList<ParameterValue_c>();

public void setParameterValueOrderInChildListR832(ParameterValue_c target, int index) {
	unrelateAcrossR832From(target);
	ParameterValue_c[] elements = ParameterValue_c.getManyV_PVLsOnR832(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR832From((ParameterValue_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR832To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR832To((ParameterValue_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR832To(ParameterValue_c target)
{
  if (target != null) {
    target.relateAcrossR832To(this, true) ;
  }
}

public void relateAcrossR832To(ParameterValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR832To(this, notifyChanges) ;
  }
}

public void setBackPointerR832To(ParameterValue_c target)
{
  	synchronized (backPointer_ParameterValue_R832) {
		backPointer_ParameterValue_R832.add(target);
	}
}

public void unrelateAcrossR832From(ParameterValue_c target)
{
  if (target != null) {
    target.unrelateAcrossR832From(this, true) ;
  }
}

public void unrelateAcrossR832From(ParameterValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR832From(this, notifyChanges) ;
  }
}

public void clearBackPointerR832To(ParameterValue_c target)
{
  synchronized (backPointer_ParameterValue_R832) {
	    backPointer_ParameterValue_R832.remove(target);
	}
}

public static FunctionParameter_c getOneS_SPARMOnR832(ParameterValue_c [] targets)
{
    return getOneS_SPARMOnR832(targets, null);
}

public static FunctionParameter_c getOneS_SPARMOnR832(ParameterValue_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SPARMOnR832(targets, test, true);
}

public static FunctionParameter_c getOneS_SPARMOnR832(ParameterValue_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    FunctionParameter_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             FunctionParameter_c candidate_val = getOneS_SPARMOnR832(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SPARMOnR832(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static FunctionParameter_c getOneS_SPARMOnR832(ParameterValue_c target)
{
	return getOneS_SPARMOnR832(target, true);
}
public static FunctionParameter_c getOneS_SPARMOnR832(ParameterValue_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsAValueOfFunctionParameter ;
  } else {
    return null;
  }
}

public static FunctionParameter_c [] getManyS_SPARMsOnR832(ParameterValue_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR832(targets, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR832(ParameterValue_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new FunctionParameter_c[0];
  
  
  LinkedHashSet<FunctionParameter_c> elementsSet = new LinkedHashSet<FunctionParameter_c>();
  for (int i = 0; i < targets.length; i++) {
    FunctionParameter_c associate = targets[i].IsAValueOfFunctionParameter;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  FunctionParameter_c[] result = new FunctionParameter_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static FunctionParameter_c [] getManyS_SPARMsOnR832(ParameterValue_c [] targets)
{
  return getManyS_SPARMsOnR832(targets, null);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR832(ParameterValue_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ParameterValue_c [] targetArray = new ParameterValue_c[1];
    targetArray[0] = target;
    return getManyS_SPARMsOnR832(targetArray, test, loadComponent);
  } else {
    FunctionParameter_c [] result = new FunctionParameter_c [0] ;
    return result ;
  }
  
}

public static FunctionParameter_c [] getManyS_SPARMsOnR832(ParameterValue_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SPARMsOnR832(target, null, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR832(ParameterValue_c target)
{
    return getManyS_SPARMsOnR832(target, null, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR832(ParameterValue_c target, boolean loadComponent)
{
    return getManyS_SPARMsOnR832(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<FunctionArgument_c> backPointer_RepresentsFunctionArgumentRepresents_R1016 = new ArrayList<FunctionArgument_c>();

public void setFunctionArgumentOrderInChildListR1016(FunctionArgument_c target, int index) {
	unrelateAcrossR1016From(target);
	FunctionArgument_c[] elements = FunctionArgument_c.getManyMSG_FAsOnR1016(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1016From((FunctionArgument_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1016To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1016To((FunctionArgument_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1016To(FunctionArgument_c target)
{
  if (target != null) {
    target.relateAcrossR1016To(this, true) ;
  }
}

public void relateAcrossR1016To(FunctionArgument_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1016To(this, notifyChanges) ;
  }
}

public void setBackPointerR1016To(FunctionArgument_c target)
{
  	synchronized (backPointer_RepresentsFunctionArgumentRepresents_R1016) {
		backPointer_RepresentsFunctionArgumentRepresents_R1016.add(target);
	}
}

public void unrelateAcrossR1016From(FunctionArgument_c target)
{
  if (target != null) {
    target.unrelateAcrossR1016From(this, true) ;
  }
}

public void unrelateAcrossR1016From(FunctionArgument_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1016From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1016To(FunctionArgument_c target)
{
  synchronized (backPointer_RepresentsFunctionArgumentRepresents_R1016) {
	    backPointer_RepresentsFunctionArgumentRepresents_R1016.remove(target);
	}
}

public static FunctionParameter_c getOneS_SPARMOnR1016(FunctionArgument_c [] targets)
{
    return getOneS_SPARMOnR1016(targets, null);
}

public static FunctionParameter_c getOneS_SPARMOnR1016(FunctionArgument_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SPARMOnR1016(targets, test, true);
}

public static FunctionParameter_c getOneS_SPARMOnR1016(FunctionArgument_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    FunctionParameter_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             FunctionParameter_c candidate_val = getOneS_SPARMOnR1016(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SPARMOnR1016(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static FunctionParameter_c getOneS_SPARMOnR1016(FunctionArgument_c target)
{
	return getOneS_SPARMOnR1016(target, true);
}
public static FunctionParameter_c getOneS_SPARMOnR1016(FunctionArgument_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsRepresentedByFunctionParameter != null){
		target.IsRepresentedByFunctionParameter.loadProxy();
	}
	}
    return target.IsRepresentedByFunctionParameter ;
  } else {
    return null;
  }
}

public static FunctionParameter_c [] getManyS_SPARMsOnR1016(FunctionArgument_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR1016(targets, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR1016(FunctionArgument_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new FunctionParameter_c[0];
  
  
  LinkedHashSet<FunctionParameter_c> elementsSet = new LinkedHashSet<FunctionParameter_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsRepresentedByFunctionParameter == null)
	  targets[i].loadProxy();
    FunctionParameter_c associate = targets[i].IsRepresentedByFunctionParameter;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  FunctionParameter_c[] result = new FunctionParameter_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static FunctionParameter_c [] getManyS_SPARMsOnR1016(FunctionArgument_c [] targets)
{
  return getManyS_SPARMsOnR1016(targets, null);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR1016(FunctionArgument_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionArgument_c [] targetArray = new FunctionArgument_c[1];
    targetArray[0] = target;
    return getManyS_SPARMsOnR1016(targetArray, test, loadComponent);
  } else {
    FunctionParameter_c [] result = new FunctionParameter_c [0] ;
    return result ;
  }
  
}

public static FunctionParameter_c [] getManyS_SPARMsOnR1016(FunctionArgument_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SPARMsOnR1016(target, null, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR1016(FunctionArgument_c target)
{
    return getManyS_SPARMsOnR1016(target, null, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR1016(FunctionArgument_c target, boolean loadComponent)
{
    return getManyS_SPARMsOnR1016(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Dimensions_c> backPointer_MayHaveDimensionsMayHave_R52 = new ArrayList<Dimensions_c>();

public void setDimensionsOrderInChildListR52(Dimensions_c target, int index) {
	unrelateAcrossR52From(target);
	Dimensions_c[] elements = Dimensions_c.getManyS_DIMsOnR52(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR52From((Dimensions_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR52To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR52To((Dimensions_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR52To(Dimensions_c target)
{
  if (target != null) {
    target.relateAcrossR52To(this, true) ;
  }
}

public void relateAcrossR52To(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR52To(this, notifyChanges) ;
  }
}

public void setBackPointerR52To(Dimensions_c target)
{
  	synchronized (backPointer_MayHaveDimensionsMayHave_R52) {
		backPointer_MayHaveDimensionsMayHave_R52.add(target);
	}
}

public void unrelateAcrossR52From(Dimensions_c target)
{
  if (target != null) {
    target.unrelateAcrossR52From(this, true) ;
  }
}

public void unrelateAcrossR52From(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR52From(this, notifyChanges) ;
  }
}

public void clearBackPointerR52To(Dimensions_c target)
{
  synchronized (backPointer_MayHaveDimensionsMayHave_R52) {
	    backPointer_MayHaveDimensionsMayHave_R52.remove(target);
	}
}

public static FunctionParameter_c getOneS_SPARMOnR52(Dimensions_c [] targets)
{
    return getOneS_SPARMOnR52(targets, null);
}

public static FunctionParameter_c getOneS_SPARMOnR52(Dimensions_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SPARMOnR52(targets, test, true);
}

public static FunctionParameter_c getOneS_SPARMOnR52(Dimensions_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    FunctionParameter_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             FunctionParameter_c candidate_val = getOneS_SPARMOnR52(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SPARMOnR52(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static FunctionParameter_c getOneS_SPARMOnR52(Dimensions_c target)
{
	return getOneS_SPARMOnR52(target, true);
}
public static FunctionParameter_c getOneS_SPARMOnR52(Dimensions_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.SpecifiesOccurrencesOfFunctionParameter ;
  } else {
    return null;
  }
}

public static FunctionParameter_c [] getManyS_SPARMsOnR52(Dimensions_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR52(targets, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR52(Dimensions_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new FunctionParameter_c[0];
  
  
  LinkedHashSet<FunctionParameter_c> elementsSet = new LinkedHashSet<FunctionParameter_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].SpecifiesOccurrencesOfFunctionParameter == null)
	  targets[i].loadProxy();
    FunctionParameter_c associate = targets[i].SpecifiesOccurrencesOfFunctionParameter;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  FunctionParameter_c[] result = new FunctionParameter_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static FunctionParameter_c [] getManyS_SPARMsOnR52(Dimensions_c [] targets)
{
  return getManyS_SPARMsOnR52(targets, null);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR52(Dimensions_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Dimensions_c [] targetArray = new Dimensions_c[1];
    targetArray[0] = target;
    return getManyS_SPARMsOnR52(targetArray, test, loadComponent);
  } else {
    FunctionParameter_c [] result = new FunctionParameter_c [0] ;
    return result ;
  }
  
}

public static FunctionParameter_c [] getManyS_SPARMsOnR52(Dimensions_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SPARMsOnR52(target, null, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR52(Dimensions_c target)
{
    return getManyS_SPARMsOnR52(target, null, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR52(Dimensions_c target, boolean loadComponent)
{
    return getManyS_SPARMsOnR52(target, null, loadComponent);
}


    
  
  
// referred to navigation

FunctionParameter_c backPointer_PrecedesFunctionParameterPrecedes_R54;

public void setFunctionParameterOrderInChildListR54(FunctionParameter_c target, int index) {
	unrelateAcrossR54FromPrecedes(target);
	FunctionParameter_c[] elements = FunctionParameter_c.getManyS_SPARMsOnR54Precedes(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR54FromPrecedes((FunctionParameter_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR54ToPrecedes(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR54ToPrecedes((FunctionParameter_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR54ToPrecedes(FunctionParameter_c target)
{
  if (target != null) {
    target.relateAcrossR54ToSucceeds(this, true) ;
  }
}

public void relateAcrossR54ToPrecedes(FunctionParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR54ToSucceeds(this, notifyChanges) ;
  }
}

public void setBackPointerR54ToPrecedes(FunctionParameter_c target)
{
    backPointer_PrecedesFunctionParameterPrecedes_R54 = target;
}

public void unrelateAcrossR54FromPrecedes(FunctionParameter_c target)
{
  if (target != null) {
    target.unrelateAcrossR54FromSucceeds(this, true) ;
  }
}

public void unrelateAcrossR54FromPrecedes(FunctionParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR54FromSucceeds(this, notifyChanges) ;
  }
}

public void clearBackPointerR54ToPrecedes(FunctionParameter_c target)
{
	if (target == backPointer_PrecedesFunctionParameterPrecedes_R54) {
		backPointer_PrecedesFunctionParameterPrecedes_R54 = null;
	}
}

public static FunctionParameter_c getOneS_SPARMOnR54Succeeds(FunctionParameter_c [] targets)
{
    return getOneS_SPARMOnR54Succeeds(targets, null);
}

public static FunctionParameter_c getOneS_SPARMOnR54Succeeds(FunctionParameter_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_SPARMOnR54Succeeds(targets, test, true);
}

public static FunctionParameter_c getOneS_SPARMOnR54Succeeds(FunctionParameter_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    FunctionParameter_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             FunctionParameter_c candidate_val = getOneS_SPARMOnR54Succeeds(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_SPARMOnR54Succeeds(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static FunctionParameter_c getOneS_SPARMOnR54Succeeds(FunctionParameter_c target)
{
	return getOneS_SPARMOnR54Succeeds(target, true);
}
public static FunctionParameter_c getOneS_SPARMOnR54Succeeds(FunctionParameter_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.SucceedsFunctionParameter ;
  } else {
    return null;
  }
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Succeeds(FunctionParameter_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_SPARMsOnR54Succeeds(targets, test, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Succeeds(FunctionParameter_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new FunctionParameter_c[0];
  
  
  LinkedHashSet<FunctionParameter_c> elementsSet = new LinkedHashSet<FunctionParameter_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].SucceedsFunctionParameter == null)
	  targets[i].loadProxy();
    FunctionParameter_c associate = targets[i].SucceedsFunctionParameter;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  FunctionParameter_c[] result = new FunctionParameter_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Succeeds(FunctionParameter_c [] targets)
{
  return getManyS_SPARMsOnR54Succeeds(targets, null);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Succeeds(FunctionParameter_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    FunctionParameter_c [] targetArray = new FunctionParameter_c[1];
    targetArray[0] = target;
    return getManyS_SPARMsOnR54Succeeds(targetArray, test, loadComponent);
  } else {
    FunctionParameter_c [] result = new FunctionParameter_c [0] ;
    return result ;
  }
  
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Succeeds(FunctionParameter_c target,
    ClassQueryInterface_c test)
{
    return getManyS_SPARMsOnR54Succeeds(target, null, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Succeeds(FunctionParameter_c target)
{
    return getManyS_SPARMsOnR54Succeeds(target, null, true);
}

public static FunctionParameter_c [] getManyS_SPARMsOnR54Succeeds(FunctionParameter_c target, boolean loadComponent)
{
    return getManyS_SPARMsOnR54Succeeds(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (IsDefinedForFunction == null) {          
      // R24
      Function_c relInst56372 = (Function_c) baseRoot.getInstanceList(Function_c.class).get(new Object[] {m_sync_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56372 == null) {
      			relInst56372 = (Function_c) Ooaofooa.getDefaultInstance().getInstanceList(Function_c.class).get(new Object[] {m_sync_id});
      		}
			if (relInst56372 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56372 = (Function_c) roots[i].getInstanceList(Function_c.class).get(new Object[] {m_sync_id});
					if (relInst56372 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56372 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56372) && !isProxy())) {
	      relInst56372.relateAcrossR24To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsTypedByDataType == null) {          
      // R26
      DataType_c relInst56373 = (DataType_c) baseRoot.getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56373 == null) {
      			relInst56373 = (DataType_c) Ooaofooa.getDefaultInstance().getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
      		}
			if (relInst56373 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56373 = (DataType_c) roots[i].getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
					if (relInst56373 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56373 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56373) && !isProxy())) {
	      relInst56373.relateAcrossR26To(this, notifyChanges);
	  }
	  }
	}
	          

	if (SucceedsFunctionParameter == null) {          
      // R54
      FunctionParameter_c relInst56374 = (FunctionParameter_c) baseRoot.getInstanceList(FunctionParameter_c.class).get(new Object[] {m_previous_sparm_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56374 == null) {
      			relInst56374 = (FunctionParameter_c) Ooaofooa.getDefaultInstance().getInstanceList(FunctionParameter_c.class).get(new Object[] {m_previous_sparm_id});
      		}
			if (relInst56374 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56374 = (FunctionParameter_c) roots[i].getInstanceList(FunctionParameter_c.class).get(new Object[] {m_previous_sparm_id});
					if (relInst56374 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56374 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56374) && !isProxy())) {
	      relInst56374.relateAcrossR54ToPrecedes(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R24
      // S_SYNC
		  inst=IsDefinedForFunction;
			unrelateAcrossR24From(IsDefinedForFunction, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R26
      // S_DT
		  inst=IsTypedByDataType;
			unrelateAcrossR26From(IsTypedByDataType, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R54
      // S_SPARM
		  inst=SucceedsFunctionParameter;
			unrelateAcrossR54FromSucceeds(SucceedsFunctionParameter, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final FunctionParameter_c inst = (FunctionParameter_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static FunctionParameter_c FunctionParameterInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		FunctionParameter_c result=findFunctionParameterInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,FunctionParameter_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findFunctionParameterInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static FunctionParameter_c findFunctionParameterInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				FunctionParameter_c x = (FunctionParameter_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static FunctionParameter_c FunctionParameterInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return FunctionParameterInstance(modelRoot,test,true);
  }
  
  public static FunctionParameter_c FunctionParameterInstance(ModelRoot modelRoot)
  {
	 return FunctionParameterInstance(modelRoot,null,true);
  }

  public static FunctionParameter_c [] FunctionParameterInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, FunctionParameter_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(FunctionParameter_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					FunctionParameter_c x = (FunctionParameter_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				FunctionParameter_c[] ret_set = new FunctionParameter_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new FunctionParameter_c[0];
			}		
		} 
  }
  public static FunctionParameter_c [] FunctionParameterInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  FunctionParameterInstances(modelRoot,test,true);
  }
  public static FunctionParameter_c [] FunctionParameterInstances(ModelRoot modelRoot)
  {
	return FunctionParameterInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Function Parameter.dispose call: ";
	ParameterValue_c testR832Inst = ParameterValue_c.getOneV_PVLOnR832(this, false);

	if ( testR832Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "832 ";	
	}
	FunctionArgument_c testR1016Inst = FunctionArgument_c.getOneMSG_FAOnR1016(this, false);

	if ( testR1016Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1016 ";	
	}
	Function_c testR24Inst = Function_c.getOneS_SYNCOnR24(this, false);

	if ( testR24Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "24 ";
	}
	DataType_c testR26Inst = DataType_c.getOneS_DTOnR26(this, false);

	if ( testR26Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "26 ";
	}
	Dimensions_c testR52Inst = Dimensions_c.getOneS_DIMOnR52(this, false);

	if ( testR52Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "52 ";	
	}
	FunctionParameter_c testR54Inst = FunctionParameter_c.getOneS_SPARMOnR54Precedes(this, false);

	if ( testR54Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "54 ";	
	}
	 testR54Inst = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(this, false);

	if ( testR54Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "54 ";
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Function Parameter", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("sparm_id")){
         return true;
      }
      if(attributeName.equals("previous_sparm_id")){
         return true;
      }
      if(attributeName.equals("dt_id")){
         return true;
      }
      if(attributeName.equals("sync_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getSparm_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getSparm_idLongBased()
  {
    if(m_sparm_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_sparm_id)){
    	return 0xfffffff & m_sparm_id.getLeastSignificantBits();
    }
    return m_sparm_idLongBased ;
  }
  public java.util.UUID getSparm_id()
  {
    return m_sparm_id ;
  }


  public void setSparm_id(java.util.UUID newValue)
  {
   m_sparm_id = IdAssigner.preprocessUUID(newValue);
  }
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getBy_ref()
  {
    return m_by_ref ;
  }


  public void setBy_ref(int newValue)
  {
    if(m_by_ref == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "By_ref", new Integer(m_by_ref), new Integer(newValue),true);

   m_by_ref = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDimensions()
  {
    return m_dimensions ;
  }


  public void setDimensions(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dimensions)){
	        return;
	    }
	}else if(m_dimensions != null){
	    if(m_dimensions.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dimensions", m_dimensions, newValue,true); 
   m_dimensions = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPrevious_sparm_idLongBased()
  {
    if ( SucceedsFunctionParameter != null )
    {
      return SucceedsFunctionParameter.getSparm_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPrevious_sparm_id()
  {
    if ( SucceedsFunctionParameter != null )
    {
      return SucceedsFunctionParameter.getSparm_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getPrevious_sparm_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_previous_sparm_id) )
      return m_previous_sparm_id;
    else
      return getPrevious_sparm_id();
  }
  
  public void setPrevious_sparm_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_previous_sparm_id)){
	        return;
	    }
	}else if(m_previous_sparm_id != null){
	    if(m_previous_sparm_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Previous_sparm_id", m_previous_sparm_id, newValue,true); 
   m_previous_sparm_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDt_idLongBased()
  {
    if ( IsTypedByDataType != null )
    {
      return IsTypedByDataType.getDt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDt_id()
  {
    if ( IsTypedByDataType != null )
    {
      return IsTypedByDataType.getDt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dt_id) )
      return m_dt_id;
    else
      return getDt_id();
  }
  
  public void setDt_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dt_id)){
	        return;
	    }
	}else if(m_dt_id != null){
	    if(m_dt_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dt_id", m_dt_id, newValue,true); 
   m_dt_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSync_idLongBased()
  {
    if ( IsDefinedForFunction != null )
    {
      return IsDefinedForFunction.getSync_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSync_id()
  {
    if ( IsDefinedForFunction != null )
    {
      return IsDefinedForFunction.getSync_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSync_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sync_id) )
      return m_sync_id;
    else
      return getSync_id();
  }
  
  public void setSync_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_sync_id)){
	        return;
	    }
	}else if(m_sync_id != null){
	    if(m_sync_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Sync_id", m_sync_id, newValue,true); 
   m_sync_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Function Parameter", //$NON-NLS-1$
	  " Operation entered: Function Parameter::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     FunctionParameter_c [] objs = FunctionParameter_c.FunctionParameterInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Function Parameter", //$NON-NLS-1$
	  " Operation entered: Function Parameter::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class FunctionParameter_c_test56376_c implements ClassQueryInterface_c
    {
	  FunctionParameter_c_test56376_c( java.util.UUID            p56377 ) {
	  m_p56377 = p56377;
	  }
	  private java.util.UUID             m_p56377; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionParameter_c selected = (FunctionParameter_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSparm_id().equals(m_p56377));
	      return retval;
	  }
    }

    FunctionParameter_c [] objs56375 = 
    FunctionParameter_c.FunctionParameterInstances(modelRoot, new FunctionParameter_c_test56376_c(getSparm_id())) ;

    if ( (  (objs56375.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Parameter", //$NON-NLS-1$
           "Consistency: Object: Function Parameter: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56375.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Parameter: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56375.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56375.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Parameter", //$NON-NLS-1$
           "Consistency: Object: Function Parameter: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56375.length )  + " SParm_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Parameter: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56375.length )  + " SParm_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Function Parameter is a referring class in association: rel.Numb = 54
          // The participating class is: Function Parameter
    class FunctionParameter_c_test56381_c implements ClassQueryInterface_c
    {
	  FunctionParameter_c_test56381_c( java.util.UUID            p56382 ) {
	  m_p56382 = p56382;
	  }
	  private java.util.UUID             m_p56382; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionParameter_c selected = (FunctionParameter_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSparm_id().equals(m_p56382));
	      return retval;
	  }
    }

    FunctionParameter_c [] objs56380 = 
    FunctionParameter_c.FunctionParameterInstances(modelRoot, new FunctionParameter_c_test56381_c(getPrevious_sparm_id())) ;

    if ( (  (objs56380.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Parameter", //$NON-NLS-1$
           "Consistency: Object: Function Parameter: Association: 54: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56380.length )  + " Previous_SParm_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Parameter: Association: 54: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56380.length )  + " Previous_SParm_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Function Parameter is a referring class in association: rel.Numb = 26
          // The participating class is: Data Type
    class DataType_c_test56384_c implements ClassQueryInterface_c
    {
	  DataType_c_test56384_c( java.util.UUID            p56385 ) {
	  m_p56385 = p56385;
	  }
	  private java.util.UUID             m_p56385; 
	  public boolean evaluate (Object candidate)
	  {
	      DataType_c selected = (DataType_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p56385));
	      return retval;
	  }
    }

    DataType_c [] objs56383 = 
    DataType_c.DataTypeInstances(modelRoot, new DataType_c_test56384_c(getDt_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56383.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Parameter", //$NON-NLS-1$
           "Consistency: Object: Function Parameter: Association: 26: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56383.length )  + " DT_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Parameter: Association: 26: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56383.length )  + " DT_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Function Parameter is a referring class in association: rel.Numb = 24
          // The participating class is: Function
    class Function_c_test56387_c implements ClassQueryInterface_c
    {
	  Function_c_test56387_c( java.util.UUID            p56388 ) {
	  m_p56388 = p56388;
	  }
	  private java.util.UUID             m_p56388; 
	  public boolean evaluate (Object candidate)
	  {
	      Function_c selected = (Function_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSync_id().equals(m_p56388));
	      return retval;
	  }
    }

    Function_c [] objs56386 = 
    Function_c.FunctionInstances(modelRoot, new Function_c_test56387_c(getSync_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56386.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Parameter", //$NON-NLS-1$
           "Consistency: Object: Function Parameter: Association: 24: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56386.length )  + " Sync_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Parameter: Association: 24: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56386.length )  + " Sync_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Function Parameter is a participating class in association: rel.Numb = 54
             // Object: Function Parameter
    class FunctionParameter_c_test56390_c implements ClassQueryInterface_c
    {
	  FunctionParameter_c_test56390_c( java.util.UUID            p56391 ) {
	  m_p56391 = p56391;
	  }
	  private java.util.UUID             m_p56391; 
	  public boolean evaluate (Object candidate)
	  {
	      FunctionParameter_c selected = (FunctionParameter_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPrevious_sparm_id().equals(m_p56391));
	      return retval;
	  }
    }

    FunctionParameter_c [] objs56389 = 
    FunctionParameter_c.FunctionParameterInstances(modelRoot, new FunctionParameter_c_test56390_c(getSparm_id())) ;

    if ( (  (objs56389.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Function Parameter", //$NON-NLS-1$
           "Consistency: Object: Function Parameter: Association: 54: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56389.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Function Parameter: Association: 54: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56389.length )  , e); 
      }
      retval = false;

    }

          // Function Parameter is a participating class in association: rel.Numb = 832
             // Object: Parameter Value
          // Function Parameter is a participating class in association: rel.Numb = 1016
             // Object: Function Argument
          // Function Parameter is a participating class in association: rel.Numb = 52
             // Object: Dimensions
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
Function_c v_func = Function_c.getOneS_SYNCOnR24(this);


this.unrelateAcrossR24From(v_func);


DataType_c v_dt = DataType_c.getOneS_DTOnR26(this);


this.unrelateAcrossR26From(v_dt);


FunctionParameter_c v_successor = FunctionParameter_c.getOneS_SPARMOnR54Precedes(this);


FunctionParameter_c v_predecessor = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(this);


if ( (  !  (v_successor == null)) )
{

this.unrelateAcrossR54FromPrecedes(v_successor);



}

if ( (  !  (v_predecessor == null)) )
{

this.unrelateAcrossR54FromSucceeds(v_predecessor);



}

if ( (  (v_successor != null) &&   (v_predecessor != null)) )
{

if (v_successor != null) {
  v_successor.relateAcrossR54ToSucceeds(v_predecessor);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

ParameterValue_c [] v_pvs = ParameterValue_c.getManyV_PVLsOnR832(this);


ParameterValue_c  v_pv = null;
for ( int i54977 = 0; i54977 < v_pvs.length; i54977++)
{
  v_pv = v_pvs[i54977] ;

this.unrelateAcrossR832From(v_pv);



}

Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR52(this);


Dimensions_c  v_dim = null;
for ( int i54978 = 0; i54978 < v_dims.length; i54978++)
{
  v_dim = v_dims[i54978] ;

this.unrelateAcrossR52From(v_dim);


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
Function_c v_function = Function_c.getOneS_SYNCOnR24(this);


if (v_function != null) {
v_function.Addparametertoorder(			    
getSparm_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


boolean      v_isInGenericPkg = false ;


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(Function_c.getOneS_SYNCOnR24(this)));


if ( (  (v_pkg != null)) )
{

v_isInGenericPkg = true ;



}

if ( (v_isInGenericPkg) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_pkg);


java.util.UUID         v_def_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_def_dt_id = v_system.Getcoretypeid(			    
"integer") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_def_dt_id);


DataType_c v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR26To(v_def_dt);



}


}

else
{

Domain_c v_dom = Domain_c.DomainInstance(modelRoot) ;


Component_c v_component = Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_dom));


if ( (  (v_component != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(v_component));


java.util.UUID         v_def_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_def_dt_id = v_system.Getcoretypeid(			    
"integer") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_def_dt_id);


DataType_c v_def_dt = DataType_c.getOneS_DTOnR8001(v_pe);


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR26To(v_def_dt);



}


}

else
{

  class DataType_test55674_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals("integer") ;
	}
  }
DataType_c v_def_dt = DataType_c.getOneS_DTOnR14(v_dom, new DataType_test55674_c());


if ( (  (v_def_dt != null)) )
{

  this.relateAcrossR26To(v_def_dt);



}


}


}

String       v_name = Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Parameter"			    
,Converttoinstance()) ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setName( v_success) ;



}

else
{

Dispose() ;



}


   } // End initialize
  public  boolean      Isallowedtype(final String       p_Typename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Isallowedtype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(Function_c.getOneS_SYNCOnR24(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

return v_packageableElem.Isallowedtype(			    
false			    
,p_Typename);



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR23(Function_c.getOneS_SYNCOnR24(this));


if ( (  (v_domain != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(v_domain);


if ( (  (v_system != null)) )
{

return DataType_c.Isallowedparametertype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename);



}

else
{

boolean      v_result = DataType_c.Isallowedparametertype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename) ;


if ( (  !v_result) )
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


return Util_c.Isallowedparametertype(			    
v_system.Converttoinstance()			    
,p_Typename);



}

else
{

return v_result;



}


}


}

return false;



}


   } // End isAllowedType
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  Object Getvalue(final java.util.UUID         p_Stack_frame_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Getvalue") ; 
               final ModelRoot modelRoot = getModelRoot();
return Gd_c.Null_instance();



   } // End getValue
  public  void Setvalue(final java.util.UUID         p_Member_id,final java.util.UUID         p_Stack_frame_id,final Object p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Setvalue") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End setValue
  public  void Resolvedatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Resolvedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dtProxy = DataType_c.getOneS_DTOnR26(this);


if ( (  (v_dtProxy != null) &&   !Util_c.Isproxy(			    
Converttoinstance())) )
{

String       v_name = v_dtProxy.getName() ;


if (v_dtProxy != null) {
v_dtProxy.unrelateAcrossR26From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(Function_c.getOneS_SYNCOnR24(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

java.util.UUID         v_id = v_packageableElem.Resolvedatatyperelativetoself(			    
"integer"			    
,v_name) ;


  class DataType_test55675_c implements ClassQueryInterface_c
  {
	DataType_test55675_c( java.util.UUID         p55676 ) {
		m_p55676 = p55676;
	}
	private java.util.UUID         m_p55676;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p55676) ;
	}
  }
DataType_c v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_package)), new DataType_test55675_c(v_id));


if ( (  (v_resolvedDt == null)) )
{

  class DataType_test55677_c implements ClassQueryInterface_c
  {
	DataType_test55677_c( java.util.UUID         p55678 ) {
		m_p55678 = p55678;
	}
	private java.util.UUID         m_p55678;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p55678) ;
	}
  }
v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_component)), new DataType_test55677_c(v_id));



}

if (   (v_resolvedDt != null) )
{

if (v_resolvedDt != null) {
  v_resolvedDt.relateAcrossR26To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR301(FunctionPackageInDomain_c.getOnePL_FPIDOnR301(FunctionPackage_c.getOneS_FPKOnR31(FunctionInPackage_c.getOneS_FIPOnR31(Function_c.getOneS_SYNCOnR24(this)))));


java.util.UUID         v_id = v_domain.Resolvedatatyperelativetoself(			    
"integer"			    
,v_name) ;


  class DataType_test55679_c implements ClassQueryInterface_c
  {
	DataType_test55679_c( java.util.UUID         p55680 ) {
		m_p55680 = p55680;
	}
	private java.util.UUID         m_p55680;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55680)) ;
	}
  }
DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55679_c(v_id));


if ( (  (v_resolvedDT == null)) )
{

SystemModel_c v_domSys = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test55681_c implements ClassQueryInterface_c
  {
	DataType_test55681_c( java.util.UUID         p55682 ) {
		m_p55682 = p55682;
	}
	private java.util.UUID         m_p55682;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p55682)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_domSys), new DataType_test55681_c(v_id));


if (   (v_resolvedDT == null) &&   (v_domSys != null) && v_domSys.getUseglobals() )
{

  class PackageableElement_test55683_c implements ClassQueryInterface_c
  {
	PackageableElement_test55683_c( java.util.UUID         p55684 ) {
		m_p55684 = p55684;
	}
	private java.util.UUID         m_p55684;
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(m_p55684) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_domSys), new PackageableElement_test55683_c(v_id));


v_resolvedDT = DataType_c.getOneS_DTOnR8001(v_pe);



}


}

if ( (  (v_resolvedDT != null)) )
{

if (v_resolvedDT != null) {
  v_resolvedDT.relateAcrossR26To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End resolveDatatype
  public  int          Getdimensionscnt()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Getdimensionscnt") ; 
               final ModelRoot modelRoot = getModelRoot();
Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR52(this);


int          v_dimensions =   (v_dims.length) ;


return v_dimensions;



   } // End getDimensionsCnt
  public  void Resizedimensions(final int          p_Dimension,final int          p_Elementcount,final int          p_Numdimensions)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Resizedimensions") ; 
               final ModelRoot modelRoot = getModelRoot();
while ( (p_Numdimensions > Getdimensionscnt()) )
{

Dimensions_c v_dim = new Dimensions_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dim));


if (v_dim != null) {
  v_dim.setDimensioncount( Getdimensionscnt()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dim != null) {
  v_dim.relateAcrossR52To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

while ( (p_Numdimensions < Getdimensionscnt()) )
{

  class Dimensions_test55685_c implements ClassQueryInterface_c
  {
	Dimensions_test55685_c( int          p55686 ) {
		m_p55686 = p55686;
	}
	private int          m_p55686;
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == (m_p55686 - 1)) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR52(this, new Dimensions_test55685_c(Getdimensionscnt()));


if (v_dim != null) {
v_dim.unrelateAcrossR52From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( (p_Numdimensions > 0) )
{

  class Dimensions_test55687_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == p_Dimension) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR52(this, new Dimensions_test55687_c());


if ( (v_dim.getElementcount() != p_Elementcount) )
{

if (v_dim != null) {
  v_dim.setElementcount( p_Elementcount) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


   } // End resizeDimensions
  public  void Moveup()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Moveup") ; 
               final ModelRoot modelRoot = getModelRoot();
Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


FunctionParameter_c v_prev_attr = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(this);


FunctionParameter_c v_prev_prev_attr = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(v_prev_attr);


FunctionParameter_c v_next_attr = FunctionParameter_c.getOneS_SPARMOnR54Precedes(this);


if ( (  (v_prev_prev_attr != null)) )
{

if (v_prev_attr != null) {
v_prev_attr.unrelateAcrossR54FromSucceeds(v_prev_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (  (v_next_attr != null)) )
{

if (v_next_attr != null) {
v_next_attr.unrelateAcrossR54FromSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

this.unrelateAcrossR54FromSucceeds(v_prev_attr);


if ( (  (v_prev_prev_attr != null)) )
{

  this.relateAcrossR54ToSucceeds(v_prev_prev_attr);



}

if ( (  (v_next_attr == null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}

if (v_prev_attr != null) {
  v_prev_attr.relateAcrossR54ToSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (  (v_next_attr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;


if (v_next_attr != null) {
  v_next_attr.relateAcrossR54ToSucceeds(v_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End moveUp
  public  void Movedown()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Movedown") ; 
               final ModelRoot modelRoot = getModelRoot();
Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


FunctionParameter_c v_next_attr = FunctionParameter_c.getOneS_SPARMOnR54Precedes(this);


FunctionParameter_c v_prev_attr = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(this);


FunctionParameter_c v_next_next_attr = FunctionParameter_c.getOneS_SPARMOnR54Precedes(v_next_attr);


if ( (  (v_next_next_attr != null)) )
{

if (v_next_next_attr != null) {
v_next_next_attr.unrelateAcrossR54FromSucceeds(v_next_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (  (v_prev_attr != null)) )
{

this.unrelateAcrossR54FromSucceeds(v_prev_attr);



}

if (v_next_attr != null) {
v_next_attr.unrelateAcrossR54FromSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if ( (  (v_prev_attr != null)) )
{

if (v_next_attr != null) {
  v_next_attr.relateAcrossR54ToSucceeds(v_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if ( (  (v_next_next_attr == null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}

  this.relateAcrossR54ToSucceeds(v_next_attr);


if ( (  (v_next_next_attr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;


if (v_next_next_attr != null) {
  v_next_next_attr.relateAcrossR54ToSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End moveDown
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("can")) )
{

if ( (p_Value.equals("move up")) )
{

FunctionParameter_c v_prev_attr = FunctionParameter_c.getOneS_SPARMOnR54Succeeds(this);


return   (v_prev_attr != null);



}

else if ( (p_Value.equals("move down")) )
{

FunctionParameter_c v_next_attr = FunctionParameter_c.getOneS_SPARMOnR54Precedes(this);


return   (v_next_attr != null);



}


}

return false;



   } // End actionFilter
  public  boolean      Canrefertodatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Canrefertodatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR26(this);


if ( (  (v_dt != null)) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(Function_c.getOneS_SYNCOnR24(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

return v_packageableElem.Canrefertodatatype(			    
v_dt.getDt_id()			    
,v_dt.getName());



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR23(Function_c.getOneS_SYNCOnR24(this));


DataTypePackage_c v_dtPkg = DataTypePackage_c.getOneS_DPKOnR39(DataTypeInPackage_c.getOneS_DIPOnR39(v_dt));


if ( (  !v_dtPkg.Isdomainlevel()) )
{

if ( (v_domain.Participatesinsystem()) )
{

return true;



}

else
{

return false;



}


}

else
{

Domain_c v_dtDomain = Domain_c.getOneS_DOMOnR14(v_dt);


if ( (v_dtDomain == v_domain) )
{

return true;



}


}


}


}

return false;



   } // End canReferToDataType
  public  boolean      Isreferringtodefaultdatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Isreferringtodefaultdatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR26(this);


String       v_elementType = Util_c.Getsimpleclassname(			    
Converttoinstance()) ;


if ( (v_dt.getName().equals(DataType_c.Getdefaultdatatypename(modelRoot			    
,v_elementType))) )
{

return true;



}

return false;



   } // End isReferringToDefaultDataType
  public  boolean      Canusedatatype(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Canusedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(Function_c.getOneS_SYNCOnR24(this));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

  class SearchResultSet_test55688_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test55688_c());


  class DataType_test55689_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet)), new DataType_test55689_c());


if (   (v_component != null) )
{

  class ComponentResultSet_test55690_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test55690_c());


  class DataType_test55691_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet)), new DataType_test55691_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR23(Function_c.getOneS_SYNCOnR24(this));


if ( (v_domain.Participatesinsystem()) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test55692_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test55692_c());


if (   (v_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class PackageableElement_test55693_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		PackageableElement_c selected = (PackageableElement_c)candidate;
		return selected.getElement_id().equals(p_Id) ;
	}
  }
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system), new PackageableElement_test55693_c());


v_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_dt == null)) )
{

  class DataType_test55694_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55694_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}


}

else
{

  class DataType_test55695_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test55695_c());


if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}


}

return false;



}


   } // End canUseDataType
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Function Parameter", " Operation entered: FunctionParameter::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
Function_c v_function = Function_c.getOneS_SYNCOnR24(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_function));


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

FunctionParameter_c [] v_parameters = FunctionParameter_c.getManyS_SPARMsOnR24(v_function);


FunctionParameter_c  v_parameter = null;
for ( int i54979 = 0; i54979 < v_parameters.length; i54979++)
{
  v_parameter = v_parameters[i54979] ;

if ( (v_parameter != this && v_parameter.getName().equals(getName())) )
{

IntegrityManager_c.Createissue(modelRoot			    
,"Found another parameter under the same function with a " + "matching name."			    
,Converttoinstance()			    
,getSync_id()			    
,getName()			    
,v_function.Getpath() + "::" + getName()			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return FunctionParameterActionFilter.getSingleton();
    }
	  return null;
  }
} // end Function Parameter
