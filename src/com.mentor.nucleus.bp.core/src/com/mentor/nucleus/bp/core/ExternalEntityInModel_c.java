      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ExternalEntityInModel_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_EXTERNAL_ENTITY_IN_MODEL extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ExternalEntityInModel_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ExternalEntityInModel_c(ModelRoot modelRoot,
       java.util.UUID         p_m_eemod_id,
       java.util.UUID         p_m_ee_id,
       int          p_m_modl_typ,
       java.util.UUID         p_m_ss_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_eemod_id = IdAssigner.preprocessUUID(p_m_eemod_id);
       //extract 28 bit value only            
       m_eemod_idLongBased = 0xfffffff & p_m_eemod_id.getLeastSignificantBits();
       m_modl_typ = p_m_modl_typ;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
    setUniqueId(m_eemod_id);
    Object [] key = {m_eemod_id,m_ee_id};
    addInstanceToMap(key);
  }
  static public ExternalEntityInModel_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_eemod_id,
       java.util.UUID         p_m_ee_id,
       int          p_m_modl_typ,
       java.util.UUID         p_m_ss_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ExternalEntityInModel_c.class);
      ExternalEntityInModel_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_eemod_id,p_m_ee_id};
          new_inst = (ExternalEntityInModel_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_eemod_id = IdAssigner.preprocessUUID(p_m_eemod_id);
       //extract 28 bit value only            
       new_inst.m_eemod_idLongBased = 0xfffffff & p_m_eemod_id.getLeastSignificantBits();
       new_inst.m_modl_typ = p_m_modl_typ;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ExternalEntityInModel_c(modelRoot,
p_m_eemod_id,
p_m_ee_id,
p_m_modl_typ,
p_m_ss_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ExternalEntityInModel_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_eemod_id,
       java.util.UUID         p_m_ee_id,
       int          p_m_modl_typ,
       java.util.UUID         p_m_ss_id){
    InstanceList instances = modelRoot.getInstanceList(ExternalEntityInModel_c.class);
    ExternalEntityInModel_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_eemod_id
        ,
        p_m_ee_id
            };
        source = (ExternalEntityInModel_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_eemod_id = IdAssigner.preprocessUUID(p_m_eemod_id);
       //extract 28 bit value only            
       source.m_eemod_idLongBased = 0xfffffff & p_m_eemod_id.getLeastSignificantBits();
       source.m_modl_typ = p_m_modl_typ;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    ExternalEntityInModel_c new_inst = new ExternalEntityInModel_c(modelRoot,
p_m_eemod_id,
p_m_ee_id,
p_m_modl_typ,
p_m_ss_id
);
    return new_inst;
  }
  public ExternalEntityInModel_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_eemod_id = idAssigner.createUUID();
     m_ss_id = IdAssigner.NULL_UUID;   
     m_ee_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_eemod_id);
    Object [] key = {m_eemod_id,m_ee_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_eemod_id,m_ee_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_eemod_id !=  p_newKey ){
	
		m_eemod_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof ExternalEntityInModel_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ExternalEntityInModel_c)) {
           return false;
       }
       
       ExternalEntityInModel_c me = (ExternalEntityInModel_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getEemod_id()) || IdAssigner.NULL_UUID.equals(((ExternalEntityInModel_c)elem).getEemod_id())) && this != elem)) {
      	return false;
      }
      if (!getEemod_id().equals(((ExternalEntityInModel_c)elem).getEemod_id())) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getEe_id()) || IdAssigner.NULL_UUID.equals(((ExternalEntityInModel_c)elem).getEe_id())) && this != elem)) {
      	return false;
      }
      if (!getEe_id().equals(((ExternalEntityInModel_c)elem).getEe_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ExternalEntityInModel_c)) {
           return false;
       }
       
       ExternalEntityInModel_c me = (ExternalEntityInModel_c)elem;
      if (!getEemod_id().equals(((ExternalEntityInModel_c)elem).getEemod_id())) return false;
      if (!getEe_idCachedValue().equals(((ExternalEntityInModel_c)elem).getEe_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_eemod_id ;
  private long m_eemod_idLongBased ;
  private int          m_modl_typ ;
  private java.util.UUID         m_ss_id ;
  private java.util.UUID         m_ee_id ;
      
// declare association references from this class
  
  
    
// referring navigation

Subsystem_c IsAPresenceOfAnAnExternalEntityInSubsystem ;
public void relateAcrossR7To(Subsystem_c target)
{
	relateAcrossR7To(target, true);
}
public void relateAcrossR7To(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsAPresenceOfAnAnExternalEntityInSubsystem) return;  // already related

    if ( IsAPresenceOfAnAnExternalEntityInSubsystem != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsAPresenceOfAnAnExternalEntityInSubsystem != null) {
        UmlProblem.removeXtUMLProblem(this, IsAPresenceOfAnAnExternalEntityInSubsystem);
    
        IsAPresenceOfAnAnExternalEntityInSubsystem.clearBackPointerR7To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ExternalEntityInModel_c.relateAcrossR7To(Subsystem_c target)", 
			"Relate performed across R7 from External Entity in Model to Subsystem without unrelate of prior instance.");  
		}
    }
                
    	IsAPresenceOfAnAnExternalEntityInSubsystem = target ;
        m_ss_id = target.getSs_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR7To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "7", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR7From(Subsystem_c target)
{
	unrelateAcrossR7From(target, true);
}
public void unrelateAcrossR7From(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsAPresenceOfAnAnExternalEntityInSubsystem == null) return;  // already unrelated
	
	if (target != IsAPresenceOfAnAnExternalEntityInSubsystem) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R7", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR7To(this);
    }
    

      if(IsAPresenceOfAnAnExternalEntityInSubsystem != null) {
      
        m_ss_id = IsAPresenceOfAnAnExternalEntityInSubsystem.getSs_id();
        IsAPresenceOfAnAnExternalEntityInSubsystem = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "7", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ExternalEntityInModel_c getOneS_EEMOnR7(Subsystem_c [] targets)
{
    return getOneS_EEMOnR7(targets, null);
}

public static ExternalEntityInModel_c getOneS_EEMOnR7(Subsystem_c [] targets, ClassQueryInterface_c test)
{
    ExternalEntityInModel_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_EEMOnR7(targets[i], test);
        }
    }

    return ret_val;
}

public static ExternalEntityInModel_c getOneS_EEMOnR7(Subsystem_c target)
{
  return getOneS_EEMOnR7(target, null);
}

public static ExternalEntityInModel_c getOneS_EEMOnR7(Subsystem_c target, boolean loadComponent)
{
    return getOneS_EEMOnR7(target.getModelRoot(), target, null, loadComponent);
}

public static ExternalEntityInModel_c getOneS_EEMOnR7(Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_EEMOnR7(target.getModelRoot(), target, test);
  }
  return null;
}

public static ExternalEntityInModel_c getOneS_EEMOnR7(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
	return getOneS_EEMOnR7(modelRoot, target, test, true);
}

public static ExternalEntityInModel_c getOneS_EEMOnR7(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  ExternalEntityInModel_c result = null;
  
  result=find_getOneS_EEMOnR7(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,ExternalEntityInModel_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneS_EEMOnR7(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static ExternalEntityInModel_c find_getOneS_EEMOnR7(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsExternalEntityInModelContains_R7) {
	    for ( int i = 0; i < target.backPointer_ContainsExternalEntityInModelContains_R7.size(); ++i ) {
	      ExternalEntityInModel_c source = (ExternalEntityInModel_c)target.backPointer_ContainsExternalEntityInModelContains_R7.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR7(Subsystem_c [] targets)
{
  return getManyS_EEMsOnR7(targets, null);
}
public static ExternalEntityInModel_c [] getManyS_EEMsOnR7(Subsystem_c [] targets, boolean loadComponent)
{
  return getManyS_EEMsOnR7(targets, null, loadComponent);
}
public static ExternalEntityInModel_c [] getManyS_EEMsOnR7(Subsystem_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_EEMsOnR7(targets, test, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR7(Subsystem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ExternalEntityInModel_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ExternalEntityInModel_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(ExternalEntityInModel_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsExternalEntityInModelContains_R7) {
	    for (int j = 0; j < targets[i].backPointer_ContainsExternalEntityInModelContains_R7.size(); ++j) {
	      ExternalEntityInModel_c source = (ExternalEntityInModel_c)targets[i].backPointer_ContainsExternalEntityInModelContains_R7.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ExternalEntityInModel_c[] ret_set = new ExternalEntityInModel_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ExternalEntityInModel_c[0];
  }
  }

public static ExternalEntityInModel_c [] getManyS_EEMsOnR7(Subsystem_c target)
{
  return getManyS_EEMsOnR7(target, null);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR7(Subsystem_c target, boolean loadComponent)
{
  return getManyS_EEMsOnR7(target, null, loadComponent);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR7(Subsystem_c target, ClassQueryInterface_c test)
{
	return getManyS_EEMsOnR7(target, test, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR7(Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ExternalEntityInModel_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ExternalEntityInModel_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsExternalEntityInModelContains_R7) {
    for (int i = 0; i < target.backPointer_ContainsExternalEntityInModelContains_R7.size(); ++i) {
      ExternalEntityInModel_c source = (ExternalEntityInModel_c)target.backPointer_ContainsExternalEntityInModelContains_R7.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ExternalEntityInModel_c[] ret_set = new ExternalEntityInModel_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ExternalEntityInModel_c[0];
	}
  }


  
    
// referring navigation

ExternalEntity_c IsAPresenceInSubsystemModelOfExternalEntity ;
public void relateAcrossR9To(ExternalEntity_c target)
{
	relateAcrossR9To(target, true);
}
public void relateAcrossR9To(ExternalEntity_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsAPresenceInSubsystemModelOfExternalEntity) return;  // already related

    if ( IsAPresenceInSubsystemModelOfExternalEntity != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsAPresenceInSubsystemModelOfExternalEntity != null) {
    
        IsAPresenceInSubsystemModelOfExternalEntity.clearBackPointerR9To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ExternalEntityInModel_c.relateAcrossR9To(ExternalEntity_c target)", 
			"Relate performed across R9 from External Entity in Model to External Entity without unrelate of prior instance.");  
		}
    }
                
    	IsAPresenceInSubsystemModelOfExternalEntity = target ;
        if(IdAssigner.NULL_UUID.equals(target.getEe_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_ee_id = target.getEe_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR9To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "9", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR9From(ExternalEntity_c target)
{
	unrelateAcrossR9From(target, true);
}
public void unrelateAcrossR9From(ExternalEntity_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsAPresenceInSubsystemModelOfExternalEntity == null) return;  // already unrelated
	
	if (target != IsAPresenceInSubsystemModelOfExternalEntity) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R9", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR9To(this);
    }
    

      if(IsAPresenceInSubsystemModelOfExternalEntity != null) {
      
        m_ee_id = IsAPresenceInSubsystemModelOfExternalEntity.getEe_id();
        if(IdAssigner.NULL_UUID.equals(m_ee_id))
        {
          m_ee_id = IsAPresenceInSubsystemModelOfExternalEntity.getEe_idCachedValue();
        }       
        IsAPresenceInSubsystemModelOfExternalEntity = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "9", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ExternalEntityInModel_c getOneS_EEMOnR9(ExternalEntity_c [] targets)
{
    return getOneS_EEMOnR9(targets, null);
}

public static ExternalEntityInModel_c getOneS_EEMOnR9(ExternalEntity_c [] targets, ClassQueryInterface_c test)
{
    ExternalEntityInModel_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_EEMOnR9(targets[i], test);
        }
    }

    return ret_val;
}

public static ExternalEntityInModel_c getOneS_EEMOnR9(ExternalEntity_c target)
{
  return getOneS_EEMOnR9(target, null);
}

public static ExternalEntityInModel_c getOneS_EEMOnR9(ExternalEntity_c target, boolean loadComponent)
{
    return getOneS_EEMOnR9(target.getModelRoot(), target, null, loadComponent);
}

public static ExternalEntityInModel_c getOneS_EEMOnR9(ExternalEntity_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_EEMOnR9(target.getModelRoot(), target, test);
  }
  return null;
}

public static ExternalEntityInModel_c getOneS_EEMOnR9(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test)
{
	return getOneS_EEMOnR9(modelRoot, target, test, true);
}

public static ExternalEntityInModel_c getOneS_EEMOnR9(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_EEMOnR9(modelRoot,target,test);
}
private static ExternalEntityInModel_c find_getOneS_EEMOnR9(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9) {
	    for ( int i = 0; i < target.backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9.size(); ++i ) {
	      ExternalEntityInModel_c source = (ExternalEntityInModel_c)target.backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR9(ExternalEntity_c [] targets)
{
  return getManyS_EEMsOnR9(targets, null);
}
public static ExternalEntityInModel_c [] getManyS_EEMsOnR9(ExternalEntity_c [] targets, boolean loadComponent)
{
  return getManyS_EEMsOnR9(targets, null, loadComponent);
}
public static ExternalEntityInModel_c [] getManyS_EEMsOnR9(ExternalEntity_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_EEMsOnR9(targets, test, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR9(ExternalEntity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ExternalEntityInModel_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ExternalEntityInModel_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9) {
	    for (int j = 0; j < targets[i].backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9.size(); ++j) {
	      ExternalEntityInModel_c source = (ExternalEntityInModel_c)targets[i].backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ExternalEntityInModel_c[] ret_set = new ExternalEntityInModel_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ExternalEntityInModel_c[0];
  }
  }

public static ExternalEntityInModel_c [] getManyS_EEMsOnR9(ExternalEntity_c target)
{
  return getManyS_EEMsOnR9(target, null);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR9(ExternalEntity_c target, boolean loadComponent)
{
  return getManyS_EEMsOnR9(target, null, loadComponent);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR9(ExternalEntity_c target, ClassQueryInterface_c test)
{
	return getManyS_EEMsOnR9(target, test, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR9(ExternalEntity_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ExternalEntityInModel_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9) {
    for (int i = 0; i < target.backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9.size(); ++i) {
      ExternalEntityInModel_c source = (ExternalEntityInModel_c)target.backPointer_IsRepresentedByExternalEntityInModelIsRepresentedBy_R9.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ExternalEntityInModel_c[] ret_set = new ExternalEntityInModel_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ExternalEntityInModel_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<SmToEeAccessPath_c> backPointer_HasDataAccessRepresentedBySmToEeAccessPathHasDataAccessRepresentedBy_R421 = new ArrayList<SmToEeAccessPath_c>();

public void setSmToEeAccessPathOrderInChildListR421(SmToEeAccessPath_c target, int index) {
	unrelateAcrossR421From(target);
	SmToEeAccessPath_c[] elements = SmToEeAccessPath_c.getManyCA_SMEEAsOnR421(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR421From((SmToEeAccessPath_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR421To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR421To((SmToEeAccessPath_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR421To(SmToEeAccessPath_c target)
{
  if (target != null) {
    target.relateAcrossR421To(this, true) ;
  }
}

public void relateAcrossR421To(SmToEeAccessPath_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR421To(this, notifyChanges) ;
  }
}

public void setBackPointerR421To(SmToEeAccessPath_c target)
{
  	synchronized (backPointer_HasDataAccessRepresentedBySmToEeAccessPathHasDataAccessRepresentedBy_R421) {
		backPointer_HasDataAccessRepresentedBySmToEeAccessPathHasDataAccessRepresentedBy_R421.add(target);
	}
}

public void unrelateAcrossR421From(SmToEeAccessPath_c target)
{
  if (target != null) {
    target.unrelateAcrossR421From(this, true) ;
  }
}

public void unrelateAcrossR421From(SmToEeAccessPath_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR421From(this, notifyChanges) ;
  }
}

public void clearBackPointerR421To(SmToEeAccessPath_c target)
{
  synchronized (backPointer_HasDataAccessRepresentedBySmToEeAccessPathHasDataAccessRepresentedBy_R421) {
	    backPointer_HasDataAccessRepresentedBySmToEeAccessPathHasDataAccessRepresentedBy_R421.remove(target);
	}
}

public static ExternalEntityInModel_c getOneS_EEMOnR421(SmToEeAccessPath_c [] targets)
{
    return getOneS_EEMOnR421(targets, null);
}

public static ExternalEntityInModel_c getOneS_EEMOnR421(SmToEeAccessPath_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEMOnR421(targets, test, true);
}

public static ExternalEntityInModel_c getOneS_EEMOnR421(SmToEeAccessPath_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntityInModel_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntityInModel_c candidate_val = getOneS_EEMOnR421(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEMOnR421(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntityInModel_c getOneS_EEMOnR421(SmToEeAccessPath_c target)
{
	return getOneS_EEMOnR421(target, true);
}
public static ExternalEntityInModel_c getOneS_EEMOnR421(SmToEeAccessPath_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.AccessesDataOfExternalEntityInModel ;
  } else {
    return null;
  }
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR421(SmToEeAccessPath_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEMsOnR421(targets, test, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR421(SmToEeAccessPath_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntityInModel_c[0];
  
  
  LinkedHashSet<ExternalEntityInModel_c> elementsSet = new LinkedHashSet<ExternalEntityInModel_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].AccessesDataOfExternalEntityInModel == null)
	  targets[i].loadProxy();
    ExternalEntityInModel_c associate = targets[i].AccessesDataOfExternalEntityInModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntityInModel_c[] result = new ExternalEntityInModel_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR421(SmToEeAccessPath_c [] targets)
{
  return getManyS_EEMsOnR421(targets, null);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR421(SmToEeAccessPath_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SmToEeAccessPath_c [] targetArray = new SmToEeAccessPath_c[1];
    targetArray[0] = target;
    return getManyS_EEMsOnR421(targetArray, test, loadComponent);
  } else {
    ExternalEntityInModel_c [] result = new ExternalEntityInModel_c [0] ;
    return result ;
  }
  
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR421(SmToEeAccessPath_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEMsOnR421(target, null, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR421(SmToEeAccessPath_c target)
{
    return getManyS_EEMsOnR421(target, null, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR421(SmToEeAccessPath_c target, boolean loadComponent)
{
    return getManyS_EEMsOnR421(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<EeToSmCommPath_c> backPointer_OriginatesEeToSmCommPathOriginates_R402 = new ArrayList<EeToSmCommPath_c>();

public void setEeToSmCommPathOrderInChildListR402(EeToSmCommPath_c target, int index) {
	unrelateAcrossR402From(target);
	EeToSmCommPath_c[] elements = EeToSmCommPath_c.getManyCA_EESMCsOnR402(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR402From((EeToSmCommPath_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR402To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR402To((EeToSmCommPath_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR402To(EeToSmCommPath_c target)
{
  if (target != null) {
    target.relateAcrossR402To(this, true) ;
  }
}

public void relateAcrossR402To(EeToSmCommPath_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR402To(this, notifyChanges) ;
  }
}

public void setBackPointerR402To(EeToSmCommPath_c target)
{
  	synchronized (backPointer_OriginatesEeToSmCommPathOriginates_R402) {
		backPointer_OriginatesEeToSmCommPathOriginates_R402.add(target);
	}
}

public void unrelateAcrossR402From(EeToSmCommPath_c target)
{
  if (target != null) {
    target.unrelateAcrossR402From(this, true) ;
  }
}

public void unrelateAcrossR402From(EeToSmCommPath_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR402From(this, notifyChanges) ;
  }
}

public void clearBackPointerR402To(EeToSmCommPath_c target)
{
  synchronized (backPointer_OriginatesEeToSmCommPathOriginates_R402) {
	    backPointer_OriginatesEeToSmCommPathOriginates_R402.remove(target);
	}
}

public static ExternalEntityInModel_c getOneS_EEMOnR402(EeToSmCommPath_c [] targets)
{
    return getOneS_EEMOnR402(targets, null);
}

public static ExternalEntityInModel_c getOneS_EEMOnR402(EeToSmCommPath_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEMOnR402(targets, test, true);
}

public static ExternalEntityInModel_c getOneS_EEMOnR402(EeToSmCommPath_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntityInModel_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntityInModel_c candidate_val = getOneS_EEMOnR402(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEMOnR402(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntityInModel_c getOneS_EEMOnR402(EeToSmCommPath_c target)
{
	return getOneS_EEMOnR402(target, true);
}
public static ExternalEntityInModel_c getOneS_EEMOnR402(EeToSmCommPath_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.OriginatesFromExternalEntityInModel ;
  } else {
    return null;
  }
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR402(EeToSmCommPath_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEMsOnR402(targets, test, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR402(EeToSmCommPath_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntityInModel_c[0];
  
  
  LinkedHashSet<ExternalEntityInModel_c> elementsSet = new LinkedHashSet<ExternalEntityInModel_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].OriginatesFromExternalEntityInModel == null)
	  targets[i].loadProxy();
    ExternalEntityInModel_c associate = targets[i].OriginatesFromExternalEntityInModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntityInModel_c[] result = new ExternalEntityInModel_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR402(EeToSmCommPath_c [] targets)
{
  return getManyS_EEMsOnR402(targets, null);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR402(EeToSmCommPath_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    EeToSmCommPath_c [] targetArray = new EeToSmCommPath_c[1];
    targetArray[0] = target;
    return getManyS_EEMsOnR402(targetArray, test, loadComponent);
  } else {
    ExternalEntityInModel_c [] result = new ExternalEntityInModel_c [0] ;
    return result ;
  }
  
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR402(EeToSmCommPath_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEMsOnR402(target, null, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR402(EeToSmCommPath_c target)
{
    return getManyS_EEMsOnR402(target, null, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR402(EeToSmCommPath_c target, boolean loadComponent)
{
    return getManyS_EEMsOnR402(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<SmToEeCommPath_c> backPointer_HasReceivedEventCommunicationRepresentedBySmToEeCommPathHasReceivedEventCommunicationRepresentedBy_R411 = new ArrayList<SmToEeCommPath_c>();

public void setSmToEeCommPathOrderInChildListR411(SmToEeCommPath_c target, int index) {
	unrelateAcrossR411From(target);
	SmToEeCommPath_c[] elements = SmToEeCommPath_c.getManyCA_SMEECsOnR411(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR411From((SmToEeCommPath_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR411To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR411To((SmToEeCommPath_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR411To(SmToEeCommPath_c target)
{
  if (target != null) {
    target.relateAcrossR411To(this, true) ;
  }
}

public void relateAcrossR411To(SmToEeCommPath_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR411To(this, notifyChanges) ;
  }
}

public void setBackPointerR411To(SmToEeCommPath_c target)
{
  	synchronized (backPointer_HasReceivedEventCommunicationRepresentedBySmToEeCommPathHasReceivedEventCommunicationRepresentedBy_R411) {
		backPointer_HasReceivedEventCommunicationRepresentedBySmToEeCommPathHasReceivedEventCommunicationRepresentedBy_R411.add(target);
	}
}

public void unrelateAcrossR411From(SmToEeCommPath_c target)
{
  if (target != null) {
    target.unrelateAcrossR411From(this, true) ;
  }
}

public void unrelateAcrossR411From(SmToEeCommPath_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR411From(this, notifyChanges) ;
  }
}

public void clearBackPointerR411To(SmToEeCommPath_c target)
{
  synchronized (backPointer_HasReceivedEventCommunicationRepresentedBySmToEeCommPathHasReceivedEventCommunicationRepresentedBy_R411) {
	    backPointer_HasReceivedEventCommunicationRepresentedBySmToEeCommPathHasReceivedEventCommunicationRepresentedBy_R411.remove(target);
	}
}

public static ExternalEntityInModel_c getOneS_EEMOnR411(SmToEeCommPath_c [] targets)
{
    return getOneS_EEMOnR411(targets, null);
}

public static ExternalEntityInModel_c getOneS_EEMOnR411(SmToEeCommPath_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEMOnR411(targets, test, true);
}

public static ExternalEntityInModel_c getOneS_EEMOnR411(SmToEeCommPath_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntityInModel_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntityInModel_c candidate_val = getOneS_EEMOnR411(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEMOnR411(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntityInModel_c getOneS_EEMOnR411(SmToEeCommPath_c target)
{
	return getOneS_EEMOnR411(target, true);
}
public static ExternalEntityInModel_c getOneS_EEMOnR411(SmToEeCommPath_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ShowsEventCommunicationToExternalEntityInModel ;
  } else {
    return null;
  }
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR411(SmToEeCommPath_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEMsOnR411(targets, test, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR411(SmToEeCommPath_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntityInModel_c[0];
  
  
  LinkedHashSet<ExternalEntityInModel_c> elementsSet = new LinkedHashSet<ExternalEntityInModel_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ShowsEventCommunicationToExternalEntityInModel == null)
	  targets[i].loadProxy();
    ExternalEntityInModel_c associate = targets[i].ShowsEventCommunicationToExternalEntityInModel;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntityInModel_c[] result = new ExternalEntityInModel_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR411(SmToEeCommPath_c [] targets)
{
  return getManyS_EEMsOnR411(targets, null);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR411(SmToEeCommPath_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SmToEeCommPath_c [] targetArray = new SmToEeCommPath_c[1];
    targetArray[0] = target;
    return getManyS_EEMsOnR411(targetArray, test, loadComponent);
  } else {
    ExternalEntityInModel_c [] result = new ExternalEntityInModel_c [0] ;
    return result ;
  }
  
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR411(SmToEeCommPath_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEMsOnR411(target, null, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR411(SmToEeCommPath_c target)
{
    return getManyS_EEMsOnR411(target, null, true);
}

public static ExternalEntityInModel_c [] getManyS_EEMsOnR411(SmToEeCommPath_c target, boolean loadComponent)
{
    return getManyS_EEMsOnR411(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (IsAPresenceOfAnAnExternalEntityInSubsystem == null) {          
      // R7
      Subsystem_c relInst56486 = (Subsystem_c) baseRoot.getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56486 == null) {
      			relInst56486 = (Subsystem_c) Ooaofooa.getDefaultInstance().getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
      		}
			if (relInst56486 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56486 = (Subsystem_c) roots[i].getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
					if (relInst56486 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56486 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56486) && !isProxy())) {
	      relInst56486.relateAcrossR7To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsAPresenceInSubsystemModelOfExternalEntity == null) {          
      // R9
      ExternalEntity_c relInst56487 = (ExternalEntity_c) baseRoot.getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56487 == null) {
      			relInst56487 = (ExternalEntity_c) Ooaofooa.getDefaultInstance().getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
      		}
			if (relInst56487 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56487 = (ExternalEntity_c) roots[i].getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
					if (relInst56487 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56487 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56487) && !isProxy())) {
	      relInst56487.relateAcrossR9To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R7
      // S_SS
		  inst=IsAPresenceOfAnAnExternalEntityInSubsystem;
			unrelateAcrossR7From(IsAPresenceOfAnAnExternalEntityInSubsystem, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R9
      // S_EE
		  inst=IsAPresenceInSubsystemModelOfExternalEntity;
			unrelateAcrossR9From(IsAPresenceInSubsystemModelOfExternalEntity, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ExternalEntityInModel_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ExternalEntityInModel_c inst = (ExternalEntityInModel_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ExternalEntityInModel_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ExternalEntityInModel_c ExternalEntityInModelInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ExternalEntityInModel_c result=findExternalEntityInModelInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,ExternalEntityInModel_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findExternalEntityInModelInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static ExternalEntityInModel_c findExternalEntityInModelInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ExternalEntityInModel_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ExternalEntityInModel_c x = (ExternalEntityInModel_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static ExternalEntityInModel_c ExternalEntityInModelInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ExternalEntityInModelInstance(modelRoot,test,true);
  }
  
  public static ExternalEntityInModel_c ExternalEntityInModelInstance(ModelRoot modelRoot)
  {
	 return ExternalEntityInModelInstance(modelRoot,null,true);
  }

  public static ExternalEntityInModel_c [] ExternalEntityInModelInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, ExternalEntityInModel_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(ExternalEntityInModel_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ExternalEntityInModel_c x = (ExternalEntityInModel_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ExternalEntityInModel_c[] ret_set = new ExternalEntityInModel_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ExternalEntityInModel_c[0];
			}		
		} 
  }
  public static ExternalEntityInModel_c [] ExternalEntityInModelInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ExternalEntityInModelInstances(modelRoot,test,true);
  }
  public static ExternalEntityInModel_c [] ExternalEntityInModelInstances(ModelRoot modelRoot)
  {
	return ExternalEntityInModelInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the External Entity in Model.dispose call: ";
	Subsystem_c testR7Inst = Subsystem_c.getOneS_SSOnR7(this, false);

	if ( testR7Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "7 ";
	}
	ExternalEntity_c testR9Inst = ExternalEntity_c.getOneS_EEOnR9(this, false);

	if ( testR9Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "9 ";
	}
	SmToEeAccessPath_c testR421Inst = SmToEeAccessPath_c.getOneCA_SMEEAOnR421(this, false);

	if ( testR421Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "421 ";	
	}
	EeToSmCommPath_c testR402Inst = EeToSmCommPath_c.getOneCA_EESMCOnR402(this, false);

	if ( testR402Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "402 ";	
	}
	SmToEeCommPath_c testR411Inst = SmToEeCommPath_c.getOneCA_SMEECOnR411(this, false);

	if ( testR411Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "411 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "External Entity in Model", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("eemod_id")){
         return true;
      }
      if(attributeName.equals("ss_id")){
         return true;
      }
      if(attributeName.equals("ee_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getEemod_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    tempID= getEe_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getEe_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getEemod_idLongBased()
  {
    if(m_eemod_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_eemod_id)){
    	return 0xfffffff & m_eemod_id.getLeastSignificantBits();
    }
    return m_eemod_idLongBased ;
  }
  public java.util.UUID getEemod_id()
  {
    return m_eemod_id ;
  }


  public void setEemod_id(java.util.UUID newValue)
  {
   m_eemod_id = IdAssigner.preprocessUUID(newValue);
  }
  public int getModl_typ()
  {
    return m_modl_typ ;
  }


  public void setModl_typ(int newValue)
  {
    if(m_modl_typ == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Modl_typ", new Integer(m_modl_typ), new Integer(newValue),true);

   m_modl_typ = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSs_idLongBased()
  {
    if ( IsAPresenceOfAnAnExternalEntityInSubsystem != null )
    {
      return IsAPresenceOfAnAnExternalEntityInSubsystem.getSs_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSs_id()
  {
    if ( IsAPresenceOfAnAnExternalEntityInSubsystem != null )
    {
      return IsAPresenceOfAnAnExternalEntityInSubsystem.getSs_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSs_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ss_id) )
      return m_ss_id;
    else
      return getSs_id();
  }
  
  public void setSs_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ss_id)){
	        return;
	    }
	}else if(m_ss_id != null){
	    if(m_ss_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ss_id", m_ss_id, newValue,true); 
   m_ss_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getEe_idLongBased()
  {
    if ( IsAPresenceInSubsystemModelOfExternalEntity != null )
    {
      return IsAPresenceInSubsystemModelOfExternalEntity.getEe_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getEe_id()
  {
    if ( IsAPresenceInSubsystemModelOfExternalEntity != null )
    {
      return IsAPresenceInSubsystemModelOfExternalEntity.getEe_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getEe_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ee_id) )
      return m_ee_id;
    else
      return getEe_id();
  }
  
  public void setEe_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ee_id)){
	        return;
	    }
	}else if(m_ee_id != null){
	    if(m_ee_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ee_id", m_ee_id, newValue,true); 
   m_ee_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "External Entity in Model", //$NON-NLS-1$
	  " Operation entered: External Entity in Model::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ExternalEntityInModel_c [] objs = ExternalEntityInModel_c.ExternalEntityInModelInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "External Entity in Model", //$NON-NLS-1$
	  " Operation entered: External Entity in Model::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ExternalEntityInModel_c_test56489_c implements ClassQueryInterface_c
    {
	  ExternalEntityInModel_c_test56489_c( java.util.UUID            p56490, java.util.UUID            p56491 ) {
	       m_p56490 = p56490; 
m_p56491 = p56491;
	  }
	  private java.util.UUID             m_p56490; private java.util.UUID             m_p56491; 
	  public boolean evaluate (Object candidate)
	  {
	      ExternalEntityInModel_c selected = (ExternalEntityInModel_c) candidate;
	      boolean retval = false;
	      retval = (selected.getEemod_id().equals(m_p56490)) & (selected.getEe_id().equals(m_p56491));
	      return retval;
	  }
    }

    ExternalEntityInModel_c [] objs56488 = 
    ExternalEntityInModel_c.ExternalEntityInModelInstances(modelRoot, new ExternalEntityInModel_c_test56489_c(getEemod_id(), getEe_id())) ;

    if ( (  (objs56488.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity in Model", //$NON-NLS-1$
           "Consistency: Object: External Entity in Model: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56488.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity in Model: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56488.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56488.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity in Model", //$NON-NLS-1$
           "Consistency: Object: External Entity in Model: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56488.length )  + " EEmod_ID: " + "Not Printable"  + " EE_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity in Model: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56488.length )  + " EEmod_ID: " + "Not Printable"  + " EE_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // External Entity in Model is a referring class in association: rel.Numb = 7
          // The participating class is: Subsystem
    class Subsystem_c_test56495_c implements ClassQueryInterface_c
    {
	  Subsystem_c_test56495_c( java.util.UUID            p56496 ) {
	  m_p56496 = p56496;
	  }
	  private java.util.UUID             m_p56496; 
	  public boolean evaluate (Object candidate)
	  {
	      Subsystem_c selected = (Subsystem_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSs_id().equals(m_p56496));
	      return retval;
	  }
    }

    Subsystem_c [] objs56494 = 
    Subsystem_c.SubsystemInstances(modelRoot, new Subsystem_c_test56495_c(getSs_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56494.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity in Model", //$NON-NLS-1$
           "Consistency: Object: External Entity in Model: Association: 7: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56494.length )  + " SS_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity in Model: Association: 7: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56494.length )  + " SS_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // External Entity in Model is a referring class in association: rel.Numb = 9
          // The participating class is: External Entity
    class ExternalEntity_c_test56498_c implements ClassQueryInterface_c
    {
	  ExternalEntity_c_test56498_c( java.util.UUID            p56499 ) {
	  m_p56499 = p56499;
	  }
	  private java.util.UUID             m_p56499; 
	  public boolean evaluate (Object candidate)
	  {
	      ExternalEntity_c selected = (ExternalEntity_c) candidate;
	      boolean retval = false;
	      retval = (selected.getEe_id().equals(m_p56499));
	      return retval;
	  }
    }

    ExternalEntity_c [] objs56497 = 
    ExternalEntity_c.ExternalEntityInstances(modelRoot, new ExternalEntity_c_test56498_c(getEe_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56497.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity in Model", //$NON-NLS-1$
           "Consistency: Object: External Entity in Model: Association: 9: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56497.length )  + " EE_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity in Model: Association: 9: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56497.length )  + " EE_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // External Entity in Model is a participating class in association: rel.Numb = 421
             // Object: SM to EE Access Path
          // External Entity in Model is a participating class in association: rel.Numb = 402
             // Object: EE to SM Comm Path
          // External Entity in Model is a participating class in association: rel.Numb = 411
             // Object: SM to EE Comm Path
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity in Model", " Operation entered: ExternalEntityInModel::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR7(this);


if ( (  (v_ss != null)) )
{

this.unrelateAcrossR7From(v_ss);



}

ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR9(this);


this.unrelateAcrossR9From(v_ee);


EeToSmCommPath_c [] v_eesmcs = EeToSmCommPath_c.getManyCA_EESMCsOnR402(this);


EeToSmCommPath_c  v_eesmc = null;
for ( int i55007 = 0; i55007 < v_eesmcs.length; i55007++)
{
  v_eesmc = v_eesmcs[i55007] ;

if (v_eesmc != null) {
v_eesmc.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

SmToEeCommPath_c [] v_smeecs = SmToEeCommPath_c.getManyCA_SMEECsOnR411(this);


SmToEeCommPath_c  v_smeec = null;
for ( int i55008 = 0; i55008 < v_smeecs.length; i55008++)
{
  v_smeec = v_smeecs[i55008] ;

if (v_smeec != null) {
v_smeec.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

AccessPath_c [] v_accpaths = AccessPath_c.getManyCA_ACCsOnR415(SmToEeAccessPath_c.getManyCA_SMEEAsOnR421(this));


AccessPath_c  v_accpath = null;
for ( int i55009 = 0; i55009 < v_accpaths.length; i55009++)
{
  v_accpath = v_accpaths[i55009] ;

if (v_accpath != null) {
v_accpath.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end External Entity in Model
