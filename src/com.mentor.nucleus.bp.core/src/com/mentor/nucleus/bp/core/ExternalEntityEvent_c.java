      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ExternalEntityEvent_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_EXTERNAL_ENTITY_EVENT extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ExternalEntityEvent_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ExternalEntityEvent_c(ModelRoot modelRoot,
       java.util.UUID         p_m_eeevt_id,
       java.util.UUID         p_m_ee_id,
       int          p_m_numb,
       String       p_m_mning,
       int          p_m_is_lbl_u,
       String       p_m_unq_lbl,
       String       p_m_drv_lbl,
       String       p_m_descrip)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_eeevt_id = IdAssigner.preprocessUUID(p_m_eeevt_id);
       //extract 28 bit value only            
       m_eeevt_idLongBased = 0xfffffff & p_m_eeevt_id.getLeastSignificantBits();
       m_numb = p_m_numb;
       m_mning = p_m_mning;
       m_is_lbl_u = p_m_is_lbl_u;
       m_unq_lbl = p_m_unq_lbl;
       m_drv_lbl = p_m_drv_lbl;
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
    setUniqueId(m_eeevt_id);
    Object [] key = {m_eeevt_id,m_ee_id};
    addInstanceToMap(key);
  }
  static public ExternalEntityEvent_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_eeevt_id,
       java.util.UUID         p_m_ee_id,
       int          p_m_numb,
       String       p_m_mning,
       int          p_m_is_lbl_u,
       String       p_m_unq_lbl,
       String       p_m_drv_lbl,
       String       p_m_descrip, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ExternalEntityEvent_c.class);
      ExternalEntityEvent_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_eeevt_id,p_m_ee_id};
          new_inst = (ExternalEntityEvent_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_eeevt_id = IdAssigner.preprocessUUID(p_m_eeevt_id);
       //extract 28 bit value only            
       new_inst.m_eeevt_idLongBased = 0xfffffff & p_m_eeevt_id.getLeastSignificantBits();
       new_inst.m_numb = p_m_numb;
       new_inst.m_mning = p_m_mning;
       new_inst.m_is_lbl_u = p_m_is_lbl_u;
       new_inst.m_unq_lbl = p_m_unq_lbl;
       new_inst.m_drv_lbl = p_m_drv_lbl;
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ExternalEntityEvent_c(modelRoot,
p_m_eeevt_id,
p_m_ee_id,
p_m_numb,
p_m_mning,
p_m_is_lbl_u,
p_m_unq_lbl,
p_m_drv_lbl,
p_m_descrip
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public ExternalEntityEvent_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_eeevt_id,
       java.util.UUID         p_m_ee_id,
       int          p_m_numb,
       String       p_m_mning,
       int          p_m_is_lbl_u,
       String       p_m_unq_lbl,
       String       p_m_drv_lbl,
       String       p_m_descrip){
    InstanceList instances = modelRoot.getInstanceList(ExternalEntityEvent_c.class);
    ExternalEntityEvent_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_eeevt_id
        ,
        p_m_ee_id
            };
        source = (ExternalEntityEvent_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_eeevt_id = IdAssigner.preprocessUUID(p_m_eeevt_id);
       //extract 28 bit value only            
       source.m_eeevt_idLongBased = 0xfffffff & p_m_eeevt_id.getLeastSignificantBits();
       source.m_numb = p_m_numb;
       source.m_mning = p_m_mning;
       source.m_is_lbl_u = p_m_is_lbl_u;
       source.m_unq_lbl = p_m_unq_lbl;
       source.m_drv_lbl = p_m_drv_lbl;
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ee_id = IdAssigner.preprocessUUID(p_m_ee_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    ExternalEntityEvent_c new_inst = new ExternalEntityEvent_c(modelRoot,
p_m_eeevt_id,
p_m_ee_id,
p_m_numb,
p_m_mning,
p_m_is_lbl_u,
p_m_unq_lbl,
p_m_drv_lbl,
p_m_descrip
);
    return new_inst;
  }
  public ExternalEntityEvent_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_eeevt_id = idAssigner.createUUID();
     m_mning = "";   
     m_unq_lbl = "";   
     m_drv_lbl = "";   
     m_descrip = "";   
     m_ee_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_eeevt_id);
    Object [] key = {m_eeevt_id,m_ee_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_eeevt_id,m_ee_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_eeevt_id !=  p_newKey ){
	
		m_eeevt_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof ExternalEntityEvent_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ExternalEntityEvent_c)) {
           return false;
       }
       
       ExternalEntityEvent_c me = (ExternalEntityEvent_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getEeevt_id()) || IdAssigner.NULL_UUID.equals(((ExternalEntityEvent_c)elem).getEeevt_id())) && this != elem)) {
      	return false;
      }
      if (!getEeevt_id().equals(((ExternalEntityEvent_c)elem).getEeevt_id())) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getEe_id()) || IdAssigner.NULL_UUID.equals(((ExternalEntityEvent_c)elem).getEe_id())) && this != elem)) {
      	return false;
      }
      if (!getEe_id().equals(((ExternalEntityEvent_c)elem).getEe_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ExternalEntityEvent_c)) {
           return false;
       }
       
       ExternalEntityEvent_c me = (ExternalEntityEvent_c)elem;
      if (!getEeevt_id().equals(((ExternalEntityEvent_c)elem).getEeevt_id())) return false;
      if (!getEe_idCachedValue().equals(((ExternalEntityEvent_c)elem).getEe_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_eeevt_id ;
  private long m_eeevt_idLongBased ;
  private int          m_numb ;
  private String       m_mning ;
  private int          m_is_lbl_u ;
  private String       m_unq_lbl ;
  private String       m_drv_lbl ;
  private String       m_descrip ;
  private java.util.UUID         m_ee_id ;
      
// declare association references from this class
  
  
    
// referring navigation

ExternalEntity_c IsVehicleOfCommunicationForExternalEntity ;
public void relateAcrossR10To(ExternalEntity_c target)
{
	relateAcrossR10To(target, true);
}
public void relateAcrossR10To(ExternalEntity_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsVehicleOfCommunicationForExternalEntity) return;  // already related

    if ( IsVehicleOfCommunicationForExternalEntity != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsVehicleOfCommunicationForExternalEntity != null) {
    
        IsVehicleOfCommunicationForExternalEntity.clearBackPointerR10To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ExternalEntityEvent_c.relateAcrossR10To(ExternalEntity_c target)", 
			"Relate performed across R10 from External Entity Event to External Entity without unrelate of prior instance.");  
		}
    }
                
    	IsVehicleOfCommunicationForExternalEntity = target ;
        if(IdAssigner.NULL_UUID.equals(target.getEe_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_ee_id = target.getEe_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR10To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "10", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR10From(ExternalEntity_c target)
{
	unrelateAcrossR10From(target, true);
}
public void unrelateAcrossR10From(ExternalEntity_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsVehicleOfCommunicationForExternalEntity == null) return;  // already unrelated
	
	if (target != IsVehicleOfCommunicationForExternalEntity) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R10", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR10To(this);
    }
    

      if(IsVehicleOfCommunicationForExternalEntity != null) {
      
        m_ee_id = IsVehicleOfCommunicationForExternalEntity.getEe_id();
        if(IdAssigner.NULL_UUID.equals(m_ee_id))
        {
          m_ee_id = IsVehicleOfCommunicationForExternalEntity.getEe_idCachedValue();
        }       
        IsVehicleOfCommunicationForExternalEntity = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "10", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ExternalEntityEvent_c getOneS_EEEVTOnR10(ExternalEntity_c [] targets)
{
    return getOneS_EEEVTOnR10(targets, null);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR10(ExternalEntity_c [] targets, ClassQueryInterface_c test)
{
    ExternalEntityEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneS_EEEVTOnR10(targets[i], test);
        }
    }

    return ret_val;
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR10(ExternalEntity_c target)
{
  return getOneS_EEEVTOnR10(target, null);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR10(ExternalEntity_c target, boolean loadComponent)
{
    return getOneS_EEEVTOnR10(target.getModelRoot(), target, null, loadComponent);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR10(ExternalEntity_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneS_EEEVTOnR10(target.getModelRoot(), target, test);
  }
  return null;
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR10(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test)
{
	return getOneS_EEEVTOnR10(modelRoot, target, test, true);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR10(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneS_EEEVTOnR10(modelRoot,target,test);
}
private static ExternalEntityEvent_c find_getOneS_EEEVTOnR10(ModelRoot modelRoot, ExternalEntity_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10) {
	    for ( int i = 0; i < target.backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10.size(); ++i ) {
	      ExternalEntityEvent_c source = (ExternalEntityEvent_c)target.backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR10(ExternalEntity_c [] targets)
{
  return getManyS_EEEVTsOnR10(targets, null);
}
public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR10(ExternalEntity_c [] targets, boolean loadComponent)
{
  return getManyS_EEEVTsOnR10(targets, null, loadComponent);
}
public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR10(ExternalEntity_c [] targets, ClassQueryInterface_c test)
{
	return getManyS_EEEVTsOnR10(targets, test, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR10(ExternalEntity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ExternalEntityEvent_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(ExternalEntityEvent_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10) {
	    for (int j = 0; j < targets[i].backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10.size(); ++j) {
	      ExternalEntityEvent_c source = (ExternalEntityEvent_c)targets[i].backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ExternalEntityEvent_c[] ret_set = new ExternalEntityEvent_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ExternalEntityEvent_c[0];
  }
  }

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR10(ExternalEntity_c target)
{
  return getManyS_EEEVTsOnR10(target, null);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR10(ExternalEntity_c target, boolean loadComponent)
{
  return getManyS_EEEVTsOnR10(target, null, loadComponent);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR10(ExternalEntity_c target, ClassQueryInterface_c test)
{
	return getManyS_EEEVTsOnR10(target, test, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR10(ExternalEntity_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ExternalEntityEvent_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10) {
    for (int i = 0; i < target.backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10.size(); ++i) {
      ExternalEntityEvent_c source = (ExternalEntityEvent_c)target.backPointer_CanReceiveAsynchronousCommunicationViaExternalEntityEventCanReceiveAsynchronousCommunicationVia_R10.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ExternalEntityEvent_c[] ret_set = new ExternalEntityEvent_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ExternalEntityEvent_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<GenerateToExternalEntity_c> backPointer_GenerateToExternalEntity_R709 = new ArrayList<GenerateToExternalEntity_c>();

public void setGenerateToExternalEntityOrderInChildListR709(GenerateToExternalEntity_c target, int index) {
	unrelateAcrossR709From(target);
	GenerateToExternalEntity_c[] elements = GenerateToExternalEntity_c.getManyE_GEEsOnR709(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR709From((GenerateToExternalEntity_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR709To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR709To((GenerateToExternalEntity_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR709To(GenerateToExternalEntity_c target)
{
  if (target != null) {
    target.relateAcrossR709To(this, true) ;
  }
}

public void relateAcrossR709To(GenerateToExternalEntity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR709To(this, notifyChanges) ;
  }
}

public void setBackPointerR709To(GenerateToExternalEntity_c target)
{
  	synchronized (backPointer_GenerateToExternalEntity_R709) {
		backPointer_GenerateToExternalEntity_R709.add(target);
	}
}

public void unrelateAcrossR709From(GenerateToExternalEntity_c target)
{
  if (target != null) {
    target.unrelateAcrossR709From(this, true) ;
  }
}

public void unrelateAcrossR709From(GenerateToExternalEntity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR709From(this, notifyChanges) ;
  }
}

public void clearBackPointerR709To(GenerateToExternalEntity_c target)
{
  synchronized (backPointer_GenerateToExternalEntity_R709) {
	    backPointer_GenerateToExternalEntity_R709.remove(target);
	}
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR709(GenerateToExternalEntity_c [] targets)
{
    return getOneS_EEEVTOnR709(targets, null);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR709(GenerateToExternalEntity_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEEVTOnR709(targets, test, true);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR709(GenerateToExternalEntity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntityEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntityEvent_c candidate_val = getOneS_EEEVTOnR709(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEEVTOnR709(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR709(GenerateToExternalEntity_c target)
{
	return getOneS_EEEVTOnR709(target, true);
}
public static ExternalEntityEvent_c getOneS_EEEVTOnR709(GenerateToExternalEntity_c target, boolean loadComponent)
{
  if (target != null) {
    return target.GeneratesExternalEntityEvent ;
  } else {
    return null;
  }
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR709(GenerateToExternalEntity_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEEVTsOnR709(targets, test, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR709(GenerateToExternalEntity_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntityEvent_c[0];
  
  
  LinkedHashSet<ExternalEntityEvent_c> elementsSet = new LinkedHashSet<ExternalEntityEvent_c>();
  for (int i = 0; i < targets.length; i++) {
    ExternalEntityEvent_c associate = targets[i].GeneratesExternalEntityEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntityEvent_c[] result = new ExternalEntityEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR709(GenerateToExternalEntity_c [] targets)
{
  return getManyS_EEEVTsOnR709(targets, null);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR709(GenerateToExternalEntity_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    GenerateToExternalEntity_c [] targetArray = new GenerateToExternalEntity_c[1];
    targetArray[0] = target;
    return getManyS_EEEVTsOnR709(targetArray, test, loadComponent);
  } else {
    ExternalEntityEvent_c [] result = new ExternalEntityEvent_c [0] ;
    return result ;
  }
  
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR709(GenerateToExternalEntity_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEEVTsOnR709(target, null, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR709(GenerateToExternalEntity_c target)
{
    return getManyS_EEEVTsOnR709(target, null, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR709(GenerateToExternalEntity_c target, boolean loadComponent)
{
    return getManyS_EEEVTsOnR709(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<CreateEventToExternalEntity_c> backPointer_CreateEventToExternalEntity_R708 = new ArrayList<CreateEventToExternalEntity_c>();

public void setCreateEventToExternalEntityOrderInChildListR708(CreateEventToExternalEntity_c target, int index) {
	unrelateAcrossR708From(target);
	CreateEventToExternalEntity_c[] elements = CreateEventToExternalEntity_c.getManyE_CEEsOnR708(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR708From((CreateEventToExternalEntity_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR708To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR708To((CreateEventToExternalEntity_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR708To(CreateEventToExternalEntity_c target)
{
  if (target != null) {
    target.relateAcrossR708To(this, true) ;
  }
}

public void relateAcrossR708To(CreateEventToExternalEntity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR708To(this, notifyChanges) ;
  }
}

public void setBackPointerR708To(CreateEventToExternalEntity_c target)
{
  	synchronized (backPointer_CreateEventToExternalEntity_R708) {
		backPointer_CreateEventToExternalEntity_R708.add(target);
	}
}

public void unrelateAcrossR708From(CreateEventToExternalEntity_c target)
{
  if (target != null) {
    target.unrelateAcrossR708From(this, true) ;
  }
}

public void unrelateAcrossR708From(CreateEventToExternalEntity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR708From(this, notifyChanges) ;
  }
}

public void clearBackPointerR708To(CreateEventToExternalEntity_c target)
{
  synchronized (backPointer_CreateEventToExternalEntity_R708) {
	    backPointer_CreateEventToExternalEntity_R708.remove(target);
	}
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR708(CreateEventToExternalEntity_c [] targets)
{
    return getOneS_EEEVTOnR708(targets, null);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR708(CreateEventToExternalEntity_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEEVTOnR708(targets, test, true);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR708(CreateEventToExternalEntity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntityEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntityEvent_c candidate_val = getOneS_EEEVTOnR708(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEEVTOnR708(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR708(CreateEventToExternalEntity_c target)
{
	return getOneS_EEEVTOnR708(target, true);
}
public static ExternalEntityEvent_c getOneS_EEEVTOnR708(CreateEventToExternalEntity_c target, boolean loadComponent)
{
  if (target != null) {
    return target.CreatesExternalEntityEvent ;
  } else {
    return null;
  }
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR708(CreateEventToExternalEntity_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEEVTsOnR708(targets, test, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR708(CreateEventToExternalEntity_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntityEvent_c[0];
  
  
  LinkedHashSet<ExternalEntityEvent_c> elementsSet = new LinkedHashSet<ExternalEntityEvent_c>();
  for (int i = 0; i < targets.length; i++) {
    ExternalEntityEvent_c associate = targets[i].CreatesExternalEntityEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntityEvent_c[] result = new ExternalEntityEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR708(CreateEventToExternalEntity_c [] targets)
{
  return getManyS_EEEVTsOnR708(targets, null);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR708(CreateEventToExternalEntity_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    CreateEventToExternalEntity_c [] targetArray = new CreateEventToExternalEntity_c[1];
    targetArray[0] = target;
    return getManyS_EEEVTsOnR708(targetArray, test, loadComponent);
  } else {
    ExternalEntityEvent_c [] result = new ExternalEntityEvent_c [0] ;
    return result ;
  }
  
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR708(CreateEventToExternalEntity_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEEVTsOnR708(target, null, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR708(CreateEventToExternalEntity_c target)
{
    return getManyS_EEEVTsOnR708(target, null, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR708(CreateEventToExternalEntity_c target, boolean loadComponent)
{
    return getManyS_EEEVTsOnR708(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ExternalEntityEventData_c> backPointer_MayCarryExternalEntityEventDataMayCarry_R13 = new ArrayList<ExternalEntityEventData_c>();

public void setExternalEntityEventDataOrderInChildListR13(ExternalEntityEventData_c target, int index) {
	unrelateAcrossR13From(target);
	ExternalEntityEventData_c[] elements = ExternalEntityEventData_c.getManyS_EEEDTsOnR13(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR13From((ExternalEntityEventData_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR13To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR13To((ExternalEntityEventData_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR13To(ExternalEntityEventData_c target)
{
  if (target != null) {
    target.relateAcrossR13To(this, true) ;
  }
}

public void relateAcrossR13To(ExternalEntityEventData_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR13To(this, notifyChanges) ;
  }
}

public void setBackPointerR13To(ExternalEntityEventData_c target)
{
  	synchronized (backPointer_MayCarryExternalEntityEventDataMayCarry_R13) {
		backPointer_MayCarryExternalEntityEventDataMayCarry_R13.add(target);
	}
}

public void unrelateAcrossR13From(ExternalEntityEventData_c target)
{
  if (target != null) {
    target.unrelateAcrossR13From(this, true) ;
  }
}

public void unrelateAcrossR13From(ExternalEntityEventData_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR13From(this, notifyChanges) ;
  }
}

public void clearBackPointerR13To(ExternalEntityEventData_c target)
{
  synchronized (backPointer_MayCarryExternalEntityEventDataMayCarry_R13) {
	    backPointer_MayCarryExternalEntityEventDataMayCarry_R13.remove(target);
	}
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR13(ExternalEntityEventData_c [] targets)
{
    return getOneS_EEEVTOnR13(targets, null);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR13(ExternalEntityEventData_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEEVTOnR13(targets, test, true);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR13(ExternalEntityEventData_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntityEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntityEvent_c candidate_val = getOneS_EEEVTOnR13(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEEVTOnR13(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR13(ExternalEntityEventData_c target)
{
	return getOneS_EEEVTOnR13(target, true);
}
public static ExternalEntityEvent_c getOneS_EEEVTOnR13(ExternalEntityEventData_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsCarriedViaExternalEntityEvent ;
  } else {
    return null;
  }
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventData_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEEVTsOnR13(targets, test, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventData_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntityEvent_c[0];
  
  
  LinkedHashSet<ExternalEntityEvent_c> elementsSet = new LinkedHashSet<ExternalEntityEvent_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsCarriedViaExternalEntityEvent == null)
	  targets[i].loadProxy();
    ExternalEntityEvent_c associate = targets[i].IsCarriedViaExternalEntityEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntityEvent_c[] result = new ExternalEntityEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventData_c [] targets)
{
  return getManyS_EEEVTsOnR13(targets, null);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventData_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ExternalEntityEventData_c [] targetArray = new ExternalEntityEventData_c[1];
    targetArray[0] = target;
    return getManyS_EEEVTsOnR13(targetArray, test, loadComponent);
  } else {
    ExternalEntityEvent_c [] result = new ExternalEntityEvent_c [0] ;
    return result ;
  }
  
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventData_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEEVTsOnR13(target, null, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventData_c target)
{
    return getManyS_EEEVTsOnR13(target, null, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventData_c target, boolean loadComponent)
{
    return getManyS_EEEVTsOnR13(target, null, loadComponent);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR13(ExternalEntityEventDataItem_c target)
{
  return ExternalEntityEvent_c.getOneS_EEEVTOnR13(ExternalEntityEventData_c.getOneS_EEEDTOnR13(target)) ;
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR13(ExternalEntityEventDataItem_c target,
    ClassQueryInterface_c test)
{
  return ExternalEntityEvent_c.getOneS_EEEVTOnR13(ExternalEntityEventData_c.getManyS_EEEDTsOnR13(target), test) ;
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventDataItem_c target,
    ClassQueryInterface_c test)
{
	return getManyS_EEEVTsOnR13(target, test, true);
}
public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventDataItem_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  ExternalEntityEventData_c [] associators = ExternalEntityEventData_c.getManyS_EEEDTsOnR13(target, loadComponent) ;
    return ExternalEntityEvent_c.getManyS_EEEVTsOnR13(associators, test, loadComponent) ;
}
public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventDataItem_c target)
{
    return getManyS_EEEVTsOnR13(target, null, true);
}
public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR13(ExternalEntityEventDataItem_c target, boolean loadComponent)
{
    return getManyS_EEEVTsOnR13(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<SmToEeEventComm_c> backPointer_IsCarriedToEeViaSmToEeEventCommIsCarriedToEeVia_R413 = new ArrayList<SmToEeEventComm_c>();

public void setSmToEeEventCommOrderInChildListR413(SmToEeEventComm_c target, int index) {
	unrelateAcrossR413From(target);
	SmToEeEventComm_c[] elements = SmToEeEventComm_c.getManyCA_SMEEEsOnR413(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR413From((SmToEeEventComm_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR413To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR413To((SmToEeEventComm_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR413To(SmToEeEventComm_c target)
{
  if (target != null) {
    target.relateAcrossR413To(this, true) ;
  }
}

public void relateAcrossR413To(SmToEeEventComm_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR413To(this, notifyChanges) ;
  }
}

public void setBackPointerR413To(SmToEeEventComm_c target)
{
  	synchronized (backPointer_IsCarriedToEeViaSmToEeEventCommIsCarriedToEeVia_R413) {
		backPointer_IsCarriedToEeViaSmToEeEventCommIsCarriedToEeVia_R413.add(target);
	}
}

public void unrelateAcrossR413From(SmToEeEventComm_c target)
{
  if (target != null) {
    target.unrelateAcrossR413From(this, true) ;
  }
}

public void unrelateAcrossR413From(SmToEeEventComm_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR413From(this, notifyChanges) ;
  }
}

public void clearBackPointerR413To(SmToEeEventComm_c target)
{
  synchronized (backPointer_IsCarriedToEeViaSmToEeEventCommIsCarriedToEeVia_R413) {
	    backPointer_IsCarriedToEeViaSmToEeEventCommIsCarriedToEeVia_R413.remove(target);
	}
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR413(SmToEeEventComm_c [] targets)
{
    return getOneS_EEEVTOnR413(targets, null);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR413(SmToEeEventComm_c [] targets, ClassQueryInterface_c test)
{
    return getOneS_EEEVTOnR413(targets, test, true);
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR413(SmToEeEventComm_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ExternalEntityEvent_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ExternalEntityEvent_c candidate_val = getOneS_EEEVTOnR413(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneS_EEEVTOnR413(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ExternalEntityEvent_c getOneS_EEEVTOnR413(SmToEeEventComm_c target)
{
	return getOneS_EEEVTOnR413(target, true);
}
public static ExternalEntityEvent_c getOneS_EEEVTOnR413(SmToEeEventComm_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.RepresentsCommunicationOfExternalEntityEvent ;
  } else {
    return null;
  }
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR413(SmToEeEventComm_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyS_EEEVTsOnR413(targets, test, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR413(SmToEeEventComm_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ExternalEntityEvent_c[0];
  
  
  LinkedHashSet<ExternalEntityEvent_c> elementsSet = new LinkedHashSet<ExternalEntityEvent_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RepresentsCommunicationOfExternalEntityEvent == null)
	  targets[i].loadProxy();
    ExternalEntityEvent_c associate = targets[i].RepresentsCommunicationOfExternalEntityEvent;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ExternalEntityEvent_c[] result = new ExternalEntityEvent_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR413(SmToEeEventComm_c [] targets)
{
  return getManyS_EEEVTsOnR413(targets, null);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR413(SmToEeEventComm_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SmToEeEventComm_c [] targetArray = new SmToEeEventComm_c[1];
    targetArray[0] = target;
    return getManyS_EEEVTsOnR413(targetArray, test, loadComponent);
  } else {
    ExternalEntityEvent_c [] result = new ExternalEntityEvent_c [0] ;
    return result ;
  }
  
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR413(SmToEeEventComm_c target,
    ClassQueryInterface_c test)
{
    return getManyS_EEEVTsOnR413(target, null, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR413(SmToEeEventComm_c target)
{
    return getManyS_EEEVTsOnR413(target, null, true);
}

public static ExternalEntityEvent_c [] getManyS_EEEVTsOnR413(SmToEeEventComm_c target, boolean loadComponent)
{
    return getManyS_EEEVTsOnR413(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (IsVehicleOfCommunicationForExternalEntity == null) {          
      // R10
      ExternalEntity_c relInst56523 = (ExternalEntity_c) baseRoot.getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56523 == null) {
      			relInst56523 = (ExternalEntity_c) Ooaofooa.getDefaultInstance().getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
      		}
			if (relInst56523 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56523 = (ExternalEntity_c) roots[i].getInstanceList(ExternalEntity_c.class).get(new Object[] {m_ee_id});
					if (relInst56523 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56523 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56523) && !isProxy())) {
	      relInst56523.relateAcrossR10To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R10
      // S_EE
		  inst=IsVehicleOfCommunicationForExternalEntity;
			unrelateAcrossR10From(IsVehicleOfCommunicationForExternalEntity, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ExternalEntityEvent_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ExternalEntityEvent_c inst = (ExternalEntityEvent_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ExternalEntityEvent_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ExternalEntityEvent_c ExternalEntityEventInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ExternalEntityEvent_c result=findExternalEntityEventInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,ExternalEntityEvent_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findExternalEntityEventInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static ExternalEntityEvent_c findExternalEntityEventInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ExternalEntityEvent_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ExternalEntityEvent_c x = (ExternalEntityEvent_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static ExternalEntityEvent_c ExternalEntityEventInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ExternalEntityEventInstance(modelRoot,test,true);
  }
  
  public static ExternalEntityEvent_c ExternalEntityEventInstance(ModelRoot modelRoot)
  {
	 return ExternalEntityEventInstance(modelRoot,null,true);
  }

  public static ExternalEntityEvent_c [] ExternalEntityEventInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, ExternalEntityEvent_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(ExternalEntityEvent_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ExternalEntityEvent_c x = (ExternalEntityEvent_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ExternalEntityEvent_c[] ret_set = new ExternalEntityEvent_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ExternalEntityEvent_c[0];
			}		
		} 
  }
  public static ExternalEntityEvent_c [] ExternalEntityEventInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ExternalEntityEventInstances(modelRoot,test,true);
  }
  public static ExternalEntityEvent_c [] ExternalEntityEventInstances(ModelRoot modelRoot)
  {
	return ExternalEntityEventInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the External Entity Event.dispose call: ";
	GenerateToExternalEntity_c testR709Inst = GenerateToExternalEntity_c.getOneE_GEEOnR709(this, false);

	if ( testR709Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "709 ";	
	}
	CreateEventToExternalEntity_c testR708Inst = CreateEventToExternalEntity_c.getOneE_CEEOnR708(this, false);

	if ( testR708Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "708 ";	
	}
 	ExternalEntityEventData_c testR13Inst = ExternalEntityEventData_c.getOneS_EEEDTOnR13(this, false);

 	if ( testR13Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "13 ";
 	}
	ExternalEntity_c testR10Inst = ExternalEntity_c.getOneS_EEOnR10(this, false);

	if ( testR10Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "10 ";
	}
	SmToEeEventComm_c testR413Inst = SmToEeEventComm_c.getOneCA_SMEEEOnR413(this, false);

	if ( testR413Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "413 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "External Entity Event", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("eeevt_id")){
         return true;
      }
      if(attributeName.equals("ee_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getEeevt_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    tempID= getEe_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getEe_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getEeevt_idLongBased()
  {
    if(m_eeevt_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_eeevt_id)){
    	return 0xfffffff & m_eeevt_id.getLeastSignificantBits();
    }
    return m_eeevt_idLongBased ;
  }
  public java.util.UUID getEeevt_id()
  {
    return m_eeevt_id ;
  }


  public void setEeevt_id(java.util.UUID newValue)
  {
   m_eeevt_id = IdAssigner.preprocessUUID(newValue);
  }
  public int getNumb()
  {
    return m_numb ;
  }


  public void setNumb(int newValue)
  {
    if(m_numb == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Numb", new Integer(m_numb), new Integer(newValue),true);

   m_numb = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getMning()
  {
    return m_mning ;
  }


  public void setMning(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_mning)){
	        return;
	    }
	}else if(m_mning != null){
	    if(m_mning.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Mning", m_mning, newValue,true); 
   m_mning = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getIs_lbl_u()
  {
    return m_is_lbl_u ;
  }


  public void setIs_lbl_u(int newValue)
  {
    if(m_is_lbl_u == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Is_lbl_u", new Integer(m_is_lbl_u), new Integer(newValue),true);

   m_is_lbl_u = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getUnq_lbl()
  {
    return m_unq_lbl ;
  }


  public void setUnq_lbl(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_unq_lbl)){
	        return;
	    }
	}else if(m_unq_lbl != null){
	    if(m_unq_lbl.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Unq_lbl", m_unq_lbl, newValue,true); 
   m_unq_lbl = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDrv_lbl()
  {
ModelRoot modelRoot = getModelRoot();
if ( (getIs_lbl_u() == 0) )
{

ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR10(this);


return v_ee.getKey_lett() + Gd_c.Int_to_string(			    
getNumb());



}

else
{

return getUnq_lbl() + Gd_c.Int_to_string(			    
getNumb());



}


  }


  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getEe_idLongBased()
  {
    if ( IsVehicleOfCommunicationForExternalEntity != null )
    {
      return IsVehicleOfCommunicationForExternalEntity.getEe_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getEe_id()
  {
    if ( IsVehicleOfCommunicationForExternalEntity != null )
    {
      return IsVehicleOfCommunicationForExternalEntity.getEe_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getEe_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ee_id) )
      return m_ee_id;
    else
      return getEe_id();
  }
  
  public void setEe_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ee_id)){
	        return;
	    }
	}else if(m_ee_id != null){
	    if(m_ee_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ee_id", m_ee_id, newValue,true); 
   m_ee_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "External Entity Event", //$NON-NLS-1$
	  " Operation entered: External Entity Event::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ExternalEntityEvent_c [] objs = ExternalEntityEvent_c.ExternalEntityEventInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "External Entity Event", //$NON-NLS-1$
	  " Operation entered: External Entity Event::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ExternalEntityEvent_c_test56525_c implements ClassQueryInterface_c
    {
	  ExternalEntityEvent_c_test56525_c( java.util.UUID            p56526, java.util.UUID            p56527 ) {
	       m_p56526 = p56526; 
m_p56527 = p56527;
	  }
	  private java.util.UUID             m_p56526; private java.util.UUID             m_p56527; 
	  public boolean evaluate (Object candidate)
	  {
	      ExternalEntityEvent_c selected = (ExternalEntityEvent_c) candidate;
	      boolean retval = false;
	      retval = (selected.getEeevt_id().equals(m_p56526)) & (selected.getEe_id().equals(m_p56527));
	      return retval;
	  }
    }

    ExternalEntityEvent_c [] objs56524 = 
    ExternalEntityEvent_c.ExternalEntityEventInstances(modelRoot, new ExternalEntityEvent_c_test56525_c(getEeevt_id(), getEe_id())) ;

    if ( (  (objs56524.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity Event", //$NON-NLS-1$
           "Consistency: Object: External Entity Event: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56524.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity Event: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56524.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56524.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity Event", //$NON-NLS-1$
           "Consistency: Object: External Entity Event: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56524.length )  + " EEevt_ID: " + "Not Printable"  + " EE_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity Event: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56524.length )  + " EEevt_ID: " + "Not Printable"  + " EE_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // External Entity Event is a referring class in association: rel.Numb = 10
          // The participating class is: External Entity
    class ExternalEntity_c_test56531_c implements ClassQueryInterface_c
    {
	  ExternalEntity_c_test56531_c( java.util.UUID            p56532 ) {
	  m_p56532 = p56532;
	  }
	  private java.util.UUID             m_p56532; 
	  public boolean evaluate (Object candidate)
	  {
	      ExternalEntity_c selected = (ExternalEntity_c) candidate;
	      boolean retval = false;
	      retval = (selected.getEe_id().equals(m_p56532));
	      return retval;
	  }
    }

    ExternalEntity_c [] objs56530 = 
    ExternalEntity_c.ExternalEntityInstances(modelRoot, new ExternalEntity_c_test56531_c(getEe_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs56530.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "External Entity Event", //$NON-NLS-1$
           "Consistency: Object: External Entity Event: Association: 10: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56530.length )  + " EE_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: External Entity Event: Association: 10: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56530.length )  + " EE_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // External Entity Event is a participating class in association: rel.Numb = 709
             // Object: Generate to External Entity
          // External Entity Event is a participating class in association: rel.Numb = 708
             // Object: Create Event to External Entity
          // Associated Other Side: rel.Numb = 13
            // Link Object: External Entity Event Data
          // External Entity Event is a participating class in association: rel.Numb = 413
             // Object: SM to EE Event Comm
    return retval;
  }


  // declare transform functions
  public  String       Get_name()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity Event", " Operation entered: ExternalEntityEvent::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR10(this);


if ( (  (v_ee != null)) )
{

return v_ee.getName() + "." + getDrv_lbl();



}

return "";



   } // End get_name
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "External Entity Event", " Operation entered: ExternalEntityEvent::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
ExternalEntity_c v_ee = ExternalEntity_c.getOneS_EEOnR10(this);


this.unrelateAcrossR10From(v_ee);


ExternalEntityEventData_c [] v_eeedts = ExternalEntityEventData_c.getManyS_EEEDTsOnR13(this);


ExternalEntityEventData_c  v_eeedt = null;
for ( int i55011 = 0; i55011 < v_eeedts.length; i55011++)
{
  v_eeedt = v_eeedts[i55011] ;

if (v_eeedt != null) {
v_eeedt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

SmToEeEventComm_c [] v_smeecomms = SmToEeEventComm_c.getManyCA_SMEEEsOnR413(this);


SmToEeEventComm_c  v_smeecomm = null;
for ( int i55012 = 0; i55012 < v_smeecomms.length; i55012++)
{
  v_smeecomm = v_smeecomms[i55012] ;

if (v_smeecomm != null) {
v_smeecomm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

CreateEventToExternalEntity_c [] v_cees = CreateEventToExternalEntity_c.getManyE_CEEsOnR708(this);


CreateEventToExternalEntity_c  v_cee = null;
for ( int i55013 = 0; i55013 < v_cees.length; i55013++)
{
  v_cee = v_cees[i55013] ;

this.unrelateAcrossR708From(v_cee);



}

GenerateToExternalEntity_c [] v_gees = GenerateToExternalEntity_c.getManyE_GEEsOnR709(this);


GenerateToExternalEntity_c  v_gee = null;
for ( int i55014 = 0; i55014 < v_gees.length; i55014++)
{
  v_gee = v_gees[i55014] ;

this.unrelateAcrossR709From(v_gee);



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end External Entity Event
