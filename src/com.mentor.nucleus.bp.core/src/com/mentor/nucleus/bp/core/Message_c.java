      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Message_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_MESSAGE extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Message_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Message_c(ModelRoot modelRoot,
       java.util.UUID         p_m_msg_id,
       java.util.UUID         p_m_receiver_part_id,
       java.util.UUID         p_m_sender_part_id,
       boolean      p_m_participatesincommunication)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sender_part_id = IdAssigner.preprocessUUID(p_m_sender_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_receiver_part_id = IdAssigner.preprocessUUID(p_m_receiver_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_msg_id = IdAssigner.preprocessUUID(p_m_msg_id);
       m_participatesincommunication = p_m_participatesincommunication;
        
    setUniqueId(m_msg_id);
    Object [] key = {m_msg_id};
    addInstanceToMap(key);
  }
  static public Message_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_msg_id,
       java.util.UUID         p_m_receiver_part_id,
       java.util.UUID         p_m_sender_part_id,
       boolean      p_m_participatesincommunication, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Message_c.class);
      Message_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_msg_id};
          new_inst = (Message_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sender_part_id = IdAssigner.preprocessUUID(p_m_sender_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_receiver_part_id = IdAssigner.preprocessUUID(p_m_receiver_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_msg_id = IdAssigner.preprocessUUID(p_m_msg_id);
       new_inst.m_participatesincommunication = p_m_participatesincommunication;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Message_c(modelRoot,
p_m_msg_id,
p_m_receiver_part_id,
p_m_sender_part_id,
p_m_participatesincommunication
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public Message_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_msg_id,
       java.util.UUID         p_m_receiver_part_id,
       java.util.UUID         p_m_sender_part_id,
       boolean      p_m_participatesincommunication){
    InstanceList instances = modelRoot.getInstanceList(Message_c.class);
    Message_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_msg_id
            };
        source = (Message_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sender_part_id = IdAssigner.preprocessUUID(p_m_sender_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_receiver_part_id = IdAssigner.preprocessUUID(p_m_receiver_part_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_msg_id = IdAssigner.preprocessUUID(p_m_msg_id);
       source.m_participatesincommunication = p_m_participatesincommunication;
        
           return source ;
        }
      }
      // there is no instance matching the id
    Message_c new_inst = new Message_c(modelRoot,
p_m_msg_id,
p_m_receiver_part_id,
p_m_sender_part_id,
p_m_participatesincommunication
);
    return new_inst;
  }
  public Message_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_sender_part_id = IdAssigner.NULL_UUID;   
     m_receiver_part_id = IdAssigner.NULL_UUID;   
     m_msg_id = idAssigner.createUUID();
    setUniqueId(m_msg_id);
    Object [] key = {m_msg_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_msg_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_msg_id !=  p_newKey ){
	
		m_msg_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Message_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Message_c)) {
           return false;
       }
       
       Message_c me = (Message_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getMsg_id()) || IdAssigner.NULL_UUID.equals(((Message_c)elem).getMsg_id())) && this != elem)) {
      	return false;
      }
      if (!getMsg_id().equals(((Message_c)elem).getMsg_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Message_c)) {
           return false;
       }
       
       Message_c me = (Message_c)elem;
      if (!getMsg_idCachedValue().equals(((Message_c)elem).getMsg_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_sender_part_id ;
  private java.util.UUID         m_receiver_part_id ;
  private java.util.UUID         m_msg_id ;
  private boolean      m_participatesincommunication ;
      
// declare association references from this class
  
  
    
// referring navigation

PackageableElement_c IsSupertypePackageableElement ;
public void relateAcrossR8001To(PackageableElement_c target)
{
	relateAcrossR8001To(target, true);
}
public void relateAcrossR8001To(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypePackageableElement) return;  // already related

    if ( IsSupertypePackageableElement != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypePackageableElement != null) {
    
        IsSupertypePackageableElement.clearBackPointerR8001To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Message_c.relateAcrossR8001To(PackageableElement_c target)", 
			"Relate performed across R8001 from Message to Packageable Element without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypePackageableElement = target ;
        m_msg_id = target.getElement_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8001To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8001From(PackageableElement_c target)
{
	unrelateAcrossR8001From(target, true);
}
public void unrelateAcrossR8001From(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypePackageableElement == null) return;  // already unrelated
	
	if (target != IsSupertypePackageableElement) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8001", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8001To(this);
    }
    

      if(IsSupertypePackageableElement != null) {
      
        m_msg_id = IsSupertypePackageableElement.getElement_id();
        IsSupertypePackageableElement = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Message_c getOneMSG_MOnR8001(PackageableElement_c [] targets)
{
    return getOneMSG_MOnR8001(targets, null);
}

public static Message_c getOneMSG_MOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneMSG_MOnR8001(targets[i], test);
        }
    }

    return ret_val;
}

public static Message_c getOneMSG_MOnR8001(PackageableElement_c target)
{
  return getOneMSG_MOnR8001(target, null);
}

public static Message_c getOneMSG_MOnR8001(PackageableElement_c target, boolean loadComponent)
{
    return getOneMSG_MOnR8001(target.getModelRoot(), target, null, loadComponent);
}

public static Message_c getOneMSG_MOnR8001(PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneMSG_MOnR8001(target.getModelRoot(), target, test);
  }
  return null;
}

public static Message_c getOneMSG_MOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
	return getOneMSG_MOnR8001(modelRoot, target, test, true);
}

public static Message_c getOneMSG_MOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneMSG_MOnR8001(modelRoot,target,test);
}
private static Message_c find_getOneMSG_MOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Message_c source = (Message_c)target.backPointer_IsSubtypeMessageIsSubtype_R8001;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Message_c [] getManyMSG_MsOnR8001(PackageableElement_c [] targets)
{
  return getManyMSG_MsOnR8001(targets, null);
}
public static Message_c [] getManyMSG_MsOnR8001(PackageableElement_c [] targets, boolean loadComponent)
{
  return getManyMSG_MsOnR8001(targets, null, loadComponent);
}
public static Message_c [] getManyMSG_MsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR8001(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Message_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Message_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Message_c source = (Message_c)targets[i].backPointer_IsSubtypeMessageIsSubtype_R8001;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Message_c[] ret_set = new Message_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Message_c[0];
  }
  }

public static Message_c [] getManyMSG_MsOnR8001(PackageableElement_c target)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR8001(targetArray);
  } else {
    Message_c [] result = new Message_c [0] ;
  return result ;
}
}

public static Message_c [] getManyMSG_MsOnR8001(PackageableElement_c target, boolean loadComponent)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR8001(targetArray, loadComponent);
  } else {
    Message_c [] result = new Message_c [0] ;
  return result ;
}
}



  
    
// referring navigation

InteractionParticipant_c HasDestinationInteractionParticipant ;
public void relateAcrossR1007To(InteractionParticipant_c target)
{
	relateAcrossR1007To(target, true);
}
public void relateAcrossR1007To(InteractionParticipant_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == HasDestinationInteractionParticipant) return;  // already related

    if ( HasDestinationInteractionParticipant != target ) {
    
    Object oldKey = getInstanceKey();

    if (HasDestinationInteractionParticipant != null) {
    
        HasDestinationInteractionParticipant.clearBackPointerR1007To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Message_c.relateAcrossR1007To(InteractionParticipant_c target)", 
			"Relate performed across R1007 from Message to Interaction Participant without unrelate of prior instance.");  
		}
    }
                
    	HasDestinationInteractionParticipant = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPart_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_sender_part_id = target.getPart_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1007To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1007", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1007From(InteractionParticipant_c target)
{
	unrelateAcrossR1007From(target, true);
}
public void unrelateAcrossR1007From(InteractionParticipant_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (HasDestinationInteractionParticipant == null) return;  // already unrelated
	
	if (target != HasDestinationInteractionParticipant) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1007", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1007To(this);
    }
    

      if(HasDestinationInteractionParticipant != null) {
      
        m_sender_part_id = HasDestinationInteractionParticipant.getPart_id();
        if(IdAssigner.NULL_UUID.equals(m_sender_part_id))
        {
          m_sender_part_id = HasDestinationInteractionParticipant.getPart_idCachedValue();
        }       
        HasDestinationInteractionParticipant = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1007", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Message_c getOneMSG_MOnR1007(InteractionParticipant_c [] targets)
{
    return getOneMSG_MOnR1007(targets, null);
}

public static Message_c getOneMSG_MOnR1007(InteractionParticipant_c [] targets, ClassQueryInterface_c test)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneMSG_MOnR1007(targets[i], test);
        }
    }

    return ret_val;
}

public static Message_c getOneMSG_MOnR1007(InteractionParticipant_c target)
{
  return getOneMSG_MOnR1007(target, null);
}

public static Message_c getOneMSG_MOnR1007(InteractionParticipant_c target, boolean loadComponent)
{
    return getOneMSG_MOnR1007(target.getModelRoot(), target, null, loadComponent);
}

public static Message_c getOneMSG_MOnR1007(InteractionParticipant_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneMSG_MOnR1007(target.getModelRoot(), target, test);
  }
  return null;
}

public static Message_c getOneMSG_MOnR1007(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test)
{
	return getOneMSG_MOnR1007(modelRoot, target, test, true);
}

public static Message_c getOneMSG_MOnR1007(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneMSG_MOnR1007(modelRoot,target,test);
}
private static Message_c find_getOneMSG_MOnR1007(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ReceivesMessageReceives_R1007) {
	    for ( int i = 0; i < target.backPointer_ReceivesMessageReceives_R1007.size(); ++i ) {
	      Message_c source = (Message_c)target.backPointer_ReceivesMessageReceives_R1007.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Message_c [] getManyMSG_MsOnR1007(InteractionParticipant_c [] targets)
{
  return getManyMSG_MsOnR1007(targets, null);
}
public static Message_c [] getManyMSG_MsOnR1007(InteractionParticipant_c [] targets, boolean loadComponent)
{
  return getManyMSG_MsOnR1007(targets, null, loadComponent);
}
public static Message_c [] getManyMSG_MsOnR1007(InteractionParticipant_c [] targets, ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1007(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR1007(InteractionParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Message_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Message_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ReceivesMessageReceives_R1007) {
	    for (int j = 0; j < targets[i].backPointer_ReceivesMessageReceives_R1007.size(); ++j) {
	      Message_c source = (Message_c)targets[i].backPointer_ReceivesMessageReceives_R1007.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Message_c[] ret_set = new Message_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Message_c[0];
  }
  }

public static Message_c [] getManyMSG_MsOnR1007(InteractionParticipant_c target)
{
  return getManyMSG_MsOnR1007(target, null);
}

public static Message_c [] getManyMSG_MsOnR1007(InteractionParticipant_c target, boolean loadComponent)
{
  return getManyMSG_MsOnR1007(target, null, loadComponent);
}

public static Message_c [] getManyMSG_MsOnR1007(InteractionParticipant_c target, ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1007(target, test, true);
}

public static Message_c [] getManyMSG_MsOnR1007(InteractionParticipant_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Message_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_ReceivesMessageReceives_R1007) {
    for (int i = 0; i < target.backPointer_ReceivesMessageReceives_R1007.size(); ++i) {
      Message_c source = (Message_c)target.backPointer_ReceivesMessageReceives_R1007.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Message_c[] ret_set = new Message_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Message_c[0];
	}
  }


  
    
// referring navigation

InteractionParticipant_c HasSourceInteractionParticipant ;
public void relateAcrossR1008To(InteractionParticipant_c target)
{
	relateAcrossR1008To(target, true);
}
public void relateAcrossR1008To(InteractionParticipant_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == HasSourceInteractionParticipant) return;  // already related

    if ( HasSourceInteractionParticipant != target ) {
    
    Object oldKey = getInstanceKey();

    if (HasSourceInteractionParticipant != null) {
    
        HasSourceInteractionParticipant.clearBackPointerR1008To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Message_c.relateAcrossR1008To(InteractionParticipant_c target)", 
			"Relate performed across R1008 from Message to Interaction Participant without unrelate of prior instance.");  
		}
    }
                
    	HasSourceInteractionParticipant = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPart_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_receiver_part_id = target.getPart_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1008To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1008", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1008From(InteractionParticipant_c target)
{
	unrelateAcrossR1008From(target, true);
}
public void unrelateAcrossR1008From(InteractionParticipant_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (HasSourceInteractionParticipant == null) return;  // already unrelated
	
	if (target != HasSourceInteractionParticipant) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1008", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1008To(this);
    }
    

      if(HasSourceInteractionParticipant != null) {
      
        m_receiver_part_id = HasSourceInteractionParticipant.getPart_id();
        if(IdAssigner.NULL_UUID.equals(m_receiver_part_id))
        {
          m_receiver_part_id = HasSourceInteractionParticipant.getPart_idCachedValue();
        }       
        HasSourceInteractionParticipant = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1008", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Message_c getOneMSG_MOnR1008(InteractionParticipant_c [] targets)
{
    return getOneMSG_MOnR1008(targets, null);
}

public static Message_c getOneMSG_MOnR1008(InteractionParticipant_c [] targets, ClassQueryInterface_c test)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneMSG_MOnR1008(targets[i], test);
        }
    }

    return ret_val;
}

public static Message_c getOneMSG_MOnR1008(InteractionParticipant_c target)
{
  return getOneMSG_MOnR1008(target, null);
}

public static Message_c getOneMSG_MOnR1008(InteractionParticipant_c target, boolean loadComponent)
{
    return getOneMSG_MOnR1008(target.getModelRoot(), target, null, loadComponent);
}

public static Message_c getOneMSG_MOnR1008(InteractionParticipant_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneMSG_MOnR1008(target.getModelRoot(), target, test);
  }
  return null;
}

public static Message_c getOneMSG_MOnR1008(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test)
{
	return getOneMSG_MOnR1008(modelRoot, target, test, true);
}

public static Message_c getOneMSG_MOnR1008(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneMSG_MOnR1008(modelRoot,target,test);
}
private static Message_c find_getOneMSG_MOnR1008(ModelRoot modelRoot, InteractionParticipant_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_SendsMessageSends_R1008) {
	    for ( int i = 0; i < target.backPointer_SendsMessageSends_R1008.size(); ++i ) {
	      Message_c source = (Message_c)target.backPointer_SendsMessageSends_R1008.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Message_c [] getManyMSG_MsOnR1008(InteractionParticipant_c [] targets)
{
  return getManyMSG_MsOnR1008(targets, null);
}
public static Message_c [] getManyMSG_MsOnR1008(InteractionParticipant_c [] targets, boolean loadComponent)
{
  return getManyMSG_MsOnR1008(targets, null, loadComponent);
}
public static Message_c [] getManyMSG_MsOnR1008(InteractionParticipant_c [] targets, ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1008(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR1008(InteractionParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Message_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Message_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_SendsMessageSends_R1008) {
	    for (int j = 0; j < targets[i].backPointer_SendsMessageSends_R1008.size(); ++j) {
	      Message_c source = (Message_c)targets[i].backPointer_SendsMessageSends_R1008.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Message_c[] ret_set = new Message_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Message_c[0];
  }
  }

public static Message_c [] getManyMSG_MsOnR1008(InteractionParticipant_c target)
{
  return getManyMSG_MsOnR1008(target, null);
}

public static Message_c [] getManyMSG_MsOnR1008(InteractionParticipant_c target, boolean loadComponent)
{
  return getManyMSG_MsOnR1008(target, null, loadComponent);
}

public static Message_c [] getManyMSG_MsOnR1008(InteractionParticipant_c target, ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1008(target, test, true);
}

public static Message_c [] getManyMSG_MsOnR1008(InteractionParticipant_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Message_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_SendsMessageSends_R1008) {
    for (int i = 0; i < target.backPointer_SendsMessageSends_R1008.size(); ++i) {
      Message_c source = (Message_c)target.backPointer_SendsMessageSends_R1008.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Message_c[] ret_set = new Message_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Message_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

MessageInSequence_c backPointer_ContainedThroughMessageInSequenceContainedThrough_R954;

public void setMessageInSequenceOrderInChildListR954(MessageInSequence_c target, int index) {
	unrelateAcrossR954From(target);
	MessageInSequence_c[] elements = MessageInSequence_c.getManySQ_MISsOnR954(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR954From((MessageInSequence_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR954To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR954To((MessageInSequence_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR954To(MessageInSequence_c target)
{
  if (target != null) {
    target.relateAcrossR954To(this, true) ;
  }
}

public void relateAcrossR954To(MessageInSequence_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR954To(this, notifyChanges) ;
  }
}

public void setBackPointerR954To(MessageInSequence_c target)
{
    backPointer_ContainedThroughMessageInSequenceContainedThrough_R954 = target;
}

public void unrelateAcrossR954From(MessageInSequence_c target)
{
  if (target != null) {
    target.unrelateAcrossR954From(this, true) ;
  }
}

public void unrelateAcrossR954From(MessageInSequence_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR954From(this, notifyChanges) ;
  }
}

public void clearBackPointerR954To(MessageInSequence_c target)
{
	if (target == backPointer_ContainedThroughMessageInSequenceContainedThrough_R954) {
		backPointer_ContainedThroughMessageInSequenceContainedThrough_R954 = null;
	}
}

public static Message_c getOneMSG_MOnR954(MessageInSequence_c [] targets)
{
    return getOneMSG_MOnR954(targets, null);
}

public static Message_c getOneMSG_MOnR954(MessageInSequence_c [] targets, ClassQueryInterface_c test)
{
    return getOneMSG_MOnR954(targets, test, true);
}

public static Message_c getOneMSG_MOnR954(MessageInSequence_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Message_c candidate_val = getOneMSG_MOnR954(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneMSG_MOnR954(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Message_c getOneMSG_MOnR954(MessageInSequence_c target)
{
	return getOneMSG_MOnR954(target, true);
}
public static Message_c getOneMSG_MOnR954(MessageInSequence_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ProvidesContainmentMessage ;
  } else {
    return null;
  }
}

public static Message_c [] getManyMSG_MsOnR954(MessageInSequence_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR954(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR954(MessageInSequence_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Message_c[0];
  
  
  LinkedHashSet<Message_c> elementsSet = new LinkedHashSet<Message_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ProvidesContainmentMessage == null)
	  targets[i].loadProxy();
    Message_c associate = targets[i].ProvidesContainmentMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Message_c[] result = new Message_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Message_c [] getManyMSG_MsOnR954(MessageInSequence_c [] targets)
{
  return getManyMSG_MsOnR954(targets, null);
}

public static Message_c [] getManyMSG_MsOnR954(MessageInSequence_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    MessageInSequence_c [] targetArray = new MessageInSequence_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR954(targetArray, test, loadComponent);
  } else {
    Message_c [] result = new Message_c [0] ;
    return result ;
  }
  
}

public static Message_c [] getManyMSG_MsOnR954(MessageInSequence_c target,
    ClassQueryInterface_c test)
{
    return getManyMSG_MsOnR954(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR954(MessageInSequence_c target)
{
    return getManyMSG_MsOnR954(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR954(MessageInSequence_c target, boolean loadComponent)
{
    return getManyMSG_MsOnR954(target, null, loadComponent);
}


    
  
  
// referred to navigation

SynchronousMessage_c backPointer_IsSubtypeSynchronousMessageIsSubtype_R1018;

public void setSynchronousMessageOrderInChildListR1018(SynchronousMessage_c target, int index) {
	unrelateAcrossR1018From(target);
	SynchronousMessage_c[] elements = SynchronousMessage_c.getManyMSG_SMsOnR1018(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1018From((SynchronousMessage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1018To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1018To((SynchronousMessage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1018To(SynchronousMessage_c target)
{
  if (target != null) {
    target.relateAcrossR1018To(this, true) ;
  }
}

public void relateAcrossR1018To(SynchronousMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1018To(this, notifyChanges) ;
  }
}

public void setBackPointerR1018To(SynchronousMessage_c target)
{
    backPointer_IsSubtypeSynchronousMessageIsSubtype_R1018 = target;
}

public void unrelateAcrossR1018From(SynchronousMessage_c target)
{
  if (target != null) {
    target.unrelateAcrossR1018From(this, true) ;
  }
}

public void unrelateAcrossR1018From(SynchronousMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1018From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1018To(SynchronousMessage_c target)
{
	if (target == backPointer_IsSubtypeSynchronousMessageIsSubtype_R1018) {
		backPointer_IsSubtypeSynchronousMessageIsSubtype_R1018 = null;
	}
}

public static Message_c getOneMSG_MOnR1018(SynchronousMessage_c [] targets)
{
    return getOneMSG_MOnR1018(targets, null);
}

public static Message_c getOneMSG_MOnR1018(SynchronousMessage_c [] targets, ClassQueryInterface_c test)
{
    return getOneMSG_MOnR1018(targets, test, true);
}

public static Message_c getOneMSG_MOnR1018(SynchronousMessage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Message_c candidate_val = getOneMSG_MOnR1018(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneMSG_MOnR1018(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Message_c getOneMSG_MOnR1018(SynchronousMessage_c target)
{
	return getOneMSG_MOnR1018(target, true);
}
public static Message_c getOneMSG_MOnR1018(SynchronousMessage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeMessage ;
  } else {
    return null;
  }
}

public static Message_c [] getManyMSG_MsOnR1018(SynchronousMessage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1018(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR1018(SynchronousMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Message_c[0];
  
  
  LinkedHashSet<Message_c> elementsSet = new LinkedHashSet<Message_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeMessage == null)
	  targets[i].loadProxy();
    Message_c associate = targets[i].IsSupertypeMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Message_c[] result = new Message_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Message_c [] getManyMSG_MsOnR1018(SynchronousMessage_c [] targets)
{
  return getManyMSG_MsOnR1018(targets, null);
}

public static Message_c [] getManyMSG_MsOnR1018(SynchronousMessage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SynchronousMessage_c [] targetArray = new SynchronousMessage_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR1018(targetArray, test, loadComponent);
  } else {
    Message_c [] result = new Message_c [0] ;
    return result ;
  }
  
}

public static Message_c [] getManyMSG_MsOnR1018(SynchronousMessage_c target,
    ClassQueryInterface_c test)
{
    return getManyMSG_MsOnR1018(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1018(SynchronousMessage_c target)
{
    return getManyMSG_MsOnR1018(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1018(SynchronousMessage_c target, boolean loadComponent)
{
    return getManyMSG_MsOnR1018(target, null, loadComponent);
}

  
  
  
// referred to navigation

AsynchronousMessage_c backPointer_IsSubtypeAsynchronousMessageIsSubtype_R1018;

public void setAsynchronousMessageOrderInChildListR1018(AsynchronousMessage_c target, int index) {
	unrelateAcrossR1018From(target);
	AsynchronousMessage_c[] elements = AsynchronousMessage_c.getManyMSG_AMsOnR1018(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1018From((AsynchronousMessage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1018To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1018To((AsynchronousMessage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1018To(AsynchronousMessage_c target)
{
  if (target != null) {
    target.relateAcrossR1018To(this, true) ;
  }
}

public void relateAcrossR1018To(AsynchronousMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1018To(this, notifyChanges) ;
  }
}

public void setBackPointerR1018To(AsynchronousMessage_c target)
{
    backPointer_IsSubtypeAsynchronousMessageIsSubtype_R1018 = target;
}

public void unrelateAcrossR1018From(AsynchronousMessage_c target)
{
  if (target != null) {
    target.unrelateAcrossR1018From(this, true) ;
  }
}

public void unrelateAcrossR1018From(AsynchronousMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1018From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1018To(AsynchronousMessage_c target)
{
	if (target == backPointer_IsSubtypeAsynchronousMessageIsSubtype_R1018) {
		backPointer_IsSubtypeAsynchronousMessageIsSubtype_R1018 = null;
	}
}

public static Message_c getOneMSG_MOnR1018(AsynchronousMessage_c [] targets)
{
    return getOneMSG_MOnR1018(targets, null);
}

public static Message_c getOneMSG_MOnR1018(AsynchronousMessage_c [] targets, ClassQueryInterface_c test)
{
    return getOneMSG_MOnR1018(targets, test, true);
}

public static Message_c getOneMSG_MOnR1018(AsynchronousMessage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Message_c candidate_val = getOneMSG_MOnR1018(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneMSG_MOnR1018(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Message_c getOneMSG_MOnR1018(AsynchronousMessage_c target)
{
	return getOneMSG_MOnR1018(target, true);
}
public static Message_c getOneMSG_MOnR1018(AsynchronousMessage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeMessage ;
  } else {
    return null;
  }
}

public static Message_c [] getManyMSG_MsOnR1018(AsynchronousMessage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1018(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR1018(AsynchronousMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Message_c[0];
  
  
  LinkedHashSet<Message_c> elementsSet = new LinkedHashSet<Message_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeMessage == null)
	  targets[i].loadProxy();
    Message_c associate = targets[i].IsSupertypeMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Message_c[] result = new Message_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Message_c [] getManyMSG_MsOnR1018(AsynchronousMessage_c [] targets)
{
  return getManyMSG_MsOnR1018(targets, null);
}

public static Message_c [] getManyMSG_MsOnR1018(AsynchronousMessage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    AsynchronousMessage_c [] targetArray = new AsynchronousMessage_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR1018(targetArray, test, loadComponent);
  } else {
    Message_c [] result = new Message_c [0] ;
    return result ;
  }
  
}

public static Message_c [] getManyMSG_MsOnR1018(AsynchronousMessage_c target,
    ClassQueryInterface_c test)
{
    return getManyMSG_MsOnR1018(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1018(AsynchronousMessage_c target)
{
    return getManyMSG_MsOnR1018(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1018(AsynchronousMessage_c target, boolean loadComponent)
{
    return getManyMSG_MsOnR1018(target, null, loadComponent);
}

  
  
  
// referred to navigation

ReturnMessage_c backPointer_IsSubtypeReturnMessageIsSubtype_R1018;

public void setReturnMessageOrderInChildListR1018(ReturnMessage_c target, int index) {
	unrelateAcrossR1018From(target);
	ReturnMessage_c[] elements = ReturnMessage_c.getManyMSG_RsOnR1018(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1018From((ReturnMessage_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1018To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1018To((ReturnMessage_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1018To(ReturnMessage_c target)
{
  if (target != null) {
    target.relateAcrossR1018To(this, true) ;
  }
}

public void relateAcrossR1018To(ReturnMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1018To(this, notifyChanges) ;
  }
}

public void setBackPointerR1018To(ReturnMessage_c target)
{
    backPointer_IsSubtypeReturnMessageIsSubtype_R1018 = target;
}

public void unrelateAcrossR1018From(ReturnMessage_c target)
{
  if (target != null) {
    target.unrelateAcrossR1018From(this, true) ;
  }
}

public void unrelateAcrossR1018From(ReturnMessage_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1018From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1018To(ReturnMessage_c target)
{
	if (target == backPointer_IsSubtypeReturnMessageIsSubtype_R1018) {
		backPointer_IsSubtypeReturnMessageIsSubtype_R1018 = null;
	}
}

public static Message_c getOneMSG_MOnR1018(ReturnMessage_c [] targets)
{
    return getOneMSG_MOnR1018(targets, null);
}

public static Message_c getOneMSG_MOnR1018(ReturnMessage_c [] targets, ClassQueryInterface_c test)
{
    return getOneMSG_MOnR1018(targets, test, true);
}

public static Message_c getOneMSG_MOnR1018(ReturnMessage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Message_c candidate_val = getOneMSG_MOnR1018(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneMSG_MOnR1018(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Message_c getOneMSG_MOnR1018(ReturnMessage_c target)
{
	return getOneMSG_MOnR1018(target, true);
}
public static Message_c getOneMSG_MOnR1018(ReturnMessage_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeMessage ;
  } else {
    return null;
  }
}

public static Message_c [] getManyMSG_MsOnR1018(ReturnMessage_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1018(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR1018(ReturnMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Message_c[0];
  
  
  LinkedHashSet<Message_c> elementsSet = new LinkedHashSet<Message_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeMessage == null)
	  targets[i].loadProxy();
    Message_c associate = targets[i].IsSupertypeMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Message_c[] result = new Message_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Message_c [] getManyMSG_MsOnR1018(ReturnMessage_c [] targets)
{
  return getManyMSG_MsOnR1018(targets, null);
}

public static Message_c [] getManyMSG_MsOnR1018(ReturnMessage_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ReturnMessage_c [] targetArray = new ReturnMessage_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR1018(targetArray, test, loadComponent);
  } else {
    Message_c [] result = new Message_c [0] ;
    return result ;
  }
  
}

public static Message_c [] getManyMSG_MsOnR1018(ReturnMessage_c target,
    ClassQueryInterface_c test)
{
    return getManyMSG_MsOnR1018(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1018(ReturnMessage_c target)
{
    return getManyMSG_MsOnR1018(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1018(ReturnMessage_c target, boolean loadComponent)
{
    return getManyMSG_MsOnR1018(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<MessageArgument_c> backPointer_HasAnInformalMessageArgumentHasAnInformal_R1000 = new ArrayList<MessageArgument_c>();

public void setMessageArgumentOrderInChildListR1000(MessageArgument_c target, int index) {
	unrelateAcrossR1000From(target);
	MessageArgument_c[] elements = MessageArgument_c.getManyMSG_AsOnR1000(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1000From((MessageArgument_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1000To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1000To((MessageArgument_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1000To(MessageArgument_c target)
{
  if (target != null) {
    target.relateAcrossR1000To(this, true) ;
  }
}

public void relateAcrossR1000To(MessageArgument_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1000To(this, notifyChanges) ;
  }
}

public void setBackPointerR1000To(MessageArgument_c target)
{
  	synchronized (backPointer_HasAnInformalMessageArgumentHasAnInformal_R1000) {
		backPointer_HasAnInformalMessageArgumentHasAnInformal_R1000.add(target);
	}
}

public void unrelateAcrossR1000From(MessageArgument_c target)
{
  if (target != null) {
    target.unrelateAcrossR1000From(this, true) ;
  }
}

public void unrelateAcrossR1000From(MessageArgument_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1000From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1000To(MessageArgument_c target)
{
  synchronized (backPointer_HasAnInformalMessageArgumentHasAnInformal_R1000) {
	    backPointer_HasAnInformalMessageArgumentHasAnInformal_R1000.remove(target);
	}
}

public static Message_c getOneMSG_MOnR1000(MessageArgument_c [] targets)
{
    return getOneMSG_MOnR1000(targets, null);
}

public static Message_c getOneMSG_MOnR1000(MessageArgument_c [] targets, ClassQueryInterface_c test)
{
    return getOneMSG_MOnR1000(targets, test, true);
}

public static Message_c getOneMSG_MOnR1000(MessageArgument_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Message_c candidate_val = getOneMSG_MOnR1000(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneMSG_MOnR1000(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Message_c getOneMSG_MOnR1000(MessageArgument_c target)
{
	return getOneMSG_MOnR1000(target, true);
}
public static Message_c getOneMSG_MOnR1000(MessageArgument_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.BelongsToInformalMessage ;
  } else {
    return null;
  }
}

public static Message_c [] getManyMSG_MsOnR1000(MessageArgument_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1000(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR1000(MessageArgument_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Message_c[0];
  
  
  LinkedHashSet<Message_c> elementsSet = new LinkedHashSet<Message_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].BelongsToInformalMessage == null)
	  targets[i].loadProxy();
    Message_c associate = targets[i].BelongsToInformalMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Message_c[] result = new Message_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Message_c [] getManyMSG_MsOnR1000(MessageArgument_c [] targets)
{
  return getManyMSG_MsOnR1000(targets, null);
}

public static Message_c [] getManyMSG_MsOnR1000(MessageArgument_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    MessageArgument_c [] targetArray = new MessageArgument_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR1000(targetArray, test, loadComponent);
  } else {
    Message_c [] result = new Message_c [0] ;
    return result ;
  }
  
}

public static Message_c [] getManyMSG_MsOnR1000(MessageArgument_c target,
    ClassQueryInterface_c test)
{
    return getManyMSG_MsOnR1000(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1000(MessageArgument_c target)
{
    return getManyMSG_MsOnR1000(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1000(MessageArgument_c target, boolean loadComponent)
{
    return getManyMSG_MsOnR1000(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<MessageArgument_c> backPointer_HasAFormalMessageArgumentHasAFormal_R1001 = new ArrayList<MessageArgument_c>();

public void setMessageArgumentOrderInChildListR1001(MessageArgument_c target, int index) {
	unrelateAcrossR1001From(target);
	MessageArgument_c[] elements = MessageArgument_c.getManyMSG_AsOnR1001(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1001From((MessageArgument_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1001To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1001To((MessageArgument_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1001To(MessageArgument_c target)
{
  if (target != null) {
    target.relateAcrossR1001To(this, true) ;
  }
}

public void relateAcrossR1001To(MessageArgument_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1001To(this, notifyChanges) ;
  }
}

public void setBackPointerR1001To(MessageArgument_c target)
{
  	synchronized (backPointer_HasAFormalMessageArgumentHasAFormal_R1001) {
		backPointer_HasAFormalMessageArgumentHasAFormal_R1001.add(target);
	}
}

public void unrelateAcrossR1001From(MessageArgument_c target)
{
  if (target != null) {
    target.unrelateAcrossR1001From(this, true) ;
  }
}

public void unrelateAcrossR1001From(MessageArgument_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1001From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1001To(MessageArgument_c target)
{
  synchronized (backPointer_HasAFormalMessageArgumentHasAFormal_R1001) {
	    backPointer_HasAFormalMessageArgumentHasAFormal_R1001.remove(target);
	}
}

public static Message_c getOneMSG_MOnR1001(MessageArgument_c [] targets)
{
    return getOneMSG_MOnR1001(targets, null);
}

public static Message_c getOneMSG_MOnR1001(MessageArgument_c [] targets, ClassQueryInterface_c test)
{
    return getOneMSG_MOnR1001(targets, test, true);
}

public static Message_c getOneMSG_MOnR1001(MessageArgument_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Message_c candidate_val = getOneMSG_MOnR1001(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneMSG_MOnR1001(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Message_c getOneMSG_MOnR1001(MessageArgument_c target)
{
	return getOneMSG_MOnR1001(target, true);
}
public static Message_c getOneMSG_MOnR1001(MessageArgument_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.BelongsToFormalMessage ;
  } else {
    return null;
  }
}

public static Message_c [] getManyMSG_MsOnR1001(MessageArgument_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1001(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR1001(MessageArgument_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Message_c[0];
  
  
  LinkedHashSet<Message_c> elementsSet = new LinkedHashSet<Message_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].BelongsToFormalMessage == null)
	  targets[i].loadProxy();
    Message_c associate = targets[i].BelongsToFormalMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Message_c[] result = new Message_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Message_c [] getManyMSG_MsOnR1001(MessageArgument_c [] targets)
{
  return getManyMSG_MsOnR1001(targets, null);
}

public static Message_c [] getManyMSG_MsOnR1001(MessageArgument_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    MessageArgument_c [] targetArray = new MessageArgument_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR1001(targetArray, test, loadComponent);
  } else {
    Message_c [] result = new Message_c [0] ;
    return result ;
  }
  
}

public static Message_c [] getManyMSG_MsOnR1001(MessageArgument_c target,
    ClassQueryInterface_c test)
{
    return getManyMSG_MsOnR1001(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1001(MessageArgument_c target)
{
    return getManyMSG_MsOnR1001(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1001(MessageArgument_c target, boolean loadComponent)
{
    return getManyMSG_MsOnR1001(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<MessageInCommunication_c> backPointer_CanBeDisplayedInMessageInCommunicationCanBeDisplayedIn_R1135 = new ArrayList<MessageInCommunication_c>();

public void setMessageInCommunicationOrderInChildListR1135(MessageInCommunication_c target, int index) {
	unrelateAcrossR1135From(target);
	MessageInCommunication_c[] elements = MessageInCommunication_c.getManyCOMM_MICsOnR1135(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1135From((MessageInCommunication_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1135To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1135To((MessageInCommunication_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1135To(MessageInCommunication_c target)
{
  if (target != null) {
    target.relateAcrossR1135To(this, true) ;
  }
}

public void relateAcrossR1135To(MessageInCommunication_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1135To(this, notifyChanges) ;
  }
}

public void setBackPointerR1135To(MessageInCommunication_c target)
{
  	synchronized (backPointer_CanBeDisplayedInMessageInCommunicationCanBeDisplayedIn_R1135) {
		backPointer_CanBeDisplayedInMessageInCommunicationCanBeDisplayedIn_R1135.add(target);
	}
}

public void unrelateAcrossR1135From(MessageInCommunication_c target)
{
  if (target != null) {
    target.unrelateAcrossR1135From(this, true) ;
  }
}

public void unrelateAcrossR1135From(MessageInCommunication_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1135From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1135To(MessageInCommunication_c target)
{
  synchronized (backPointer_CanBeDisplayedInMessageInCommunicationCanBeDisplayedIn_R1135) {
	    backPointer_CanBeDisplayedInMessageInCommunicationCanBeDisplayedIn_R1135.remove(target);
	}
}

public static Message_c getOneMSG_MOnR1135(MessageInCommunication_c [] targets)
{
    return getOneMSG_MOnR1135(targets, null);
}

public static Message_c getOneMSG_MOnR1135(MessageInCommunication_c [] targets, ClassQueryInterface_c test)
{
    return getOneMSG_MOnR1135(targets, test, true);
}

public static Message_c getOneMSG_MOnR1135(MessageInCommunication_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Message_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Message_c candidate_val = getOneMSG_MOnR1135(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneMSG_MOnR1135(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Message_c getOneMSG_MOnR1135(MessageInCommunication_c target)
{
	return getOneMSG_MOnR1135(target, true);
}
public static Message_c getOneMSG_MOnR1135(MessageInCommunication_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.MayDisplayMessage ;
  } else {
    return null;
  }
}

public static Message_c [] getManyMSG_MsOnR1135(MessageInCommunication_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1135(targets, test, true);
}

public static Message_c [] getManyMSG_MsOnR1135(MessageInCommunication_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Message_c[0];
  
  
  LinkedHashSet<Message_c> elementsSet = new LinkedHashSet<Message_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].MayDisplayMessage == null)
	  targets[i].loadProxy();
    Message_c associate = targets[i].MayDisplayMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Message_c[] result = new Message_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Message_c [] getManyMSG_MsOnR1135(MessageInCommunication_c [] targets)
{
  return getManyMSG_MsOnR1135(targets, null);
}

public static Message_c [] getManyMSG_MsOnR1135(MessageInCommunication_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    MessageInCommunication_c [] targetArray = new MessageInCommunication_c[1];
    targetArray[0] = target;
    return getManyMSG_MsOnR1135(targetArray, test, loadComponent);
  } else {
    Message_c [] result = new Message_c [0] ;
    return result ;
  }
  
}

public static Message_c [] getManyMSG_MsOnR1135(MessageInCommunication_c target,
    ClassQueryInterface_c test)
{
    return getManyMSG_MsOnR1135(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1135(MessageInCommunication_c target)
{
    return getManyMSG_MsOnR1135(target, null, true);
}

public static Message_c [] getManyMSG_MsOnR1135(MessageInCommunication_c target, boolean loadComponent)
{
    return getManyMSG_MsOnR1135(target, null, loadComponent);
}

public static Message_c getOneMSG_MOnR1135(Communication_c target)
{
  return Message_c.getOneMSG_MOnR1135(MessageInCommunication_c.getOneCOMM_MICOnR1135(target)) ;
}

public static Message_c getOneMSG_MOnR1135(Communication_c target,
    ClassQueryInterface_c test)
{
  return Message_c.getOneMSG_MOnR1135(MessageInCommunication_c.getManyCOMM_MICsOnR1135(target), test) ;
}

public static Message_c [] getManyMSG_MsOnR1135(Communication_c target,
    ClassQueryInterface_c test)
{
	return getManyMSG_MsOnR1135(target, test, true);
}
public static Message_c [] getManyMSG_MsOnR1135(Communication_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  MessageInCommunication_c [] associators = MessageInCommunication_c.getManyCOMM_MICsOnR1135(target, loadComponent) ;
    return Message_c.getManyMSG_MsOnR1135(associators, test, loadComponent) ;
}
public static Message_c [] getManyMSG_MsOnR1135(Communication_c target)
{
    return getManyMSG_MsOnR1135(target, null, true);
}
public static Message_c [] getManyMSG_MsOnR1135(Communication_c target, boolean loadComponent)
{
    return getManyMSG_MsOnR1135(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R8001
      PackageableElement_c relInst40106 = (PackageableElement_c) baseRoot.getInstanceList(PackageableElement_c.class).get(new Object[] {m_msg_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40106 == null) {
      			relInst40106 = (PackageableElement_c) Ooaofooa.getDefaultInstance().getInstanceList(PackageableElement_c.class).get(new Object[] {m_msg_id});
      		}
			if (relInst40106 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40106 = (PackageableElement_c) roots[i].getInstanceList(PackageableElement_c.class).get(new Object[] {m_msg_id});
					if (relInst40106 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40106 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40106) && !isProxy())) {
	      relInst40106.relateAcrossR8001To(this, notifyChanges);
	  }
	  }
	          

	if (HasDestinationInteractionParticipant == null) {          
      // R1007
      InteractionParticipant_c relInst40107 = (InteractionParticipant_c) baseRoot.getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_sender_part_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40107 == null) {
      			relInst40107 = (InteractionParticipant_c) Ooaofooa.getDefaultInstance().getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_sender_part_id});
      		}
			if (relInst40107 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40107 = (InteractionParticipant_c) roots[i].getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_sender_part_id});
					if (relInst40107 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40107 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40107) && !isProxy())) {
	      relInst40107.relateAcrossR1007To(this, notifyChanges);
	  }
	  }
	}
	          

	if (HasSourceInteractionParticipant == null) {          
      // R1008
      InteractionParticipant_c relInst40108 = (InteractionParticipant_c) baseRoot.getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_receiver_part_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst40108 == null) {
      			relInst40108 = (InteractionParticipant_c) Ooaofooa.getDefaultInstance().getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_receiver_part_id});
      		}
			if (relInst40108 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst40108 = (InteractionParticipant_c) roots[i].getInstanceList(InteractionParticipant_c.class).get(new Object[] {m_receiver_part_id});
					if (relInst40108 != null)
						break;
				}
			}
			//synchronized
      if ( relInst40108 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst40108) && !isProxy())) {
	      relInst40108.relateAcrossR1008To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R8001
      // PE_PE
		  inst=IsSupertypePackageableElement;
			unrelateAcrossR8001From(IsSupertypePackageableElement, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R1007
      // SQ_P
		  inst=HasDestinationInteractionParticipant;
			unrelateAcrossR1007From(HasDestinationInteractionParticipant, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R1008
      // SQ_P
		  inst=HasSourceInteractionParticipant;
			unrelateAcrossR1008From(HasSourceInteractionParticipant, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Message_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Message_c inst = (Message_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Message_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Message_c MessageInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Message_c result=findMessageInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Message_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findMessageInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Message_c findMessageInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Message_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Message_c x = (Message_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Message_c MessageInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return MessageInstance(modelRoot,test,true);
  }
  
  public static Message_c MessageInstance(ModelRoot modelRoot)
  {
	 return MessageInstance(modelRoot,null,true);
  }

  public static Message_c [] MessageInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Message_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Message_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Message_c x = (Message_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Message_c[] ret_set = new Message_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Message_c[0];
			}		
		} 
  }
  public static Message_c [] MessageInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  MessageInstances(modelRoot,test,true);
  }
  public static Message_c [] MessageInstances(ModelRoot modelRoot)
  {
	return MessageInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Message.dispose call: ";
	PackageableElement_c testR8001Inst13 = PackageableElement_c.getOnePE_PEOnR8001(this, false);

	if ( testR8001Inst13 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "8001 ";
	}
	MessageInSequence_c testR954Inst = MessageInSequence_c.getOneSQ_MISOnR954(this, false);

	if ( testR954Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "954 ";	
	}
	SynchronousMessage_c testR1018Inst1 = SynchronousMessage_c.getOneMSG_SMOnR1018(this, false);

	if ( testR1018Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1018 ";
	}
	AsynchronousMessage_c testR1018Inst2 = AsynchronousMessage_c.getOneMSG_AMOnR1018(this, false);

	if ( testR1018Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1018 ";
	}
	ReturnMessage_c testR1018Inst3 = ReturnMessage_c.getOneMSG_ROnR1018(this, false);

	if ( testR1018Inst3 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1018 ";
	}
	MessageArgument_c testR1000Inst = MessageArgument_c.getOneMSG_AOnR1000(this, false);

	if ( testR1000Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1000 ";	
	}
	MessageArgument_c testR1001Inst = MessageArgument_c.getOneMSG_AOnR1001(this, false);

	if ( testR1001Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1001 ";	
	}
	InteractionParticipant_c testR1007Inst = InteractionParticipant_c.getOneSQ_POnR1007(this, false);

	if ( testR1007Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "1007 ";
	}
	InteractionParticipant_c testR1008Inst = InteractionParticipant_c.getOneSQ_POnR1008(this, false);

	if ( testR1008Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "1008 ";
	}
 	MessageInCommunication_c testR1135Inst = MessageInCommunication_c.getOneCOMM_MICOnR1135(this, false);

 	if ( testR1135Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "1135 ";
 	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Message", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("sender_part_id")){
         return true;
      }
      if(attributeName.equals("receiver_part_id")){
         return true;
      }
      if(attributeName.equals("msg_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getMsg_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getMsg_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getSender_part_idLongBased()
  {
    if ( HasDestinationInteractionParticipant != null )
    {
      return HasDestinationInteractionParticipant.getPart_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSender_part_id()
  {
    if ( HasDestinationInteractionParticipant != null )
    {
      return HasDestinationInteractionParticipant.getPart_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSender_part_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sender_part_id) )
      return m_sender_part_id;
    else
      return getSender_part_id();
  }
  
  public void setSender_part_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_sender_part_id)){
	        return;
	    }
	}else if(m_sender_part_id != null){
	    if(m_sender_part_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Sender_part_id", m_sender_part_id, newValue,true); 
   m_sender_part_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getReceiver_part_idLongBased()
  {
    if ( HasSourceInteractionParticipant != null )
    {
      return HasSourceInteractionParticipant.getPart_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getReceiver_part_id()
  {
    if ( HasSourceInteractionParticipant != null )
    {
      return HasSourceInteractionParticipant.getPart_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getReceiver_part_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_receiver_part_id) )
      return m_receiver_part_id;
    else
      return getReceiver_part_id();
  }
  
  public void setReceiver_part_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_receiver_part_id)){
	        return;
	    }
	}else if(m_receiver_part_id != null){
	    if(m_receiver_part_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Receiver_part_id", m_receiver_part_id, newValue,true); 
   m_receiver_part_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getMsg_idLongBased()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getMsg_id()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_id();
    }
    return m_msg_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypePackageableElement != null );
 
 }                  

  public java.util.UUID getMsg_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_msg_id) )
      return m_msg_id;
    else
      return getMsg_id();
  }
  
  public void setMsg_id(java.util.UUID newValue)
  {
   m_msg_id = IdAssigner.preprocessUUID(newValue);
  }
  public boolean getParticipatesincommunication()
  {
    return m_participatesincommunication ;
  }


  public void setParticipatesincommunication(boolean newValue)
  {
    if(m_participatesincommunication == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Participatesincommunication", new Boolean(m_participatesincommunication), new Boolean(newValue),true);

   m_participatesincommunication = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Message", //$NON-NLS-1$
	  " Operation entered: Message::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Message_c [] objs = Message_c.MessageInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Message", //$NON-NLS-1$
	  " Operation entered: Message::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Message_c_test40110_c implements ClassQueryInterface_c
    {
	  Message_c_test40110_c( java.util.UUID            p40111 ) {
	  m_p40111 = p40111;
	  }
	  private java.util.UUID             m_p40111; 
	  public boolean evaluate (Object candidate)
	  {
	      Message_c selected = (Message_c) candidate;
	      boolean retval = false;
	      retval = (selected.getMsg_id().equals(m_p40111));
	      return retval;
	  }
    }

    Message_c [] objs40109 = 
    Message_c.MessageInstances(modelRoot, new Message_c_test40110_c(getMsg_id())) ;

    if ( (  (objs40109.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Message", //$NON-NLS-1$
           "Consistency: Object: Message: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40109.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Message: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40109.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs40109.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Message", //$NON-NLS-1$
           "Consistency: Object: Message: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40109.length )  + " Msg_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Message: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40109.length )  + " Msg_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Message is a referring class in association: rel.Numb = 1007
          // The participating class is: Interaction Participant
    class InteractionParticipant_c_test40115_c implements ClassQueryInterface_c
    {
	  InteractionParticipant_c_test40115_c( java.util.UUID            p40116 ) {
	  m_p40116 = p40116;
	  }
	  private java.util.UUID             m_p40116; 
	  public boolean evaluate (Object candidate)
	  {
	      InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPart_id().equals(m_p40116));
	      return retval;
	  }
    }

    InteractionParticipant_c [] objs40114 = 
    InteractionParticipant_c.InteractionParticipantInstances(modelRoot, new InteractionParticipant_c_test40115_c(getSender_part_id())) ;

    if ( (  (objs40114.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Message", //$NON-NLS-1$
           "Consistency: Object: Message: Association: 1007: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40114.length )  + " Sender_Part_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Message: Association: 1007: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40114.length )  + " Sender_Part_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Message is a referring class in association: rel.Numb = 1008
          // The participating class is: Interaction Participant
    class InteractionParticipant_c_test40118_c implements ClassQueryInterface_c
    {
	  InteractionParticipant_c_test40118_c( java.util.UUID            p40119 ) {
	  m_p40119 = p40119;
	  }
	  private java.util.UUID             m_p40119; 
	  public boolean evaluate (Object candidate)
	  {
	      InteractionParticipant_c selected = (InteractionParticipant_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPart_id().equals(m_p40119));
	      return retval;
	  }
    }

    InteractionParticipant_c [] objs40117 = 
    InteractionParticipant_c.InteractionParticipantInstances(modelRoot, new InteractionParticipant_c_test40118_c(getReceiver_part_id())) ;

    if ( (  (objs40117.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Message", //$NON-NLS-1$
           "Consistency: Object: Message: Association: 1008: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs40117.length )  + " Receiver_Part_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Message: Association: 1008: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40117.length )  + " Receiver_Part_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Message is a subtype in association: rel.Numb = 8001
          // The supertype class is: Packageable Element
         //    Note: The consistency test for this supertype has been removed 
         //          until generic package _migration_ is complete.
          // Message is a participating class in association: rel.Numb = 954
             // Object: Message In Sequence
    class MessageInSequence_c_test40124_c implements ClassQueryInterface_c
    {
	  MessageInSequence_c_test40124_c( java.util.UUID            p40125 ) {
	  m_p40125 = p40125;
	  }
	  private java.util.UUID             m_p40125; 
	  public boolean evaluate (Object candidate)
	  {
	      MessageInSequence_c selected = (MessageInSequence_c) candidate;
	      boolean retval = false;
	      retval = (selected.getMsg_id().equals(m_p40125));
	      return retval;
	  }
    }

    MessageInSequence_c [] objs40123 = 
    MessageInSequence_c.MessageInSequenceInstances(modelRoot, new MessageInSequence_c_test40124_c(getMsg_id())) ;

    if ( (  (objs40123.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Message", //$NON-NLS-1$
           "Consistency: Object: Message: Association: 954: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40123.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Message: Association: 954: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40123.length )  , e); 
      }
      retval = false;

    }

          // Supertype: rel.Numb = 1018
    int objs40126 = 0;
            // Subtype Object: Synchronous Message
    class SynchronousMessage_c_test40127_c implements ClassQueryInterface_c
    {
	  SynchronousMessage_c_test40127_c( java.util.UUID            p40128 ) {
	  m_p40128 = p40128;
	  }
	  private java.util.UUID             m_p40128; 
	  public boolean evaluate (Object candidate)
	  {
	      SynchronousMessage_c selected = (SynchronousMessage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getMsg_id().equals(m_p40128));
	      return retval;
	  }
    }

    SynchronousMessage_c [] objs40129 = 
    SynchronousMessage_c.SynchronousMessageInstances(modelRoot, new SynchronousMessage_c_test40127_c(getMsg_id())) ;
 
    objs40126 = objs40126 + objs40129.length;
            // Subtype Object: Asynchronous Message
    class AsynchronousMessage_c_test40130_c implements ClassQueryInterface_c
    {
	  AsynchronousMessage_c_test40130_c( java.util.UUID            p40131 ) {
	  m_p40131 = p40131;
	  }
	  private java.util.UUID             m_p40131; 
	  public boolean evaluate (Object candidate)
	  {
	      AsynchronousMessage_c selected = (AsynchronousMessage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getMsg_id().equals(m_p40131));
	      return retval;
	  }
    }

    AsynchronousMessage_c [] objs40132 = 
    AsynchronousMessage_c.AsynchronousMessageInstances(modelRoot, new AsynchronousMessage_c_test40130_c(getMsg_id())) ;
 
    objs40126 = objs40126 + objs40132.length;
            // Subtype Object: Return Message
    class ReturnMessage_c_test40133_c implements ClassQueryInterface_c
    {
	  ReturnMessage_c_test40133_c( java.util.UUID            p40134 ) {
	  m_p40134 = p40134;
	  }
	  private java.util.UUID             m_p40134; 
	  public boolean evaluate (Object candidate)
	  {
	      ReturnMessage_c selected = (ReturnMessage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getMsg_id().equals(m_p40134));
	      return retval;
	  }
    }

    ReturnMessage_c [] objs40135 = 
    ReturnMessage_c.ReturnMessageInstances(modelRoot, new ReturnMessage_c_test40133_c(getMsg_id())) ;
 
    objs40126 = objs40126 + objs40135.length;
    if ( objs40126 != 1 )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Message", //$NON-NLS-1$
           "Consistency: Object: Message: Association: 1018: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs40126 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Message: Association: 1018: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs40126 )  , e); 
      }
      retval = false;

    }

          // Message is a participating class in association: rel.Numb = 1000
             // Object: Message Argument
          // Message is a participating class in association: rel.Numb = 1001
             // Object: Message Argument
          // Associated Other Side: rel.Numb = 1135
            // Link Object: Message in Communication
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Message", " Operation entered: Message::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


if ( (  (v_pe != null)) )
{

if (v_pe != null) {
v_pe.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


return ;



}

MessageArgument_c [] v_iargs = MessageArgument_c.getManyMSG_AsOnR1000(this);


MessageArgument_c [] v_fargs = MessageArgument_c.getManyMSG_AsOnR1001(this);


MessageArgument_c  v_farg = null;
for ( int i37255 = 0; i37255 < v_fargs.length; i37255++)
{
  v_farg = v_fargs[i37255] ;

this.unrelateAcrossR1001From(v_farg);


if (v_farg != null) {
v_farg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

MessageArgument_c  v_iarg = null;
for ( int i37256 = 0; i37256 < v_iargs.length; i37256++)
{
  v_iarg = v_iargs[i37256] ;

this.unrelateAcrossR1000From(v_iarg);


if (v_iarg != null) {
v_iarg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

InteractionParticipant_c v_participant = InteractionParticipant_c.getOneSQ_POnR1007(this);


if ( (  (v_participant != null)) )
{

this.unrelateAcrossR1007From(v_participant);



}

v_participant = InteractionParticipant_c.getOneSQ_POnR1008(this);


if ( (  (v_participant != null)) )
{

this.unrelateAcrossR1008From(v_participant);



}

SynchronousMessage_c v_sm = SynchronousMessage_c.getOneMSG_SMOnR1018(this);


AsynchronousMessage_c v_am = AsynchronousMessage_c.getOneMSG_AMOnR1018(this);


ReturnMessage_c v_rm = ReturnMessage_c.getOneMSG_ROnR1018(this);


if ( (  (v_sm != null)) )
{

this.unrelateAcrossR1018From(v_sm);


if (v_sm != null) {
v_sm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( (  (v_am != null)) )
{

this.unrelateAcrossR1018From(v_am);


if (v_am != null) {
v_am.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( (  (v_rm != null)) )
{

this.unrelateAcrossR1018From(v_rm);


if (v_rm != null) {
v_rm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

MessageInCommunication_c v_mic = MessageInCommunication_c.getOneCOMM_MICOnR1135(this);


if ( (  (v_mic != null)) )
{

Communication_c v_comm = Communication_c.getOneCOMM_COMMOnR1135(v_mic);


if ( (  (v_comm != null)) )
{

if (v_mic != null) {
v_mic.unrelateAcrossR1135From( this ) ; v_mic.unrelateAcrossR1135From( v_comm ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate using attempted on null link class instance.", t);
}



}


}

MessageInSequence_c v_mis = MessageInSequence_c.getOneSQ_MISOnR954(this);


if ( (  (v_mis != null)) )
{

Sequence_c v_sequence = Sequence_c.getOneSQ_SOnR953(v_mis);


if (v_mis != null) {
v_mis.unrelateAcrossR953From(v_sequence);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_mis != null) {
v_mis.unrelateAcrossR954From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_mis != null) {
// get the location of this element in the instance list
// before deleting
if ( v_mis.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_mis));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Newargument()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Message", " Operation entered: Message::Newargument") ; 
               final ModelRoot modelRoot = getModelRoot();
MessageArgument_c v_argument = new MessageArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_argument));


InformalArgument_c v_informalArg = new InformalArgument_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_informalArg));


if (v_argument != null) {
  v_argument.relateAcrossR1000To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_argument != null) {
  v_argument.relateAcrossR1013To(v_informalArg);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_argument != null) {
v_argument.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newArgument
  public  String       Getname()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Message", " Operation entered: Message::Getname") ; 
               final ModelRoot modelRoot = getModelRoot();
ReturnMessage_c v_rm = ReturnMessage_c.getOneMSG_ROnR1018(this);


SynchronousMessage_c v_sm = SynchronousMessage_c.getOneMSG_SMOnR1018(this);


AsynchronousMessage_c v_am = AsynchronousMessage_c.getOneMSG_AMOnR1018(this);


if ( (  (v_rm != null)) )
{

return v_rm.getName();



}

else if ( (  (v_sm != null)) )
{

return v_sm.getLabel();



}

else if ( (  (v_am != null)) )
{

return v_am.getLabel();



}

else
{

return "";



}


   } // End getName
  public  void Unformalize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Message", " Operation entered: Message::Unformalize") ; 
               final ModelRoot modelRoot = getModelRoot();
SynchronousMessage_c v_sm = SynchronousMessage_c.getOneMSG_SMOnR1018(this);


AsynchronousMessage_c v_am = AsynchronousMessage_c.getOneMSG_AMOnR1018(this);


if ( (  (v_sm != null)) )
{

if ( (v_sm.getIsformal()) )
{

if (v_sm != null) {
v_sm.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

else if ( (  (v_am != null)) )
{

if ( (v_am.getIsformal()) )
{

if (v_am != null) {
v_am.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End unformalize
  public  void Disposeformalarguments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Message", " Operation entered: Message::Disposeformalarguments") ; 
               final ModelRoot modelRoot = getModelRoot();
MessageArgument_c [] v_arguments = MessageArgument_c.getManyMSG_AsOnR1001(this);


MessageArgument_c  v_argument = null;
for ( int i37257 = 0; i37257 < v_arguments.length; i37257++)
{
  v_argument = v_arguments[i37257] ;

if (v_argument != null) {
v_argument.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End disposeFormalArguments
  public  void Pastemessageargument(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Message", " Operation entered: Message::Pastemessageargument") ; 
               final ModelRoot modelRoot = getModelRoot();
MessageArgument_c v_argument = (MessageArgument_c) modelRoot.getInstanceList(MessageArgument_c.class).getGlobal(null, p_Id);


if ( (  (v_argument != null)) )
{

Message_c v_existingMsg = Message_c.getOneMSG_MOnR1000(v_argument);


if ( (  (v_existingMsg != null)) )
{

if (v_existingMsg != null) {
v_existingMsg.unrelateAcrossR1000From(v_argument);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_argument != null) {
  v_argument.relateAcrossR1000To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteMessageArgument
  public  boolean      Cancopymessageargument(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Message", " Operation entered: Message::Cancopymessageargument") ; 
               final ModelRoot modelRoot = getModelRoot();
MessageArgument_c v_argument = (MessageArgument_c) modelRoot.getInstanceList(MessageArgument_c.class).getGlobal(null, p_Id);


if ( (  (v_argument != null)) )
{

InformalArgument_c v_informal = InformalArgument_c.getOneMSG_IAOnR1013(v_argument);


if ( (  (v_informal == null)) )
{

return false;



}


}

else
{

return false;



}

return true;



   } // End canCopyMessageArgument
  public  void Deassociatefromtarget()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Message", " Operation entered: Message::Deassociatefromtarget") ; 
               final ModelRoot modelRoot = getModelRoot();
InteractionParticipant_c v_destPart = InteractionParticipant_c.getOneSQ_POnR1007(this);


if ( (  (v_destPart != null)) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(v_destPart);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

SynchronousMessage_c v_sync = SynchronousMessage_c.getOneMSG_SMOnR1018(this);


AsynchronousMessage_c v_async = AsynchronousMessage_c.getOneMSG_AMOnR1018(this);


if ( (  (v_sync != null)) )
{

if ( (  !getParticipatesincommunication()) )
{

return ;



}


}

if ( (  (v_async != null)) )
{

if ( (  !getParticipatesincommunication()) )
{

return ;



}


}

Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_destPart));


if ( (  (v_pkg == null) &&   (v_component != null)) )
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent));



}

if ( (  (v_pkg != null)) )
{

this.unrelateAcrossR1007From(v_destPart);



}


}

else
{

Communication_c v_comm = Communication_c.getOneCOMM_COMMOnR1126(ParticipantInCommunication_c.getOneCOMM_PICOnR1126(v_destPart));


if ( (  (v_comm != null)) )
{

this.unrelateAcrossR1007From(v_destPart);



}


}


}


   } // End deassociateFromTarget

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Message
