package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.SynchronousMessage_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_SYNCHRONOUS_MESSAGE extends genericEvent_c {
	public abstract int getEvtcode();
}

public class SynchronousMessage_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public SynchronousMessage_c(ModelRoot modelRoot, java.util.UUID p_m_msg_id,
			String p_m_informalname, String p_m_descrip,
			String p_m_guardcondition, String p_m_resulttarget,
			String p_m_returnvalue, boolean p_m_isformal, String p_m_label,
			String p_m_sequencenumb) {
		super(modelRoot);
		m_resulttarget = p_m_resulttarget;
		m_returnvalue = p_m_returnvalue;
		m_guardcondition = p_m_guardcondition;
		m_descrip = p_m_descrip;
		m_isformal = p_m_isformal;
		m_label = p_m_label;
		m_informalname = p_m_informalname;
		m_sequencenumb = p_m_sequencenumb;
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_msg_id = IdAssigner.preprocessUUID(p_m_msg_id);

		Object[] key = {m_msg_id};
		addInstanceToMap(key);
	}
	static public SynchronousMessage_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_msg_id, String p_m_informalname,
			String p_m_descrip, String p_m_guardcondition,
			String p_m_resulttarget, String p_m_returnvalue,
			boolean p_m_isformal, String p_m_label, String p_m_sequencenumb,
			String p_contentPath, IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(SynchronousMessage_c.class);
		SynchronousMessage_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_msg_id};
			new_inst = (SynchronousMessage_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				new_inst.m_resulttarget = p_m_resulttarget;
				new_inst.m_returnvalue = p_m_returnvalue;
				new_inst.m_guardcondition = p_m_guardcondition;
				new_inst.m_descrip = p_m_descrip;
				new_inst.m_isformal = p_m_isformal;
				new_inst.m_label = p_m_label;
				new_inst.m_informalname = p_m_informalname;
				new_inst.m_sequencenumb = p_m_sequencenumb;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_msg_id = IdAssigner.preprocessUUID(p_m_msg_id);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new SynchronousMessage_c(modelRoot, p_m_msg_id,
					p_m_informalname, p_m_descrip, p_m_guardcondition,
					p_m_resulttarget, p_m_returnvalue, p_m_isformal, p_m_label,
					p_m_sequencenumb);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public SynchronousMessage_c resolveInstance(ModelRoot modelRoot,
			java.util.UUID p_m_msg_id, String p_m_informalname,
			String p_m_descrip, String p_m_guardcondition,
			String p_m_resulttarget, String p_m_returnvalue,
			boolean p_m_isformal, String p_m_label, String p_m_sequencenumb) {
		InstanceList instances = modelRoot
				.getInstanceList(SynchronousMessage_c.class);
		SynchronousMessage_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_msg_id};
			source = (SynchronousMessage_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				source.m_resulttarget = p_m_resulttarget;
				source.m_returnvalue = p_m_returnvalue;
				source.m_guardcondition = p_m_guardcondition;
				source.m_descrip = p_m_descrip;
				source.m_isformal = p_m_isformal;
				source.m_label = p_m_label;
				source.m_informalname = p_m_informalname;
				source.m_sequencenumb = p_m_sequencenumb;
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_msg_id = IdAssigner.preprocessUUID(p_m_msg_id);

				return source;
			}
		}
		// there is no instance matching the id
		SynchronousMessage_c new_inst = new SynchronousMessage_c(modelRoot,
				p_m_msg_id, p_m_informalname, p_m_descrip, p_m_guardcondition,
				p_m_resulttarget, p_m_returnvalue, p_m_isformal, p_m_label,
				p_m_sequencenumb);
		return new_inst;
	}
	public SynchronousMessage_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_resulttarget = "";
		m_returnvalue = "";
		m_guardcondition = "";
		m_descrip = "";
		m_label = "";
		m_informalname = "";
		m_sequencenumb = "";
		m_msg_id = IdAssigner.NULL_UUID;
		Object[] key = {m_msg_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_msg_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p4
		// round p5
		if (m_msg_id != p_newKey) {

			m_msg_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof SynchronousMessage_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof SynchronousMessage_c)) {
			return false;
		}

		SynchronousMessage_c me = (SynchronousMessage_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getMsg_id()) || IdAssigner.NULL_UUID
						.equals(((SynchronousMessage_c) elem).getMsg_id())) && this != elem)) {
			return false;
		}
		if (!getMsg_id().equals(((SynchronousMessage_c) elem).getMsg_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof SynchronousMessage_c)) {
			return false;
		}

		SynchronousMessage_c me = (SynchronousMessage_c) elem;
		if (!getMsg_idCachedValue().equals(
				((SynchronousMessage_c) elem).getMsg_idCachedValue()))
			return false;
		return true;
	}

	// Attributes
	private String m_resulttarget;
	private String m_returnvalue;
	private String m_guardcondition;
	private String m_descrip;
	private boolean m_isformal;
	private String m_label;
	private String m_informalname;
	private String m_sequencenumb;
	private java.util.UUID m_msg_id;

	// declare association references from this class

	// referring navigation

	Message_c IsSupertypeMessage;
	public void relateAcrossR1018To(Message_c target) {
		relateAcrossR1018To(target, true);
	}
	public void relateAcrossR1018To(Message_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (target == IsSupertypeMessage)
			return; // already related

		if (IsSupertypeMessage != target) {

			Object oldKey = getInstanceKey();

			if (IsSupertypeMessage != null) {

				IsSupertypeMessage.clearBackPointerR1018To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"SynchronousMessage_c.relateAcrossR1018To(Message_c target)",
									"Relate performed across R1018 from Synchronous Message to Message without unrelate of prior instance.");
				}
			}

			IsSupertypeMessage = target;
			if (IdAssigner.NULL_UUID.equals(target.getMsg_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_msg_id = target.getMsg_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR1018To(this);
			target.addRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "1018", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR1018From(Message_c target) {
		unrelateAcrossR1018From(target, true);
	}
	public void unrelateAcrossR1018From(Message_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (IsSupertypeMessage == null)
			return; // already unrelated

		if (target != IsSupertypeMessage) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R1018",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR1018To(this);
		}

		if (IsSupertypeMessage != null) {

			m_msg_id = IsSupertypeMessage.getMsg_id();
			if (IdAssigner.NULL_UUID.equals(m_msg_id)) {
				m_msg_id = IsSupertypeMessage.getMsg_idCachedValue();
			}
			IsSupertypeMessage = null;
			target.removeRef();
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "1018", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1018(Message_c[] targets) {
		return getOneMSG_SMOnR1018(targets, null);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1018(Message_c[] targets,
			ClassQueryInterface_c test) {
		SynchronousMessage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneMSG_SMOnR1018(targets[i], test);
			}
		}

		return ret_val;
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1018(Message_c target) {
		return getOneMSG_SMOnR1018(target, null);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1018(Message_c target,
			boolean loadComponent) {
		return getOneMSG_SMOnR1018(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1018(Message_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			return getOneMSG_SMOnR1018(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1018(ModelRoot modelRoot,
			Message_c target, ClassQueryInterface_c test) {
		return getOneMSG_SMOnR1018(modelRoot, target, test, true);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1018(ModelRoot modelRoot,
			Message_c target, ClassQueryInterface_c test, boolean loadComponent) {
		return find_getOneMSG_SMOnR1018(modelRoot, target, test);
	}
	private static SynchronousMessage_c find_getOneMSG_SMOnR1018(
			ModelRoot modelRoot, Message_c target, ClassQueryInterface_c test) {
		if (target != null) {
			SynchronousMessage_c source = (SynchronousMessage_c) target.backPointer_IsSubtypeSynchronousMessageIsSubtype_R1018;
			if (source != null && (test == null || test.evaluate(source))) {
				return source;
			}
		}
		// not found
		return null;
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1018(
			Message_c[] targets) {
		return getManyMSG_SMsOnR1018(targets, null);
	}
	public static SynchronousMessage_c[] getManyMSG_SMsOnR1018(
			Message_c[] targets, boolean loadComponent) {
		return getManyMSG_SMsOnR1018(targets, null, loadComponent);
	}
	public static SynchronousMessage_c[] getManyMSG_SMsOnR1018(
			Message_c[] targets, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1018(targets, test, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1018(
			Message_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new SynchronousMessage_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();

		InstanceList instances = modelRoot
				.getInstanceList(SynchronousMessage_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			SynchronousMessage_c source = (SynchronousMessage_c) targets[i].backPointer_IsSubtypeSynchronousMessageIsSubtype_R1018;
			if (source != null && (test == null || test.evaluate(source))) {
				matches.add(source);
			}
		}
		if (matches.size() > 0) {
			SynchronousMessage_c[] ret_set = new SynchronousMessage_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new SynchronousMessage_c[0];
		}
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1018(Message_c target) {
		if (target != null) {
			Message_c[] targetArray = new Message_c[1];
			targetArray[0] = target;
			return getManyMSG_SMsOnR1018(targetArray);
		} else {
			SynchronousMessage_c[] result = new SynchronousMessage_c[0];
			return result;
		}
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1018(
			Message_c target, boolean loadComponent) {
		if (target != null) {
			Message_c[] targetArray = new Message_c[1];
			targetArray[0] = target;
			return getManyMSG_SMsOnR1018(targetArray, loadComponent);
		} else {
			SynchronousMessage_c[] result = new SynchronousMessage_c[0];
			return result;
		}
	}

	// declare associations referring to this class

	// referred to navigation

	FunctionMessage_c backPointer_IsSubtypeFunctionMessageIsSubtype_R1020;

	public void setFunctionMessageOrderInChildListR1020(
			FunctionMessage_c target, int index) {
		unrelateAcrossR1020From(target);
		FunctionMessage_c[] elements = FunctionMessage_c
				.getManyMSG_FsOnR1020(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1020From((FunctionMessage_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1020To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1020To((FunctionMessage_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1020To(FunctionMessage_c target) {
		if (target != null) {
			target.relateAcrossR1020To(this, true);
		}
	}

	public void relateAcrossR1020To(FunctionMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1020To(this, notifyChanges);
		}
	}

	public void setBackPointerR1020To(FunctionMessage_c target) {
		backPointer_IsSubtypeFunctionMessageIsSubtype_R1020 = target;
	}

	public void unrelateAcrossR1020From(FunctionMessage_c target) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, true);
		}
	}

	public void unrelateAcrossR1020From(FunctionMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1020To(FunctionMessage_c target) {
		if (target == backPointer_IsSubtypeFunctionMessageIsSubtype_R1020) {
			backPointer_IsSubtypeFunctionMessageIsSubtype_R1020 = null;
		}
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			FunctionMessage_c[] targets) {
		return getOneMSG_SMOnR1020(targets, null);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			FunctionMessage_c[] targets, ClassQueryInterface_c test) {
		return getOneMSG_SMOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			FunctionMessage_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SynchronousMessage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SynchronousMessage_c candidate_val = getOneMSG_SMOnR1020(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneMSG_SMOnR1020(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			FunctionMessage_c target) {
		return getOneMSG_SMOnR1020(target, true);
	}
	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			FunctionMessage_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSynchronousMessage;
		} else {
			return null;
		}
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			FunctionMessage_c[] targets, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c [] getManyMSG_SMsOnR1020(FunctionMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SynchronousMessage_c[0];
  
  
  LinkedHashSet<SynchronousMessage_c> elementsSet = new LinkedHashSet<SynchronousMessage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSynchronousMessage == null)
	  targets[i].loadProxy();
    SynchronousMessage_c associate = targets[i].IsSupertypeSynchronousMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SynchronousMessage_c[] result = new SynchronousMessage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			FunctionMessage_c[] targets) {
		return getManyMSG_SMsOnR1020(targets, null);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			FunctionMessage_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			FunctionMessage_c[] targetArray = new FunctionMessage_c[1];
			targetArray[0] = target;
			return getManyMSG_SMsOnR1020(targetArray, test, loadComponent);
		} else {
			SynchronousMessage_c[] result = new SynchronousMessage_c[0];
			return result;
		}

	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			FunctionMessage_c target, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			FunctionMessage_c target) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			FunctionMessage_c target, boolean loadComponent) {
		return getManyMSG_SMsOnR1020(target, null, loadComponent);
	}

	// referred to navigation

	OperationMessage_c backPointer_IsSubtypeOperationMessageIsSubtype_R1020;

	public void setOperationMessageOrderInChildListR1020(
			OperationMessage_c target, int index) {
		unrelateAcrossR1020From(target);
		OperationMessage_c[] elements = OperationMessage_c
				.getManyMSG_OsOnR1020(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1020From((OperationMessage_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1020To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1020To((OperationMessage_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1020To(OperationMessage_c target) {
		if (target != null) {
			target.relateAcrossR1020To(this, true);
		}
	}

	public void relateAcrossR1020To(OperationMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1020To(this, notifyChanges);
		}
	}

	public void setBackPointerR1020To(OperationMessage_c target) {
		backPointer_IsSubtypeOperationMessageIsSubtype_R1020 = target;
	}

	public void unrelateAcrossR1020From(OperationMessage_c target) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, true);
		}
	}

	public void unrelateAcrossR1020From(OperationMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1020To(OperationMessage_c target) {
		if (target == backPointer_IsSubtypeOperationMessageIsSubtype_R1020) {
			backPointer_IsSubtypeOperationMessageIsSubtype_R1020 = null;
		}
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			OperationMessage_c[] targets) {
		return getOneMSG_SMOnR1020(targets, null);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			OperationMessage_c[] targets, ClassQueryInterface_c test) {
		return getOneMSG_SMOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			OperationMessage_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SynchronousMessage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SynchronousMessage_c candidate_val = getOneMSG_SMOnR1020(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneMSG_SMOnR1020(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			OperationMessage_c target) {
		return getOneMSG_SMOnR1020(target, true);
	}
	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			OperationMessage_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSynchronousMessage;
		} else {
			return null;
		}
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			OperationMessage_c[] targets, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c [] getManyMSG_SMsOnR1020(OperationMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SynchronousMessage_c[0];
  
  
  LinkedHashSet<SynchronousMessage_c> elementsSet = new LinkedHashSet<SynchronousMessage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSynchronousMessage == null)
	  targets[i].loadProxy();
    SynchronousMessage_c associate = targets[i].IsSupertypeSynchronousMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SynchronousMessage_c[] result = new SynchronousMessage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			OperationMessage_c[] targets) {
		return getManyMSG_SMsOnR1020(targets, null);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			OperationMessage_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			OperationMessage_c[] targetArray = new OperationMessage_c[1];
			targetArray[0] = target;
			return getManyMSG_SMsOnR1020(targetArray, test, loadComponent);
		} else {
			SynchronousMessage_c[] result = new SynchronousMessage_c[0];
			return result;
		}

	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			OperationMessage_c target, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			OperationMessage_c target) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			OperationMessage_c target, boolean loadComponent) {
		return getManyMSG_SMsOnR1020(target, null, loadComponent);
	}

	// referred to navigation

	BridgeMessage_c backPointer_IsSubtypeBridgeMessageIsSubtype_R1020;

	public void setBridgeMessageOrderInChildListR1020(BridgeMessage_c target,
			int index) {
		unrelateAcrossR1020From(target);
		BridgeMessage_c[] elements = BridgeMessage_c.getManyMSG_BsOnR1020(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1020From((BridgeMessage_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1020To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1020To((BridgeMessage_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1020To(BridgeMessage_c target) {
		if (target != null) {
			target.relateAcrossR1020To(this, true);
		}
	}

	public void relateAcrossR1020To(BridgeMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1020To(this, notifyChanges);
		}
	}

	public void setBackPointerR1020To(BridgeMessage_c target) {
		backPointer_IsSubtypeBridgeMessageIsSubtype_R1020 = target;
	}

	public void unrelateAcrossR1020From(BridgeMessage_c target) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, true);
		}
	}

	public void unrelateAcrossR1020From(BridgeMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1020To(BridgeMessage_c target) {
		if (target == backPointer_IsSubtypeBridgeMessageIsSubtype_R1020) {
			backPointer_IsSubtypeBridgeMessageIsSubtype_R1020 = null;
		}
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			BridgeMessage_c[] targets) {
		return getOneMSG_SMOnR1020(targets, null);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			BridgeMessage_c[] targets, ClassQueryInterface_c test) {
		return getOneMSG_SMOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			BridgeMessage_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SynchronousMessage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SynchronousMessage_c candidate_val = getOneMSG_SMOnR1020(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneMSG_SMOnR1020(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			BridgeMessage_c target) {
		return getOneMSG_SMOnR1020(target, true);
	}
	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			BridgeMessage_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSynchronousMessage;
		} else {
			return null;
		}
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			BridgeMessage_c[] targets, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c [] getManyMSG_SMsOnR1020(BridgeMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SynchronousMessage_c[0];
  
  
  LinkedHashSet<SynchronousMessage_c> elementsSet = new LinkedHashSet<SynchronousMessage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSynchronousMessage == null)
	  targets[i].loadProxy();
    SynchronousMessage_c associate = targets[i].IsSupertypeSynchronousMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SynchronousMessage_c[] result = new SynchronousMessage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			BridgeMessage_c[] targets) {
		return getManyMSG_SMsOnR1020(targets, null);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			BridgeMessage_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			BridgeMessage_c[] targetArray = new BridgeMessage_c[1];
			targetArray[0] = target;
			return getManyMSG_SMsOnR1020(targetArray, test, loadComponent);
		} else {
			SynchronousMessage_c[] result = new SynchronousMessage_c[0];
			return result;
		}

	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			BridgeMessage_c target, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			BridgeMessage_c target) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			BridgeMessage_c target, boolean loadComponent) {
		return getManyMSG_SMsOnR1020(target, null, loadComponent);
	}

	// referred to navigation

	InformalSynchronousMessage_c backPointer_IsSubtypeInformalSynchronousMessageIsSubtype_R1020;

	public void setInformalSynchronousMessageOrderInChildListR1020(
			InformalSynchronousMessage_c target, int index) {
		unrelateAcrossR1020From(target);
		InformalSynchronousMessage_c[] elements = InformalSynchronousMessage_c
				.getManyMSG_ISMsOnR1020(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1020From((InformalSynchronousMessage_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1020To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1020To((InformalSynchronousMessage_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1020To(InformalSynchronousMessage_c target) {
		if (target != null) {
			target.relateAcrossR1020To(this, true);
		}
	}

	public void relateAcrossR1020To(InformalSynchronousMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1020To(this, notifyChanges);
		}
	}

	public void setBackPointerR1020To(InformalSynchronousMessage_c target) {
		backPointer_IsSubtypeInformalSynchronousMessageIsSubtype_R1020 = target;
	}

	public void unrelateAcrossR1020From(InformalSynchronousMessage_c target) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, true);
		}
	}

	public void unrelateAcrossR1020From(InformalSynchronousMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1020To(InformalSynchronousMessage_c target) {
		if (target == backPointer_IsSubtypeInformalSynchronousMessageIsSubtype_R1020) {
			backPointer_IsSubtypeInformalSynchronousMessageIsSubtype_R1020 = null;
		}
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InformalSynchronousMessage_c[] targets) {
		return getOneMSG_SMOnR1020(targets, null);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InformalSynchronousMessage_c[] targets, ClassQueryInterface_c test) {
		return getOneMSG_SMOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InformalSynchronousMessage_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SynchronousMessage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SynchronousMessage_c candidate_val = getOneMSG_SMOnR1020(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneMSG_SMOnR1020(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InformalSynchronousMessage_c target) {
		return getOneMSG_SMOnR1020(target, true);
	}
	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InformalSynchronousMessage_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSynchronousMessage;
		} else {
			return null;
		}
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InformalSynchronousMessage_c[] targets, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c [] getManyMSG_SMsOnR1020(InformalSynchronousMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SynchronousMessage_c[0];
  
  
  LinkedHashSet<SynchronousMessage_c> elementsSet = new LinkedHashSet<SynchronousMessage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSynchronousMessage == null)
	  targets[i].loadProxy();
    SynchronousMessage_c associate = targets[i].IsSupertypeSynchronousMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SynchronousMessage_c[] result = new SynchronousMessage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InformalSynchronousMessage_c[] targets) {
		return getManyMSG_SMsOnR1020(targets, null);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InformalSynchronousMessage_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			InformalSynchronousMessage_c[] targetArray = new InformalSynchronousMessage_c[1];
			targetArray[0] = target;
			return getManyMSG_SMsOnR1020(targetArray, test, loadComponent);
		} else {
			SynchronousMessage_c[] result = new SynchronousMessage_c[0];
			return result;
		}

	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InformalSynchronousMessage_c target, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InformalSynchronousMessage_c target) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InformalSynchronousMessage_c target, boolean loadComponent) {
		return getManyMSG_SMsOnR1020(target, null, loadComponent);
	}

	// referred to navigation

	InterfaceOperationMessage_c backPointer_IsSubtypeInterfaceOperationMessageIsSubtype_R1020;

	public void setInterfaceOperationMessageOrderInChildListR1020(
			InterfaceOperationMessage_c target, int index) {
		unrelateAcrossR1020From(target);
		InterfaceOperationMessage_c[] elements = InterfaceOperationMessage_c
				.getManyMSG_IOPsOnR1020(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1020From((InterfaceOperationMessage_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1020To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1020To((InterfaceOperationMessage_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1020To(InterfaceOperationMessage_c target) {
		if (target != null) {
			target.relateAcrossR1020To(this, true);
		}
	}

	public void relateAcrossR1020To(InterfaceOperationMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1020To(this, notifyChanges);
		}
	}

	public void setBackPointerR1020To(InterfaceOperationMessage_c target) {
		backPointer_IsSubtypeInterfaceOperationMessageIsSubtype_R1020 = target;
	}

	public void unrelateAcrossR1020From(InterfaceOperationMessage_c target) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, true);
		}
	}

	public void unrelateAcrossR1020From(InterfaceOperationMessage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1020From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1020To(InterfaceOperationMessage_c target) {
		if (target == backPointer_IsSubtypeInterfaceOperationMessageIsSubtype_R1020) {
			backPointer_IsSubtypeInterfaceOperationMessageIsSubtype_R1020 = null;
		}
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InterfaceOperationMessage_c[] targets) {
		return getOneMSG_SMOnR1020(targets, null);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InterfaceOperationMessage_c[] targets, ClassQueryInterface_c test) {
		return getOneMSG_SMOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InterfaceOperationMessage_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SynchronousMessage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SynchronousMessage_c candidate_val = getOneMSG_SMOnR1020(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneMSG_SMOnR1020(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InterfaceOperationMessage_c target) {
		return getOneMSG_SMOnR1020(target, true);
	}
	public static SynchronousMessage_c getOneMSG_SMOnR1020(
			InterfaceOperationMessage_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSynchronousMessage;
		} else {
			return null;
		}
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InterfaceOperationMessage_c[] targets, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(targets, test, true);
	}

	public static SynchronousMessage_c [] getManyMSG_SMsOnR1020(InterfaceOperationMessage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SynchronousMessage_c[0];
  
  
  LinkedHashSet<SynchronousMessage_c> elementsSet = new LinkedHashSet<SynchronousMessage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSynchronousMessage == null)
	  targets[i].loadProxy();
    SynchronousMessage_c associate = targets[i].IsSupertypeSynchronousMessage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SynchronousMessage_c[] result = new SynchronousMessage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InterfaceOperationMessage_c[] targets) {
		return getManyMSG_SMsOnR1020(targets, null);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InterfaceOperationMessage_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			InterfaceOperationMessage_c[] targetArray = new InterfaceOperationMessage_c[1];
			targetArray[0] = target;
			return getManyMSG_SMsOnR1020(targetArray, test, loadComponent);
		} else {
			SynchronousMessage_c[] result = new SynchronousMessage_c[0];
			return result;
		}

	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InterfaceOperationMessage_c target, ClassQueryInterface_c test) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InterfaceOperationMessage_c target) {
		return getManyMSG_SMsOnR1020(target, null, true);
	}

	public static SynchronousMessage_c[] getManyMSG_SMsOnR1020(
			InterfaceOperationMessage_c target, boolean loadComponent) {
		return getManyMSG_SMsOnR1020(target, null, loadComponent);
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies,
			boolean notifyChanges, boolean searchAllRoots) {
		InstanceList instances = null;
		ModelRoot baseRoot = modelRoot;

		// R1018
		Message_c relInst40001 = (Message_c) baseRoot.getInstanceList(
				Message_c.class).get(new Object[]{m_msg_id});
		// if there was no local element, check for any global elements
		// failing that proceed to check other model roots
		if (relInst40001 == null) {
			relInst40001 = (Message_c) Ooaofooa.getDefaultInstance()
					.getInstanceList(Message_c.class)
					.get(new Object[]{m_msg_id});
		}
		if (relInst40001 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
			Ooaofooa[] roots = Ooaofooa.getInstances();
			for (int i = 0; i < roots.length; i++) {
				if (roots[i].isCompareRoot()) {
					// never use elements from any compare root
					continue;
				}
				relInst40001 = (Message_c) roots[i].getInstanceList(
						Message_c.class).get(new Object[]{m_msg_id});
				if (relInst40001 != null)
					break;
			}
		}
		//synchronized
		if (relInst40001 != null) {
			if (relateProxies || !isProxy()
					|| (inSameComponent(this, relInst40001) && !isProxy())) {
				relInst40001.relateAcrossR1018To(this, notifyChanges);
			}
		}

	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R1018
		// MSG_M
		inst = IsSupertypeMessage;
		unrelateAcrossR1018From(IsSupertypeMessage, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(SynchronousMessage_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final SynchronousMessage_c inst = (SynchronousMessage_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(SynchronousMessage_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static SynchronousMessage_c SynchronousMessageInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		SynchronousMessage_c result = findSynchronousMessageInstance(modelRoot,
				test, loadComponent);
		if (result == null && loadComponent) {
			List pmcs = PersistenceManager.findAllComponents(modelRoot,
					SynchronousMessage_c.class);
			for (int i = 0; i < pmcs.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) pmcs
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = findSynchronousMessageInstance(modelRoot,
								test, loadComponent);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}
		if (result != null && loadComponent) {
			result.loadProxy();
		}
		return result;
	}
	private static SynchronousMessage_c findSynchronousMessageInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(SynchronousMessage_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				SynchronousMessage_c x = (SynchronousMessage_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						return x;
				}
			}
		}
		return null;
	}
	public static SynchronousMessage_c SynchronousMessageInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return SynchronousMessageInstance(modelRoot, test, true);
	}

	public static SynchronousMessage_c SynchronousMessageInstance(
			ModelRoot modelRoot) {
		return SynchronousMessageInstance(modelRoot, null, true);
	}

	public static SynchronousMessage_c[] SynchronousMessageInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (loadComponent) {
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					SynchronousMessage_c.class);
		}
		InstanceList instances = modelRoot
				.getInstanceList(SynchronousMessage_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				SynchronousMessage_c x = (SynchronousMessage_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						matches.add(x);
				}
			}
			if (matches.size() > 0) {
				SynchronousMessage_c[] ret_set = new SynchronousMessage_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new SynchronousMessage_c[0];
			}
		}
	}
	public static SynchronousMessage_c[] SynchronousMessageInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return SynchronousMessageInstances(modelRoot, test, true);
	}
	public static SynchronousMessage_c[] SynchronousMessageInstances(
			ModelRoot modelRoot) {
		return SynchronousMessageInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Synchronous Message.dispose call: ";
		Message_c testR1018Inst1 = Message_c.getOneMSG_MOnR1018(this, false);

		if (testR1018Inst1 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1018 ";
		}
		FunctionMessage_c testR1020Inst1 = FunctionMessage_c
				.getOneMSG_FOnR1020(this, false);

		if (testR1020Inst1 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1020 ";
		}
		OperationMessage_c testR1020Inst2 = OperationMessage_c
				.getOneMSG_OOnR1020(this, false);

		if (testR1020Inst2 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1020 ";
		}
		BridgeMessage_c testR1020Inst3 = BridgeMessage_c.getOneMSG_BOnR1020(
				this, false);

		if (testR1020Inst3 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1020 ";
		}
		InformalSynchronousMessage_c testR1020Inst4 = InformalSynchronousMessage_c
				.getOneMSG_ISMOnR1020(this, false);

		if (testR1020Inst4 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1020 ";
		}
		InterfaceOperationMessage_c testR1020Inst5 = InterfaceOperationMessage_c
				.getOneMSG_IOPOnR1020(this, false);

		if (testR1020Inst5 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1020 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log.println(ILogger.DELETE, "Synchronous Message",
						errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("msg_id")) {
			return true;
		}
		return false;
	}
	public String getCompUniqueID() {
		UUID tempID = null;
		long longID = 0L;
		StringBuffer result = new StringBuffer();

		tempID = getMsg_id();

		if (IdAssigner.NULL_UUID.equals(tempID))
			tempID = getMsg_idCachedValue();
		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		return result.toString();
	}
	// declare attribute accessors
	public String getResulttarget() {
		return m_resulttarget;
	}

	public void setResulttarget(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_resulttarget)) {
				return;
			}
		} else if (m_resulttarget != null) {
			if (m_resulttarget.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Resulttarget", m_resulttarget, newValue, true);
		m_resulttarget = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getReturnvalue() {
		return m_returnvalue;
	}

	public void setReturnvalue(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_returnvalue)) {
				return;
			}
		} else if (m_returnvalue != null) {
			if (m_returnvalue.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Returnvalue", m_returnvalue, newValue, true);
		m_returnvalue = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getGuardcondition() {
		return m_guardcondition;
	}

	public void setGuardcondition(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_guardcondition)) {
				return;
			}
		} else if (m_guardcondition != null) {
			if (m_guardcondition.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Guardcondition", m_guardcondition, newValue, true);
		m_guardcondition = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getDescrip() {
		return m_descrip;
	}

	public void setDescrip(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_descrip)) {
				return;
			}
		} else if (m_descrip != null) {
			if (m_descrip.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Descrip", m_descrip, newValue, true);
		m_descrip = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public boolean getIsformal() {
		ModelRoot modelRoot = getModelRoot();
		InformalSynchronousMessage_c v_ism = InformalSynchronousMessage_c
				.getOneMSG_ISMOnR1020(this);

		if (((v_ism != null))) {

			return false;

		}

		else {

			return true;

		}

	}

	public String getLabel() {
		ModelRoot modelRoot = getModelRoot();
		String v_result = "";

		FunctionMessage_c v_fm = FunctionMessage_c.getOneMSG_FOnR1020(this);

		OperationMessage_c v_om = OperationMessage_c.getOneMSG_OOnR1020(this);

		BridgeMessage_c v_bm = BridgeMessage_c.getOneMSG_BOnR1020(this);

		InterfaceOperationMessage_c v_iOp = InterfaceOperationMessage_c
				.getOneMSG_IOPOnR1020(this);

		if (((v_fm != null))) {

			Function_c v_func = Function_c.getOneS_SYNCOnR1010(v_fm);

			v_result = v_func.getName();

		}

		else if (((v_om != null))) {

			Operation_c v_op = Operation_c.getOneO_TFROnR1011(v_om);

			v_result = v_op.getName();

		}

		else if (((v_bm != null))) {

			Bridge_c v_brg = Bridge_c.getOneS_BRGOnR1012(v_bm);

			v_result = v_brg.getName();

		}

		else if ((v_iOp != null)) {

			InterfaceOperation_c v_interfaceOp = InterfaceOperation_c
					.getOneC_IOOnR1022(v_iOp);

			v_result = v_interfaceOp.getName();

		}

		else {

			v_result = getInformalname();

		}

		return v_result;

	}

	public String getInformalname() {
		return m_informalname;
	}

	public void setInformalname(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_informalname)) {
				return;
			}
		} else if (m_informalname != null) {
			if (m_informalname.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Informalname", m_informalname, newValue, true);
		m_informalname = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public String getSequencenumb() {
		return m_sequencenumb;
	}

	public void setSequencenumb(String newValue) {
		if (newValue != null) {
			if (newValue.equals(m_sequencenumb)) {
				return;
			}
		} else if (m_sequencenumb != null) {
			if (m_sequencenumb.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Sequencenumb", m_sequencenumb, newValue, true);
		m_sequencenumb = newValue;
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	public long getMsg_idLongBased() {
		if (IsSupertypeMessage != null) {
			return IsSupertypeMessage.getMsg_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getMsg_id() {
		if (IsSupertypeMessage != null) {
			return IsSupertypeMessage.getMsg_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public boolean hasSuperType() {
		return (IsSupertypeMessage != null);

	}

	public java.util.UUID getMsg_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_msg_id))
			return m_msg_id;
		else
			return getMsg_id();
	}

	public void setMsg_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_msg_id)) {
				return;
			}
		} else if (m_msg_id != null) {
			if (m_msg_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Msg_id", m_msg_id, newValue, true);
		m_msg_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message", //$NON-NLS-1$
						" Operation entered: Synchronous Message::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		SynchronousMessage_c[] objs = SynchronousMessage_c
				.SynchronousMessageInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message", //$NON-NLS-1$
				" Operation entered: Synchronous Message::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class SynchronousMessage_c_test40003_c implements ClassQueryInterface_c {
			SynchronousMessage_c_test40003_c(java.util.UUID p40004) {
				m_p40004 = p40004;
			}
			private java.util.UUID m_p40004;
			public boolean evaluate(Object candidate) {
				SynchronousMessage_c selected = (SynchronousMessage_c) candidate;
				boolean retval = false;
				retval = (selected.getMsg_id().equals(m_p40004));
				return retval;
			}
		}

		SynchronousMessage_c[] objs40002 = SynchronousMessage_c
				.SynchronousMessageInstances(modelRoot,
						new SynchronousMessage_c_test40003_c(getMsg_id()));

		if (((objs40002.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Synchronous Message", //$NON-NLS-1$
								"Consistency: Object: Synchronous Message: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40002.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Synchronous Message: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40002.length), e);
			}
			retval = false;

		}

		if (((objs40002.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Synchronous Message", //$NON-NLS-1$
								"Consistency: Object: Synchronous Message: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs40002.length)
										+ " Msg_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Synchronous Message: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40002.length)
										+ " Msg_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Synchronous Message is a subtype in association: rel.Numb = 1018
		// The supertype class is: Message
		class Message_c_test40008_c implements ClassQueryInterface_c {
			Message_c_test40008_c(java.util.UUID p40009) {
				m_p40009 = p40009;
			}
			private java.util.UUID m_p40009;
			public boolean evaluate(Object candidate) {
				Message_c selected = (Message_c) candidate;
				boolean retval = false;
				retval = (selected.getMsg_id().equals(m_p40009));
				return retval;
			}
		}

		Message_c[] objs40007 = Message_c.MessageInstances(modelRoot,
				new Message_c_test40008_c(getMsg_id()));

		if (((objs40007.length) != 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Synchronous Message", //$NON-NLS-1$
								"Consistency: Object: Synchronous Message: Association: 1018: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40007.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Synchronous Message: Association: 1018: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40007.length), e);
			}
			retval = false;

		}

		// Supertype: rel.Numb = 1020
		int objs40010 = 0;
		// Subtype Object: Function Message
		class FunctionMessage_c_test40011_c implements ClassQueryInterface_c {
			FunctionMessage_c_test40011_c(java.util.UUID p40012) {
				m_p40012 = p40012;
			}
			private java.util.UUID m_p40012;
			public boolean evaluate(Object candidate) {
				FunctionMessage_c selected = (FunctionMessage_c) candidate;
				boolean retval = false;
				retval = (selected.getMsg_id().equals(m_p40012));
				return retval;
			}
		}

		FunctionMessage_c[] objs40013 = FunctionMessage_c
				.FunctionMessageInstances(modelRoot,
						new FunctionMessage_c_test40011_c(getMsg_id()));

		objs40010 = objs40010 + objs40013.length;
		// Subtype Object: Operation Message
		class OperationMessage_c_test40014_c implements ClassQueryInterface_c {
			OperationMessage_c_test40014_c(java.util.UUID p40015) {
				m_p40015 = p40015;
			}
			private java.util.UUID m_p40015;
			public boolean evaluate(Object candidate) {
				OperationMessage_c selected = (OperationMessage_c) candidate;
				boolean retval = false;
				retval = (selected.getMsg_id().equals(m_p40015));
				return retval;
			}
		}

		OperationMessage_c[] objs40016 = OperationMessage_c
				.OperationMessageInstances(modelRoot,
						new OperationMessage_c_test40014_c(getMsg_id()));

		objs40010 = objs40010 + objs40016.length;
		// Subtype Object: Bridge Message
		class BridgeMessage_c_test40017_c implements ClassQueryInterface_c {
			BridgeMessage_c_test40017_c(java.util.UUID p40018) {
				m_p40018 = p40018;
			}
			private java.util.UUID m_p40018;
			public boolean evaluate(Object candidate) {
				BridgeMessage_c selected = (BridgeMessage_c) candidate;
				boolean retval = false;
				retval = (selected.getMsg_id().equals(m_p40018));
				return retval;
			}
		}

		BridgeMessage_c[] objs40019 = BridgeMessage_c.BridgeMessageInstances(
				modelRoot, new BridgeMessage_c_test40017_c(getMsg_id()));

		objs40010 = objs40010 + objs40019.length;
		// Subtype Object: Informal Synchronous Message
		class InformalSynchronousMessage_c_test40020_c
				implements
					ClassQueryInterface_c {
			InformalSynchronousMessage_c_test40020_c(java.util.UUID p40021) {
				m_p40021 = p40021;
			}
			private java.util.UUID m_p40021;
			public boolean evaluate(Object candidate) {
				InformalSynchronousMessage_c selected = (InformalSynchronousMessage_c) candidate;
				boolean retval = false;
				retval = (selected.getMsg_id().equals(m_p40021));
				return retval;
			}
		}

		InformalSynchronousMessage_c[] objs40022 = InformalSynchronousMessage_c
				.InformalSynchronousMessageInstances(modelRoot,
						new InformalSynchronousMessage_c_test40020_c(
								getMsg_id()));

		objs40010 = objs40010 + objs40022.length;
		// Subtype Object: Interface Operation Message
		class InterfaceOperationMessage_c_test40023_c
				implements
					ClassQueryInterface_c {
			InterfaceOperationMessage_c_test40023_c(java.util.UUID p40024) {
				m_p40024 = p40024;
			}
			private java.util.UUID m_p40024;
			public boolean evaluate(Object candidate) {
				InterfaceOperationMessage_c selected = (InterfaceOperationMessage_c) candidate;
				boolean retval = false;
				retval = (selected.getMsg_id().equals(m_p40024));
				return retval;
			}
		}

		InterfaceOperationMessage_c[] objs40025 = InterfaceOperationMessage_c
				.InterfaceOperationMessageInstances(
						modelRoot,
						new InterfaceOperationMessage_c_test40023_c(getMsg_id()));

		objs40010 = objs40010 + objs40025.length;
		if (objs40010 != 1) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Synchronous Message", //$NON-NLS-1$
								"Consistency: Object: Synchronous Message: Association: 1020: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs40010)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Synchronous Message: Association: 1020: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs40010), e);
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		OperationMessage_c v_om = OperationMessage_c.getOneMSG_OOnR1020(this);

		FunctionMessage_c v_fm = FunctionMessage_c.getOneMSG_FOnR1020(this);

		BridgeMessage_c v_bm = BridgeMessage_c.getOneMSG_BOnR1020(this);

		InformalSynchronousMessage_c v_im = InformalSynchronousMessage_c
				.getOneMSG_ISMOnR1020(this);

		InterfaceOperationMessage_c v_iOp = InterfaceOperationMessage_c
				.getOneMSG_IOPOnR1020(this);

		if (((v_om != null))) {

			this.unrelateAcrossR1020From(v_om);

			if (v_om != null) {
				v_om.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		if (((v_fm != null))) {

			this.unrelateAcrossR1020From(v_fm);

			if (v_fm != null) {
				v_fm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		if (((v_bm != null))) {

			this.unrelateAcrossR1020From(v_bm);

			if (v_bm != null) {
				v_bm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		if (((v_im != null))) {

			this.unrelateAcrossR1020From(v_im);

			if (v_im != null) {
				v_im.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		if ((v_iOp != null)) {

			this.unrelateAcrossR1020From(v_iOp);

			if (v_iOp != null) {
				v_iOp.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		Message_c v_msg = Message_c.getOneMSG_MOnR1018(this);

		if (((v_msg != null))) {

			this.unrelateAcrossR1018From(v_msg);

			if (v_msg != null) {
				v_msg.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		if (delete()) {
			Ooaofooa.getDefaultInstance().fireModelElementDeleted(
					new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE,
							this));
		}

	} // End dispose
	public void Unformalize() {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Unformalize");
		final ModelRoot modelRoot = getModelRoot();
		OperationMessage_c v_om = OperationMessage_c.getOneMSG_OOnR1020(this);

		FunctionMessage_c v_fm = FunctionMessage_c.getOneMSG_FOnR1020(this);

		BridgeMessage_c v_bm = BridgeMessage_c.getOneMSG_BOnR1020(this);

		InterfaceOperationMessage_c v_iOp = InterfaceOperationMessage_c
				.getOneMSG_IOPOnR1020(this);

		if (((v_om != null))) {

			if (v_om != null) {
				v_om.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_fm != null))) {

			if (v_fm != null) {
				v_fm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_bm != null))) {

			if (v_bm != null) {
				v_bm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if ((v_iOp != null)) {

			if (v_iOp != null) {
				v_iOp.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

		if (v_message != null) {
			v_message.Deassociatefromtarget();
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError(
					"Attempted to call an operation on a null instance.", t);
		}

		Disposeformalarguments();

		InformalSynchronousMessage_c v_im = new InformalSynchronousMessage_c(
				modelRoot);
		Ooaofooa.getDefaultInstance().fireModelElementCreated(
				new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_im));

		if (v_im != null) {
			v_im.relateAcrossR1020To(this);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Relate attempted on null left hand instance.",
					t);
		}

	} // End unformalize
	public void Initialize() {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Initialize");
		final ModelRoot modelRoot = getModelRoot();
		setInformalname("Informal Message");

		InformalSynchronousMessage_c v_im = new InformalSynchronousMessage_c(
				modelRoot);
		Ooaofooa.getDefaultInstance().fireModelElementCreated(
				new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_im));

		if (v_im != null) {
			v_im.relateAcrossR1020To(this);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Relate attempted on null left hand instance.",
					t);
		}

	} // End initialize
	public void Newargument() {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Newargument");
		final ModelRoot modelRoot = getModelRoot();
		Message_c v_msg = Message_c.getOneMSG_MOnR1018(this);

		if (((v_msg != null))) {

			if (v_msg != null) {
				v_msg.Newargument();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

	} // End newArgument
	public boolean Canrename() {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Canrename");
		final ModelRoot modelRoot = getModelRoot();
		InformalSynchronousMessage_c v_im = InformalSynchronousMessage_c
				.getOneMSG_ISMOnR1020(this);

		if (((v_im != null))) {

			return true;

		}

		else {

			return false;

		}

	} // End canRename
	public String Get_name() {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Get_name");
		final ModelRoot modelRoot = getModelRoot();
		return getLabel();

	} // End get_name
	public int Get_style(final int p_At) {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Get_style");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_At == End_c.End)) {

			return Style_c.FilledArrow;

		}

		else {

			return Style_c.Solid;

		}

	} // End get_style
	public String Get_connector_text(final java.util.UUID p_Obj_id,
			final boolean p_Obj_typeisimported, final int p_At,
			final java.util.UUID p_Parent_id) {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Get_connector_text");
		final ModelRoot modelRoot = getModelRoot();
		if ((p_At == End_c.Middle)) {

			String v_result = getLabel();

			if ((!getResulttarget().equals(""))) {

				if ((v_result.equals(""))) {

					v_result = getResulttarget();

				}

				else {

					v_result = getResulttarget() + " = " + v_result;

				}

			}

			MessageArgument_c[] v_args = MessageArgument_c
					.getManyMSG_AsOnR1001(Message_c.getManyMSG_MsOnR1018(this));

			if ((!getIsformal())) {

				v_args = MessageArgument_c.getManyMSG_AsOnR1000(Message_c
						.getManyMSG_MsOnR1018(this));

			}

			if (((v_args.length != 0))) {

				v_result = v_result + " (";

				int v_count = 0;

				MessageArgument_c v_arg = null;
				for (int i37248 = 0; i37248 < v_args.length; i37248++) {
					v_arg = v_args[i37248];

					v_count = v_count + 1;

					v_result = v_result + v_arg.getLabel();

					if ((v_count != (v_args.length))) {

						v_result = v_result + ", ";

					}

				}

				v_result = v_result + ")";

			}

			if ((!getReturnvalue().equals(""))) {

				if ((v_result.equals(""))) {

					v_result = getReturnvalue();

				}

				else {

					v_result = v_result + ":" + getReturnvalue();

				}

			}

			if ((!getSequencenumb().equals(""))) {

				if ((!v_result.equals(""))) {

					v_result = ": " + v_result;

				}

				v_result = getSequencenumb() + v_result;

			}

			return v_result;

		}

		else if ((p_At == End_c.Start)) {

			if ((!getGuardcondition().equals(""))) {

				return "[" + getGuardcondition() + "]";

			}

			return "";

		}

		else {

			return "";

		}

	} // End get_connector_text
	public boolean Actionfilter(final String p_Name, final String p_Value) {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Actionfilter");
		final ModelRoot modelRoot = getModelRoot();
		PackageableElement_c v_packageableElem = PackageableElement_c
				.getOnePE_PEOnR8001(Message_c.getOneMSG_MOnR1018(this));

		Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);

		Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

		if (((v_message == null))) {

			return false;

		}

		if (((v_package == null) && v_message.getParticipatesincommunication())) {

			v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c
					.getOnePE_PEOnR8001(InteractionParticipant_c
							.getOneSQ_POnR1007(Message_c
									.getOneMSG_MOnR1018(this))));

		}

		Component_c v_component = Component_c
				.getOneC_COnR8003(v_packageableElem);

		boolean v_isInGenericPackage = (v_package != null)
				|| (v_component != null);

		if ((p_Name.equals("can"))) {

			if ((p_Value.equals("addArg"))) {

				return !getIsformal();

			}

			else if ((p_Value.equals("unform"))) {

				return getIsformal();

			}

			else if ((p_Value.equals("formBrg"))) {

				ExternalEntityParticipant_c v_eep = ExternalEntityParticipant_c
						.getOneSQ_EEPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1007(Message_c
										.getOneMSG_MOnR1018(this)));

				if (((v_eep == null))) {

					v_eep = ExternalEntityParticipant_c
							.getOneSQ_EEPOnR930(InteractionParticipant_c.getOneSQ_POnR940(Lifespan_c
									.getOneSQ_LSOnR930(InteractionParticipant_c
											.getOneSQ_POnR1007(Message_c
													.getOneMSG_MOnR1018(this)))));

				}

				if (((v_eep != null))) {

					Communication_c v_communication = Communication_c
							.getOneCOMM_COMMOnR1126(ParticipantInCommunication_c
									.getOneCOMM_PICOnR1126(InteractionParticipant_c
											.getOneSQ_POnR930(v_eep)));

					if (((v_communication != null) || v_message
							.getParticipatesincommunication())) {

						return false;

					}

					if ((getIsformal())) {

						if ((v_eep.Getbridgeoperationcount() == 1)) {

							return false;

						}

					}

					return v_eep.Formaleehasbridgeoperations();

				}

			}

			else if ((p_Value.equals("formFunc"))) {

				FunctionPackageParticipant_c v_fpp = FunctionPackageParticipant_c
						.getOneSQ_FPPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1007(Message_c
										.getOneMSG_MOnR1018(this)));

				if (((v_fpp == null))) {

					v_fpp = FunctionPackageParticipant_c
							.getOneSQ_FPPOnR930(InteractionParticipant_c.getOneSQ_POnR940(Lifespan_c
									.getOneSQ_LSOnR930(InteractionParticipant_c
											.getOneSQ_POnR1007(Message_c
													.getOneMSG_MOnR1018(this)))));

				}

				if (((v_fpp != null))) {

					Communication_c v_communication = Communication_c
							.getOneCOMM_COMMOnR1126(ParticipantInCommunication_c
									.getOneCOMM_PICOnR1126(InteractionParticipant_c
											.getOneSQ_POnR930(v_fpp)));

					if (((v_communication != null))) {

						return false;

					}

					if ((getIsformal())) {

						if ((v_fpp.Getfunctioncount() == 1)) {

							return false;

						}

					}

					return v_fpp.Formalfpkhasfunctions();

				}

			}

			else if ((p_Value.equals("formPkgFunc"))) {

				if ((v_message.getParticipatesincommunication())) {

					return false;

				}

				PackageParticipant_c v_pp = PackageParticipant_c
						.getOneSQ_PPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1007(Message_c
										.getOneMSG_MOnR1018(this)));

				if (((v_pp == null))) {

					v_pp = PackageParticipant_c
							.getOneSQ_PPOnR930(InteractionParticipant_c.getOneSQ_POnR940(Lifespan_c
									.getOneSQ_LSOnR930(InteractionParticipant_c
											.getOneSQ_POnR1007(Message_c
													.getOneMSG_MOnR1018(this)))));

				}

				if (((v_pp != null))) {

					if ((getIsformal())) {

						if ((v_pp.Getfunctioncount() == 1)) {

							return false;

						}

					}

					return v_pp.Getfunctioncount() != 0;

				}

			}

			else if ((p_Value.equals("formClassOp"))) {

				ClassInstanceParticipant_c v_cip = ClassInstanceParticipant_c
						.getOneSQ_CIPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1007(Message_c
										.getOneMSG_MOnR1018(this)));

				ClassParticipant_c v_cp = ClassParticipant_c
						.getOneSQ_CPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1007(Message_c
										.getOneMSG_MOnR1018(this)));

				if (((v_cp == null))) {

					v_cp = ClassParticipant_c
							.getOneSQ_CPOnR930(InteractionParticipant_c.getOneSQ_POnR940(Lifespan_c
									.getOneSQ_LSOnR930(InteractionParticipant_c
											.getOneSQ_POnR1007(Message_c
													.getOneMSG_MOnR1018(this)))));

				}

				if (((v_cip != null))) {

					if ((v_isInGenericPackage)) {

						if ((v_message.getParticipatesincommunication())) {

							return false;

						}

						else {

							if ((getIsformal())) {

								if ((v_cip.Getclassoperationcount() == 1)) {

									return false;

								}

							}

							return v_cip.Formalclasshascboperations();

						}

					}

					else {

						Communication_c v_communication = Communication_c
								.getOneCOMM_COMMOnR1126(ParticipantInCommunication_c
										.getOneCOMM_PICOnR1126(InteractionParticipant_c
												.getOneSQ_POnR930(v_cip)));

						if (((v_communication != null))) {

							return false;

						}

						else {

							if ((getIsformal())) {

								if ((v_cip.Getclassoperationcount() == 1)) {

									return false;

								}

							}

							return v_cip.Formalclasshascboperations();

						}

					}

				}

				else if (((v_cp != null))) {

					Communication_c v_communication = Communication_c
							.getOneCOMM_COMMOnR1126(ParticipantInCommunication_c
									.getOneCOMM_PICOnR1126(InteractionParticipant_c
											.getOneSQ_POnR930(v_cp)));

					if (((v_communication != null))) {

						return false;

					}

					if ((v_isInGenericPackage)) {

						if ((v_message.getParticipatesincommunication())) {

							return false;

						}

					}

					if ((getIsformal())) {

						if ((v_cp.Getclassoperationcount() == 1)) {

							return false;

						}

					}

					return v_cp.Formalclasshascboperations();

				}

			}

			else if ((p_Value.equals("formInstOp"))) {

				Lifespan_c v_ls = Lifespan_c
						.getOneSQ_LSOnR930(InteractionParticipant_c
								.getOneSQ_POnR1007(Message_c
										.getOneMSG_MOnR1018(this)));

				if (((v_ls != null))) {

					ClassInstanceParticipant_c v_cip = ClassInstanceParticipant_c
							.getOneSQ_CIPOnR930(InteractionParticipant_c
									.getOneSQ_POnR940(v_ls));

					Communication_c v_communication = Communication_c
							.getOneCOMM_COMMOnR1126(ParticipantInCommunication_c
									.getOneCOMM_PICOnR1126(InteractionParticipant_c
											.getOneSQ_POnR930(v_cip)));

					if (((v_communication != null) || v_message
							.getParticipatesincommunication())) {

						return false;

					}

					if (((v_cip != null))) {

						if ((getIsformal())) {

							if ((v_cip.Getinstanceoperationcount() == 1)) {

								return false;

							}

						}

						return v_cip.Formalclasshasiboperations();

					}

				}

			}

			else if ((p_Value.equals("formIOp"))) {

				InterfaceOperation_c v_operation = InterfaceOperation_c
						.getOneC_IOOnR1022(InterfaceOperationMessage_c
								.getOneMSG_IOPOnR1020(this));

				if (((v_operation != null))) {

					ComponentParticipant_c v_cop = ComponentParticipant_c
							.getOneSQ_COPOnR930(InteractionParticipant_c
									.getOneSQ_POnR1007(Message_c
											.getOneMSG_MOnR1018(this)));

					if (((v_cop == null))) {

						v_cop = ComponentParticipant_c
								.getOneSQ_COPOnR930(InteractionParticipant_c.getOneSQ_POnR940(Lifespan_c
										.getOneSQ_LSOnR930(InteractionParticipant_c.getOneSQ_POnR1007(Message_c
												.getOneMSG_MOnR1018(this)))));

					}

					if (((v_cop != null))) {

						if ((v_cop.Getinterfaceoperationcount() == 1)) {

							return false;

						}

					}

				}

				ComponentParticipant_c v_cop = ComponentParticipant_c
						.getOneSQ_COPOnR930(InteractionParticipant_c
								.getOneSQ_POnR1007(Message_c
										.getOneMSG_MOnR1018(this)));

				if (((v_cop == null))) {

					v_cop = ComponentParticipant_c
							.getOneSQ_COPOnR930(InteractionParticipant_c.getOneSQ_POnR940(Lifespan_c
									.getOneSQ_LSOnR930(InteractionParticipant_c
											.getOneSQ_POnR1007(Message_c
													.getOneMSG_MOnR1018(this)))));

				}

				if (((v_cop != null))) {

					Communication_c v_communication = Communication_c
							.getOneCOMM_COMMOnR1126(ParticipantInCommunication_c
									.getOneCOMM_PICOnR1126(InteractionParticipant_c
											.getOneSQ_POnR930(v_cop)));

					if (((v_communication != null) || v_message
							.getParticipatesincommunication())) {

						return false;

					}

					return v_cop.Isformalandhasifoperations();

				}

			}

			else if ((p_Value.equals("formCommClassOp"))
					|| (p_Value.equals("formCommInstOp"))
					|| (p_Value.equals("formCommFunc"))
					|| (p_Value.equals("formCommMsgIOp"))
					|| (p_Value.equals("formCommBrg"))
					|| (p_Value.equals("formCommPackageFunc"))) {

				Communication_c v_communication = Communication_c
						.getOneCOMM_COMMOnR1135(MessageInCommunication_c
								.getOneCOMM_MICOnR1135(Message_c
										.getOneMSG_MOnR1018(this)));

				if (((v_communication == null))) {

					v_communication = Communication_c
							.getOneCOMM_COMMOnR1126(ParticipantInCommunication_c
									.getOneCOMM_PICOnR1126(InteractionParticipant_c
											.getOneSQ_POnR1007(Message_c
													.getOneMSG_MOnR1018(this))));

					if (((v_communication == null) && !v_message
							.getParticipatesincommunication())) {

						return false;

					}

				}

				java.util.UUID v_pkgID = Gd_c.Null_unique_id();

				if (((v_communication != null))) {

					v_pkgID = v_communication.getPackage_id();

				}

				else {

					v_pkgID = v_package.getPackage_id();

				}

				if ((Sel_c.Getcurrentselectioncount() != 2)) {

					return false;

				}

				if ((!Util_c.Selectioncontainsvalidparticipant(Util_c
						.Getcommunicationinstance(v_pkgID)))) {

					return false;

				}

				if ((getIsformal())) {

					InteractionParticipant_c v_participant = InteractionParticipant_c
							.getOneSQ_POnR1007(Message_c
									.getOneMSG_MOnR1018(this));

					if ((p_Value.equals("formCommClassOp"))) {

						ClassParticipant_c v_cp = ClassParticipant_c
								.getOneSQ_CPOnR930(v_participant);

						if (((v_cp != null))) {

							if ((v_cp.Getclassoperationcount() == 1)) {

								return false;

							}

						}

					}

					else if ((p_Value.equals("formCommInstOp"))) {

						ClassInstanceParticipant_c v_cip = ClassInstanceParticipant_c
								.getOneSQ_CIPOnR930(v_participant);

						if (((v_cip != null))) {

							if ((v_cip.Getinstanceoperationcount() == 1)) {

								return false;

							}

						}

					}

					else if ((p_Value.equals("formCommMsgIOp"))) {

						ComponentParticipant_c v_cop = ComponentParticipant_c
								.getOneSQ_COPOnR930(v_participant);

						if (((v_cop != null))) {

							if ((v_cop.Getinterfaceoperationcount() == 1)) {

								return false;

							}

						}

					}

					else if ((p_Value.equals("formCommFunc"))) {

						FunctionPackageParticipant_c v_fpp = FunctionPackageParticipant_c
								.getOneSQ_FPPOnR930(v_participant);

						if (((v_fpp != null))) {

							if ((v_fpp.Getfunctioncount() == 1)) {

								return false;

							}

						}

						else {

							PackageParticipant_c v_pp = PackageParticipant_c
									.getOneSQ_PPOnR930(v_participant);

							if (((v_pp != null))) {

								if ((v_pp.Getfunctioncount() == 1)) {

									return false;

								}

							}

						}

					}

					else if ((p_Value.equals("formCommBrg"))) {

						ExternalEntityParticipant_c v_eep = ExternalEntityParticipant_c
								.getOneSQ_EEPOnR930(v_participant);

						if (((v_eep != null))) {

							if ((v_eep.Getbridgeoperationcount() == 1)) {

								return false;

							}

						}

					}

				}

				return true;

			}

		}

		else if ((p_Name.equals("show"))) {

			if ((p_Value.equals("noTargetMessage"))) {

				if ((Sel_c.Getcurrentselectioncount() != 1)) {

					return false;

				}

				InteractionParticipant_c v_target = InteractionParticipant_c
						.getOneSQ_POnR1007(Message_c.getOneMSG_MOnR1018(this));

				return (v_target == null);

			}

		}

		return false;

	} // End actionFilter
	public java.util.UUID Get_ooa_id() {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Get_ooa_id");
		final ModelRoot modelRoot = getModelRoot();
		return getMsg_id();

	} // End get_ooa_id
	public void Disposeformalarguments() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Disposeformalarguments");
		final ModelRoot modelRoot = getModelRoot();
		Message_c v_parent = Message_c.getOneMSG_MOnR1018(this);

		if (v_parent != null) {
			v_parent.Disposeformalarguments();
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError(
					"Attempted to call an operation on a null instance.", t);
		}

	} // End disposeFormalArguments
	public void Formalizewithclassoperation(final java.util.UUID p_Operationid) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Formalizewithclassoperation");
		final ModelRoot modelRoot = getModelRoot();
		Operation_c v_operation = (Operation_c) modelRoot.getInstanceList(
				Operation_c.class).getGlobal(null, p_Operationid);

		Prepareforformalization();

		OperationMessage_c v_om = new OperationMessage_c(modelRoot);
		Ooaofooa.getDefaultInstance().fireModelElementCreated(
				new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_om));

		if (v_om != null) {
			v_om.relateAcrossR1020To(this);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Relate attempted on null left hand instance.",
					t);
		}

		if (((v_operation != null))) {

			if (v_operation != null) {
				v_operation.relateAcrossR1011To(v_om);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

		}

		Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

		OperationParameter_c[] v_oparms = OperationParameter_c
				.getManyO_TPARMsOnR117(v_operation);

		OperationParameter_c v_oparm = null;
		for (int i37249 = 0; i37249 < v_oparms.length; i37249++) {
			v_oparm = v_oparms[i37249];

			MessageArgument_c v_arg = new MessageArgument_c(modelRoot);
			Ooaofooa.getDefaultInstance().fireModelElementCreated(
					new BaseModelDelta(Modeleventnotification_c.DELTA_NEW,
							v_arg));

			OperationArgument_c v_oarg = new OperationArgument_c(modelRoot);
			Ooaofooa.getDefaultInstance().fireModelElementCreated(
					new BaseModelDelta(Modeleventnotification_c.DELTA_NEW,
							v_oarg));

			if (v_arg != null) {
				v_arg.relateAcrossR1001To(v_message);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_oarg != null) {
				v_oarg.relateAcrossR1013To(v_arg);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_oarg != null) {
				v_oarg.relateAcrossR1015To(v_oparm);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_arg != null) {
				v_arg.setValue("");
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

		}

	} // End formalizeWithClassOperation
	public void Prepareforformalization() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Prepareforformalization");
		final ModelRoot modelRoot = getModelRoot();
		InformalSynchronousMessage_c v_im = InformalSynchronousMessage_c
				.getOneMSG_ISMOnR1020(this);

		OperationMessage_c v_om = OperationMessage_c.getOneMSG_OOnR1020(this);

		FunctionMessage_c v_fm = FunctionMessage_c.getOneMSG_FOnR1020(this);

		BridgeMessage_c v_bm = BridgeMessage_c.getOneMSG_BOnR1020(this);

		InterfaceOperationMessage_c v_iOp = InterfaceOperationMessage_c
				.getOneMSG_IOPOnR1020(this);

		Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

		if (((v_im != null))) {

			if (v_im != null) {
				v_im.unrelateAcrossR1020From(this);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if (v_im != null) {
				v_im.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_om != null))) {

			if (v_om != null) {
				v_om.unrelateAcrossR1020From(this);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if (v_om != null) {
				v_om.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

			if (v_message != null) {
				v_message.Disposeformalarguments();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_fm != null))) {

			if (v_fm != null) {
				v_fm.unrelateAcrossR1020From(this);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if (v_fm != null) {
				v_fm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

			if (v_message != null) {
				v_message.Disposeformalarguments();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_bm != null))) {

			if (v_bm != null) {
				v_bm.unrelateAcrossR1020From(this);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if (v_bm != null) {
				v_bm.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

			if (v_message != null) {
				v_message.Disposeformalarguments();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if ((v_iOp != null)) {

			if (v_iOp != null) {
				v_iOp.unrelateAcrossR1020From(this);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Unrelate attempted on null left hand instance.", t);
			}

			if (v_iOp != null) {
				v_iOp.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

			if (v_message != null) {
				v_message.Disposeformalarguments();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

	} // End prepareForFormalization
	public void Formalizewithbridgeoperation(final java.util.UUID p_Bridgeid) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Formalizewithbridgeoperation");
		final ModelRoot modelRoot = getModelRoot();
		Bridge_c v_brg = (Bridge_c) modelRoot.getInstanceList(Bridge_c.class)
				.getGlobal(null, p_Bridgeid);

		Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

		Prepareforformalization();

		BridgeMessage_c v_bm = new BridgeMessage_c(modelRoot);
		Ooaofooa.getDefaultInstance().fireModelElementCreated(
				new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_bm));

		if (v_bm != null) {
			v_bm.relateAcrossR1020To(this);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Relate attempted on null left hand instance.",
					t);
		}

		if (v_bm != null) {
			v_bm.relateAcrossR1012To(v_brg);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Relate attempted on null left hand instance.",
					t);
		}

		BridgeParameter_c[] v_bparms = BridgeParameter_c
				.getManyS_BPARMsOnR21(v_brg);

		BridgeParameter_c v_bparm = null;
		for (int i37250 = 0; i37250 < v_bparms.length; i37250++) {
			v_bparm = v_bparms[i37250];

			MessageArgument_c v_arg = new MessageArgument_c(modelRoot);
			Ooaofooa.getDefaultInstance().fireModelElementCreated(
					new BaseModelDelta(Modeleventnotification_c.DELTA_NEW,
							v_arg));

			BridgeArgument_c v_barg = new BridgeArgument_c(modelRoot);
			Ooaofooa.getDefaultInstance().fireModelElementCreated(
					new BaseModelDelta(Modeleventnotification_c.DELTA_NEW,
							v_barg));

			if (v_arg != null) {
				v_arg.relateAcrossR1001To(v_message);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_barg != null) {
				v_barg.relateAcrossR1013To(v_arg);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_bparm != null) {
				v_bparm.relateAcrossR1014To(v_barg);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_arg != null) {
				v_arg.setValue("");
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

		}

	} // End formalizeWithBridgeOperation
	public void Formalizewithfunction(final java.util.UUID p_Functionid) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Formalizewithfunction");
		final ModelRoot modelRoot = getModelRoot();
		Function_c v_function = (Function_c) modelRoot.getInstanceList(
				Function_c.class).getGlobal(null, p_Functionid);

		Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

		Prepareforformalization();

		FunctionMessage_c v_fm = new FunctionMessage_c(modelRoot);
		Ooaofooa.getDefaultInstance().fireModelElementCreated(
				new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fm));

		if (v_fm != null) {
			v_fm.relateAcrossR1020To(this);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Relate attempted on null left hand instance.",
					t);
		}

		if (v_function != null) {
			v_function.relateAcrossR1010To(v_fm);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError("Relate attempted on null left hand instance.",
					t);
		}

		FunctionParameter_c[] v_fparms = FunctionParameter_c
				.getManyS_SPARMsOnR24(v_function);

		FunctionParameter_c v_fparm = null;
		for (int i37251 = 0; i37251 < v_fparms.length; i37251++) {
			v_fparm = v_fparms[i37251];

			MessageArgument_c v_arg = new MessageArgument_c(modelRoot);
			Ooaofooa.getDefaultInstance().fireModelElementCreated(
					new BaseModelDelta(Modeleventnotification_c.DELTA_NEW,
							v_arg));

			FunctionArgument_c v_farg = new FunctionArgument_c(modelRoot);
			Ooaofooa.getDefaultInstance().fireModelElementCreated(
					new BaseModelDelta(Modeleventnotification_c.DELTA_NEW,
							v_farg));

			if (v_arg != null) {
				v_arg.relateAcrossR1001To(v_message);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_farg != null) {
				v_farg.relateAcrossR1013To(v_arg);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_fparm != null) {
				v_fparm.relateAcrossR1016To(v_farg);
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Relate attempted on null left hand instance.", t);
			}

			if (v_arg != null) {
				v_arg.setValue("");
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin.logError(
						"Attribute write attempted on null instance.", t);
			}

		}

	} // End formalizeWithFunction
	public void Formalizewithinterfaceoperation(final java.util.UUID p_Iopid) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Formalizewithinterfaceoperation");
		final ModelRoot modelRoot = getModelRoot();
		ExecutableProperty_c v_iOpProp = (ExecutableProperty_c) modelRoot
				.getInstanceList(ExecutableProperty_c.class).getGlobal(null,
						p_Iopid);

		if ((v_iOpProp != null)) {

			InterfaceOperation_c v_iOp = InterfaceOperation_c
					.getOneC_IOOnR4004(v_iOpProp);

			if ((v_iOp != null)) {

				Prepareforformalization();

				InterfaceOperationMessage_c v_ioM = new InterfaceOperationMessage_c(
						modelRoot);
				Ooaofooa.getDefaultInstance().fireModelElementCreated(
						new BaseModelDelta(Modeleventnotification_c.DELTA_NEW,
								v_ioM));

				if (v_ioM != null) {
					v_ioM.relateAcrossR1020To(this);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin.logError(
							"Relate attempted on null left hand instance.", t);
				}

				if (v_ioM != null) {
					v_ioM.relateAcrossR1022To(v_iOp);
				} else {
					Throwable t = new Throwable();
					t.fillInStackTrace();
					CorePlugin.logError(
							"Relate attempted on null left hand instance.", t);
				}

				Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

				PropertyParameter_c[] v_parms = PropertyParameter_c
						.getManyC_PPsOnR4006(v_iOpProp);

				PropertyParameter_c v_parm = null;
				for (int i37252 = 0; i37252 < v_parms.length; i37252++) {
					v_parm = v_parms[i37252];

					MessageArgument_c v_arg = new MessageArgument_c(modelRoot);
					Ooaofooa.getDefaultInstance().fireModelElementCreated(
							new BaseModelDelta(
									Modeleventnotification_c.DELTA_NEW, v_arg));

					ExecutablePropertyArgument_c v_eparg = new ExecutablePropertyArgument_c(
							modelRoot);
					Ooaofooa.getDefaultInstance()
							.fireModelElementCreated(
									new BaseModelDelta(
											Modeleventnotification_c.DELTA_NEW,
											v_eparg));

					if (v_arg != null) {
						v_arg.relateAcrossR1001To(v_message);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_eparg != null) {
						v_eparg.relateAcrossR1013To(v_arg);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_eparg != null) {
						v_eparg.relateAcrossR1023To(v_parm);
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Relate attempted on null left hand instance.",
								t);
					}

					if (v_arg != null) {
						v_arg.setValue("");
					} else {
						Throwable t = new Throwable();
						t.fillInStackTrace();
						CorePlugin.logError(
								"Attribute write attempted on null instance.",
								t);
					}

				}

			}

		}

	} // End formalizeWithInterfaceOperation
	public boolean Canformalizeusinginterfaceoperation(final java.util.UUID p_Id) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Canformalizeusinginterfaceoperation");
		final ModelRoot modelRoot = getModelRoot();
		InterfaceOperation_c v_currentOperation = InterfaceOperation_c
				.getOneC_IOOnR1022(InterfaceOperationMessage_c
						.getOneMSG_IOPOnR1020(this));

		if (((v_currentOperation != null) && p_Id.equals(v_currentOperation
				.getId()))) {

			return false;

		}

		return true;

	} // End canFormalizeUsingInterfaceOperation
	public void Pastemessageargument(final java.util.UUID p_Id) {
		Ooaofooa.log.println(ILogger.OPERATION, "Synchronous Message",
				" Operation entered: SynchronousMessage::Pastemessageargument");
		final ModelRoot modelRoot = getModelRoot();
		Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

		if (v_message != null) {
			v_message.Pastemessageargument(p_Id);
		} else {
			Throwable t = new Throwable();
			t.fillInStackTrace();
			CorePlugin.logError(
					"Attempted to call an operation on a null instance.", t);
		}

	} // End pasteMessageArgument
	public boolean Cancopymessageargument(final java.util.UUID p_Id) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Cancopymessageargument");
		final ModelRoot modelRoot = getModelRoot();
		Message_c v_message = Message_c.getOneMSG_MOnR1018(this);

		return v_message.Cancopymessageargument(p_Id);

	} // End canCopyMessageArgument
	public boolean Canpastemessageargument() {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Synchronous Message",
						" Operation entered: SynchronousMessage::Canpastemessageargument");
		final ModelRoot modelRoot = getModelRoot();
		return !getIsformal();

	} // End canPasteMessageArgument

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		if (adapter == IActionFilter.class) {
			return SynchronousMessageActionFilter.getSingleton();
		}
		return null;
	}
} // end Synchronous Message
