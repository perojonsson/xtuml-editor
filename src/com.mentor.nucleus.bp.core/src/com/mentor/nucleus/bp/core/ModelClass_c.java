      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.ModelClass_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_MODEL_CLASS extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class ModelClass_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public ModelClass_c(ModelRoot modelRoot,
       java.util.UUID         p_m_obj_id,
       String       p_m_name,
       int          p_m_numb,
       String       p_m_key_lett,
       String       p_m_descrip,
       java.util.UUID         p_m_ss_id)
  {
    super(modelRoot);
       m_name = p_m_name;
       m_numb = p_m_numb;
       m_key_lett = p_m_key_lett;
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
    setUniqueId(m_obj_id);
    Object [] key = {m_obj_id};
    addInstanceToMap(key);
  }
  static public ModelClass_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_obj_id,
       String       p_m_name,
       int          p_m_numb,
       String       p_m_key_lett,
       String       p_m_descrip,
       java.util.UUID         p_m_ss_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(ModelClass_c.class);
      ModelClass_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_obj_id};
          new_inst = (ModelClass_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_name = p_m_name;
       new_inst.m_numb = p_m_numb;
       new_inst.m_key_lett = p_m_key_lett;
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new ModelClass_c(modelRoot,
p_m_obj_id,
p_m_name,
p_m_numb,
p_m_key_lett,
p_m_descrip,
p_m_ss_id
);
		new_inst.m_contentPath = contentPath;
    new_inst.setComponent(null);
	}
    return new_inst;
  }

  static public ModelClass_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_obj_id,
       String       p_m_name,
       int          p_m_numb,
       String       p_m_key_lett,
       String       p_m_descrip,
       java.util.UUID         p_m_ss_id){
    InstanceList instances = modelRoot.getInstanceList(ModelClass_c.class);
    ModelClass_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_obj_id
            };
        source = (ModelClass_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_name = p_m_name;
       source.m_numb = p_m_numb;
       source.m_key_lett = p_m_key_lett;
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_obj_id = IdAssigner.preprocessUUID(p_m_obj_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    ModelClass_c new_inst = new ModelClass_c(modelRoot,
p_m_obj_id,
p_m_name,
p_m_numb,
p_m_key_lett,
p_m_descrip,
p_m_ss_id
);
    return new_inst;
  }
  public ModelClass_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_name = "";   
     m_key_lett = "";   
     m_descrip = "";   
     m_ss_id = IdAssigner.NULL_UUID;   
     m_obj_id = idAssigner.createUUID();
    setUniqueId(m_obj_id);
    Object [] key = {m_obj_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_obj_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_obj_id !=  p_newKey ){
	
		m_obj_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof ModelClass_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof ModelClass_c)) {
           return false;
       }
       
       ModelClass_c me = (ModelClass_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getObj_id()) || IdAssigner.NULL_UUID.equals(((ModelClass_c)elem).getObj_id())) && this != elem)) {
      	return false;
      }
      if (!getObj_id().equals(((ModelClass_c)elem).getObj_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof ModelClass_c)) {
           return false;
       }
       
       ModelClass_c me = (ModelClass_c)elem;
      if (!getObj_idCachedValue().equals(((ModelClass_c)elem).getObj_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private String       m_name ;
  private int          m_numb ;
  private String       m_key_lett ;
  private String       m_descrip ;
  private java.util.UUID         m_ss_id ;
  private java.util.UUID         m_obj_id ;
      
// declare association references from this class
  
  
    
// referring navigation

PackageableElement_c IsSupertypePackageableElement ;
public void relateAcrossR8001To(PackageableElement_c target)
{
	relateAcrossR8001To(target, true);
}
public void relateAcrossR8001To(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypePackageableElement) return;  // already related

    if ( IsSupertypePackageableElement != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypePackageableElement != null) {
        UmlProblem.removeXtUMLProblem(this, IsSupertypePackageableElement);
    
        IsSupertypePackageableElement.clearBackPointerR8001To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ModelClass_c.relateAcrossR8001To(PackageableElement_c target)", 
			"Relate performed across R8001 from Model Class to Packageable Element without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypePackageableElement = target ;
        m_obj_id = target.getElement_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR8001To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR8001From(PackageableElement_c target)
{
	unrelateAcrossR8001From(target, true);
}
public void unrelateAcrossR8001From(PackageableElement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypePackageableElement == null) return;  // already unrelated
	
	if (target != IsSupertypePackageableElement) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R8001", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR8001To(this);
    }
    

      if(IsSupertypePackageableElement != null) {
      
        m_obj_id = IsSupertypePackageableElement.getElement_id();
        IsSupertypePackageableElement = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "8001", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ModelClass_c getOneO_OBJOnR8001(PackageableElement_c [] targets)
{
    return getOneO_OBJOnR8001(targets, null);
}

public static ModelClass_c getOneO_OBJOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneO_OBJOnR8001(targets[i], test);
        }
    }

    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR8001(PackageableElement_c target)
{
  return getOneO_OBJOnR8001(target, null);
}

public static ModelClass_c getOneO_OBJOnR8001(PackageableElement_c target, boolean loadComponent)
{
    return getOneO_OBJOnR8001(target.getModelRoot(), target, null, loadComponent);
}

public static ModelClass_c getOneO_OBJOnR8001(PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneO_OBJOnR8001(target.getModelRoot(), target, test);
  }
  return null;
}

public static ModelClass_c getOneO_OBJOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
	return getOneO_OBJOnR8001(modelRoot, target, test, true);
}

public static ModelClass_c getOneO_OBJOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  ModelClass_c result = null;
  
  result=find_getOneO_OBJOnR8001(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,ModelClass_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneO_OBJOnR8001(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static ModelClass_c find_getOneO_OBJOnR8001(ModelRoot modelRoot, PackageableElement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    ModelClass_c source = (ModelClass_c)target.backPointer_IsSubtypeModelClassIsSubtype_R8001;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static ModelClass_c [] getManyO_OBJsOnR8001(PackageableElement_c [] targets)
{
  return getManyO_OBJsOnR8001(targets, null);
}
public static ModelClass_c [] getManyO_OBJsOnR8001(PackageableElement_c [] targets, boolean loadComponent)
{
  return getManyO_OBJsOnR8001(targets, null, loadComponent);
}
public static ModelClass_c [] getManyO_OBJsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR8001(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR8001(PackageableElement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ModelClass_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, ModelClass_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(ModelClass_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      ModelClass_c source = (ModelClass_c)targets[i].backPointer_IsSubtypeModelClassIsSubtype_R8001;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	ModelClass_c[] ret_set = new ModelClass_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ModelClass_c[0];
  }
  }

public static ModelClass_c [] getManyO_OBJsOnR8001(PackageableElement_c target)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR8001(targetArray);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
  return result ;
}
}

public static ModelClass_c [] getManyO_OBJsOnR8001(PackageableElement_c target, boolean loadComponent)
{
  if (target != null) {
    PackageableElement_c [] targetArray = new PackageableElement_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR8001(targetArray, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
  return result ;
}
}



  
    
// referring navigation

Subsystem_c IsContainedInSubsystem ;
public void relateAcrossR2To(Subsystem_c target)
{
	relateAcrossR2To(target, true);
}
public void relateAcrossR2To(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsContainedInSubsystem) return;  // already related

    if ( IsContainedInSubsystem != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsContainedInSubsystem != null) {
        UmlProblem.removeXtUMLProblem(this, IsContainedInSubsystem);
    
        IsContainedInSubsystem.clearBackPointerR2To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"ModelClass_c.relateAcrossR2To(Subsystem_c target)", 
			"Relate performed across R2 from Model Class to Subsystem without unrelate of prior instance.");  
		}
    }
                
    	IsContainedInSubsystem = target ;
        m_ss_id = target.getSs_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR2To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "2", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR2From(Subsystem_c target)
{
	unrelateAcrossR2From(target, true);
}
public void unrelateAcrossR2From(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsContainedInSubsystem == null) return;  // already unrelated
	
	if (target != IsContainedInSubsystem) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R2", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR2To(this);
    }
    

      if(IsContainedInSubsystem != null) {
      
        m_ss_id = IsContainedInSubsystem.getSs_id();
        IsContainedInSubsystem = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "2", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static ModelClass_c getOneO_OBJOnR2(Subsystem_c [] targets)
{
    return getOneO_OBJOnR2(targets, null);
}

public static ModelClass_c getOneO_OBJOnR2(Subsystem_c [] targets, ClassQueryInterface_c test)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneO_OBJOnR2(targets[i], test);
        }
    }

    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR2(Subsystem_c target)
{
  return getOneO_OBJOnR2(target, null);
}

public static ModelClass_c getOneO_OBJOnR2(Subsystem_c target, boolean loadComponent)
{
    return getOneO_OBJOnR2(target.getModelRoot(), target, null, loadComponent);
}

public static ModelClass_c getOneO_OBJOnR2(Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneO_OBJOnR2(target.getModelRoot(), target, test);
  }
  return null;
}

public static ModelClass_c getOneO_OBJOnR2(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
	return getOneO_OBJOnR2(modelRoot, target, test, true);
}

public static ModelClass_c getOneO_OBJOnR2(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  ModelClass_c result = null;
  
  result=find_getOneO_OBJOnR2(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,ModelClass_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneO_OBJOnR2(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static ModelClass_c find_getOneO_OBJOnR2(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2) {
	    for ( int i = 0; i < target.backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2.size(); ++i ) {
	      ModelClass_c source = (ModelClass_c)target.backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static ModelClass_c [] getManyO_OBJsOnR2(Subsystem_c [] targets)
{
  return getManyO_OBJsOnR2(targets, null);
}
public static ModelClass_c [] getManyO_OBJsOnR2(Subsystem_c [] targets, boolean loadComponent)
{
  return getManyO_OBJsOnR2(targets, null, loadComponent);
}
public static ModelClass_c [] getManyO_OBJsOnR2(Subsystem_c [] targets, ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR2(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR2(Subsystem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new ModelClass_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, ModelClass_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(ModelClass_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2) {
	    for (int j = 0; j < targets[i].backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2.size(); ++j) {
	      ModelClass_c source = (ModelClass_c)targets[i].backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	ModelClass_c[] ret_set = new ModelClass_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new ModelClass_c[0];
  }
  }

public static ModelClass_c [] getManyO_OBJsOnR2(Subsystem_c target)
{
  return getManyO_OBJsOnR2(target, null);
}

public static ModelClass_c [] getManyO_OBJsOnR2(Subsystem_c target, boolean loadComponent)
{
  return getManyO_OBJsOnR2(target, null, loadComponent);
}

public static ModelClass_c [] getManyO_OBJsOnR2(Subsystem_c target, ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR2(target, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR2(Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new ModelClass_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, ModelClass_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2) {
    for (int i = 0; i < target.backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2.size(); ++i) {
      ModelClass_c source = (ModelClass_c)target.backPointer_IsDecomposedIntoModelClassIsDecomposedInto_R2.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		ModelClass_c[] ret_set = new ModelClass_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new ModelClass_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<InstanceSet_c> backPointer_InstanceSet_R819 = new ArrayList<InstanceSet_c>();

public void setInstanceSetOrderInChildListR819(InstanceSet_c target, int index) {
	unrelateAcrossR819From(target);
	InstanceSet_c[] elements = InstanceSet_c.getManyV_INSsOnR819(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR819From((InstanceSet_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR819To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR819To((InstanceSet_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR819To(InstanceSet_c target)
{
  if (target != null) {
    target.relateAcrossR819To(this, true) ;
  }
}

public void relateAcrossR819To(InstanceSet_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR819To(this, notifyChanges) ;
  }
}

public void setBackPointerR819To(InstanceSet_c target)
{
  	synchronized (backPointer_InstanceSet_R819) {
		backPointer_InstanceSet_R819.add(target);
	}
}

public void unrelateAcrossR819From(InstanceSet_c target)
{
  if (target != null) {
    target.unrelateAcrossR819From(this, true) ;
  }
}

public void unrelateAcrossR819From(InstanceSet_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR819From(this, notifyChanges) ;
  }
}

public void clearBackPointerR819To(InstanceSet_c target)
{
  synchronized (backPointer_InstanceSet_R819) {
	    backPointer_InstanceSet_R819.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR819(InstanceSet_c [] targets)
{
    return getOneO_OBJOnR819(targets, null);
}

public static ModelClass_c getOneO_OBJOnR819(InstanceSet_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR819(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR819(InstanceSet_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR819(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR819(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR819(InstanceSet_c target)
{
	return getOneO_OBJOnR819(target, true);
}
public static ModelClass_c getOneO_OBJOnR819(InstanceSet_c target, boolean loadComponent)
{
  if (target != null) {
    return target.RefersToModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR819(InstanceSet_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR819(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR819(InstanceSet_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelClass_c associate = targets[i].RefersToModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR819(InstanceSet_c [] targets)
{
  return getManyO_OBJsOnR819(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR819(InstanceSet_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    InstanceSet_c [] targetArray = new InstanceSet_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR819(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR819(InstanceSet_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR819(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR819(InstanceSet_c target)
{
    return getManyO_OBJsOnR819(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR819(InstanceSet_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR819(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<InstanceHandle_c> backPointer_InstanceHandle_R818 = new ArrayList<InstanceHandle_c>();

public void setInstanceHandleOrderInChildListR818(InstanceHandle_c target, int index) {
	unrelateAcrossR818From(target);
	InstanceHandle_c[] elements = InstanceHandle_c.getManyV_INTsOnR818(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR818From((InstanceHandle_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR818To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR818To((InstanceHandle_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR818To(InstanceHandle_c target)
{
  if (target != null) {
    target.relateAcrossR818To(this, true) ;
  }
}

public void relateAcrossR818To(InstanceHandle_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR818To(this, notifyChanges) ;
  }
}

public void setBackPointerR818To(InstanceHandle_c target)
{
  	synchronized (backPointer_InstanceHandle_R818) {
		backPointer_InstanceHandle_R818.add(target);
	}
}

public void unrelateAcrossR818From(InstanceHandle_c target)
{
  if (target != null) {
    target.unrelateAcrossR818From(this, true) ;
  }
}

public void unrelateAcrossR818From(InstanceHandle_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR818From(this, notifyChanges) ;
  }
}

public void clearBackPointerR818To(InstanceHandle_c target)
{
  synchronized (backPointer_InstanceHandle_R818) {
	    backPointer_InstanceHandle_R818.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR818(InstanceHandle_c [] targets)
{
    return getOneO_OBJOnR818(targets, null);
}

public static ModelClass_c getOneO_OBJOnR818(InstanceHandle_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR818(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR818(InstanceHandle_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR818(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR818(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR818(InstanceHandle_c target)
{
	return getOneO_OBJOnR818(target, true);
}
public static ModelClass_c getOneO_OBJOnR818(InstanceHandle_c target, boolean loadComponent)
{
  if (target != null) {
    return target.RefersToModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR818(InstanceHandle_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR818(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR818(InstanceHandle_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelClass_c associate = targets[i].RefersToModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR818(InstanceHandle_c [] targets)
{
  return getManyO_OBJsOnR818(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR818(InstanceHandle_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    InstanceHandle_c [] targetArray = new InstanceHandle_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR818(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR818(InstanceHandle_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR818(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR818(InstanceHandle_c target)
{
    return getManyO_OBJsOnR818(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR818(InstanceHandle_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR818(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Operation_c> backPointer_MayContainOperationMayContain_R115 = new ArrayList<Operation_c>();

public void setOperationOrderInChildListR115(Operation_c target, int index) {
	unrelateAcrossR115From(target);
	Operation_c[] elements = Operation_c.getManyO_TFRsOnR115(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR115From((Operation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR115To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR115To((Operation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR115To(Operation_c target)
{
  if (target != null) {
    target.relateAcrossR115To(this, true) ;
  }
}

public void relateAcrossR115To(Operation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR115To(this, notifyChanges) ;
  }
}

public void setBackPointerR115To(Operation_c target)
{
  	synchronized (backPointer_MayContainOperationMayContain_R115) {
		backPointer_MayContainOperationMayContain_R115.add(target);
	}
}

public void unrelateAcrossR115From(Operation_c target)
{
  if (target != null) {
    target.unrelateAcrossR115From(this, true) ;
  }
}

public void unrelateAcrossR115From(Operation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR115From(this, notifyChanges) ;
  }
}

public void clearBackPointerR115To(Operation_c target)
{
  synchronized (backPointer_MayContainOperationMayContain_R115) {
	    backPointer_MayContainOperationMayContain_R115.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR115(Operation_c [] targets)
{
    return getOneO_OBJOnR115(targets, null);
}

public static ModelClass_c getOneO_OBJOnR115(Operation_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR115(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR115(Operation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR115(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR115(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR115(Operation_c target)
{
	return getOneO_OBJOnR115(target, true);
}
public static ModelClass_c getOneO_OBJOnR115(Operation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsAssociatedWithModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR115(Operation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR115(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR115(Operation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsAssociatedWithModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].IsAssociatedWithModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR115(Operation_c [] targets)
{
  return getManyO_OBJsOnR115(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR115(Operation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Operation_c [] targetArray = new Operation_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR115(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR115(Operation_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR115(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR115(Operation_c target)
{
    return getManyO_OBJsOnR115(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR115(Operation_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR115(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Attribute_c> backPointer_HasCharacteristicsAbstractedByAttributeHasCharacteristicsAbstractedBy_R102 = new ArrayList<Attribute_c>();

public void setAttributeOrderInChildListR102(Attribute_c target, int index) {
	unrelateAcrossR102From(target);
	Attribute_c[] elements = Attribute_c.getManyO_ATTRsOnR102(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR102From((Attribute_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR102To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR102To((Attribute_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR102To(Attribute_c target)
{
  if (target != null) {
    target.relateAcrossR102To(this, true) ;
  }
}

public void relateAcrossR102To(Attribute_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR102To(this, notifyChanges) ;
  }
}

public void setBackPointerR102To(Attribute_c target)
{
  	synchronized (backPointer_HasCharacteristicsAbstractedByAttributeHasCharacteristicsAbstractedBy_R102) {
		backPointer_HasCharacteristicsAbstractedByAttributeHasCharacteristicsAbstractedBy_R102.add(target);
	}
}

public void unrelateAcrossR102From(Attribute_c target)
{
  if (target != null) {
    target.unrelateAcrossR102From(this, true) ;
  }
}

public void unrelateAcrossR102From(Attribute_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR102From(this, notifyChanges) ;
  }
}

public void clearBackPointerR102To(Attribute_c target)
{
  synchronized (backPointer_HasCharacteristicsAbstractedByAttributeHasCharacteristicsAbstractedBy_R102) {
	    backPointer_HasCharacteristicsAbstractedByAttributeHasCharacteristicsAbstractedBy_R102.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR102(Attribute_c [] targets)
{
    return getOneO_OBJOnR102(targets, null);
}

public static ModelClass_c getOneO_OBJOnR102(Attribute_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR102(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR102(Attribute_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR102(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR102(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR102(Attribute_c target)
{
	return getOneO_OBJOnR102(target, true);
}
public static ModelClass_c getOneO_OBJOnR102(Attribute_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.AbstractsCharacteristicsOfModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR102(Attribute_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR102(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR102(Attribute_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].AbstractsCharacteristicsOfModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].AbstractsCharacteristicsOfModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR102(Attribute_c [] targets)
{
  return getManyO_OBJsOnR102(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR102(Attribute_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Attribute_c [] targetArray = new Attribute_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR102(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR102(Attribute_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR102(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR102(Attribute_c target)
{
    return getManyO_OBJsOnR102(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR102(Attribute_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR102(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ClassIdentifier_c> backPointer_IsIdentifiedByClassIdentifierIsIdentifiedBy_R104 = new ArrayList<ClassIdentifier_c>();

public void setClassIdentifierOrderInChildListR104(ClassIdentifier_c target, int index) {
	unrelateAcrossR104From(target);
	ClassIdentifier_c[] elements = ClassIdentifier_c.getManyO_IDsOnR104(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR104From((ClassIdentifier_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR104To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR104To((ClassIdentifier_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR104To(ClassIdentifier_c target)
{
  if (target != null) {
    target.relateAcrossR104To(this, true) ;
  }
}

public void relateAcrossR104To(ClassIdentifier_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR104To(this, notifyChanges) ;
  }
}

public void setBackPointerR104To(ClassIdentifier_c target)
{
  	synchronized (backPointer_IsIdentifiedByClassIdentifierIsIdentifiedBy_R104) {
		backPointer_IsIdentifiedByClassIdentifierIsIdentifiedBy_R104.add(target);
	}
}

public void unrelateAcrossR104From(ClassIdentifier_c target)
{
  if (target != null) {
    target.unrelateAcrossR104From(this, true) ;
  }
}

public void unrelateAcrossR104From(ClassIdentifier_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR104From(this, notifyChanges) ;
  }
}

public void clearBackPointerR104To(ClassIdentifier_c target)
{
  synchronized (backPointer_IsIdentifiedByClassIdentifierIsIdentifiedBy_R104) {
	    backPointer_IsIdentifiedByClassIdentifierIsIdentifiedBy_R104.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR104(ClassIdentifier_c [] targets)
{
    return getOneO_OBJOnR104(targets, null);
}

public static ModelClass_c getOneO_OBJOnR104(ClassIdentifier_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR104(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR104(ClassIdentifier_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR104(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR104(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR104(ClassIdentifier_c target)
{
	return getOneO_OBJOnR104(target, true);
}
public static ModelClass_c getOneO_OBJOnR104(ClassIdentifier_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IdentifiesModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR104(ClassIdentifier_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR104(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR104(ClassIdentifier_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IdentifiesModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].IdentifiesModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR104(ClassIdentifier_c [] targets)
{
  return getManyO_OBJsOnR104(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR104(ClassIdentifier_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ClassIdentifier_c [] targetArray = new ClassIdentifier_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR104(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR104(ClassIdentifier_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR104(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR104(ClassIdentifier_c target)
{
    return getManyO_OBJsOnR104(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR104(ClassIdentifier_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR104(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ImportedClass_c> backPointer_HasPresenceInOtherSubsystemsImportedClassHasPresenceInOtherSubsystems_R101 = new ArrayList<ImportedClass_c>();

public void setImportedClassOrderInChildListR101(ImportedClass_c target, int index) {
	unrelateAcrossR101From(target);
	ImportedClass_c[] elements = ImportedClass_c.getManyO_IOBJsOnR101(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR101From((ImportedClass_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR101To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR101To((ImportedClass_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR101To(ImportedClass_c target)
{
  if (target != null) {
    target.relateAcrossR101To(this, true) ;
  }
}

public void relateAcrossR101To(ImportedClass_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR101To(this, notifyChanges) ;
  }
}

public void setBackPointerR101To(ImportedClass_c target)
{
  	synchronized (backPointer_HasPresenceInOtherSubsystemsImportedClassHasPresenceInOtherSubsystems_R101) {
		backPointer_HasPresenceInOtherSubsystemsImportedClassHasPresenceInOtherSubsystems_R101.add(target);
	}
}

public void unrelateAcrossR101From(ImportedClass_c target)
{
  if (target != null) {
    target.unrelateAcrossR101From(this, true) ;
  }
}

public void unrelateAcrossR101From(ImportedClass_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR101From(this, notifyChanges) ;
  }
}

public void clearBackPointerR101To(ImportedClass_c target)
{
  synchronized (backPointer_HasPresenceInOtherSubsystemsImportedClassHasPresenceInOtherSubsystems_R101) {
	    backPointer_HasPresenceInOtherSubsystemsImportedClassHasPresenceInOtherSubsystems_R101.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR101(ImportedClass_c [] targets)
{
    return getOneO_OBJOnR101(targets, null);
}

public static ModelClass_c getOneO_OBJOnR101(ImportedClass_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR101(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR101(ImportedClass_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR101(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR101(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR101(ImportedClass_c target)
{
	return getOneO_OBJOnR101(target, true);
}
public static ModelClass_c getOneO_OBJOnR101(ImportedClass_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.RepresentsModelClass != null){
		target.RepresentsModelClass.loadProxy();
	}
	}
    return target.RepresentsModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR101(ImportedClass_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR101(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR101(ImportedClass_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RepresentsModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].RepresentsModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR101(ImportedClass_c [] targets)
{
  return getManyO_OBJsOnR101(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR101(ImportedClass_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ImportedClass_c [] targetArray = new ImportedClass_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR101(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR101(ImportedClass_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR101(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR101(ImportedClass_c target)
{
    return getManyO_OBJsOnR101(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR101(ImportedClass_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR101(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<InstanceReferenceDataType_c> backPointer_IsAvailableAsAReferenceByInstanceReferenceDataTypeIsAvailableAsAReferenceBy_R123 = new ArrayList<InstanceReferenceDataType_c>();

public void setInstanceReferenceDataTypeOrderInChildListR123(InstanceReferenceDataType_c target, int index) {
	unrelateAcrossR123From(target);
	InstanceReferenceDataType_c[] elements = InstanceReferenceDataType_c.getManyS_IRDTsOnR123(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR123From((InstanceReferenceDataType_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR123To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR123To((InstanceReferenceDataType_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR123To(InstanceReferenceDataType_c target)
{
  if (target != null) {
    target.relateAcrossR123To(this, true) ;
  }
}

public void relateAcrossR123To(InstanceReferenceDataType_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR123To(this, notifyChanges) ;
  }
}

public void setBackPointerR123To(InstanceReferenceDataType_c target)
{
  	synchronized (backPointer_IsAvailableAsAReferenceByInstanceReferenceDataTypeIsAvailableAsAReferenceBy_R123) {
		backPointer_IsAvailableAsAReferenceByInstanceReferenceDataTypeIsAvailableAsAReferenceBy_R123.add(target);
	}
}

public void unrelateAcrossR123From(InstanceReferenceDataType_c target)
{
  if (target != null) {
    target.unrelateAcrossR123From(this, true) ;
  }
}

public void unrelateAcrossR123From(InstanceReferenceDataType_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR123From(this, notifyChanges) ;
  }
}

public void clearBackPointerR123To(InstanceReferenceDataType_c target)
{
  synchronized (backPointer_IsAvailableAsAReferenceByInstanceReferenceDataTypeIsAvailableAsAReferenceBy_R123) {
	    backPointer_IsAvailableAsAReferenceByInstanceReferenceDataTypeIsAvailableAsAReferenceBy_R123.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR123(InstanceReferenceDataType_c [] targets)
{
    return getOneO_OBJOnR123(targets, null);
}

public static ModelClass_c getOneO_OBJOnR123(InstanceReferenceDataType_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR123(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR123(InstanceReferenceDataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR123(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR123(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR123(InstanceReferenceDataType_c target)
{
	return getOneO_OBJOnR123(target, true);
}
public static ModelClass_c getOneO_OBJOnR123(InstanceReferenceDataType_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.ProvidesReferenceDatatypeForModelClass != null){
		target.ProvidesReferenceDatatypeForModelClass.loadProxy();
	}
	}
    return target.ProvidesReferenceDatatypeForModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR123(InstanceReferenceDataType_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR123(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR123(InstanceReferenceDataType_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ProvidesReferenceDatatypeForModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].ProvidesReferenceDatatypeForModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR123(InstanceReferenceDataType_c [] targets)
{
  return getManyO_OBJsOnR123(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR123(InstanceReferenceDataType_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    InstanceReferenceDataType_c [] targetArray = new InstanceReferenceDataType_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR123(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR123(InstanceReferenceDataType_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR123(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR123(InstanceReferenceDataType_c target)
{
    return getManyO_OBJsOnR123(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR123(InstanceReferenceDataType_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR123(target, null, loadComponent);
}


    
  
  
// referred to navigation

InstanceStateMachine_c backPointer_InstanceStateMachine_R518;

public void setInstanceStateMachineOrderInChildListR518(InstanceStateMachine_c target, int index) {
	unrelateAcrossR518From(target);
	InstanceStateMachine_c[] elements = InstanceStateMachine_c.getManySM_ISMsOnR518(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR518From((InstanceStateMachine_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR518To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR518To((InstanceStateMachine_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR518To(InstanceStateMachine_c target)
{
  if (target != null) {
    target.relateAcrossR518To(this, true) ;
  }
}

public void relateAcrossR518To(InstanceStateMachine_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR518To(this, notifyChanges) ;
  }
}

public void setBackPointerR518To(InstanceStateMachine_c target)
{
    backPointer_InstanceStateMachine_R518 = target;
}

public void unrelateAcrossR518From(InstanceStateMachine_c target)
{
  if (target != null) {
    target.unrelateAcrossR518From(this, true) ;
  }
}

public void unrelateAcrossR518From(InstanceStateMachine_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR518From(this, notifyChanges) ;
  }
}

public void clearBackPointerR518To(InstanceStateMachine_c target)
{
	if (target == backPointer_InstanceStateMachine_R518) {
		backPointer_InstanceStateMachine_R518 = null;
	}
}

public static ModelClass_c getOneO_OBJOnR518(InstanceStateMachine_c [] targets)
{
    return getOneO_OBJOnR518(targets, null);
}

public static ModelClass_c getOneO_OBJOnR518(InstanceStateMachine_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR518(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR518(InstanceStateMachine_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR518(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR518(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR518(InstanceStateMachine_c target)
{
	return getOneO_OBJOnR518(target, true);
}
public static ModelClass_c getOneO_OBJOnR518(InstanceStateMachine_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.ModelClass != null){
		target.ModelClass.loadProxy();
	}
	}
    return target.ModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR518(InstanceStateMachine_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR518(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR518(InstanceStateMachine_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].ModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR518(InstanceStateMachine_c [] targets)
{
  return getManyO_OBJsOnR518(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR518(InstanceStateMachine_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    InstanceStateMachine_c [] targetArray = new InstanceStateMachine_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR518(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR518(InstanceStateMachine_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR518(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR518(InstanceStateMachine_c target)
{
    return getManyO_OBJsOnR518(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR518(InstanceStateMachine_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR518(target, null, loadComponent);
}


    
  
  
// referred to navigation

ClassStateMachine_c backPointer_ClassStateMachine_R519;

public void setClassStateMachineOrderInChildListR519(ClassStateMachine_c target, int index) {
	unrelateAcrossR519From(target);
	ClassStateMachine_c[] elements = ClassStateMachine_c.getManySM_ASMsOnR519(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR519From((ClassStateMachine_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR519To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR519To((ClassStateMachine_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR519To(ClassStateMachine_c target)
{
  if (target != null) {
    target.relateAcrossR519To(this, true) ;
  }
}

public void relateAcrossR519To(ClassStateMachine_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR519To(this, notifyChanges) ;
  }
}

public void setBackPointerR519To(ClassStateMachine_c target)
{
    backPointer_ClassStateMachine_R519 = target;
}

public void unrelateAcrossR519From(ClassStateMachine_c target)
{
  if (target != null) {
    target.unrelateAcrossR519From(this, true) ;
  }
}

public void unrelateAcrossR519From(ClassStateMachine_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR519From(this, notifyChanges) ;
  }
}

public void clearBackPointerR519To(ClassStateMachine_c target)
{
	if (target == backPointer_ClassStateMachine_R519) {
		backPointer_ClassStateMachine_R519 = null;
	}
}

public static ModelClass_c getOneO_OBJOnR519(ClassStateMachine_c [] targets)
{
    return getOneO_OBJOnR519(targets, null);
}

public static ModelClass_c getOneO_OBJOnR519(ClassStateMachine_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR519(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR519(ClassStateMachine_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR519(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR519(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR519(ClassStateMachine_c target)
{
	return getOneO_OBJOnR519(target, true);
}
public static ModelClass_c getOneO_OBJOnR519(ClassStateMachine_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.ModelClass != null){
		target.ModelClass.loadProxy();
	}
	}
    return target.ModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR519(ClassStateMachine_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR519(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR519(ClassStateMachine_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].ModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR519(ClassStateMachine_c [] targets)
{
  return getManyO_OBJsOnR519(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR519(ClassStateMachine_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ClassStateMachine_c [] targetArray = new ClassStateMachine_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR519(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR519(ClassStateMachine_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR519(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR519(ClassStateMachine_c target)
{
    return getManyO_OBJsOnR519(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR519(ClassStateMachine_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR519(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<SelectFromInstancesWhere_c> backPointer_SelectFromInstancesWhere_R676 = new ArrayList<SelectFromInstancesWhere_c>();

public void setSelectFromInstancesWhereOrderInChildListR676(SelectFromInstancesWhere_c target, int index) {
	unrelateAcrossR676From(target);
	SelectFromInstancesWhere_c[] elements = SelectFromInstancesWhere_c.getManyACT_FIWsOnR676(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR676From((SelectFromInstancesWhere_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR676To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR676To((SelectFromInstancesWhere_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR676To(SelectFromInstancesWhere_c target)
{
  if (target != null) {
    target.relateAcrossR676To(this, true) ;
  }
}

public void relateAcrossR676To(SelectFromInstancesWhere_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR676To(this, notifyChanges) ;
  }
}

public void setBackPointerR676To(SelectFromInstancesWhere_c target)
{
  	synchronized (backPointer_SelectFromInstancesWhere_R676) {
		backPointer_SelectFromInstancesWhere_R676.add(target);
	}
}

public void unrelateAcrossR676From(SelectFromInstancesWhere_c target)
{
  if (target != null) {
    target.unrelateAcrossR676From(this, true) ;
  }
}

public void unrelateAcrossR676From(SelectFromInstancesWhere_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR676From(this, notifyChanges) ;
  }
}

public void clearBackPointerR676To(SelectFromInstancesWhere_c target)
{
  synchronized (backPointer_SelectFromInstancesWhere_R676) {
	    backPointer_SelectFromInstancesWhere_R676.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR676(SelectFromInstancesWhere_c [] targets)
{
    return getOneO_OBJOnR676(targets, null);
}

public static ModelClass_c getOneO_OBJOnR676(SelectFromInstancesWhere_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR676(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR676(SelectFromInstancesWhere_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR676(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR676(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR676(SelectFromInstancesWhere_c target)
{
	return getOneO_OBJOnR676(target, true);
}
public static ModelClass_c getOneO_OBJOnR676(SelectFromInstancesWhere_c target, boolean loadComponent)
{
  if (target != null) {
    return target.FromExtentOfModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR676(SelectFromInstancesWhere_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR676(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR676(SelectFromInstancesWhere_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelClass_c associate = targets[i].FromExtentOfModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR676(SelectFromInstancesWhere_c [] targets)
{
  return getManyO_OBJsOnR676(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR676(SelectFromInstancesWhere_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SelectFromInstancesWhere_c [] targetArray = new SelectFromInstancesWhere_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR676(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR676(SelectFromInstancesWhere_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR676(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR676(SelectFromInstancesWhere_c target)
{
    return getManyO_OBJsOnR676(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR676(SelectFromInstancesWhere_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR676(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<SelectFromInstances_c> backPointer_SelectFromInstances_R677 = new ArrayList<SelectFromInstances_c>();

public void setSelectFromInstancesOrderInChildListR677(SelectFromInstances_c target, int index) {
	unrelateAcrossR677From(target);
	SelectFromInstances_c[] elements = SelectFromInstances_c.getManyACT_FIOsOnR677(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR677From((SelectFromInstances_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR677To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR677To((SelectFromInstances_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR677To(SelectFromInstances_c target)
{
  if (target != null) {
    target.relateAcrossR677To(this, true) ;
  }
}

public void relateAcrossR677To(SelectFromInstances_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR677To(this, notifyChanges) ;
  }
}

public void setBackPointerR677To(SelectFromInstances_c target)
{
  	synchronized (backPointer_SelectFromInstances_R677) {
		backPointer_SelectFromInstances_R677.add(target);
	}
}

public void unrelateAcrossR677From(SelectFromInstances_c target)
{
  if (target != null) {
    target.unrelateAcrossR677From(this, true) ;
  }
}

public void unrelateAcrossR677From(SelectFromInstances_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR677From(this, notifyChanges) ;
  }
}

public void clearBackPointerR677To(SelectFromInstances_c target)
{
  synchronized (backPointer_SelectFromInstances_R677) {
	    backPointer_SelectFromInstances_R677.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR677(SelectFromInstances_c [] targets)
{
    return getOneO_OBJOnR677(targets, null);
}

public static ModelClass_c getOneO_OBJOnR677(SelectFromInstances_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR677(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR677(SelectFromInstances_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR677(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR677(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR677(SelectFromInstances_c target)
{
	return getOneO_OBJOnR677(target, true);
}
public static ModelClass_c getOneO_OBJOnR677(SelectFromInstances_c target, boolean loadComponent)
{
  if (target != null) {
    return target.FromExtentOfModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR677(SelectFromInstances_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR677(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR677(SelectFromInstances_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelClass_c associate = targets[i].FromExtentOfModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR677(SelectFromInstances_c [] targets)
{
  return getManyO_OBJsOnR677(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR677(SelectFromInstances_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SelectFromInstances_c [] targetArray = new SelectFromInstances_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR677(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR677(SelectFromInstances_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR677(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR677(SelectFromInstances_c target)
{
    return getManyO_OBJsOnR677(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR677(SelectFromInstances_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR677(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ChainLink_c> backPointer_ChainLink_R678 = new ArrayList<ChainLink_c>();

public void setChainLinkOrderInChildListR678(ChainLink_c target, int index) {
	unrelateAcrossR678From(target);
	ChainLink_c[] elements = ChainLink_c.getManyACT_LNKsOnR678(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR678From((ChainLink_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR678To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR678To((ChainLink_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR678To(ChainLink_c target)
{
  if (target != null) {
    target.relateAcrossR678To(this, true) ;
  }
}

public void relateAcrossR678To(ChainLink_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR678To(this, notifyChanges) ;
  }
}

public void setBackPointerR678To(ChainLink_c target)
{
  	synchronized (backPointer_ChainLink_R678) {
		backPointer_ChainLink_R678.add(target);
	}
}

public void unrelateAcrossR678From(ChainLink_c target)
{
  if (target != null) {
    target.unrelateAcrossR678From(this, true) ;
  }
}

public void unrelateAcrossR678From(ChainLink_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR678From(this, notifyChanges) ;
  }
}

public void clearBackPointerR678To(ChainLink_c target)
{
  synchronized (backPointer_ChainLink_R678) {
	    backPointer_ChainLink_R678.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR678(ChainLink_c [] targets)
{
    return getOneO_OBJOnR678(targets, null);
}

public static ModelClass_c getOneO_OBJOnR678(ChainLink_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR678(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR678(ChainLink_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR678(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR678(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR678(ChainLink_c target)
{
	return getOneO_OBJOnR678(target, true);
}
public static ModelClass_c getOneO_OBJOnR678(ChainLink_c target, boolean loadComponent)
{
  if (target != null) {
    return target.SpecifiesInstancesOfModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR678(ChainLink_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR678(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR678(ChainLink_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelClass_c associate = targets[i].SpecifiesInstancesOfModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR678(ChainLink_c [] targets)
{
  return getManyO_OBJsOnR678(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR678(ChainLink_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ChainLink_c [] targetArray = new ChainLink_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR678(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR678(ChainLink_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR678(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR678(ChainLink_c target)
{
    return getManyO_OBJsOnR678(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR678(ChainLink_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR678(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ClassInstanceParticipant_c> backPointer_RepresentsParticipantOfClassInstanceParticipantRepresentsParticipantOf_R934 = new ArrayList<ClassInstanceParticipant_c>();

public void setClassInstanceParticipantOrderInChildListR934(ClassInstanceParticipant_c target, int index) {
	unrelateAcrossR934From(target);
	ClassInstanceParticipant_c[] elements = ClassInstanceParticipant_c.getManySQ_CIPsOnR934(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR934From((ClassInstanceParticipant_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR934To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR934To((ClassInstanceParticipant_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR934To(ClassInstanceParticipant_c target)
{
  if (target != null) {
    target.relateAcrossR934To(this, true) ;
  }
}

public void relateAcrossR934To(ClassInstanceParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR934To(this, notifyChanges) ;
  }
}

public void setBackPointerR934To(ClassInstanceParticipant_c target)
{
  	synchronized (backPointer_RepresentsParticipantOfClassInstanceParticipantRepresentsParticipantOf_R934) {
		backPointer_RepresentsParticipantOfClassInstanceParticipantRepresentsParticipantOf_R934.add(target);
	}
}

public void unrelateAcrossR934From(ClassInstanceParticipant_c target)
{
  if (target != null) {
    target.unrelateAcrossR934From(this, true) ;
  }
}

public void unrelateAcrossR934From(ClassInstanceParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR934From(this, notifyChanges) ;
  }
}

public void clearBackPointerR934To(ClassInstanceParticipant_c target)
{
  synchronized (backPointer_RepresentsParticipantOfClassInstanceParticipantRepresentsParticipantOf_R934) {
	    backPointer_RepresentsParticipantOfClassInstanceParticipantRepresentsParticipantOf_R934.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR934(ClassInstanceParticipant_c [] targets)
{
    return getOneO_OBJOnR934(targets, null);
}

public static ModelClass_c getOneO_OBJOnR934(ClassInstanceParticipant_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR934(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR934(ClassInstanceParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR934(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR934(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR934(ClassInstanceParticipant_c target)
{
	return getOneO_OBJOnR934(target, true);
}
public static ModelClass_c getOneO_OBJOnR934(ClassInstanceParticipant_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.RepresentsModelClass != null){
		target.RepresentsModelClass.loadProxy();
	}
	}
    return target.RepresentsModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR934(ClassInstanceParticipant_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR934(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR934(ClassInstanceParticipant_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RepresentsModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].RepresentsModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR934(ClassInstanceParticipant_c [] targets)
{
  return getManyO_OBJsOnR934(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR934(ClassInstanceParticipant_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ClassInstanceParticipant_c [] targetArray = new ClassInstanceParticipant_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR934(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR934(ClassInstanceParticipant_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR934(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR934(ClassInstanceParticipant_c target)
{
    return getManyO_OBJsOnR934(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR934(ClassInstanceParticipant_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR934(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ClassParticipant_c> backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939 = new ArrayList<ClassParticipant_c>();

public void setClassParticipantOrderInChildListR939(ClassParticipant_c target, int index) {
	unrelateAcrossR939From(target);
	ClassParticipant_c[] elements = ClassParticipant_c.getManySQ_CPsOnR939(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR939From((ClassParticipant_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR939To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR939To((ClassParticipant_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR939To(ClassParticipant_c target)
{
  if (target != null) {
    target.relateAcrossR939To(this, true) ;
  }
}

public void relateAcrossR939To(ClassParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR939To(this, notifyChanges) ;
  }
}

public void setBackPointerR939To(ClassParticipant_c target)
{
  	synchronized (backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939) {
		backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939.add(target);
	}
}

public void unrelateAcrossR939From(ClassParticipant_c target)
{
  if (target != null) {
    target.unrelateAcrossR939From(this, true) ;
  }
}

public void unrelateAcrossR939From(ClassParticipant_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR939From(this, notifyChanges) ;
  }
}

public void clearBackPointerR939To(ClassParticipant_c target)
{
  synchronized (backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939) {
	    backPointer_RepresentsParticipantOfClassParticipantRepresentsParticipantOf_R939.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR939(ClassParticipant_c [] targets)
{
    return getOneO_OBJOnR939(targets, null);
}

public static ModelClass_c getOneO_OBJOnR939(ClassParticipant_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR939(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR939(ClassParticipant_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR939(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR939(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR939(ClassParticipant_c target)
{
	return getOneO_OBJOnR939(target, true);
}
public static ModelClass_c getOneO_OBJOnR939(ClassParticipant_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.RepresentsModelClass != null){
		target.RepresentsModelClass.loadProxy();
	}
	}
    return target.RepresentsModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR939(ClassParticipant_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR939(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR939(ClassParticipant_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].RepresentsModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].RepresentsModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR939(ClassParticipant_c [] targets)
{
  return getManyO_OBJsOnR939(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR939(ClassParticipant_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ClassParticipant_c [] targetArray = new ClassParticipant_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR939(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR939(ClassParticipant_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR939(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR939(ClassParticipant_c target)
{
    return getManyO_OBJsOnR939(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR939(ClassParticipant_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR939(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Create_c> backPointer_Create_R671 = new ArrayList<Create_c>();

public void setCreateOrderInChildListR671(Create_c target, int index) {
	unrelateAcrossR671From(target);
	Create_c[] elements = Create_c.getManyACT_CRsOnR671(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR671From((Create_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR671To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR671To((Create_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR671To(Create_c target)
{
  if (target != null) {
    target.relateAcrossR671To(this, true) ;
  }
}

public void relateAcrossR671To(Create_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR671To(this, notifyChanges) ;
  }
}

public void setBackPointerR671To(Create_c target)
{
  	synchronized (backPointer_Create_R671) {
		backPointer_Create_R671.add(target);
	}
}

public void unrelateAcrossR671From(Create_c target)
{
  if (target != null) {
    target.unrelateAcrossR671From(this, true) ;
  }
}

public void unrelateAcrossR671From(Create_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR671From(this, notifyChanges) ;
  }
}

public void clearBackPointerR671To(Create_c target)
{
  synchronized (backPointer_Create_R671) {
	    backPointer_Create_R671.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR671(Create_c [] targets)
{
    return getOneO_OBJOnR671(targets, null);
}

public static ModelClass_c getOneO_OBJOnR671(Create_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR671(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR671(Create_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR671(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR671(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR671(Create_c target)
{
	return getOneO_OBJOnR671(target, true);
}
public static ModelClass_c getOneO_OBJOnR671(Create_c target, boolean loadComponent)
{
  if (target != null) {
    return target.InstanceOfModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR671(Create_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR671(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR671(Create_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelClass_c associate = targets[i].InstanceOfModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR671(Create_c [] targets)
{
  return getManyO_OBJsOnR671(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR671(Create_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Create_c [] targetArray = new Create_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR671(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR671(Create_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR671(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR671(Create_c target)
{
    return getManyO_OBJsOnR671(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR671(Create_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR671(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<CreateNoVariable_c> backPointer_CreateNoVariable_R672 = new ArrayList<CreateNoVariable_c>();

public void setCreateNoVariableOrderInChildListR672(CreateNoVariable_c target, int index) {
	unrelateAcrossR672From(target);
	CreateNoVariable_c[] elements = CreateNoVariable_c.getManyACT_CNVsOnR672(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR672From((CreateNoVariable_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR672To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR672To((CreateNoVariable_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR672To(CreateNoVariable_c target)
{
  if (target != null) {
    target.relateAcrossR672To(this, true) ;
  }
}

public void relateAcrossR672To(CreateNoVariable_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR672To(this, notifyChanges) ;
  }
}

public void setBackPointerR672To(CreateNoVariable_c target)
{
  	synchronized (backPointer_CreateNoVariable_R672) {
		backPointer_CreateNoVariable_R672.add(target);
	}
}

public void unrelateAcrossR672From(CreateNoVariable_c target)
{
  if (target != null) {
    target.unrelateAcrossR672From(this, true) ;
  }
}

public void unrelateAcrossR672From(CreateNoVariable_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR672From(this, notifyChanges) ;
  }
}

public void clearBackPointerR672To(CreateNoVariable_c target)
{
  synchronized (backPointer_CreateNoVariable_R672) {
	    backPointer_CreateNoVariable_R672.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR672(CreateNoVariable_c [] targets)
{
    return getOneO_OBJOnR672(targets, null);
}

public static ModelClass_c getOneO_OBJOnR672(CreateNoVariable_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR672(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR672(CreateNoVariable_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR672(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR672(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR672(CreateNoVariable_c target)
{
	return getOneO_OBJOnR672(target, true);
}
public static ModelClass_c getOneO_OBJOnR672(CreateNoVariable_c target, boolean loadComponent)
{
  if (target != null) {
    return target.InstanceOfModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR672(CreateNoVariable_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR672(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR672(CreateNoVariable_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelClass_c associate = targets[i].InstanceOfModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR672(CreateNoVariable_c [] targets)
{
  return getManyO_OBJsOnR672(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR672(CreateNoVariable_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    CreateNoVariable_c [] targetArray = new CreateNoVariable_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR672(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR672(CreateNoVariable_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR672(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR672(CreateNoVariable_c target)
{
    return getManyO_OBJsOnR672(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR672(CreateNoVariable_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR672(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<SmToObjAccessPath_c> backPointer_HasDataAccessRepresentedBySmToObjAccessPathHasDataAccessRepresentedBy_R417 = new ArrayList<SmToObjAccessPath_c>();

public void setSmToObjAccessPathOrderInChildListR417(SmToObjAccessPath_c target, int index) {
	unrelateAcrossR417From(target);
	SmToObjAccessPath_c[] elements = SmToObjAccessPath_c.getManyCA_SMOAsOnR417(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR417From((SmToObjAccessPath_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR417To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR417To((SmToObjAccessPath_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR417To(SmToObjAccessPath_c target)
{
  if (target != null) {
    target.relateAcrossR417To(this, true) ;
  }
}

public void relateAcrossR417To(SmToObjAccessPath_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR417To(this, notifyChanges) ;
  }
}

public void setBackPointerR417To(SmToObjAccessPath_c target)
{
  	synchronized (backPointer_HasDataAccessRepresentedBySmToObjAccessPathHasDataAccessRepresentedBy_R417) {
		backPointer_HasDataAccessRepresentedBySmToObjAccessPathHasDataAccessRepresentedBy_R417.add(target);
	}
}

public void unrelateAcrossR417From(SmToObjAccessPath_c target)
{
  if (target != null) {
    target.unrelateAcrossR417From(this, true) ;
  }
}

public void unrelateAcrossR417From(SmToObjAccessPath_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR417From(this, notifyChanges) ;
  }
}

public void clearBackPointerR417To(SmToObjAccessPath_c target)
{
  synchronized (backPointer_HasDataAccessRepresentedBySmToObjAccessPathHasDataAccessRepresentedBy_R417) {
	    backPointer_HasDataAccessRepresentedBySmToObjAccessPathHasDataAccessRepresentedBy_R417.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR417(SmToObjAccessPath_c [] targets)
{
    return getOneO_OBJOnR417(targets, null);
}

public static ModelClass_c getOneO_OBJOnR417(SmToObjAccessPath_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR417(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR417(SmToObjAccessPath_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR417(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR417(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR417(SmToObjAccessPath_c target)
{
	return getOneO_OBJOnR417(target, true);
}
public static ModelClass_c getOneO_OBJOnR417(SmToObjAccessPath_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.ShowsAccessesOfDataFromModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR417(SmToObjAccessPath_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR417(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR417(SmToObjAccessPath_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].ShowsAccessesOfDataFromModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].ShowsAccessesOfDataFromModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR417(SmToObjAccessPath_c [] targets)
{
  return getManyO_OBJsOnR417(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR417(SmToObjAccessPath_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SmToObjAccessPath_c [] targetArray = new SmToObjAccessPath_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR417(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR417(SmToObjAccessPath_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR417(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR417(SmToObjAccessPath_c target)
{
    return getManyO_OBJsOnR417(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR417(SmToObjAccessPath_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR417(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ForStmt_c> backPointer_ForStmt_R670 = new ArrayList<ForStmt_c>();

public void setForStmtOrderInChildListR670(ForStmt_c target, int index) {
	unrelateAcrossR670From(target);
	ForStmt_c[] elements = ForStmt_c.getManyACT_FORsOnR670(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR670From((ForStmt_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR670To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR670To((ForStmt_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR670To(ForStmt_c target)
{
  if (target != null) {
    target.relateAcrossR670To(this, true) ;
  }
}

public void relateAcrossR670To(ForStmt_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR670To(this, notifyChanges) ;
  }
}

public void setBackPointerR670To(ForStmt_c target)
{
  	synchronized (backPointer_ForStmt_R670) {
		backPointer_ForStmt_R670.add(target);
	}
}

public void unrelateAcrossR670From(ForStmt_c target)
{
  if (target != null) {
    target.unrelateAcrossR670From(this, true) ;
  }
}

public void unrelateAcrossR670From(ForStmt_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR670From(this, notifyChanges) ;
  }
}

public void clearBackPointerR670To(ForStmt_c target)
{
  synchronized (backPointer_ForStmt_R670) {
	    backPointer_ForStmt_R670.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR670(ForStmt_c [] targets)
{
    return getOneO_OBJOnR670(targets, null);
}

public static ModelClass_c getOneO_OBJOnR670(ForStmt_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR670(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR670(ForStmt_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR670(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR670(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR670(ForStmt_c target)
{
	return getOneO_OBJOnR670(target, true);
}
public static ModelClass_c getOneO_OBJOnR670(ForStmt_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IteratesASetOfModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR670(ForStmt_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR670(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR670(ForStmt_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
    ModelClass_c associate = targets[i].IteratesASetOfModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR670(ForStmt_c [] targets)
{
  return getManyO_OBJsOnR670(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR670(ForStmt_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ForStmt_c [] targetArray = new ForStmt_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR670(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR670(ForStmt_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR670(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR670(ForStmt_c target)
{
    return getManyO_OBJsOnR670(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR670(ForStmt_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR670(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ClassInAssociation_c> backPointer_HasInstanceAssociationsAbstractedClassInAssociationHasInstanceAssociationsAbstracted_R201 = new ArrayList<ClassInAssociation_c>();

public void setClassInAssociationOrderInChildListR201(ClassInAssociation_c target, int index) {
	unrelateAcrossR201From(target);
	ClassInAssociation_c[] elements = ClassInAssociation_c.getManyR_OIRsOnR201(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR201From((ClassInAssociation_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR201To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR201To((ClassInAssociation_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR201To(ClassInAssociation_c target)
{
  if (target != null) {
    target.relateAcrossR201To(this, true) ;
  }
}

public void relateAcrossR201To(ClassInAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR201To(this, notifyChanges) ;
  }
}

public void setBackPointerR201To(ClassInAssociation_c target)
{
  	synchronized (backPointer_HasInstanceAssociationsAbstractedClassInAssociationHasInstanceAssociationsAbstracted_R201) {
		backPointer_HasInstanceAssociationsAbstractedClassInAssociationHasInstanceAssociationsAbstracted_R201.add(target);
	}
}

public void unrelateAcrossR201From(ClassInAssociation_c target)
{
  if (target != null) {
    target.unrelateAcrossR201From(this, true) ;
  }
}

public void unrelateAcrossR201From(ClassInAssociation_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR201From(this, notifyChanges) ;
  }
}

public void clearBackPointerR201To(ClassInAssociation_c target)
{
  synchronized (backPointer_HasInstanceAssociationsAbstractedClassInAssociationHasInstanceAssociationsAbstracted_R201) {
	    backPointer_HasInstanceAssociationsAbstractedClassInAssociationHasInstanceAssociationsAbstracted_R201.remove(target);
	}
}

public static ModelClass_c getOneO_OBJOnR201(ClassInAssociation_c [] targets)
{
    return getOneO_OBJOnR201(targets, null);
}

public static ModelClass_c getOneO_OBJOnR201(ClassInAssociation_c [] targets, ClassQueryInterface_c test)
{
    return getOneO_OBJOnR201(targets, test, true);
}

public static ModelClass_c getOneO_OBJOnR201(ClassInAssociation_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    ModelClass_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             ModelClass_c candidate_val = getOneO_OBJOnR201(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneO_OBJOnR201(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static ModelClass_c getOneO_OBJOnR201(ClassInAssociation_c target)
{
	return getOneO_OBJOnR201(target, true);
}
public static ModelClass_c getOneO_OBJOnR201(ClassInAssociation_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.AbstractsAssociationBetweenInstancesOfModelClass != null){
		target.AbstractsAssociationBetweenInstancesOfModelClass.loadProxy();
	}
	}
    return target.AbstractsAssociationBetweenInstancesOfModelClass ;
  } else {
    return null;
  }
}

public static ModelClass_c [] getManyO_OBJsOnR201(ClassInAssociation_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR201(targets, test, true);
}

public static ModelClass_c [] getManyO_OBJsOnR201(ClassInAssociation_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new ModelClass_c[0];
  
  
  LinkedHashSet<ModelClass_c> elementsSet = new LinkedHashSet<ModelClass_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].AbstractsAssociationBetweenInstancesOfModelClass == null)
	  targets[i].loadProxy();
    ModelClass_c associate = targets[i].AbstractsAssociationBetweenInstancesOfModelClass;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  ModelClass_c[] result = new ModelClass_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static ModelClass_c [] getManyO_OBJsOnR201(ClassInAssociation_c [] targets)
{
  return getManyO_OBJsOnR201(targets, null);
}

public static ModelClass_c [] getManyO_OBJsOnR201(ClassInAssociation_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ClassInAssociation_c [] targetArray = new ClassInAssociation_c[1];
    targetArray[0] = target;
    return getManyO_OBJsOnR201(targetArray, test, loadComponent);
  } else {
    ModelClass_c [] result = new ModelClass_c [0] ;
    return result ;
  }
  
}

public static ModelClass_c [] getManyO_OBJsOnR201(ClassInAssociation_c target,
    ClassQueryInterface_c test)
{
    return getManyO_OBJsOnR201(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR201(ClassInAssociation_c target)
{
    return getManyO_OBJsOnR201(target, null, true);
}

public static ModelClass_c [] getManyO_OBJsOnR201(ClassInAssociation_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR201(target, null, loadComponent);
}

public static ModelClass_c getOneO_OBJOnR201(Association_c target)
{
  return ModelClass_c.getOneO_OBJOnR201(ClassInAssociation_c.getOneR_OIROnR201(target)) ;
}

public static ModelClass_c getOneO_OBJOnR201(Association_c target,
    ClassQueryInterface_c test)
{
  return ModelClass_c.getOneO_OBJOnR201(ClassInAssociation_c.getManyR_OIRsOnR201(target), test) ;
}

public static ModelClass_c [] getManyO_OBJsOnR201(Association_c target,
    ClassQueryInterface_c test)
{
	return getManyO_OBJsOnR201(target, test, true);
}
public static ModelClass_c [] getManyO_OBJsOnR201(Association_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  ClassInAssociation_c [] associators = ClassInAssociation_c.getManyR_OIRsOnR201(target, loadComponent) ;
    return ModelClass_c.getManyO_OBJsOnR201(associators, test, loadComponent) ;
}
public static ModelClass_c [] getManyO_OBJsOnR201(Association_c target)
{
    return getManyO_OBJsOnR201(target, null, true);
}
public static ModelClass_c [] getManyO_OBJsOnR201(Association_c target, boolean loadComponent)
{
    return getManyO_OBJsOnR201(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R8001
      PackageableElement_c relInst38675 = (PackageableElement_c) baseRoot.getInstanceList(PackageableElement_c.class).get(new Object[] {m_obj_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38675 == null) {
      			relInst38675 = (PackageableElement_c) Ooaofooa.getDefaultInstance().getInstanceList(PackageableElement_c.class).get(new Object[] {m_obj_id});
      		}
			if (relInst38675 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38675 = (PackageableElement_c) roots[i].getInstanceList(PackageableElement_c.class).get(new Object[] {m_obj_id});
					if (relInst38675 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38675 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38675) && !isProxy())) {
	      relInst38675.relateAcrossR8001To(this, notifyChanges);
	  }
	  }
	          

	if (IsContainedInSubsystem == null) {          
      // R2
      Subsystem_c relInst38676 = (Subsystem_c) baseRoot.getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38676 == null) {
      			relInst38676 = (Subsystem_c) Ooaofooa.getDefaultInstance().getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
      		}
			if (relInst38676 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38676 = (Subsystem_c) roots[i].getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
					if (relInst38676 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38676 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38676) && !isProxy())) {
	      relInst38676.relateAcrossR2To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R8001
      // PE_PE
		  inst=IsSupertypePackageableElement;
			unrelateAcrossR8001From(IsSupertypePackageableElement, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R2
      // S_SS
		  inst=IsContainedInSubsystem;
			unrelateAcrossR2From(IsContainedInSubsystem, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(ModelClass_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final ModelClass_c inst = (ModelClass_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(ModelClass_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static ModelClass_c ModelClassInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		ModelClass_c result=findModelClassInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,ModelClass_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findModelClassInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static ModelClass_c findModelClassInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(ModelClass_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				ModelClass_c x = (ModelClass_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static ModelClass_c ModelClassInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ModelClassInstance(modelRoot,test,true);
  }
  
  public static ModelClass_c ModelClassInstance(ModelRoot modelRoot)
  {
	 return ModelClassInstance(modelRoot,null,true);
  }

  public static ModelClass_c [] ModelClassInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, ModelClass_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(ModelClass_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					ModelClass_c x = (ModelClass_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				ModelClass_c[] ret_set = new ModelClass_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new ModelClass_c[0];
			}		
		} 
  }
  public static ModelClass_c [] ModelClassInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ModelClassInstances(modelRoot,test,true);
  }
  public static ModelClass_c [] ModelClassInstances(ModelRoot modelRoot)
  {
	return ModelClassInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Model Class.dispose call: ";
	InstanceSet_c testR819Inst = InstanceSet_c.getOneV_INSOnR819(this, false);

	if ( testR819Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "819 ";	
	}
	InstanceHandle_c testR818Inst = InstanceHandle_c.getOneV_INTOnR818(this, false);

	if ( testR818Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "818 ";	
	}
	PackageableElement_c testR8001Inst5 = PackageableElement_c.getOnePE_PEOnR8001(this, false);

	if ( testR8001Inst5 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "8001 ";
	}
	Operation_c testR115Inst = Operation_c.getOneO_TFROnR115(this, false);

	if ( testR115Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "115 ";	
	}
	Attribute_c testR102Inst = Attribute_c.getOneO_ATTROnR102(this, false);

	if ( testR102Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "102 ";	
	}
	ClassIdentifier_c testR104Inst = ClassIdentifier_c.getOneO_IDOnR104(this, false);

	if ( testR104Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "104 ";	
	}
	ImportedClass_c testR101Inst = ImportedClass_c.getOneO_IOBJOnR101(this, false);

	if ( testR101Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "101 ";	
	}
	InstanceReferenceDataType_c testR123Inst = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, false);

	if ( testR123Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "123 ";	
	}
	InstanceStateMachine_c testR518Inst = InstanceStateMachine_c.getOneSM_ISMOnR518(this, false);

	if ( testR518Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "518 ";	
	}
	ClassStateMachine_c testR519Inst = ClassStateMachine_c.getOneSM_ASMOnR519(this, false);

	if ( testR519Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "519 ";	
	}
	SelectFromInstancesWhere_c testR676Inst = SelectFromInstancesWhere_c.getOneACT_FIWOnR676(this, false);

	if ( testR676Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "676 ";	
	}
	SelectFromInstances_c testR677Inst = SelectFromInstances_c.getOneACT_FIOOnR677(this, false);

	if ( testR677Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "677 ";	
	}
	ChainLink_c testR678Inst = ChainLink_c.getOneACT_LNKOnR678(this, false);

	if ( testR678Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "678 ";	
	}
	ClassInstanceParticipant_c testR934Inst = ClassInstanceParticipant_c.getOneSQ_CIPOnR934(this, false);

	if ( testR934Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "934 ";	
	}
	ClassParticipant_c testR939Inst = ClassParticipant_c.getOneSQ_CPOnR939(this, false);

	if ( testR939Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "939 ";	
	}
	Create_c testR671Inst = Create_c.getOneACT_CROnR671(this, false);

	if ( testR671Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "671 ";	
	}
	CreateNoVariable_c testR672Inst = CreateNoVariable_c.getOneACT_CNVOnR672(this, false);

	if ( testR672Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "672 ";	
	}
	Subsystem_c testR2Inst = Subsystem_c.getOneS_SSOnR2(this, false);

	if ( testR2Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "2 ";
	}
	SmToObjAccessPath_c testR417Inst = SmToObjAccessPath_c.getOneCA_SMOAOnR417(this, false);

	if ( testR417Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "417 ";	
	}
	ForStmt_c testR670Inst = ForStmt_c.getOneACT_FOROnR670(this, false);

	if ( testR670Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "670 ";	
	}
 	ClassInAssociation_c testR201Inst = ClassInAssociation_c.getOneR_OIROnR201(this, false);

 	if ( testR201Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "201 ";
 	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Model Class", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("ss_id")){
         return true;
      }
      if(attributeName.equals("obj_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getObj_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getObj_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public int getNumb()
  {
    return m_numb ;
  }


  public void setNumb(int newValue)
  {
    if(m_numb == newValue){
        return;
    }
    AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Numb", new Integer(m_numb), new Integer(newValue),true);

   m_numb = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getKey_lett()
  {
    return m_key_lett ;
  }


  public void setKey_lett(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_key_lett)){
	        return;
	    }
	}else if(m_key_lett != null){
	    if(m_key_lett.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Key_lett", m_key_lett, newValue,true); 
   m_key_lett = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSs_idLongBased()
  {
    if ( IsContainedInSubsystem != null )
    {
      return IsContainedInSubsystem.getSs_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSs_id()
  {
    if ( IsContainedInSubsystem != null )
    {
      return IsContainedInSubsystem.getSs_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSs_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ss_id) )
      return m_ss_id;
    else
      return getSs_id();
  }
  
  public void setSs_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ss_id)){
	        return;
	    }
	}else if(m_ss_id != null){
	    if(m_ss_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ss_id", m_ss_id, newValue,true); 
   m_ss_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getObj_idLongBased()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getObj_id()
  {
    if ( IsSupertypePackageableElement != null )
    {
      return IsSupertypePackageableElement.getElement_id();
    }
    return m_obj_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypePackageableElement != null );
 
 }                  

  public java.util.UUID getObj_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_obj_id) )
      return m_obj_id;
    else
      return getObj_id();
  }
  
  public void setObj_id(java.util.UUID newValue)
  {
   m_obj_id = IdAssigner.preprocessUUID(newValue);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Model Class", //$NON-NLS-1$
	  " Operation entered: Model Class::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     ModelClass_c [] objs = ModelClass_c.ModelClassInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Model Class", //$NON-NLS-1$
	  " Operation entered: Model Class::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class ModelClass_c_test38678_c implements ClassQueryInterface_c
    {
	  ModelClass_c_test38678_c( java.util.UUID            p38679 ) {
	  m_p38679 = p38679;
	  }
	  private java.util.UUID             m_p38679; 
	  public boolean evaluate (Object candidate)
	  {
	      ModelClass_c selected = (ModelClass_c) candidate;
	      boolean retval = false;
	      retval = (selected.getObj_id().equals(m_p38679));
	      return retval;
	  }
    }

    ModelClass_c [] objs38677 = 
    ModelClass_c.ModelClassInstances(modelRoot, new ModelClass_c_test38678_c(getObj_id())) ;

    if ( (  (objs38677.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Model Class", //$NON-NLS-1$
           "Consistency: Object: Model Class: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38677.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Model Class: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38677.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs38677.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Model Class", //$NON-NLS-1$
           "Consistency: Object: Model Class: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38677.length )  + " Obj_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Model Class: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38677.length )  + " Obj_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Model Class is a referring class in association: rel.Numb = 2
          // The participating class is: Subsystem
    class Subsystem_c_test38683_c implements ClassQueryInterface_c
    {
	  Subsystem_c_test38683_c( java.util.UUID            p38684 ) {
	  m_p38684 = p38684;
	  }
	  private java.util.UUID             m_p38684; 
	  public boolean evaluate (Object candidate)
	  {
	      Subsystem_c selected = (Subsystem_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSs_id().equals(m_p38684));
	      return retval;
	  }
    }

    Subsystem_c [] objs38682 = 
    Subsystem_c.SubsystemInstances(modelRoot, new Subsystem_c_test38683_c(getSs_id())) ;

    if ( (  (objs38682.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Model Class", //$NON-NLS-1$
           "Consistency: Object: Model Class: Association: 2: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38682.length )  + " SS_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Model Class: Association: 2: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38682.length )  + " SS_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Model Class is a subtype in association: rel.Numb = 8001
          // The supertype class is: Packageable Element
         //    Note: The consistency test for this supertype has been removed 
         //          until generic package _migration_ is complete.
          // Model Class is a participating class in association: rel.Numb = 819
             // Object: Instance Set
          // Model Class is a participating class in association: rel.Numb = 818
             // Object: Instance Handle
          // Model Class is a participating class in association: rel.Numb = 115
             // Object: Operation
          // Model Class is a participating class in association: rel.Numb = 102
             // Object: Attribute
          // Model Class is a participating class in association: rel.Numb = 104
             // Object: Class Identifier
          // Model Class is a participating class in association: rel.Numb = 101
             // Object: Imported Class
          // Model Class is a participating class in association: rel.Numb = 123
             // Object: Instance Reference Data Type
          // Model Class is a participating class in association: rel.Numb = 518
             // Object: Instance State Machine
    class InstanceStateMachine_c_test38689_c implements ClassQueryInterface_c
    {
	  InstanceStateMachine_c_test38689_c( java.util.UUID            p38690 ) {
	  m_p38690 = p38690;
	  }
	  private java.util.UUID             m_p38690; 
	  public boolean evaluate (Object candidate)
	  {
	      InstanceStateMachine_c selected = (InstanceStateMachine_c) candidate;
	      boolean retval = false;
	      retval = (selected.getObj_id().equals(m_p38690));
	      return retval;
	  }
    }

    InstanceStateMachine_c [] objs38688 = 
    InstanceStateMachine_c.InstanceStateMachineInstances(modelRoot, new InstanceStateMachine_c_test38689_c(getObj_id())) ;

    if ( (  (objs38688.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Model Class", //$NON-NLS-1$
           "Consistency: Object: Model Class: Association: 518: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38688.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Model Class: Association: 518: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38688.length )  , e); 
      }
      retval = false;

    }

          // Model Class is a participating class in association: rel.Numb = 519
             // Object: Class State Machine
    class ClassStateMachine_c_test38692_c implements ClassQueryInterface_c
    {
	  ClassStateMachine_c_test38692_c( java.util.UUID            p38693 ) {
	  m_p38693 = p38693;
	  }
	  private java.util.UUID             m_p38693; 
	  public boolean evaluate (Object candidate)
	  {
	      ClassStateMachine_c selected = (ClassStateMachine_c) candidate;
	      boolean retval = false;
	      retval = (selected.getObj_id().equals(m_p38693));
	      return retval;
	  }
    }

    ClassStateMachine_c [] objs38691 = 
    ClassStateMachine_c.ClassStateMachineInstances(modelRoot, new ClassStateMachine_c_test38692_c(getObj_id())) ;

    if ( (  (objs38691.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Model Class", //$NON-NLS-1$
           "Consistency: Object: Model Class: Association: 519: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38691.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Model Class: Association: 519: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38691.length )  , e); 
      }
      retval = false;

    }

          // Model Class is a participating class in association: rel.Numb = 676
             // Object: Select From Instances Where
          // Model Class is a participating class in association: rel.Numb = 677
             // Object: Select From Instances
          // Model Class is a participating class in association: rel.Numb = 678
             // Object: Chain Link
          // Model Class is a participating class in association: rel.Numb = 934
             // Object: Class Instance Participant
          // Model Class is a participating class in association: rel.Numb = 939
             // Object: Class Participant
          // Model Class is a participating class in association: rel.Numb = 671
             // Object: Create
          // Model Class is a participating class in association: rel.Numb = 672
             // Object: Create No Variable
          // Model Class is a participating class in association: rel.Numb = 417
             // Object: SM to OBJ Access Path
          // Model Class is a participating class in association: rel.Numb = 670
             // Object: For Stmt
          // Associated Other Side: rel.Numb = 201
            // Link Object: Class In Association
    return retval;
  }


  // declare transform functions
  public  int          Get_compartments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Get_compartments") ; 
               final ModelRoot modelRoot = getModelRoot();
return 3;



   } // End get_compartments
  public  int          Get_entries(final int          p_Comp_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Get_entries") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Comp_num == 1) )
{

return 2;



}

if ( (p_Comp_num == 2) )
{

Attribute_c [] v_attrs = Attribute_c.getManyO_ATTRsOnR102(this);


return   (v_attrs.length);



}

if ( (p_Comp_num == 3) )
{

Operation_c [] v_tfrs = Operation_c.getManyO_TFRsOnR115(this);


return   (v_tfrs.length);



}

return 0;



   } // End get_entries
  public  int  Get_style()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.Box;



   } // End get_style
  public  String       Get_compartment_text(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Get_compartment_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


if ( (p_Comp_num == 1) )
{

if ( (p_Ent_num == 1) )
{

if ( (p_At == Justification_c.Center_in_X) )
{

v_result = getName() ;


PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


if (   (v_pe != null) )
{

v_result = v_pe.Getvisibilityadornment() + v_result ;



}


}


}

else if ( (p_Ent_num == 2) )
{

if ( (p_At == Justification_c.Right) )
{

v_result = "{" + Gd_c.Int_to_string(			    
getNumb()) + "," + getKey_lett() + "}" ;



}


}


}

else if ( (p_Comp_num == 2) )
{

  class Attribute_test37494_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Attribute_c selected = (Attribute_c)candidate;
		return (selected.getPattr_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
Attribute_c v_attr = Attribute_c.getOneO_ATTROnR102(this, new Attribute_test37494_c());


if ( (p_At != Justification_c.Center) )
{

int          v_cursor = p_Ent_num ;


while ( (  (v_attr != null) && v_cursor > 1) )
{

v_attr = Attribute_c.getOneO_ATTROnR103Precedes(v_attr);


v_cursor = v_cursor - 1 ;



}

if ( (  (v_attr == null)) )
{

return "";



}


}

if ( (p_At == Justification_c.Left) )
{

DataType_c v_dt = DataType_c.getOneS_DTOnR114(v_attr);


ReferentialAttribute_c v_rattr = ReferentialAttribute_c.getOneO_RATTROnR106(v_attr);


if ( (  (v_rattr != null)) )
{

v_dt = DataType_c.getOneS_DTOnR114(Attribute_c.getOneO_ATTROnR106(BaseAttribute_c.getOneO_BATTROnR113(v_rattr)));



}

v_result = v_attr.getName() ;


v_result = v_result + v_attr.getDimensions() ;


v_result = v_result + ":" ;


if ( (  (v_dt != null)) )
{

v_result = v_result + v_dt.getName() ;



}

else
{

v_result = v_result + Ooaofooa.Getorphanedelementname(modelRoot) ;



}


}

else if ( (p_At == Justification_c.Right) )
{

String       v_tag_sep = "" ;


int          v_id_num_loop = 0 ;


ClassIdentifier_c [] v_ids = ClassIdentifier_c.getManyO_IDsOnR105(v_attr);


while ( (v_id_num_loop < 3) )
{

ClassIdentifier_c  v_id = null;
for ( int i37079 = 0; i37079 < v_ids.length; i37079++)
{
  v_id = v_ids[i37079] ;

if ( (v_id.getOid_id() == v_id_num_loop) )
{

v_result = v_result + v_tag_sep + "I" ;


if ( (v_id.getOid_id() > 0) )
{

int          v_idnum = v_id.getOid_id() + 1 ;


v_result = v_result + Gd_c.Int_to_string(			    
v_idnum) ;



}

v_tag_sep = "," ;



}


}

v_id_num_loop = v_id_num_loop + 1 ;



}

AttributeReferenceInClass_c [] v_refs = AttributeReferenceInClass_c.getManyO_REFsOnR108(ReferentialAttribute_c.getManyO_RATTRsOnR106(v_attr));


if ( (  (v_refs.length != 0)) )
{

  class AttributeReferenceInClass_test37495_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		AttributeReferenceInClass_c selected = (AttributeReferenceInClass_c)candidate;
		return (selected.getParef_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
AttributeReferenceInClass_c v_ref = AttributeReferenceInClass_c.getOneO_REFOnR108(ReferentialAttribute_c.getManyO_RATTRsOnR106(v_attr), new AttributeReferenceInClass_test37495_c());


while ( (  (v_ref != null)) )
{

v_result = v_result + v_tag_sep + v_ref.Get_text(			    
false) ;


v_tag_sep = "," ;


v_ref = AttributeReferenceInClass_c.getOneO_REFOnR112Precedes(v_ref);



}


}

DerivedBaseAttribute_c v_derived_attr = DerivedBaseAttribute_c.getOneO_DBATTROnR107(BaseAttribute_c.getOneO_BATTROnR106(v_attr));


if ( (  (v_derived_attr != null)) )
{

v_result = v_result + v_tag_sep + "M" ;


v_tag_sep = "," ;



}

if ( (! v_result.equals("")) )
{

v_result = "{" + v_result + "}" ;



}


}


}

else if ( (p_Comp_num == 3) )
{

if ( (p_At == Justification_c.Left) )
{

int          v_cursor = 1 ;


  class Operation_test37496_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Operation_c selected = (Operation_c)candidate;
		return (selected.getPrevious_tfr_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
Operation_c v_op = Operation_c.getOneO_TFROnR115(this, new Operation_test37496_c());


String       v_line_separator = "" ;


while ( (  (v_op != null)) )
{

if ( (v_cursor == p_Ent_num) )
{

v_result = v_result + v_line_separator ;


v_result = v_result + v_op.getName() + "(" ;


  class OperationParameter_test37497_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		OperationParameter_c selected = (OperationParameter_c)candidate;
		return (selected.getPrevious_tparm_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
OperationParameter_c v_parm = OperationParameter_c.getOneO_TPARMOnR117(v_op, new OperationParameter_test37497_c());


String       v_parm_separator = "" ;


while ( (  (v_parm != null)) )
{

v_result = v_result + v_parm_separator ;


v_result = v_result + v_parm.getName() ;


v_result = v_result + v_parm.getDimensions() ;


v_result = v_result + ":" ;


DataType_c v_dt = DataType_c.getOneS_DTOnR118(v_parm);


if ( (  (v_dt != null)) )
{

v_result = v_result + v_dt.getName() ;



}

else
{

v_result = v_result + Ooaofooa.Getorphanedelementname(modelRoot) ;



}

v_parm_separator = ", " ;


v_parm = OperationParameter_c.getOneO_TPARMOnR124Precedes(v_parm);



}

v_result = v_result + ")" ;


v_result = v_result + v_op.getReturn_dimensions() ;


v_result = v_result + ":" ;


DataType_c v_dt = DataType_c.getOneS_DTOnR116(v_op);


if ( (  (v_dt != null)) )
{

v_result = v_result + v_dt.getName() ;



}

else
{

v_result = v_result + Ooaofooa.Getorphanedelementname(modelRoot) ;



}


}

v_cursor = v_cursor + 1 ;


v_op = Operation_c.getOneO_TFROnR125Precedes(v_op);



}


}


}

return v_result;



   } // End get_compartment_text
  public  int  Get_text_style(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Get_text_style") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Comp_num == 3) )
{

if ( (p_At == Justification_c.Left) )
{

int          v_cursor = 1 ;


Operation_c [] v_ops = Operation_c.getManyO_TFRsOnR115(this);


Operation_c  v_op = null;
for ( int i37080 = 0; i37080 < v_ops.length; i37080++)
{
  v_op = v_ops[i37080] ;

if ( (v_cursor == p_Ent_num) )
{

if ( (v_op.getInstance_based() == Scope_c.Instance) )
{

return Style_c.None;



}

else
{

return Style_c.Underlined;



}


}

v_cursor = v_cursor + 1 ;



}


}


}

return Style_c.None;



   } // End get_text_style
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getObj_id();



   } // End get_ooa_id
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_name = Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Class"			    
,Converttoinstance()) ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setName( v_success) ;



}

else
{

Dispose() ;



}

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


ModelClass_c [] v_classes = ModelClass_c.getManyO_OBJsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(v_package));


if ( (v_isInGenericPackage) )
{

if ( (  (v_package != null)) )
{

v_classes = ModelClass_c.getManyO_OBJsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(v_package));


if ( (v_package.getNum_rng() == 0) )
{

setNumb( 1) ;



}

else
{

setNumb( v_package.getNum_rng()) ;



}


}

else
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_rootComponent));


if ( (v_package.getNum_rng() == 0) )
{

setNumb( 1) ;



}

else
{

setNumb( v_package.getNum_rng()) ;



}


}


}

else
{

Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR2(this);


v_classes = ModelClass_c.getManyO_OBJsOnR2(v_ss);


if (   (v_ss != null) )
{

if ( (v_ss.getNum_rng() == 0) )
{

setNumb( 1) ;



}

else
{

setNumb( v_ss.getNum_rng()) ;



}

if ( (! v_ss.getPrefix().equals("")) )
{

setKey_lett( v_ss.getPrefix() + "_") ;



}


}


}

ModelClass_c  v_clazz = null;
for ( int i37081 = 0; i37081 < v_classes.length; i37081++)
{
  v_clazz = v_classes[i37081] ;

if ( (v_clazz.getObj_id().equals(getObj_id())) )
{

continue;



}

if ( (v_clazz.getNumb() >= getNumb()) )
{

setNumb( v_clazz.getNumb() + 1) ;



}


}

setKey_lett( Os_c.Remove_spaces(			    
v_name)) ;


Addidentifiers() ;



   } // End initialize
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
Association_c [] v_assocs = Association_c.getManyR_RELsOnR201(this);


Association_c  v_assoc = null;
for ( int i37082 = 0; i37082 < v_assocs.length; i37082++)
{
  v_assoc = v_assocs[i37082] ;

if ( (Isessentialtoassoc(			    
v_assoc.getRel_id())) )
{

if (v_assoc != null) {
v_assoc.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}

ClassInAssociation_c [] v_oirs = ClassInAssociation_c.getManyR_OIRsOnR201(this);


ClassInAssociation_c  v_oir = null;
for ( int i37083 = 0; i37083 < v_oirs.length; i37083++)
{
  v_oir = v_oirs[i37083] ;

if (v_oir != null) {
v_oir.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ImportedClass_c [] v_iobjs = ImportedClass_c.getManyO_IOBJsOnR101(this);


ImportedClass_c  v_iobj = null;
for ( int i37084 = 0; i37084 < v_iobjs.length; i37084++)
{
  v_iobj = v_iobjs[i37084] ;

if (v_iobj != null) {
v_iobj.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ClassIdentifier_c [] v_oids = ClassIdentifier_c.getManyO_IDsOnR104(this);


ClassIdentifier_c  v_oid = null;
for ( int i37085 = 0; i37085 < v_oids.length; i37085++)
{
  v_oid = v_oids[i37085] ;

if (v_oid != null) {
v_oid.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Attribute_c [] v_attrs = Attribute_c.getManyO_ATTRsOnR102(this);


Attribute_c  v_attr = null;
for ( int i37086 = 0; i37086 < v_attrs.length; i37086++)
{
  v_attr = v_attrs[i37086] ;

if (v_attr != null) {
v_attr.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Operation_c [] v_tfrs = Operation_c.getManyO_TFRsOnR115(this);


Operation_c  v_tfr = null;
for ( int i37087 = 0; i37087 < v_tfrs.length; i37087++)
{
  v_tfr = v_tfrs[i37087] ;

if (v_tfr != null) {
v_tfr.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR2(this);


if ( (  (v_ss != null)) )
{

this.unrelateAcrossR2From(v_ss);



}

InstanceReferenceDataType_c [] v_irdts = InstanceReferenceDataType_c.getManyS_IRDTsOnR123(this);


InstanceReferenceDataType_c  v_irdt = null;
for ( int i37088 = 0; i37088 < v_irdts.length; i37088++)
{
  v_irdt = v_irdts[i37088] ;

this.unrelateAcrossR123From(v_irdt);


DataType_c v_dt = DataType_c.getOneS_DTOnR17(v_irdt);


if (v_dt != null) {
v_dt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

InstanceStateMachine_c v_ism = InstanceStateMachine_c.getOneSM_ISMOnR518(this);


if ( (  (v_ism != null)) )
{

StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR517(v_ism);


if (v_sm != null) {
v_sm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


this.unrelateAcrossR518From(v_ism);



}

ClassStateMachine_c v_asm = ClassStateMachine_c.getOneSM_ASMOnR519(this);


if ( (  (v_asm != null)) )
{

StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR517(v_asm);


if (v_sm != null) {
v_sm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


this.unrelateAcrossR519From(v_asm);



}

AccessPath_c [] v_accpaths = AccessPath_c.getManyCA_ACCsOnR415(SmToObjAccessPath_c.getManyCA_SMOAsOnR417(this));


AccessPath_c  v_accpath = null;
for ( int i37089 = 0; i37089 < v_accpaths.length; i37089++)
{
  v_accpath = v_accpaths[i37089] ;

if (v_accpath != null) {
v_accpath.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ForStmt_c [] v_forstmts = ForStmt_c.getManyACT_FORsOnR670(this);


ForStmt_c  v_forstmt = null;
for ( int i37090 = 0; i37090 < v_forstmts.length; i37090++)
{
  v_forstmt = v_forstmts[i37090] ;

this.unrelateAcrossR670From(v_forstmt);



}

Create_c [] v_crs = Create_c.getManyACT_CRsOnR671(this);


Create_c  v_cr = null;
for ( int i37091 = 0; i37091 < v_crs.length; i37091++)
{
  v_cr = v_crs[i37091] ;

this.unrelateAcrossR671From(v_cr);



}

CreateNoVariable_c [] v_cnvs = CreateNoVariable_c.getManyACT_CNVsOnR672(this);


CreateNoVariable_c  v_cnv = null;
for ( int i37092 = 0; i37092 < v_cnvs.length; i37092++)
{
  v_cnv = v_cnvs[i37092] ;

this.unrelateAcrossR672From(v_cnv);



}

SelectFromInstancesWhere_c [] v_selws = SelectFromInstancesWhere_c.getManyACT_FIWsOnR676(this);


SelectFromInstancesWhere_c  v_selw = null;
for ( int i37093 = 0; i37093 < v_selws.length; i37093++)
{
  v_selw = v_selws[i37093] ;

this.unrelateAcrossR676From(v_selw);



}

SelectFromInstances_c [] v_sfms = SelectFromInstances_c.getManyACT_FIOsOnR677(this);


SelectFromInstances_c  v_sfm = null;
for ( int i37094 = 0; i37094 < v_sfms.length; i37094++)
{
  v_sfm = v_sfms[i37094] ;

this.unrelateAcrossR677From(v_sfm);



}

ChainLink_c [] v_links = ChainLink_c.getManyACT_LNKsOnR678(this);


ChainLink_c  v_link = null;
for ( int i37095 = 0; i37095 < v_links.length; i37095++)
{
  v_link = v_links[i37095] ;

this.unrelateAcrossR678From(v_link);



}

InstanceHandle_c [] v_vinsts = InstanceHandle_c.getManyV_INTsOnR818(this);


InstanceHandle_c  v_vinst = null;
for ( int i37096 = 0; i37096 < v_vinsts.length; i37096++)
{
  v_vinst = v_vinsts[i37096] ;

this.unrelateAcrossR818From(v_vinst);



}

InstanceSet_c [] v_vinsets = InstanceSet_c.getManyV_INSsOnR819(this);


InstanceSet_c  v_vinset = null;
for ( int i37097 = 0; i37097 < v_vinsets.length; i37097++)
{
  v_vinset = v_vinsets[i37097] ;

this.unrelateAcrossR819From(v_vinset);



}

ClassParticipant_c [] v_cps = ClassParticipant_c.getManySQ_CPsOnR939(this);


ClassParticipant_c  v_cp = null;
for ( int i37098 = 0; i37098 < v_cps.length; i37098++)
{
  v_cp = v_cps[i37098] ;

if (v_cp != null) {
v_cp.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ClassInstanceParticipant_c [] v_cips = ClassInstanceParticipant_c.getManySQ_CIPsOnR934(this);


ClassInstanceParticipant_c  v_cip = null;
for ( int i37099 = 0; i37099 < v_cips.length; i37099++)
{
  v_cip = v_cips[i37099] ;

if (v_cip != null) {
v_cip.Unformalize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


if ( (  (v_pe != null)) )
{

this.unrelateAcrossR8001From(v_pe);


if (v_pe != null) {
v_pe.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  boolean      Create_sm(final String       p_Sm_type)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Create_sm") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Sm_type.equals("ISM")) )
{

InstanceStateMachine_c v_ism = InstanceStateMachine_c.getOneSM_ISMOnR518(this);


if ( (  (v_ism != null)) )
{

return false;



}

else
{

v_ism = new InstanceStateMachine_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ism));


  this.relateAcrossR518To(v_ism);


StateMachine_c v_sm = new StateMachine_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sm));


if (v_ism != null) {
  v_ism.relateAcrossR517To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


MooreStateMachine_c v_moore = new MooreStateMachine_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_moore));


if (v_sm != null) {
  v_sm.relateAcrossR510To(v_moore);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


java.util.UUID         v_newAttr_id = Newattribute() ;


  class Attribute_test37498_c implements ClassQueryInterface_c
  {
	Attribute_test37498_c( java.util.UUID         p37499 ) {
		m_p37499 = p37499;
	}
	private java.util.UUID         m_p37499;
	public boolean evaluate (Object candidate)
	{
		Attribute_c selected = (Attribute_c)candidate;
		return selected.getAttr_id().equals(m_p37499) ;
	}
  }
Attribute_c v_attr = Attribute_c.getOneO_ATTROnR102(this, new Attribute_test37498_c(v_newAttr_id));


if (v_attr != null) {
  v_attr.setRoot_nam( "current_state") ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Domain_c v_dom = Domain_c.DomainInstance(modelRoot) ;


  class DataType_test37500_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals("state<State_Model>") ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_dom, new DataType_test37500_c());


if ( (  (v_dt == null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this)));


if ( (  (v_dom != null) && v_dom.Participatesinsystem()) )
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_dom))));



}

java.util.UUID         v_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_dt_id = v_system.Getcoretypeid(			    
"state<State_Model>") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_dt_id);


v_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

if ( (  (v_dt != null)) )
{

DataType_c v_oldDT = DataType_c.getOneS_DTOnR114(v_attr);


if (v_attr != null) {
v_attr.unrelateAcrossR114From(v_oldDT);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_attr != null) {
  v_attr.relateAcrossR114To(v_dt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

User_c.Logerror(			    
"Unable to locate expected data type: state<State_Model>"			    
,Getpath(			    
true			    
,getName()) ) ;



}


}


}

else if ( (p_Sm_type.equals("ASM")) )
{

ClassStateMachine_c v_asm = ClassStateMachine_c.getOneSM_ASMOnR519(this);


if ( (  (v_asm != null)) )
{

return false;



}

else
{

v_asm = new ClassStateMachine_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_asm));


  this.relateAcrossR519To(v_asm);


StateMachine_c v_sm = new StateMachine_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sm));


if (v_asm != null) {
  v_asm.relateAcrossR517To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


MooreStateMachine_c v_moore = new MooreStateMachine_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_moore));


if (v_sm != null) {
  v_sm.relateAcrossR510To(v_moore);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

return false;



}

return true;



   } // End create_sm
  public  java.util.UUID         Newattribute()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Newattribute") ; 
               final ModelRoot modelRoot = getModelRoot();
Attribute_c v_newAttr = new Attribute_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_newAttr));


Addattributetoordering(			    
v_newAttr.getAttr_id() ) ;


ClassInstanceParticipant_c [] v_cips = ClassInstanceParticipant_c.getManySQ_CIPsOnR934(this);


ClassInstanceParticipant_c  v_cip = null;
for ( int i37100 = 0; i37100 < v_cips.length; i37100++)
{
  v_cip = v_cips[i37100] ;

InstanceAttributeValue_c v_attrValue = new InstanceAttributeValue_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_attrValue));


FormalAttributeValue_c v_fav = new FormalAttributeValue_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fav));


if (v_attrValue != null) {
  v_attrValue.relateAcrossR937To(v_cip);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_attrValue != null) {
  v_attrValue.relateAcrossR938To(v_newAttr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_fav != null) {
  v_fav.relateAcrossR948To(v_attrValue);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

  this.relateAcrossR102To(v_newAttr);


if (v_newAttr != null) {
v_newAttr.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


return v_newAttr.getAttr_id();



   } // End newAttribute
  public  void Newoperation()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Newoperation") ; 
               final ModelRoot modelRoot = getModelRoot();
Operation_c v_operation = new Operation_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_operation));


  this.relateAcrossR115To(v_operation);


if (v_operation != null) {
v_operation.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newOperation
  public  boolean      Isessentialtoassoc(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Isessentialtoassoc") ; 
               final ModelRoot modelRoot = getModelRoot();
boolean      v_retval = true ;


  class ClassInAssociation_test37501_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ClassInAssociation_c selected = (ClassInAssociation_c)candidate;
		return (selected.getRel_id().equals(p_Id)) ;
	}
  }
ClassInAssociation_c [] v_oir_set = ClassInAssociation_c.getManyR_OIRsOnR201(this, new ClassInAssociation_test37501_c());


ClassInAssociation_c  v_oir = null;
for ( int i37101 = 0; i37101 < v_oir_set.length; i37101++)
{
  v_oir = v_oir_set[i37101] ;

ReferringClassInAssoc_c v_rgo = ReferringClassInAssoc_c.getOneR_RGOOnR203(v_oir);


ClassAsSubtype_c v_sub = ClassAsSubtype_c.getOneR_SUBOnR205(v_rgo);


if ( (  (v_sub != null)) )
{

v_retval = false ;


break;



}

ClassAsLink_c v_link = ClassAsLink_c.getOneR_ASSROnR205(v_rgo);


if ( (  (v_link != null)) )
{

v_retval = false ;


break;



}


}

return v_retval;



   } // End isEssentialToAssoc
  public  void Addidentifiers()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Addidentifiers") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ClassIdentifier_test37502_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ClassIdentifier_c selected = (ClassIdentifier_c)candidate;
		return (selected.getOid_id() == 0) ;
	}
  }
ClassIdentifier_c v_oid1 = ClassIdentifier_c.getOneO_IDOnR104(this, new ClassIdentifier_test37502_c());


if ( (  (v_oid1 == null)) )
{

v_oid1 = new ClassIdentifier_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_oid1));


if (v_oid1 != null) {
  v_oid1.setOid_id( 0) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_oid1 != null) {
  v_oid1.relateAcrossR104To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

  class ClassIdentifier_test37503_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ClassIdentifier_c selected = (ClassIdentifier_c)candidate;
		return (selected.getOid_id() == 1) ;
	}
  }
ClassIdentifier_c v_oid2 = ClassIdentifier_c.getOneO_IDOnR104(this, new ClassIdentifier_test37503_c());


if ( (  (v_oid2 == null)) )
{

v_oid2 = new ClassIdentifier_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_oid2));


if (v_oid2 != null) {
  v_oid2.setOid_id( 1) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_oid2 != null) {
  v_oid2.relateAcrossR104To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

  class ClassIdentifier_test37504_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ClassIdentifier_c selected = (ClassIdentifier_c)candidate;
		return (selected.getOid_id() == 2) ;
	}
  }
ClassIdentifier_c v_oid3 = ClassIdentifier_c.getOneO_IDOnR104(this, new ClassIdentifier_test37504_c());


if ( (  (v_oid3 == null)) )
{

v_oid3 = new ClassIdentifier_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_oid3));


if (v_oid3 != null) {
  v_oid3.setOid_id( 2) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_oid3 != null) {
  v_oid3.relateAcrossR104To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End addIdentifiers
  public  int          Findunusedidentifier()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Findunusedidentifier") ; 
               final ModelRoot modelRoot = getModelRoot();
ClassIdentifier_c [] v_oid_set = ClassIdentifier_c.getManyO_IDsOnR104(this);


ClassIdentifier_c  v_oid = null;
for ( int i37102 = 0; i37102 < v_oid_set.length; i37102++)
{
  v_oid = v_oid_set[i37102] ;

ClassIdentifierAttribute_c v_oida = ClassIdentifierAttribute_c.getOneO_OIDAOnR105(v_oid);


if ( (  (v_oida == null)) )
{

return v_oid.getOid_id();



}


}

return -1;



   } // End findUnusedIdentifier
  public  java.util.UUID         Newreferentialattribute(final int          p_Id,final java.util.UUID         p_Ref_attr_id,final java.util.UUID         p_Ref_obj_id,final int          p_Ref_oid_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Newreferentialattribute") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ModelClass_test37505_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelClass_c selected = (ModelClass_c)candidate;
		return selected.getObj_id().equals(p_Ref_obj_id) ;
	}
  }
ModelClass_c v_ref_obj = ModelClass_c.getOneO_OBJOnR2(Subsystem_c.getManyS_SSsOnR1(Domain_c.getManyS_DOMsOnR1(Subsystem_c.getManyS_SSsOnR2(this))), new ModelClass_test37505_c());


if ( (  (v_ref_obj == null)) )
{

  class ModelClass_test37506_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ModelClass_c selected = (ModelClass_c)candidate;
		return selected.getObj_id().equals(p_Ref_obj_id) ;
	}
  }
v_ref_obj = ModelClass_c.getOneO_OBJOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(Package_c.getManyEP_PKGsOnR1405(SystemModel_c.getManyS_SYSsOnR1405(Package_c.getManyEP_PKGsOnR8000(PackageableElement_c.getManyPE_PEsOnR8001(this))))), new ModelClass_test37506_c());



}

  class ClassIdentifier_test37507_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ClassIdentifier_c selected = (ClassIdentifier_c)candidate;
		return selected.getOid_id() == p_Ref_oid_id ;
	}
  }
ClassIdentifier_c v_ref_oid = ClassIdentifier_c.getOneO_IDOnR104(v_ref_obj, new ClassIdentifier_test37507_c());


  class ClassIdentifierAttribute_test37508_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ClassIdentifierAttribute_c selected = (ClassIdentifierAttribute_c)candidate;
		return selected.getAttr_id().equals(p_Ref_attr_id) ;
	}
  }
ClassIdentifierAttribute_c v_ref_oida = ClassIdentifierAttribute_c.getOneO_OIDAOnR105(v_ref_oid, new ClassIdentifierAttribute_test37508_c());


Attribute_c v_id_attr = Attribute_c.getOneO_ATTROnR105(v_ref_oida);


BaseAttribute_c v_base_attr = BaseAttribute_c.getOneO_BATTROnR106(v_id_attr);


if ( (  (v_base_attr == null)) )
{

v_base_attr = BaseAttribute_c.getOneO_BATTROnR113(ReferentialAttribute_c.getOneO_RATTROnR106(v_id_attr));



}

java.util.UUID         v_newAttr_id = Newattribute() ;


  class Attribute_test37509_c implements ClassQueryInterface_c
  {
	Attribute_test37509_c( java.util.UUID         p37510 ) {
		m_p37510 = p37510;
	}
	private java.util.UUID         m_p37510;
	public boolean evaluate (Object candidate)
	{
		Attribute_c selected = (Attribute_c)candidate;
		return selected.getAttr_id().equals(m_p37510) ;
	}
  }
Attribute_c v_attr = Attribute_c.getOneO_ATTROnR102(this, new Attribute_test37509_c(v_newAttr_id));


if (v_attr != null) {
v_attr.Migratebasetoreferential() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_attr != null) {
  v_attr.setRoot_nam( v_id_attr.getName()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


ReferentialAttribute_c v_ref_attr = ReferentialAttribute_c.getOneO_RATTROnR106(v_attr);


if (v_ref_attr != null) {
  v_ref_attr.relateAcrossR113To(v_base_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (p_Id != -1) )
{

  class ClassIdentifier_test37511_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ClassIdentifier_c selected = (ClassIdentifier_c)candidate;
		return selected.getOid_id() == p_Id ;
	}
  }
ClassIdentifier_c v_assr_id = ClassIdentifier_c.getOneO_IDOnR104(this, new ClassIdentifier_test37511_c());


ClassIdentifierAttribute_c v_assr_oida = new ClassIdentifierAttribute_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_assr_oida));


if (v_assr_oida != null) {
  v_assr_oida.relateAcrossR105To( v_attr ) ;   v_assr_oida.relateAcrossR105To( v_assr_id ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}

return v_newAttr_id;



   } // End newReferentialAttribute
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("can")) )
{

if ( (p_Value.equals("instanceStateChart")) )
{

InstanceStateMachine_c v_ism = InstanceStateMachine_c.getOneSM_ISMOnR518(this);


return   (v_ism == null);



}

else if ( (p_Value.equals("classStateChart")) )
{

ClassStateMachine_c v_asm = ClassStateMachine_c.getOneSM_ASMOnR519(this);


return   (v_asm == null);



}

else if ( (p_Value.equals("publishRefs")) )
{

String       v_prefEnableInstanceReferences = "bridgepoint_prefs_enable_instance_references" ;


if ( (Pref_c.Getboolean(			    
v_prefEnableInstanceReferences) == true) )
{

  class InstanceReferenceDataType_test37512_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InstanceReferenceDataType_c selected = (InstanceReferenceDataType_c)candidate;
		return selected.getIsset() == false ;
	}
  }
InstanceReferenceDataType_c v_ir = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, new InstanceReferenceDataType_test37512_c());


  class InstanceReferenceDataType_test37513_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InstanceReferenceDataType_c selected = (InstanceReferenceDataType_c)candidate;
		return selected.getIsset() == true ;
	}
  }
InstanceReferenceDataType_c v_irs = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, new InstanceReferenceDataType_test37513_c());


if ( ((  (v_ir == null)) || (  (v_irs == null))) )
{

return true;



}


}


}

else if ( p_Value.equals("make public") )
{

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(v_pe);


if (   (v_pkg != null) )
{

if (   (v_pe != null) )
{

return v_pe.getVisibility() != Visibility_c.Public;



}


}


}

else if ( p_Value.equals("make protected") )
{

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(v_pe);


if (   (v_pkg != null) )
{

if (   (v_pe != null) )
{

return v_pe.getVisibility() != Visibility_c.Protected;



}


}


}

else if ( p_Value.equals("make private") )
{

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(v_pe);


if (   (v_pkg != null) )
{

if (   (v_pe != null) )
{

return v_pe.getVisibility() != Visibility_c.Private;



}


}


}


}

return false;



   } // End actionFilter
  public  boolean      Issupertypeof(final java.util.UUID         p_Classid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Issupertypeof") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_givenClass = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, p_Classid);


ModelClass_c [] v_supertypes = ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferredToClassInAssoc_c.getManyR_RTOsOnR204(ClassAsSupertype_c.getManyR_SUPERsOnR212(SubtypeSupertypeAssociation_c.getManyR_SUBSUPsOnR213(ClassAsSubtype_c.getManyR_SUBsOnR205(ReferringClassInAssoc_c.getManyR_RGOsOnR203(ClassInAssociation_c.getManyR_OIRsOnR201(v_givenClass))))))));


ModelClass_c  v_supertype = null;
for ( int i37103 = 0; i37103 < v_supertypes.length; i37103++)
{
  v_supertype = v_supertypes[i37103] ;

if ( (v_supertype == this || Issupertypeof(			    
v_supertype.getObj_id())) )
{

return true;



}


}

return false;



   } // End isSupertypeOf
  public  String       Getpath(final boolean      p_Includeself,final String       p_Path)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Getpath") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_path = "" ;


if ( (p_Includeself) )
{

v_path = getName() ;



}

if ( (! p_Path.equals("")) )
{

v_path = v_path + "::" + p_Path ;



}

boolean      v_isInGenericPkg = false ;


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


if ( (  (v_pkg != null)) )
{

v_isInGenericPkg = true ;



}

if ( (v_isInGenericPkg) )
{

return v_pkg.Getpath(			    
v_path);



}

else
{

Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR2(this);


if ( (  (v_ss != null)) )
{

return v_ss.Getpath(			    
v_path);



}

else
{

return "";



}


}


   } // End getPath
  public  boolean      Eventisclassbased(final java.util.UUID         p_Classstatemachineid,final java.util.UUID         p_Eventid,final java.util.UUID         p_Instancestatemachineid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Eventisclassbased") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineEvent_test37354_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return selected.getSmevt_id().equals(p_Eventid) && (selected.getSm_id().equals(p_Instancestatemachineid) || selected.getSm_id().equals(p_Classstatemachineid)) ;
	}
  }
StateMachineEvent_c v_event = StateMachineEvent_c.StateMachineEventInstance(modelRoot, new StateMachineEvent_test37354_c()) ;


return v_event.Isclassbased();



   } // End eventIsClassBased
  public  int          Getnumcompartmenticonslots(final int          p_Compartmentnum)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Getnumcompartmenticonslots") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Compartmentnum == 1) )
{

return 2;



}

return 0;



   } // End getNumCompartmentIconSlots
  public  boolean      Shouldcompartmenticonbedrawn(final int          p_Compartmentnum,final int          p_Slotnum)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Shouldcompartmenticonbedrawn") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Compartmentnum == 1) )
{

if ( (p_Slotnum == 0) )
{

InstanceStateMachine_c v_machine = InstanceStateMachine_c.getOneSM_ISMOnR518(this);


return   (v_machine != null);



}

if ( (p_Slotnum == 1) )
{

ClassStateMachine_c v_machine = ClassStateMachine_c.getOneSM_ASMOnR519(this);


return   (v_machine != null);



}


}

return false;



   } // End shouldCompartmentIconBeDrawn
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  void Pasteattribute(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Pasteattribute") ; 
               final ModelRoot modelRoot = getModelRoot();
  class Attribute_test37355_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Attribute_c selected = (Attribute_c)candidate;
		return (selected.getAttr_id().equals(p_Id)) ;
	}
  }
Attribute_c v_attribute = Attribute_c.AttributeInstance(modelRoot, new Attribute_test37355_c()) ;


if ( (  (v_attribute != null)) )
{

boolean      v_result = Removeincompletereferential(			    
v_attribute.getAttr_id()) ;


if ( (  !v_result) )
{

ModelClass_c v_existingClass = ModelClass_c.getOneO_OBJOnR102(v_attribute);


if ( (  (v_existingClass != null)) )
{

if (v_existingClass != null) {
v_existingClass.unrelateAcrossR102From(v_attribute);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

Addattributetoordering(			    
v_attribute.getAttr_id() ) ;


  this.relateAcrossR102To(v_attribute);


if (v_attribute != null) {
  v_attribute.setRoot_nam( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_attribute.Converttoinstance()			    
,v_attribute.getRoot_nam()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


   } // End pasteAttribute
  public  void Removeincompletenonlocalevents()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Removeincompletenonlocalevents") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_asm = StateMachine_c.getOneSM_SMOnR517(ClassStateMachine_c.getOneSM_ASMOnR519(this));


if ( (  (v_asm != null)) )
{

if (v_asm != null) {
v_asm.Removeincompletenonlocalevents() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

StateMachine_c v_ism = StateMachine_c.getOneSM_SMOnR517(InstanceStateMachine_c.getOneSM_ISMOnR518(this));


if ( (  (v_ism != null)) )
{

if (v_ism != null) {
v_ism.Removeincompletenonlocalevents() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End removeIncompleteNonLocalEvents
  public  java.util.UUID         Findimportedsupertypeclass(final java.util.UUID         p_Supertypeclassid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Findimportedsupertypeclass") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_expectedSuper = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, p_Supertypeclassid);


if ( (  (v_expectedSuper == null)) )
{

  class ImportedClass_test37356_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ImportedClass_c selected = (ImportedClass_c)candidate;
		return selected.getObj_id().equals(p_Supertypeclassid) ;
	}
  }
ImportedClass_c v_expectedImportedSuper = ImportedClass_c.ImportedClassInstance(modelRoot, new ImportedClass_test37356_c()) ;


if ( (  (v_expectedImportedSuper != null)) )
{

v_expectedSuper = ModelClass_c.getOneO_OBJOnR101(v_expectedImportedSuper);



}


}

ClassInAssociation_c [] v_oirs = ClassInAssociation_c.getManyR_OIRsOnR203(ReferredToClassInAssoc_c.getManyR_RTOsOnR204(ClassAsSupertype_c.getManyR_SUPERsOnR212(SubtypeSupertypeAssociation_c.getManyR_SUBSUPsOnR213(ClassAsSubtype_c.getManyR_SUBsOnR205(ReferringClassInAssoc_c.getManyR_RGOsOnR203(ClassInAssociation_c.getManyR_OIRsOnR201(this)))))));


ClassInAssociation_c  v_oir = null;
for ( int i37104 = 0; i37104 < v_oirs.length; i37104++)
{
  v_oir = v_oirs[i37104] ;

ModelClass_c v_supertype = ModelClass_c.getOneO_OBJOnR201(v_oir);


if ( (v_supertype == v_expectedSuper) )
{

ImportedClass_c v_iobj = ImportedClass_c.getOneO_IOBJOnR202(v_oir);


if ( (  (v_iobj != null)) )
{

return v_iobj.getIobj_id();



}


}

else
{

java.util.UUID         v_id = v_supertype.Findimportedsupertypeclass(			    
p_Supertypeclassid) ;


if ( (! v_id.equals(Gd_c.Null_unique_id())) )
{

return v_id;



}


}


}

return Gd_c.Null_unique_id();



   } // End findImportedSupertypeClass
  public  void Disposelowernonlocalevents(final boolean      p_Disposeselfevents,final java.util.UUID         p_Originalid,final java.util.UUID         p_Originalsupertypeid,final java.util.UUID         p_Polyid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Disposelowernonlocalevents") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_originalClass = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, p_Originalid);


if ( (  (v_originalClass != null)) )
{

ModelClass_c v_supertypeClass = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, p_Originalsupertypeid);


if ( (this != v_originalClass || p_Disposeselfevents) )
{

StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR517(InstanceStateMachine_c.getOneSM_ISMOnR518(this));


if ( (  (v_machine != null)) )
{

NonLocalEvent_c [] v_nlevts = NonLocalEvent_c.getManySM_NLEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR502(v_machine)));


NonLocalEvent_c  v_nlevt = null;
for ( int i37105 = 0; i37105 < v_nlevts.length; i37105++)
{
  v_nlevt = v_nlevts[i37105] ;

PolymorphicEvent_c v_poly = PolymorphicEvent_c.getOneSM_PEVTOnR527(v_nlevt);


if (   (v_poly == null) )
{

StateMachineEvent_c v_evt = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR526(v_nlevt));


if (   !  (v_evt == null) )
{

if (v_evt != null) {
v_evt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Util_c.Logerror(			    
"An orphaned polymorphic event was found" + "and removed while deleting the owning class." ) ;



}

continue;



}

ModelClass_c v_polyClass = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR502(StateMachineEvent_c.getOneSM_EVTOnR525(v_poly))));


boolean      v_disposeEvent =   !v_polyClass.Issupertypeof(			    
getObj_id()) ;


if ( (! p_Polyid.equals(Gd_c.Null_unique_id())) )
{

if ( (v_polyClass.Issupertypeof(			    
v_originalClass.getObj_id())) )
{

StateMachineEvent_c v_polyEvt = (StateMachineEvent_c) modelRoot.getInstanceList(StateMachineEvent_c.class).getGlobal(null, p_Polyid);


if ( (  (v_polyEvt != null)) )
{

PolymorphicEvent_c v_pe = PolymorphicEvent_c.getOneSM_PEVTOnR525(v_polyEvt);


v_disposeEvent = v_poly == v_pe ;



}


}


}

if ( (v_disposeEvent) )
{

StateMachineEvent_c v_evt = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR526(v_nlevt));


if (v_evt != null) {
v_evt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_poly != null) {
v_poly.Migratetolocalevent() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


}

ModelClass_c [] v_subtypes = ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferringClassInAssoc_c.getManyR_RGOsOnR205(ClassAsSubtype_c.getManyR_SUBsOnR213(SubtypeSupertypeAssociation_c.getManyR_SUBSUPsOnR212(ClassAsSupertype_c.getManyR_SUPERsOnR204(ReferredToClassInAssoc_c.getManyR_RTOsOnR203(ClassInAssociation_c.getManyR_OIRsOnR201(this))))))));


ModelClass_c  v_subtype = null;
for ( int i37106 = 0; i37106 < v_subtypes.length; i37106++)
{
  v_subtype = v_subtypes[i37106] ;

if (v_subtype != null) {
v_subtype.Disposelowernonlocalevents(			    
p_Disposeselfevents			    
,p_Originalid			    
,p_Originalsupertypeid			    
,p_Polyid ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End disposeLowerNonLocalEvents
  public  void Removeinconsistentsubtypeignores()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Removeinconsistentsubtypeignores") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c [] v_subtypes = ModelClass_c.getManyO_OBJsOnR201(ClassInAssociation_c.getManyR_OIRsOnR203(ReferringClassInAssoc_c.getManyR_RGOsOnR205(ClassAsSubtype_c.getManyR_SUBsOnR213(SubtypeSupertypeAssociation_c.getManyR_SUBSUPsOnR212(ClassAsSupertype_c.getManyR_SUPERsOnR204(ReferredToClassInAssoc_c.getManyR_RTOsOnR203(ClassInAssociation_c.getManyR_OIRsOnR201(this))))))));


ModelClass_c  v_subtype = null;
for ( int i37107 = 0; i37107 < v_subtypes.length; i37107++)
{
  v_subtype = v_subtypes[i37107] ;

NonLocalEvent_c [] v_nlevts = NonLocalEvent_c.getManySM_NLEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR525(StateMachineEvent_c.getManySM_EVTsOnR502(StateMachine_c.getManySM_SMsOnR517(InstanceStateMachine_c.getManySM_ISMsOnR518(v_subtype)))));


NonLocalEvent_c  v_nlevt = null;
for ( int i37108 = 0; i37108 < v_nlevts.length; i37108++)
{
  v_nlevt = v_nlevts[i37108] ;

EventIgnored_c v_ignore = EventIgnored_c.getOneSM_EIGNOnR504(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(SemEvent_c.getManySM_SEVTsOnR526(v_nlevt)));


NewStateTransition_c v_transition = NewStateTransition_c.getOneSM_NSTXNOnR504(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(SemEvent_c.getManySM_SEVTsOnR526(v_nlevt)));


if ( (  (v_ignore != null)) && (  (v_transition == null)) )
{

StateMachineEvent_c v_poly = StateMachineEvent_c.getOneSM_EVTOnR525(PolymorphicEvent_c.getOneSM_PEVTOnR527(v_nlevt));


if (v_subtype != null) {
v_subtype.Disposelowernonlocalevents(			    
false			    
,v_subtype.getObj_id()			    
,getObj_id()			    
,v_poly.getSmevt_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (v_subtype != null) {
v_subtype.Removeinconsistentsubtypeignores() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


}


   } // End removeInconsistentSubtypeIgnores
  public  void Rename(final String       p_New_name)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Rename") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (Os_c.Remove_spaces(			    
getName()).equals(getKey_lett())) )
{

setKey_lett( Os_c.Remove_spaces(			    
p_New_name)) ;



}

setName( p_New_name) ;


  class InstanceReferenceDataType_test37514_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InstanceReferenceDataType_c selected = (InstanceReferenceDataType_c)candidate;
		return selected.getIsset() == false ;
	}
  }
InstanceReferenceDataType_c v_ir = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, new InstanceReferenceDataType_test37514_c());


if ( (  (v_ir != null)) )
{

if (v_ir != null) {
v_ir.Rename(			    
"inst_ref<" + p_New_name + ">" ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

  class InstanceReferenceDataType_test37515_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InstanceReferenceDataType_c selected = (InstanceReferenceDataType_c)candidate;
		return selected.getIsset() == true ;
	}
  }
InstanceReferenceDataType_c v_irs = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, new InstanceReferenceDataType_test37515_c());


if ( (  (v_irs != null)) )
{

if (v_irs != null) {
v_irs.Rename(			    
"inst_ref_set<" + p_New_name + ">" ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End rename
  public  void Newinstancereferencedatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Newinstancereferencedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(this);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

  class InstanceReferenceDataType_test37516_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InstanceReferenceDataType_c selected = (InstanceReferenceDataType_c)candidate;
		return selected.getIsset() == false ;
	}
  }
InstanceReferenceDataType_c v_existing_irdt = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, new InstanceReferenceDataType_test37516_c());


if ( (  (v_existing_irdt == null)) )
{

PackageableElement_c v_pe = new PackageableElement_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pe));


if (v_pe != null) {
  v_pe.relateAcrossR8000To(v_package);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_pe != null) {
v_pe.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_pe != null) {
  v_pe.setType( Elementtypeconstants_c.DATATYPE) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


DataType_c v_dt = new DataType_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dt));


if (v_pe != null) {
  v_pe.relateAcrossR8001To(v_dt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


InstanceReferenceDataType_c v_irdt = new InstanceReferenceDataType_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_irdt));


if (v_irdt != null) {
  v_irdt.setIsset( false) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dt != null) {
  v_dt.relateAcrossR17To(v_irdt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_dt != null) {
v_dt.Initialize(			    
"inst_ref<" + getName() + ">" ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  this.relateAcrossR123To(v_irdt);



}

  class InstanceReferenceDataType_test37517_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InstanceReferenceDataType_c selected = (InstanceReferenceDataType_c)candidate;
		return selected.getIsset() == true ;
	}
  }
InstanceReferenceDataType_c v_existing_irdt_set = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, new InstanceReferenceDataType_test37517_c());


if ( (  (v_existing_irdt_set == null)) )
{

PackageableElement_c v_pe = new PackageableElement_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_pe));


if (v_pe != null) {
  v_pe.relateAcrossR8000To(v_package);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_pe != null) {
v_pe.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_pe != null) {
  v_pe.setType( Elementtypeconstants_c.DATATYPE) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


DataType_c v_dt2 = new DataType_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dt2));


if (v_pe != null) {
  v_pe.relateAcrossR8001To(v_dt2);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


InstanceReferenceDataType_c v_irsdt = new InstanceReferenceDataType_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_irsdt));


if (v_irsdt != null) {
  v_irsdt.setIsset( true) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_irsdt != null) {
  v_irsdt.relateAcrossR17To(v_dt2);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_dt2 != null) {
v_dt2.Initialize(			    
"inst_ref_set<" + getName() + ">" ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  this.relateAcrossR123To(v_irsdt);



}

return ;



}

Domain_c v_dom = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(this));


  class DataTypePackage_test37518_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataTypePackage_c selected = (DataTypePackage_c)candidate;
		return selected.getName().equals("Datatypes") ;
	}
  }
DataTypePackage_c v_dtp = DataTypePackage_c.getOneS_DPKOnR40(v_dom, new DataTypePackage_test37518_c());


if ( (  (v_dtp == null)) )
{

v_dtp = new DataTypePackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dtp));


if (v_dtp != null) {
  v_dtp.setName( "Datatypes") ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dtp != null) {
  v_dtp.relateAcrossR40To(v_dom);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

  class InstanceReferenceDataType_test37519_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InstanceReferenceDataType_c selected = (InstanceReferenceDataType_c)candidate;
		return selected.getIsset() == false ;
	}
  }
InstanceReferenceDataType_c v_existing_irdt = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, new InstanceReferenceDataType_test37519_c());


if ( (  (v_existing_irdt == null)) )
{

DataType_c v_dt = new DataType_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dt));


InstanceReferenceDataType_c v_irdt = new InstanceReferenceDataType_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_irdt));


if (v_irdt != null) {
  v_irdt.setIsset( false) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dt != null) {
  v_dt.relateAcrossR17To(v_irdt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


DataTypeInPackage_c v_dip = new DataTypeInPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dip));


if (v_dip != null) {
  v_dip.relateAcrossR39To( v_dt ) ;   v_dip.relateAcrossR39To( v_dtp ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_dt != null) {
v_dt.Initialize(			    
"inst_ref<" + getName() + ">" ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_dtp != null) {
v_dtp.Associatenewdtwithdomainorsystem(			    
v_dt.getDt_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  this.relateAcrossR123To(v_irdt);



}

  class InstanceReferenceDataType_test37520_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		InstanceReferenceDataType_c selected = (InstanceReferenceDataType_c)candidate;
		return selected.getIsset() == true ;
	}
  }
InstanceReferenceDataType_c v_existing_irdt_set = InstanceReferenceDataType_c.getOneS_IRDTOnR123(this, new InstanceReferenceDataType_test37520_c());


if ( (  (v_existing_irdt_set == null)) )
{

DataType_c v_dt2 = new DataType_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dt2));


InstanceReferenceDataType_c v_irsdt = new InstanceReferenceDataType_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_irsdt));


if (v_irsdt != null) {
  v_irsdt.setIsset( true) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_irsdt != null) {
  v_irsdt.relateAcrossR17To(v_dt2);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


DataTypeInPackage_c v_dip = new DataTypeInPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dip));


if (v_dip != null) {
  v_dip.relateAcrossR39To( v_dt2 ) ;   v_dip.relateAcrossR39To( v_dtp ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}


if (v_dt2 != null) {
v_dt2.Initialize(			    
"inst_ref_set<" + getName() + ">" ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_dtp != null) {
v_dtp.Associatenewdtwithdomainorsystem(			    
v_dt2.getDt_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


  this.relateAcrossR123To(v_irsdt);



}


   } // End newInstanceReferenceDataType
  public  void Initializeorder()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Initializeorder") ; 
               final ModelRoot modelRoot = getModelRoot();
Operation_c [] v_peers = Operation_c.getManyO_TFRsOnR115(this);


if ( (  (v_peers.length) > 1) )
{

boolean      v_initialOrderingCheckPerformed = false ;


  class Operation_test37521_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Operation_c selected = (Operation_c)candidate;
		return (selected.getObj_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
Operation_c v_head = Operation_c.getOneO_TFROnR115(this, new Operation_test37521_c());


Operation_c v_endOfList = v_head ;


int          v_loopCnt = 0 ;


Operation_c  v_peer = null;
for ( int i37109 = 0; i37109 < v_peers.length; i37109++)
{
  v_peer = v_peers[i37109] ;

if ( (  !v_initialOrderingCheckPerformed) )
{

Operation_c v_predecessor = Operation_c.getOneO_TFROnR125Precedes(v_peer);


Operation_c v_successor = Operation_c.getOneO_TFROnR125Succeeds(v_peer);


v_initialOrderingCheckPerformed = true ;


if ( (  (v_predecessor != null) ||   (v_successor != null)) )
{

break;



}

v_head = v_peer ;


v_endOfList = v_peer ;



}

if ( (v_loopCnt == 1) )
{

if ( (v_peer.getName().compareTo(v_head.getName()) < 0) )
{

if (v_peer != null) {
  v_peer.relateAcrossR125ToPrecedes(v_head);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if (v_head != null) {
  v_head.relateAcrossR125ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}


}

else if ( (v_loopCnt > 1) )
{

Operation_c v_insertPoint = v_head ;


Operation_c v_next = Operation_c.getOneO_TFROnR125Succeeds(v_head);


while ( (  (v_next != null)) )
{

if ( (v_next.getName().compareTo(v_peer.getName()) < 0) )
{

break;



}

else
{

v_insertPoint = v_next ;


v_next = Operation_c.getOneO_TFROnR125Succeeds(v_next);



}


}

if ( (  (v_next == null)) )
{

if (v_peer != null) {
  v_peer.relateAcrossR125ToPrecedes(v_endOfList);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_endOfList = v_peer ;



}

else
{

if ( ((v_insertPoint == v_head) && (v_peer.getName().compareTo(v_head.getName()) > 0)) )
{

if (v_head != null) {
  v_head.relateAcrossR125ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_head = v_peer ;



}

else
{

if (v_next != null) {
v_next.unrelateAcrossR125FromPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_peer != null) {
  v_peer.relateAcrossR125ToPrecedes(v_insertPoint);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_next != null) {
  v_next.relateAcrossR125ToPrecedes(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

v_loopCnt = v_loopCnt + 1 ;



}


}


   } // End initializeOrder
  public  java.util.UUID         Getcontainingcomponentid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Getcontainingcomponentid") ; 
               final ModelRoot modelRoot = getModelRoot();
boolean      v_isInGenericPkg = false ;


Package_c v_pkg = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


if ( (  (v_pkg != null)) )
{

v_isInGenericPkg = true ;



}

if ( (v_isInGenericPkg) )
{

Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(this));


if ( (  (v_component != null)) )
{

return v_component.getId();



}

if (   (v_pkg != null) )
{

return v_pkg.Getcontainingcomponentid();



}

User_c.Logerror(			    
"Class has no parent in Model Class.getContainingComponentId()"			    
,Getpath(			    
true			    
,getName()) ) ;



}

else
{

Subsystem_c v_subsystem = Subsystem_c.getOneS_SSOnR2(this);


if (   (v_subsystem != null) )
{

return v_subsystem.Getcontainingcomponentid();



}


}

return Gd_c.Null_unique_id();



   } // End getContainingComponentId
  public  java.util.UUID         Getcontainerid()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Getcontainerid") ; 
               final ModelRoot modelRoot = getModelRoot();
Component_c v_component = Component_c.getOneC_COnR8003(PackageableElement_c.getOnePE_PEOnR8001(this));


if (   (v_component != null) )
{

return v_component.getId();



}

else
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


if (   (v_package != null) )
{

return v_package.getPackage_id();



}


}

return Gd_c.Null_unique_id();



   } // End getContainerId
  public  void Pasteoperation(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Pasteoperation") ; 
               final ModelRoot modelRoot = getModelRoot();
Operation_c v_operation = (Operation_c) modelRoot.getInstanceList(Operation_c.class).getGlobal(null, p_Id);


if ( (  (v_operation != null)) )
{

ModelClass_c v_existingObj = ModelClass_c.getOneO_OBJOnR115(v_operation);


if ( (  (v_existingObj != null)) )
{

if (v_operation != null) {
v_operation.unrelateAcrossR115From(v_existingObj);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_operation != null) {
  v_operation.relateAcrossR115To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_operation != null) {
  v_operation.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_operation.Converttoinstance()			    
,v_operation.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


Addoperationtoordering(			    
v_operation.getTfr_id() ) ;



}


   } // End pasteOperation
  public  void Addattributetoordering(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Addattributetoordering") ; 
               final ModelRoot modelRoot = getModelRoot();
  class Attribute_test37357_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Attribute_c selected = (Attribute_c)candidate;
		return (selected.getAttr_id().equals(p_Id)) ;
	}
  }
Attribute_c v_newAttr = Attribute_c.AttributeInstance(modelRoot, new Attribute_test37357_c()) ;


Attribute_c [] v_attrs = Attribute_c.getManyO_ATTRsOnR102(this);


Attribute_c  v_attr = null;
for ( int i37110 = 0; i37110 < v_attrs.length; i37110++)
{
  v_attr = v_attrs[i37110] ;

Attribute_c v_nextAttr = Attribute_c.getOneO_ATTROnR103Precedes(v_attr);


if ( (  (v_nextAttr == null)) )
{

break;



}


}

if ( (  (v_attr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


if (v_attr != null) {
  v_attr.relateAcrossR103ToPrecedes(v_newAttr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}


   } // End addAttributeToOrdering
  public  boolean      Removeincompletereferential(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Removeincompletereferential") ; 
               final ModelRoot modelRoot = getModelRoot();
  class Attribute_test37358_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Attribute_c selected = (Attribute_c)candidate;
		return (selected.getAttr_id().equals(p_Id)) ;
	}
  }
Attribute_c v_attribute = Attribute_c.AttributeInstance(modelRoot, new Attribute_test37358_c()) ;


if ( (  (v_attribute != null)) )
{

ReferentialAttribute_c v_refAttr = ReferentialAttribute_c.getOneO_RATTROnR106(v_attribute);


if ( (  (v_refAttr != null)) )
{

ReferredToIdentifierAttribute_c v_referredToAttr = ReferredToIdentifierAttribute_c.getOneO_RTIDAOnR111(AttributeReferenceInClass_c.getManyO_REFsOnR108(v_refAttr));


ClassIdentifierAttribute_c v_identAttr = ClassIdentifierAttribute_c.getOneO_OIDAOnR110(v_referredToAttr);


ReferredToClassInAssoc_c v_rto = ReferredToClassInAssoc_c.getOneR_RTOOnR110(v_referredToAttr);


if ( (  (v_identAttr == null) ||   (v_rto == null)) )
{

if (v_attribute != null) {
v_attribute.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


return true;



}


}


}

return false;



   } // End removeIncompleteReferential
  public  void Addoperationtoordering(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Addoperationtoordering") ; 
               final ModelRoot modelRoot = getModelRoot();
Operation_c v_operation = (Operation_c) modelRoot.getInstanceList(Operation_c.class).getGlobal(null, p_Id);


if ( (  (v_operation != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


Operation_c [] v_peers = Operation_c.getManyO_TFRsOnR115(this);


Operation_c  v_peer = null;
for ( int i37111 = 0; i37111 < v_peers.length; i37111++)
{
  v_peer = v_peers[i37111] ;

if ( (v_peer != v_operation) )
{

Operation_c v_predecessor = Operation_c.getOneO_TFROnR125Precedes(v_peer);


if ( (  (v_predecessor == null)) )
{

if (v_operation != null) {
  v_operation.relateAcrossR125ToSucceeds(v_peer);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}


   } // End addOperationToOrdering
  public  boolean      Cancopyattribute(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Cancopyattribute") ; 
               final ModelRoot modelRoot = getModelRoot();
  class Attribute_test37522_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Attribute_c selected = (Attribute_c)candidate;
		return (selected.getAttr_id().equals(p_Id)) ;
	}
  }
Attribute_c v_attribute = Attribute_c.getOneO_ATTROnR102(this, new Attribute_test37522_c());


if ( (  (v_attribute != null)) )
{

ReferentialAttribute_c v_refAttr = ReferentialAttribute_c.getOneO_RATTROnR106(v_attribute);


if ( (  (v_refAttr != null)) )
{

return false;



}


}

else
{

return false;



}

return true;



   } // End canCopyAttribute
  public  void Removeincompletesignalevents()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Removeincompletesignalevents") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_asm = StateMachine_c.getOneSM_SMOnR517(ClassStateMachine_c.getOneSM_ASMOnR519(this));


if ( (  (v_asm != null)) )
{

if (v_asm != null) {
v_asm.Removeincompletesignalevents() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

StateMachine_c v_ism = StateMachine_c.getOneSM_SMOnR517(InstanceStateMachine_c.getOneSM_ISMOnR518(this));


if ( (  (v_ism != null)) )
{

if (v_ism != null) {
v_ism.Removeincompletesignalevents() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End removeIncompleteSignalEvents
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Model Class", " Operation entered: ModelClass::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(this));


ModelClass_c [] v_objs = ModelClass_c.getManyO_OBJsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(v_package));


ModelClass_c  v_obj = null;
for ( int i37112 = 0; i37112 < v_objs.length; i37112++)
{
  v_obj = v_objs[i37112] ;

if ( (v_obj.getKey_lett().equals(getKey_lett()) && v_obj != this) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

IntegrityManager_c.Createissue(modelRoot			    
,"Another class within the same package has been found " + "with the same key letters."			    
,Converttoinstance()			    
,getObj_id()			    
,getName()			    
,Getpath(			    
true			    
,getName())			    
,Severity_c.Error			    
,v_sys_id ) ;



}

if ( (v_obj.getNumb() == getNumb() && v_obj != this) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

IntegrityManager_c.Createissue(modelRoot			    
,"Another class within the same package has been found " + "with the same number."			    
,Converttoinstance()			    
,getObj_id()			    
,getName()			    
,Getpath(			    
true			    
,getName())			    
,Severity_c.Warning			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return ModelClassActionFilter.getSingleton();
    }
	if (adapter == org.eclipse.core.resources.IResource.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
        	return comp.getFile().getParent();
        }
	}else if(adapter == org.eclipse.core.resources.IFile.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
            return comp.getFile();
        }
	}
	  return null;
  }
} // end Model Class
