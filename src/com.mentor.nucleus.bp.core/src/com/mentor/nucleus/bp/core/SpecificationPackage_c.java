package com.mentor.nucleus.bp.core;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.SpecificationPackage_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.*;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;
abstract class EV_SPECIFICATION_PACKAGE extends genericEvent_c {
	public abstract int getEvtcode();
}

public class SpecificationPackage_c extends NonRootModelElement
		implements
			IAdaptable,
			Cloneable {
	// Public Constructors
	public SpecificationPackage_c(ModelRoot modelRoot,
			java.util.UUID p_m_package_id,
			java.util.UUID p_m_container_package_id) {
		super(modelRoot);
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
		//extract 28 bit value only            
		m_package_idLongBased = 0xfffffff & p_m_package_id
				.getLeastSignificantBits();
		//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
		m_container_package_id = IdAssigner
				.preprocessUUID(p_m_container_package_id);

		setUniqueId(m_package_id);
		Object[] key = {m_package_id};
		addInstanceToMap(key);
	}
	static public SpecificationPackage_c createProxy(ModelRoot modelRoot,
			java.util.UUID p_m_package_id,
			java.util.UUID p_m_container_package_id, String p_contentPath,
			IPath p_localPath) {
		ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot,
				p_contentPath, p_localPath);
		// if a model root was not resolved it is most likely
		// due to a missing file of the proxy, defualt back to
		// the original model root
		if (resolvedModelRoot != null)
			modelRoot = resolvedModelRoot;
		InstanceList instances = modelRoot
				.getInstanceList(SpecificationPackage_c.class);
		SpecificationPackage_c new_inst = null;
		synchronized (instances) {
			Object[] key = {p_m_package_id};
			new_inst = (SpecificationPackage_c) instances.get(key);
		}
		String contentPath = PersistenceUtil.resolveRelativePath(p_localPath,
				new Path(p_contentPath));
		if (modelRoot.isNewCompareRoot()) {
			// for comparisons we do not want to change
			// the content path
			contentPath = p_contentPath;
		}
		if (new_inst != null && !modelRoot.isCompareRoot()) {
			PersistableModelComponent pmc = new_inst.getPersistableComponent();
			if (pmc == null) {
				// dangling reference, redo this instance
				new_inst.batchUnrelate();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_package_id = IdAssigner
						.preprocessUUID(p_m_package_id);
				//extract 28 bit value only            
				new_inst.m_package_idLongBased = 0xfffffff & p_m_package_id
						.getLeastSignificantBits();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				new_inst.m_container_package_id = IdAssigner
						.preprocessUUID(p_m_container_package_id);

			}
		}
		if (new_inst == null) {
			// there is no instance matching the id, create a proxy
			// if the resource doesn't exist then this will be a dangling reference
			new_inst = new SpecificationPackage_c(modelRoot, p_m_package_id,
					p_m_container_package_id);
			new_inst.m_contentPath = contentPath;
		}
		return new_inst;
	}

	static public SpecificationPackage_c resolveInstance(ModelRoot modelRoot,
			java.util.UUID p_m_package_id,
			java.util.UUID p_m_container_package_id) {
		InstanceList instances = modelRoot
				.getInstanceList(SpecificationPackage_c.class);
		SpecificationPackage_c source = null;
		synchronized (instances) {
			Object[] key = {p_m_package_id};
			source = (SpecificationPackage_c) instances.get(key);
			if (source != null && !modelRoot.isCompareRoot()) {
				source.convertFromProxy();
				source.batchUnrelate();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
				//extract 28 bit value only            
				source.m_package_idLongBased = 0xfffffff & p_m_package_id
						.getLeastSignificantBits();
				//pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
				source.m_container_package_id = IdAssigner
						.preprocessUUID(p_m_container_package_id);

				return source;
			}
		}
		// there is no instance matching the id
		SpecificationPackage_c new_inst = new SpecificationPackage_c(modelRoot,
				p_m_package_id, p_m_container_package_id);
		return new_inst;
	}
	public SpecificationPackage_c(ModelRoot modelRoot) {
		super(modelRoot);
		m_package_id = idAssigner.createUUID();
		m_container_package_id = IdAssigner.NULL_UUID;
		setUniqueId(m_package_id);
		Object[] key = {m_package_id};
		addInstanceToMap(key);
	}

	public Object getInstanceKey() {
		Object[] key = {m_package_id};
		return key;
	}

	public boolean setInstanceKey(UUID p_newKey) {

		boolean changed = false;
		// round p1
		// round p2
		// round p3
		// round p5
		if (m_package_id != p_newKey) {

			m_package_id = p_newKey;
			changed = true;
		}
		return changed;
	}

	public boolean equals(Object elem) {
		if (!(elem instanceof SpecificationPackage_c)) {
			return false;
		}
		// check that the model-roots are the same
		if (((NonRootModelElement) elem).getModelRoot() != getModelRoot()
				&& !getModelRoot().isCompareRoot()) {
			return false;
		}

		return identityEquals(elem);
	}

	public boolean identityEquals(Object elem) {
		if (!(elem instanceof SpecificationPackage_c)) {
			return false;
		}

		SpecificationPackage_c me = (SpecificationPackage_c) elem;
		// don't allow an empty id-value to produce a false positive result;
		// in this case, use whether the two instances are actually the same 
		// one in memory, instead
		if (!getModelRoot().isCompareRoot()
				&& ((IdAssigner.NULL_UUID.equals(getPackage_id()) || IdAssigner.NULL_UUID
						.equals(((SpecificationPackage_c) elem).getPackage_id())) && this != elem)) {
			return false;
		}
		if (!getPackage_id().equals(
				((SpecificationPackage_c) elem).getPackage_id()))
			return false;
		return true;
	}

	public boolean cachedIdentityEquals(Object elem) {
		if (!(elem instanceof SpecificationPackage_c)) {
			return false;
		}

		SpecificationPackage_c me = (SpecificationPackage_c) elem;
		if (!getPackage_id().equals(
				((SpecificationPackage_c) elem).getPackage_id()))
			return false;
		return true;
	}

	// Attributes
	private java.util.UUID m_package_id;
	private long m_package_idLongBased;
	private java.util.UUID m_container_package_id;

	// declare association references from this class

	// referring navigation

	Package_c Package;
	public void relateAcrossR1400To(Package_c target) {
		relateAcrossR1400To(target, true);
	}
	public void relateAcrossR1400To(Package_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (target == Package)
			return; // already related

		if (Package != target) {

			Object oldKey = getInstanceKey();

			if (Package != null) {
				UmlProblem.removeXtUMLProblem(this, Package);

				Package.clearBackPointerR1400To(this);

				if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) { //$NON-NLS-1$
					Ooaofooa.log
							.println(
									ILogger.CONSISTENCY,
									"SpecificationPackage_c.relateAcrossR1400To(Package_c target)",
									"Relate performed across R1400 from Specification Package to Package without unrelate of prior instance.");
				}
			}

			Package = target;
			if (IdAssigner.NULL_UUID.equals(target.getPackage_id())) {
				// do not update cached value
			} else {
				// update cached value
				m_container_package_id = target.getPackage_idCachedValue();
			}
			updateInstanceKey(oldKey, getInstanceKey());
			target.setBackPointerR1400To(this);
			target.addRef();
			UmlProblem.handleDanglingReference(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_RELATED, this,
						target, "1400", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}
	public void unrelateAcrossR1400From(Package_c target) {
		unrelateAcrossR1400From(target, true);
	}
	public void unrelateAcrossR1400From(Package_c target, boolean notifyChanges) {
		if (target == null)
			return;

		if (Package == null)
			return; // already unrelated

		if (target != Package) {
			Exception e = new Exception();
			e.fillInStackTrace();
			CorePlugin.logError(
					"Tried to unrelate from non-related instance across R1400",
					e);
			return;
		}

		if (target != null) {
			target.clearBackPointerR1400To(this);
		}

		if (Package != null) {

			m_container_package_id = Package.getPackage_id();
			if (IdAssigner.NULL_UUID.equals(m_container_package_id)) {
				m_container_package_id = Package.getPackage_idCachedValue();
			}
			Package = null;
			target.removeRef();
			UmlProblem.removeXtUMLProblem(this, target);
			if (notifyChanges) {
				RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(
						Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this,
						target, "1400", "");
				Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(
						change);
			}
		}
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1400(
			Package_c[] targets) {
		return getOneEP_SPKGOnR1400(targets, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1400(
			Package_c[] targets, ClassQueryInterface_c test) {
		SpecificationPackage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				ret_val = getOneEP_SPKGOnR1400(targets[i], test);
			}
		}

		return ret_val;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1400(Package_c target) {
		return getOneEP_SPKGOnR1400(target, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1400(Package_c target,
			boolean loadComponent) {
		return getOneEP_SPKGOnR1400(target.getModelRoot(), target, null,
				loadComponent);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1400(Package_c target,
			ClassQueryInterface_c test) {
		if (target != null) {
			return getOneEP_SPKGOnR1400(target.getModelRoot(), target, test);
		}
		return null;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1400(
			ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test) {
		return getOneEP_SPKGOnR1400(modelRoot, target, test, true);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1400(
			ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c result = null;

		result = find_getOneEP_SPKGOnR1400(modelRoot, target, test);
		if (result == null && (loadComponent)) {
			// Containment Relation
			List comps = PersistenceManager.findAllChildComponents(
					target.getPersistableComponent(), modelRoot,
					SpecificationPackage_c.class);
			for (int i = 0; i < comps.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) comps
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = find_getOneEP_SPKGOnR1400(modelRoot, target,
								test);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}

		return result;
	}
	private static SpecificationPackage_c find_getOneEP_SPKGOnR1400(
			ModelRoot modelRoot, Package_c target, ClassQueryInterface_c test) {
		if (target != null) {
			synchronized (target.backPointer_ContainsSpecificationPackageContains_R1400) {
				for (int i = 0; i < target.backPointer_ContainsSpecificationPackageContains_R1400
						.size(); ++i) {
					SpecificationPackage_c source = (SpecificationPackage_c) target.backPointer_ContainsSpecificationPackageContains_R1400
							.get(i);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						return source;
					}
				}
			}
		}
		// not found
		return null;
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1400(
			Package_c[] targets) {
		return getManyEP_SPKGsOnR1400(targets, null);
	}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1400(
			Package_c[] targets, boolean loadComponent) {
		return getManyEP_SPKGsOnR1400(targets, null, loadComponent);
	}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1400(
			Package_c[] targets, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1400(targets, test, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1400(
			Package_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {

		if (targets == null || targets.length == 0 || targets[0] == null)
			return new SpecificationPackage_c[0];

		ModelRoot modelRoot = targets[0].getModelRoot();
		if (loadComponent) {
			//Containment Relation
			PersistableModelComponent[] pmcs = new PersistableModelComponent[targets.length];
			for (int i = 0; i < targets.length; i++) {
				pmcs[i] = targets[i].getPersistableComponent();
			}
			PersistenceManager.ensureAllChildInstancesLoaded(pmcs, modelRoot,
					SpecificationPackage_c.class);

		}

		InstanceList instances = modelRoot
				.getInstanceList(SpecificationPackage_c.class);

		Vector matches = new Vector();
		for (int i = 0; i < targets.length; i++) {
			synchronized (targets[i].backPointer_ContainsSpecificationPackageContains_R1400) {
				for (int j = 0; j < targets[i].backPointer_ContainsSpecificationPackageContains_R1400
						.size(); ++j) {
					SpecificationPackage_c source = (SpecificationPackage_c) targets[i].backPointer_ContainsSpecificationPackageContains_R1400
							.get(j);
					if (source != null
							&& (test == null || test.evaluate(source))) {
						matches.add(source);
					}
				}
			}
		}
		if (matches.size() > 0) {
			SpecificationPackage_c[] ret_set = new SpecificationPackage_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new SpecificationPackage_c[0];
		}
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1400(
			Package_c target) {
		return getManyEP_SPKGsOnR1400(target, null);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1400(
			Package_c target, boolean loadComponent) {
		return getManyEP_SPKGsOnR1400(target, null, loadComponent);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1400(
			Package_c target, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1400(target, test, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1400(
			Package_c target, ClassQueryInterface_c test, boolean loadComponent) {
		if (target == null)
			return new SpecificationPackage_c[0];

		ModelRoot modelRoot = target.getModelRoot();
		if (loadComponent) {
			//Containment Relation
			PersistenceManager.ensureAllChildInstancesLoaded(
					target.getPersistableComponent(), modelRoot,
					SpecificationPackage_c.class);
		}
		Vector matches = new Vector();
		synchronized (target.backPointer_ContainsSpecificationPackageContains_R1400) {
			for (int i = 0; i < target.backPointer_ContainsSpecificationPackageContains_R1400
					.size(); ++i) {
				SpecificationPackage_c source = (SpecificationPackage_c) target.backPointer_ContainsSpecificationPackageContains_R1400
						.get(i);
				if (source != null && (test == null || test.evaluate(source))) {

					matches.add(source);
				}
			}
		}

		if (matches.size() > 0) {
			SpecificationPackage_c[] ret_set = new SpecificationPackage_c[matches
					.size()];
			matches.copyInto(ret_set);
			return ret_set;
		} else {
			return new SpecificationPackage_c[0];
		}
	}

	// declare associations referring to this class

	// referred to navigation

	Activity_c backPointer_IsSubtypeActivityIsSubtype_R1402;

	public void setActivityOrderInChildListR1402(Activity_c target, int index) {
		unrelateAcrossR1402From(target);
		Activity_c[] elements = Activity_c.getManyA_AsOnR1402(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1402From((Activity_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1402To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1402To((Activity_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1402To(Activity_c target) {
		if (target != null) {
			target.relateAcrossR1402To(this, true);
		}
	}

	public void relateAcrossR1402To(Activity_c target, boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1402To(this, notifyChanges);
		}
	}

	public void setBackPointerR1402To(Activity_c target) {
		backPointer_IsSubtypeActivityIsSubtype_R1402 = target;
	}

	public void unrelateAcrossR1402From(Activity_c target) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, true);
		}
	}

	public void unrelateAcrossR1402From(Activity_c target, boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1402To(Activity_c target) {
		if (target == backPointer_IsSubtypeActivityIsSubtype_R1402) {
			backPointer_IsSubtypeActivityIsSubtype_R1402 = null;
		}
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Activity_c[] targets) {
		return getOneEP_SPKGOnR1402(targets, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Activity_c[] targets, ClassQueryInterface_c test) {
		return getOneEP_SPKGOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Activity_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SpecificationPackage_c candidate_val = getOneEP_SPKGOnR1402(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneEP_SPKGOnR1402(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(Activity_c target) {
		return getOneEP_SPKGOnR1402(target, true);
	}
	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Activity_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSpecificationPackage;
		} else {
			return null;
		}
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Activity_c[] targets, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c [] getManyEP_SPKGsOnR1402(Activity_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SpecificationPackage_c[0];
  
  
  LinkedHashSet<SpecificationPackage_c> elementsSet = new LinkedHashSet<SpecificationPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSpecificationPackage == null)
	  targets[i].loadProxy();
    SpecificationPackage_c associate = targets[i].IsSupertypeSpecificationPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SpecificationPackage_c[] result = new SpecificationPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Activity_c[] targets) {
		return getManyEP_SPKGsOnR1402(targets, null);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Activity_c target, ClassQueryInterface_c test, boolean loadComponent) {
		if (target != null) {
			Activity_c[] targetArray = new Activity_c[1];
			targetArray[0] = target;
			return getManyEP_SPKGsOnR1402(targetArray, test, loadComponent);
		} else {
			SpecificationPackage_c[] result = new SpecificationPackage_c[0];
			return result;
		}

	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Activity_c target, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Activity_c target) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Activity_c target, boolean loadComponent) {
		return getManyEP_SPKGsOnR1402(target, null, loadComponent);
	}

	// referred to navigation

	Communication_c backPointer_IsSubtypeCommunicationIsSubtype_R1402;

	public void setCommunicationOrderInChildListR1402(Communication_c target,
			int index) {
		unrelateAcrossR1402From(target);
		Communication_c[] elements = Communication_c
				.getManyCOMM_COMMsOnR1402(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1402From((Communication_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1402To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1402To((Communication_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1402To(Communication_c target) {
		if (target != null) {
			target.relateAcrossR1402To(this, true);
		}
	}

	public void relateAcrossR1402To(Communication_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1402To(this, notifyChanges);
		}
	}

	public void setBackPointerR1402To(Communication_c target) {
		backPointer_IsSubtypeCommunicationIsSubtype_R1402 = target;
	}

	public void unrelateAcrossR1402From(Communication_c target) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, true);
		}
	}

	public void unrelateAcrossR1402From(Communication_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1402To(Communication_c target) {
		if (target == backPointer_IsSubtypeCommunicationIsSubtype_R1402) {
			backPointer_IsSubtypeCommunicationIsSubtype_R1402 = null;
		}
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Communication_c[] targets) {
		return getOneEP_SPKGOnR1402(targets, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Communication_c[] targets, ClassQueryInterface_c test) {
		return getOneEP_SPKGOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Communication_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SpecificationPackage_c candidate_val = getOneEP_SPKGOnR1402(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneEP_SPKGOnR1402(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Communication_c target) {
		return getOneEP_SPKGOnR1402(target, true);
	}
	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Communication_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSpecificationPackage;
		} else {
			return null;
		}
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Communication_c[] targets, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c [] getManyEP_SPKGsOnR1402(Communication_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SpecificationPackage_c[0];
  
  
  LinkedHashSet<SpecificationPackage_c> elementsSet = new LinkedHashSet<SpecificationPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSpecificationPackage == null)
	  targets[i].loadProxy();
    SpecificationPackage_c associate = targets[i].IsSupertypeSpecificationPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SpecificationPackage_c[] result = new SpecificationPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Communication_c[] targets) {
		return getManyEP_SPKGsOnR1402(targets, null);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Communication_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			Communication_c[] targetArray = new Communication_c[1];
			targetArray[0] = target;
			return getManyEP_SPKGsOnR1402(targetArray, test, loadComponent);
		} else {
			SpecificationPackage_c[] result = new SpecificationPackage_c[0];
			return result;
		}

	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Communication_c target, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Communication_c target) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Communication_c target, boolean loadComponent) {
		return getManyEP_SPKGsOnR1402(target, null, loadComponent);
	}

	// referred to navigation

	ComponentPackage_c backPointer_IsSubtypeComponentPackageIsSubtype_R1402;

	public void setComponentPackageOrderInChildListR1402(
			ComponentPackage_c target, int index) {
		unrelateAcrossR1402From(target);
		ComponentPackage_c[] elements = ComponentPackage_c
				.getManyCP_CPsOnR1402(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1402From((ComponentPackage_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1402To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1402To((ComponentPackage_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1402To(ComponentPackage_c target) {
		if (target != null) {
			target.relateAcrossR1402To(this, true);
		}
	}

	public void relateAcrossR1402To(ComponentPackage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1402To(this, notifyChanges);
		}
	}

	public void setBackPointerR1402To(ComponentPackage_c target) {
		backPointer_IsSubtypeComponentPackageIsSubtype_R1402 = target;
	}

	public void unrelateAcrossR1402From(ComponentPackage_c target) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, true);
		}
	}

	public void unrelateAcrossR1402From(ComponentPackage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1402To(ComponentPackage_c target) {
		if (target == backPointer_IsSubtypeComponentPackageIsSubtype_R1402) {
			backPointer_IsSubtypeComponentPackageIsSubtype_R1402 = null;
		}
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			ComponentPackage_c[] targets) {
		return getOneEP_SPKGOnR1402(targets, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			ComponentPackage_c[] targets, ClassQueryInterface_c test) {
		return getOneEP_SPKGOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			ComponentPackage_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SpecificationPackage_c candidate_val = getOneEP_SPKGOnR1402(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneEP_SPKGOnR1402(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			ComponentPackage_c target) {
		return getOneEP_SPKGOnR1402(target, true);
	}
	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			ComponentPackage_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSpecificationPackage;
		} else {
			return null;
		}
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			ComponentPackage_c[] targets, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c [] getManyEP_SPKGsOnR1402(ComponentPackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SpecificationPackage_c[0];
  
  
  LinkedHashSet<SpecificationPackage_c> elementsSet = new LinkedHashSet<SpecificationPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSpecificationPackage == null)
	  targets[i].loadProxy();
    SpecificationPackage_c associate = targets[i].IsSupertypeSpecificationPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SpecificationPackage_c[] result = new SpecificationPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			ComponentPackage_c[] targets) {
		return getManyEP_SPKGsOnR1402(targets, null);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			ComponentPackage_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			ComponentPackage_c[] targetArray = new ComponentPackage_c[1];
			targetArray[0] = target;
			return getManyEP_SPKGsOnR1402(targetArray, test, loadComponent);
		} else {
			SpecificationPackage_c[] result = new SpecificationPackage_c[0];
			return result;
		}

	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			ComponentPackage_c target, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			ComponentPackage_c target) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			ComponentPackage_c target, boolean loadComponent) {
		return getManyEP_SPKGsOnR1402(target, null, loadComponent);
	}

	// referred to navigation

	DataTypePackage_c backPointer_IsSubtypeDataTypePackageIsSubtype_R1402;

	public void setDataTypePackageOrderInChildListR1402(
			DataTypePackage_c target, int index) {
		unrelateAcrossR1402From(target);
		DataTypePackage_c[] elements = DataTypePackage_c
				.getManyS_DPKsOnR1402(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1402From((DataTypePackage_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1402To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1402To((DataTypePackage_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1402To(DataTypePackage_c target) {
		if (target != null) {
			target.relateAcrossR1402To(this, true);
		}
	}

	public void relateAcrossR1402To(DataTypePackage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1402To(this, notifyChanges);
		}
	}

	public void setBackPointerR1402To(DataTypePackage_c target) {
		backPointer_IsSubtypeDataTypePackageIsSubtype_R1402 = target;
	}

	public void unrelateAcrossR1402From(DataTypePackage_c target) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, true);
		}
	}

	public void unrelateAcrossR1402From(DataTypePackage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1402To(DataTypePackage_c target) {
		if (target == backPointer_IsSubtypeDataTypePackageIsSubtype_R1402) {
			backPointer_IsSubtypeDataTypePackageIsSubtype_R1402 = null;
		}
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			DataTypePackage_c[] targets) {
		return getOneEP_SPKGOnR1402(targets, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			DataTypePackage_c[] targets, ClassQueryInterface_c test) {
		return getOneEP_SPKGOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			DataTypePackage_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SpecificationPackage_c candidate_val = getOneEP_SPKGOnR1402(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneEP_SPKGOnR1402(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			DataTypePackage_c target) {
		return getOneEP_SPKGOnR1402(target, true);
	}
	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			DataTypePackage_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSpecificationPackage;
		} else {
			return null;
		}
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			DataTypePackage_c[] targets, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c [] getManyEP_SPKGsOnR1402(DataTypePackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SpecificationPackage_c[0];
  
  
  LinkedHashSet<SpecificationPackage_c> elementsSet = new LinkedHashSet<SpecificationPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSpecificationPackage == null)
	  targets[i].loadProxy();
    SpecificationPackage_c associate = targets[i].IsSupertypeSpecificationPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SpecificationPackage_c[] result = new SpecificationPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			DataTypePackage_c[] targets) {
		return getManyEP_SPKGsOnR1402(targets, null);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			DataTypePackage_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			DataTypePackage_c[] targetArray = new DataTypePackage_c[1];
			targetArray[0] = target;
			return getManyEP_SPKGsOnR1402(targetArray, test, loadComponent);
		} else {
			SpecificationPackage_c[] result = new SpecificationPackage_c[0];
			return result;
		}

	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			DataTypePackage_c target, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			DataTypePackage_c target) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			DataTypePackage_c target, boolean loadComponent) {
		return getManyEP_SPKGsOnR1402(target, null, loadComponent);
	}

	// referred to navigation

	InterfacePackage_c backPointer_IsSubtypeInterfacePackageIsSubtype_R1402;

	public void setInterfacePackageOrderInChildListR1402(
			InterfacePackage_c target, int index) {
		unrelateAcrossR1402From(target);
		InterfacePackage_c[] elements = InterfacePackage_c
				.getManyIP_IPsOnR1402(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1402From((InterfacePackage_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1402To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1402To((InterfacePackage_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1402To(InterfacePackage_c target) {
		if (target != null) {
			target.relateAcrossR1402To(this, true);
		}
	}

	public void relateAcrossR1402To(InterfacePackage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1402To(this, notifyChanges);
		}
	}

	public void setBackPointerR1402To(InterfacePackage_c target) {
		backPointer_IsSubtypeInterfacePackageIsSubtype_R1402 = target;
	}

	public void unrelateAcrossR1402From(InterfacePackage_c target) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, true);
		}
	}

	public void unrelateAcrossR1402From(InterfacePackage_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1402To(InterfacePackage_c target) {
		if (target == backPointer_IsSubtypeInterfacePackageIsSubtype_R1402) {
			backPointer_IsSubtypeInterfacePackageIsSubtype_R1402 = null;
		}
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			InterfacePackage_c[] targets) {
		return getOneEP_SPKGOnR1402(targets, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			InterfacePackage_c[] targets, ClassQueryInterface_c test) {
		return getOneEP_SPKGOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			InterfacePackage_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SpecificationPackage_c candidate_val = getOneEP_SPKGOnR1402(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneEP_SPKGOnR1402(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			InterfacePackage_c target) {
		return getOneEP_SPKGOnR1402(target, true);
	}
	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			InterfacePackage_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSpecificationPackage;
		} else {
			return null;
		}
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			InterfacePackage_c[] targets, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c [] getManyEP_SPKGsOnR1402(InterfacePackage_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SpecificationPackage_c[0];
  
  
  LinkedHashSet<SpecificationPackage_c> elementsSet = new LinkedHashSet<SpecificationPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSpecificationPackage == null)
	  targets[i].loadProxy();
    SpecificationPackage_c associate = targets[i].IsSupertypeSpecificationPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SpecificationPackage_c[] result = new SpecificationPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			InterfacePackage_c[] targets) {
		return getManyEP_SPKGsOnR1402(targets, null);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			InterfacePackage_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			InterfacePackage_c[] targetArray = new InterfacePackage_c[1];
			targetArray[0] = target;
			return getManyEP_SPKGsOnR1402(targetArray, test, loadComponent);
		} else {
			SpecificationPackage_c[] result = new SpecificationPackage_c[0];
			return result;
		}

	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			InterfacePackage_c target, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			InterfacePackage_c target) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			InterfacePackage_c target, boolean loadComponent) {
		return getManyEP_SPKGsOnR1402(target, null, loadComponent);
	}

	// referred to navigation

	UseCaseDiagram_c backPointer_IsSubtypeUseCaseDiagramIsSubtype_R1402;

	public void setUseCaseDiagramOrderInChildListR1402(UseCaseDiagram_c target,
			int index) {
		unrelateAcrossR1402From(target);
		UseCaseDiagram_c[] elements = UseCaseDiagram_c
				.getManyUC_UCCsOnR1402(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1402From((UseCaseDiagram_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1402To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1402To((UseCaseDiagram_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1402To(UseCaseDiagram_c target) {
		if (target != null) {
			target.relateAcrossR1402To(this, true);
		}
	}

	public void relateAcrossR1402To(UseCaseDiagram_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1402To(this, notifyChanges);
		}
	}

	public void setBackPointerR1402To(UseCaseDiagram_c target) {
		backPointer_IsSubtypeUseCaseDiagramIsSubtype_R1402 = target;
	}

	public void unrelateAcrossR1402From(UseCaseDiagram_c target) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, true);
		}
	}

	public void unrelateAcrossR1402From(UseCaseDiagram_c target,
			boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1402To(UseCaseDiagram_c target) {
		if (target == backPointer_IsSubtypeUseCaseDiagramIsSubtype_R1402) {
			backPointer_IsSubtypeUseCaseDiagramIsSubtype_R1402 = null;
		}
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			UseCaseDiagram_c[] targets) {
		return getOneEP_SPKGOnR1402(targets, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			UseCaseDiagram_c[] targets, ClassQueryInterface_c test) {
		return getOneEP_SPKGOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			UseCaseDiagram_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SpecificationPackage_c candidate_val = getOneEP_SPKGOnR1402(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneEP_SPKGOnR1402(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			UseCaseDiagram_c target) {
		return getOneEP_SPKGOnR1402(target, true);
	}
	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			UseCaseDiagram_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSpecificationPackage;
		} else {
			return null;
		}
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			UseCaseDiagram_c[] targets, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c [] getManyEP_SPKGsOnR1402(UseCaseDiagram_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SpecificationPackage_c[0];
  
  
  LinkedHashSet<SpecificationPackage_c> elementsSet = new LinkedHashSet<SpecificationPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSpecificationPackage == null)
	  targets[i].loadProxy();
    SpecificationPackage_c associate = targets[i].IsSupertypeSpecificationPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SpecificationPackage_c[] result = new SpecificationPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			UseCaseDiagram_c[] targets) {
		return getManyEP_SPKGsOnR1402(targets, null);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			UseCaseDiagram_c target, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (target != null) {
			UseCaseDiagram_c[] targetArray = new UseCaseDiagram_c[1];
			targetArray[0] = target;
			return getManyEP_SPKGsOnR1402(targetArray, test, loadComponent);
		} else {
			SpecificationPackage_c[] result = new SpecificationPackage_c[0];
			return result;
		}

	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			UseCaseDiagram_c target, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			UseCaseDiagram_c target) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			UseCaseDiagram_c target, boolean loadComponent) {
		return getManyEP_SPKGsOnR1402(target, null, loadComponent);
	}

	// referred to navigation

	Sequence_c backPointer_IsSubtypeSequenceIsSubtype_R1402;

	public void setSequenceOrderInChildListR1402(Sequence_c target, int index) {
		unrelateAcrossR1402From(target);
		Sequence_c[] elements = Sequence_c.getManySQ_SsOnR1402(this);
		int count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				unrelateAcrossR1402From((Sequence_c) elements[i]);
			}
			count++;
		}
		relateAcrossR1402To(target);
		count = 0;
		for (int i = 0; i < elements.length; i++) {
			if (count >= index) {
				relateAcrossR1402To((Sequence_c) elements[i]);
			}
			count++;
		}
	}

	public void relateAcrossR1402To(Sequence_c target) {
		if (target != null) {
			target.relateAcrossR1402To(this, true);
		}
	}

	public void relateAcrossR1402To(Sequence_c target, boolean notifyChanges) {
		if (target != null) {
			target.relateAcrossR1402To(this, notifyChanges);
		}
	}

	public void setBackPointerR1402To(Sequence_c target) {
		backPointer_IsSubtypeSequenceIsSubtype_R1402 = target;
	}

	public void unrelateAcrossR1402From(Sequence_c target) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, true);
		}
	}

	public void unrelateAcrossR1402From(Sequence_c target, boolean notifyChanges) {
		if (target != null) {
			target.unrelateAcrossR1402From(this, notifyChanges);
		}
	}

	public void clearBackPointerR1402To(Sequence_c target) {
		if (target == backPointer_IsSubtypeSequenceIsSubtype_R1402) {
			backPointer_IsSubtypeSequenceIsSubtype_R1402 = null;
		}
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Sequence_c[] targets) {
		return getOneEP_SPKGOnR1402(targets, null);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Sequence_c[] targets, ClassQueryInterface_c test) {
		return getOneEP_SPKGOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Sequence_c[] targets, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c ret_val = null;
		if (targets != null) {
			for (int i = 0; i < targets.length && ret_val == null; ++i) {
				if (test != null) {
					SpecificationPackage_c candidate_val = getOneEP_SPKGOnR1402(
							targets[i], true);
					if (candidate_val != null && test.evaluate(candidate_val)) {
						ret_val = candidate_val;
						break;
					}
				} else {
					ret_val = getOneEP_SPKGOnR1402(targets[i], loadComponent);
					if (ret_val != null) {
						break;
					}
				}
			}
		}
		return ret_val;
	}

	public static SpecificationPackage_c getOneEP_SPKGOnR1402(Sequence_c target) {
		return getOneEP_SPKGOnR1402(target, true);
	}
	public static SpecificationPackage_c getOneEP_SPKGOnR1402(
			Sequence_c target, boolean loadComponent) {
		if (target != null) {
			if (loadComponent) {
				target.loadProxy();
			}
			return target.IsSupertypeSpecificationPackage;
		} else {
			return null;
		}
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Sequence_c[] targets, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(targets, test, true);
	}

	public static SpecificationPackage_c [] getManyEP_SPKGsOnR1402(Sequence_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new SpecificationPackage_c[0];
  
  
  LinkedHashSet<SpecificationPackage_c> elementsSet = new LinkedHashSet<SpecificationPackage_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeSpecificationPackage == null)
	  targets[i].loadProxy();
    SpecificationPackage_c associate = targets[i].IsSupertypeSpecificationPackage;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  SpecificationPackage_c[] result = new SpecificationPackage_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}
	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Sequence_c[] targets) {
		return getManyEP_SPKGsOnR1402(targets, null);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Sequence_c target, ClassQueryInterface_c test, boolean loadComponent) {
		if (target != null) {
			Sequence_c[] targetArray = new Sequence_c[1];
			targetArray[0] = target;
			return getManyEP_SPKGsOnR1402(targetArray, test, loadComponent);
		} else {
			SpecificationPackage_c[] result = new SpecificationPackage_c[0];
			return result;
		}

	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Sequence_c target, ClassQueryInterface_c test) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Sequence_c target) {
		return getManyEP_SPKGsOnR1402(target, null, true);
	}

	public static SpecificationPackage_c[] getManyEP_SPKGsOnR1402(
			Sequence_c target, boolean loadComponent) {
		return getManyEP_SPKGsOnR1402(target, null, loadComponent);
	}

	public void batchRelate(ModelRoot modelRoot, boolean notifyChanges,
			boolean searchAllRoots) {
		batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
	}

	public void batchRelate(ModelRoot modelRoot, boolean relateProxies,
			boolean notifyChanges, boolean searchAllRoots) {
		InstanceList instances = null;
		ModelRoot baseRoot = modelRoot;

		if (Package == null) {
			// R1400
			Package_c relInst56201 = (Package_c) baseRoot.getInstanceList(
					Package_c.class).get(new Object[]{m_container_package_id});
			// if there was no local element, check for any global elements
			// failing that proceed to check other model roots
			if (relInst56201 == null) {
				relInst56201 = (Package_c) Ooaofooa.getDefaultInstance()
						.getInstanceList(Package_c.class)
						.get(new Object[]{m_container_package_id});
			}
			if (relInst56201 == null && searchAllRoots
					&& !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
					if (roots[i].isCompareRoot()) {
						// never use elements from any compare root
						continue;
					}
					relInst56201 = (Package_c) roots[i].getInstanceList(
							Package_c.class).get(
							new Object[]{m_container_package_id});
					if (relInst56201 != null)
						break;
				}
			}
			//synchronized
			if (relInst56201 != null) {
				if (relateProxies || !isProxy()
						|| (inSameComponent(this, relInst56201) && !isProxy())) {
					relInst56201.relateAcrossR1400To(this, notifyChanges);
				}
			}
		}

	}
	public void batchUnrelate(boolean notifyChanges) {
		NonRootModelElement inst = null;
		// R1400
		// EP_PKG
		inst = Package;
		unrelateAcrossR1400From(Package, notifyChanges);
		if (inst != null) {
			inst.removeRef();
		}
	}
	public static void batchRelateAll(ModelRoot modelRoot,
			boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
	}
	public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(SpecificationPackage_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final SpecificationPackage_c inst = (SpecificationPackage_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }
	public static void clearInstances(ModelRoot modelRoot) {
		InstanceList instances = modelRoot
				.getInstanceList(SpecificationPackage_c.class);
		synchronized (instances) {
			for (int i = instances.size() - 1; i >= 0; i--) {
				((NonRootModelElement) instances.get(i)).delete_unchecked();
			}

		}
	}

	public static SpecificationPackage_c SpecificationPackageInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		SpecificationPackage_c result = findSpecificationPackageInstance(
				modelRoot, test, loadComponent);
		if (result == null && loadComponent) {
			List pmcs = PersistenceManager.findAllComponents(modelRoot,
					SpecificationPackage_c.class);
			for (int i = 0; i < pmcs.size(); i++) {
				PersistableModelComponent component = (PersistableModelComponent) pmcs
						.get(i);
				if (!component.isLoaded()) {
					try {
						component.load(new NullProgressMonitor());
						result = findSpecificationPackageInstance(modelRoot,
								test, loadComponent);
						if (result != null)
							return result;
					} catch (Exception e) {
						CorePlugin.logError("Error Loading component", e);
					}
				}
			}
		}
		if (result != null && loadComponent) {
			result.loadProxy();
		}
		return result;
	}
	private static SpecificationPackage_c findSpecificationPackageInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		InstanceList instances = modelRoot
				.getInstanceList(SpecificationPackage_c.class);
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				SpecificationPackage_c x = (SpecificationPackage_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						return x;
				}
			}
		}
		return null;
	}
	public static SpecificationPackage_c SpecificationPackageInstance(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return SpecificationPackageInstance(modelRoot, test, true);
	}

	public static SpecificationPackage_c SpecificationPackageInstance(
			ModelRoot modelRoot) {
		return SpecificationPackageInstance(modelRoot, null, true);
	}

	public static SpecificationPackage_c[] SpecificationPackageInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test,
			boolean loadComponent) {
		if (loadComponent) {
			PersistenceManager.ensureAllInstancesLoaded(modelRoot,
					SpecificationPackage_c.class);
		}
		InstanceList instances = modelRoot
				.getInstanceList(SpecificationPackage_c.class);
		Vector matches = new Vector();
		synchronized (instances) {
			for (int i = 0; i < instances.size(); ++i) {
				SpecificationPackage_c x = (SpecificationPackage_c) instances
						.get(i);
				if (test == null || test.evaluate(x)) {
					if (x.ensureLoaded(loadComponent))
						matches.add(x);
				}
			}
			if (matches.size() > 0) {
				SpecificationPackage_c[] ret_set = new SpecificationPackage_c[matches
						.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new SpecificationPackage_c[0];
			}
		}
	}
	public static SpecificationPackage_c[] SpecificationPackageInstances(
			ModelRoot modelRoot, ClassQueryInterface_c test) {
		return SpecificationPackageInstances(modelRoot, test, true);
	}
	public static SpecificationPackage_c[] SpecificationPackageInstances(
			ModelRoot modelRoot) {
		return SpecificationPackageInstances(modelRoot, null, true);
	}

	public boolean delete() {
		boolean result = super.delete();
		boolean delete_error = false;
		String errorMsg = "The following relationships were not torn down by the Specification Package.dispose call: ";
		Activity_c testR1402Inst1 = Activity_c.getOneA_AOnR1402(this, false);

		if (testR1402Inst1 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1402 ";
		}
		Communication_c testR1402Inst2 = Communication_c
				.getOneCOMM_COMMOnR1402(this, false);

		if (testR1402Inst2 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1402 ";
		}
		ComponentPackage_c testR1402Inst3 = ComponentPackage_c
				.getOneCP_CPOnR1402(this, false);

		if (testR1402Inst3 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1402 ";
		}
		DataTypePackage_c testR1402Inst4 = DataTypePackage_c
				.getOneS_DPKOnR1402(this, false);

		if (testR1402Inst4 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1402 ";
		}
		InterfacePackage_c testR1402Inst5 = InterfacePackage_c
				.getOneIP_IPOnR1402(this, false);

		if (testR1402Inst5 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1402 ";
		}
		UseCaseDiagram_c testR1402Inst6 = UseCaseDiagram_c.getOneUC_UCCOnR1402(
				this, false);

		if (testR1402Inst6 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1402 ";
		}
		Sequence_c testR1402Inst7 = Sequence_c.getOneSQ_SOnR1402(this, false);

		if (testR1402Inst7 != null) {
			delete_error = true;
			errorMsg = errorMsg + "1402 ";
		}
		Package_c testR1400Inst = Package_c.getOneEP_PKGOnR1400(this, false);

		if (testR1400Inst != null) {
			delete_error = true;
			errorMsg = errorMsg + "1400 ";
		}
		if (delete_error == true) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log.println(ILogger.DELETE, "Specification Package",
						errorMsg);
			} else {
				Exception e = new Exception();
				e.fillInStackTrace();
				CorePlugin.logError(errorMsg, e);
			}
		}
		return result;
	}

	/**
	 * Assigns IDs to instances of this class.
	 */
	private static IdAssigner idAssigner = new IdAssigner();

	/**
	 * See field.
	 */
	public IdAssigner getIdAssigner() {
		return idAssigner;
	}

	/**
	 * See field.
	 */
	public static IdAssigner getIdAssigner_() {
		return idAssigner;
	}
	// end declare instance pool

	// declare attribute accessors
	public boolean isUUID(String attributeName) {
		if (attributeName.equals("package_id")) {
			return true;
		}
		if (attributeName.equals("container_package_id")) {
			return true;
		}
		return false;
	}
	public String getCompUniqueID() {
		UUID tempID = null;
		long longID = 0L;
		StringBuffer result = new StringBuffer();

		tempID = getPackage_id();

		result.append(Long.toHexString(tempID.getMostSignificantBits()));
		result.append(Long.toHexString(tempID.getLeastSignificantBits()));
		return result.toString();
	}
	// declare attribute accessors
	public long getPackage_idLongBased() {
		if (m_package_idLongBased == 0
				&& !IdAssigner.NULL_UUID.equals(m_package_id)) {
			return 0xfffffff & m_package_id.getLeastSignificantBits();
		}
		return m_package_idLongBased;
	}
	public java.util.UUID getPackage_id() {
		return m_package_id;
	}

	public void setPackage_id(java.util.UUID newValue) {
		m_package_id = IdAssigner.preprocessUUID(newValue);
	}
	public long getContainer_package_idLongBased() {
		if (Package != null) {
			return Package.getPackage_idLongBased();
		}
		return 0;
	}
	public java.util.UUID getContainer_package_id() {
		if (Package != null) {
			return Package.getPackage_id();
		}
		return IdAssigner.NULL_UUID;
	}

	public java.util.UUID getContainer_package_idCachedValue() {
		if (!IdAssigner.NULL_UUID.equals(m_container_package_id))
			return m_container_package_id;
		else
			return getContainer_package_id();
	}

	public void setContainer_package_id(java.util.UUID newValue) {
		if (newValue != null) {
			if (newValue.equals(m_container_package_id)) {
				return;
			}
		} else if (m_container_package_id != null) {
			if (m_container_package_id.equals(newValue)) {
				return;
			}
		} else {
			return;
		}
		AttributeChangeModelDelta change = new AttributeChangeModelDelta(
				Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this,
				"Container_package_id", m_container_package_id, newValue, true);
		m_container_package_id = IdAssigner.preprocessUUID(newValue);
		Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
	}
	// end declare accessors
	public static void checkClassConsistency(ModelRoot modelRoot) {
		Ooaofooa.log
				.println(ILogger.OPERATION, "Specification Package", //$NON-NLS-1$
						" Operation entered: Specification Package::checkClassConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return;
		}
		SpecificationPackage_c[] objs = SpecificationPackage_c
				.SpecificationPackageInstances(modelRoot, null, false);

		for (int i = 0; i < objs.length; i++) {
			objs[i].checkConsistency();
		}
	}
	public boolean checkConsistency() {
		Ooaofooa.log.println(ILogger.OPERATION, "Specification Package", //$NON-NLS-1$
				" Operation entered: Specification Package::checkConsistency"); //$NON-NLS-1$
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) { //$NON-NLS-1$
			return true;
		}
		ModelRoot modelRoot = getModelRoot();
		boolean retval = true;
		class SpecificationPackage_c_test56203_c
				implements
					ClassQueryInterface_c {
			SpecificationPackage_c_test56203_c(java.util.UUID p56204) {
				m_p56204 = p56204;
			}
			private java.util.UUID m_p56204;
			public boolean evaluate(Object candidate) {
				SpecificationPackage_c selected = (SpecificationPackage_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56204));
				return retval;
			}
		}

		SpecificationPackage_c[] objs56202 = SpecificationPackage_c
				.SpecificationPackageInstances(modelRoot,
						new SpecificationPackage_c_test56203_c(getPackage_id()));

		if (((objs56202.length) == 0)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Specification Package", //$NON-NLS-1$
								"Consistency: Object: Specification Package: Cardinality of an identifier is zero. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs56202.length)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Specification Package: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56202.length), e);
			}
			retval = false;

		}

		if (((objs56202.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Specification Package", //$NON-NLS-1$
								"Consistency: Object: Specification Package: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs56202.length)
										+ " Package_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Specification Package: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56202.length)
										+ " Package_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Specification Package is a referring class in association: rel.Numb = 1400
		// The participating class is: Package
		class Package_c_test56208_c implements ClassQueryInterface_c {
			Package_c_test56208_c(java.util.UUID p56209) {
				m_p56209 = p56209;
			}
			private java.util.UUID m_p56209;
			public boolean evaluate(Object candidate) {
				Package_c selected = (Package_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56209));
				return retval;
			}
		}

		Package_c[] objs56207 = Package_c.PackageInstances(modelRoot,
				new Package_c_test56208_c(getContainer_package_id()));

		if (((objs56207.length) > 1)) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Specification Package", //$NON-NLS-1$
								"Consistency: Object: Specification Package: Association: 1400: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
										+ "Actual Value: " //$NON-NLS-1$ 
										+ Integer.toString(objs56207.length)
										+ " Container_Package_ID: " + "Not Printable"); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Specification Package: Association: 1400: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56207.length)
										+ " Container_Package_ID: " + "Not Printable", e); //$NON-NLS-1$
			}
			retval = false;

		}

		// Supertype: rel.Numb = 1402
		int objs56210 = 0;
		// Subtype Object: Activity
		class Activity_c_test56211_c implements ClassQueryInterface_c {
			Activity_c_test56211_c(java.util.UUID p56212) {
				m_p56212 = p56212;
			}
			private java.util.UUID m_p56212;
			public boolean evaluate(Object candidate) {
				Activity_c selected = (Activity_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56212));
				return retval;
			}
		}

		Activity_c[] objs56213 = Activity_c.ActivityInstances(modelRoot,
				new Activity_c_test56211_c(getPackage_id()));

		objs56210 = objs56210 + objs56213.length;
		// Subtype Object: Communication
		class Communication_c_test56214_c implements ClassQueryInterface_c {
			Communication_c_test56214_c(java.util.UUID p56215) {
				m_p56215 = p56215;
			}
			private java.util.UUID m_p56215;
			public boolean evaluate(Object candidate) {
				Communication_c selected = (Communication_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56215));
				return retval;
			}
		}

		Communication_c[] objs56216 = Communication_c.CommunicationInstances(
				modelRoot, new Communication_c_test56214_c(getPackage_id()));

		objs56210 = objs56210 + objs56216.length;
		// Subtype Object: Component Package
		class ComponentPackage_c_test56217_c implements ClassQueryInterface_c {
			ComponentPackage_c_test56217_c(java.util.UUID p56218) {
				m_p56218 = p56218;
			}
			private java.util.UUID m_p56218;
			public boolean evaluate(Object candidate) {
				ComponentPackage_c selected = (ComponentPackage_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56218));
				return retval;
			}
		}

		ComponentPackage_c[] objs56219 = ComponentPackage_c
				.ComponentPackageInstances(modelRoot,
						new ComponentPackage_c_test56217_c(getPackage_id()));

		objs56210 = objs56210 + objs56219.length;
		// Subtype Object: Data Type Package
		class DataTypePackage_c_test56220_c implements ClassQueryInterface_c {
			DataTypePackage_c_test56220_c(java.util.UUID p56221) {
				m_p56221 = p56221;
			}
			private java.util.UUID m_p56221;
			public boolean evaluate(Object candidate) {
				DataTypePackage_c selected = (DataTypePackage_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56221));
				return retval;
			}
		}

		DataTypePackage_c[] objs56222 = DataTypePackage_c
				.DataTypePackageInstances(modelRoot,
						new DataTypePackage_c_test56220_c(getPackage_id()));

		objs56210 = objs56210 + objs56222.length;
		// Subtype Object: Interface Package
		class InterfacePackage_c_test56223_c implements ClassQueryInterface_c {
			InterfacePackage_c_test56223_c(java.util.UUID p56224) {
				m_p56224 = p56224;
			}
			private java.util.UUID m_p56224;
			public boolean evaluate(Object candidate) {
				InterfacePackage_c selected = (InterfacePackage_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56224));
				return retval;
			}
		}

		InterfacePackage_c[] objs56225 = InterfacePackage_c
				.InterfacePackageInstances(modelRoot,
						new InterfacePackage_c_test56223_c(getPackage_id()));

		objs56210 = objs56210 + objs56225.length;
		// Subtype Object: Use Case Diagram
		class UseCaseDiagram_c_test56226_c implements ClassQueryInterface_c {
			UseCaseDiagram_c_test56226_c(java.util.UUID p56227) {
				m_p56227 = p56227;
			}
			private java.util.UUID m_p56227;
			public boolean evaluate(Object candidate) {
				UseCaseDiagram_c selected = (UseCaseDiagram_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56227));
				return retval;
			}
		}

		UseCaseDiagram_c[] objs56228 = UseCaseDiagram_c
				.UseCaseDiagramInstances(modelRoot,
						new UseCaseDiagram_c_test56226_c(getPackage_id()));

		objs56210 = objs56210 + objs56228.length;
		// Subtype Object: Sequence
		class Sequence_c_test56229_c implements ClassQueryInterface_c {
			Sequence_c_test56229_c(java.util.UUID p56230) {
				m_p56230 = p56230;
			}
			private java.util.UUID m_p56230;
			public boolean evaluate(Object candidate) {
				Sequence_c selected = (Sequence_c) candidate;
				boolean retval = false;
				retval = (selected.getPackage_id().equals(m_p56230));
				return retval;
			}
		}

		Sequence_c[] objs56231 = Sequence_c.SequenceInstances(modelRoot,
				new Sequence_c_test56229_c(getPackage_id()));

		objs56210 = objs56210 + objs56231.length;
		if (objs56210 != 1) {

			if (CorePlugin.getDefault().isDebugging()) {
				Ooaofooa.log
						.println(ILogger.CONSISTENCY,
								"Specification Package", //$NON-NLS-1$
								"Consistency: Object: Specification Package: Association: 1402: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
										+ "Actual Value: " + Integer.toString(objs56210)); //$NON-NLS-1$
			} else {
				Exception e = new Exception();
				CorePlugin
						.logError(
								"Consistency: Object: Specification Package: Association: 1402: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
										+ "Actual Value: " //$NON-NLS-1$
										+ Integer.toString(objs56210), e);
			}
			retval = false;

		}

		return retval;
	}

	// declare transform functions
	public void Dispose() {
		Ooaofooa.log.println(ILogger.OPERATION, "Specification Package",
				" Operation entered: SpecificationPackage::Dispose");
		final ModelRoot modelRoot = getModelRoot();
		Activity_c v_activity = Activity_c.getOneA_AOnR1402(this);

		Communication_c v_communication = Communication_c
				.getOneCOMM_COMMOnR1402(this);

		ComponentPackage_c v_componentPkg = ComponentPackage_c
				.getOneCP_CPOnR1402(this);

		DataTypePackage_c v_dtPkg = DataTypePackage_c.getOneS_DPKOnR1402(this);

		InterfacePackage_c v_interfacePkg = InterfacePackage_c
				.getOneIP_IPOnR1402(this);

		Sequence_c v_sequence = Sequence_c.getOneSQ_SOnR1402(this);

		UseCaseDiagram_c v_useCase = UseCaseDiagram_c.getOneUC_UCCOnR1402(this);

		if (((v_activity != null))) {

			this.unrelateAcrossR1402From(v_activity);

			if (v_activity != null) {
				v_activity.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_communication != null))) {

			this.unrelateAcrossR1402From(v_communication);

			if (v_communication != null) {
				v_communication.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_componentPkg != null))) {

			this.unrelateAcrossR1402From(v_componentPkg);

			if (v_componentPkg != null) {
				v_componentPkg.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_dtPkg != null))) {

			if (v_dtPkg != null) {
				v_dtPkg.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

			this.unrelateAcrossR1402From(v_dtPkg);

		}

		else if (((v_interfacePkg != null))) {

			this.unrelateAcrossR1402From(v_interfacePkg);

			if (v_interfacePkg != null) {
				v_interfacePkg.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_sequence != null))) {

			this.unrelateAcrossR1402From(v_sequence);

			if (v_sequence != null) {
				v_sequence.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		else if (((v_useCase != null))) {

			this.unrelateAcrossR1402From(v_useCase);

			if (v_useCase != null) {
				v_useCase.Dispose();
			} else {
				Throwable t = new Throwable();
				t.fillInStackTrace();
				CorePlugin
						.logError(
								"Attempted to call an operation on a null instance.",
								t);
			}

		}

		Package_c v_containerPackage = Package_c.getOneEP_PKGOnR1400(this);

		if (((v_containerPackage != null))) {

			this.unrelateAcrossR1400From(v_containerPackage);

		}

		if (delete()) {
			Ooaofooa.getDefaultInstance().fireModelElementDeleted(
					new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE,
							this));
		}

	} // End dispose

	// end transform functions

	public Object getAdapter(Class adapter) {
		Object superAdapter = super.getAdapter(adapter);
		if (superAdapter != null) {
			return superAdapter;
		}
		return null;
	}
} // end Specification Package
