      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Activity_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_ACTIVITY extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Activity_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Activity_c(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_ss_id,
       java.util.UUID         p_m_parent_package_id,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_package_id,
       java.util.UUID         p_m_component_id)
  {
    super(modelRoot);
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_parent_package_id = IdAssigner.preprocessUUID(p_m_parent_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
    setUniqueId(m_package_id);
    Object [] key = {m_package_id};
    addInstanceToMap(key);
  }
  static public Activity_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_ss_id,
       java.util.UUID         p_m_parent_package_id,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_package_id,
       java.util.UUID         p_m_component_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Activity_c.class);
      Activity_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_package_id};
          new_inst = (Activity_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_parent_package_id = IdAssigner.preprocessUUID(p_m_parent_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Activity_c(modelRoot,
p_m_package_id,
p_m_name,
p_m_descrip,
p_m_dom_id,
p_m_ss_id,
p_m_parent_package_id,
p_m_sys_id,
p_m_component_package_id,
p_m_component_id
);
		new_inst.m_contentPath = contentPath;
    new_inst.setComponent(null);
	}
    return new_inst;
  }

  static public Activity_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_package_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dom_id,
       java.util.UUID         p_m_ss_id,
       java.util.UUID         p_m_parent_package_id,
       java.util.UUID         p_m_sys_id,
       java.util.UUID         p_m_component_package_id,
       java.util.UUID         p_m_component_id){
    InstanceList instances = modelRoot.getInstanceList(Activity_c.class);
    Activity_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_package_id
            };
        source = (Activity_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dom_id = IdAssigner.preprocessUUID(p_m_dom_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_ss_id = IdAssigner.preprocessUUID(p_m_ss_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sys_id = IdAssigner.preprocessUUID(p_m_sys_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_package_id = IdAssigner.preprocessUUID(p_m_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_package_id = IdAssigner.preprocessUUID(p_m_component_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_parent_package_id = IdAssigner.preprocessUUID(p_m_parent_package_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_component_id = IdAssigner.preprocessUUID(p_m_component_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    Activity_c new_inst = new Activity_c(modelRoot,
p_m_package_id,
p_m_name,
p_m_descrip,
p_m_dom_id,
p_m_ss_id,
p_m_parent_package_id,
p_m_sys_id,
p_m_component_package_id,
p_m_component_id
);
    return new_inst;
  }
  public Activity_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_name = "";   
     m_descrip = "";   
     m_dom_id = IdAssigner.NULL_UUID;   
     m_ss_id = IdAssigner.NULL_UUID;   
     m_sys_id = IdAssigner.NULL_UUID;   
     m_package_id = idAssigner.createUUID();
     m_component_package_id = IdAssigner.NULL_UUID;   
     m_parent_package_id = IdAssigner.NULL_UUID;   
     m_component_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_package_id);
    Object [] key = {m_package_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_package_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_package_id !=  p_newKey ){
	
		m_package_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Activity_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Activity_c)) {
           return false;
       }
       
       Activity_c me = (Activity_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getPackage_id()) || IdAssigner.NULL_UUID.equals(((Activity_c)elem).getPackage_id())) && this != elem)) {
      	return false;
      }
      if (!getPackage_id().equals(((Activity_c)elem).getPackage_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Activity_c)) {
           return false;
       }
       
       Activity_c me = (Activity_c)elem;
      if (!getPackage_idCachedValue().equals(((Activity_c)elem).getPackage_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private String       m_name ;
  private String       m_descrip ;
  private java.util.UUID         m_dom_id ;
  private java.util.UUID         m_ss_id ;
  private java.util.UUID         m_sys_id ;
  private java.util.UUID         m_package_id ;
  private java.util.UUID         m_component_package_id ;
  private java.util.UUID         m_parent_package_id ;
  private java.util.UUID         m_component_id ;
      
// declare association references from this class
  
  
    
// referring navigation

SpecificationPackage_c IsSupertypeSpecificationPackage ;
public void relateAcrossR1402To(SpecificationPackage_c target)
{
	relateAcrossR1402To(target, true);
}
public void relateAcrossR1402To(SpecificationPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypeSpecificationPackage) return;  // already related

    if ( IsSupertypeSpecificationPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypeSpecificationPackage != null) {
    
        IsSupertypeSpecificationPackage.clearBackPointerR1402To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Activity_c.relateAcrossR1402To(SpecificationPackage_c target)", 
			"Relate performed across R1402 from Activity to Specification Package without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypeSpecificationPackage = target ;
        m_package_id = target.getPackage_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1402To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1402", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1402From(SpecificationPackage_c target)
{
	unrelateAcrossR1402From(target, true);
}
public void unrelateAcrossR1402From(SpecificationPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypeSpecificationPackage == null) return;  // already unrelated
	
	if (target != IsSupertypeSpecificationPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1402", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1402To(this);
    }
    

      if(IsSupertypeSpecificationPackage != null) {
      
        m_package_id = IsSupertypeSpecificationPackage.getPackage_id();
        IsSupertypeSpecificationPackage = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1402", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Activity_c getOneA_AOnR1402(SpecificationPackage_c [] targets)
{
    return getOneA_AOnR1402(targets, null);
}

public static Activity_c getOneA_AOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneA_AOnR1402(targets[i], test);
        }
    }

    return ret_val;
}

public static Activity_c getOneA_AOnR1402(SpecificationPackage_c target)
{
  return getOneA_AOnR1402(target, null);
}

public static Activity_c getOneA_AOnR1402(SpecificationPackage_c target, boolean loadComponent)
{
    return getOneA_AOnR1402(target.getModelRoot(), target, null, loadComponent);
}

public static Activity_c getOneA_AOnR1402(SpecificationPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneA_AOnR1402(target.getModelRoot(), target, test);
  }
  return null;
}

public static Activity_c getOneA_AOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test)
{
	return getOneA_AOnR1402(modelRoot, target, test, true);
}

public static Activity_c getOneA_AOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneA_AOnR1402(modelRoot,target,test);
}
private static Activity_c find_getOneA_AOnR1402(ModelRoot modelRoot, SpecificationPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    Activity_c source = (Activity_c)target.backPointer_IsSubtypeActivityIsSubtype_R1402;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static Activity_c [] getManyA_AsOnR1402(SpecificationPackage_c [] targets)
{
  return getManyA_AsOnR1402(targets, null);
}
public static Activity_c [] getManyA_AsOnR1402(SpecificationPackage_c [] targets, boolean loadComponent)
{
  return getManyA_AsOnR1402(targets, null, loadComponent);
}
public static Activity_c [] getManyA_AsOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1402(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1402(SpecificationPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Activity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Activity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      Activity_c source = (Activity_c)targets[i].backPointer_IsSubtypeActivityIsSubtype_R1402;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	Activity_c[] ret_set = new Activity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Activity_c[0];
  }
  }

public static Activity_c [] getManyA_AsOnR1402(SpecificationPackage_c target)
{
  if (target != null) {
    SpecificationPackage_c [] targetArray = new SpecificationPackage_c[1];
    targetArray[0] = target;
    return getManyA_AsOnR1402(targetArray);
  } else {
    Activity_c [] result = new Activity_c [0] ;
  return result ;
}
}

public static Activity_c [] getManyA_AsOnR1402(SpecificationPackage_c target, boolean loadComponent)
{
  if (target != null) {
    SpecificationPackage_c [] targetArray = new SpecificationPackage_c[1];
    targetArray[0] = target;
    return getManyA_AsOnR1402(targetArray, loadComponent);
  } else {
    Activity_c [] result = new Activity_c [0] ;
  return result ;
}
}



  
    
// referring navigation

SystemModel_c SystemModel ;
public void relateAcrossR1113To(SystemModel_c target)
{
	relateAcrossR1113To(target, true);
}
public void relateAcrossR1113To(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == SystemModel) return;  // already related

    if ( SystemModel != target ) {
    
    Object oldKey = getInstanceKey();

    if (SystemModel != null) {
        UmlProblem.removeXtUMLProblem(this, SystemModel);
    
        SystemModel.clearBackPointerR1113To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Activity_c.relateAcrossR1113To(SystemModel_c target)", 
			"Relate performed across R1113 from Activity to System Model without unrelate of prior instance.");  
		}
    }
                
    	SystemModel = target ;
        m_sys_id = target.getSys_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1113To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1113", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1113From(SystemModel_c target)
{
	unrelateAcrossR1113From(target, true);
}
public void unrelateAcrossR1113From(SystemModel_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (SystemModel == null) return;  // already unrelated
	
	if (target != SystemModel) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1113", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1113To(this);
    }
    

      if(SystemModel != null) {
      
        m_sys_id = SystemModel.getSys_id();
        SystemModel = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1113", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Activity_c getOneA_AOnR1113(SystemModel_c [] targets)
{
    return getOneA_AOnR1113(targets, null);
}

public static Activity_c getOneA_AOnR1113(SystemModel_c [] targets, ClassQueryInterface_c test)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneA_AOnR1113(targets[i], test);
        }
    }

    return ret_val;
}

public static Activity_c getOneA_AOnR1113(SystemModel_c target)
{
  return getOneA_AOnR1113(target, null);
}

public static Activity_c getOneA_AOnR1113(SystemModel_c target, boolean loadComponent)
{
    return getOneA_AOnR1113(target.getModelRoot(), target, null, loadComponent);
}

public static Activity_c getOneA_AOnR1113(SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneA_AOnR1113(target.getModelRoot(), target, test);
  }
  return null;
}

public static Activity_c getOneA_AOnR1113(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
	return getOneA_AOnR1113(modelRoot, target, test, true);
}

public static Activity_c getOneA_AOnR1113(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Activity_c result = null;
  
  result=find_getOneA_AOnR1113(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Activity_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneA_AOnR1113(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Activity_c find_getOneA_AOnR1113(ModelRoot modelRoot, SystemModel_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsActivityContains_R1113) {
	    for ( int i = 0; i < target.backPointer_ContainsActivityContains_R1113.size(); ++i ) {
	      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1113.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Activity_c [] getManyA_AsOnR1113(SystemModel_c [] targets)
{
  return getManyA_AsOnR1113(targets, null);
}
public static Activity_c [] getManyA_AsOnR1113(SystemModel_c [] targets, boolean loadComponent)
{
  return getManyA_AsOnR1113(targets, null, loadComponent);
}
public static Activity_c [] getManyA_AsOnR1113(SystemModel_c [] targets, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1113(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1113(SystemModel_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Activity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Activity_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Activity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsActivityContains_R1113) {
	    for (int j = 0; j < targets[i].backPointer_ContainsActivityContains_R1113.size(); ++j) {
	      Activity_c source = (Activity_c)targets[i].backPointer_ContainsActivityContains_R1113.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Activity_c[] ret_set = new Activity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Activity_c[0];
  }
  }

public static Activity_c [] getManyA_AsOnR1113(SystemModel_c target)
{
  return getManyA_AsOnR1113(target, null);
}

public static Activity_c [] getManyA_AsOnR1113(SystemModel_c target, boolean loadComponent)
{
  return getManyA_AsOnR1113(target, null, loadComponent);
}

public static Activity_c [] getManyA_AsOnR1113(SystemModel_c target, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1113(target, test, true);
}

public static Activity_c [] getManyA_AsOnR1113(SystemModel_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Activity_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Activity_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsActivityContains_R1113) {
    for (int i = 0; i < target.backPointer_ContainsActivityContains_R1113.size(); ++i) {
      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1113.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Activity_c[] ret_set = new Activity_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Activity_c[0];
	}
  }


  
    
// referring navigation

Subsystem_c Subsystem ;
public void relateAcrossR1108To(Subsystem_c target)
{
	relateAcrossR1108To(target, true);
}
public void relateAcrossR1108To(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == Subsystem) return;  // already related

    if ( Subsystem != target ) {
    
    Object oldKey = getInstanceKey();

    if (Subsystem != null) {
        UmlProblem.removeXtUMLProblem(this, Subsystem);
    
        Subsystem.clearBackPointerR1108To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Activity_c.relateAcrossR1108To(Subsystem_c target)", 
			"Relate performed across R1108 from Activity to Subsystem without unrelate of prior instance.");  
		}
    }
                
    	Subsystem = target ;
        m_ss_id = target.getSs_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1108To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1108", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1108From(Subsystem_c target)
{
	unrelateAcrossR1108From(target, true);
}
public void unrelateAcrossR1108From(Subsystem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (Subsystem == null) return;  // already unrelated
	
	if (target != Subsystem) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1108", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1108To(this);
    }
    

      if(Subsystem != null) {
      
        m_ss_id = Subsystem.getSs_id();
        Subsystem = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1108", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Activity_c getOneA_AOnR1108(Subsystem_c [] targets)
{
    return getOneA_AOnR1108(targets, null);
}

public static Activity_c getOneA_AOnR1108(Subsystem_c [] targets, ClassQueryInterface_c test)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneA_AOnR1108(targets[i], test);
        }
    }

    return ret_val;
}

public static Activity_c getOneA_AOnR1108(Subsystem_c target)
{
  return getOneA_AOnR1108(target, null);
}

public static Activity_c getOneA_AOnR1108(Subsystem_c target, boolean loadComponent)
{
    return getOneA_AOnR1108(target.getModelRoot(), target, null, loadComponent);
}

public static Activity_c getOneA_AOnR1108(Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneA_AOnR1108(target.getModelRoot(), target, test);
  }
  return null;
}

public static Activity_c getOneA_AOnR1108(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
	return getOneA_AOnR1108(modelRoot, target, test, true);
}

public static Activity_c getOneA_AOnR1108(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Activity_c result = null;
  
  result=find_getOneA_AOnR1108(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Activity_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneA_AOnR1108(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Activity_c find_getOneA_AOnR1108(ModelRoot modelRoot, Subsystem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsActivityContains_R1108) {
	    for ( int i = 0; i < target.backPointer_ContainsActivityContains_R1108.size(); ++i ) {
	      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1108.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Activity_c [] getManyA_AsOnR1108(Subsystem_c [] targets)
{
  return getManyA_AsOnR1108(targets, null);
}
public static Activity_c [] getManyA_AsOnR1108(Subsystem_c [] targets, boolean loadComponent)
{
  return getManyA_AsOnR1108(targets, null, loadComponent);
}
public static Activity_c [] getManyA_AsOnR1108(Subsystem_c [] targets, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1108(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1108(Subsystem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Activity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Activity_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Activity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsActivityContains_R1108) {
	    for (int j = 0; j < targets[i].backPointer_ContainsActivityContains_R1108.size(); ++j) {
	      Activity_c source = (Activity_c)targets[i].backPointer_ContainsActivityContains_R1108.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Activity_c[] ret_set = new Activity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Activity_c[0];
  }
  }

public static Activity_c [] getManyA_AsOnR1108(Subsystem_c target)
{
  return getManyA_AsOnR1108(target, null);
}

public static Activity_c [] getManyA_AsOnR1108(Subsystem_c target, boolean loadComponent)
{
  return getManyA_AsOnR1108(target, null, loadComponent);
}

public static Activity_c [] getManyA_AsOnR1108(Subsystem_c target, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1108(target, test, true);
}

public static Activity_c [] getManyA_AsOnR1108(Subsystem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Activity_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Activity_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsActivityContains_R1108) {
    for (int i = 0; i < target.backPointer_ContainsActivityContains_R1108.size(); ++i) {
      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1108.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Activity_c[] ret_set = new Activity_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Activity_c[0];
	}
  }


  
    
// referring navigation

Domain_c Domain ;
public void relateAcrossR1100To(Domain_c target)
{
	relateAcrossR1100To(target, true);
}
public void relateAcrossR1100To(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == Domain) return;  // already related

    if ( Domain != target ) {
    
    Object oldKey = getInstanceKey();

    if (Domain != null) {
        UmlProblem.removeXtUMLProblem(this, Domain);
    
        Domain.clearBackPointerR1100To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Activity_c.relateAcrossR1100To(Domain_c target)", 
			"Relate performed across R1100 from Activity to Domain without unrelate of prior instance.");  
		}
    }
                
    	Domain = target ;
        m_dom_id = target.getDom_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1100To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1100", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1100From(Domain_c target)
{
	unrelateAcrossR1100From(target, true);
}
public void unrelateAcrossR1100From(Domain_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (Domain == null) return;  // already unrelated
	
	if (target != Domain) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1100", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1100To(this);
    }
    

      if(Domain != null) {
      
        m_dom_id = Domain.getDom_id();
        Domain = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1100", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Activity_c getOneA_AOnR1100(Domain_c [] targets)
{
    return getOneA_AOnR1100(targets, null);
}

public static Activity_c getOneA_AOnR1100(Domain_c [] targets, ClassQueryInterface_c test)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneA_AOnR1100(targets[i], test);
        }
    }

    return ret_val;
}

public static Activity_c getOneA_AOnR1100(Domain_c target)
{
  return getOneA_AOnR1100(target, null);
}

public static Activity_c getOneA_AOnR1100(Domain_c target, boolean loadComponent)
{
    return getOneA_AOnR1100(target.getModelRoot(), target, null, loadComponent);
}

public static Activity_c getOneA_AOnR1100(Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneA_AOnR1100(target.getModelRoot(), target, test);
  }
  return null;
}

public static Activity_c getOneA_AOnR1100(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
	return getOneA_AOnR1100(modelRoot, target, test, true);
}

public static Activity_c getOneA_AOnR1100(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Activity_c result = null;
  
  result=find_getOneA_AOnR1100(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Activity_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneA_AOnR1100(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Activity_c find_getOneA_AOnR1100(ModelRoot modelRoot, Domain_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsActivityContains_R1100) {
	    for ( int i = 0; i < target.backPointer_ContainsActivityContains_R1100.size(); ++i ) {
	      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1100.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Activity_c [] getManyA_AsOnR1100(Domain_c [] targets)
{
  return getManyA_AsOnR1100(targets, null);
}
public static Activity_c [] getManyA_AsOnR1100(Domain_c [] targets, boolean loadComponent)
{
  return getManyA_AsOnR1100(targets, null, loadComponent);
}
public static Activity_c [] getManyA_AsOnR1100(Domain_c [] targets, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1100(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1100(Domain_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Activity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Activity_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Activity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsActivityContains_R1100) {
	    for (int j = 0; j < targets[i].backPointer_ContainsActivityContains_R1100.size(); ++j) {
	      Activity_c source = (Activity_c)targets[i].backPointer_ContainsActivityContains_R1100.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Activity_c[] ret_set = new Activity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Activity_c[0];
  }
  }

public static Activity_c [] getManyA_AsOnR1100(Domain_c target)
{
  return getManyA_AsOnR1100(target, null);
}

public static Activity_c [] getManyA_AsOnR1100(Domain_c target, boolean loadComponent)
{
  return getManyA_AsOnR1100(target, null, loadComponent);
}

public static Activity_c [] getManyA_AsOnR1100(Domain_c target, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1100(target, test, true);
}

public static Activity_c [] getManyA_AsOnR1100(Domain_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Activity_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Activity_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsActivityContains_R1100) {
    for (int i = 0; i < target.backPointer_ContainsActivityContains_R1100.size(); ++i) {
      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1100.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Activity_c[] ret_set = new Activity_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Activity_c[0];
	}
  }


  
    
// referring navigation

Component_c Component ;
public void relateAcrossR1115To(Component_c target)
{
	relateAcrossR1115To(target, true);
}
public void relateAcrossR1115To(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == Component) return;  // already related

    if ( Component != target ) {
    
    Object oldKey = getInstanceKey();

    if (Component != null) {
        UmlProblem.removeXtUMLProblem(this, Component);
    
        Component.clearBackPointerR1115To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Activity_c.relateAcrossR1115To(Component_c target)", 
			"Relate performed across R1115 from Activity to Component without unrelate of prior instance.");  
		}
    }
                
    	Component = target ;
        if(IdAssigner.NULL_UUID.equals(target.getId()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_id = target.getIdCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1115To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1115", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1115From(Component_c target)
{
	unrelateAcrossR1115From(target, true);
}
public void unrelateAcrossR1115From(Component_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (Component == null) return;  // already unrelated
	
	if (target != Component) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1115", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1115To(this);
    }
    

      if(Component != null) {
      
        m_component_id = Component.getId();
        if(IdAssigner.NULL_UUID.equals(m_component_id))
        {
          m_component_id = Component.getIdCachedValue();
        }       
        Component = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1115", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Activity_c getOneA_AOnR1115(Component_c [] targets)
{
    return getOneA_AOnR1115(targets, null);
}

public static Activity_c getOneA_AOnR1115(Component_c [] targets, ClassQueryInterface_c test)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneA_AOnR1115(targets[i], test);
        }
    }

    return ret_val;
}

public static Activity_c getOneA_AOnR1115(Component_c target)
{
  return getOneA_AOnR1115(target, null);
}

public static Activity_c getOneA_AOnR1115(Component_c target, boolean loadComponent)
{
    return getOneA_AOnR1115(target.getModelRoot(), target, null, loadComponent);
}

public static Activity_c getOneA_AOnR1115(Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneA_AOnR1115(target.getModelRoot(), target, test);
  }
  return null;
}

public static Activity_c getOneA_AOnR1115(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
	return getOneA_AOnR1115(modelRoot, target, test, true);
}

public static Activity_c getOneA_AOnR1115(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Activity_c result = null;
  
  result=find_getOneA_AOnR1115(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Activity_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneA_AOnR1115(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Activity_c find_getOneA_AOnR1115(ModelRoot modelRoot, Component_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsActivityContains_R1115) {
	    for ( int i = 0; i < target.backPointer_ContainsActivityContains_R1115.size(); ++i ) {
	      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1115.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Activity_c [] getManyA_AsOnR1115(Component_c [] targets)
{
  return getManyA_AsOnR1115(targets, null);
}
public static Activity_c [] getManyA_AsOnR1115(Component_c [] targets, boolean loadComponent)
{
  return getManyA_AsOnR1115(targets, null, loadComponent);
}
public static Activity_c [] getManyA_AsOnR1115(Component_c [] targets, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1115(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1115(Component_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Activity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Activity_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Activity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsActivityContains_R1115) {
	    for (int j = 0; j < targets[i].backPointer_ContainsActivityContains_R1115.size(); ++j) {
	      Activity_c source = (Activity_c)targets[i].backPointer_ContainsActivityContains_R1115.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Activity_c[] ret_set = new Activity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Activity_c[0];
  }
  }

public static Activity_c [] getManyA_AsOnR1115(Component_c target)
{
  return getManyA_AsOnR1115(target, null);
}

public static Activity_c [] getManyA_AsOnR1115(Component_c target, boolean loadComponent)
{
  return getManyA_AsOnR1115(target, null, loadComponent);
}

public static Activity_c [] getManyA_AsOnR1115(Component_c target, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1115(target, test, true);
}

public static Activity_c [] getManyA_AsOnR1115(Component_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Activity_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Activity_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsActivityContains_R1115) {
    for (int i = 0; i < target.backPointer_ContainsActivityContains_R1115.size(); ++i) {
      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1115.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Activity_c[] ret_set = new Activity_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Activity_c[0];
	}
  }


  
    
// referring navigation

ComponentPackage_c ComponentPackage ;
public void relateAcrossR1114To(ComponentPackage_c target)
{
	relateAcrossR1114To(target, true);
}
public void relateAcrossR1114To(ComponentPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ComponentPackage) return;  // already related

    if ( ComponentPackage != target ) {
    
    Object oldKey = getInstanceKey();

    if (ComponentPackage != null) {
        UmlProblem.removeXtUMLProblem(this, ComponentPackage);
    
        ComponentPackage.clearBackPointerR1114To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Activity_c.relateAcrossR1114To(ComponentPackage_c target)", 
			"Relate performed across R1114 from Activity to Component Package without unrelate of prior instance.");  
		}
    }
                
    	ComponentPackage = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_component_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1114To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1114", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1114From(ComponentPackage_c target)
{
	unrelateAcrossR1114From(target, true);
}
public void unrelateAcrossR1114From(ComponentPackage_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ComponentPackage == null) return;  // already unrelated
	
	if (target != ComponentPackage) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1114", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1114To(this);
    }
    

      if(ComponentPackage != null) {
      
        m_component_package_id = ComponentPackage.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_component_package_id))
        {
          m_component_package_id = ComponentPackage.getPackage_idCachedValue();
        }       
        ComponentPackage = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1114", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Activity_c getOneA_AOnR1114(ComponentPackage_c [] targets)
{
    return getOneA_AOnR1114(targets, null);
}

public static Activity_c getOneA_AOnR1114(ComponentPackage_c [] targets, ClassQueryInterface_c test)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneA_AOnR1114(targets[i], test);
        }
    }

    return ret_val;
}

public static Activity_c getOneA_AOnR1114(ComponentPackage_c target)
{
  return getOneA_AOnR1114(target, null);
}

public static Activity_c getOneA_AOnR1114(ComponentPackage_c target, boolean loadComponent)
{
    return getOneA_AOnR1114(target.getModelRoot(), target, null, loadComponent);
}

public static Activity_c getOneA_AOnR1114(ComponentPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneA_AOnR1114(target.getModelRoot(), target, test);
  }
  return null;
}

public static Activity_c getOneA_AOnR1114(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test)
{
	return getOneA_AOnR1114(modelRoot, target, test, true);
}

public static Activity_c getOneA_AOnR1114(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Activity_c result = null;
  
  result=find_getOneA_AOnR1114(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Activity_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneA_AOnR1114(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Activity_c find_getOneA_AOnR1114(ModelRoot modelRoot, ComponentPackage_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsActivityContains_R1114) {
	    for ( int i = 0; i < target.backPointer_ContainsActivityContains_R1114.size(); ++i ) {
	      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1114.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Activity_c [] getManyA_AsOnR1114(ComponentPackage_c [] targets)
{
  return getManyA_AsOnR1114(targets, null);
}
public static Activity_c [] getManyA_AsOnR1114(ComponentPackage_c [] targets, boolean loadComponent)
{
  return getManyA_AsOnR1114(targets, null, loadComponent);
}
public static Activity_c [] getManyA_AsOnR1114(ComponentPackage_c [] targets, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1114(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1114(ComponentPackage_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Activity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Activity_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Activity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsActivityContains_R1114) {
	    for (int j = 0; j < targets[i].backPointer_ContainsActivityContains_R1114.size(); ++j) {
	      Activity_c source = (Activity_c)targets[i].backPointer_ContainsActivityContains_R1114.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Activity_c[] ret_set = new Activity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Activity_c[0];
  }
  }

public static Activity_c [] getManyA_AsOnR1114(ComponentPackage_c target)
{
  return getManyA_AsOnR1114(target, null);
}

public static Activity_c [] getManyA_AsOnR1114(ComponentPackage_c target, boolean loadComponent)
{
  return getManyA_AsOnR1114(target, null, loadComponent);
}

public static Activity_c [] getManyA_AsOnR1114(ComponentPackage_c target, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1114(target, test, true);
}

public static Activity_c [] getManyA_AsOnR1114(ComponentPackage_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Activity_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Activity_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsActivityContains_R1114) {
    for (int i = 0; i < target.backPointer_ContainsActivityContains_R1114.size(); ++i) {
      Activity_c source = (Activity_c)target.backPointer_ContainsActivityContains_R1114.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Activity_c[] ret_set = new Activity_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Activity_c[0];
	}
  }


  
    
// referring navigation

ActivityInActivity_c ActivityInActivity ;
public void relateAcrossR1110To(ActivityInActivity_c target)
{
	relateAcrossR1110To(target, true);
}
public void relateAcrossR1110To(ActivityInActivity_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == ActivityInActivity) return;  // already related

    if ( ActivityInActivity != target ) {
    
    Object oldKey = getInstanceKey();

    if (ActivityInActivity != null) {
        UmlProblem.removeXtUMLProblem(this, ActivityInActivity);
    
        ActivityInActivity.clearBackPointerR1110To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Activity_c.relateAcrossR1110To(ActivityInActivity_c target)", 
			"Relate performed across R1110 from Activity to Activity In Activity without unrelate of prior instance.");  
		}
    }
                
    	ActivityInActivity = target ;
        if(IdAssigner.NULL_UUID.equals(target.getPackage_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_parent_package_id = target.getPackage_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR1110To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "1110", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR1110From(ActivityInActivity_c target)
{
	unrelateAcrossR1110From(target, true);
}
public void unrelateAcrossR1110From(ActivityInActivity_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (ActivityInActivity == null) return;  // already unrelated
	
	if (target != ActivityInActivity) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R1110", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR1110To(this);
    }
    

      if(ActivityInActivity != null) {
      
        m_parent_package_id = ActivityInActivity.getPackage_id();
        if(IdAssigner.NULL_UUID.equals(m_parent_package_id))
        {
          m_parent_package_id = ActivityInActivity.getPackage_idCachedValue();
        }       
        ActivityInActivity = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "1110", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Activity_c getOneA_AOnR1110(ActivityInActivity_c [] targets)
{
    return getOneA_AOnR1110(targets, null);
}

public static Activity_c getOneA_AOnR1110(ActivityInActivity_c [] targets, ClassQueryInterface_c test)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneA_AOnR1110(targets[i], test);
        }
    }

    return ret_val;
}

public static Activity_c getOneA_AOnR1110(ActivityInActivity_c target)
{
  return getOneA_AOnR1110(target, null);
}

public static Activity_c getOneA_AOnR1110(ActivityInActivity_c target, boolean loadComponent)
{
    return getOneA_AOnR1110(target.getModelRoot(), target, null, loadComponent);
}

public static Activity_c getOneA_AOnR1110(ActivityInActivity_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneA_AOnR1110(target.getModelRoot(), target, test);
  }
  return null;
}

public static Activity_c getOneA_AOnR1110(ModelRoot modelRoot, ActivityInActivity_c target, ClassQueryInterface_c test)
{
	return getOneA_AOnR1110(modelRoot, target, test, true);
}

public static Activity_c getOneA_AOnR1110(ModelRoot modelRoot, ActivityInActivity_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  Activity_c result = null;
  
  result=find_getOneA_AOnR1110(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // Containment Relation
     List comps =  PersistenceManager.findAllChildComponents(target.getPersistableComponent(),modelRoot,Activity_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneA_AOnR1110(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static Activity_c find_getOneA_AOnR1110(ModelRoot modelRoot, ActivityInActivity_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_HasChildrenActivityHasChildren_R1110) {
	    for ( int i = 0; i < target.backPointer_HasChildrenActivityHasChildren_R1110.size(); ++i ) {
	      Activity_c source = (Activity_c)target.backPointer_HasChildrenActivityHasChildren_R1110.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Activity_c [] getManyA_AsOnR1110(ActivityInActivity_c [] targets)
{
  return getManyA_AsOnR1110(targets, null);
}
public static Activity_c [] getManyA_AsOnR1110(ActivityInActivity_c [] targets, boolean loadComponent)
{
  return getManyA_AsOnR1110(targets, null, loadComponent);
}
public static Activity_c [] getManyA_AsOnR1110(ActivityInActivity_c [] targets, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1110(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1110(ActivityInActivity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Activity_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //Containment Relation
     PersistableModelComponent[] pmcs= new PersistableModelComponent[targets.length];
            for (int i = 0; i < targets.length; i++) {
               pmcs[i]=targets[i].getPersistableComponent();
            }
	 PersistenceManager.ensureAllChildInstancesLoaded(pmcs,modelRoot, Activity_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(Activity_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_HasChildrenActivityHasChildren_R1110) {
	    for (int j = 0; j < targets[i].backPointer_HasChildrenActivityHasChildren_R1110.size(); ++j) {
	      Activity_c source = (Activity_c)targets[i].backPointer_HasChildrenActivityHasChildren_R1110.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Activity_c[] ret_set = new Activity_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Activity_c[0];
  }
  }

public static Activity_c [] getManyA_AsOnR1110(ActivityInActivity_c target)
{
  return getManyA_AsOnR1110(target, null);
}

public static Activity_c [] getManyA_AsOnR1110(ActivityInActivity_c target, boolean loadComponent)
{
  return getManyA_AsOnR1110(target, null, loadComponent);
}

public static Activity_c [] getManyA_AsOnR1110(ActivityInActivity_c target, ClassQueryInterface_c test)
{
	return getManyA_AsOnR1110(target, test, true);
}

public static Activity_c [] getManyA_AsOnR1110(ActivityInActivity_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Activity_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //Containment Relation
 	 PersistenceManager.ensureAllChildInstancesLoaded(target.getPersistableComponent(),modelRoot, Activity_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_HasChildrenActivityHasChildren_R1110) {
    for (int i = 0; i < target.backPointer_HasChildrenActivityHasChildren_R1110.size(); ++i) {
      Activity_c source = (Activity_c)target.backPointer_HasChildrenActivityHasChildren_R1110.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Activity_c[] ret_set = new Activity_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Activity_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<ActivityPartition_c> backPointer_GroupActivityPartitionGroup_R1111 = new ArrayList<ActivityPartition_c>();

public void setActivityPartitionOrderInChildListR1111(ActivityPartition_c target, int index) {
	unrelateAcrossR1111From(target);
	ActivityPartition_c[] elements = ActivityPartition_c.getManyA_APsOnR1111(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1111From((ActivityPartition_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1111To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1111To((ActivityPartition_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1111To(ActivityPartition_c target)
{
  if (target != null) {
    target.relateAcrossR1111To(this, true) ;
  }
}

public void relateAcrossR1111To(ActivityPartition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1111To(this, notifyChanges) ;
  }
}

public void setBackPointerR1111To(ActivityPartition_c target)
{
  	synchronized (backPointer_GroupActivityPartitionGroup_R1111) {
		backPointer_GroupActivityPartitionGroup_R1111.add(target);
	}
}

public void unrelateAcrossR1111From(ActivityPartition_c target)
{
  if (target != null) {
    target.unrelateAcrossR1111From(this, true) ;
  }
}

public void unrelateAcrossR1111From(ActivityPartition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1111From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1111To(ActivityPartition_c target)
{
  synchronized (backPointer_GroupActivityPartitionGroup_R1111) {
	    backPointer_GroupActivityPartitionGroup_R1111.remove(target);
	}
}

public static Activity_c getOneA_AOnR1111(ActivityPartition_c [] targets)
{
    return getOneA_AOnR1111(targets, null);
}

public static Activity_c getOneA_AOnR1111(ActivityPartition_c [] targets, ClassQueryInterface_c test)
{
    return getOneA_AOnR1111(targets, test, true);
}

public static Activity_c getOneA_AOnR1111(ActivityPartition_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Activity_c candidate_val = getOneA_AOnR1111(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneA_AOnR1111(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Activity_c getOneA_AOnR1111(ActivityPartition_c target)
{
	return getOneA_AOnR1111(target, true);
}
public static Activity_c getOneA_AOnR1111(ActivityPartition_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.Activity ;
  } else {
    return null;
  }
}

public static Activity_c [] getManyA_AsOnR1111(ActivityPartition_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyA_AsOnR1111(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1111(ActivityPartition_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Activity_c[0];
  
  
  LinkedHashSet<Activity_c> elementsSet = new LinkedHashSet<Activity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].Activity == null)
	  targets[i].loadProxy();
    Activity_c associate = targets[i].Activity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Activity_c[] result = new Activity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Activity_c [] getManyA_AsOnR1111(ActivityPartition_c [] targets)
{
  return getManyA_AsOnR1111(targets, null);
}

public static Activity_c [] getManyA_AsOnR1111(ActivityPartition_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ActivityPartition_c [] targetArray = new ActivityPartition_c[1];
    targetArray[0] = target;
    return getManyA_AsOnR1111(targetArray, test, loadComponent);
  } else {
    Activity_c [] result = new Activity_c [0] ;
    return result ;
  }
  
}

public static Activity_c [] getManyA_AsOnR1111(ActivityPartition_c target,
    ClassQueryInterface_c test)
{
    return getManyA_AsOnR1111(target, null, true);
}

public static Activity_c [] getManyA_AsOnR1111(ActivityPartition_c target)
{
    return getManyA_AsOnR1111(target, null, true);
}

public static Activity_c [] getManyA_AsOnR1111(ActivityPartition_c target, boolean loadComponent)
{
    return getManyA_AsOnR1111(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ActivityNode_c> backPointer_ContainedNodeActivityNodeContainedNode_R1101 = new ArrayList<ActivityNode_c>();

public void setActivityNodeOrderInChildListR1101(ActivityNode_c target, int index) {
	unrelateAcrossR1101From(target);
	ActivityNode_c[] elements = ActivityNode_c.getManyA_NsOnR1101(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1101From((ActivityNode_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1101To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1101To((ActivityNode_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1101To(ActivityNode_c target)
{
  if (target != null) {
    target.relateAcrossR1101To(this, true) ;
  }
}

public void relateAcrossR1101To(ActivityNode_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1101To(this, notifyChanges) ;
  }
}

public void setBackPointerR1101To(ActivityNode_c target)
{
  	synchronized (backPointer_ContainedNodeActivityNodeContainedNode_R1101) {
		backPointer_ContainedNodeActivityNodeContainedNode_R1101.add(target);
	}
}

public void unrelateAcrossR1101From(ActivityNode_c target)
{
  if (target != null) {
    target.unrelateAcrossR1101From(this, true) ;
  }
}

public void unrelateAcrossR1101From(ActivityNode_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1101From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1101To(ActivityNode_c target)
{
  synchronized (backPointer_ContainedNodeActivityNodeContainedNode_R1101) {
	    backPointer_ContainedNodeActivityNodeContainedNode_R1101.remove(target);
	}
}

public static Activity_c getOneA_AOnR1101(ActivityNode_c [] targets)
{
    return getOneA_AOnR1101(targets, null);
}

public static Activity_c getOneA_AOnR1101(ActivityNode_c [] targets, ClassQueryInterface_c test)
{
    return getOneA_AOnR1101(targets, test, true);
}

public static Activity_c getOneA_AOnR1101(ActivityNode_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Activity_c candidate_val = getOneA_AOnR1101(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneA_AOnR1101(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Activity_c getOneA_AOnR1101(ActivityNode_c target)
{
	return getOneA_AOnR1101(target, true);
}
public static Activity_c getOneA_AOnR1101(ActivityNode_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.Activity ;
  } else {
    return null;
  }
}

public static Activity_c [] getManyA_AsOnR1101(ActivityNode_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyA_AsOnR1101(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1101(ActivityNode_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Activity_c[0];
  
  
  LinkedHashSet<Activity_c> elementsSet = new LinkedHashSet<Activity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].Activity == null)
	  targets[i].loadProxy();
    Activity_c associate = targets[i].Activity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Activity_c[] result = new Activity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Activity_c [] getManyA_AsOnR1101(ActivityNode_c [] targets)
{
  return getManyA_AsOnR1101(targets, null);
}

public static Activity_c [] getManyA_AsOnR1101(ActivityNode_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ActivityNode_c [] targetArray = new ActivityNode_c[1];
    targetArray[0] = target;
    return getManyA_AsOnR1101(targetArray, test, loadComponent);
  } else {
    Activity_c [] result = new Activity_c [0] ;
    return result ;
  }
  
}

public static Activity_c [] getManyA_AsOnR1101(ActivityNode_c target,
    ClassQueryInterface_c test)
{
    return getManyA_AsOnR1101(target, null, true);
}

public static Activity_c [] getManyA_AsOnR1101(ActivityNode_c target)
{
    return getManyA_AsOnR1101(target, null, true);
}

public static Activity_c [] getManyA_AsOnR1101(ActivityNode_c target, boolean loadComponent)
{
    return getManyA_AsOnR1101(target, null, loadComponent);
}


    
  
  
// referred to navigation

ActivityInActivity_c backPointer_IsParentViaActivityInActivityIsParentVia_R1109;

public void setActivityInActivityOrderInChildListR1109(ActivityInActivity_c target, int index) {
	unrelateAcrossR1109From(target);
	ActivityInActivity_c[] elements = ActivityInActivity_c.getManyA_AIAsOnR1109(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1109From((ActivityInActivity_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1109To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1109To((ActivityInActivity_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1109To(ActivityInActivity_c target)
{
  if (target != null) {
    target.relateAcrossR1109To(this, true) ;
  }
}

public void relateAcrossR1109To(ActivityInActivity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1109To(this, notifyChanges) ;
  }
}

public void setBackPointerR1109To(ActivityInActivity_c target)
{
    backPointer_IsParentViaActivityInActivityIsParentVia_R1109 = target;
}

public void unrelateAcrossR1109From(ActivityInActivity_c target)
{
  if (target != null) {
    target.unrelateAcrossR1109From(this, true) ;
  }
}

public void unrelateAcrossR1109From(ActivityInActivity_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1109From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1109To(ActivityInActivity_c target)
{
	if (target == backPointer_IsParentViaActivityInActivityIsParentVia_R1109) {
		backPointer_IsParentViaActivityInActivityIsParentVia_R1109 = null;
	}
}

public static Activity_c getOneA_AOnR1109(ActivityInActivity_c [] targets)
{
    return getOneA_AOnR1109(targets, null);
}

public static Activity_c getOneA_AOnR1109(ActivityInActivity_c [] targets, ClassQueryInterface_c test)
{
    return getOneA_AOnR1109(targets, test, true);
}

public static Activity_c getOneA_AOnR1109(ActivityInActivity_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Activity_c candidate_val = getOneA_AOnR1109(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneA_AOnR1109(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Activity_c getOneA_AOnR1109(ActivityInActivity_c target)
{
	return getOneA_AOnR1109(target, true);
}
public static Activity_c getOneA_AOnR1109(ActivityInActivity_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.Activity ;
  } else {
    return null;
  }
}

public static Activity_c [] getManyA_AsOnR1109(ActivityInActivity_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyA_AsOnR1109(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1109(ActivityInActivity_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Activity_c[0];
  
  
  LinkedHashSet<Activity_c> elementsSet = new LinkedHashSet<Activity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].Activity == null)
	  targets[i].loadProxy();
    Activity_c associate = targets[i].Activity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Activity_c[] result = new Activity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Activity_c [] getManyA_AsOnR1109(ActivityInActivity_c [] targets)
{
  return getManyA_AsOnR1109(targets, null);
}

public static Activity_c [] getManyA_AsOnR1109(ActivityInActivity_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ActivityInActivity_c [] targetArray = new ActivityInActivity_c[1];
    targetArray[0] = target;
    return getManyA_AsOnR1109(targetArray, test, loadComponent);
  } else {
    Activity_c [] result = new Activity_c [0] ;
    return result ;
  }
  
}

public static Activity_c [] getManyA_AsOnR1109(ActivityInActivity_c target,
    ClassQueryInterface_c test)
{
    return getManyA_AsOnR1109(target, null, true);
}

public static Activity_c [] getManyA_AsOnR1109(ActivityInActivity_c target)
{
    return getManyA_AsOnR1109(target, null, true);
}

public static Activity_c [] getManyA_AsOnR1109(ActivityInActivity_c target, boolean loadComponent)
{
    return getManyA_AsOnR1109(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ActivityEdge_c> backPointer_ContainedEdgeActivityEdgeContainedEdge_R1102 = new ArrayList<ActivityEdge_c>();

public void setActivityEdgeOrderInChildListR1102(ActivityEdge_c target, int index) {
	unrelateAcrossR1102From(target);
	ActivityEdge_c[] elements = ActivityEdge_c.getManyA_EsOnR1102(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1102From((ActivityEdge_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1102To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1102To((ActivityEdge_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1102To(ActivityEdge_c target)
{
  if (target != null) {
    target.relateAcrossR1102To(this, true) ;
  }
}

public void relateAcrossR1102To(ActivityEdge_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1102To(this, notifyChanges) ;
  }
}

public void setBackPointerR1102To(ActivityEdge_c target)
{
  	synchronized (backPointer_ContainedEdgeActivityEdgeContainedEdge_R1102) {
		backPointer_ContainedEdgeActivityEdgeContainedEdge_R1102.add(target);
	}
}

public void unrelateAcrossR1102From(ActivityEdge_c target)
{
  if (target != null) {
    target.unrelateAcrossR1102From(this, true) ;
  }
}

public void unrelateAcrossR1102From(ActivityEdge_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1102From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1102To(ActivityEdge_c target)
{
  synchronized (backPointer_ContainedEdgeActivityEdgeContainedEdge_R1102) {
	    backPointer_ContainedEdgeActivityEdgeContainedEdge_R1102.remove(target);
	}
}

public static Activity_c getOneA_AOnR1102(ActivityEdge_c [] targets)
{
    return getOneA_AOnR1102(targets, null);
}

public static Activity_c getOneA_AOnR1102(ActivityEdge_c [] targets, ClassQueryInterface_c test)
{
    return getOneA_AOnR1102(targets, test, true);
}

public static Activity_c getOneA_AOnR1102(ActivityEdge_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Activity_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Activity_c candidate_val = getOneA_AOnR1102(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneA_AOnR1102(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Activity_c getOneA_AOnR1102(ActivityEdge_c target)
{
	return getOneA_AOnR1102(target, true);
}
public static Activity_c getOneA_AOnR1102(ActivityEdge_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.Activity ;
  } else {
    return null;
  }
}

public static Activity_c [] getManyA_AsOnR1102(ActivityEdge_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyA_AsOnR1102(targets, test, true);
}

public static Activity_c [] getManyA_AsOnR1102(ActivityEdge_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Activity_c[0];
  
  
  LinkedHashSet<Activity_c> elementsSet = new LinkedHashSet<Activity_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].Activity == null)
	  targets[i].loadProxy();
    Activity_c associate = targets[i].Activity;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Activity_c[] result = new Activity_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Activity_c [] getManyA_AsOnR1102(ActivityEdge_c [] targets)
{
  return getManyA_AsOnR1102(targets, null);
}

public static Activity_c [] getManyA_AsOnR1102(ActivityEdge_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ActivityEdge_c [] targetArray = new ActivityEdge_c[1];
    targetArray[0] = target;
    return getManyA_AsOnR1102(targetArray, test, loadComponent);
  } else {
    Activity_c [] result = new Activity_c [0] ;
    return result ;
  }
  
}

public static Activity_c [] getManyA_AsOnR1102(ActivityEdge_c target,
    ClassQueryInterface_c test)
{
    return getManyA_AsOnR1102(target, null, true);
}

public static Activity_c [] getManyA_AsOnR1102(ActivityEdge_c target)
{
    return getManyA_AsOnR1102(target, null, true);
}

public static Activity_c [] getManyA_AsOnR1102(ActivityEdge_c target, boolean loadComponent)
{
    return getManyA_AsOnR1102(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R1402
      SpecificationPackage_c relInst58624 = (SpecificationPackage_c) baseRoot.getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58624 == null) {
      			relInst58624 = (SpecificationPackage_c) Ooaofooa.getDefaultInstance().getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
      		}
			if (relInst58624 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58624 = (SpecificationPackage_c) roots[i].getInstanceList(SpecificationPackage_c.class).get(new Object[] {m_package_id});
					if (relInst58624 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58624 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58624) && !isProxy())) {
	      relInst58624.relateAcrossR1402To(this, notifyChanges);
	  }
	  }
	          

	if (SystemModel == null) {          
      // R1113
      baseRoot = Ooaofooa.getDefaultInstance();
      if(baseRoot != modelRoot && modelRoot.isCompareRoot()) {
        baseRoot = modelRoot; 
      }
      SystemModel_c relInst58625 = (SystemModel_c) baseRoot.getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58625 == null) {
      			relInst58625 = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
      		}
			if (relInst58625 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58625 = (SystemModel_c) roots[i].getInstanceList(SystemModel_c.class).get(new Object[] {m_sys_id});
					if (relInst58625 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58625 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58625) && !isProxy())) {
	      relInst58625.relateAcrossR1113To(this, notifyChanges);
	  }
	      // set the root in the Domain's model root, not the System Model's
	      // modelRoot is the SystemModel's root when we are loading a Domain proxy
	      ((Ooaofooa)getModelRoot()).setRoot(relInst58625);
	  }
          baseRoot = modelRoot;
	}
	          

	if (Subsystem == null) {          
      // R1108
      Subsystem_c relInst58626 = (Subsystem_c) baseRoot.getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58626 == null) {
      			relInst58626 = (Subsystem_c) Ooaofooa.getDefaultInstance().getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
      		}
			if (relInst58626 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58626 = (Subsystem_c) roots[i].getInstanceList(Subsystem_c.class).get(new Object[] {m_ss_id});
					if (relInst58626 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58626 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58626) && !isProxy())) {
	      relInst58626.relateAcrossR1108To(this, notifyChanges);
	  }
	  }
	}
	          

	if (Domain == null) {          
      // R1100
      Domain_c relInst58627 = (Domain_c) baseRoot.getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58627 == null) {
      			relInst58627 = (Domain_c) Ooaofooa.getDefaultInstance().getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
      		}
			if (relInst58627 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58627 = (Domain_c) roots[i].getInstanceList(Domain_c.class).get(new Object[] {m_dom_id});
					if (relInst58627 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58627 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58627) && !isProxy())) {
	      relInst58627.relateAcrossR1100To(this, notifyChanges);
	  }
	  }
	}
	          

	if (Component == null) {          
      // R1115
      Component_c relInst58628 = (Component_c) baseRoot.getInstanceList(Component_c.class).get(new Object[] {m_component_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58628 == null) {
      			relInst58628 = (Component_c) Ooaofooa.getDefaultInstance().getInstanceList(Component_c.class).get(new Object[] {m_component_id});
      		}
			if (relInst58628 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58628 = (Component_c) roots[i].getInstanceList(Component_c.class).get(new Object[] {m_component_id});
					if (relInst58628 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58628 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58628) && !isProxy())) {
	      relInst58628.relateAcrossR1115To(this, notifyChanges);
	  }
	  }
	}
	          

	if (ComponentPackage == null) {          
      // R1114
      ComponentPackage_c relInst58629 = (ComponentPackage_c) baseRoot.getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58629 == null) {
      			relInst58629 = (ComponentPackage_c) Ooaofooa.getDefaultInstance().getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
      		}
			if (relInst58629 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58629 = (ComponentPackage_c) roots[i].getInstanceList(ComponentPackage_c.class).get(new Object[] {m_component_package_id});
					if (relInst58629 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58629 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58629) && !isProxy())) {
	      relInst58629.relateAcrossR1114To(this, notifyChanges);
	  }
	  }
	}
	          

	if (ActivityInActivity == null) {          
      // R1110
      ActivityInActivity_c relInst58630 = (ActivityInActivity_c) baseRoot.getInstanceList(ActivityInActivity_c.class).get(new Object[] {m_parent_package_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst58630 == null) {
      			relInst58630 = (ActivityInActivity_c) Ooaofooa.getDefaultInstance().getInstanceList(ActivityInActivity_c.class).get(new Object[] {m_parent_package_id});
      		}
			if (relInst58630 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst58630 = (ActivityInActivity_c) roots[i].getInstanceList(ActivityInActivity_c.class).get(new Object[] {m_parent_package_id});
					if (relInst58630 != null)
						break;
				}
			}
			//synchronized
      if ( relInst58630 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst58630) && !isProxy())) {
	      relInst58630.relateAcrossR1110To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R1402
      // EP_SPKG
		  inst=IsSupertypeSpecificationPackage;
			unrelateAcrossR1402From(IsSupertypeSpecificationPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R1113
      // S_SYS
		  inst=SystemModel;
			unrelateAcrossR1113From(SystemModel, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R1108
      // S_SS
		  inst=Subsystem;
			unrelateAcrossR1108From(Subsystem, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R1100
      // S_DOM
		  inst=Domain;
			unrelateAcrossR1100From(Domain, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R1115
      // C_C
		  inst=Component;
			unrelateAcrossR1115From(Component, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R1114
      // CP_CP
		  inst=ComponentPackage;
			unrelateAcrossR1114From(ComponentPackage, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R1110
      // A_AIA
		  inst=ActivityInActivity;
			unrelateAcrossR1110From(ActivityInActivity, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Activity_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Activity_c inst = (Activity_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Activity_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Activity_c ActivityInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Activity_c result=findActivityInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Activity_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findActivityInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Activity_c findActivityInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Activity_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Activity_c x = (Activity_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Activity_c ActivityInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return ActivityInstance(modelRoot,test,true);
  }
  
  public static Activity_c ActivityInstance(ModelRoot modelRoot)
  {
	 return ActivityInstance(modelRoot,null,true);
  }

  public static Activity_c [] ActivityInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Activity_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Activity_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Activity_c x = (Activity_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Activity_c[] ret_set = new Activity_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Activity_c[0];
			}		
		} 
  }
  public static Activity_c [] ActivityInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  ActivityInstances(modelRoot,test,true);
  }
  public static Activity_c [] ActivityInstances(ModelRoot modelRoot)
  {
	return ActivityInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Activity.dispose call: ";
	SpecificationPackage_c testR1402Inst1 = SpecificationPackage_c.getOneEP_SPKGOnR1402(this, false);

	if ( testR1402Inst1 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "1402 ";
	}
	SystemModel_c testR1113Inst = SystemModel_c.getOneS_SYSOnR1113(this, false);

	if ( testR1113Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "1113 ";
	}
	Subsystem_c testR1108Inst = Subsystem_c.getOneS_SSOnR1108(this, false);

	if ( testR1108Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "1108 ";
	}
	Domain_c testR1100Inst = Domain_c.getOneS_DOMOnR1100(this, false);

	if ( testR1100Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "1100 ";
	}
	Component_c testR1115Inst = Component_c.getOneC_COnR1115(this, false);

	if ( testR1115Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "1115 ";
	}
	ComponentPackage_c testR1114Inst = ComponentPackage_c.getOneCP_CPOnR1114(this, false);

	if ( testR1114Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "1114 ";
	}
	ActivityPartition_c testR1111Inst = ActivityPartition_c.getOneA_APOnR1111(this, false);

	if ( testR1111Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1111 ";	
	}
	ActivityNode_c testR1101Inst = ActivityNode_c.getOneA_NOnR1101(this, false);

	if ( testR1101Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1101 ";	
	}
	ActivityInActivity_c testR1109Inst = ActivityInActivity_c.getOneA_AIAOnR1109(this, false);

	if ( testR1109Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1109 ";	
	}
	ActivityInActivity_c testR1110Inst = ActivityInActivity_c.getOneA_AIAOnR1110(this, false);

	if ( testR1110Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "1110 ";
	}
	ActivityEdge_c testR1102Inst = ActivityEdge_c.getOneA_EOnR1102(this, false);

	if ( testR1102Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1102 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Activity", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("dom_id")){
         return true;
      }
      if(attributeName.equals("ss_id")){
         return true;
      }
      if(attributeName.equals("sys_id")){
         return true;
      }
      if(attributeName.equals("package_id")){
         return true;
      }
      if(attributeName.equals("component_package_id")){
         return true;
      }
      if(attributeName.equals("parent_package_id")){
         return true;
      }
      if(attributeName.equals("component_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getPackage_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getPackage_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDom_idLongBased()
  {
    if ( Domain != null )
    {
      return Domain.getDom_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDom_id()
  {
    if ( Domain != null )
    {
      return Domain.getDom_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDom_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dom_id) )
      return m_dom_id;
    else
      return getDom_id();
  }
  
  public void setDom_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dom_id)){
	        return;
	    }
	}else if(m_dom_id != null){
	    if(m_dom_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dom_id", m_dom_id, newValue,true); 
   m_dom_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSs_idLongBased()
  {
    if ( Subsystem != null )
    {
      return Subsystem.getSs_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSs_id()
  {
    if ( Subsystem != null )
    {
      return Subsystem.getSs_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSs_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_ss_id) )
      return m_ss_id;
    else
      return getSs_id();
  }
  
  public void setSs_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_ss_id)){
	        return;
	    }
	}else if(m_ss_id != null){
	    if(m_ss_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Ss_id", m_ss_id, newValue,true); 
   m_ss_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSys_idLongBased()
  {
    if ( SystemModel != null )
    {
      return SystemModel.getSys_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSys_id()
  {
    if ( SystemModel != null )
    {
      return SystemModel.getSys_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSys_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sys_id) )
      return m_sys_id;
    else
      return getSys_id();
  }
  
  public void setSys_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_sys_id)){
	        return;
	    }
	}else if(m_sys_id != null){
	    if(m_sys_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Sys_id", m_sys_id, newValue,true); 
   m_sys_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPackage_idLongBased()
  {
    if ( IsSupertypeSpecificationPackage != null )
    {
      return IsSupertypeSpecificationPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPackage_id()
  {
    if ( IsSupertypeSpecificationPackage != null )
    {
      return IsSupertypeSpecificationPackage.getPackage_id();
    }
    return m_package_id ; // Supertype existence is optional, just return the local cached referential value
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypeSpecificationPackage != null );
 
 }                  

  public java.util.UUID getPackage_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_package_id) )
      return m_package_id;
    else
      return getPackage_id();
  }
  
  public void setPackage_id(java.util.UUID newValue)
  {
   m_package_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getComponent_package_idLongBased()
  {
    if ( ComponentPackage != null )
    {
      return ComponentPackage.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_package_id()
  {
    if ( ComponentPackage != null )
    {
      return ComponentPackage.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_package_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_package_id) )
      return m_component_package_id;
    else
      return getComponent_package_id();
  }
  
  public void setComponent_package_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_package_id)){
	        return;
	    }
	}else if(m_component_package_id != null){
	    if(m_component_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_package_id", m_component_package_id, newValue,true); 
   m_component_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getParent_package_idLongBased()
  {
    if ( ActivityInActivity != null )
    {
      return ActivityInActivity.getPackage_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getParent_package_id()
  {
    if ( ActivityInActivity != null )
    {
      return ActivityInActivity.getPackage_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getParent_package_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_parent_package_id) )
      return m_parent_package_id;
    else
      return getParent_package_id();
  }
  
  public void setParent_package_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_parent_package_id)){
	        return;
	    }
	}else if(m_parent_package_id != null){
	    if(m_parent_package_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Parent_package_id", m_parent_package_id, newValue,true); 
   m_parent_package_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getComponent_idLongBased()
  {
    if ( Component != null )
    {
      return Component.getIdLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getComponent_id()
  {
    if ( Component != null )
    {
      return Component.getId();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getComponent_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_component_id) )
      return m_component_id;
    else
      return getComponent_id();
  }
  
  public void setComponent_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_component_id)){
	        return;
	    }
	}else if(m_component_id != null){
	    if(m_component_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Component_id", m_component_id, newValue,true); 
   m_component_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Activity", //$NON-NLS-1$
	  " Operation entered: Activity::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Activity_c [] objs = Activity_c.ActivityInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Activity", //$NON-NLS-1$
	  " Operation entered: Activity::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Activity_c_test58632_c implements ClassQueryInterface_c
    {
	  Activity_c_test58632_c( java.util.UUID            p58633 ) {
	  m_p58633 = p58633;
	  }
	  private java.util.UUID             m_p58633; 
	  public boolean evaluate (Object candidate)
	  {
	      Activity_c selected = (Activity_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p58633));
	      return retval;
	  }
    }

    Activity_c [] objs58631 = 
    Activity_c.ActivityInstances(modelRoot, new Activity_c_test58632_c(getPackage_id())) ;

    if ( (  (objs58631.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs58631.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58631.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs58631.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58631.length )  + " Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58631.length )  + " Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Activity is a referring class in association: rel.Numb = 1100
          // The participating class is: Domain
    class Domain_c_test58637_c implements ClassQueryInterface_c
    {
	  Domain_c_test58637_c( java.util.UUID            p58638 ) {
	  m_p58638 = p58638;
	  }
	  private java.util.UUID             m_p58638; 
	  public boolean evaluate (Object candidate)
	  {
	      Domain_c selected = (Domain_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDom_id().equals(m_p58638));
	      return retval;
	  }
    }

    Domain_c [] objs58636 = 
    Domain_c.DomainInstances(modelRoot, new Domain_c_test58637_c(getDom_id())) ;

    if ( (  (objs58636.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Association: 1100: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58636.length )  + " Dom_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Association: 1100: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58636.length )  + " Dom_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Activity is a referring class in association: rel.Numb = 1108
          // The participating class is: Subsystem
    class Subsystem_c_test58640_c implements ClassQueryInterface_c
    {
	  Subsystem_c_test58640_c( java.util.UUID            p58641 ) {
	  m_p58641 = p58641;
	  }
	  private java.util.UUID             m_p58641; 
	  public boolean evaluate (Object candidate)
	  {
	      Subsystem_c selected = (Subsystem_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSs_id().equals(m_p58641));
	      return retval;
	  }
    }

    Subsystem_c [] objs58639 = 
    Subsystem_c.SubsystemInstances(modelRoot, new Subsystem_c_test58640_c(getSs_id())) ;

    if ( (  (objs58639.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Association: 1108: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58639.length )  + " SS_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Association: 1108: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58639.length )  + " SS_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Activity is a referring class in association: rel.Numb = 1113
          // The participating class is: System Model
    class SystemModel_c_test58643_c implements ClassQueryInterface_c
    {
	  SystemModel_c_test58643_c( java.util.UUID            p58644 ) {
	  m_p58644 = p58644;
	  }
	  private java.util.UUID             m_p58644; 
	  public boolean evaluate (Object candidate)
	  {
	      SystemModel_c selected = (SystemModel_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSys_id().equals(m_p58644));
	      return retval;
	  }
    }

    SystemModel_c [] objs58642 = 
    SystemModel_c.SystemModelInstances(Ooaofooa.getDefaultInstance(), new SystemModel_c_test58643_c(getSys_id())) ;

    if ( (  (objs58642.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Association: 1113: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58642.length )  + " Sys_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Association: 1113: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58642.length )  + " Sys_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Activity is a subtype in association: rel.Numb = 1402
          // The supertype class is: Specification Package
    class SpecificationPackage_c_test58646_c implements ClassQueryInterface_c
    {
	  SpecificationPackage_c_test58646_c( java.util.UUID            p58647 ) {
	  m_p58647 = p58647;
	  }
	  private java.util.UUID             m_p58647; 
	  public boolean evaluate (Object candidate)
	  {
	      SpecificationPackage_c selected = (SpecificationPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p58647));
	      return retval;
	  }
    }

    SpecificationPackage_c [] objs58645 = 
    SpecificationPackage_c.SpecificationPackageInstances(modelRoot, new SpecificationPackage_c_test58646_c(getPackage_id())) ;

    if ( (  (objs58645.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Association: 1402: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs58645.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Association: 1402: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58645.length )  , e); 
      }
      retval = false;

    }

          // Activity is a referring class in association: rel.Numb = 1114
          // The participating class is: Component Package
    class ComponentPackage_c_test58649_c implements ClassQueryInterface_c
    {
	  ComponentPackage_c_test58649_c( java.util.UUID            p58650 ) {
	  m_p58650 = p58650;
	  }
	  private java.util.UUID             m_p58650; 
	  public boolean evaluate (Object candidate)
	  {
	      ComponentPackage_c selected = (ComponentPackage_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p58650));
	      return retval;
	  }
    }

    ComponentPackage_c [] objs58648 = 
    ComponentPackage_c.ComponentPackageInstances(modelRoot, new ComponentPackage_c_test58649_c(getComponent_package_id())) ;

    if ( (  (objs58648.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Association: 1114: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58648.length )  + " Component_Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Association: 1114: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58648.length )  + " Component_Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Activity is a referring class in association: rel.Numb = 1110
          // The participating class is: Activity In Activity
    class ActivityInActivity_c_test58652_c implements ClassQueryInterface_c
    {
	  ActivityInActivity_c_test58652_c( java.util.UUID            p58653 ) {
	  m_p58653 = p58653;
	  }
	  private java.util.UUID             m_p58653; 
	  public boolean evaluate (Object candidate)
	  {
	      ActivityInActivity_c selected = (ActivityInActivity_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p58653));
	      return retval;
	  }
    }

    ActivityInActivity_c [] objs58651 = 
    ActivityInActivity_c.ActivityInActivityInstances(modelRoot, new ActivityInActivity_c_test58652_c(getParent_package_id())) ;

    if ( (  (objs58651.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Association: 1110: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58651.length )  + " Parent_Package_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Association: 1110: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58651.length )  + " Parent_Package_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Activity is a referring class in association: rel.Numb = 1115
          // The participating class is: Component
    class Component_c_test58655_c implements ClassQueryInterface_c
    {
	  Component_c_test58655_c( java.util.UUID            p58656 ) {
	  m_p58656 = p58656;
	  }
	  private java.util.UUID             m_p58656; 
	  public boolean evaluate (Object candidate)
	  {
	      Component_c selected = (Component_c) candidate;
	      boolean retval = false;
	      retval = (selected.getId().equals(m_p58656));
	      return retval;
	  }
    }

    Component_c [] objs58654 = 
    Component_c.ComponentInstances(modelRoot, new Component_c_test58655_c(getComponent_id())) ;

    if ( (  (objs58654.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Association: 1115: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs58654.length )  + " Component_Id: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Association: 1115: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58654.length )  + " Component_Id: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // Activity is a participating class in association: rel.Numb = 1111
             // Object: Activity Partition
          // Activity is a participating class in association: rel.Numb = 1101
             // Object: Activity Node
          // Activity is a participating class in association: rel.Numb = 1109
             // Object: Activity In Activity
    class ActivityInActivity_c_test58658_c implements ClassQueryInterface_c
    {
	  ActivityInActivity_c_test58658_c( java.util.UUID            p58659 ) {
	  m_p58659 = p58659;
	  }
	  private java.util.UUID             m_p58659; 
	  public boolean evaluate (Object candidate)
	  {
	      ActivityInActivity_c selected = (ActivityInActivity_c) candidate;
	      boolean retval = false;
	      retval = (selected.getPackage_id().equals(m_p58659));
	      return retval;
	  }
    }

    ActivityInActivity_c [] objs58657 = 
    ActivityInActivity_c.ActivityInActivityInstances(modelRoot, new ActivityInActivity_c_test58658_c(getPackage_id())) ;

    if ( (  (objs58657.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Activity", //$NON-NLS-1$
           "Consistency: Object: Activity: Association: 1109: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs58657.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Activity: Association: 1109: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs58657.length )  , e); 
      }
      retval = false;

    }

          // Activity is a participating class in association: rel.Numb = 1102
             // Object: Activity Edge
    return retval;
  }


  // declare transform functions
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
setName( Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Activity"			    
,Converttoinstance())) ;



   } // End initialize
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
Domain_c v_dom = Domain_c.getOneS_DOMOnR1100(this);


if ( (  (v_dom != null)) )
{

this.unrelateAcrossR1100From(v_dom);



}

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1113(this);


if ( (  (v_system != null)) )
{

this.unrelateAcrossR1113From(v_system);



}

ComponentPackage_c v_compPackage = ComponentPackage_c.getOneCP_CPOnR1114(this);


if ( (  (v_compPackage != null)) )
{

this.unrelateAcrossR1114From(v_compPackage);



}

Component_c v_comp = Component_c.getOneC_COnR1115(this);


if ( (  (v_comp != null)) )
{

this.unrelateAcrossR1115From(v_comp);



}

Subsystem_c v_ss = Subsystem_c.getOneS_SSOnR1108(this);


if ( (  (v_ss != null)) )
{

this.unrelateAcrossR1108From(v_ss);



}

ActivityNode_c [] v_nodes = ActivityNode_c.getManyA_NsOnR1101(this);


ActivityNode_c  v_node = null;
for ( int i55450 = 0; i55450 < v_nodes.length; i55450++)
{
  v_node = v_nodes[i55450] ;

this.unrelateAcrossR1101From(v_node);


if (v_node != null) {
v_node.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ActivityEdge_c [] v_edges = ActivityEdge_c.getManyA_EsOnR1102(this);


ActivityEdge_c  v_edge = null;
for ( int i55451 = 0; i55451 < v_edges.length; i55451++)
{
  v_edge = v_edges[i55451] ;

this.unrelateAcrossR1102From(v_edge);


if (v_edge != null) {
v_edge.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ActivityPartition_c [] v_partitions = ActivityPartition_c.getManyA_APsOnR1111(this);


ActivityPartition_c  v_partition = null;
for ( int i55452 = 0; i55452 < v_partitions.length; i55452++)
{
  v_partition = v_partitions[i55452] ;

this.unrelateAcrossR1111From(v_partition);


if (v_partition != null) {
v_partition.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ActivityInActivity_c v_aia = ActivityInActivity_c.getOneA_AIAOnR1109(this);


if (   (v_aia != null) )
{

Activity_c [] v_acts = Activity_c.getManyA_AsOnR1110(v_aia);


Activity_c  v_act = null;
for ( int i55453 = 0; i55453 < v_acts.length; i55453++)
{
  v_act = v_acts[i55453] ;

if (v_aia != null) {
v_aia.unrelateAcrossR1110From(v_act);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_act != null) {
v_act.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

this.unrelateAcrossR1109From(v_aia);


if (v_aia != null) {
// get the location of this element in the instance list
// before deleting
if ( v_aia.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_aia));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

v_aia = ActivityInActivity_c.getOneA_AIAOnR1110(this);


if (   (v_aia != null) )
{

if (v_aia != null) {
v_aia.unrelateAcrossR1110From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


Activity_c v_other_child = Activity_c.getOneA_AOnR1110(v_aia);


if ( (  (v_other_child == null)) )
{

Activity_c v_parent = Activity_c.getOneA_AOnR1109(v_aia);


if (v_parent != null) {
v_parent.unrelateAcrossR1109From(v_aia);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_aia != null) {
// get the location of this element in the instance list
// before deleting
if ( v_aia.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_aia));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}


}

SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


if ( (  (v_specPkg != null)) )
{

this.unrelateAcrossR1402From(v_specPkg);


if (v_specPkg != null) {
v_specPkg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getPackage_id();



   } // End get_ooa_id
  public  int  Get_style()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.Folder;



   } // End get_style
  public  int  Get_text_style(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Get_text_style") ; 
               final ModelRoot modelRoot = getModelRoot();
return Style_c.None;



   } // End get_text_style
  public  int          Get_compartments()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Get_compartments") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_compartments
  public  int          Get_entries(final int          p_Comp_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Get_entries") ; 
               final ModelRoot modelRoot = getModelRoot();
return 1;



   } // End get_entries
  public  String       Get_compartment_text(final int  p_At,final int          p_Comp_num,final int          p_Ent_num)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Get_compartment_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


if ( (p_At == Justification_c.Center_in_X) )
{

v_result = "«activity»" ;



}

else if ( (p_At == Justification_c.Center) )
{

v_result = getName() ;



}

return v_result;



   } // End get_compartment_text
  public  boolean      Newforkjoin(final java.util.UUID         p_From,final boolean      p_Fromtypeisimportedclass,final java.util.UUID         p_To,final boolean      p_Totypeisimportedclass)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newforkjoin") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_From.equals(Gd_c.Null_unique_id())) && (p_To.equals(Gd_c.Null_unique_id())) )
{

ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ControlNode_c v_ctl = new ControlNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ctl));


ForkJoinNode_c v_fj = new ForkJoinNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_fj));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_ctl);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ctl != null) {
  v_ctl.relateAcrossR1106To(v_fj);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


return true;



}

return false;



   } // End newForkJoin
  public  void Newinitialnode()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newinitialnode") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ControlNode_c v_ctl = new ControlNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ctl));


InitialNode_c v_ini = new InitialNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ini));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_ctl);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ctl != null) {
  v_ctl.relateAcrossR1106To(v_ini);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End newInitialNode
  public  void Newactivityfinalnode()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newactivityfinalnode") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ControlNode_c v_ctl = new ControlNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ctl));


ActivityFinalNode_c v_af = new ActivityFinalNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_af));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_ctl);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ctl != null) {
  v_ctl.relateAcrossR1106To(v_af);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End newActivityFinalNode
  public  void Newflowfinalnode()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newflowfinalnode") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ControlNode_c v_ctl = new ControlNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ctl));


FlowFinalNode_c v_ff = new FlowFinalNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ff));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_ctl);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ctl != null) {
  v_ctl.relateAcrossR1106To(v_ff);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End newFlowFinalNode
  public  void Newdecisionmergenode()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newdecisionmergenode") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ControlNode_c v_ctl = new ControlNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ctl));


DecisionMergeNode_c v_d = new DecisionMergeNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_d));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_ctl);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ctl != null) {
  v_ctl.relateAcrossR1106To(v_d);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_d != null) {
v_d.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newDecisionMergeNode
  public  boolean      Newactivityedge(final java.util.UUID         p_From,final boolean      p_Fromtypeisimportedclass,final java.util.UUID         p_To,final boolean      p_Totypeisimportedclass)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newactivityedge") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_From.equals(p_To)) )
{

return false;



}

  class ActivityNode_test55998_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ActivityNode_c selected = (ActivityNode_c)candidate;
		return (selected.getId().equals(p_From)) ;
	}
  }
ActivityNode_c v_fromNode = ActivityNode_c.getOneA_NOnR1101(this, new ActivityNode_test55998_c());


  class ActivityNode_test55999_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ActivityNode_c selected = (ActivityNode_c)candidate;
		return (selected.getId().equals(p_To)) ;
	}
  }
ActivityNode_c v_toNode = ActivityNode_c.getOneA_NOnR1101(this, new ActivityNode_test55999_c());


if ( (  (v_fromNode != null) &&   (v_toNode != null)) )
{

if ( (v_fromNode.Outgoingedgeallowed() && v_toNode.Incomingedgeallowed()) )
{

ActivityEdge_c v_edge = new ActivityEdge_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_edge));


if (v_edge != null) {
  v_edge.relateAcrossR1102To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_edge != null) {
  v_edge.relateAcrossR1104To(v_fromNode);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_edge != null) {
  v_edge.relateAcrossR1103To(v_toNode);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


return true;



}


}

return false;



   } // End newActivityEdge
  public  void Newgenericaction()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newgenericaction") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ActionNode_c v_act = new ActionNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_act));


ActivityDiagramAction_c v_ga = new ActivityDiagramAction_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ga));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_act);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_act != null) {
  v_act.relateAcrossR1107To(v_ga);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ga != null) {
v_ga.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newGenericAction
  public  void Newobjectnode()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newobjectnode") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ObjectNode_c v_obj = new ObjectNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_obj));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_obj);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_obj != null) {
v_obj.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newObjectNode
  public  void Newaccepteventaction()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newaccepteventaction") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ActionNode_c v_act = new ActionNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_act));


AcceptEvent_c v_ae = new AcceptEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ae));


AcceptEventAction_c v_aea = new AcceptEventAction_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_aea));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_act);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_act != null) {
  v_act.relateAcrossR1107To(v_ae);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ae != null) {
  v_ae.relateAcrossR1112To(v_aea);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_aea != null) {
v_aea.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newAcceptEventAction
  public  void Newsendsignalaction()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newsendsignalaction") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ActionNode_c v_act = new ActionNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_act));


SendSignal_c v_ss = new SendSignal_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ss));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_act);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_act != null) {
  v_act.relateAcrossR1107To(v_ss);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ss != null) {
v_ss.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newSendSignalAction
  public  void Newaccepttimeeventaction()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newaccepttimeeventaction") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityNode_c v_node = new ActivityNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_node));


ActionNode_c v_act = new ActionNode_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_act));


AcceptEvent_c v_ae = new AcceptEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ae));


AcceptTimeEventAction_c v_ate = new AcceptTimeEventAction_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ate));


if (v_node != null) {
  v_node.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_node != null) {
  v_node.relateAcrossR1105To(v_act);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_act != null) {
  v_act.relateAcrossR1107To(v_ae);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ae != null) {
  v_ae.relateAcrossR1112To(v_ate);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_ate != null) {
v_ate.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newAcceptTimeEventAction
  public  void Newactivity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newactivity") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityInActivity_c v_aia = ActivityInActivity_c.getOneA_AIAOnR1109(this);


if ( (  (v_aia == null)) )
{

v_aia = new ActivityInActivity_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_aia));


  this.relateAcrossR1109To(v_aia);



}

Activity_c v_a = new Activity_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_a));


SpecificationPackage_c v_sp = new SpecificationPackage_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_sp));


if (v_sp != null) {
  v_sp.relateAcrossR1402To(v_a);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_aia != null) {
  v_aia.relateAcrossR1110To(v_a);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_a != null) {
v_a.Initialize() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



   } // End newActivity
  public  boolean      Newactivitypartition(final java.util.UUID         p_From,final boolean      p_Fromtypeisimportedclass,final java.util.UUID         p_To,final boolean      p_Totypeisimportedclass)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Newactivitypartition") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityPartition_c v_ap = new ActivityPartition_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ap));


if (v_ap != null) {
  v_ap.relateAcrossR1111To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


return true;



   } // End newActivityPartition
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  void Associatewithpackage(final java.util.UUID         p_Pkgid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Associatewithpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Package_c v_package = (Package_c) modelRoot.getInstanceList(Package_c.class).getGlobal(null, p_Pkgid);


SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


if (v_specPkg != null) {
  v_specPkg.relateAcrossR1400To(v_package);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithPackage
  public  void Deassociatefromparent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Deassociatefromparent") ; 
               final ModelRoot modelRoot = getModelRoot();
SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1113(this);


if ( (  (v_system != null)) )
{

this.unrelateAcrossR1113From(v_system);



}

Domain_c v_domain = Domain_c.getOneS_DOMOnR1100(this);


if ( (  (v_domain != null)) )
{

this.unrelateAcrossR1100From(v_domain);



}

Subsystem_c v_subsystem = Subsystem_c.getOneS_SSOnR1108(this);


if ( (  (v_subsystem != null)) )
{

this.unrelateAcrossR1108From(v_subsystem);



}

ComponentPackage_c v_cp = ComponentPackage_c.getOneCP_CPOnR1114(this);


if ( (  (v_cp != null)) )
{

this.unrelateAcrossR1114From(v_cp);



}

Component_c v_comp = Component_c.getOneC_COnR1115(this);


if ( (  (v_comp != null)) )
{

this.unrelateAcrossR1115From(v_comp);



}

SpecificationPackage_c v_specPkg = SpecificationPackage_c.getOneEP_SPKGOnR1402(this);


Package_c v_package = Package_c.getOneEP_PKGOnR1400(v_specPkg);


if ( (  (v_package != null)) )
{

if (v_specPkg != null) {
v_specPkg.unrelateAcrossR1400From(v_package);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

ActivityInActivity_c v_aia = ActivityInActivity_c.getOneA_AIAOnR1110(this);


if ( (  (v_aia != null)) )
{

Activity_c v_activity = Activity_c.getOneA_AOnR1109(v_aia);


if (v_aia != null) {
v_aia.unrelateAcrossR1110From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


Activity_c [] v_acts = Activity_c.getManyA_AsOnR1110(v_aia);


if ( (  (v_acts.length == 0)) )
{

if (v_aia != null) {
v_aia.unrelateAcrossR1109From(v_activity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_aia != null) {
// get the location of this element in the instance list
// before deleting
if ( v_aia.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_aia));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}


}


   } // End deassociateFromParent
  public  void Pasteactivity(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteactivity") ; 
               final ModelRoot modelRoot = getModelRoot();
Activity_c v_activity = (Activity_c) modelRoot.getInstanceList(Activity_c.class).getGlobal(null, p_Id);


if ( (  (v_activity != null)) )
{

if (v_activity != null) {
  v_activity.setName( Ooaofooa.Getuniqueinitialnameinparent(modelRoot			    
,v_activity.Converttoinstance()			    
,v_activity.getName()			    
,Converttoinstance())) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_activity != null) {
v_activity.Associatewithactivity(			    
getPackage_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End pasteActivity
  public  void Associatewithactivity(final java.util.UUID         p_Actid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Associatewithactivity") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Activity_c v_activity = (Activity_c) modelRoot.getInstanceList(Activity_c.class).getGlobal(null, p_Actid);


ActivityInActivity_c v_aia = ActivityInActivity_c.getOneA_AIAOnR1109(v_activity);


if ( (  (v_aia == null)) )
{

v_aia = new ActivityInActivity_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_aia));


if (v_aia != null) {
  v_aia.relateAcrossR1109To(v_activity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

  this.relateAcrossR1110To(v_aia);



   } // End associateWithActivity
  public  void Associatewithcomponent(final java.util.UUID         p_Compid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Associatewithcomponent") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Component_c v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, p_Compid);


  this.relateAcrossR1115To(v_component);



   } // End associateWithComponent
  public  void Associatewithcomponentpackage(final java.util.UUID         p_Cpid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Associatewithcomponentpackage") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


ComponentPackage_c v_cp = (ComponentPackage_c) modelRoot.getInstanceList(ComponentPackage_c.class).getGlobal(null, p_Cpid);


if (v_cp != null) {
  v_cp.relateAcrossR1114To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithComponentPackage
  public  void Associatewithdomain(final java.util.UUID         p_Domid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Associatewithdomain") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Domain_c v_domain = (Domain_c) modelRoot.getInstanceList(Domain_c.class).getGlobal(null, p_Domid);


if (v_domain != null) {
  v_domain.relateAcrossR1100To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithDomain
  public  void Associatewithsystem(final java.util.UUID         p_Sysid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Associatewithsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


SystemModel_c v_system = (SystemModel_c) Ooaofooa.getDefaultInstance().getInstanceList(SystemModel_c.class).get(p_Sysid);


if (v_system != null) {
  v_system.relateAcrossR1113To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithSystem
  public  void Associatewithsubsystem(final java.util.UUID         p_Ssid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Associatewithsubsystem") ; 
               final ModelRoot modelRoot = getModelRoot();
Deassociatefromparent() ;


Subsystem_c v_ss = (Subsystem_c) modelRoot.getInstanceList(Subsystem_c.class).getGlobal(null, p_Ssid);


if (v_ss != null) {
  v_ss.relateAcrossR1108To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



   } // End associateWithSubsystem
  public  int          Getactivitycount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getactivitycount") ; 
               final ModelRoot modelRoot = getModelRoot();
Activity_c [] v_activities = Activity_c.getManyA_AsOnR1110(ActivityInActivity_c.getManyA_AIAsOnR1109(this));


return   (v_activities.length);



   } // End getActivityCount
  public  java.util.UUID         Getactivityid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getactivityid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


Activity_c [] v_activities = Activity_c.getManyA_AsOnR1110(ActivityInActivity_c.getManyA_AIAsOnR1109(this));


int          v_count = -1 ;


Activity_c  v_activity = null;
for ( int i55454 = 0; i55454 < v_activities.length; i55454++)
{
  v_activity = v_activities[i55454] ;

if ( (  (v_activity != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_activity.Get_ooa_id();



}


}

return v_id;



   } // End getActivityId
  public  int          Getactioncount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getactioncount") ; 
               final ModelRoot modelRoot = getModelRoot();
ActionNode_c [] v_actions = ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this));


return   (v_actions.length);



   } // End getActionCount
  public  java.util.UUID         Getactionid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getactionid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ActionNode_c [] v_actions = ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this));


int          v_count = -1 ;


ActionNode_c  v_action = null;
for ( int i55455 = 0; i55455 < v_actions.length; i55455++)
{
  v_action = v_actions[i55455] ;

if ( (  (v_action != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_action.getId();



}


}

return v_id;



   } // End getActionId
  public  int          Getobjectnodecount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getobjectnodecount") ; 
               final ModelRoot modelRoot = getModelRoot();
ObjectNode_c [] v_objectNodes = ObjectNode_c.getManyA_OBJsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this));


return   (v_objectNodes.length);



   } // End getObjectNodeCount
  public  java.util.UUID         Getobjectnodeid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getobjectnodeid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


ObjectNode_c [] v_objectNodes = ObjectNode_c.getManyA_OBJsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this));


int          v_count = -1 ;


ObjectNode_c  v_objectNode = null;
for ( int i55456 = 0; i55456 < v_objectNodes.length; i55456++)
{
  v_objectNode = v_objectNodes[i55456] ;

if ( (  (v_objectNode != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_objectNode.getId();



}


}

return v_id;



   } // End getObjectNodeId
  public  int          Getaccepteventactioncount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getaccepteventactioncount") ; 
               final ModelRoot modelRoot = getModelRoot();
AcceptEventAction_c [] v_acceptEventActions = AcceptEventAction_c.getManyA_AEAsOnR1112(AcceptEvent_c.getManyA_AEsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this))));


return   (v_acceptEventActions.length);



   } // End getAcceptEventActionCount
  public  java.util.UUID         Getaccepteventactionid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getaccepteventactionid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


AcceptEventAction_c [] v_acceptEventActions = AcceptEventAction_c.getManyA_AEAsOnR1112(AcceptEvent_c.getManyA_AEsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this))));


int          v_count = -1 ;


AcceptEventAction_c  v_acceptEventAction = null;
for ( int i55457 = 0; i55457 < v_acceptEventActions.length; i55457++)
{
  v_acceptEventAction = v_acceptEventActions[i55457] ;

if ( (  (v_acceptEventAction != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_acceptEventAction.Get_ooa_id();



}


}

return v_id;



   } // End getAcceptEventActionId
  public  int          Getsendsignalactioncount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getsendsignalactioncount") ; 
               final ModelRoot modelRoot = getModelRoot();
SendSignal_c [] v_sendSignalActions = SendSignal_c.getManyA_SSsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this)));


return   (v_sendSignalActions.length);



   } // End getSendSignalActionCount
  public  java.util.UUID         Getsendsignalactionid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getsendsignalactionid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


SendSignal_c [] v_sendSignalActions = SendSignal_c.getManyA_SSsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this)));


int          v_count = -1 ;


SendSignal_c  v_sendSignalAction = null;
for ( int i55458 = 0; i55458 < v_sendSignalActions.length; i55458++)
{
  v_sendSignalAction = v_sendSignalActions[i55458] ;

if ( (  (v_sendSignalAction != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_sendSignalAction.Get_ooa_id();



}


}

return v_id;



   } // End getSendSignalActionId
  public  int          Getaccepttimeeventcount()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getaccepttimeeventcount") ; 
               final ModelRoot modelRoot = getModelRoot();
AcceptTimeEventAction_c [] v_acceptTimeEventActions = AcceptTimeEventAction_c.getManyA_ATEsOnR1112(AcceptEvent_c.getManyA_AEsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this))));


return   (v_acceptTimeEventActions.length);



   } // End getAcceptTimeEventCount
  public  java.util.UUID         Getaccepttimeeventid(final int          p_Index)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Getaccepttimeeventid") ; 
               final ModelRoot modelRoot = getModelRoot();
java.util.UUID         v_id = Gd_c.Null_unique_id() ;


AcceptTimeEventAction_c [] v_acceptTimeEventActions = AcceptTimeEventAction_c.getManyA_ATEsOnR1112(AcceptEvent_c.getManyA_AEsOnR1107(ActionNode_c.getManyA_ACTsOnR1105(ActivityNode_c.getManyA_NsOnR1101(this))));


int          v_count = -1 ;


AcceptTimeEventAction_c  v_acceptTimeEventAction = null;
for ( int i55459 = 0; i55459 < v_acceptTimeEventActions.length; i55459++)
{
  v_acceptTimeEventAction = v_acceptTimeEventActions[i55459] ;

if ( (  (v_acceptTimeEventAction != null)) )
{

v_count = v_count + 1 ;



}

if ( (v_count == p_Index) )
{

return v_acceptTimeEventAction.Get_ooa_id();



}


}

return v_id;



   } // End getAcceptTimeEventId
  public  void Pasteinitialnode(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteinitialnode") ; 
               final ModelRoot modelRoot = getModelRoot();
InitialNode_c v_initNode = (InitialNode_c) modelRoot.getInstanceList(InitialNode_c.class).getGlobal(null, p_Id);


if ( (  (v_initNode != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(ControlNode_c.getOneA_CTLOnR1106(v_initNode));


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteInitialNode
  public  void Pasteflowfinalnode(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteflowfinalnode") ; 
               final ModelRoot modelRoot = getModelRoot();
FlowFinalNode_c v_ff = (FlowFinalNode_c) modelRoot.getInstanceList(FlowFinalNode_c.class).getGlobal(null, p_Id);


if ( (  (v_ff != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(ControlNode_c.getOneA_CTLOnR1106(v_ff));


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteFlowFinalNode
  public  void Pastedecisionmergenode(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pastedecisionmergenode") ; 
               final ModelRoot modelRoot = getModelRoot();
DecisionMergeNode_c v_dmNode = (DecisionMergeNode_c) modelRoot.getInstanceList(DecisionMergeNode_c.class).getGlobal(null, p_Id);


if ( (  (v_dmNode != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(ControlNode_c.getOneA_CTLOnR1106(v_dmNode));


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteDecisionMergeNode
  public  void Pasteactivityfinalnode(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteactivityfinalnode") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityFinalNode_c v_fNode = (ActivityFinalNode_c) modelRoot.getInstanceList(ActivityFinalNode_c.class).getGlobal(null, p_Id);


if ( (  (v_fNode != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(ControlNode_c.getOneA_CTLOnR1106(v_fNode));


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteActivityFinalNode
  public  void Pasteobjectnode(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteobjectnode") ; 
               final ModelRoot modelRoot = getModelRoot();
ObjectNode_c v_objNode = (ObjectNode_c) modelRoot.getInstanceList(ObjectNode_c.class).getGlobal(null, p_Id);


if ( (  (v_objNode != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(v_objNode);


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteObjectNode
  public  void Pasteactivitydiagramaction(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteactivitydiagramaction") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityDiagramAction_c v_da = (ActivityDiagramAction_c) modelRoot.getInstanceList(ActivityDiagramAction_c.class).getGlobal(null, p_Id);


if ( (  (v_da != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(ActionNode_c.getOneA_ACTOnR1107(v_da));


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteActivityDiagramAction
  public  void Pasteaccepttimeeventaction(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteaccepttimeeventaction") ; 
               final ModelRoot modelRoot = getModelRoot();
AcceptTimeEventAction_c v_ate = (AcceptTimeEventAction_c) modelRoot.getInstanceList(AcceptTimeEventAction_c.class).getGlobal(null, p_Id);


if ( (  (v_ate != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(ActionNode_c.getOneA_ACTOnR1107(AcceptEvent_c.getOneA_AEOnR1112(v_ate)));


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteAcceptTimeEventAction
  public  void Pasteaccepteventaction(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteaccepteventaction") ; 
               final ModelRoot modelRoot = getModelRoot();
AcceptEventAction_c v_aea = (AcceptEventAction_c) modelRoot.getInstanceList(AcceptEventAction_c.class).getGlobal(null, p_Id);


if ( (  (v_aea != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(ActionNode_c.getOneA_ACTOnR1107(AcceptEvent_c.getOneA_AEOnR1112(v_aea)));


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteAcceptEventAction
  public  void Pastesendsignal(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pastesendsignal") ; 
               final ModelRoot modelRoot = getModelRoot();
SendSignal_c v_ss = (SendSignal_c) modelRoot.getInstanceList(SendSignal_c.class).getGlobal(null, p_Id);


if ( (  (v_ss != null)) )
{

ActivityNode_c v_actNode = ActivityNode_c.getOneA_NOnR1105(ActionNode_c.getOneA_ACTOnR1107(v_ss));


Activity_c v_existingActivity = Activity_c.getOneA_AOnR1101(v_actNode);


if ( (  (v_existingActivity != null)) )
{

if (v_actNode != null) {
v_actNode.unrelateAcrossR1101From(v_existingActivity);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_actNode != null) {
  v_actNode.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteSendSignal
  public  void Pasteactivitypartition(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteactivitypartition") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityPartition_c v_partition = (ActivityPartition_c) modelRoot.getInstanceList(ActivityPartition_c.class).getGlobal(null, p_Id);


if ( (  (v_partition != null)) )
{

if (v_partition != null) {
  v_partition.relateAcrossR1111To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteActivityPartition
  public  void Pasteactivityedge(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteactivityedge") ; 
               final ModelRoot modelRoot = getModelRoot();
ActivityEdge_c v_edge = (ActivityEdge_c) modelRoot.getInstanceList(ActivityEdge_c.class).getGlobal(null, p_Id);


if ( (  (v_edge != null)) )
{

if (v_edge != null) {
  v_edge.relateAcrossR1102To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteActivityEdge
  public  void Pasteforkjoinnode(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Activity", " Operation entered: Activity::Pasteforkjoinnode") ; 
               final ModelRoot modelRoot = getModelRoot();
ForkJoinNode_c v_fj = (ForkJoinNode_c) modelRoot.getInstanceList(ForkJoinNode_c.class).getGlobal(null, p_Id);


if ( (  (v_fj != null)) )
{

ActivityNode_c v_an = ActivityNode_c.getOneA_NOnR1105(ControlNode_c.getOneA_CTLOnR1106(v_fj));


if (v_an != null) {
  v_an.relateAcrossR1101To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End pasteForkJoinNode

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	if (adapter == org.eclipse.core.resources.IResource.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
        	return comp.getFile().getParent();
        }
	}else if(adapter == org.eclipse.core.resources.IFile.class) {
        PersistableModelComponent comp = getPersistableComponent(false);
        if ( comp != null )
        {
            return comp.getFile();
        }
	}
	  return null;
  }
} // end Activity
