      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.EventSpecificationStatement_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_EVENT_SPECIFICATION_STATEMENT extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class EventSpecificationStatement_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public EventSpecificationStatement_c(ModelRoot modelRoot,
       java.util.UUID         p_m_statement_id,
       boolean      p_m_parmlistok,
       boolean      p_m_peindicated,
       int          p_m_eventderivedlabellinenumber,
       int          p_m_eventderivedlabelcolumn,
       int          p_m_eventmeaninglinenumber,
       int          p_m_eventmeaningcolumn,
       int          p_m_eventtargetkeyletterslinenumber,
       int          p_m_eventtargetkeyletterscolumn,
       int          p_m_firsteventdataitemnamelinenumber,
       int          p_m_firsteventdataitemnamecolumn,
       int          p_m_currentlatereventdataitemnamelinenumber,
       int          p_m_currentlatereventdataitemnamecolumn)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_statement_id = IdAssigner.preprocessUUID(p_m_statement_id);
       m_parmlistok = p_m_parmlistok;
       m_peindicated = p_m_peindicated;
       m_eventderivedlabellinenumber = p_m_eventderivedlabellinenumber;
       m_eventderivedlabelcolumn = p_m_eventderivedlabelcolumn;
       m_eventmeaninglinenumber = p_m_eventmeaninglinenumber;
       m_eventmeaningcolumn = p_m_eventmeaningcolumn;
       m_eventtargetkeyletterslinenumber = p_m_eventtargetkeyletterslinenumber;
       m_eventtargetkeyletterscolumn = p_m_eventtargetkeyletterscolumn;
       m_firsteventdataitemnamelinenumber = p_m_firsteventdataitemnamelinenumber;
       m_firsteventdataitemnamecolumn = p_m_firsteventdataitemnamecolumn;
       m_currentlatereventdataitemnamelinenumber = p_m_currentlatereventdataitemnamelinenumber;
       m_currentlatereventdataitemnamecolumn = p_m_currentlatereventdataitemnamecolumn;
        
    Object [] key = {m_statement_id};
    addInstanceToMap(key);
  }
  static public EventSpecificationStatement_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_statement_id,
       boolean      p_m_parmlistok,
       boolean      p_m_peindicated,
       int          p_m_eventderivedlabellinenumber,
       int          p_m_eventderivedlabelcolumn,
       int          p_m_eventmeaninglinenumber,
       int          p_m_eventmeaningcolumn,
       int          p_m_eventtargetkeyletterslinenumber,
       int          p_m_eventtargetkeyletterscolumn,
       int          p_m_firsteventdataitemnamelinenumber,
       int          p_m_firsteventdataitemnamecolumn,
       int          p_m_currentlatereventdataitemnamelinenumber,
       int          p_m_currentlatereventdataitemnamecolumn, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(EventSpecificationStatement_c.class);
      EventSpecificationStatement_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_statement_id};
          new_inst = (EventSpecificationStatement_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_statement_id = IdAssigner.preprocessUUID(p_m_statement_id);
       new_inst.m_parmlistok = p_m_parmlistok;
       new_inst.m_peindicated = p_m_peindicated;
       new_inst.m_eventderivedlabellinenumber = p_m_eventderivedlabellinenumber;
       new_inst.m_eventderivedlabelcolumn = p_m_eventderivedlabelcolumn;
       new_inst.m_eventmeaninglinenumber = p_m_eventmeaninglinenumber;
       new_inst.m_eventmeaningcolumn = p_m_eventmeaningcolumn;
       new_inst.m_eventtargetkeyletterslinenumber = p_m_eventtargetkeyletterslinenumber;
       new_inst.m_eventtargetkeyletterscolumn = p_m_eventtargetkeyletterscolumn;
       new_inst.m_firsteventdataitemnamelinenumber = p_m_firsteventdataitemnamelinenumber;
       new_inst.m_firsteventdataitemnamecolumn = p_m_firsteventdataitemnamecolumn;
       new_inst.m_currentlatereventdataitemnamelinenumber = p_m_currentlatereventdataitemnamelinenumber;
       new_inst.m_currentlatereventdataitemnamecolumn = p_m_currentlatereventdataitemnamecolumn;
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new EventSpecificationStatement_c(modelRoot,
p_m_statement_id,
p_m_parmlistok,
p_m_peindicated,
p_m_eventderivedlabellinenumber,
p_m_eventderivedlabelcolumn,
p_m_eventmeaninglinenumber,
p_m_eventmeaningcolumn,
p_m_eventtargetkeyletterslinenumber,
p_m_eventtargetkeyletterscolumn,
p_m_firsteventdataitemnamelinenumber,
p_m_firsteventdataitemnamecolumn,
p_m_currentlatereventdataitemnamelinenumber,
p_m_currentlatereventdataitemnamecolumn
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public EventSpecificationStatement_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_statement_id,
       boolean      p_m_parmlistok,
       boolean      p_m_peindicated,
       int          p_m_eventderivedlabellinenumber,
       int          p_m_eventderivedlabelcolumn,
       int          p_m_eventmeaninglinenumber,
       int          p_m_eventmeaningcolumn,
       int          p_m_eventtargetkeyletterslinenumber,
       int          p_m_eventtargetkeyletterscolumn,
       int          p_m_firsteventdataitemnamelinenumber,
       int          p_m_firsteventdataitemnamecolumn,
       int          p_m_currentlatereventdataitemnamelinenumber,
       int          p_m_currentlatereventdataitemnamecolumn){
    InstanceList instances = modelRoot.getInstanceList(EventSpecificationStatement_c.class);
    EventSpecificationStatement_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_statement_id
            };
        source = (EventSpecificationStatement_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_statement_id = IdAssigner.preprocessUUID(p_m_statement_id);
       source.m_parmlistok = p_m_parmlistok;
       source.m_peindicated = p_m_peindicated;
       source.m_eventderivedlabellinenumber = p_m_eventderivedlabellinenumber;
       source.m_eventderivedlabelcolumn = p_m_eventderivedlabelcolumn;
       source.m_eventmeaninglinenumber = p_m_eventmeaninglinenumber;
       source.m_eventmeaningcolumn = p_m_eventmeaningcolumn;
       source.m_eventtargetkeyletterslinenumber = p_m_eventtargetkeyletterslinenumber;
       source.m_eventtargetkeyletterscolumn = p_m_eventtargetkeyletterscolumn;
       source.m_firsteventdataitemnamelinenumber = p_m_firsteventdataitemnamelinenumber;
       source.m_firsteventdataitemnamecolumn = p_m_firsteventdataitemnamecolumn;
       source.m_currentlatereventdataitemnamelinenumber = p_m_currentlatereventdataitemnamelinenumber;
       source.m_currentlatereventdataitemnamecolumn = p_m_currentlatereventdataitemnamecolumn;
        
           return source ;
        }
      }
      // there is no instance matching the id
    EventSpecificationStatement_c new_inst = new EventSpecificationStatement_c(modelRoot,
p_m_statement_id,
p_m_parmlistok,
p_m_peindicated,
p_m_eventderivedlabellinenumber,
p_m_eventderivedlabelcolumn,
p_m_eventmeaninglinenumber,
p_m_eventmeaningcolumn,
p_m_eventtargetkeyletterslinenumber,
p_m_eventtargetkeyletterscolumn,
p_m_firsteventdataitemnamelinenumber,
p_m_firsteventdataitemnamecolumn,
p_m_currentlatereventdataitemnamelinenumber,
p_m_currentlatereventdataitemnamecolumn
);
    return new_inst;
  }
  public EventSpecificationStatement_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_statement_id = IdAssigner.NULL_UUID;   
    Object [] key = {m_statement_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_statement_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_statement_id !=  p_newKey ){
	
		m_statement_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof EventSpecificationStatement_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot() && !getModelRoot().isCompareRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof EventSpecificationStatement_c)) {
           return false;
       }
       
       EventSpecificationStatement_c me = (EventSpecificationStatement_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if (!getModelRoot().isCompareRoot() && ((IdAssigner.NULL_UUID.equals(getStatement_id()) || IdAssigner.NULL_UUID.equals(((EventSpecificationStatement_c)elem).getStatement_id())) && this != elem)) {
      	return false;
      }
      if (!getStatement_id().equals(((EventSpecificationStatement_c)elem).getStatement_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof EventSpecificationStatement_c)) {
           return false;
       }
       
       EventSpecificationStatement_c me = (EventSpecificationStatement_c)elem;
      if (!getStatement_idCachedValue().equals(((EventSpecificationStatement_c)elem).getStatement_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_statement_id ;
  private boolean      m_parmlistok ;
  private boolean      m_peindicated ;
  private int          m_eventderivedlabellinenumber ;
  private int          m_eventderivedlabelcolumn ;
  private int          m_eventmeaninglinenumber ;
  private int          m_eventmeaningcolumn ;
  private int          m_eventtargetkeyletterslinenumber ;
  private int          m_eventtargetkeyletterscolumn ;
  private int          m_firsteventdataitemnamelinenumber ;
  private int          m_firsteventdataitemnamecolumn ;
  private int          m_currentlatereventdataitemnamelinenumber ;
  private int          m_currentlatereventdataitemnamecolumn ;
      
// declare association references from this class
  
  
    
// referring navigation

Statement_c IsSupertypeStatement ;
public void relateAcrossR603To(Statement_c target)
{
	relateAcrossR603To(target, true);
}
public void relateAcrossR603To(Statement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsSupertypeStatement) return;  // already related

    if ( IsSupertypeStatement != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsSupertypeStatement != null) {
    
        IsSupertypeStatement.clearBackPointerR603To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"EventSpecificationStatement_c.relateAcrossR603To(Statement_c target)", 
			"Relate performed across R603 from Event Specification Statement to Statement without unrelate of prior instance.");  
		}
    }
                
    	IsSupertypeStatement = target ;
        m_statement_id = target.getStatement_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR603To(this);
        target.addRef();
    }
}
public void unrelateAcrossR603From(Statement_c target)
{
	unrelateAcrossR603From(target, true);
}
public void unrelateAcrossR603From(Statement_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsSupertypeStatement == null) return;  // already unrelated
	
	if (target != IsSupertypeStatement) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R603", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR603To(this);
    }
    

      if(IsSupertypeStatement != null) {
      
        m_statement_id = IsSupertypeStatement.getStatement_id();
        IsSupertypeStatement = null ;
        target.removeRef();
    }
}

  
    
      
public static EventSpecificationStatement_c getOneE_ESSOnR603(Statement_c [] targets)
{
    return getOneE_ESSOnR603(targets, null);
}

public static EventSpecificationStatement_c getOneE_ESSOnR603(Statement_c [] targets, ClassQueryInterface_c test)
{
    EventSpecificationStatement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneE_ESSOnR603(targets[i], test);
        }
    }

    return ret_val;
}

public static EventSpecificationStatement_c getOneE_ESSOnR603(Statement_c target)
{
  return getOneE_ESSOnR603(target, null);
}

public static EventSpecificationStatement_c getOneE_ESSOnR603(Statement_c target, boolean loadComponent)
{
    return getOneE_ESSOnR603(target.getModelRoot(), target, null, loadComponent);
}

public static EventSpecificationStatement_c getOneE_ESSOnR603(Statement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneE_ESSOnR603(target.getModelRoot(), target, test);
  }
  return null;
}

public static EventSpecificationStatement_c getOneE_ESSOnR603(ModelRoot modelRoot, Statement_c target, ClassQueryInterface_c test)
{
	return getOneE_ESSOnR603(modelRoot, target, test, true);
}

public static EventSpecificationStatement_c getOneE_ESSOnR603(ModelRoot modelRoot, Statement_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneE_ESSOnR603(modelRoot,target,test);
}
private static EventSpecificationStatement_c find_getOneE_ESSOnR603(ModelRoot modelRoot, Statement_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    EventSpecificationStatement_c source = (EventSpecificationStatement_c)target.backPointer_IsSubtypeEventSpecificationStatementIsSubtype_R603;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR603(Statement_c [] targets)
{
  return getManyE_ESSsOnR603(targets, null);
}
public static EventSpecificationStatement_c [] getManyE_ESSsOnR603(Statement_c [] targets, boolean loadComponent)
{
  return getManyE_ESSsOnR603(targets, null, loadComponent);
}
public static EventSpecificationStatement_c [] getManyE_ESSsOnR603(Statement_c [] targets, ClassQueryInterface_c test)
{
	return getManyE_ESSsOnR603(targets, test, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR603(Statement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new EventSpecificationStatement_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(EventSpecificationStatement_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      EventSpecificationStatement_c source = (EventSpecificationStatement_c)targets[i].backPointer_IsSubtypeEventSpecificationStatementIsSubtype_R603;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	EventSpecificationStatement_c[] ret_set = new EventSpecificationStatement_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new EventSpecificationStatement_c[0];
  }
  }

public static EventSpecificationStatement_c [] getManyE_ESSsOnR603(Statement_c target)
{
  if (target != null) {
    Statement_c [] targetArray = new Statement_c[1];
    targetArray[0] = target;
    return getManyE_ESSsOnR603(targetArray);
  } else {
    EventSpecificationStatement_c [] result = new EventSpecificationStatement_c [0] ;
  return result ;
}
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR603(Statement_c target, boolean loadComponent)
{
  if (target != null) {
    Statement_c [] targetArray = new Statement_c[1];
    targetArray[0] = target;
    return getManyE_ESSsOnR603(targetArray, loadComponent);
  } else {
    EventSpecificationStatement_c [] result = new EventSpecificationStatement_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

GenerateEventStatement_c backPointer_IsSubtypeGenerateEventStatementIsSubtype_R701;

public void setGenerateEventStatementOrderInChildListR701(GenerateEventStatement_c target, int index) {
	unrelateAcrossR701From(target);
	GenerateEventStatement_c[] elements = GenerateEventStatement_c.getManyE_GESsOnR701(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR701From((GenerateEventStatement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR701To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR701To((GenerateEventStatement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR701To(GenerateEventStatement_c target)
{
  if (target != null) {
    target.relateAcrossR701To(this, true) ;
  }
}

public void relateAcrossR701To(GenerateEventStatement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR701To(this, notifyChanges) ;
  }
}

public void setBackPointerR701To(GenerateEventStatement_c target)
{
    backPointer_IsSubtypeGenerateEventStatementIsSubtype_R701 = target;
}

public void unrelateAcrossR701From(GenerateEventStatement_c target)
{
  if (target != null) {
    target.unrelateAcrossR701From(this, true) ;
  }
}

public void unrelateAcrossR701From(GenerateEventStatement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR701From(this, notifyChanges) ;
  }
}

public void clearBackPointerR701To(GenerateEventStatement_c target)
{
	if (target == backPointer_IsSubtypeGenerateEventStatementIsSubtype_R701) {
		backPointer_IsSubtypeGenerateEventStatementIsSubtype_R701 = null;
	}
}

public static EventSpecificationStatement_c getOneE_ESSOnR701(GenerateEventStatement_c [] targets)
{
    return getOneE_ESSOnR701(targets, null);
}

public static EventSpecificationStatement_c getOneE_ESSOnR701(GenerateEventStatement_c [] targets, ClassQueryInterface_c test)
{
    return getOneE_ESSOnR701(targets, test, true);
}

public static EventSpecificationStatement_c getOneE_ESSOnR701(GenerateEventStatement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    EventSpecificationStatement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             EventSpecificationStatement_c candidate_val = getOneE_ESSOnR701(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneE_ESSOnR701(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static EventSpecificationStatement_c getOneE_ESSOnR701(GenerateEventStatement_c target)
{
	return getOneE_ESSOnR701(target, true);
}
public static EventSpecificationStatement_c getOneE_ESSOnR701(GenerateEventStatement_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeEventSpecificationStatement ;
  } else {
    return null;
  }
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(GenerateEventStatement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyE_ESSsOnR701(targets, test, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(GenerateEventStatement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new EventSpecificationStatement_c[0];
  
  
  LinkedHashSet<EventSpecificationStatement_c> elementsSet = new LinkedHashSet<EventSpecificationStatement_c>();
  for (int i = 0; i < targets.length; i++) {
    EventSpecificationStatement_c associate = targets[i].IsSupertypeEventSpecificationStatement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  EventSpecificationStatement_c[] result = new EventSpecificationStatement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(GenerateEventStatement_c [] targets)
{
  return getManyE_ESSsOnR701(targets, null);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(GenerateEventStatement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    GenerateEventStatement_c [] targetArray = new GenerateEventStatement_c[1];
    targetArray[0] = target;
    return getManyE_ESSsOnR701(targetArray, test, loadComponent);
  } else {
    EventSpecificationStatement_c [] result = new EventSpecificationStatement_c [0] ;
    return result ;
  }
  
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(GenerateEventStatement_c target,
    ClassQueryInterface_c test)
{
    return getManyE_ESSsOnR701(target, null, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(GenerateEventStatement_c target)
{
    return getManyE_ESSsOnR701(target, null, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(GenerateEventStatement_c target, boolean loadComponent)
{
    return getManyE_ESSsOnR701(target, null, loadComponent);
}

  
  
  
// referred to navigation

CreateEventStatement_c backPointer_IsSubtypeCreateEventStatementIsSubtype_R701;

public void setCreateEventStatementOrderInChildListR701(CreateEventStatement_c target, int index) {
	unrelateAcrossR701From(target);
	CreateEventStatement_c[] elements = CreateEventStatement_c.getManyE_CESsOnR701(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR701From((CreateEventStatement_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR701To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR701To((CreateEventStatement_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR701To(CreateEventStatement_c target)
{
  if (target != null) {
    target.relateAcrossR701To(this, true) ;
  }
}

public void relateAcrossR701To(CreateEventStatement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR701To(this, notifyChanges) ;
  }
}

public void setBackPointerR701To(CreateEventStatement_c target)
{
    backPointer_IsSubtypeCreateEventStatementIsSubtype_R701 = target;
}

public void unrelateAcrossR701From(CreateEventStatement_c target)
{
  if (target != null) {
    target.unrelateAcrossR701From(this, true) ;
  }
}

public void unrelateAcrossR701From(CreateEventStatement_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR701From(this, notifyChanges) ;
  }
}

public void clearBackPointerR701To(CreateEventStatement_c target)
{
	if (target == backPointer_IsSubtypeCreateEventStatementIsSubtype_R701) {
		backPointer_IsSubtypeCreateEventStatementIsSubtype_R701 = null;
	}
}

public static EventSpecificationStatement_c getOneE_ESSOnR701(CreateEventStatement_c [] targets)
{
    return getOneE_ESSOnR701(targets, null);
}

public static EventSpecificationStatement_c getOneE_ESSOnR701(CreateEventStatement_c [] targets, ClassQueryInterface_c test)
{
    return getOneE_ESSOnR701(targets, test, true);
}

public static EventSpecificationStatement_c getOneE_ESSOnR701(CreateEventStatement_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    EventSpecificationStatement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             EventSpecificationStatement_c candidate_val = getOneE_ESSOnR701(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneE_ESSOnR701(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static EventSpecificationStatement_c getOneE_ESSOnR701(CreateEventStatement_c target)
{
	return getOneE_ESSOnR701(target, true);
}
public static EventSpecificationStatement_c getOneE_ESSOnR701(CreateEventStatement_c target, boolean loadComponent)
{
  if (target != null) {
    return target.IsSupertypeEventSpecificationStatement ;
  } else {
    return null;
  }
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(CreateEventStatement_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyE_ESSsOnR701(targets, test, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(CreateEventStatement_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new EventSpecificationStatement_c[0];
  
  
  LinkedHashSet<EventSpecificationStatement_c> elementsSet = new LinkedHashSet<EventSpecificationStatement_c>();
  for (int i = 0; i < targets.length; i++) {
    EventSpecificationStatement_c associate = targets[i].IsSupertypeEventSpecificationStatement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  EventSpecificationStatement_c[] result = new EventSpecificationStatement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(CreateEventStatement_c [] targets)
{
  return getManyE_ESSsOnR701(targets, null);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(CreateEventStatement_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    CreateEventStatement_c [] targetArray = new CreateEventStatement_c[1];
    targetArray[0] = target;
    return getManyE_ESSsOnR701(targetArray, test, loadComponent);
  } else {
    EventSpecificationStatement_c [] result = new EventSpecificationStatement_c [0] ;
    return result ;
  }
  
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(CreateEventStatement_c target,
    ClassQueryInterface_c test)
{
    return getManyE_ESSsOnR701(target, null, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(CreateEventStatement_c target)
{
    return getManyE_ESSsOnR701(target, null, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR701(CreateEventStatement_c target, boolean loadComponent)
{
    return getManyE_ESSsOnR701(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<ActualParameter_c> backPointer_ActualParameter_R700 = new ArrayList<ActualParameter_c>();

public void setActualParameterOrderInChildListR700(ActualParameter_c target, int index) {
	unrelateAcrossR700From(target);
	ActualParameter_c[] elements = ActualParameter_c.getManyV_PARsOnR700(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR700From((ActualParameter_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR700To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR700To((ActualParameter_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR700To(ActualParameter_c target)
{
  if (target != null) {
    target.relateAcrossR700To(this, true) ;
  }
}

public void relateAcrossR700To(ActualParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR700To(this, notifyChanges) ;
  }
}

public void setBackPointerR700To(ActualParameter_c target)
{
  	synchronized (backPointer_ActualParameter_R700) {
		backPointer_ActualParameter_R700.add(target);
	}
}

public void unrelateAcrossR700From(ActualParameter_c target)
{
  if (target != null) {
    target.unrelateAcrossR700From(this, true) ;
  }
}

public void unrelateAcrossR700From(ActualParameter_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR700From(this, notifyChanges) ;
  }
}

public void clearBackPointerR700To(ActualParameter_c target)
{
  synchronized (backPointer_ActualParameter_R700) {
	    backPointer_ActualParameter_R700.remove(target);
	}
}

public static EventSpecificationStatement_c getOneE_ESSOnR700(ActualParameter_c [] targets)
{
    return getOneE_ESSOnR700(targets, null);
}

public static EventSpecificationStatement_c getOneE_ESSOnR700(ActualParameter_c [] targets, ClassQueryInterface_c test)
{
    return getOneE_ESSOnR700(targets, test, true);
}

public static EventSpecificationStatement_c getOneE_ESSOnR700(ActualParameter_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    EventSpecificationStatement_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             EventSpecificationStatement_c candidate_val = getOneE_ESSOnR700(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneE_ESSOnR700(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static EventSpecificationStatement_c getOneE_ESSOnR700(ActualParameter_c target)
{
	return getOneE_ESSOnR700(target, true);
}
public static EventSpecificationStatement_c getOneE_ESSOnR700(ActualParameter_c target, boolean loadComponent)
{
  if (target != null) {
    return target.EventSpecificationStatement ;
  } else {
    return null;
  }
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR700(ActualParameter_c [] targets,
    ClassQueryInterface_c test)
{
	return getManyE_ESSsOnR700(targets, test, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR700(ActualParameter_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new EventSpecificationStatement_c[0];
  
  
  LinkedHashSet<EventSpecificationStatement_c> elementsSet = new LinkedHashSet<EventSpecificationStatement_c>();
  for (int i = 0; i < targets.length; i++) {
    EventSpecificationStatement_c associate = targets[i].EventSpecificationStatement;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  EventSpecificationStatement_c[] result = new EventSpecificationStatement_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR700(ActualParameter_c [] targets)
{
  return getManyE_ESSsOnR700(targets, null);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR700(ActualParameter_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    ActualParameter_c [] targetArray = new ActualParameter_c[1];
    targetArray[0] = target;
    return getManyE_ESSsOnR700(targetArray, test, loadComponent);
  } else {
    EventSpecificationStatement_c [] result = new EventSpecificationStatement_c [0] ;
    return result ;
  }
  
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR700(ActualParameter_c target,
    ClassQueryInterface_c test)
{
    return getManyE_ESSsOnR700(target, null, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR700(ActualParameter_c target)
{
    return getManyE_ESSsOnR700(target, null, true);
}

public static EventSpecificationStatement_c [] getManyE_ESSsOnR700(ActualParameter_c target, boolean loadComponent)
{
    return getManyE_ESSsOnR700(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

      // R603
      Statement_c relInst56097 = (Statement_c) baseRoot.getInstanceList(Statement_c.class).get(new Object[] {m_statement_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst56097 == null) {
      			relInst56097 = (Statement_c) Ooaofooa.getDefaultInstance().getInstanceList(Statement_c.class).get(new Object[] {m_statement_id});
      		}
			if (relInst56097 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst56097 = (Statement_c) roots[i].getInstanceList(Statement_c.class).get(new Object[] {m_statement_id});
					if (relInst56097 != null)
						break;
				}
			}
			//synchronized
      if ( relInst56097 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst56097) && !isProxy())) {
	      relInst56097.relateAcrossR603To(this, notifyChanges);
	  }
	  }
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R603
      // ACT_SMT
		  inst=IsSupertypeStatement;
			unrelateAcrossR603From(IsSupertypeStatement, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(EventSpecificationStatement_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final EventSpecificationStatement_c inst = (EventSpecificationStatement_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(EventSpecificationStatement_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static EventSpecificationStatement_c EventSpecificationStatementInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		EventSpecificationStatement_c result=findEventSpecificationStatementInstance(modelRoot,test,loadComponent);
	  return result;  
  }
private static EventSpecificationStatement_c findEventSpecificationStatementInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(EventSpecificationStatement_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				EventSpecificationStatement_c x = (EventSpecificationStatement_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					return x;
			}
		}
		}
			return null;
}
  public static EventSpecificationStatement_c EventSpecificationStatementInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return EventSpecificationStatementInstance(modelRoot,test,true);
  }
  
  public static EventSpecificationStatement_c EventSpecificationStatementInstance(ModelRoot modelRoot)
  {
	 return EventSpecificationStatementInstance(modelRoot,null,true);
  }

  public static EventSpecificationStatement_c [] EventSpecificationStatementInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
		    InstanceList instances = modelRoot.getInstanceList(EventSpecificationStatement_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					EventSpecificationStatement_c x = (EventSpecificationStatement_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				EventSpecificationStatement_c[] ret_set = new EventSpecificationStatement_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new EventSpecificationStatement_c[0];
			}		
		} 
  }
  public static EventSpecificationStatement_c [] EventSpecificationStatementInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  EventSpecificationStatementInstances(modelRoot,test,true);
  }
  public static EventSpecificationStatement_c [] EventSpecificationStatementInstances(ModelRoot modelRoot)
  {
	return EventSpecificationStatementInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Event Specification Statement.dispose call: ";
	Statement_c testR603Inst25 = Statement_c.getOneACT_SMTOnR603(this, false);

	if ( testR603Inst25 != null )
	{
	delete_error = true;	        
	errorMsg = errorMsg + "603 ";
	}
	GenerateEventStatement_c testR701Inst1 = GenerateEventStatement_c.getOneE_GESOnR701(this, false);

	if ( testR701Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "701 ";
	}
	CreateEventStatement_c testR701Inst2 = CreateEventStatement_c.getOneE_CESOnR701(this, false);

	if ( testR701Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "701 ";
	}
	ActualParameter_c testR700Inst = ActualParameter_c.getOneV_PAROnR700(this, false);

	if ( testR700Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "700 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Event Specification Statement", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("statement_id")){
         return true;
      }
      return false;      
  }      
  // declare attribute accessors
  public long getStatement_idLongBased()
  {
    if ( IsSupertypeStatement != null )
    {
      return IsSupertypeStatement.getStatement_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getStatement_id()
  {
    if ( IsSupertypeStatement != null )
    {
      return IsSupertypeStatement.getStatement_id();
    }
    return IdAssigner.NULL_UUID;
  }

 public boolean hasSuperType(){
 	return  ( IsSupertypeStatement != null );
 
 }                  

  public java.util.UUID getStatement_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_statement_id) )
      return m_statement_id;
    else
      return getStatement_id();
  }
  
  public void setStatement_id(java.util.UUID newValue)
  {
   m_statement_id = IdAssigner.preprocessUUID(newValue);
  }
  public boolean getParmlistok()
  {
    return m_parmlistok ;
  }


  public void setParmlistok(boolean newValue)
  {
   m_parmlistok = newValue ;
  }
  public boolean getPeindicated()
  {
    return m_peindicated ;
  }


  public void setPeindicated(boolean newValue)
  {
   m_peindicated = newValue ;
  }
  public int getEventderivedlabellinenumber()
  {
    return m_eventderivedlabellinenumber ;
  }


  public void setEventderivedlabellinenumber(int newValue)
  {
   m_eventderivedlabellinenumber = newValue ;
  }
  public int getEventderivedlabelcolumn()
  {
    return m_eventderivedlabelcolumn ;
  }


  public void setEventderivedlabelcolumn(int newValue)
  {
   m_eventderivedlabelcolumn = newValue ;
  }
  public int getEventmeaninglinenumber()
  {
    return m_eventmeaninglinenumber ;
  }


  public void setEventmeaninglinenumber(int newValue)
  {
   m_eventmeaninglinenumber = newValue ;
  }
  public int getEventmeaningcolumn()
  {
    return m_eventmeaningcolumn ;
  }


  public void setEventmeaningcolumn(int newValue)
  {
   m_eventmeaningcolumn = newValue ;
  }
  public int getEventtargetkeyletterslinenumber()
  {
    return m_eventtargetkeyletterslinenumber ;
  }


  public void setEventtargetkeyletterslinenumber(int newValue)
  {
   m_eventtargetkeyletterslinenumber = newValue ;
  }
  public int getEventtargetkeyletterscolumn()
  {
    return m_eventtargetkeyletterscolumn ;
  }


  public void setEventtargetkeyletterscolumn(int newValue)
  {
   m_eventtargetkeyletterscolumn = newValue ;
  }
  public int getFirsteventdataitemnamelinenumber()
  {
    return m_firsteventdataitemnamelinenumber ;
  }


  public void setFirsteventdataitemnamelinenumber(int newValue)
  {
   m_firsteventdataitemnamelinenumber = newValue ;
  }
  public int getFirsteventdataitemnamecolumn()
  {
    return m_firsteventdataitemnamecolumn ;
  }


  public void setFirsteventdataitemnamecolumn(int newValue)
  {
   m_firsteventdataitemnamecolumn = newValue ;
  }
  public int getCurrentlatereventdataitemnamelinenumber()
  {
    return m_currentlatereventdataitemnamelinenumber ;
  }


  public void setCurrentlatereventdataitemnamelinenumber(int newValue)
  {
   m_currentlatereventdataitemnamelinenumber = newValue ;
  }
  public int getCurrentlatereventdataitemnamecolumn()
  {
    return m_currentlatereventdataitemnamecolumn ;
  }


  public void setCurrentlatereventdataitemnamecolumn(int newValue)
  {
   m_currentlatereventdataitemnamecolumn = newValue ;
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Event Specification Statement", //$NON-NLS-1$
	  " Operation entered: Event Specification Statement::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     EventSpecificationStatement_c [] objs = EventSpecificationStatement_c.EventSpecificationStatementInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Event Specification Statement", //$NON-NLS-1$
	  " Operation entered: Event Specification Statement::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class EventSpecificationStatement_c_test56099_c implements ClassQueryInterface_c
    {
	  EventSpecificationStatement_c_test56099_c( java.util.UUID            p56100 ) {
	  m_p56100 = p56100;
	  }
	  private java.util.UUID             m_p56100; 
	  public boolean evaluate (Object candidate)
	  {
	      EventSpecificationStatement_c selected = (EventSpecificationStatement_c) candidate;
	      boolean retval = false;
	      retval = (selected.getStatement_id().equals(m_p56100));
	      return retval;
	  }
    }

    EventSpecificationStatement_c [] objs56098 = 
    EventSpecificationStatement_c.EventSpecificationStatementInstances(modelRoot, new EventSpecificationStatement_c_test56099_c(getStatement_id())) ;

    if ( (  (objs56098.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Event Specification Statement", //$NON-NLS-1$
           "Consistency: Object: Event Specification Statement: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56098.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Event Specification Statement: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56098.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs56098.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Event Specification Statement", //$NON-NLS-1$
           "Consistency: Object: Event Specification Statement: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs56098.length )  + " Statement_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Event Specification Statement: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56098.length )  + " Statement_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Event Specification Statement is a subtype in association: rel.Numb = 603
          // The supertype class is: Statement
    class Statement_c_test56104_c implements ClassQueryInterface_c
    {
	  Statement_c_test56104_c( java.util.UUID            p56105 ) {
	  m_p56105 = p56105;
	  }
	  private java.util.UUID             m_p56105; 
	  public boolean evaluate (Object candidate)
	  {
	      Statement_c selected = (Statement_c) candidate;
	      boolean retval = false;
	      retval = (selected.getStatement_id().equals(m_p56105));
	      return retval;
	  }
    }

    Statement_c [] objs56103 = 
    Statement_c.StatementInstances(modelRoot, new Statement_c_test56104_c(getStatement_id())) ;

    if ( (  (objs56103.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Event Specification Statement", //$NON-NLS-1$
           "Consistency: Object: Event Specification Statement: Association: 603: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56103.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Event Specification Statement: Association: 603: Cardinality of a supertype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56103.length )  , e); 
      }
      retval = false;

    }

          // Supertype: rel.Numb = 701
    int objs56106 = 0;
            // Subtype Object: Generate Event Statement
    class GenerateEventStatement_c_test56107_c implements ClassQueryInterface_c
    {
	  GenerateEventStatement_c_test56107_c( java.util.UUID            p56108 ) {
	  m_p56108 = p56108;
	  }
	  private java.util.UUID             m_p56108; 
	  public boolean evaluate (Object candidate)
	  {
	      GenerateEventStatement_c selected = (GenerateEventStatement_c) candidate;
	      boolean retval = false;
	      retval = (selected.getStatement_id().equals(m_p56108));
	      return retval;
	  }
    }

    GenerateEventStatement_c [] objs56109 = 
    GenerateEventStatement_c.GenerateEventStatementInstances(modelRoot, new GenerateEventStatement_c_test56107_c(getStatement_id())) ;
 
    objs56106 = objs56106 + objs56109.length;
            // Subtype Object: Create Event Statement
    class CreateEventStatement_c_test56110_c implements ClassQueryInterface_c
    {
	  CreateEventStatement_c_test56110_c( java.util.UUID            p56111 ) {
	  m_p56111 = p56111;
	  }
	  private java.util.UUID             m_p56111; 
	  public boolean evaluate (Object candidate)
	  {
	      CreateEventStatement_c selected = (CreateEventStatement_c) candidate;
	      boolean retval = false;
	      retval = (selected.getStatement_id().equals(m_p56111));
	      return retval;
	  }
    }

    CreateEventStatement_c [] objs56112 = 
    CreateEventStatement_c.CreateEventStatementInstances(modelRoot, new CreateEventStatement_c_test56110_c(getStatement_id())) ;
 
    objs56106 = objs56106 + objs56112.length;
    if ( objs56106 != 1 )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Event Specification Statement", //$NON-NLS-1$
           "Consistency: Object: Event Specification Statement: Association: 701: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs56106 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Event Specification Statement: Association: 701: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs56106 )  , e); 
      }
      retval = false;

    }

          // Event Specification Statement is a participating class in association: rel.Numb = 700
             // Object: Actual Parameter
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Event Specification Statement", " Operation entered: EventSpecificationStatement::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
CreateEventStatement_c v_ces = CreateEventStatement_c.getOneE_CESOnR701(this);


if ( (  !  (v_ces == null)) )
{

this.unrelateAcrossR701From(v_ces);


if (v_ces != null) {
v_ces.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

GenerateEventStatement_c v_ges = GenerateEventStatement_c.getOneE_GESOnR701(this);


if ( (  !  (v_ges == null)) )
{

this.unrelateAcrossR701From(v_ges);


if (v_ges != null) {
v_ges.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

ActualParameter_c [] v_parm_set = ActualParameter_c.getManyV_PARsOnR700(this);


ActualParameter_c  v_parm = null;
for ( int i54831 = 0; i54831 < v_parm_set.length; i54831++)
{
  v_parm = v_parm_set[i54831] ;

this.unrelateAcrossR700From(v_parm);


if (v_parm != null) {
v_parm.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

delete() ;



   } // End dispose
  public  void Execute(final java.util.UUID         p_Stack_frame_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Event Specification Statement", " Operation entered: EventSpecificationStatement::Execute") ; 
               final ModelRoot modelRoot = getModelRoot();
GenerateEventStatement_c v_genStmt = GenerateEventStatement_c.getOneE_GESOnR701(this);


CreateEventStatement_c v_createStmt = CreateEventStatement_c.getOneE_CESOnR701(this);


if ( (  (v_genStmt != null)) )
{

if (v_genStmt != null) {
v_genStmt.Execute(			    
p_Stack_frame_id ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else if ( (  (v_createStmt != null)) )
{

if (v_createStmt != null) {
v_createStmt.Execute(			    
p_Stack_frame_id ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


   } // End execute
  public  void Relatetooriginatinginst(final java.util.UUID         p_Evtinst_id,final java.util.UUID         p_Stack_frame_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Event Specification Statement", " Operation entered: EventSpecificationStatement::Relatetooriginatinginst") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End relateToOriginatingInst
  public  boolean      Hookupeventdata(final java.util.UUID         p_Evtinst_id,final java.util.UUID         p_Stack_frame_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Event Specification Statement", " Operation entered: EventSpecificationStatement::Hookupeventdata") ; 
               final ModelRoot modelRoot = getModelRoot();
return false;



   } // End hookUpEventData

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
	  return null;
  }
} // end Event Specification Statement
